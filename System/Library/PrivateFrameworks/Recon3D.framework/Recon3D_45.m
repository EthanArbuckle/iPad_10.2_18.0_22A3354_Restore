void sub_224339698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243396FC(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  double v10;
  int v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  float v17;
  double v18;
  float v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  int v63;
  int v64;
  int v65;
  _DWORD *v66;
  _WORD *v67;
  int v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  float v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    v12 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v12 = *(double *)(a2 + 8);
    v13 = v11 | ((int)v12 << 16);
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v19 = 1.0;
    v17 = 0.0;
    goto LABEL_14;
  }
  v13 = -65536;
  v15 = *v9;
  v14 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
LABEL_14:
  v20 = HIWORD(v13);
  v21 = (unsigned __int16)v13;
  if (v17 == (float)(unsigned __int16)v13 && v19 == (float)HIWORD(v13))
    return sub_22433A9C8(v15, v14, (float)(unsigned __int16)v13);
  v23 = *(_QWORD *)(v15 + 8);
  if (!v23)
    goto LABEL_35;
  v24 = *(std::__shared_weak_count **)(v15 + 16);
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldxr(p_shared_owners);
    while (__stxr(v26 + 1, p_shared_owners));
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
    v23 = *(_QWORD *)(v15 + 8);
    v28 = *(std::__shared_weak_count **)(v15 + 16);
    if (v28)
    {
      v29 = (unint64_t *)&v28->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      do
        v31 = __ldaxr(v29);
      while (__stlxr(v31 - 1, v29));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
  }
  if (*(_BYTE *)(v15 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v23 + 96))(&v89, v23, 0);
    v32 = *(_QWORD *)(v14 + 8);
    if (!v32)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v89 = 0;
    v32 = *(_QWORD *)(v14 + 8);
    if (!v32)
      goto LABEL_51;
  }
  v34 = *(std::__shared_weak_count **)(v14 + 16);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    do
      v37 = __ldaxr(v35);
    while (__stlxr(v37 - 1, v35));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
    v32 = *(_QWORD *)(v14 + 8);
    v38 = *(std::__shared_weak_count **)(v14 + 16);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v41 = __ldaxr(v39);
      while (__stlxr(v41 - 1, v39));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  if (*(_BYTE *)(v14 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v32 + 96))(&v88, v32, 1);
    v42 = *(_DWORD *)(v15 + 32);
    if (!v42)
      goto LABEL_99;
    goto LABEL_52;
  }
LABEL_51:
  v88 = 0;
  v42 = *(_DWORD *)(v15 + 32);
  if (!v42)
    goto LABEL_99;
LABEL_52:
  v43 = *(_DWORD *)(v15 + 36);
  if (!v43)
    goto LABEL_99;
  v44 = *(unsigned int *)(v15 + 40);
  v45 = *(unsigned int *)(v14 + 40);
  v86 = *(unsigned int *)(v15 + 44);
  v87 = *(unsigned int *)(v14 + 44);
  v46 = *(_WORD **)(v15 + 24);
  if (*(_BYTE *)(v15 + 48) && v46)
  {
    v47 = *(_QWORD *)(v15 + 8);
    v48 = *(std::__shared_weak_count **)(v15 + 16);
    if (v48)
    {
      v49 = (unint64_t *)&v48->__shared_owners_;
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      do
        v51 = __ldaxr(v49);
      while (__stlxr(v51 - 1, v49));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
        std::__shared_weak_count::__release_weak(v48);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v47 + 88))(v47, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v46 = *(_WORD **)(v15 + 24);
  }
  v52 = *(_DWORD **)(v14 + 24);
  if (*(_BYTE *)(v14 + 48) && v52)
  {
    v53 = *(_QWORD *)(v14 + 8);
    v54 = *(std::__shared_weak_count **)(v14 + 16);
    if (v54)
    {
      v55 = (unint64_t *)&v54->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v53 + 88))(v53, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v52 = *(_DWORD **)(v14 + 24);
  }
  v58 = (double)v21;
  v59 = v17;
  v60 = v19;
  v61 = 1.0 / ((double)v20 - (double)v21);
  v62 = v19 - v17;
  v63 = v42 - 1;
  v64 = v43 - 1;
  if (v43 == 1)
    goto LABEL_83;
  if (v42 != 1)
  {
    v65 = 0;
    v60 = 0.0;
    do
    {
      v66 = v52;
      v67 = v46;
      v68 = v42 - 1;
      do
      {
        LOWORD(a9) = *v67;
        v69 = v61 * ((double)*(unint64_t *)&a9 - v58);
        v70 = fmax(v69, 0.0);
        if (v69 <= 1.0)
          v71 = v70;
        else
          v71 = 1.0;
        a9 = v62 * v71 + v59;
        *(float *)&a9 = a9;
        *v66 = LODWORD(a9);
        v67 += v44;
        v66 += v45;
        --v68;
      }
      while (v68);
      LOWORD(a9) = *v67;
      v72 = v61 * ((double)*(unint64_t *)&a9 - v58);
      v73 = fmax(v72, 0.0);
      if (v72 <= 1.0)
        v74 = v73;
      else
        v74 = 1.0;
      a9 = v62 * v74 + v59;
      *(float *)&a9 = a9;
      *v66 = LODWORD(a9);
      v46 += v86;
      v52 += v87;
      ++v65;
    }
    while (v65 != v64);
LABEL_83:
    if (v42 != 1)
    {
      v60 = 0.0;
      do
      {
        LOWORD(a9) = *v46;
        v75 = v61 * ((double)*(unint64_t *)&a9 - v58);
        v76 = fmax(v75, 0.0);
        if (v75 <= 1.0)
          v77 = v76;
        else
          v77 = 1.0;
        a9 = v62 * v77 + v59;
        *(float *)&a9 = a9;
        *v52 = LODWORD(a9);
        v46 += v44;
        v52 += v45;
        --v63;
      }
      while (v63);
    }
    goto LABEL_95;
  }
  v60 = 0.0;
  do
  {
    LOWORD(a9) = *v46;
    v78 = v61 * ((double)*(unint64_t *)&a9 - v58);
    v79 = fmax(v78, 0.0);
    if (v78 <= 1.0)
      v80 = v79;
    else
      v80 = 1.0;
    a9 = v62 * v80 + v59;
    *(float *)&a9 = a9;
    *v52 = LODWORD(a9);
    v46 += v86;
    v52 += v87;
    --v64;
  }
  while (v64);
LABEL_95:
  LOWORD(v60) = *v46;
  v81 = v61 * ((double)*(unint64_t *)&v60 - v58);
  v82 = fmax(v81, 0.0);
  if (v81 <= 1.0)
    v83 = v82;
  else
    v83 = 1.0;
  v84 = v62 * v83 + v59;
  *(float *)v52 = v84;
LABEL_99:
  v85 = v88;
  v88 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  result = v89;
  v89 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224339CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224339D04(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  double v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  float *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  float *v53;
  unsigned __int16 *v54;
  int v55;
  unsigned int v56;
  float v57;
  unsigned int v58;
  float v59;
  unsigned int v60;
  float v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int16 *v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  float *v101;
  unsigned __int16 *v102;
  int v103;
  unsigned int v104;
  float v105;
  unsigned int v106;
  float v107;
  unsigned int v108;
  float v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *p_shared_owners;
  unint64_t v113;
  unint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int16 *v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  unint64_t v144;
  unsigned int v145;
  int v146;
  int v147;
  int v148;
  float *v149;
  unsigned __int16 *v150;
  int v151;
  unsigned int v152;
  float v153;
  unsigned int v154;
  float v155;
  unsigned int v156;
  float v157;
  unsigned int v158;
  float v159;
  unsigned int v160;
  float v161;
  BOOL v162;
  unsigned int v163;
  float v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  float v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 3.4028e38;
    v6 = -3.4028e38;
    if (-3.4028e38 >= 0.0 && 3.4028e38 <= 65535.0)
      goto LABEL_15;
LABEL_36:
    if (v6 < 0.0)
    {
      if (v8 > 65535.0)
        return sub_22433A9C8(**a1, v2, 65535.0);
      v110 = *(_QWORD *)(v3 + 8);
      if (!v110)
        goto LABEL_179;
      v111 = *(std::__shared_weak_count **)(v3 + 16);
      if (v111)
      {
        p_shared_owners = (unint64_t *)&v111->__shared_owners_;
        do
          v113 = __ldxr(p_shared_owners);
        while (__stxr(v113 + 1, p_shared_owners));
        do
          v114 = __ldaxr(p_shared_owners);
        while (__stlxr(v114 - 1, p_shared_owners));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
        v110 = *(_QWORD *)(v3 + 8);
        v115 = *(std::__shared_weak_count **)(v3 + 16);
        if (v115)
        {
          v116 = (unint64_t *)&v115->__shared_owners_;
          do
            v117 = __ldxr(v116);
          while (__stxr(v117 + 1, v116));
          do
            v118 = __ldaxr(v116);
          while (__stlxr(v118 - 1, v116));
          if (!v118)
          {
            ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
            std::__shared_weak_count::__release_weak(v115);
          }
        }
      }
      if (*(_BYTE *)(v3 + 49))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v110 + 96))(&v171, v110, 0);
        v119 = *(_QWORD *)(v2 + 8);
        if (!v119)
          goto LABEL_195;
      }
      else
      {
LABEL_179:
        v171 = 0;
        v119 = *(_QWORD *)(v2 + 8);
        if (!v119)
          goto LABEL_195;
      }
      v120 = *(std::__shared_weak_count **)(v2 + 16);
      if (v120)
      {
        v121 = (unint64_t *)&v120->__shared_owners_;
        do
          v122 = __ldxr(v121);
        while (__stxr(v122 + 1, v121));
        do
          v123 = __ldaxr(v121);
        while (__stlxr(v123 - 1, v121));
        if (!v123)
        {
          ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
          std::__shared_weak_count::__release_weak(v120);
        }
        v119 = *(_QWORD *)(v2 + 8);
        v124 = *(std::__shared_weak_count **)(v2 + 16);
        if (v124)
        {
          v125 = (unint64_t *)&v124->__shared_owners_;
          do
            v126 = __ldxr(v125);
          while (__stxr(v126 + 1, v125));
          do
            v127 = __ldaxr(v125);
          while (__stlxr(v127 - 1, v125));
          if (!v127)
          {
            ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
            std::__shared_weak_count::__release_weak(v124);
          }
        }
      }
      if (*(_BYTE *)(v2 + 49))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v119 + 96))(&v170, v119, 1);
        v128 = *(_DWORD *)(v3 + 32);
        if (!v128)
          goto LABEL_245;
        goto LABEL_196;
      }
LABEL_195:
      v170 = 0;
      v128 = *(_DWORD *)(v3 + 32);
      if (!v128)
        goto LABEL_245;
LABEL_196:
      v129 = *(_DWORD *)(v3 + 36);
      if (!v129)
        goto LABEL_245;
      v130 = *(unsigned int *)(v3 + 40);
      v131 = *(unsigned int *)(v3 + 44);
      v132 = *(unsigned int *)(v2 + 40);
      v133 = *(unsigned int *)(v2 + 44);
      v134 = *(unsigned __int16 **)(v3 + 24);
      if (*(_BYTE *)(v3 + 48) && v134)
      {
        v135 = *(_QWORD *)(v3 + 8);
        v136 = *(std::__shared_weak_count **)(v3 + 16);
        if (v136)
        {
          v137 = (unint64_t *)&v136->__shared_owners_;
          do
            v138 = __ldxr(v137);
          while (__stxr(v138 + 1, v137));
          do
            v139 = __ldaxr(v137);
          while (__stlxr(v139 - 1, v137));
          if (!v139)
          {
            ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
            std::__shared_weak_count::__release_weak(v136);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v135 + 88))(v135, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v134 = *(unsigned __int16 **)(v3 + 24);
      }
      v42 = *(float **)(v2 + 24);
      if (*(_BYTE *)(v2 + 48) && v42)
      {
        v140 = *(_QWORD *)(v2 + 8);
        v141 = *(std::__shared_weak_count **)(v2 + 16);
        if (v141)
        {
          v142 = (unint64_t *)&v141->__shared_owners_;
          do
            v143 = __ldxr(v142);
          while (__stxr(v143 + 1, v142));
          do
            v144 = __ldaxr(v142);
          while (__stlxr(v144 - 1, v142));
          if (!v144)
          {
            ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
            std::__shared_weak_count::__release_weak(v141);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v140 + 88))(v140, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v42 = *(float **)(v2 + 24);
      }
      v145 = (int)v8;
      v146 = v128 - 1;
      v147 = v129 - 1;
      if (v129 != 1)
      {
        if (v128 == 1)
        {
          do
          {
            v167 = *v134;
            v168 = (float)v167;
            if (v167 > v145)
              v168 = v8;
            *v42 = v168;
            v134 += v131;
            v42 += v133;
            --v147;
          }
          while (v147);
          goto LABEL_253;
        }
        v148 = 0;
        do
        {
          v149 = v42;
          v150 = v134;
          v151 = v128 - 1;
          do
          {
            v152 = *v150;
            v153 = (float)v152;
            if (v152 > v145)
              v153 = v8;
            *v149 = v153;
            v150 += v130;
            v149 += v132;
            --v151;
          }
          while (v151);
          v154 = *v150;
          v155 = (float)v154;
          if (v154 > v145)
            v155 = v8;
          *v149 = v155;
          v134 += v131;
          v42 += v133;
          ++v148;
        }
        while (v148 != v147);
      }
      if (v128 != 1)
      {
        do
        {
          v156 = *v134;
          v157 = (float)v156;
          if (v156 > v145)
            v157 = v8;
          *v42 = v157;
          v134 += v130;
          v42 += v132;
          --v146;
        }
        while (v146);
      }
LABEL_253:
      v169 = *v134;
      v161 = (float)v169;
      if (v169 > v145)
        v161 = v8;
      goto LABEL_244;
    }
    v62 = *(_QWORD *)(v3 + 8);
    if (!v62)
      goto LABEL_112;
    v63 = *(std::__shared_weak_count **)(v3 + 16);
    if (v63)
    {
      v64 = (unint64_t *)&v63->__shared_owners_;
      do
        v65 = __ldxr(v64);
      while (__stxr(v65 + 1, v64));
      do
        v66 = __ldaxr(v64);
      while (__stlxr(v66 - 1, v64));
      if (!v66)
      {
        ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
        std::__shared_weak_count::__release_weak(v63);
      }
      v62 = *(_QWORD *)(v3 + 8);
      v67 = *(std::__shared_weak_count **)(v3 + 16);
      if (v67)
      {
        v68 = (unint64_t *)&v67->__shared_owners_;
        do
          v69 = __ldxr(v68);
        while (__stxr(v69 + 1, v68));
        do
          v70 = __ldaxr(v68);
        while (__stlxr(v70 - 1, v68));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
          std::__shared_weak_count::__release_weak(v67);
        }
      }
    }
    if (*(_BYTE *)(v3 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v62 + 96))(&v171, v62, 0);
      v71 = *(_QWORD *)(v2 + 8);
      if (!v71)
        goto LABEL_128;
    }
    else
    {
LABEL_112:
      v171 = 0;
      v71 = *(_QWORD *)(v2 + 8);
      if (!v71)
        goto LABEL_128;
    }
    v72 = *(std::__shared_weak_count **)(v2 + 16);
    if (v72)
    {
      v73 = (unint64_t *)&v72->__shared_owners_;
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 1, v73));
      do
        v75 = __ldaxr(v73);
      while (__stlxr(v75 - 1, v73));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      v71 = *(_QWORD *)(v2 + 8);
      v76 = *(std::__shared_weak_count **)(v2 + 16);
      if (v76)
      {
        v77 = (unint64_t *)&v76->__shared_owners_;
        do
          v78 = __ldxr(v77);
        while (__stxr(v78 + 1, v77));
        do
          v79 = __ldaxr(v77);
        while (__stlxr(v79 - 1, v77));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
          std::__shared_weak_count::__release_weak(v76);
        }
      }
    }
    if (*(_BYTE *)(v2 + 49))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v71 + 96))(&v170, v71, 1);
      v80 = *(_DWORD *)(v3 + 32);
      if (!v80)
        goto LABEL_245;
      goto LABEL_129;
    }
LABEL_128:
    v170 = 0;
    v80 = *(_DWORD *)(v3 + 32);
    if (!v80)
      goto LABEL_245;
LABEL_129:
    v81 = *(_DWORD *)(v3 + 36);
    if (!v81)
      goto LABEL_245;
    v82 = *(unsigned int *)(v3 + 40);
    v83 = *(unsigned int *)(v3 + 44);
    v84 = *(unsigned int *)(v2 + 40);
    v85 = *(unsigned int *)(v2 + 44);
    v86 = *(unsigned __int16 **)(v3 + 24);
    if (*(_BYTE *)(v3 + 48) && v86)
    {
      v87 = *(_QWORD *)(v3 + 8);
      v88 = *(std::__shared_weak_count **)(v3 + 16);
      if (v88)
      {
        v89 = (unint64_t *)&v88->__shared_owners_;
        do
          v90 = __ldxr(v89);
        while (__stxr(v90 + 1, v89));
        do
          v91 = __ldaxr(v89);
        while (__stlxr(v91 - 1, v89));
        if (!v91)
        {
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v87 + 88))(v87, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v86 = *(unsigned __int16 **)(v3 + 24);
    }
    v42 = *(float **)(v2 + 24);
    if (*(_BYTE *)(v2 + 48) && v42)
    {
      v92 = *(_QWORD *)(v2 + 8);
      v93 = *(std::__shared_weak_count **)(v2 + 16);
      if (v93)
      {
        v94 = (unint64_t *)&v93->__shared_owners_;
        do
          v95 = __ldxr(v94);
        while (__stxr(v95 + 1, v94));
        do
          v96 = __ldaxr(v94);
        while (__stlxr(v96 - 1, v94));
        if (!v96)
        {
          ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
          std::__shared_weak_count::__release_weak(v93);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v92 + 88))(v92, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v42 = *(float **)(v2 + 24);
    }
    v97 = (int)v6;
    v98 = v80 - 1;
    v99 = v81 - 1;
    if (v81 != 1)
    {
      if (v80 == 1)
      {
        do
        {
          v163 = *v86;
          v164 = (float)v163;
          if (v163 < v97)
            v164 = v6;
          *v42 = v164;
          v86 += v83;
          v42 += v85;
          --v99;
        }
        while (v99);
        goto LABEL_241;
      }
      v100 = 0;
      do
      {
        v101 = v42;
        v102 = v86;
        v103 = v80 - 1;
        do
        {
          v104 = *v102;
          v105 = (float)v104;
          if (v104 < v97)
            v105 = v6;
          *v101 = v105;
          v102 += v82;
          v101 += v84;
          --v103;
        }
        while (v103);
        v106 = *v102;
        v107 = (float)v106;
        if (v106 < v97)
          v107 = v6;
        *v101 = v107;
        v86 += v83;
        v42 += v85;
        ++v100;
      }
      while (v100 != v99);
    }
    if (v80 != 1)
    {
      do
      {
        v108 = *v86;
        v109 = (float)v108;
        if (v108 < v97)
          v109 = v6;
        *v42 = v109;
        v86 += v82;
        v42 += v84;
        --v98;
      }
      while (v98);
    }
LABEL_241:
    v165 = *v86;
    v161 = (float)v165;
    v162 = v165 >= v97;
LABEL_242:
    if (!v162)
      v161 = v6;
LABEL_244:
    *v42 = v161;
    goto LABEL_245;
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -3.40282347e38;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 3.40282347e38;
  if (v4 < -3.40282347e38)
    v4 = -3.40282347e38;
  v6 = v4;
  if (v5 <= 3.40282347e38)
    v7 = v5;
  else
    v7 = 3.40282347e38;
  v8 = v7;
  if (v6 < 0.0 || v8 > 65535.0)
    goto LABEL_36;
LABEL_15:
  v10 = *(_QWORD *)(v3 + 8);
  if (!v10)
    goto LABEL_39;
  v11 = *(std::__shared_weak_count **)(v3 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v3 + 8);
    v15 = *(std::__shared_weak_count **)(v3 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_BYTE *)(v3 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v171, v10, 0);
    v19 = *(_QWORD *)(v2 + 8);
    if (!v19)
      goto LABEL_55;
  }
  else
  {
LABEL_39:
    v171 = 0;
    v19 = *(_QWORD *)(v2 + 8);
    if (!v19)
      goto LABEL_55;
  }
  v22 = *(std::__shared_weak_count **)(v2 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v19 = *(_QWORD *)(v2 + 8);
    v26 = *(std::__shared_weak_count **)(v2 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (!*(_BYTE *)(v2 + 49))
  {
LABEL_55:
    v170 = 0;
    v30 = *(_DWORD *)(v3 + 32);
    if (!v30)
      goto LABEL_245;
    goto LABEL_56;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v170, v19, 1);
  v30 = *(_DWORD *)(v3 + 32);
  if (!v30)
    goto LABEL_245;
LABEL_56:
  v31 = *(_DWORD *)(v3 + 36);
  if (v31)
  {
    v32 = *(unsigned int *)(v3 + 40);
    v33 = *(unsigned int *)(v3 + 44);
    v34 = *(unsigned int *)(v2 + 40);
    v35 = *(unsigned int *)(v2 + 44);
    v36 = *(unsigned __int16 **)(v3 + 24);
    if (*(_BYTE *)(v3 + 48) && v36)
    {
      v37 = *(_QWORD *)(v3 + 8);
      v38 = *(std::__shared_weak_count **)(v3 + 16);
      if (v38)
      {
        v39 = (unint64_t *)&v38->__shared_owners_;
        do
          v40 = __ldxr(v39);
        while (__stxr(v40 + 1, v39));
        do
          v41 = __ldaxr(v39);
        while (__stlxr(v41 - 1, v39));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v36 = *(unsigned __int16 **)(v3 + 24);
    }
    v42 = *(float **)(v2 + 24);
    if (*(_BYTE *)(v2 + 48) && v42)
    {
      v43 = *(_QWORD *)(v2 + 8);
      v44 = *(std::__shared_weak_count **)(v2 + 16);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldxr(v45);
        while (__stxr(v46 + 1, v45));
        do
          v47 = __ldaxr(v45);
        while (__stlxr(v47 - 1, v45));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v43 + 88))(v43, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v42 = *(float **)(v2 + 24);
    }
    v48 = (int)v6;
    v49 = (int)v8;
    v50 = v30 - 1;
    v51 = v31 - 1;
    if (v31 != 1)
    {
      if (v30 == 1)
      {
        do
        {
          v158 = *v36;
          v159 = (float)v158;
          if (v158 > v49)
            v159 = v8;
          if (v158 < v48)
            v159 = v6;
          *v42 = v159;
          v36 += v33;
          v42 += v35;
          --v51;
        }
        while (v51);
        goto LABEL_235;
      }
      v52 = 0;
      do
      {
        v53 = v42;
        v54 = v36;
        v55 = v30 - 1;
        do
        {
          v56 = *v54;
          v57 = (float)v56;
          if (v56 > v49)
            v57 = v8;
          if (v56 < v48)
            v57 = v6;
          *v53 = v57;
          v54 += v32;
          v53 += v34;
          --v55;
        }
        while (v55);
        v58 = *v54;
        v59 = (float)v58;
        if (v58 > v49)
          v59 = v8;
        if (v58 < v48)
          v59 = v6;
        *v53 = v59;
        v36 += v33;
        v42 += v35;
        ++v52;
      }
      while (v52 != v51);
    }
    if (v30 != 1)
    {
      do
      {
        v60 = *v36;
        v61 = (float)v60;
        if (v60 > v49)
          v61 = v8;
        if (v60 < v48)
          v61 = v6;
        *v42 = v61;
        v36 += v32;
        v42 += v34;
        --v50;
      }
      while (v50);
    }
LABEL_235:
    v160 = *v36;
    v161 = (float)v160;
    if (v160 > v49)
      v161 = v8;
    v162 = v160 >= v48;
    goto LABEL_242;
  }
LABEL_245:
  v166 = v170;
  v170 = 0;
  if (v166)
    (*(void (**)(uint64_t))(*(_QWORD *)v166 + 8))(v166);
  result = v171;
  v171 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433A928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433A9BC(uint64_t **a1, float a2)
{
  return sub_22433A9C8(**a1, (*a1)[1], a2);
}

uint64_t sub_22433A9C8(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  float *v44;
  _WORD *v45;
  int v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_70;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v50 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v50, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (!v14)
  {
LABEL_33:
    v49 = 0;
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_64;
LABEL_34:
    v24 = *(_DWORD *)(a1 + 36);
    if (!v24)
      goto LABEL_64;
    v25 = *(unsigned int *)(a1 + 40);
    v26 = *(unsigned int *)(a1 + 44);
    v27 = *(unsigned int *)(a2 + 40);
    v28 = *(unsigned int *)(a2 + 44);
    v29 = *(_WORD **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(_WORD **)(a1 + 24);
    }
    v35 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(float **)(a2 + 24);
    }
    v41 = v23 - 1;
    v42 = v24 - 1;
    if (v24 != 1)
    {
      if (v23 == 1)
      {
        do
        {
          LOWORD(a3) = *v29;
          a3 = (float)LODWORD(a3);
          *v35 = a3;
          v29 += v26;
          v35 += v28;
          --v42;
        }
        while (v42);
LABEL_63:
        LOWORD(a3) = *v29;
        *v35 = (float)LODWORD(a3);
        goto LABEL_64;
      }
      v43 = 0;
      do
      {
        v44 = v35;
        v45 = v29;
        v46 = v23 - 1;
        do
        {
          LOWORD(a3) = *v45;
          a3 = (float)LODWORD(a3);
          *v44 = a3;
          v45 += v25;
          v44 += v27;
          --v46;
        }
        while (v46);
        LOWORD(a3) = *v45;
        a3 = (float)LODWORD(a3);
        *v44 = a3;
        v29 += v26;
        v35 += v28;
        ++v43;
      }
      while (v43 != v42);
    }
    if (v23 != 1)
    {
      do
      {
        LOWORD(a3) = *v29;
        a3 = (float)LODWORD(a3);
        *v35 = a3;
        v29 += v25;
        v35 += v27;
        --v41;
      }
      while (v41);
    }
    goto LABEL_63;
  }
LABEL_18:
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_29;
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  do
    v18 = __ldaxr(v16);
  while (__stlxr(v18 - 1, v16));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v14 = *(_QWORD *)(a2 + 8);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_29;
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v49, v14, 1);
  v23 = *(_DWORD *)(a1 + 32);
  if (v23)
    goto LABEL_34;
LABEL_64:
  v47 = v49;
  v49 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v50;
  v50 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433ADB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_22433AE14(int a1)
{
  __asm { BR              X10 }
}

void sub_22433AE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,__int16 a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,std::string *a41)
{
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *p_shared_owners;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  unint64_t *v63;
  unint64_t v64;
  uint64_t (**v65)();
  uint64_t v66;
  std::__shared_weak_count *v67;
  uint64_t (**v68)();
  uint64_t v69;
  std::__shared_weak_count *v70;
  unsigned int v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  __int16 v76;

  sub_22433C7D4((uint64_t)&v65, *(_QWORD *)v42, *(_DWORD *)(v42 + 16), *(_QWORD *)v42 + 32);
  v68 = &off_24EC24788;
  sub_22432F240((uint64_t)&v69, (uint64_t)&v65);
  v44 = v67;
  if (v67)
  {
    p_shared_owners = (unint64_t *)&v67->__shared_owners_;
    do
      v46 = __ldaxr(p_shared_owners);
    while (__stlxr(v46 - 1, p_shared_owners));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
  v48 = *(_QWORD *)v42;
  v47 = *(_QWORD *)(v42 + 8);
  v65 = &off_24EC22138;
  sub_2236B487C((uint64_t)&v68, &v66);
  *(_QWORD *)(v43 - 72) = v48;
  *(_QWORD *)(v43 - 64) = &v65;
  v49 = *(unsigned int *)(v47 + 64);
  if ((_DWORD)v49 == -1)
    sub_22316DD70();
  *(_QWORD *)(v43 - 56) = v43 - 72;
  ((void (*)(uint64_t, uint64_t))off_24EC738E8[v49])(v43 - 56, v47 + 8);
  v50 = v67;
  if (!v67)
    goto LABEL_11;
  v51 = (unint64_t *)&v67->__shared_owners_;
  do
    v52 = __ldaxr(v51);
  while (__stlxr(v52 - 1, v51));
  if (!v52)
  {
    ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
    std::__shared_weak_count::__release_weak(v50);
    *(_QWORD *)v41 = &off_24EC1F958;
    v54 = v69;
    v53 = v70;
    if (v70)
    {
LABEL_12:
      v55 = (unint64_t *)&v53->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      v57 = v70;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_11:
    *(_QWORD *)v41 = &off_24EC1F958;
    v54 = v69;
    v53 = v70;
    if (v70)
      goto LABEL_12;
  }
  v57 = 0;
LABEL_17:
  v58 = v75;
  if (v72)
    v59 = v71 | 0x100000000;
  else
    v59 = 0;
  v60 = v74;
  v61 = v73;
  v62 = v76;
  *(_QWORD *)(v41 + 8) = v54;
  *(_QWORD *)(v41 + 16) = v53;
  *(_QWORD *)(v41 + 24) = v59;
  *(_QWORD *)(v41 + 32) = v60;
  *(_DWORD *)(v41 + 40) = v58;
  *(_QWORD *)(v41 + 48) = v61;
  *(_DWORD *)(v41 + 56) = 1;
  *(_WORD *)(v41 + 60) = v62;
  if (v57)
  {
    v63 = (unint64_t *)&v57->__shared_owners_;
    do
      v64 = __ldaxr(v63);
    while (__stlxr(v64 - 1, v63));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
}

void sub_22433C644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22433C7D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(3);
  v34 = &off_24EC1FE80;
  sub_223AAE704((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = 2 * v41;
  if (v38)
    v26 = (2 * v37) | 0x100000000;
  else
    v26 = 0;
  v27 = v40;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v26;
  *(_QWORD *)(a1 + 32) = v27;
  *(_DWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 3;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22433CA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  sub_22319B358(v14 - 88);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22433CA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22433CA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22433CA88(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  unsigned int v16;
  double v17;
  double v18;
  unsigned int v19;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int16 *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  int v77;
  uint64_t v78;

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    v10 = 65504.0;
    if (*(double *)(a2 + 8) <= 65504.0)
      v10 = *(double *)(a2 + 8);
    _S0 = v10;
    __asm { FCVT            H0, S0 }
    v13 = *v3;
    v12 = v3[1];
    _S0 = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_S0);
    v16 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v19 = 255;
    goto LABEL_14;
  }
  v13 = *v3;
  v12 = v3[1];
  LOWORD(_S0) = 0;
  LOWORD(_S1) = 15360;
  v16 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v17 = *(double *)(a2 + 24);
  if (v17 < 0.0)
    v17 = 0.0;
  v16 = (int)v17;
  v18 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v18 = *(double *)(a2 + 32);
  v19 = (int)v18;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v19;
  if (_ZF)
    return sub_22433D098(v13, v12);
  __asm { FCVT            D0, H0 }
  v70 = _D0;
  __asm { FCVT            D1, H1 }
  v68 = (double)v16;
  v69 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = (double)v19 - (double)v16;
  v67 = a3.n128_f64[0];
  v66[0] = &v70;
  v66[1] = &v69;
  v65[0] = &v68;
  v65[1] = &v67;
  v64[0] = v66;
  v64[1] = v65;
  v25 = *(_QWORD *)(v13 + 8);
  if (!v25)
    goto LABEL_35;
  v26 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v26)
    goto LABEL_81;
  p_shared_owners = (unint64_t *)&v26->__shared_owners_;
  do
    v28 = __ldxr(p_shared_owners);
  while (__stxr(v28 + 1, p_shared_owners));
  do
    v29 = __ldaxr(p_shared_owners);
  while (__stlxr(v29 - 1, p_shared_owners));
  if (!v29)
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
  v25 = *(_QWORD *)(v13 + 8);
  v30 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v30)
    goto LABEL_81;
  v31 = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(v31);
  while (__stxr(v32 + 1, v31));
  do
    v33 = __ldaxr(v31);
  while (__stlxr(v33 - 1, v31));
  if (v33)
  {
LABEL_81:
    if (*(_BYTE *)(v13 + 49))
      goto LABEL_31;
LABEL_35:
    v72 = 0;
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_51;
LABEL_36:
    v36 = *(std::__shared_weak_count **)(v12 + 16);
    if (!v36)
      goto LABEL_47;
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
    v34 = *(_QWORD *)(v12 + 8);
    v40 = *(std::__shared_weak_count **)(v12 + 16);
    if (!v40)
      goto LABEL_47;
    v41 = (unint64_t *)&v40->__shared_owners_;
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
    do
      v43 = __ldaxr(v41);
    while (__stlxr(v43 - 1, v41));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
      if (!*(_BYTE *)(v12 + 49))
        goto LABEL_51;
    }
    else
    {
LABEL_47:
      if (!*(_BYTE *)(v12 + 49))
        goto LABEL_51;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v34 + 96))(&v71, v34, 1);
    v73 = v64;
    v44 = *(_DWORD *)(v13 + 32);
    if (v44)
      goto LABEL_52;
    goto LABEL_75;
  }
  ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
  std::__shared_weak_count::__release_weak(v30);
  if (!*(_BYTE *)(v13 + 49))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v25 + 96))(&v72, v25, 0);
  v34 = *(_QWORD *)(v12 + 8);
  if (v34)
    goto LABEL_36;
LABEL_51:
  v71 = 0;
  v73 = v64;
  v44 = *(_DWORD *)(v13 + 32);
  if (v44)
  {
LABEL_52:
    v45 = *(_DWORD *)(v13 + 36);
    if (v45)
    {
      v75 = v44 - 1;
      v46 = *(unsigned int *)(v13 + 44);
      v47 = *(unsigned int *)(v12 + 44);
      v76 = *(unsigned int *)(v13 + 40) | ((unint64_t)*(unsigned int *)(v12 + 40) << 32);
      v74 = 0;
      v77 = v45 - 1;
      v78 = v46 | (v47 << 32);
      v48 = *(__int16 **)(v13 + 24);
      if (*(_BYTE *)(v13 + 48) && v48)
      {
        v49 = *(_QWORD *)(v13 + 8);
        v50 = *(std::__shared_weak_count **)(v13 + 16);
        if (v50)
        {
          v51 = (unint64_t *)&v50->__shared_owners_;
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v48 = *(__int16 **)(v13 + 24);
      }
      v54 = *(_BYTE **)(v12 + 24);
      if (*(_BYTE *)(v12 + 48) && v54)
      {
        v55 = *(_QWORD *)(v12 + 8);
        v56 = *(std::__shared_weak_count **)(v12 + 16);
        if (v56)
        {
          v57 = (unint64_t *)&v56->__shared_owners_;
          do
            v58 = __ldxr(v57);
          while (__stxr(v58 + 1, v57));
          do
            v59 = __ldaxr(v57);
          while (__stlxr(v59 - 1, v57));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v55 + 88))(v55, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v54 = *(_BYTE **)(v12 + 24);
      }
      v60 = v77;
      if (v77)
      {
        v61 = HIDWORD(v78);
        v62 = 2 * v78;
        do
        {
          sub_22433D4E4(&v74, (uint64_t)&v73, v48, v54);
          v54 += v61;
          v48 = (__int16 *)((char *)v48 + v62);
          --v60;
        }
        while (v60);
      }
      a3.n128_f64[0] = sub_22433D4E4(&v74, (uint64_t)&v73, v48, v54);
    }
  }
LABEL_75:
  v63 = v71;
  v71 = 0;
  if (v63)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v63 + 8))(v63, a3);
  result = v72;
  v72 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22433CF54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (!a21)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a21 + 8))(a21);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433CFB8(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  __int16 *v19[4];
  __int16 v20;
  __int16 v21;
  char v22;
  char v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 23544;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = (__int16 *)&v23;
  v19[2] = &v20;
  v19[3] = (__int16 *)&v22;
  return sub_22433D5B8(v4, v5, v19);
}

uint64_t sub_22433D08C(uint64_t **a1)
{
  return sub_22433D098(**a1, (*a1)[1]);
}

uint64_t sub_22433D098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  __int16 *v44;
  int v45;
  _BYTE *v46;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v64 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v63, v13, 1);
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v64, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v63 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (!v22)
    goto LABEL_64;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v24 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_BYTE **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = 2 * v25;
    v42 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          v34 += v27;
          v28 += v24;
          --v42;
        }
        while (v42);
      }
      else
      {
        v43 = 0;
        do
        {
          v44 = v28;
          v45 = v22 - 1;
          v46 = v34;
          do
          {
            _H0 = *v44;
            __asm { FCVT            S0, H0 }
            *v46 = (int)_S0;
            v46 += v26;
            v44 = (__int16 *)((char *)v44 + v41);
            --v45;
          }
          while (v45);
          _H0 = *v44;
          __asm { FCVT            S0, H0 }
          *v46 = (int)_S0;
          v28 += v24;
          v34 += v27;
          ++v43;
        }
        while (v43 != v42);
      }
    }
    if (v22 != 1)
    {
      do
      {
        _H0 = *v28;
        __asm { FCVT            S0, H0 }
        *v34 = (int)_S0;
        v34 += v26;
        v28 = (__int16 *)((char *)v28 + v41);
        --v40;
      }
      while (v40);
    }
    _H0 = *v28;
    __asm { FCVT            S0, H0 }
    *v34 = (int)_S0;
  }
LABEL_64:
  v61 = v63;
  v63 = 0;
  if (v61)
    (*(void (**)(uint64_t))(*(_QWORD *)v61 + 8))(v61);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433D480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22433D4E4(_DWORD *a1, uint64_t a2, __int16 *a3, _BYTE *a4)
{
  unsigned int v4;
  double v11;
  double v12;
  double v13;
  double v16;
  double v17;
  double v18;
  double result;

  if (a1[2])
  {
    v4 = 0;
    do
    {
      _H2 = *a3;
      __asm { FCVT            D2, H2 }
      v11 = (_D2 - ****(double ****)a2) * **(double **)(**(_QWORD **)a2 + 8);
      v12 = fmax(v11, 0.0);
      if (v11 <= 1.0)
        v13 = v12;
      else
        v13 = 1.0;
      *a4 = llround(***(double ***)(*(_QWORD *)a2 + 8) + v13 * **(double **)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8));
      a3 += a1[3];
      a4 += a1[4];
      ++v4;
    }
    while (v4 < a1[2]);
  }
  _H0 = *a3;
  __asm { FCVT            D0, H0 }
  v16 = (_D0 - ****(double ****)a2) * **(double **)(**(_QWORD **)a2 + 8);
  v17 = fmax(v16, 0.0);
  if (v16 <= 1.0)
    v18 = v17;
  else
    v18 = 1.0;
  result = ***(double ***)(*(_QWORD *)a2 + 8) + v18 * **(double **)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8);
  *a4 = llround(result);
  return result;
}

uint64_t sub_22433D5B8(uint64_t a1, uint64_t a2, __int16 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  __int16 *v46;
  __int16 *v47;
  int v48;
  _BYTE *v49;
  __int16 *v50;
  __int16 *v73;
  int v84;
  uint64_t v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_18;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v91 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v91, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_35:
    v90 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_92;
    goto LABEL_36;
  }
LABEL_19:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_31;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (v23)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v90, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_92;
LABEL_36:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_92;
  v26 = *(unsigned int *)(a1 + 40);
  v89 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(__int16 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(__int16 **)(a1 + 24);
  }
  v35 = *(_BYTE **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_BYTE **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = 2 * v26;
  v43 = v25 - 1;
  if (v25 != 1)
  {
    v44 = 2 * v89;
    if (v24 != 1)
    {
      v45 = 0;
      while (1)
      {
        v47 = v29;
        v48 = v24 - 1;
        v49 = v35;
        do
        {
          while (1)
          {
            _H0 = *v47;
            _H1 = **a3;
            __asm
            {
              FCVT            S0, H0
              FCVT            S1, H1
            }
            if (_S0 >= _S1)
              break;
            v50 = a3[1];
LABEL_62:
            *v49 = *(_BYTE *)v50;
            v49 += v27;
            v47 = (__int16 *)((char *)v47 + v42);
            if (!--v48)
              goto LABEL_67;
          }
          _H1 = *a3[2];
          __asm { FCVT            S1, H1 }
          if (_S0 > _S1)
          {
            v50 = a3[3];
            goto LABEL_62;
          }
          *v49 = (int)_S0;
          v49 += v27;
          v47 = (__int16 *)((char *)v47 + v42);
          --v48;
        }
        while (v48);
LABEL_67:
        _H0 = *v47;
        _H1 = **a3;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S0 < _S1)
        {
          v46 = a3[1];
          goto LABEL_59;
        }
        _H1 = *a3[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          *v49 = (int)_S0;
          v29 = (__int16 *)((char *)v29 + v44);
          v35 += v28;
          if (++v45 == v43)
            goto LABEL_78;
          continue;
        }
        v46 = a3[3];
LABEL_59:
        *v49 = *(_BYTE *)v46;
        v29 = (__int16 *)((char *)v29 + v44);
        v35 += v28;
        if (++v45 == v43)
          goto LABEL_78;
      }
    }
    do
    {
      while (1)
      {
        while (1)
        {
          _H0 = *v29;
          _H1 = **a3;
          __asm
          {
            FCVT            S0, H0
            FCVT            S1, H1
          }
          if (_S0 >= _S1)
            break;
          *v35 = *(_BYTE *)a3[1];
          v35 += v28;
          v29 = (__int16 *)((char *)v29 + v44);
          if (!--v43)
            goto LABEL_78;
        }
        _H1 = *a3[2];
        __asm { FCVT            S1, H1 }
        if (_S0 > _S1)
          break;
        *v35 = (int)_S0;
        v35 += v28;
        v29 = (__int16 *)((char *)v29 + v44);
        if (!--v43)
          goto LABEL_78;
      }
      *v35 = *(_BYTE *)a3[3];
      v35 += v28;
      v29 = (__int16 *)((char *)v29 + v44);
      --v43;
    }
    while (v43);
  }
LABEL_78:
  if (v24 != 1)
  {
    do
    {
      while (1)
      {
        _H0 = *v29;
        _H1 = **a3;
        __asm
        {
          FCVT            S0, H0
          FCVT            S1, H1
        }
        if (_S0 >= _S1)
          break;
        v73 = a3[1];
LABEL_81:
        *v35 = *(_BYTE *)v73;
        v35 += v27;
        v29 = (__int16 *)((char *)v29 + v42);
        if (!--v41)
          goto LABEL_86;
      }
      _H1 = *a3[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v73 = a3[3];
        goto LABEL_81;
      }
      *v35 = (int)_S0;
      v35 += v27;
      v29 = (__int16 *)((char *)v29 + v42);
      --v41;
    }
    while (v41);
  }
LABEL_86:
  _H0 = *v29;
  _H1 = **a3;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *a3[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v84 = (int)_S0;
    else
      LOBYTE(v84) = *(_BYTE *)a3[3];
  }
  else
  {
    LOBYTE(v84) = *(_BYTE *)a3[1];
  }
  *v35 = v84;
LABEL_92:
  v87 = v90;
  v90 = 0;
  if (v87)
    (*(void (**)(uint64_t))(*(_QWORD *)v87 + 8))(v87);
  result = v91;
  v91 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433DB58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433DBBC(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  uint64_t v11;
  uint64_t v12;
  double v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v20;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int16 *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  _WORD *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  double v59;
  double v60;
  double v61;
  double v62;
  int v63;
  int v64;
  int v65;
  _WORD *v66;
  __int16 *v67;
  int v68;
  double v71;
  double v72;
  double v73;
  double v76;
  double v77;
  double v78;
  double v81;
  double v82;
  double v83;
  double v86;
  double v87;
  double v88;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a2 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a2 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v12 = *v3;
    v11 = v3[1];
    _S8 = v9 | (LOWORD(_S0) << 16);
    _S9 = HIWORD(_S8);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v17 = -65536;
    goto LABEL_14;
  }
  v12 = *v3;
  v11 = v3[1];
  LOWORD(_S8) = 0;
  LOWORD(_S9) = 15360;
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = *(double *)(a2 + 24);
  if (v15 < 0.0)
    v15 = 0.0;
  v16 = (int)v15;
  _Q0.n128_u64[0] = 0x40EFFFE000000000;
  if (*(double *)(a2 + 32) <= 65535.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a2 + 32);
  v17 = v16 | ((int)_Q0.n128_f64[0] << 16);
LABEL_14:
  v18 = (unsigned __int16)v17;
  __asm { FCVT            S0, H8 }
  v20 = HIWORD(v17);
  __asm { FCVT            S0, H9 }
  _ZF = _ZF && _Q0.n128_f32[0] == (float)HIWORD(v17);
  if (_ZF)
    return sub_22433E2E4(v12, v11);
  v22 = *(_QWORD *)(v12 + 8);
  if (!v22)
    goto LABEL_35;
  v23 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v23)
    goto LABEL_103;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v25 = __ldxr(p_shared_owners);
  while (__stxr(v25 + 1, p_shared_owners));
  do
    v26 = __ldaxr(p_shared_owners);
  while (__stlxr(v26 - 1, p_shared_owners));
  if (!v26)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v23->__on_zero_shared)(v23, _Q0);
    std::__shared_weak_count::__release_weak(v23);
  }
  v22 = *(_QWORD *)(v12 + 8);
  v27 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v27)
    goto LABEL_103;
  v28 = (unint64_t *)&v27->__shared_owners_;
  do
    v29 = __ldxr(v28);
  while (__stxr(v29 + 1, v28));
  do
    v30 = __ldaxr(v28);
  while (__stlxr(v30 - 1, v28));
  if (v30)
  {
LABEL_103:
    if (*(_BYTE *)(v12 + 49))
      goto LABEL_31;
LABEL_35:
    v98 = 0;
    v31 = *(_QWORD *)(v11 + 8);
    if (!v31)
      goto LABEL_51;
LABEL_36:
    v33 = *(std::__shared_weak_count **)(v11 + 16);
    if (!v33)
      goto LABEL_47;
    v34 = (unint64_t *)&v33->__shared_owners_;
    do
      v35 = __ldxr(v34);
    while (__stxr(v35 + 1, v34));
    do
      v36 = __ldaxr(v34);
    while (__stlxr(v36 - 1, v34));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
    v31 = *(_QWORD *)(v11 + 8);
    v37 = *(std::__shared_weak_count **)(v11 + 16);
    if (!v37)
      goto LABEL_47;
    v38 = (unint64_t *)&v37->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
      if (!*(_BYTE *)(v11 + 49))
        goto LABEL_51;
    }
    else
    {
LABEL_47:
      if (!*(_BYTE *)(v11 + 49))
        goto LABEL_51;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v31 + 96))(&v97, v31, 1);
    v41 = *(_DWORD *)(v12 + 32);
    if (!v41)
      goto LABEL_97;
    goto LABEL_52;
  }
  ((void (*)(std::__shared_weak_count *, __n128))v27->__on_zero_shared)(v27, _Q0);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_BYTE *)(v12 + 49))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128))(*(_QWORD *)v22 + 96))(&v98, v22, 0, _Q0);
  v31 = *(_QWORD *)(v11 + 8);
  if (v31)
    goto LABEL_36;
LABEL_51:
  v97 = 0;
  v41 = *(_DWORD *)(v12 + 32);
  if (!v41)
    goto LABEL_97;
LABEL_52:
  v42 = *(_DWORD *)(v12 + 36);
  if (!v42)
    goto LABEL_97;
  v43 = *(unsigned int *)(v12 + 40);
  v44 = *(unsigned int *)(v11 + 40);
  v95 = *(unsigned int *)(v12 + 44);
  v96 = *(unsigned int *)(v11 + 44);
  v45 = *(__int16 **)(v12 + 24);
  if (*(_BYTE *)(v12 + 48) && v45)
  {
    v46 = *(_QWORD *)(v12 + 8);
    v47 = *(std::__shared_weak_count **)(v12 + 16);
    if (v47)
    {
      v48 = (unint64_t *)&v47->__shared_owners_;
      do
        v49 = __ldxr(v48);
      while (__stxr(v49 + 1, v48));
      do
        v50 = __ldaxr(v48);
      while (__stlxr(v50 - 1, v48));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v46 + 88))(v46, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v45 = *(__int16 **)(v12 + 24);
  }
  v51 = *(_WORD **)(v11 + 24);
  if (*(_BYTE *)(v11 + 48) && v51)
  {
    v52 = *(_QWORD *)(v11 + 8);
    v53 = *(std::__shared_weak_count **)(v11 + 16);
    if (v53)
    {
      v54 = (unint64_t *)&v53->__shared_owners_;
      do
        v55 = __ldxr(v54);
      while (__stxr(v55 + 1, v54));
      do
        v56 = __ldaxr(v54);
      while (__stlxr(v56 - 1, v54));
      if (!v56)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v52 + 88))(v52, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v51 = *(_WORD **)(v11 + 24);
  }
  __asm
  {
    FCVT            D1, H8
    FCVT            D0, H9
  }
  v59 = _D0 - _D1;
  v60 = (double)v18;
  v61 = 1.0 / v59;
  v62 = (double)v20 - (double)v18;
  v63 = v41 - 1;
  v64 = v42 - 1;
  if (v42 == 1)
    goto LABEL_83;
  if (v41 != 1)
  {
    v65 = 0;
    do
    {
      v66 = v51;
      v67 = v45;
      v68 = v41 - 1;
      do
      {
        _H6 = *v67;
        __asm { FCVT            D6, H6 }
        v71 = v61 * (_D6 - _D1);
        v72 = fmax(v71, 0.0);
        if (v71 <= 1.0)
          v73 = v72;
        else
          v73 = 1.0;
        *v66 = llround(v62 * v73 + v60);
        v67 += v43;
        v66 += v44;
        --v68;
      }
      while (v68);
      _H6 = *v67;
      __asm { FCVT            D6, H6 }
      v76 = v61 * (_D6 - _D1);
      v77 = fmax(v76, 0.0);
      if (v76 <= 1.0)
        v78 = v77;
      else
        v78 = 1.0;
      *v66 = llround(v62 * v78 + v60);
      v45 += v95;
      v51 += v96;
      ++v65;
    }
    while (v65 != v64);
LABEL_83:
    if (v41 != 1)
    {
      do
      {
        _H6 = *v45;
        __asm { FCVT            D6, H6 }
        v81 = v61 * (_D6 - _D1);
        v82 = fmax(v81, 0.0);
        if (v81 <= 1.0)
          v83 = v82;
        else
          v83 = 1.0;
        *v51 = llround(v62 * v83 + v60);
        v45 += v43;
        v51 += v44;
        --v63;
      }
      while (v63);
    }
    goto LABEL_93;
  }
  do
  {
    _H6 = *v45;
    __asm { FCVT            D6, H6 }
    v86 = v61 * (_D6 - _D1);
    v87 = fmax(v86, 0.0);
    if (v86 <= 1.0)
      v88 = v87;
    else
      v88 = 1.0;
    *v51 = llround(v62 * v88 + v60);
    v45 += v95;
    v51 += v96;
    --v64;
  }
  while (v64);
LABEL_93:
  _H4 = *v45;
  __asm { FCVT            D4, H4 }
  v91 = v61 * (_D4 - _D1);
  v92 = fmax(v91, 0.0);
  if (v91 <= 1.0)
    v93 = v92;
  else
    v93 = 1.0;
  *v51 = llround(v62 * v93 + v60);
LABEL_97:
  v94 = v97;
  v97 = 0;
  if (v94)
    (*(void (**)(uint64_t))(*(_QWORD *)v94 + 8))(v94);
  result = v98;
  v98 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433E1A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433E204(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  __int16 v22;
  __int16 v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 31744;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_22433E744(v4, v5, (uint64_t)v19);
}

uint64_t sub_22433E2D8(uint64_t **a1)
{
  return sub_22433E2E4(**a1, (*a1)[1]);
}

uint64_t sub_22433E2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  __int16 *v44;
  int v45;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v63 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v63, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_33:
    v62 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
LABEL_34:
    v23 = *(_DWORD *)(a1 + 36);
    if (!v23)
      goto LABEL_64;
    v24 = *(unsigned int *)(a1 + 40);
    v25 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_WORD **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          v28 += v25;
          v34 += v27;
          --v41;
        }
        while (v41);
LABEL_63:
        _H0 = *v28;
        __asm { FCVT            S0, H0 }
        *v34 = (int)_S0;
        goto LABEL_64;
      }
      v42 = 0;
      do
      {
        v43 = v34;
        v44 = v28;
        v45 = v22 - 1;
        do
        {
          _H0 = *v44;
          __asm { FCVT            S0, H0 }
          *v43 = (int)_S0;
          v44 += v24;
          v43 += v26;
          --v45;
        }
        while (v45);
        _H0 = *v44;
        __asm { FCVT            S0, H0 }
        *v43 = (int)_S0;
        v28 += v25;
        v34 += v27;
        ++v42;
      }
      while (v42 != v41);
    }
    if (v22 != 1)
    {
      do
      {
        _H0 = *v28;
        __asm { FCVT            S0, H0 }
        *v34 = (int)_S0;
        v28 += v24;
        v34 += v26;
        --v40;
      }
      while (v40);
    }
    goto LABEL_63;
  }
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_29;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_29;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v62, v13, 1);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22)
    goto LABEL_34;
LABEL_64:
  v60 = v62;
  v62 = 0;
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  result = v63;
  v63 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433E6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433E744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  __int16 *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int16 *v47;
  _WORD *v48;
  uint64_t v49;
  _WORD *v50;
  int v51;
  _WORD *v52;
  __int16 *v53;
  _WORD *v54;
  __int16 *v55;
  int v56;
  _WORD *v57;
  int v58;
  _WORD *v75;
  __int16 *v76;
  _WORD *v77;
  int v78;
  _WORD *v85;
  __int16 *v86;
  _WORD *v87;
  int v88;
  int v99;
  uint64_t v102;
  uint64_t result;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_97;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_97;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_97:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v106 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v106, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_33:
    v105 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_91;
    goto LABEL_34;
  }
LABEL_18:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_29;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v15 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v20)
    goto LABEL_29;
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v105, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_91;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_91;
  v26 = *(unsigned int *)(a1 + 44);
  v104 = *(unsigned int *)(a1 + 40);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(__int16 **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(__int16 **)(a1 + 24);
  }
  v35 = *(_WORD **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_WORD **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = v25 - 1;
  if (v25 == 1)
  {
    v43 = *(__int16 **)a3;
    v49 = v104;
    goto LABEL_70;
  }
  v43 = *(__int16 **)a3;
  v44 = 2 * v26;
  v45 = 2 * v28;
  if (v24 != 1)
  {
    v46 = 0;
    v47 = *(__int16 **)(a3 + 16);
    v48 = *(_WORD **)(a3 + 24);
    v49 = v104;
    v50 = *(_WORD **)(a3 + 8);
    do
    {
      v53 = *(__int16 **)(a3 + 16);
      v52 = *(_WORD **)(a3 + 24);
      v54 = v35;
      v55 = v29;
      v56 = v24 - 1;
      v57 = *(_WORD **)(a3 + 8);
      do
      {
        _H0 = *v55;
        _H1 = *v43;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 < _S1)
        {
          LOWORD(v58) = *v57;
        }
        else
        {
          _H1 = *v53;
          __asm { FCVT            S1, H1 }
          if (_S0 <= _S1)
            v58 = (int)_S0;
          else
            LOWORD(v58) = *v52;
        }
        *v54 = v58;
        v55 += v104;
        v54 += v27;
        --v56;
      }
      while (v56);
      _H0 = *v55;
      _H1 = *v43;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        LOWORD(v51) = *v50;
      }
      else
      {
        _H1 = *v47;
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          v51 = (int)_S0;
        else
          LOWORD(v51) = *v48;
      }
      *v54 = v51;
      v29 = (__int16 *)((char *)v29 + v44);
      v35 = (_WORD *)((char *)v35 + v45);
      ++v46;
    }
    while (v46 != v42);
LABEL_70:
    if (v24 != 1)
    {
      v76 = *(__int16 **)(a3 + 16);
      v75 = *(_WORD **)(a3 + 24);
      v77 = *(_WORD **)(a3 + 8);
      do
      {
        _H0 = *v29;
        _H1 = *v43;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 < _S1)
        {
          LOWORD(v78) = *v77;
        }
        else
        {
          _H1 = *v76;
          __asm { FCVT            S1, H1 }
          if (_S0 <= _S1)
            v78 = (int)_S0;
          else
            LOWORD(v78) = *v75;
        }
        *v35 = v78;
        v29 += v49;
        v35 += v27;
        --v41;
      }
      while (v41);
    }
    goto LABEL_85;
  }
  v86 = *(__int16 **)(a3 + 16);
  v85 = *(_WORD **)(a3 + 24);
  v87 = *(_WORD **)(a3 + 8);
  do
  {
    _H0 = *v29;
    _H1 = *v43;
    __asm
    {
      FCVT            S1, H1
      FCVT            S0, H0
    }
    if (_S0 < _S1)
    {
      LOWORD(v88) = *v87;
    }
    else
    {
      _H1 = *v86;
      __asm { FCVT            S1, H1 }
      if (_S0 <= _S1)
        v88 = (int)_S0;
      else
        LOWORD(v88) = *v85;
    }
    *v35 = v88;
    v29 = (__int16 *)((char *)v29 + v44);
    v35 = (_WORD *)((char *)v35 + v45);
    --v42;
  }
  while (v42);
LABEL_85:
  _H0 = *v29;
  _H1 = *v43;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(a3 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v99 = (int)_S0;
    else
      LOWORD(v99) = **(_WORD **)(a3 + 24);
  }
  else
  {
    LOWORD(v99) = **(_WORD **)(a3 + 8);
  }
  *v35 = v99;
LABEL_91:
  v102 = v105;
  v105 = 0;
  if (v102)
    (*(void (**)(uint64_t))(*(_QWORD *)v102 + 8))(v102);
  result = v106;
  v106 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433EC78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433ECDC(uint64_t **a1, uint64_t a2)
{
  uint64_t *v2;
  double v3;
  unsigned __int16 v8;
  double v9;
  uint64_t v11;
  uint64_t v12;
  double v15;
  float v16;
  double v17;
  float v18;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  float *v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  double v64;
  double v65;
  double v66;
  int v67;
  double v68;
  int v69;
  int v70;
  float *v71;
  __int16 *v72;
  int v73;
  double v76;
  double v77;
  double v78;
  float v79;
  double v82;
  double v83;
  double v84;
  float v85;
  double v88;
  double v89;
  double v90;
  float v91;
  double v94;
  double v95;
  double v96;
  float v97;
  double v100;
  double v101;
  double v102;
  float v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v2 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v12 = *v2;
    v11 = v2[1];
    LOWORD(_S8) = 0;
    LOWORD(_S9) = 15360;
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v18 = 1.0;
    v16 = 0.0;
    __asm
    {
      FCVT            S0, H8
      FCVT            S1, H9
    }
    if (_S0 != 0.0 || 1.0 != _S1)
      goto LABEL_15;
    return sub_22433F3FC(v12, v11);
  }
  v3 = -65504.0;
  if (*(double *)a2 >= -65504.0)
    v3 = *(double *)a2;
  _S0 = v3;
  __asm { FCVT            H0, S0 }
  v8 = LOWORD(_S0);
  v9 = 65504.0;
  if (*(double *)(a2 + 8) <= 65504.0)
    v9 = *(double *)(a2 + 8);
  _S0 = v9;
  __asm { FCVT            H0, S0 }
  v12 = *v2;
  v11 = v2[1];
  _S8 = v8 | (LOWORD(_S0) << 16);
  _S9 = HIWORD(_S8);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v15 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v15 = *(double *)(a2 + 24);
  v16 = v15;
  v17 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v17 = *(double *)(a2 + 32);
  v18 = v17;
  __asm
  {
    FCVT            S0, H8
    FCVT            S1, H9
  }
  if (v16 == _S0 && v18 == _S1)
    return sub_22433F3FC(v12, v11);
LABEL_15:
  v22 = *(_QWORD *)(v12 + 8);
  if (!v22)
    goto LABEL_38;
  v23 = *(std::__shared_weak_count **)(v12 + 16);
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(p_shared_owners);
    while (__stxr(v25 + 1, p_shared_owners));
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(v12 + 8);
    v27 = *(std::__shared_weak_count **)(v12 + 16);
    if (v27)
    {
      v28 = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
  }
  if (*(_BYTE *)(v12 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v22 + 96))(&v106, v22, 0);
    v31 = *(_QWORD *)(v11 + 8);
    if (!v31)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v106 = 0;
    v31 = *(_QWORD *)(v11 + 8);
    if (!v31)
      goto LABEL_54;
  }
  v36 = *(std::__shared_weak_count **)(v11 + 16);
  if (v36)
  {
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
    v31 = *(_QWORD *)(v11 + 8);
    v40 = *(std::__shared_weak_count **)(v11 + 16);
    if (v40)
    {
      v41 = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
      do
        v43 = __ldaxr(v41);
      while (__stlxr(v43 - 1, v41));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  if (*(_BYTE *)(v11 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v31 + 96))(&v105, v31, 1);
    v44 = *(_DWORD *)(v12 + 32);
    if (!v44)
      goto LABEL_100;
    goto LABEL_55;
  }
LABEL_54:
  v105 = 0;
  v44 = *(_DWORD *)(v12 + 32);
  if (!v44)
    goto LABEL_100;
LABEL_55:
  v45 = *(_DWORD *)(v12 + 36);
  if (!v45)
    goto LABEL_100;
  v46 = *(unsigned int *)(v12 + 40);
  v47 = *(unsigned int *)(v12 + 44);
  v48 = *(unsigned int *)(v11 + 40);
  v49 = *(unsigned int *)(v11 + 44);
  v50 = *(__int16 **)(v12 + 24);
  if (*(_BYTE *)(v12 + 48) && v50)
  {
    v51 = *(_QWORD *)(v12 + 8);
    v52 = *(std::__shared_weak_count **)(v12 + 16);
    if (v52)
    {
      v53 = (unint64_t *)&v52->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v51 + 88))(v51, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v50 = *(__int16 **)(v12 + 24);
  }
  v56 = *(float **)(v11 + 24);
  if (*(_BYTE *)(v11 + 48) && v56)
  {
    v57 = *(_QWORD *)(v11 + 8);
    v58 = *(std::__shared_weak_count **)(v11 + 16);
    if (v58)
    {
      v59 = (unint64_t *)&v58->__shared_owners_;
      do
        v60 = __ldxr(v59);
      while (__stxr(v60 + 1, v59));
      do
        v61 = __ldaxr(v59);
      while (__stlxr(v61 - 1, v59));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v57 + 88))(v57, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v56 = *(float **)(v11 + 24);
  }
  __asm
  {
    FCVT            D1, H8
    FCVT            D0, H9
  }
  v64 = _D0 - _D1;
  v65 = v16;
  v66 = v18 - v16;
  v67 = v44 - 1;
  v68 = 1.0 / v64;
  v69 = v45 - 1;
  if (v45 == 1)
    goto LABEL_86;
  if (v44 != 1)
  {
    v70 = 0;
    do
    {
      v71 = v56;
      v72 = v50;
      v73 = v44 - 1;
      do
      {
        _H6 = *v72;
        __asm { FCVT            D6, H6 }
        v76 = v68 * (_D6 - _D1);
        v77 = fmax(v76, 0.0);
        if (v76 <= 1.0)
          v78 = v77;
        else
          v78 = 1.0;
        v79 = v66 * v78 + v65;
        *v71 = v79;
        v72 += v46;
        v71 += v48;
        --v73;
      }
      while (v73);
      _H6 = *v72;
      __asm { FCVT            D6, H6 }
      v82 = v68 * (_D6 - _D1);
      v83 = fmax(v82, 0.0);
      if (v82 <= 1.0)
        v84 = v83;
      else
        v84 = 1.0;
      v85 = v66 * v84 + v65;
      *v71 = v85;
      v50 += v47;
      v56 += v49;
      ++v70;
    }
    while (v70 != v69);
LABEL_86:
    if (v44 != 1)
    {
      do
      {
        _H6 = *v50;
        __asm { FCVT            D6, H6 }
        v88 = v68 * (_D6 - _D1);
        v89 = fmax(v88, 0.0);
        if (v88 <= 1.0)
          v90 = v89;
        else
          v90 = 1.0;
        v91 = v66 * v90 + v65;
        *v56 = v91;
        v50 += v46;
        v56 += v48;
        --v67;
      }
      while (v67);
    }
    goto LABEL_96;
  }
  do
  {
    _H6 = *v50;
    __asm { FCVT            D6, H6 }
    v94 = v68 * (_D6 - _D1);
    v95 = fmax(v94, 0.0);
    if (v94 <= 1.0)
      v96 = v95;
    else
      v96 = 1.0;
    v97 = v66 * v96 + v65;
    *v56 = v97;
    v50 += v47;
    v56 += v49;
    --v69;
  }
  while (v69);
LABEL_96:
  _H4 = *v50;
  __asm { FCVT            D4, H4 }
  v100 = v68 * (_D4 - _D1);
  v101 = fmax(v100, 0.0);
  if (v100 <= 1.0)
    v102 = v101;
  else
    v102 = 1.0;
  v103 = v66 * v102 + v65;
  *v56 = v103;
LABEL_100:
  v104 = v105;
  v105 = 0;
  if (v104)
    (*(void (**)(uint64_t))(*(_QWORD *)v104 + 8))(v104);
  result = v106;
  v106 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433F2B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433F31C(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v9;
  _QWORD v18[4];
  __int16 v19;
  __int16 v20;
  float v21;
  int v22;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = -3.40282347e38;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 3.40282347e38;
    if (v6 < -3.40282347e38)
      v6 = -3.40282347e38;
    _S0 = v6;
    if (v7 <= 3.40282347e38)
      v9 = v7;
    else
      v9 = 3.40282347e38;
    _S1 = v9;
    v21 = _S1;
    v22 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v20 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v21 = 3.4028e38;
    v22 = -8388609;
    v20 = -1024;
    _H0 = 31744;
  }
  v19 = _H0;
  v18[0] = &v20;
  v18[1] = &v22;
  v18[2] = &v19;
  v18[3] = &v21;
  return sub_22433F848(v4, v5, (uint64_t)v18);
}

uint64_t sub_22433F3F0(uint64_t **a1)
{
  return sub_22433F3FC(**a1, (*a1)[1]);
}

uint64_t sub_22433F3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _DWORD *v43;
  __int16 *v44;
  int v45;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v63 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v63, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_33:
    v62 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
LABEL_34:
    v23 = *(_DWORD *)(a1 + 36);
    if (!v23)
      goto LABEL_64;
    v24 = *(unsigned int *)(a1 + 40);
    v25 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(__int16 **)(a1 + 24);
    }
    v34 = *(_DWORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_DWORD **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = _S0;
          v28 += v25;
          v34 += v27;
          --v41;
        }
        while (v41);
LABEL_63:
        _H0 = *v28;
        __asm { FCVT            S0, H0 }
        *v34 = _S0;
        goto LABEL_64;
      }
      v42 = 0;
      do
      {
        v43 = v34;
        v44 = v28;
        v45 = v22 - 1;
        do
        {
          _H0 = *v44;
          __asm { FCVT            S0, H0 }
          *v43 = _S0;
          v44 += v24;
          v43 += v26;
          --v45;
        }
        while (v45);
        _H0 = *v44;
        __asm { FCVT            S0, H0 }
        *v43 = _S0;
        v28 += v25;
        v34 += v27;
        ++v42;
      }
      while (v42 != v41);
    }
    if (v22 != 1)
    {
      do
      {
        _H0 = *v28;
        __asm { FCVT            S0, H0 }
        *v34 = _S0;
        v28 += v24;
        v34 += v26;
        --v40;
      }
      while (v40);
    }
    goto LABEL_63;
  }
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_29;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_29;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v62, v13, 1);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22)
    goto LABEL_34;
LABEL_64:
  v60 = v62;
  v62 = 0;
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  result = v63;
  v63 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433F7E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22433F848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  __int16 *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  __int16 *v47;
  float *v48;
  uint64_t v49;
  float *v50;
  float *v52;
  __int16 *v53;
  float *v54;
  __int16 *v55;
  int v56;
  float *v57;
  float *v73;
  __int16 *v74;
  float *v75;
  float *v82;
  __int16 *v83;
  float *v84;
  float *v95;
  uint64_t v98;
  uint64_t result;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_93;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_93;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_93:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v102 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v102, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_33:
    v101 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_87;
LABEL_34:
    v25 = *(_DWORD *)(a1 + 36);
    if (!v25)
      goto LABEL_87;
    v26 = *(unsigned int *)(a1 + 44);
    v100 = *(unsigned int *)(a1 + 40);
    v27 = *(unsigned int *)(a2 + 40);
    v28 = *(unsigned int *)(a2 + 44);
    v29 = *(__int16 **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v29)
    {
      v30 = *(_QWORD *)(a1 + 8);
      v31 = *(std::__shared_weak_count **)(a1 + 16);
      if (v31)
      {
        v32 = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(v32);
        while (__stxr(v33 + 1, v32));
        do
          v34 = __ldaxr(v32);
        while (__stlxr(v34 - 1, v32));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v29 = *(__int16 **)(a1 + 24);
    }
    v35 = *(float **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v35)
    {
      v36 = *(_QWORD *)(a2 + 8);
      v37 = *(std::__shared_weak_count **)(a2 + 16);
      if (v37)
      {
        v38 = (unint64_t *)&v37->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v35 = *(float **)(a2 + 24);
    }
    v41 = v24 - 1;
    v42 = v25 - 1;
    if (v25 == 1)
    {
      v43 = *(__int16 **)a3;
      v49 = v100;
    }
    else
    {
      v43 = *(__int16 **)a3;
      v44 = 2 * v26;
      v45 = 4 * v28;
      if (v24 == 1)
      {
        v83 = *(__int16 **)(a3 + 16);
        v82 = *(float **)(a3 + 24);
        v84 = *(float **)(a3 + 8);
        do
        {
          _H0 = *v29;
          _H1 = *v43;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 < _S1)
          {
            _S0 = *v84;
          }
          else
          {
            _H1 = *v83;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v82;
          }
          *v35 = _S0;
          v29 = (__int16 *)((char *)v29 + v44);
          v35 = (float *)((char *)v35 + v45);
          --v42;
        }
        while (v42);
LABEL_81:
        _H0 = *v29;
        _H1 = *v43;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
        {
          _H1 = **(_WORD **)(a3 + 16);
          __asm { FCVT            S1, H1 }
          if (_S0 <= _S1)
          {
LABEL_86:
            *v35 = _S0;
            goto LABEL_87;
          }
          v95 = *(float **)(a3 + 24);
        }
        else
        {
          v95 = *(float **)(a3 + 8);
        }
        _S0 = *v95;
        goto LABEL_86;
      }
      v46 = 0;
      v47 = *(__int16 **)(a3 + 16);
      v48 = *(float **)(a3 + 24);
      v49 = v100;
      v50 = *(float **)(a3 + 8);
      do
      {
        v53 = *(__int16 **)(a3 + 16);
        v52 = *(float **)(a3 + 24);
        v54 = v35;
        v55 = v29;
        v56 = v24 - 1;
        v57 = *(float **)(a3 + 8);
        do
        {
          _H0 = *v55;
          _H1 = *v43;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 < _S1)
          {
            _S0 = *v57;
          }
          else
          {
            _H1 = *v53;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v52;
          }
          *v54 = _S0;
          v55 += v100;
          v54 += v27;
          --v56;
        }
        while (v56);
        _H0 = *v55;
        _H1 = *v43;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 < _S1)
        {
          _S0 = *v50;
        }
        else
        {
          _H1 = *v47;
          __asm { FCVT            S1, H1 }
          if (_S0 > _S1)
            _S0 = *v48;
        }
        *v54 = _S0;
        v29 = (__int16 *)((char *)v29 + v44);
        v35 = (float *)((char *)v35 + v45);
        ++v46;
      }
      while (v46 != v42);
    }
    if (v24 != 1)
    {
      v74 = *(__int16 **)(a3 + 16);
      v73 = *(float **)(a3 + 24);
      v75 = *(float **)(a3 + 8);
      do
      {
        _H0 = *v29;
        _H1 = *v43;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 < _S1)
        {
          _S0 = *v75;
        }
        else
        {
          _H1 = *v74;
          __asm { FCVT            S1, H1 }
          if (_S0 > _S1)
            _S0 = *v73;
        }
        *v35 = _S0;
        v29 += v49;
        v35 += v27;
        --v41;
      }
      while (v41);
    }
    goto LABEL_81;
  }
LABEL_18:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_29;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v15 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v20)
    goto LABEL_29;
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v101, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (v24)
    goto LABEL_34;
LABEL_87:
  v98 = v101;
  v101 = 0;
  if (v98)
    (*(void (**)(uint64_t))(*(_QWORD *)v98 + 8))(v98);
  result = v102;
  v102 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22433FD50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

void sub_22433FDB4(int a1)
{
  __asm { BR              X10 }
}

void sub_22433FDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,__int16 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,std::string *a44)
{
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *p_shared_owners;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  unint64_t *v65;
  unint64_t v66;
  _QWORD v67[2];
  _QWORD *v68;
  uint64_t (**v69)();
  uint64_t v70;
  std::__shared_weak_count *v71;
  uint64_t (**v72)();
  uint64_t v73;
  std::__shared_weak_count *v74;
  unsigned int v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  __int16 v80;

  sub_224341778((uint64_t)&v69, *(_QWORD *)v45, *(_DWORD *)(v45 + 16), *(_QWORD *)v45 + 32);
  v72 = &off_24EC24788;
  sub_22432F240((uint64_t)&v73, (uint64_t)&v69);
  v46 = v71;
  if (v71)
  {
    p_shared_owners = (unint64_t *)&v71->__shared_owners_;
    do
      v48 = __ldaxr(p_shared_owners);
    while (__stlxr(v48 - 1, p_shared_owners));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  v50 = *(_QWORD *)v45;
  v49 = *(_QWORD *)(v45 + 8);
  v69 = &off_24EC22138;
  sub_2236B487C((uint64_t)&v72, &v70);
  v67[0] = v50;
  v67[1] = &v69;
  v51 = *(unsigned int *)(v49 + 64);
  if ((_DWORD)v51 == -1)
    sub_22316DD70();
  v68 = v67;
  ((void (*)(_QWORD **, uint64_t))off_24EC73930[v51])(&v68, v49 + 8);
  v52 = v71;
  if (!v71)
    goto LABEL_11;
  v53 = (unint64_t *)&v71->__shared_owners_;
  do
    v54 = __ldaxr(v53);
  while (__stlxr(v54 - 1, v53));
  if (!v54)
  {
    ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
    std::__shared_weak_count::__release_weak(v52);
    *(_QWORD *)v44 = &off_24EC1F958;
    v56 = v73;
    v55 = v74;
    if (v74)
    {
LABEL_12:
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      v59 = v74;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_11:
    *(_QWORD *)v44 = &off_24EC1F958;
    v56 = v73;
    v55 = v74;
    if (v74)
      goto LABEL_12;
  }
  v59 = 0;
LABEL_17:
  v60 = v79;
  if (v76)
    v61 = v75 | 0x100000000;
  else
    v61 = 0;
  v62 = v78;
  v63 = v77;
  v64 = v80;
  *(_QWORD *)(v44 + 8) = v56;
  *(_QWORD *)(v44 + 16) = v55;
  *(_QWORD *)(v44 + 24) = v61;
  *(_QWORD *)(v44 + 32) = v62;
  *(_DWORD *)(v44 + 40) = v60;
  *(_QWORD *)(v44 + 48) = v63;
  *(_DWORD *)(v44 + 56) = 1;
  *(_WORD *)(v44 + 60) = v64;
  if (v59)
  {
    v65 = (unint64_t *)&v59->__shared_owners_;
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }
}

void sub_2243415E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224341778(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(4);
  v34 = &off_24EC216B8;
  sub_224332B30((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = 4 * v41;
  if (v38)
    v26 = (4 * v37) | 0x100000000;
  else
    v26 = 0;
  v27 = v40;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v26;
  *(_QWORD *)(a1 + 32) = v27;
  *(_DWORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 4;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_2243419E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  sub_22319B358(v14 - 88);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224341A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224341A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_224341A2C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  float v5;
  double v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  unint64_t v67;
  int v68;
  uint64_t v69;

  v3 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v7 = 1.0;
    v5 = 0.0;
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v13 = 255;
    if (v5 != (float)v10 || v7 != (float)0xFFu)
      goto LABEL_15;
    return sub_224341FF8(v9, v8);
  }
  v4 = -3.40282347e38;
  if (*(double *)a2 >= -3.40282347e38)
    v4 = *(double *)a2;
  v5 = v4;
  v6 = 3.40282347e38;
  if (*(double *)(a2 + 8) <= 3.40282347e38)
    v6 = *(double *)(a2 + 8);
  v7 = v6;
  v9 = *v3;
  v8 = v3[1];
  v10 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v11 = *(double *)(a2 + 24);
  if (v11 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v12 = *(double *)(a2 + 32);
  v13 = (int)v12;
  if (v5 == (float)v10 && v7 == (float)(int)v12)
    return sub_224341FF8(v9, v8);
LABEL_15:
  v61 = v5;
  v59 = (double)v10;
  v60 = 1.0 / (v7 - v5);
  a3.n128_f64[0] = (double)v13 - (double)v10;
  v58 = a3.n128_f64[0];
  v57[0] = &v61;
  v57[1] = &v60;
  v56[0] = &v59;
  v56[1] = &v58;
  v55[0] = v57;
  v55[1] = v56;
  v15 = *(_QWORD *)(v9 + 8);
  if (!v15)
    goto LABEL_38;
  v16 = *(std::__shared_weak_count **)(v9 + 16);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(v9 + 8);
    v20 = *(std::__shared_weak_count **)(v9 + 16);
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
  }
  if (*(_BYTE *)(v9 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v15 + 96))(&v63, v15, 0);
    v24 = *(_QWORD *)(v8 + 8);
    if (!v24)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v63 = 0;
    v24 = *(_QWORD *)(v8 + 8);
    if (!v24)
      goto LABEL_54;
  }
  v27 = *(std::__shared_weak_count **)(v8 + 16);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v24 = *(_QWORD *)(v8 + 8);
    v31 = *(std::__shared_weak_count **)(v8 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  if (*(_BYTE *)(v8 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v24 + 96))(&v62, v24, 1);
    v64 = v55;
    v35 = *(_DWORD *)(v9 + 32);
    if (v35)
      goto LABEL_55;
    goto LABEL_78;
  }
LABEL_54:
  v62 = 0;
  v64 = v55;
  v35 = *(_DWORD *)(v9 + 32);
  if (v35)
  {
LABEL_55:
    v36 = *(_DWORD *)(v9 + 36);
    if (v36)
    {
      v66 = v35 - 1;
      v37 = *(unsigned int *)(v9 + 44);
      v38 = *(unsigned int *)(v8 + 44);
      v67 = *(unsigned int *)(v9 + 40) | ((unint64_t)*(unsigned int *)(v8 + 40) << 32);
      v65 = 0;
      v68 = v36 - 1;
      v69 = v37 | (v38 << 32);
      v39 = *(float **)(v9 + 24);
      if (*(_BYTE *)(v9 + 48) && v39)
      {
        v40 = *(_QWORD *)(v9 + 8);
        v41 = *(std::__shared_weak_count **)(v9 + 16);
        if (v41)
        {
          v42 = (unint64_t *)&v41->__shared_owners_;
          do
            v43 = __ldxr(v42);
          while (__stxr(v43 + 1, v42));
          do
            v44 = __ldaxr(v42);
          while (__stlxr(v44 - 1, v42));
          if (!v44)
          {
            ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
            std::__shared_weak_count::__release_weak(v41);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v40 + 88))(v40, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v39 = *(float **)(v9 + 24);
      }
      v45 = *(_BYTE **)(v8 + 24);
      if (*(_BYTE *)(v8 + 48) && v45)
      {
        v46 = *(_QWORD *)(v8 + 8);
        v47 = *(std::__shared_weak_count **)(v8 + 16);
        if (v47)
        {
          v48 = (unint64_t *)&v47->__shared_owners_;
          do
            v49 = __ldxr(v48);
          while (__stxr(v49 + 1, v48));
          do
            v50 = __ldaxr(v48);
          while (__stlxr(v50 - 1, v48));
          if (!v50)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v46 + 88))(v46, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v45 = *(_BYTE **)(v8 + 24);
      }
      v51 = v68;
      if (v68)
      {
        v52 = HIDWORD(v69);
        v53 = 4 * v69;
        do
        {
          sub_224342430(&v65, (uint64_t)&v64, v39, v45);
          v45 += v52;
          v39 = (float *)((char *)v39 + v53);
          --v51;
        }
        while (v51);
      }
      a3.n128_f64[0] = sub_224342430(&v65, (uint64_t)&v64, v39, v45);
    }
  }
LABEL_78:
  v54 = v62;
  v62 = 0;
  if (v54)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v54 + 8))(v54, a3);
  result = v63;
  v63 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224341EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (!a21)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a21 + 8))(a21);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224341F2C(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  _QWORD v11[4];
  uint64_t v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    *(float *)&v12 = (float)(int)v9;
    *((float *)&v12 + 1) = (float)v8;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 1132396544;
  }
  v11[0] = (char *)&v12 + 4;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_224342504(v4, v5, (uint64_t)v11);
}

uint64_t sub_224341FEC(uint64_t **a1)
{
  return sub_224341FF8(**a1, (*a1)[1]);
}

uint64_t sub_224341FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  float *v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v50 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v49, v13, 1);
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v50, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v49 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (!v22)
    goto LABEL_64;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v24 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_BYTE **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = 4 * v25;
    v42 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          *v34 = (int)*v28;
          v34 += v27;
          v28 += v24;
          --v42;
        }
        while (v42);
      }
      else
      {
        v43 = 0;
        do
        {
          v44 = v28;
          v45 = v22 - 1;
          v46 = v34;
          do
          {
            *v46 = (int)*v44;
            v46 += v26;
            v44 = (float *)((char *)v44 + v41);
            --v45;
          }
          while (v45);
          *v46 = (int)*v44;
          v28 += v24;
          v34 += v27;
          ++v43;
        }
        while (v43 != v42);
      }
    }
    if (v22 != 1)
    {
      do
      {
        *v34 = (int)*v28;
        v34 += v26;
        v28 = (float *)((char *)v28 + v41);
        --v40;
      }
      while (v40);
    }
    *v34 = (int)*v28;
  }
LABEL_64:
  v47 = v49;
  v49 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v50;
  v50 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243423CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_224342430(_DWORD *a1, uint64_t a2, float *a3, _BYTE *a4)
{
  unsigned int v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double result;

  if (a1[2])
  {
    v4 = 0;
    do
    {
      v5 = (*a3 - ****(double ****)a2) * **(double **)(**(_QWORD **)a2 + 8);
      v6 = fmax(v5, 0.0);
      if (v5 <= 1.0)
        v7 = v6;
      else
        v7 = 1.0;
      *a4 = llround(***(double ***)(*(_QWORD *)a2 + 8) + v7 * **(double **)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8));
      a3 += a1[3];
      a4 += a1[4];
      ++v4;
    }
    while (v4 < a1[2]);
  }
  v8 = (*a3 - ****(double ****)a2) * **(double **)(**(_QWORD **)a2 + 8);
  v9 = fmax(v8, 0.0);
  if (v8 <= 1.0)
    v10 = v9;
  else
    v10 = 1.0;
  result = ***(double ***)(*(_QWORD *)a2 + 8) + v10 * **(double **)(*(_QWORD *)(*(_QWORD *)a2 + 8) + 8);
  *a4 = llround(result);
  return result;
}

uint64_t sub_224342504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  _BYTE *v46;
  float *v47;
  int v48;
  _BYTE *v49;
  _BYTE *v50;
  float v51;
  float v52;
  float v53;
  _BYTE *v54;
  float v55;
  float v56;
  int v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_18;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v62 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v62, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_35:
    v61 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_92;
    goto LABEL_36;
  }
LABEL_19:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_31;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (v23)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v61, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_92;
LABEL_36:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_92;
  v26 = *(unsigned int *)(a1 + 40);
  v60 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(float **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(float **)(a1 + 24);
  }
  v35 = *(_BYTE **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_BYTE **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = 4 * v26;
  v43 = v25 - 1;
  if (v25 != 1)
  {
    v44 = 4 * v60;
    if (v24 != 1)
    {
      v45 = 0;
      while (1)
      {
        v47 = v29;
        v48 = v24 - 1;
        v49 = v35;
        do
        {
          while (1)
          {
            v51 = *v47;
            if (*v47 >= **(float **)a3)
              break;
            v50 = *(_BYTE **)(a3 + 8);
LABEL_62:
            *v49 = *v50;
            v49 += v27;
            v47 = (float *)((char *)v47 + v42);
            if (!--v48)
              goto LABEL_67;
          }
          if (v51 > **(float **)(a3 + 16))
          {
            v50 = *(_BYTE **)(a3 + 24);
            goto LABEL_62;
          }
          *v49 = (int)v51;
          v49 += v27;
          v47 = (float *)((char *)v47 + v42);
          --v48;
        }
        while (v48);
LABEL_67:
        v52 = *v47;
        if (*v47 < **(float **)a3)
        {
          v46 = *(_BYTE **)(a3 + 8);
          goto LABEL_59;
        }
        if (v52 <= **(float **)(a3 + 16))
        {
          *v49 = (int)v52;
          v29 = (float *)((char *)v29 + v44);
          v35 += v28;
          if (++v45 == v43)
            goto LABEL_78;
          continue;
        }
        v46 = *(_BYTE **)(a3 + 24);
LABEL_59:
        *v49 = *v46;
        v29 = (float *)((char *)v29 + v44);
        v35 += v28;
        if (++v45 == v43)
          goto LABEL_78;
      }
    }
    do
    {
      while (1)
      {
        while (1)
        {
          v53 = *v29;
          if (*v29 >= **(float **)a3)
            break;
          *v35 = **(_BYTE **)(a3 + 8);
          v35 += v28;
          v29 = (float *)((char *)v29 + v44);
          if (!--v43)
            goto LABEL_78;
        }
        if (v53 > **(float **)(a3 + 16))
          break;
        *v35 = (int)v53;
        v35 += v28;
        v29 = (float *)((char *)v29 + v44);
        if (!--v43)
          goto LABEL_78;
      }
      *v35 = **(_BYTE **)(a3 + 24);
      v35 += v28;
      v29 = (float *)((char *)v29 + v44);
      --v43;
    }
    while (v43);
  }
LABEL_78:
  if (v24 != 1)
  {
    do
    {
      while (1)
      {
        v55 = *v29;
        if (*v29 >= **(float **)a3)
          break;
        v54 = *(_BYTE **)(a3 + 8);
LABEL_81:
        *v35 = *v54;
        v35 += v27;
        v29 = (float *)((char *)v29 + v42);
        if (!--v41)
          goto LABEL_86;
      }
      if (v55 > **(float **)(a3 + 16))
      {
        v54 = *(_BYTE **)(a3 + 24);
        goto LABEL_81;
      }
      *v35 = (int)v55;
      v35 += v27;
      v29 = (float *)((char *)v29 + v42);
      --v41;
    }
    while (v41);
  }
LABEL_86:
  v56 = *v29;
  if (*v29 >= **(float **)a3)
  {
    if (v56 <= **(float **)(a3 + 16))
      v57 = (int)v56;
    else
      LOBYTE(v57) = **(_BYTE **)(a3 + 24);
  }
  else
  {
    LOBYTE(v57) = **(_BYTE **)(a3 + 8);
  }
  *v35 = v57;
LABEL_92:
  v58 = v61;
  v61 = 0;
  if (v58)
    (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
  result = v62;
  v62 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224342A68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224342ACC(uint64_t **a1, uint64_t a2)
{
  uint64_t *v2;
  double v3;
  float v4;
  double v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  int v10;
  double v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  _WORD *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  double v51;
  double v52;
  double v53;
  double v54;
  int v55;
  int v56;
  int v57;
  _WORD *v58;
  float *v59;
  int v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v2 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v3 = -3.40282347e38;
    if (*(double *)a2 >= -3.40282347e38)
      v3 = *(double *)a2;
    v4 = v3;
    v5 = 3.40282347e38;
    if (*(double *)(a2 + 8) <= 3.40282347e38)
      v5 = *(double *)(a2 + 8);
    v6 = v5;
    v8 = *v2;
    v7 = v2[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v12 = -65536;
    goto LABEL_14;
  }
  v6 = 1.0;
  v4 = 0.0;
  v8 = *v2;
  v7 = v2[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v9 = *(double *)(a2 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v10 = (int)v9;
  v11 = 65535.0;
  if (*(double *)(a2 + 32) <= 65535.0)
    v11 = *(double *)(a2 + 32);
  v12 = v10 | ((int)v11 << 16);
LABEL_14:
  v13 = (unsigned __int16)v12;
  v14 = HIWORD(v12);
  if (v4 == (float)(unsigned __int16)v12 && v6 == (float)HIWORD(v12))
    return sub_2243431A4(v8, v7);
  v16 = *(_QWORD *)(v8 + 8);
  if (!v16)
    goto LABEL_35;
  v17 = *(std::__shared_weak_count **)(v8 + 16);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(v8 + 8);
    v21 = *(std::__shared_weak_count **)(v8 + 16);
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      do
        v24 = __ldaxr(v22);
      while (__stlxr(v24 - 1, v22));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  if (*(_BYTE *)(v8 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v16 + 96))(&v80, v16, 0);
    v25 = *(_QWORD *)(v7 + 8);
    if (!v25)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v80 = 0;
    v25 = *(_QWORD *)(v7 + 8);
    if (!v25)
      goto LABEL_51;
  }
  v27 = *(std::__shared_weak_count **)(v7 + 16);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v25 = *(_QWORD *)(v7 + 8);
    v31 = *(std::__shared_weak_count **)(v7 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  if (*(_BYTE *)(v7 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v25 + 96))(&v79, v25, 1);
    v35 = *(_DWORD *)(v8 + 32);
    if (!v35)
      goto LABEL_97;
    goto LABEL_52;
  }
LABEL_51:
  v79 = 0;
  v35 = *(_DWORD *)(v8 + 32);
  if (!v35)
    goto LABEL_97;
LABEL_52:
  v36 = *(_DWORD *)(v8 + 36);
  if (!v36)
    goto LABEL_97;
  v37 = *(unsigned int *)(v8 + 40);
  v38 = *(unsigned int *)(v7 + 40);
  v77 = *(unsigned int *)(v8 + 44);
  v78 = *(unsigned int *)(v7 + 44);
  v39 = *(float **)(v8 + 24);
  if (*(_BYTE *)(v8 + 48) && v39)
  {
    v40 = *(_QWORD *)(v8 + 8);
    v41 = *(std::__shared_weak_count **)(v8 + 16);
    if (v41)
    {
      v42 = (unint64_t *)&v41->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v40 + 88))(v40, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v39 = *(float **)(v8 + 24);
  }
  v45 = *(_WORD **)(v7 + 24);
  if (*(_BYTE *)(v7 + 48) && v45)
  {
    v46 = *(_QWORD *)(v7 + 8);
    v47 = *(std::__shared_weak_count **)(v7 + 16);
    if (v47)
    {
      v48 = (unint64_t *)&v47->__shared_owners_;
      do
        v49 = __ldxr(v48);
      while (__stxr(v49 + 1, v48));
      do
        v50 = __ldaxr(v48);
      while (__stlxr(v50 - 1, v48));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
        std::__shared_weak_count::__release_weak(v47);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v46 + 88))(v46, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v45 = *(_WORD **)(v7 + 24);
  }
  v51 = v4;
  v52 = (double)v13;
  v53 = 1.0 / (v6 - v4);
  v54 = (double)v14 - (double)v13;
  v55 = v35 - 1;
  v56 = v36 - 1;
  if (v36 == 1)
    goto LABEL_83;
  if (v35 != 1)
  {
    v57 = 0;
    do
    {
      v58 = v45;
      v59 = v39;
      v60 = v35 - 1;
      do
      {
        v61 = v53 * (*v59 - v51);
        v62 = fmax(v61, 0.0);
        if (v61 <= 1.0)
          v63 = v62;
        else
          v63 = 1.0;
        *v58 = llround(v54 * v63 + v52);
        v59 += v37;
        v58 += v38;
        --v60;
      }
      while (v60);
      v64 = v53 * (*v59 - v51);
      v65 = fmax(v64, 0.0);
      if (v64 <= 1.0)
        v66 = v65;
      else
        v66 = 1.0;
      *v58 = llround(v54 * v66 + v52);
      v39 += v77;
      v45 += v78;
      ++v57;
    }
    while (v57 != v56);
LABEL_83:
    if (v35 != 1)
    {
      do
      {
        v67 = v53 * (*v39 - v51);
        v68 = fmax(v67, 0.0);
        if (v67 <= 1.0)
          v69 = v68;
        else
          v69 = 1.0;
        *v45 = llround(v54 * v69 + v52);
        v39 += v37;
        v45 += v38;
        --v55;
      }
      while (v55);
    }
    goto LABEL_93;
  }
  do
  {
    v70 = v53 * (*v39 - v51);
    v71 = fmax(v70, 0.0);
    if (v70 <= 1.0)
      v72 = v71;
    else
      v72 = 1.0;
    *v45 = llround(v54 * v72 + v52);
    v39 += v77;
    v45 += v78;
    --v56;
  }
  while (v56);
LABEL_93:
  v73 = v53 * (*v39 - v51);
  v74 = fmax(v73, 0.0);
  if (v73 <= 1.0)
    v75 = v74;
  else
    v75 = 1.0;
  *v45 = llround(v54 * v75 + v52);
LABEL_97:
  v76 = v79;
  v79 = 0;
  if (v76)
    (*(void (**)(uint64_t))(*(_QWORD *)v76 + 8))(v76);
  result = v80;
  v80 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224343070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243430D4(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  _QWORD v11[4];
  uint64_t v12;
  __int16 v13;
  __int16 v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v14 = v8;
    v13 = (int)v9;
    *(float *)&v12 = (float)(int)v9;
    *((float *)&v12 + 1) = (float)v8;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 1199570688;
  }
  v11[0] = (char *)&v12 + 4;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_2243435F0(v4, v5, (uint64_t)v11);
}

uint64_t sub_224343198(uint64_t **a1)
{
  return sub_2243431A4(**a1, (*a1)[1]);
}

uint64_t sub_2243431A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  float *v44;
  int v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v49 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v49, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_33:
    v48 = 0;
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
LABEL_34:
    v23 = *(_DWORD *)(a1 + 36);
    if (!v23)
      goto LABEL_64;
    v24 = *(unsigned int *)(a1 + 40);
    v25 = *(unsigned int *)(a1 + 44);
    v26 = *(unsigned int *)(a2 + 40);
    v27 = *(unsigned int *)(a2 + 44);
    v28 = *(float **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(float **)(a1 + 24);
    }
    v34 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_WORD **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          *v34 = (int)*v28;
          v28 += v25;
          v34 += v27;
          --v41;
        }
        while (v41);
LABEL_63:
        *v34 = (int)*v28;
        goto LABEL_64;
      }
      v42 = 0;
      do
      {
        v43 = v34;
        v44 = v28;
        v45 = v22 - 1;
        do
        {
          *v43 = (int)*v44;
          v44 += v24;
          v43 += v26;
          --v45;
        }
        while (v45);
        *v43 = (int)*v44;
        v28 += v25;
        v34 += v27;
        ++v42;
      }
      while (v42 != v41);
    }
    if (v22 != 1)
    {
      do
      {
        *v34 = (int)*v28;
        v28 += v24;
        v34 += v26;
        --v40;
      }
      while (v40);
    }
    goto LABEL_63;
  }
LABEL_18:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_29;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  v13 = *(_QWORD *)(a2 + 8);
  v18 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v18)
    goto LABEL_29;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v48, v13, 1);
  v22 = *(_DWORD *)(a1 + 32);
  if (v22)
    goto LABEL_34;
LABEL_64:
  v46 = v48;
  v48 = 0;
  if (v46)
    (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
  result = v49;
  v49 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434358C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243435F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  float v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _WORD *v47;
  float *v48;
  uint64_t v49;
  _WORD *v50;
  int v51;
  _WORD *v52;
  float *v53;
  _WORD *v54;
  float *v55;
  int v56;
  _WORD *v57;
  int v58;
  float v59;
  float v60;
  _WORD *v61;
  float *v62;
  _WORD *v63;
  int v64;
  float v65;
  _WORD *v66;
  float *v67;
  _WORD *v68;
  int v69;
  float v70;
  float v71;
  int v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_97;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_97;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_97:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v77 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v77, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_33:
    v76 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_91;
    goto LABEL_34;
  }
LABEL_18:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_29;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v15 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v20)
    goto LABEL_29;
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (!v23)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  else
  {
LABEL_29:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_33;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v76, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_91;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_91;
  v26 = *(unsigned int *)(a1 + 44);
  v75 = *(unsigned int *)(a1 + 40);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(float **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(float **)(a1 + 24);
  }
  v35 = *(_WORD **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_WORD **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = v25 - 1;
  if (v25 == 1)
  {
    v43 = **(float **)a3;
    v49 = v75;
    goto LABEL_70;
  }
  v43 = **(float **)a3;
  v44 = 4 * v26;
  v45 = 2 * v28;
  if (v24 != 1)
  {
    v46 = 0;
    v48 = *(float **)(a3 + 16);
    v47 = *(_WORD **)(a3 + 24);
    v49 = v75;
    v50 = *(_WORD **)(a3 + 8);
    do
    {
      v53 = *(float **)(a3 + 16);
      v52 = *(_WORD **)(a3 + 24);
      v54 = v35;
      v55 = v29;
      v56 = v24 - 1;
      v57 = *(_WORD **)(a3 + 8);
      do
      {
        v59 = *v55;
        if (*v55 < v43)
        {
          LOWORD(v58) = *v57;
        }
        else if (v59 <= *v53)
        {
          v58 = (int)v59;
        }
        else
        {
          LOWORD(v58) = *v52;
        }
        *v54 = v58;
        v55 += v75;
        v54 += v27;
        --v56;
      }
      while (v56);
      v60 = *v55;
      if (*v55 < v43)
      {
        LOWORD(v51) = *v50;
      }
      else if (v60 <= *v48)
      {
        v51 = (int)v60;
      }
      else
      {
        LOWORD(v51) = *v47;
      }
      *v54 = v51;
      v29 = (float *)((char *)v29 + v44);
      v35 = (_WORD *)((char *)v35 + v45);
      ++v46;
    }
    while (v46 != v42);
LABEL_70:
    if (v24 != 1)
    {
      v62 = *(float **)(a3 + 16);
      v61 = *(_WORD **)(a3 + 24);
      v63 = *(_WORD **)(a3 + 8);
      do
      {
        v65 = *v29;
        if (*v29 < v43)
        {
          LOWORD(v64) = *v63;
        }
        else if (v65 <= *v62)
        {
          v64 = (int)v65;
        }
        else
        {
          LOWORD(v64) = *v61;
        }
        *v35 = v64;
        v29 += v49;
        v35 += v27;
        --v41;
      }
      while (v41);
    }
    goto LABEL_85;
  }
  v67 = *(float **)(a3 + 16);
  v66 = *(_WORD **)(a3 + 24);
  v68 = *(_WORD **)(a3 + 8);
  do
  {
    v70 = *v29;
    if (*v29 < v43)
    {
      LOWORD(v69) = *v68;
    }
    else if (v70 <= *v67)
    {
      v69 = (int)v70;
    }
    else
    {
      LOWORD(v69) = *v66;
    }
    *v35 = v69;
    v29 = (float *)((char *)v29 + v44);
    v35 = (_WORD *)((char *)v35 + v45);
    --v42;
  }
  while (v42);
LABEL_85:
  v71 = *v29;
  if (*v29 >= v43)
  {
    if (v71 <= **(float **)(a3 + 16))
      v72 = (int)v71;
    else
      LOWORD(v72) = **(_WORD **)(a3 + 24);
  }
  else
  {
    LOWORD(v72) = **(_WORD **)(a3 + 8);
  }
  *v35 = v72;
LABEL_91:
  v73 = v76;
  v76 = 0;
  if (v73)
    (*(void (**)(uint64_t))(*(_QWORD *)v73 + 8))(v73);
  result = v77;
  v77 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224343ADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224343B40(uint64_t **a1, uint64_t a2)
{
  uint64_t *v2;
  double v3;
  float v4;
  double v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  unsigned __int16 v14;
  double v15;
  unsigned int v17;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  float *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  _WORD *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  double v60;
  double v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  int v68;
  int v69;
  _WORD *v70;
  float *v71;
  int v72;
  double v73;
  double v74;
  double v75;
  double v77;
  double v78;
  double v79;
  double v81;
  double v82;
  double v83;
  double v85;
  double v86;
  double v87;
  double v89;
  double v90;
  double v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v2 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v3 = -3.40282347e38;
    if (*(double *)a2 >= -3.40282347e38)
      v3 = *(double *)a2;
    v4 = v3;
    v5 = 3.40282347e38;
    if (*(double *)(a2 + 8) <= 3.40282347e38)
      v5 = *(double *)(a2 + 8);
    v6 = v5;
    v8 = *v2;
    v7 = v2[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v17 = 1006632960;
    goto LABEL_14;
  }
  v6 = 1.0;
  v4 = 0.0;
  v8 = *v2;
  v7 = v2[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v9 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v9 = *(double *)(a2 + 24);
  _S0 = v9;
  __asm { FCVT            H0, S0 }
  v14 = LOWORD(_S0);
  v15 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v15 = *(double *)(a2 + 32);
  _S0 = v15;
  __asm { FCVT            H0, S0 }
  v17 = v14 | (LOWORD(_S0) << 16);
LABEL_14:
  _H10 = v17;
  _S11 = HIWORD(v17);
  __asm
  {
    FCVT            S0, H10
    FCVT            S1, H11
  }
  if (v4 == _S0 && v6 == _S1)
    return sub_224344260(v8, v7);
  v23 = *(_QWORD *)(v8 + 8);
  if (!v23)
    goto LABEL_35;
  v24 = *(std::__shared_weak_count **)(v8 + 16);
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldxr(p_shared_owners);
    while (__stxr(v26 + 1, p_shared_owners));
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
    v23 = *(_QWORD *)(v8 + 8);
    v28 = *(std::__shared_weak_count **)(v8 + 16);
    if (v28)
    {
      v29 = (unint64_t *)&v28->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      do
        v31 = __ldaxr(v29);
      while (__stlxr(v31 - 1, v29));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
  }
  if (*(_BYTE *)(v8 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v23 + 96))(&v95, v23, 0);
    v32 = *(_QWORD *)(v7 + 8);
    if (!v32)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v95 = 0;
    v32 = *(_QWORD *)(v7 + 8);
    if (!v32)
      goto LABEL_51;
  }
  v34 = *(std::__shared_weak_count **)(v7 + 16);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    do
      v37 = __ldaxr(v35);
    while (__stlxr(v37 - 1, v35));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
    v32 = *(_QWORD *)(v7 + 8);
    v38 = *(std::__shared_weak_count **)(v7 + 16);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v41 = __ldaxr(v39);
      while (__stlxr(v41 - 1, v39));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  if (*(_BYTE *)(v7 + 49))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v32 + 96))(&v94, v32, 1);
    v42 = *(_DWORD *)(v8 + 32);
    if (v42)
      goto LABEL_52;
    goto LABEL_97;
  }
LABEL_51:
  v94 = 0;
  v42 = *(_DWORD *)(v8 + 32);
  if (v42)
  {
LABEL_52:
    v43 = *(_DWORD *)(v8 + 36);
    if (v43)
    {
      v45 = *(unsigned int *)(v8 + 40);
      v44 = *(unsigned int *)(v8 + 44);
      v47 = *(unsigned int *)(v7 + 40);
      v46 = *(unsigned int *)(v7 + 44);
      v48 = *(float **)(v8 + 24);
      if (*(_BYTE *)(v8 + 48) && v48)
      {
        v49 = *(_QWORD *)(v8 + 8);
        v50 = *(std::__shared_weak_count **)(v8 + 16);
        if (v50)
        {
          v51 = (unint64_t *)&v50->__shared_owners_;
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v48 = *(float **)(v8 + 24);
      }
      v54 = *(_WORD **)(v7 + 24);
      if (*(_BYTE *)(v7 + 48) && v54)
      {
        v55 = *(_QWORD *)(v7 + 8);
        v56 = *(std::__shared_weak_count **)(v7 + 16);
        if (v56)
        {
          v57 = (unint64_t *)&v56->__shared_owners_;
          do
            v58 = __ldxr(v57);
          while (__stxr(v58 + 1, v57));
          do
            v59 = __ldaxr(v57);
          while (__stlxr(v59 - 1, v57));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v55 + 88))(v55, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v54 = *(_WORD **)(v7 + 24);
      }
      v60 = v4;
      __asm
      {
        FCVT            D0, H10
        FCVT            D2, H11
      }
      v63 = _D2 - _D0;
      v64 = v42 - 1;
      v65 = 4 * v45;
      v66 = 2 * v47;
      v67 = 1.0 / (v6 - v4);
      v68 = v43 - 1;
      if (v43 != 1)
      {
        if (v42 == 1)
        {
          do
          {
            v81 = v67 * (*v48 - v60);
            v82 = fmax(v81, 0.0);
            if (v81 <= 1.0)
              v83 = v82;
            else
              v83 = 1.0;
            _S6 = v63 * v83 + _D0;
            __asm { FCVT            H6, S6 }
            *v54 = LOWORD(_S6);
            v48 += v44;
            v54 += v46;
            --v68;
          }
          while (v68);
        }
        else
        {
          v69 = 0;
          do
          {
            v70 = v54;
            v71 = v48;
            v72 = v42 - 1;
            do
            {
              v73 = v67 * (*v71 - v60);
              v74 = fmax(v73, 0.0);
              if (v73 <= 1.0)
                v75 = v74;
              else
                v75 = 1.0;
              _S6 = v63 * v75 + _D0;
              __asm { FCVT            H6, S6 }
              *v70 = LOWORD(_S6);
              v71 = (float *)((char *)v71 + v65);
              v70 = (_WORD *)((char *)v70 + v66);
              --v72;
            }
            while (v72);
            v77 = v67 * (*v71 - v60);
            v78 = fmax(v77, 0.0);
            if (v77 <= 1.0)
              v79 = v78;
            else
              v79 = 1.0;
            _S6 = v63 * v79 + _D0;
            __asm { FCVT            H6, S6 }
            *v70 = LOWORD(_S6);
            v48 += v44;
            v54 += v46;
            ++v69;
          }
          while (v69 != v68);
        }
      }
      if (v42 != 1)
      {
        do
        {
          v85 = v67 * (*v48 - v60);
          v86 = fmax(v85, 0.0);
          if (v85 <= 1.0)
            v87 = v86;
          else
            v87 = 1.0;
          _S6 = v63 * v87 + _D0;
          __asm { FCVT            H6, S6 }
          *v54 = LOWORD(_S6);
          v48 = (float *)((char *)v48 + v65);
          v54 = (_WORD *)((char *)v54 + v66);
          --v64;
        }
        while (v64);
      }
      v89 = v67 * (*v48 - v60);
      v90 = fmax(v89, 0.0);
      if (v89 <= 1.0)
        v91 = v90;
      else
        v91 = 1.0;
      _S0 = v63 * v91 + _D0;
      __asm { FCVT            H0, S0 }
      *v54 = LOWORD(_S0);
    }
  }
LABEL_97:
  v93 = v94;
  v94 = 0;
  if (v93)
    (*(void (**)(uint64_t))(*(_QWORD *)v93 + 8))(v93);
  result = v95;
  v95 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434410C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224344170(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v14;
  _QWORD v19[4];
  int v20;
  int v21;
  __int16 v22;
  __int16 v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = -65504.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65504.0;
    if (v6 < -65504.0)
      v6 = -65504.0;
    _S0 = v6;
    __asm { FCVT            H0, S0 }
    if (v7 <= 65504.0)
      v14 = v7;
    else
      v14 = 65504.0;
    _S1 = v14;
    v23 = _H0;
    __asm { FCVT            H1, S1 }
    v22 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v20 = _S0;
    v21 = _S2;
  }
  else
  {
    v23 = -1025;
    v22 = 31743;
    v21 = -947920896;
    v20 = 1199562752;
  }
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_2243446A4(v4, v5, (uint64_t)v19);
}

uint64_t sub_224344254(uint64_t **a1)
{
  return sub_224344260(**a1, (*a1)[1]);
}

uint64_t sub_224344260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  _WORD *v45;
  int *v46;
  int v47;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_70;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_70;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_70:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v60 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v59, v13, 1);
    v22 = *(_DWORD *)(a1 + 32);
    if (!v22)
      goto LABEL_64;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v60, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v59 = 0;
  v22 = *(_DWORD *)(a1 + 32);
  if (!v22)
    goto LABEL_64;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v25 = *(unsigned int *)(a1 + 40);
    v24 = *(unsigned int *)(a1 + 44);
    v27 = *(unsigned int *)(a2 + 40);
    v26 = *(unsigned int *)(a2 + 44);
    v28 = *(int **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v28)
    {
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        v31 = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v28 = *(int **)(a1 + 24);
    }
    v34 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v34)
    {
      v35 = *(_QWORD *)(a2 + 8);
      v36 = *(std::__shared_weak_count **)(a2 + 16);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldxr(v37);
        while (__stxr(v38 + 1, v37));
        do
          v39 = __ldaxr(v37);
        while (__stlxr(v39 - 1, v37));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v34 = *(_WORD **)(a2 + 24);
    }
    v40 = v22 - 1;
    v41 = 4 * v25;
    v42 = 2 * v27;
    v43 = v23 - 1;
    if (v23 != 1)
    {
      if (v22 == 1)
      {
        do
        {
          _S0 = *v28;
          __asm { FCVT            H0, S0 }
          *v34 = _S0;
          v28 += v24;
          v34 += v26;
          --v43;
        }
        while (v43);
      }
      else
      {
        v44 = 0;
        do
        {
          v45 = v34;
          v46 = v28;
          v47 = v22 - 1;
          do
          {
            _S0 = *v46;
            __asm { FCVT            H0, S0 }
            *v45 = _S0;
            v46 = (int *)((char *)v46 + v41);
            v45 = (_WORD *)((char *)v45 + v42);
            --v47;
          }
          while (v47);
          _S0 = *v46;
          __asm { FCVT            H0, S0 }
          *v45 = _S0;
          v28 += v24;
          v34 += v26;
          ++v44;
        }
        while (v44 != v43);
      }
    }
    if (v22 != 1)
    {
      do
      {
        _S0 = *v28;
        __asm { FCVT            H0, S0 }
        *v34 = _S0;
        v28 = (int *)((char *)v28 + v41);
        v34 = (_WORD *)((char *)v34 + v42);
        --v40;
      }
      while (v40);
    }
    _S0 = *v28;
    __asm { FCVT            H0, S0 }
    *v34 = _S0;
  }
LABEL_64:
  v57 = v59;
  v59 = 0;
  if (v57)
    (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
  result = v60;
  v60 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224344640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243446A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _WORD *v48;
  _WORD *v49;
  float *v50;
  int v51;
  _WORD *v52;
  _WORD *v63;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_18;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_18:
    v72 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v72, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (!v15)
  {
LABEL_35:
    v71 = 0;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_92;
    goto LABEL_36;
  }
LABEL_19:
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_31;
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_31;
  }
  v21 = (unint64_t *)&v20->__shared_owners_;
  do
    v22 = __ldxr(v21);
  while (__stxr(v22 + 1, v21));
  do
    v23 = __ldaxr(v21);
  while (__stlxr(v23 - 1, v21));
  if (v23)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 49))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  if (!*(_BYTE *)(a2 + 49))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v71, v15, 1);
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_92;
LABEL_36:
  v25 = *(_DWORD *)(a1 + 36);
  if (!v25)
    goto LABEL_92;
  v26 = *(unsigned int *)(a1 + 40);
  v70 = *(unsigned int *)(a1 + 44);
  v27 = *(unsigned int *)(a2 + 40);
  v28 = *(unsigned int *)(a2 + 44);
  v29 = *(float **)(a1 + 24);
  if (*(_BYTE *)(a1 + 48) && v29)
  {
    v30 = *(_QWORD *)(a1 + 8);
    v31 = *(std::__shared_weak_count **)(a1 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v29 = *(float **)(a1 + 24);
  }
  v35 = *(_WORD **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v35)
  {
    v36 = *(_QWORD *)(a2 + 8);
    v37 = *(std::__shared_weak_count **)(a2 + 16);
    if (v37)
    {
      v38 = (unint64_t *)&v37->__shared_owners_;
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 1, v38));
      do
        v40 = __ldaxr(v38);
      while (__stlxr(v40 - 1, v38));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v35 = *(_WORD **)(a2 + 24);
  }
  v41 = v24 - 1;
  v42 = 4 * v26;
  v43 = 2 * v27;
  v44 = v25 - 1;
  if (v25 != 1)
  {
    v45 = 4 * v70;
    v46 = 2 * v28;
    if (v24 != 1)
    {
      v47 = 0;
      while (1)
      {
        v49 = v35;
        v50 = v29;
        v51 = v24 - 1;
        do
        {
          while (1)
          {
            _S0 = *v50;
            if (*v50 >= **(float **)a3)
              break;
            v52 = *(_WORD **)(a3 + 8);
LABEL_62:
            *v49 = *v52;
            v50 = (float *)((char *)v50 + v42);
            v49 = (_WORD *)((char *)v49 + v43);
            if (!--v51)
              goto LABEL_67;
          }
          if (_S0 > **(float **)(a3 + 16))
          {
            v52 = *(_WORD **)(a3 + 24);
            goto LABEL_62;
          }
          __asm { FCVT            H0, S0 }
          *v49 = _H0;
          v50 = (float *)((char *)v50 + v42);
          v49 = (_WORD *)((char *)v49 + v43);
          --v51;
        }
        while (v51);
LABEL_67:
        _S0 = *v50;
        if (*v50 < **(float **)a3)
        {
          v48 = *(_WORD **)(a3 + 8);
          goto LABEL_59;
        }
        if (_S0 <= **(float **)(a3 + 16))
        {
          __asm { FCVT            H0, S0 }
          *v49 = _H0;
          v29 = (float *)((char *)v29 + v45);
          v35 = (_WORD *)((char *)v35 + v46);
          if (++v47 == v44)
            goto LABEL_78;
          continue;
        }
        v48 = *(_WORD **)(a3 + 24);
LABEL_59:
        *v49 = *v48;
        v29 = (float *)((char *)v29 + v45);
        v35 = (_WORD *)((char *)v35 + v46);
        if (++v47 == v44)
          goto LABEL_78;
      }
    }
    do
    {
      while (1)
      {
        while (1)
        {
          _S0 = *v29;
          if (*v29 >= **(float **)a3)
            break;
          *v35 = **(_WORD **)(a3 + 8);
          v29 = (float *)((char *)v29 + v45);
          v35 = (_WORD *)((char *)v35 + v46);
          if (!--v44)
            goto LABEL_78;
        }
        if (_S0 > **(float **)(a3 + 16))
          break;
        __asm { FCVT            H0, S0 }
        *v35 = _H0;
        v29 = (float *)((char *)v29 + v45);
        v35 = (_WORD *)((char *)v35 + v46);
        if (!--v44)
          goto LABEL_78;
      }
      *v35 = **(_WORD **)(a3 + 24);
      v29 = (float *)((char *)v29 + v45);
      v35 = (_WORD *)((char *)v35 + v46);
      --v44;
    }
    while (v44);
  }
LABEL_78:
  if (v24 != 1)
  {
    do
    {
      while (1)
      {
        _S0 = *v29;
        if (*v29 >= **(float **)a3)
          break;
        v63 = *(_WORD **)(a3 + 8);
LABEL_81:
        *v35 = *v63;
        v29 = (float *)((char *)v29 + v42);
        v35 = (_WORD *)((char *)v35 + v43);
        if (!--v41)
          goto LABEL_86;
      }
      if (_S0 > **(float **)(a3 + 16))
      {
        v63 = *(_WORD **)(a3 + 24);
        goto LABEL_81;
      }
      __asm { FCVT            H0, S0 }
      *v35 = _H0;
      v29 = (float *)((char *)v29 + v42);
      v35 = (_WORD *)((char *)v35 + v43);
      --v41;
    }
    while (v41);
  }
LABEL_86:
  _S0 = *v29;
  if (*v29 >= **(float **)a3)
  {
    if (_S0 <= **(float **)(a3 + 16))
      __asm { FCVT            H0, S0 }
    else
      _H0 = **(_WORD **)(a3 + 24);
  }
  else
  {
    _H0 = **(_WORD **)(a3 + 8);
  }
  *v35 = _H0;
LABEL_92:
  v68 = v71;
  v71 = 0;
  if (v68)
    (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
  result = v72;
  v72 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224344C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224344C74(int a1)
{
  __asm { BR              X10 }
}

void sub_224344CB8()
{
  uint64_t v0;
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  size_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  size_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  _BYTE *v56;
  int v57;
  int v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  int v63;
  int v64;
  int v65;
  char *v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  int v72;
  char *v73;
  int v74;
  unsigned __int8 *v75;
  char *v76;
  int v77;
  uint64_t v78;
  char *v79;
  size_t v80;
  unsigned __int8 *v81;
  unsigned __int8 v82;
  BOOL v83;
  uint64_t v84;
  uint64_t i;
  unsigned __int8 v86;
  int v87;
  char *v88;
  uint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  int v95;
  void *v96;
  char *v97;
  size_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  uint64_t v103;
  unint64_t *v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  uint64_t v107;
  unint64_t *v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  __int16 v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char *v121;
  char *v122;
  int v123;
  uint64_t v124;
  uint64_t (**v125)();
  uint64_t v126;
  std::__shared_weak_count *v127;
  unsigned int v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  __int16 v133;

  sub_224349050(v1 - 192, *(_QWORD *)v0, *(_DWORD *)(v0 + 16), *(_QWORD *)v0 + 56);
  v125 = &off_24EC73AA8;
  sub_2243499E4(v1 - 192, (uint64_t)&v126);
  v2 = *(std::__shared_weak_count **)(v1 - 176);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v5 = *(_QWORD *)v0;
  *(_QWORD *)(v1 - 192) = &off_24EC22B30;
  sub_22434A1C4((uint64_t)&v125, (uint64_t *)(v1 - 184));
  v6 = *(_QWORD *)(v1 - 184);
  if (!v6)
    goto LABEL_22;
  v7 = *(std::__shared_weak_count **)(v1 - 176);
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(v1 - 184);
    v11 = *(std::__shared_weak_count **)(v1 - 176);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (*(_BYTE *)(v1 - 119))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, 1);
    if (!*(_BYTE *)(v1 - 120))
      goto LABEL_31;
  }
  else
  {
LABEL_22:
    *(_QWORD *)(v1 - 96) = 0;
    if (!*(_BYTE *)(v1 - 120))
      goto LABEL_31;
  }
  if (*(_QWORD *)(v1 - 168))
  {
    v15 = *(_QWORD *)(v1 - 184);
    v16 = *(std::__shared_weak_count **)(v1 - 176);
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v15 + 88))(v15, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
LABEL_31:
  v20 = *(_QWORD *)(v5 + 8);
  if (!v20)
    goto LABEL_47;
  v21 = *(std::__shared_weak_count **)(v5 + 16);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(v5 + 8);
    v25 = *(std::__shared_weak_count **)(v5 + 16);
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
      do
        v28 = __ldaxr(v26);
      while (__stlxr(v28 - 1, v26));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  if (*(_BYTE *)(v5 + 73))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v20 + 96))(v20, 0);
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  else
  {
LABEL_47:
    *(_QWORD *)(v1 - 112) = 0;
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  if (*(_DWORD *)(v1 - 148) == 1)
  {
    v29 = (char *)*(unsigned int *)(v5 + 48);
    v30 = *(unsigned int *)(v1 - 144);
    v31 = *(unsigned int *)(v5 + 32);
    if ((_DWORD)v29 == (_DWORD)v30 && (_DWORD)v29 == (_DWORD)v31)
    {
      v32 = *(unsigned int *)(v5 + 52);
      v33 = *(unsigned int *)(v1 - 140);
      v34 = *(_DWORD *)(v5 + 36);
      v35 = (v34 * (_DWORD)v29);
      if ((_DWORD)v32 == (_DWORD)v33 && (_DWORD)v32 == (_DWORD)v35)
      {
        v36 = *(_DWORD *)(v5 + 40);
        v37 = *(char **)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v37)
        {
          v38 = *(_QWORD *)(v5 + 8);
          v39 = *(std::__shared_weak_count **)(v5 + 16);
          if (v39)
          {
            v40 = (unint64_t *)&v39->__shared_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            do
              v42 = __ldaxr(v40);
            while (__stlxr(v42 - 1, v40));
            if (!v42)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v38 + 88))(v38, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v37 = *(char **)(v5 + 24);
        }
        if (!(v36 * (_DWORD)v32) || v37)
        {
          if (!(v36 * (_DWORD)v32))
            goto LABEL_167;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_160;
        }
        v96 = *(void **)(v1 - 168);
        v97 = v37;
        v98 = (v36 * v32);
LABEL_166:
        memmove(v96, v97, v98);
        goto LABEL_167;
      }
      if (!(_DWORD)v29)
        goto LABEL_167;
      if (!v34)
        goto LABEL_167;
      v87 = *(_DWORD *)(v5 + 40);
      if (!v87)
        goto LABEL_167;
      v88 = *(char **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v88)
      {
        v89 = *(_QWORD *)(v5 + 8);
        v90 = *(std::__shared_weak_count **)(v5 + 16);
        if (v90)
        {
          v91 = (unint64_t *)&v90->__shared_owners_;
          do
            v92 = __ldxr(v91);
          while (__stxr(v92 + 1, v91));
          do
            v93 = __ldaxr(v91);
          while (__stlxr(v93 - 1, v91));
          if (!v93)
          {
            ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
            std::__shared_weak_count::__release_weak(v90);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v89 + 88))(v89, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v88 = *(char **)(v5 + 24);
      }
      v94 = *(char **)(v1 - 168);
      v95 = v87 - 1;
      if (!v95)
      {
LABEL_146:
        if (!(_DWORD)v35 || v88)
        {
          if (!(_DWORD)v35)
            goto LABEL_167;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_160;
        }
        v96 = v94;
        v97 = v88;
        v98 = v35;
        goto LABEL_166;
      }
      if (!(_DWORD)v35)
        goto LABEL_167;
      while (v88
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        memmove(v94, v88, v35);
        v88 += v32;
        v94 += v33;
        if (!--v95)
          goto LABEL_146;
      }
    }
    else
    {
      if (!(_DWORD)v31)
        goto LABEL_167;
      v64 = *(_DWORD *)(v5 + 36);
      if (!v64)
        goto LABEL_167;
      v65 = *(_DWORD *)(v5 + 40);
      if (!v65)
        goto LABEL_167;
      v119 = *(unsigned int *)(v5 + 52);
      v118 = *(unsigned int *)(v1 - 140);
      v66 = *(char **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v66)
      {
        v67 = *(_QWORD *)(v5 + 8);
        v68 = *(std::__shared_weak_count **)(v5 + 16);
        if (v68)
        {
          v69 = (unint64_t *)&v68->__shared_owners_;
          do
            v70 = __ldxr(v69);
          while (__stxr(v70 + 1, v69));
          do
            v71 = __ldaxr(v69);
          while (__stlxr(v71 - 1, v69));
          if (!v71)
          {
            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
            std::__shared_weak_count::__release_weak(v68);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v67 + 88))(v67, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v66 = *(char **)(v5 + 24);
      }
      v72 = v64 - 1;
      v73 = *(char **)(v1 - 168);
      v123 = v65 - 1;
      if (v65 == 1)
      {
LABEL_155:
        v99 = v73;
        if (v72)
        {
          while (v66
               || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            memmove(v99, v66, v31);
            v66 = &v29[(_QWORD)v66];
            v99 += v30;
            if (!--v72)
              goto LABEL_161;
          }
        }
        else
        {
LABEL_161:
          if (v66
            || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v96 = v99;
            v97 = v66;
            v98 = v31;
            goto LABEL_166;
          }
        }
      }
      else if (v64 == 1)
      {
        while (v66
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          memmove(v73, v66, v31);
          v66 += v119;
          v73 += v118;
          if (!--v123)
            goto LABEL_155;
        }
      }
      else
      {
        v74 = 0;
        v75 = (unsigned __int8 *)&qword_255795680;
        while (1)
        {
          v120 = v74;
          v76 = v66;
          v77 = 0;
          v121 = v73;
          v122 = v76;
          do
          {
            while (v76)
            {
              memmove(v73, v76, v31);
              v76 = &v29[(_QWORD)v76];
              v73 += v30;
              if (++v77 == v72)
                goto LABEL_104;
            }
            sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
            v78 = v30;
            v79 = v29;
            v80 = v31;
            v81 = v75;
            v82 = atomic_load(v75);
            if ((v82 & 1) == 0 && __cxa_guard_acquire((__guard *)v75))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release((__guard *)v75);
            }
            if (byte_255795670)
              v83 = byte_255795678 == 0;
            else
              v83 = 0;
            if (!v83)
            {
              v84 = qword_255795648;
              for (i = qword_255795650; v84 != i; v84 += 16)
                (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v84)(*(_QWORD *)(v84 + 8), "ptr != nullptr || size == 0", 27, "", 0);
            }
            v75 = v81;
            v86 = atomic_load(v81);
            if ((v86 & 1) == 0 && __cxa_guard_acquire((__guard *)v81))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release((__guard *)v81);
            }
            v31 = v80;
            v29 = v79;
            v30 = v78;
            v72 = v64 - 1;
            if (!byte_255795670)
              goto LABEL_160;
            qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, "", 0);
            memcpy(v73, 0, v31);
            v73 += v30;
            ++v77;
            v76 = v29;
          }
          while (v77 != v64 - 1);
          v76 = v29;
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            break;
          }
LABEL_104:
          memmove(v73, v76, v31);
          v66 = &v122[v119];
          v73 = &v121[v118];
          v74 = v120 + 1;
          if (v120 + 1 == v123)
            goto LABEL_155;
        }
      }
    }
LABEL_160:
    abort();
  }
LABEL_66:
  if (*(_DWORD *)(v5 + 32))
  {
    v43 = *(_DWORD *)(v5 + 36);
    if (v43)
    {
      v44 = *(_DWORD *)(v5 + 40);
      if (v44)
      {
        v45 = *(unsigned int *)(v5 + 48);
        v46 = *(unsigned int *)(v5 + 52);
        v47 = *(unsigned int *)(v1 - 144);
        v48 = *(unsigned int *)(v1 - 140);
        v49 = *(_BYTE **)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v49)
        {
          v50 = *(_QWORD *)(v5 + 8);
          v51 = *(std::__shared_weak_count **)(v5 + 16);
          if (v51)
          {
            v52 = (unint64_t *)&v51->__shared_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            do
              v54 = __ldaxr(v52);
            while (__stlxr(v54 - 1, v52));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v50 + 88))(v50, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v49 = *(_BYTE **)(v5 + 24);
        }
        v55 = v43 - 1;
        v56 = *(_BYTE **)(v1 - 168);
        v57 = v44 - 1;
        if (v44 != 1)
        {
          if (v43 == 1)
          {
            do
            {
              *v56 = *v49;
              v56[1] = v49[1];
              v56[2] = v49[2];
              v56[3] = v49[3];
              v49 += v46;
              v56 += v48;
              --v57;
            }
            while (v57);
          }
          else
          {
            v58 = 0;
            v59 = v56 + 3;
            v60 = v49 + 1;
            do
            {
              v61 = v60;
              v62 = v59;
              v63 = v43 - 1;
              do
              {
                *(v62 - 3) = *(v61 - 1);
                *(v62 - 2) = *v61;
                *(v62 - 1) = v61[1];
                *v62 = v61[2];
                v62 += v47;
                v61 += v45;
                --v63;
              }
              while (v63);
              *(v62 - 3) = *(v61 - 1);
              *(v62 - 2) = *v61;
              *(v62 - 1) = v61[1];
              *v62 = v61[2];
              v49 += v46;
              v56 += v48;
              ++v58;
              v59 += v48;
              v60 += v46;
            }
            while (v58 != v57);
          }
        }
        if (v43 != 1)
        {
          do
          {
            *v56 = *v49;
            v56[1] = v49[1];
            v56[2] = v49[2];
            v56[3] = v49[3];
            v49 += v45;
            v56 += v47;
            --v55;
          }
          while (v55);
        }
        *v56 = *v49;
        v56[1] = v49[1];
        v56[2] = v49[2];
        v56[3] = v49[3];
      }
    }
  }
LABEL_167:
  v100 = *(_QWORD *)(v1 - 112);
  *(_QWORD *)(v1 - 112) = 0;
  if (v100)
    (*(void (**)(uint64_t))(*(_QWORD *)v100 + 8))(v100);
  v101 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 96) = 0;
  if (v101)
    (*(void (**)(uint64_t))(*(_QWORD *)v101 + 8))(v101);
  v102 = *(std::__shared_weak_count **)(v1 - 176);
  v103 = v124;
  if (v102)
  {
    v104 = (unint64_t *)&v102->__shared_owners_;
    do
      v105 = __ldaxr(v104);
    while (__stlxr(v105 - 1, v104));
    if (!v105)
    {
      ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
      std::__shared_weak_count::__release_weak(v102);
      v103 = v124;
    }
  }
  *(_QWORD *)v103 = &off_24EC1F958;
  v107 = v126;
  v106 = v127;
  if (v127)
  {
    v108 = (unint64_t *)&v127->__shared_owners_;
    do
      v109 = __ldxr(v108);
    while (__stxr(v109 + 1, v108));
    v110 = v127;
  }
  else
  {
    v110 = 0;
  }
  v111 = v131;
  v112 = v132;
  if (v129)
    v113 = v128 | 0x100000000;
  else
    v113 = 0;
  v114 = v130;
  v115 = v133;
  *(_QWORD *)(v103 + 8) = v107;
  *(_QWORD *)(v103 + 16) = v106;
  *(_QWORD *)(v103 + 24) = v113;
  *(_QWORD *)(v103 + 32) = v111;
  *(_DWORD *)(v103 + 40) = v112;
  *(_QWORD *)(v103 + 48) = v114;
  *(_DWORD *)(v103 + 56) = 13;
  *(_WORD *)(v103 + 60) = v115;
  if (v110)
  {
    v116 = (unint64_t *)&v110->__shared_owners_;
    do
      v117 = __ldaxr(v116);
    while (__stlxr(v117 - 1, v116));
    if (!v117)
    {
      ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
      std::__shared_weak_count::__release_weak(v110);
    }
  }
}

void sub_224347AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::string *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20,uint64_t a21,int a22,__int16 a23,char a24,unsigned __int8 a25)
{
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  *(_DWORD *)(v25 - 192) = 32;
  *(_DWORD *)(v25 - 112) = 37;
  sub_2243348B0("Conversion from image of format ", (unsigned int *)(v25 - 112), (uint64_t)" to ", (unsigned int *)(v25 - 192), (uint64_t)" not supported");
  if ((a25 & 0x80u) == 0)
    v26 = &a20;
  else
    v26 = a20;
  if ((a25 & 0x80u) == 0)
    v27 = a25;
  else
    v27 = a21;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v26, v27, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a20);
  abort();
}

void sub_224348AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = *(_QWORD *)(v25 - 192);
  *(_QWORD *)(v25 - 192) = 0;
  if (v27)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    v28 = a19;
    if (!a19)
    {
LABEL_3:
      v29 = *(_QWORD *)(v25 - 96);
      *(_QWORD *)(v25 - 96) = 0;
      if (!v29)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v28 = a19;
    if (!a19)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  v29 = *(_QWORD *)(v25 - 96);
  *(_QWORD *)(v25 - 96) = 0;
  if (!v29)
  {
LABEL_4:
    sub_223167354(a18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  sub_223167354(a18);
  _Unwind_Resume(a1);
}

void sub_224348EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231E4D08(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_224348F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231EB9CC(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_224348F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231EDCDC(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_224348F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231EFEAC(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_224348FE8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224349050(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(37);
  v34 = &off_24EC731E8;
  sub_22434930C((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = v41;
  if (v38)
    v27 = v37 | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 37;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_2243492C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2243492E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2243492F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22434930C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_224349488(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 37);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224349464(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224349488(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243496B0(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224349650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243496B0(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224349728();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224349728()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791800);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791800))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F29A8();
    sub_22434992C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434992C((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557917E8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557917E8, &dword_22314D000);
          __cxa_guard_release(&qword_255791800);
          return &stru_2557917E8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557917E8;
}

void sub_224349878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791800);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791800);
  _Unwind_Resume(a1);
}

void sub_22434992C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2243499C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2243499E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_224349C68(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 13);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224349B3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224349B60(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224349BC8()
{
  return 13;
}

uint64_t sub_224349BD0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224349BD8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224349BEC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224349C68(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 13)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224349E90(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224349E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224349E90(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224349F08();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224349F08()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791820);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791820))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E5370();
    sub_22434A10C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434A10C((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791808, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791808, &dword_22314D000);
          __cxa_guard_release(&qword_255791820);
          return &stru_255791808;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791808;
}

void sub_22434A058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791820);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791820);
  _Unwind_Resume(a1);
}

void sub_22434A10C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22434A1A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22434A1C4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E5468(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22434A2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_22434A2CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_22434A448(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 25);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22434A424(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22434A448(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 25)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22434A670(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22434A610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434A670(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22434A6E8();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22434A6E8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791840);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791840))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EC034();
    sub_22434A8EC((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434A8EC((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791828, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791828, &dword_22314D000);
          __cxa_guard_release(&qword_255791840);
          return &stru_255791828;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791828;
}

void sub_22434A838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791840);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791840);
  _Unwind_Resume(a1);
}

void sub_22434A8EC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22434A988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22434A9A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_22434AB20(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 29);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22434AAFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22434AB20(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 29)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22434AD48(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22434ACE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434AD48(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22434ADC0();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22434ADC0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791860);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791860))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EE344();
    sub_22434AFC4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434AFC4((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791848, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791848, &dword_22314D000);
          __cxa_guard_release(&qword_255791860);
          return &stru_255791848;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791848;
}

void sub_22434AF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791860);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791860);
  _Unwind_Resume(a1);
}

void sub_22434AFC4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22434B060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22434B07C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_22434B1F8(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 33);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22434B1D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22434B1F8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22434B420(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22434B3C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434B420(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22434B498();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22434B498()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791880);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791880))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F0514();
    sub_22434B69C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434B69C((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791868, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791868, &dword_22314D000);
          __cxa_guard_release(&qword_255791880);
          return &stru_255791868;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791868;
}

void sub_22434B5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791880);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791880);
  _Unwind_Resume(a1);
}

void sub_22434B69C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22434B738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22434B754(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22434B8D0(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 38);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22434B8AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22434B8D0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22434BAF8(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22434BA98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434BAF8(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22434BB70();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22434BB70()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557918A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557918A0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231A5138();
    sub_22434BD74((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434BD74((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791888, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791888, &dword_22314D000);
          __cxa_guard_release(&qword_2557918A0);
          return &stru_255791888;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791888;
}

void sub_22434BCC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2557918A0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2557918A0);
  _Unwind_Resume(a1);
}

void sub_22434BD74(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22434BE10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434BE2C(uint64_t **a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  double v10;
  unsigned int v11;
  double v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  int v17;
  double v18;
  unsigned int v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  _WORD *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  int v62;
  uint64_t v63;
  int v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  _BYTE *v80;
  _WORD *v81;
  int v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    v12 = 255.0;
    if (*(double *)(a2 + 8) <= 255.0)
      v12 = *(double *)(a2 + 8);
    v13 = (int)v12;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v16 = *(double *)(a2 + 24);
      if (v16 < 0.0)
        v16 = 0.0;
      v17 = (int)v16;
      v18 = 65535.0;
      if (*(double *)(a2 + 32) <= 65535.0)
        v18 = *(double *)(a2 + 32);
      v19 = v17 | ((int)v18 << 16);
      v20 = HIWORD(v19);
      if (v11 != (unsigned __int16)v17)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v11 = 0;
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  LOWORD(v19) = 0;
  v20 = 0xFFFF;
  if (v11)
    goto LABEL_17;
LABEL_15:
  if (v20 == v13)
    return sub_22434CAE8(v15, v14);
LABEL_17:
  v22 = *(_QWORD *)(v15 + 8);
  if (!v22)
    goto LABEL_33;
  v23 = *(std::__shared_weak_count **)(v15 + 16);
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v25 = __ldxr(p_shared_owners);
    while (__stxr(v25 + 1, p_shared_owners));
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
    v22 = *(_QWORD *)(v15 + 8);
    v27 = *(std::__shared_weak_count **)(v15 + 16);
    if (v27)
    {
      v28 = (unint64_t *)&v27->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
      do
        v30 = __ldaxr(v28);
      while (__stlxr(v30 - 1, v28));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
  }
  if (*(_BYTE *)(v15 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v22 + 96))(&v134, v22, 0);
    v31 = *(_QWORD *)(v14 + 8);
    if (!v31)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v134 = 0;
    v31 = *(_QWORD *)(v14 + 8);
    if (!v31)
      goto LABEL_49;
  }
  v32 = *(std::__shared_weak_count **)(v14 + 16);
  if (v32)
  {
    v33 = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
    v31 = *(_QWORD *)(v14 + 8);
    v36 = *(std::__shared_weak_count **)(v14 + 16);
    if (v36)
    {
      v37 = (unint64_t *)&v36->__shared_owners_;
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 1, v37));
      do
        v39 = __ldaxr(v37);
      while (__stlxr(v39 - 1, v37));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
  }
  if (!*(_BYTE *)(v14 + 73))
  {
LABEL_49:
    v133 = 0;
    if (*(_DWORD *)(v15 + 32))
      goto LABEL_50;
    goto LABEL_129;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v31 + 96))(&v133, v31, 1);
  if (*(_DWORD *)(v15 + 32))
  {
LABEL_50:
    v40 = *(_DWORD *)(v15 + 36);
    if (v40)
    {
      v41 = *(_DWORD *)(v15 + 40);
      if (v41)
      {
        v131 = v20;
        v132 = v13;
        v42 = *(unsigned int *)(v15 + 48);
        v43 = *(unsigned int *)(v15 + 52);
        v44 = *(unsigned int *)(v14 + 48);
        v129 = *(unsigned int *)(v14 + 52);
        v130 = v44;
        v45 = *(_BYTE **)(v15 + 24);
        if (*(_BYTE *)(v15 + 72) && v45)
        {
          v46 = *(_QWORD *)(v15 + 8);
          v47 = *(std::__shared_weak_count **)(v15 + 16);
          if (v47)
          {
            v48 = (unint64_t *)&v47->__shared_owners_;
            do
              v49 = __ldxr(v48);
            while (__stxr(v49 + 1, v48));
            do
              v50 = __ldaxr(v48);
            while (__stlxr(v50 - 1, v48));
            if (!v50)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v46 + 88))(v46, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v45 = *(_BYTE **)(v15 + 24);
          v44 = v130;
        }
        v51 = *(_WORD **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v51)
        {
          v52 = *(_QWORD *)(v14 + 8);
          v53 = *(std::__shared_weak_count **)(v14 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v52 + 88))(v52, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(_WORD **)(v14 + 24);
          v44 = v130;
        }
        v57 = (double)v11;
        v58 = (double)(unsigned __int16)v19;
        v59 = (double)v131;
        v60 = 1.0 / ((double)v132 - (double)v11);
        v61 = (double)v131 - v58;
        v62 = v40 - 1;
        v63 = 2 * v44;
        if (v41 != 1)
        {
          v64 = 0;
          v59 = 0.0;
          do
          {
            v80 = v45;
            v81 = v51;
            if (v40 != 1)
            {
              v82 = v40 - 1;
              v81 = v51;
              v80 = v45;
              do
              {
                LOBYTE(a9) = *v80;
                v83 = v60 * ((double)*(unint64_t *)&a9 - v57);
                v84 = fmax(v83, 0.0);
                if (v83 <= 1.0)
                  v85 = v84;
                else
                  v85 = 1.0;
                v86 = v61 * v85 + v58;
                *v81 = llround(v86);
                LOBYTE(v86) = v80[1];
                v87 = v60 * ((double)*(unint64_t *)&v86 - v57);
                v88 = fmax(v87, 0.0);
                if (v87 <= 1.0)
                  v89 = v88;
                else
                  v89 = 1.0;
                v90 = v61 * v89 + v58;
                v81[1] = llround(v90);
                LOBYTE(v90) = v80[2];
                v91 = v60 * ((double)*(unint64_t *)&v90 - v57);
                v92 = fmax(v91, 0.0);
                if (v91 <= 1.0)
                  v93 = v92;
                else
                  v93 = 1.0;
                v94 = v61 * v93 + v58;
                v81[2] = llround(v94);
                LOBYTE(v94) = v80[3];
                v95 = v60 * ((double)*(unint64_t *)&v94 - v57);
                v96 = fmax(v95, 0.0);
                if (v95 <= 1.0)
                  v97 = v96;
                else
                  v97 = 1.0;
                a9 = v61 * v97 + v58;
                v81[3] = llround(a9);
                v80 += v42;
                v81 = (_WORD *)((char *)v81 + v63);
                --v82;
              }
              while (v82);
            }
            LOBYTE(a9) = *v80;
            v65 = v60 * ((double)*(unint64_t *)&a9 - v57);
            v66 = fmax(v65, 0.0);
            if (v65 <= 1.0)
              v67 = v66;
            else
              v67 = 1.0;
            v68 = v61 * v67 + v58;
            *v81 = llround(v68);
            LOBYTE(v68) = v80[1];
            v69 = v60 * ((double)*(unint64_t *)&v68 - v57);
            v70 = fmax(v69, 0.0);
            if (v69 <= 1.0)
              v71 = v70;
            else
              v71 = 1.0;
            v72 = v61 * v71 + v58;
            v81[1] = llround(v72);
            LOBYTE(v72) = v80[2];
            v73 = v60 * ((double)*(unint64_t *)&v72 - v57);
            v74 = fmax(v73, 0.0);
            if (v73 <= 1.0)
              v75 = v74;
            else
              v75 = 1.0;
            v76 = v61 * v75 + v58;
            v81[2] = llround(v76);
            LOBYTE(v76) = v80[3];
            v77 = v60 * ((double)*(unint64_t *)&v76 - v57);
            v78 = fmax(v77, 0.0);
            if (v77 <= 1.0)
              v79 = v78;
            else
              v79 = 1.0;
            a9 = v61 * v79 + v58;
            v81[3] = llround(a9);
            v45 += v43;
            v51 += v129;
            ++v64;
          }
          while (v64 != v41 - 1);
        }
        if (v40 != 1)
        {
          v59 = 0.0;
          do
          {
            LOBYTE(a9) = *v45;
            v98 = v60 * ((double)*(unint64_t *)&a9 - v57);
            v99 = fmax(v98, 0.0);
            if (v98 <= 1.0)
              v100 = v99;
            else
              v100 = 1.0;
            v101 = v61 * v100 + v58;
            *v51 = llround(v101);
            LOBYTE(v101) = v45[1];
            v102 = v60 * ((double)*(unint64_t *)&v101 - v57);
            v103 = fmax(v102, 0.0);
            if (v102 <= 1.0)
              v104 = v103;
            else
              v104 = 1.0;
            v105 = v61 * v104 + v58;
            v51[1] = llround(v105);
            LOBYTE(v105) = v45[2];
            v106 = v60 * ((double)*(unint64_t *)&v105 - v57);
            v107 = fmax(v106, 0.0);
            if (v106 <= 1.0)
              v108 = v107;
            else
              v108 = 1.0;
            v109 = v61 * v108 + v58;
            v51[2] = llround(v109);
            LOBYTE(v109) = v45[3];
            v110 = v60 * ((double)*(unint64_t *)&v109 - v57);
            v111 = fmax(v110, 0.0);
            if (v110 <= 1.0)
              v112 = v111;
            else
              v112 = 1.0;
            a9 = v61 * v112 + v58;
            v51[3] = llround(a9);
            v45 += v42;
            v51 = (_WORD *)((char *)v51 + v63);
            --v62;
          }
          while (v62);
        }
        LOBYTE(v59) = *v45;
        v113 = v60 * ((double)*(unint64_t *)&v59 - v57);
        v114 = fmax(v113, 0.0);
        if (v113 <= 1.0)
          v115 = v114;
        else
          v115 = 1.0;
        v116 = v61 * v115 + v58;
        *v51 = llround(v116);
        LOBYTE(v116) = v45[1];
        v117 = v60 * ((double)*(unint64_t *)&v116 - v57);
        v118 = fmax(v117, 0.0);
        if (v117 <= 1.0)
          v119 = v118;
        else
          v119 = 1.0;
        v120 = v61 * v119 + v58;
        v51[1] = llround(v120);
        LOBYTE(v120) = v45[2];
        v121 = v60 * ((double)*(unint64_t *)&v120 - v57);
        v122 = fmax(v121, 0.0);
        if (v121 <= 1.0)
          v123 = v122;
        else
          v123 = 1.0;
        v124 = v61 * v123 + v58;
        v51[2] = llround(v124);
        LOBYTE(v124) = v45[3];
        v125 = v60 * ((double)*(unint64_t *)&v124 - v57);
        v126 = fmax(v125, 0.0);
        if (v125 <= 1.0)
          v127 = v126;
        else
          v127 = 1.0;
        v51[3] = llround(v61 * v127 + v58);
      }
    }
  }
LABEL_129:
  v128 = v133;
  v133 = 0;
  if (v128)
    (*(void (**)(uint64_t))(*(_QWORD *)v128 + 8))(v128);
  result = v134;
  v134 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434C59C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (!a14)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434C600(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  int v6;
  double v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];
  char v49;
  char v50;
  __int16 v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unsigned __int8 ***v56;
  _QWORD *v57;
  _BYTE v58[12];
  int v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  _OWORD v63[2];

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    LOWORD(v63[0]) = 0;
    LOBYTE(v48[0]) = 0;
LABEL_30:
    v57 = v48;
    *(_QWORD *)v58 = v63;
    return sub_22434D18C(v3, v2, (uint64_t)&v57);
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65535.0;
  if (v4 < 0.0)
    v4 = 0.0;
  v6 = (int)v4;
  if (v5 <= 65535.0)
    v7 = v5;
  else
    v7 = 65535.0;
  if ((int)v7 > 0xFF)
  {
    LOWORD(v63[0]) = v6;
    LOBYTE(v48[0]) = v6;
    goto LABEL_30;
  }
  v52 = v6;
  v51 = (int)v7;
  v50 = v6;
  v49 = (int)v7;
  v48[0] = &v50;
  v48[1] = &v52;
  v48[2] = &v49;
  v48[3] = &v51;
  v8 = *(_QWORD *)(v3 + 8);
  if (!v8)
    goto LABEL_32;
  v9 = *(std::__shared_weak_count **)(v3 + 16);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
    v8 = *(_QWORD *)(v3 + 8);
    v13 = *(std::__shared_weak_count **)(v3 + 16);
    if (v13)
    {
      v14 = (unint64_t *)&v13->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 96))(&v54, v8, 0);
    v17 = *(_QWORD *)(v2 + 8);
    if (!v17)
      goto LABEL_48;
  }
  else
  {
LABEL_32:
    v54 = 0;
    v17 = *(_QWORD *)(v2 + 8);
    if (!v17)
      goto LABEL_48;
  }
  v19 = *(std::__shared_weak_count **)(v2 + 16);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v17 = *(_QWORD *)(v2 + 8);
    v23 = *(std::__shared_weak_count **)(v2 + 16);
    if (v23)
    {
      v24 = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
      do
        v26 = __ldaxr(v24);
      while (__stlxr(v26 - 1, v24));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  if (!*(_BYTE *)(v2 + 73))
  {
LABEL_48:
    v53 = 0;
    v55 = v48;
    v27 = *(_DWORD *)(v3 + 32);
    if (v27)
      goto LABEL_49;
    goto LABEL_73;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v53, v17, 1);
  v55 = v48;
  v27 = *(_DWORD *)(v3 + 32);
  if (v27)
  {
LABEL_49:
    v28 = *(_DWORD *)(v3 + 36);
    if (v28)
    {
      v29 = *(_DWORD *)(v3 + 40);
      if (v29)
      {
        v56 = (unsigned __int8 ***)&v55;
        v57 = 0;
        *(_DWORD *)v58 = v27 - 1;
        v30 = *(unsigned int *)(v3 + 48);
        v31 = *(unsigned int *)(v2 + 48);
        *(_QWORD *)&v58[4] = *(unsigned int *)(v3 + 44) | ((unint64_t)*(unsigned int *)(v2 + 44) << 32);
        v59 = v28 - 1;
        v60 = v30 | (v31 << 32);
        v61 = v29 - 1;
        v62 = *(unsigned int *)(v3 + 52) | ((unint64_t)*(unsigned int *)(v2 + 52) << 32);
        v32 = *(unsigned __int8 **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v32)
        {
          v33 = *(_QWORD *)(v3 + 8);
          v34 = *(std::__shared_weak_count **)(v3 + 16);
          if (v34)
          {
            v35 = (unint64_t *)&v34->__shared_owners_;
            do
              v36 = __ldxr(v35);
            while (__stxr(v36 + 1, v35));
            do
              v37 = __ldaxr(v35);
            while (__stlxr(v37 - 1, v35));
            if (!v37)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v34);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v33 + 88))(v33, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v32 = *(unsigned __int8 **)(v3 + 24);
        }
        v38 = *(unsigned __int8 **)(v2 + 24);
        if (*(_BYTE *)(v2 + 72) && v38)
        {
          v39 = *(_QWORD *)(v2 + 8);
          v40 = *(std::__shared_weak_count **)(v2 + 16);
          if (v40)
          {
            v41 = (unint64_t *)&v40->__shared_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
            do
              v43 = __ldaxr(v41);
            while (__stlxr(v43 - 1, v41));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v40);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v39 + 88))(v39, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v38 = *(unsigned __int8 **)(v2 + 24);
        }
        memset(v63, 0, sizeof(v63));
        v44 = v61;
        if (v61)
        {
          v45 = v62;
          v46 = 2 * HIDWORD(v62);
          do
          {
            sub_22434CFA0(&v57, (unsigned __int8 **)v63, &v56, v32, v38);
            v32 += v45;
            v38 += v46;
            --v44;
          }
          while (v44);
        }
        sub_22434CFA0(&v57, (unsigned __int8 **)v63, &v56, v32, v38);
      }
    }
  }
LABEL_73:
  v47 = v53;
  v53 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v54;
  v54 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434CA78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (!a16)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434CADC(uint64_t **a1)
{
  return sub_22434CAE8(**a1, (*a1)[1]);
}

uint64_t sub_22434CAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  _WORD *v46;
  int v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v51 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v50, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v51, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v50 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v24 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(unsigned __int8 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(unsigned __int8 **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = *v28;
            v34[1] = v28[1];
            v34[2] = v28[2];
            v34[3] = v28[3];
            v28 += v25;
            v34 += v27;
            --v41;
          }
          while (v41);
LABEL_64:
          *v34 = *v28;
          v34[1] = v28[1];
          v34[2] = v28[2];
          v34[3] = v28[3];
          goto LABEL_65;
        }
        v42 = 0;
        v43 = v34 + 2;
        v44 = v28 + 1;
        do
        {
          v45 = v44;
          v46 = v43;
          v47 = v22 - 1;
          do
          {
            *(v46 - 2) = *(v45 - 1);
            *(v46 - 1) = *v45;
            *v46 = v45[1];
            v46[1] = v45[2];
            v46 += v26;
            v45 += v24;
            --v47;
          }
          while (v47);
          *(v46 - 2) = *(v45 - 1);
          *(v46 - 1) = *v45;
          *v46 = v45[1];
          v46[1] = v45[2];
          v28 += v25;
          v34 += v27;
          ++v42;
          v43 += v27;
          v44 += v25;
        }
        while (v42 != v41);
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = *v28;
          v34[1] = v28[1];
          v34[2] = v28[2];
          v34[3] = v28[3];
          v28 += v24;
          v34 += v26;
          --v40;
        }
        while (v40);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v48 = v50;
  v50 = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  result = v51;
  v51 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434CF3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22434CFA0(_DWORD *result, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, unsigned __int8 *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned __int8 *v13;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = result[6];
    v9 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LODWORD(v10) = *a4;
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_11;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_11:
      *(_WORD *)a5 = (_WORD)v10;
      LODWORD(v10) = a4[1];
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_16;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_16:
      *((_WORD *)a5 + 1) = (_WORD)v10;
      LODWORD(v10) = a4[2];
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_21;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_21:
      *((_WORD *)a5 + 2) = (_WORD)v10;
      LODWORD(v10) = a4[3];
      if (v10 < *v7)
      {
        v10 = v6[1];
      }
      else
      {
        if (v10 <= *v6[2])
          goto LABEL_5;
        v10 = v6[3];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_5:
      *((_WORD *)a5 + 3) = (_WORD)v10;
      a4 += v8;
      a5 += v9;
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  LODWORD(v11) = *a4;
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_29;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_29:
  *(_WORD *)a5 = (_WORD)v11;
  LODWORD(v11) = a4[1];
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_34;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_34:
  *((_WORD *)a5 + 1) = (_WORD)v11;
  LODWORD(v11) = a4[2];
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_39;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_39:
  *((_WORD *)a5 + 2) = (_WORD)v11;
  v12 = a4[3];
  if (v12 < *v7)
  {
    v13 = v6[1];
LABEL_43:
    LOWORD(v12) = *(_WORD *)v13;
    goto LABEL_44;
  }
  if (v12 > *v6[2])
  {
    v13 = v6[3];
    goto LABEL_43;
  }
LABEL_44:
  *((_WORD *)a5 + 3) = v12;
  return result;
}

uint64_t sub_22434D18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 ***v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = (unsigned __int8 ***)&v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(unsigned __int8 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(unsigned __int8 **)(a1 + 24);
      }
      v35 = *(unsigned __int8 **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(unsigned __int8 **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = v56;
        v43 = 2 * HIDWORD(v56);
        do
        {
          sub_22434D5AC(&v50, (unsigned __int8 **)v57, &v49, v29, v35);
          v29 += v42;
          v35 += v43;
          --v41;
        }
        while (v41);
      }
      sub_22434D5AC(&v50, (unsigned __int8 **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434D548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22434D5AC(_DWORD *result, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, unsigned __int8 *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = result[6];
    v9 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v10 = *a4;
      if (v10 < *v7)
      {
        *(_WORD *)a5 = *(_WORD *)v6[1];
        v11 = a4[1];
        if (v11 >= *v7)
        {
LABEL_6:
          *((_WORD *)a5 + 1) = v11;
          v12 = a4[2];
          if (v12 >= *v7)
            goto LABEL_7;
          goto LABEL_11;
        }
      }
      else
      {
        *(_WORD *)a5 = v10;
        v11 = a4[1];
        if (v11 >= *v7)
          goto LABEL_6;
      }
      *((_WORD *)a5 + 1) = *(_WORD *)v6[1];
      v12 = a4[2];
      if (v12 >= *v7)
      {
LABEL_7:
        *((_WORD *)a5 + 2) = v12;
        v13 = a4[3];
        if (v13 < *v7)
          goto LABEL_12;
        goto LABEL_3;
      }
LABEL_11:
      *((_WORD *)a5 + 2) = *(_WORD *)v6[1];
      v13 = a4[3];
      if (v13 < *v7)
LABEL_12:
        LOWORD(v13) = *(_WORD *)v6[1];
LABEL_3:
      *((_WORD *)a5 + 3) = v13;
      a4 += v8;
      a5 += v9;
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v14 = *a4;
  if (v14 < *v7)
  {
    *(_WORD *)a5 = *(_WORD *)v6[1];
    v15 = a4[1];
    if (v15 >= *v7)
    {
LABEL_15:
      *((_WORD *)a5 + 1) = v15;
      v16 = a4[2];
      if (v16 >= *v7)
        goto LABEL_16;
LABEL_20:
      *((_WORD *)a5 + 2) = *(_WORD *)v6[1];
      v17 = a4[3];
      if (v17 >= *v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_WORD *)a5 = v14;
    v15 = a4[1];
    if (v15 >= *v7)
      goto LABEL_15;
  }
  *((_WORD *)a5 + 1) = *(_WORD *)v6[1];
  v16 = a4[2];
  if (v16 < *v7)
    goto LABEL_20;
LABEL_16:
  *((_WORD *)a5 + 2) = v16;
  v17 = a4[3];
  if (v17 >= *v7)
  {
LABEL_17:
    *((_WORD *)a5 + 3) = v17;
    return result;
  }
LABEL_21:
  *((_WORD *)a5 + 3) = *(_WORD *)v6[1];
  return result;
}

void sub_22434D760(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22434D8DC(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 39);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22434D8B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22434D8DC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22434DB04(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22434DAA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434DB04(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22434DB7C();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22434DB7C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557918C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557918C0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F3B54();
    sub_22434DD80((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22434DD80((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557918A8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557918A8, &dword_22314D000);
          __cxa_guard_release(&qword_2557918C0);
          return &stru_2557918A8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557918A8;
}

void sub_22434DCCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2557918C0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2557918C0);
  _Unwind_Resume(a1);
}

void sub_22434DD80(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22434DE1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434DE38(uint64_t **a1, uint64_t a2, __n128 a3, __n128 _Q1, double a5, double a6, double a7, double a8, double _D6)
{
  uint64_t *v9;
  double v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unsigned __int16 v20;
  unsigned int v22;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  _WORD *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  double v63;
  double v66;
  double v67;
  int v68;
  uint64_t v69;
  int v70;
  double v71;
  double v72;
  double v73;
  double v75;
  double v76;
  double v77;
  double v79;
  double v80;
  double v81;
  double v83;
  double v84;
  double v85;
  _WORD *v86;
  _BYTE *v87;
  int v88;
  double v89;
  double v90;
  double v91;
  double v93;
  double v94;
  double v95;
  double v97;
  double v98;
  double v99;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v108;
  double v109;
  double v110;
  double v112;
  double v113;
  double v114;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v123;
  double v124;
  double v125;
  double v127;
  double v128;
  double v129;
  double v131;
  double v132;
  double v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    _Q1.n128_u64[0] = *(_QWORD *)(a2 + 8);
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    a3.n128_u64[0] = 0x406FE00000000000;
    if (_Q1.n128_f64[0] <= 255.0)
      a3.n128_u64[0] = *(_QWORD *)(a2 + 8);
    v12 = (int)a3.n128_f64[0];
    v14 = *v9;
    v13 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v22 = 1006632960;
    goto LABEL_14;
  }
  v11 = 0;
  v12 = 255;
  v14 = *v9;
  v13 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = -65504.0;
  _Q1.n128_u64[0] = *(_QWORD *)(a2 + 24);
  if (_Q1.n128_f64[0] >= -65504.0)
    v15 = *(double *)(a2 + 24);
  _S0 = v15;
  __asm { FCVT            H0, S0 }
  v20 = LOWORD(_S0);
  a3.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a2 + 32) <= 65504.0)
    a3.n128_u64[0] = *(_QWORD *)(a2 + 32);
  _S0 = a3.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v22 = v20 | (LOWORD(_S0) << 16);
LABEL_14:
  _H8 = v22;
  _S9 = HIWORD(v22);
  __asm { FCVT            S1, H8 }
  a3.n128_f32[0] = (float)v12;
  __asm { FCVT            S1, H9 }
  _ZF = _ZF && _Q1.n128_f32[0] == a3.n128_f32[0];
  if (_ZF)
    return sub_22434F53C(v14, v13, a3.n128_f32[0]);
  v27 = *(_QWORD *)(v14 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v28)
    goto LABEL_137;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(p_shared_owners);
  while (__stxr(v30 + 1, p_shared_owners));
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *, __n128, __n128))v28->__on_zero_shared)(v28, a3, _Q1);
    std::__shared_weak_count::__release_weak(v28);
  }
  v27 = *(_QWORD *)(v14 + 8);
  v32 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v32)
    goto LABEL_137;
  v33 = (unint64_t *)&v32->__shared_owners_;
  do
    v34 = __ldxr(v33);
  while (__stxr(v34 + 1, v33));
  do
    v35 = __ldaxr(v33);
  while (__stlxr(v35 - 1, v33));
  if (v35)
  {
LABEL_137:
    if (*(_BYTE *)(v14 + 73))
      goto LABEL_31;
LABEL_35:
    v139 = 0;
    v36 = *(_QWORD *)(v13 + 8);
    if (!v36)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *, __n128, __n128))v32->__on_zero_shared)(v32, a3, _Q1);
  std::__shared_weak_count::__release_weak(v32);
  if (!*(_BYTE *)(v14 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128, __n128))(*(_QWORD *)v27 + 96))(&v139, v27, 0, a3, _Q1);
  v36 = *(_QWORD *)(v13 + 8);
  if (!v36)
  {
LABEL_51:
    v138 = 0;
    if (*(_DWORD *)(v14 + 32))
      goto LABEL_52;
    goto LABEL_131;
  }
LABEL_36:
  v38 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v38)
    goto LABEL_47;
  v39 = (unint64_t *)&v38->__shared_owners_;
  do
    v40 = __ldxr(v39);
  while (__stxr(v40 + 1, v39));
  do
    v41 = __ldaxr(v39);
  while (__stlxr(v41 - 1, v39));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
  v36 = *(_QWORD *)(v13 + 8);
  v42 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v42)
    goto LABEL_47;
  v43 = (unint64_t *)&v42->__shared_owners_;
  do
    v44 = __ldxr(v43);
  while (__stxr(v44 + 1, v43));
  do
    v45 = __ldaxr(v43);
  while (__stlxr(v45 - 1, v43));
  if (!v45)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
    if (!*(_BYTE *)(v13 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v13 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v138, v36, 1);
  if (*(_DWORD *)(v14 + 32))
  {
LABEL_52:
    v46 = *(_DWORD *)(v14 + 36);
    if (v46)
    {
      v47 = *(_DWORD *)(v14 + 40);
      if (v47)
      {
        v48 = *(unsigned int *)(v14 + 48);
        v49 = *(unsigned int *)(v14 + 52);
        v50 = *(unsigned int *)(v13 + 48);
        v136 = *(unsigned int *)(v13 + 52);
        v137 = v50;
        v51 = *(_BYTE **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v51)
        {
          v52 = *(_QWORD *)(v14 + 8);
          v53 = *(std::__shared_weak_count **)(v14 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(_BYTE **)(v14 + 24);
          v50 = v137;
        }
        v57 = *(_WORD **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v57)
        {
          v58 = *(_QWORD *)(v13 + 8);
          v59 = *(std::__shared_weak_count **)(v13 + 16);
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldxr(v60);
            while (__stxr(v61 + 1, v60));
            do
              v62 = __ldaxr(v60);
            while (__stlxr(v62 - 1, v60));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v57 = *(_WORD **)(v13 + 24);
          v50 = v137;
        }
        v63 = (double)v11;
        __asm
        {
          FCVT            D0, H8
          FCVT            D4, H9
        }
        v66 = 1.0 / ((double)v12 - (double)v11);
        v67 = _D4 - _D0;
        v68 = v46 - 1;
        v69 = 2 * v50;
        if (v47 != 1)
        {
          v70 = 0;
          _D4 = 0.0;
          do
          {
            v86 = v57;
            v87 = v51;
            if (v46 != 1)
            {
              v86 = v57;
              v88 = v46 - 1;
              v87 = v51;
              do
              {
                LOBYTE(_D6) = *v87;
                v89 = v66 * ((double)*(unint64_t *)&_D6 - v63);
                v90 = fmax(v89, 0.0);
                if (v89 <= 1.0)
                  v91 = v90;
                else
                  v91 = 1.0;
                _D6 = v67 * v91 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                *v86 = LOWORD(_D6);
                LOBYTE(_D6) = v87[1];
                v93 = v66 * ((double)*(unint64_t *)&_D6 - v63);
                v94 = fmax(v93, 0.0);
                if (v93 <= 1.0)
                  v95 = v94;
                else
                  v95 = 1.0;
                _D6 = v67 * v95 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                v86[1] = LOWORD(_D6);
                LOBYTE(_D6) = v87[2];
                v97 = v66 * ((double)*(unint64_t *)&_D6 - v63);
                v98 = fmax(v97, 0.0);
                if (v97 <= 1.0)
                  v99 = v98;
                else
                  v99 = 1.0;
                _D6 = v67 * v99 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                v86[2] = LOWORD(_D6);
                LOBYTE(_D6) = v87[3];
                v101 = v66 * ((double)*(unint64_t *)&_D6 - v63);
                v102 = fmax(v101, 0.0);
                if (v101 <= 1.0)
                  v103 = v102;
                else
                  v103 = 1.0;
                _D6 = v67 * v103 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                v86[3] = LOWORD(_D6);
                v87 += v48;
                v86 = (_WORD *)((char *)v86 + v69);
                --v88;
              }
              while (v88);
            }
            LOBYTE(_D6) = *v87;
            v71 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v72 = fmax(v71, 0.0);
            if (v71 <= 1.0)
              v73 = v72;
            else
              v73 = 1.0;
            _D6 = v67 * v73 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v86 = LOWORD(_D6);
            LOBYTE(_D6) = v87[1];
            v75 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v76 = fmax(v75, 0.0);
            if (v75 <= 1.0)
              v77 = v76;
            else
              v77 = 1.0;
            _D6 = v67 * v77 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v86[1] = LOWORD(_D6);
            LOBYTE(_D6) = v87[2];
            v79 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v80 = fmax(v79, 0.0);
            if (v79 <= 1.0)
              v81 = v80;
            else
              v81 = 1.0;
            _D6 = v67 * v81 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v86[2] = LOWORD(_D6);
            LOBYTE(_D6) = v87[3];
            v83 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v84 = fmax(v83, 0.0);
            if (v83 <= 1.0)
              v85 = v84;
            else
              v85 = 1.0;
            _D6 = v67 * v85 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v86[3] = LOWORD(_D6);
            v51 += v49;
            v57 += v136;
            ++v70;
          }
          while (v70 != v47 - 1);
        }
        if (v46 != 1)
        {
          _D4 = 0.0;
          do
          {
            LOBYTE(_D6) = *v51;
            v104 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v105 = fmax(v104, 0.0);
            if (v104 <= 1.0)
              v106 = v105;
            else
              v106 = 1.0;
            _D6 = v67 * v106 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v57 = LOWORD(_D6);
            LOBYTE(_D6) = v51[1];
            v108 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v109 = fmax(v108, 0.0);
            if (v108 <= 1.0)
              v110 = v109;
            else
              v110 = 1.0;
            _D6 = v67 * v110 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v57[1] = LOWORD(_D6);
            LOBYTE(_D6) = v51[2];
            v112 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v113 = fmax(v112, 0.0);
            if (v112 <= 1.0)
              v114 = v113;
            else
              v114 = 1.0;
            _D6 = v67 * v114 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v57[2] = LOWORD(_D6);
            LOBYTE(_D6) = v51[3];
            v116 = v66 * ((double)*(unint64_t *)&_D6 - v63);
            v117 = fmax(v116, 0.0);
            if (v116 <= 1.0)
              v118 = v117;
            else
              v118 = 1.0;
            _D6 = v67 * v118 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v57[3] = LOWORD(_D6);
            v51 += v48;
            v57 = (_WORD *)((char *)v57 + v69);
            --v68;
          }
          while (v68);
        }
        LOBYTE(_D4) = *v51;
        v119 = v66 * ((double)*(unint64_t *)&_D4 - v63);
        v120 = fmax(v119, 0.0);
        if (v119 <= 1.0)
          v121 = v120;
        else
          v121 = 1.0;
        _D4 = v67 * v121 + _D0;
        *(float *)&_D4 = _D4;
        __asm { FCVT            H4, S4 }
        *v57 = LOWORD(_D4);
        LOBYTE(_D4) = v51[1];
        v123 = v66 * ((double)*(unint64_t *)&_D4 - v63);
        v124 = fmax(v123, 0.0);
        if (v123 <= 1.0)
          v125 = v124;
        else
          v125 = 1.0;
        _D4 = v67 * v125 + _D0;
        *(float *)&_D4 = _D4;
        __asm { FCVT            H4, S4 }
        v57[1] = LOWORD(_D4);
        LOBYTE(_D4) = v51[2];
        v127 = v66 * ((double)*(unint64_t *)&_D4 - v63);
        v128 = fmax(v127, 0.0);
        if (v127 <= 1.0)
          v129 = v128;
        else
          v129 = 1.0;
        _D4 = v67 * v129 + _D0;
        *(float *)&_D4 = _D4;
        __asm { FCVT            H4, S4 }
        v57[2] = LOWORD(_D4);
        LOBYTE(_D4) = v51[3];
        v131 = v66 * ((double)*(unint64_t *)&_D4 - v63);
        v132 = fmax(v131, 0.0);
        if (v131 <= 1.0)
          v133 = v132;
        else
          v133 = 1.0;
        _S0 = v67 * v133 + _D0;
        __asm { FCVT            H0, S0 }
        v57[3] = LOWORD(_S0);
      }
    }
  }
LABEL_131:
  v135 = v138;
  v138 = 0;
  if (v135)
    (*(void (**)(uint64_t))(*(_QWORD *)v135 + 8))(v135);
  result = v139;
  v139 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434E614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434E678(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  unsigned __int16 v12;
  unint64_t v14;
  uint64_t result;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _WORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  uint64_t v59;
  int v60;
  _WORD *v61;
  unsigned __int8 *v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  unsigned int v67;
  unsigned int v69;
  unsigned int v71;
  unsigned int v73;
  unint64_t v74;
  unsigned int v76;
  unsigned int v78;
  unsigned int v80;
  unint64_t v81;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  unint64_t v94;
  unsigned int v96;
  unsigned int v98;
  unsigned int v100;
  uint64_t v102;
  unsigned int v103;
  unint64_t v104;
  unsigned int v106;
  unsigned int v108;
  unsigned int v110;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 *v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  _WORD *v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *p_shared_owners;
  unint64_t v143;
  unint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  int v158;
  int v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 *v163;
  uint64_t v164;
  std::__shared_weak_count *v165;
  unint64_t *v166;
  unint64_t v167;
  unint64_t v168;
  _WORD *v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  __int16 *v182;
  char v183;
  __int16 v184;
  uint64_t v185;
  uint64_t v186;
  char **v187;
  char ***v188;
  uint64_t v189;
  int v190;
  unint64_t v191;
  int v192;
  uint64_t v193;
  int v194;
  unint64_t v195;
  __int128 v196;
  __int128 v197;

  v4 = **a1;
  v3 = (*a1)[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v5 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v5 = 0.0;
    v6 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v6 = 1.0;
    if (v5 < -65504.0)
      v5 = -65504.0;
    _S0 = v5;
    __asm { FCVT            H0, S0 }
    v12 = LOWORD(_S0);
    a3.n128_u64[0] = 0x40EFFC0000000000;
    if (v6 <= 65504.0)
      a3.n128_f64[0] = v6;
    _S0 = a3.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v14 = v12 | ((unint64_t)LOWORD(_S0) << 16);
  }
  else
  {
    v14 = 1006632960;
  }
  _H0 = v14;
  __asm { FCVT            S9, H0 }
  _H0 = WORD1(v14);
  __asm { FCVT            S8, H0 }
  a3.n128_u32[0] = 1132396544;
  if (_NF != _VF || _S8 > 255.0)
  {
    if (_S9 < 0.0)
    {
      a3.n128_u32[0] = 1132396544;
      if (_S8 > 255.0)
        return sub_22434F53C(**a1, v3, 255.0);
      v184 = WORD1(v14);
      v183 = (int)_S8;
      v181 = &v183;
      v182 = &v184;
      v140 = *(_QWORD *)(v4 + 8);
      if (!v140)
        goto LABEL_208;
      v141 = *(std::__shared_weak_count **)(v4 + 16);
      if (v141)
      {
        p_shared_owners = (unint64_t *)&v141->__shared_owners_;
        do
          v143 = __ldxr(p_shared_owners);
        while (__stxr(v143 + 1, p_shared_owners));
        do
          v144 = __ldaxr(p_shared_owners);
        while (__stlxr(v144 - 1, p_shared_owners));
        if (!v144)
        {
          ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
          std::__shared_weak_count::__release_weak(v141);
        }
        v140 = *(_QWORD *)(v4 + 8);
        v145 = *(std::__shared_weak_count **)(v4 + 16);
        if (v145)
        {
          v146 = (unint64_t *)&v145->__shared_owners_;
          do
            v147 = __ldxr(v146);
          while (__stxr(v147 + 1, v146));
          do
            v148 = __ldaxr(v146);
          while (__stlxr(v148 - 1, v146));
          if (!v148)
          {
            ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
            std::__shared_weak_count::__release_weak(v145);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v140 + 96))(&v186, v140, 0);
        v149 = *(_QWORD *)(v3 + 8);
        if (!v149)
          goto LABEL_223;
      }
      else
      {
LABEL_208:
        v186 = 0;
        v149 = *(_QWORD *)(v3 + 8);
        if (!v149)
          goto LABEL_223;
      }
      v150 = *(std::__shared_weak_count **)(v3 + 16);
      if (v150)
      {
        v151 = (unint64_t *)&v150->__shared_owners_;
        do
          v152 = __ldxr(v151);
        while (__stxr(v152 + 1, v151));
        do
          v153 = __ldaxr(v151);
        while (__stlxr(v153 - 1, v151));
        if (!v153)
        {
          ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
          std::__shared_weak_count::__release_weak(v150);
        }
        v149 = *(_QWORD *)(v3 + 8);
        v154 = *(std::__shared_weak_count **)(v3 + 16);
        if (v154)
        {
          v155 = (unint64_t *)&v154->__shared_owners_;
          do
            v156 = __ldxr(v155);
          while (__stxr(v156 + 1, v155));
          do
            v157 = __ldaxr(v155);
          while (__stlxr(v157 - 1, v155));
          if (!v157)
          {
            ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
            std::__shared_weak_count::__release_weak(v154);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v149 + 96))(&v185, v149, 1);
LABEL_224:
        v187 = &v181;
        v158 = *(_DWORD *)(v4 + 32);
        if (v158)
        {
          v159 = *(_DWORD *)(v4 + 36);
          if (v159)
          {
            v160 = *(_DWORD *)(v4 + 40);
            if (v160)
            {
              v188 = &v187;
              v189 = 0;
              v190 = v158 - 1;
              v161 = *(unsigned int *)(v4 + 48);
              v162 = *(unsigned int *)(v3 + 48);
              v191 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
              v192 = v159 - 1;
              v193 = v161 | (v162 << 32);
              v194 = v160 - 1;
              v195 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
              v163 = *(unsigned __int8 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v163)
              {
                v164 = *(_QWORD *)(v4 + 8);
                v165 = *(std::__shared_weak_count **)(v4 + 16);
                if (v165)
                {
                  v166 = (unint64_t *)&v165->__shared_owners_;
                  do
                    v167 = __ldxr(v166);
                  while (__stxr(v167 + 1, v166));
                  do
                    v168 = __ldaxr(v166);
                  while (__stlxr(v168 - 1, v166));
                  if (!v168)
                  {
                    ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
                    std::__shared_weak_count::__release_weak(v165);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v164 + 88))(v164, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v163 = *(unsigned __int8 **)(v4 + 24);
              }
              v169 = *(_WORD **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v169)
              {
                v170 = *(_QWORD *)(v3 + 8);
                v171 = *(std::__shared_weak_count **)(v3 + 16);
                if (v171)
                {
                  v172 = (unint64_t *)&v171->__shared_owners_;
                  do
                    v173 = __ldxr(v172);
                  while (__stxr(v173 + 1, v172));
                  do
                    v174 = __ldaxr(v172);
                  while (__stlxr(v174 - 1, v172));
                  if (!v174)
                  {
                    ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
                    std::__shared_weak_count::__release_weak(v171);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v170 + 88))(v170, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v169 = *(_WORD **)(v3 + 24);
              }
              v196 = 0u;
              v197 = 0u;
              v175 = v194;
              if (v194)
              {
                v176 = v195;
                v177 = 2 * HIDWORD(v195);
                do
                {
                  sub_22434FCAC(&v189, &v196, (unsigned __int8 ****)&v188, v163, v169);
                  v163 += v176;
                  v169 = (_WORD *)((char *)v169 + v177);
                  --v175;
                }
                while (v175);
              }
              a3.n128_u64[0] = sub_22434FCAC(&v189, &v196, (unsigned __int8 ****)&v188, v163, v169);
            }
          }
        }
        goto LABEL_249;
      }
LABEL_223:
      v185 = 0;
      goto LABEL_224;
    }
    v184 = v14;
    v183 = (int)_S9;
    v181 = &v183;
    v182 = &v184;
    v83 = *(_QWORD *)(v4 + 8);
    if (!v83)
      goto LABEL_151;
    v84 = *(std::__shared_weak_count **)(v4 + 16);
    if (v84)
    {
      v85 = (unint64_t *)&v84->__shared_owners_;
      do
        v86 = __ldxr(v85);
      while (__stxr(v86 + 1, v85));
      do
        v87 = __ldaxr(v85);
      while (__stlxr(v87 - 1, v85));
      if (!v87)
      {
        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
        std::__shared_weak_count::__release_weak(v84);
      }
      v83 = *(_QWORD *)(v4 + 8);
      v88 = *(std::__shared_weak_count **)(v4 + 16);
      if (v88)
      {
        v89 = (unint64_t *)&v88->__shared_owners_;
        do
          v90 = __ldxr(v89);
        while (__stxr(v90 + 1, v89));
        do
          v91 = __ldaxr(v89);
        while (__stlxr(v91 - 1, v89));
        if (!v91)
        {
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v83 + 96))(&v186, v83, 0);
      v92 = *(_QWORD *)(v3 + 8);
      if (!v92)
        goto LABEL_167;
    }
    else
    {
LABEL_151:
      v186 = 0;
      v92 = *(_QWORD *)(v3 + 8);
      if (!v92)
        goto LABEL_167;
    }
    v112 = *(std::__shared_weak_count **)(v3 + 16);
    if (v112)
    {
      v113 = (unint64_t *)&v112->__shared_owners_;
      do
        v114 = __ldxr(v113);
      while (__stxr(v114 + 1, v113));
      do
        v115 = __ldaxr(v113);
      while (__stlxr(v115 - 1, v113));
      if (!v115)
      {
        ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
        std::__shared_weak_count::__release_weak(v112);
      }
      v92 = *(_QWORD *)(v3 + 8);
      v116 = *(std::__shared_weak_count **)(v3 + 16);
      if (v116)
      {
        v117 = (unint64_t *)&v116->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v92 + 96))(&v185, v92, 1);
      v187 = &v181;
      v120 = *(_DWORD *)(v4 + 32);
      if (!v120)
        goto LABEL_249;
      goto LABEL_168;
    }
LABEL_167:
    v185 = 0;
    v187 = &v181;
    v120 = *(_DWORD *)(v4 + 32);
    if (!v120)
      goto LABEL_249;
LABEL_168:
    v121 = *(_DWORD *)(v4 + 36);
    if (v121)
    {
      v122 = *(_DWORD *)(v4 + 40);
      if (v122)
      {
        v188 = &v187;
        v189 = 0;
        v190 = v120 - 1;
        v123 = *(unsigned int *)(v4 + 48);
        v124 = *(unsigned int *)(v3 + 48);
        v191 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v192 = v121 - 1;
        v193 = v123 | (v124 << 32);
        v194 = v122 - 1;
        v195 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v125 = *(unsigned __int8 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v125)
        {
          v126 = *(_QWORD *)(v4 + 8);
          v127 = *(std::__shared_weak_count **)(v4 + 16);
          if (v127)
          {
            v128 = (unint64_t *)&v127->__shared_owners_;
            do
              v129 = __ldxr(v128);
            while (__stxr(v129 + 1, v128));
            do
              v130 = __ldaxr(v128);
            while (__stlxr(v130 - 1, v128));
            if (!v130)
            {
              ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
              std::__shared_weak_count::__release_weak(v127);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v126 + 88))(v126, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v125 = *(unsigned __int8 **)(v4 + 24);
        }
        v131 = *(_WORD **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v131)
        {
          v132 = *(_QWORD *)(v3 + 8);
          v133 = *(std::__shared_weak_count **)(v3 + 16);
          if (v133)
          {
            v134 = (unint64_t *)&v133->__shared_owners_;
            do
              v135 = __ldxr(v134);
            while (__stxr(v135 + 1, v134));
            do
              v136 = __ldaxr(v134);
            while (__stlxr(v136 - 1, v134));
            if (!v136)
            {
              ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
              std::__shared_weak_count::__release_weak(v133);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v132 + 88))(v132, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v131 = *(_WORD **)(v3 + 24);
        }
        v196 = 0u;
        v197 = 0u;
        v137 = v194;
        if (v194)
        {
          v138 = v195;
          v139 = 2 * HIDWORD(v195);
          do
          {
            sub_22434FA90(&v189, &v196, (unsigned __int8 ****)&v188, v125, v131);
            v125 += v138;
            v131 = (_WORD *)((char *)v131 + v139);
            --v137;
          }
          while (v137);
        }
        a3.n128_u64[0] = sub_22434FA90(&v189, &v196, (unsigned __int8 ****)&v188, v125, v131);
      }
    }
LABEL_249:
    v178 = v185;
    v185 = 0;
    if (v178)
      (*(void (**)(uint64_t, __n128))(*(_QWORD *)v178 + 8))(v178, a3);
    result = v186;
    v186 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
    return result;
  }
  v21 = *(_QWORD *)(v4 + 8);
  if (!v21)
    goto LABEL_36;
  v22 = *(std::__shared_weak_count **)(v4 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v21 = *(_QWORD *)(v4 + 8);
    v26 = *(std::__shared_weak_count **)(v4 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v21 + 96))(&v189, v21, 0);
    v30 = *(_QWORD *)(v3 + 8);
    if (!v30)
      goto LABEL_52;
  }
  else
  {
LABEL_36:
    v189 = 0;
    v30 = *(_QWORD *)(v3 + 8);
    if (!v30)
      goto LABEL_52;
  }
  v31 = *(std::__shared_weak_count **)(v3 + 16);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 1, v32));
    do
      v34 = __ldaxr(v32);
    while (__stlxr(v34 - 1, v32));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
    v30 = *(_QWORD *)(v3 + 8);
    v35 = *(std::__shared_weak_count **)(v3 + 16);
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      do
        v38 = __ldaxr(v36);
      while (__stlxr(v38 - 1, v36));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v30 + 96))(&v196, v30, 1);
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_133;
    goto LABEL_53;
  }
LABEL_52:
  *(_QWORD *)&v196 = 0;
  if (!*(_DWORD *)(v4 + 32))
    goto LABEL_133;
LABEL_53:
  v39 = *(_DWORD *)(v4 + 36);
  if (v39)
  {
    v40 = *(_DWORD *)(v4 + 40);
    if (v40)
    {
      v41 = *(unsigned int *)(v4 + 48);
      v42 = *(unsigned int *)(v4 + 52);
      v43 = *(unsigned int *)(v3 + 48);
      v179 = *(unsigned int *)(v3 + 52);
      v180 = v43;
      v44 = *(unsigned __int8 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v44)
      {
        v45 = *(_QWORD *)(v4 + 8);
        v46 = *(std::__shared_weak_count **)(v4 + 16);
        if (v46)
        {
          v47 = (unint64_t *)&v46->__shared_owners_;
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v44 = *(unsigned __int8 **)(v4 + 24);
        v43 = v180;
      }
      v50 = *(_WORD **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v50)
      {
        v51 = *(_QWORD *)(v3 + 8);
        v52 = *(std::__shared_weak_count **)(v3 + 16);
        if (v52)
        {
          v53 = (unint64_t *)&v52->__shared_owners_;
          do
            v54 = __ldxr(v53);
          while (__stxr(v54 + 1, v53));
          do
            v55 = __ldaxr(v53);
          while (__stlxr(v55 - 1, v53));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
            std::__shared_weak_count::__release_weak(v52);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v51 + 88))(v51, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v50 = *(_WORD **)(v3 + 24);
        v43 = v180;
      }
      v56 = (int)_S9;
      v57 = (int)_S8;
      v58 = v39 - 1;
      v59 = 2 * v43;
      if (v40 != 1)
      {
        v60 = 0;
        do
        {
          v61 = v50;
          v62 = v44;
          if (v39 != 1)
          {
            v61 = v50;
            v63 = v39 - 1;
            v62 = v44;
            do
            {
              v64 = *v62;
              LOWORD(v65) = v14;
              if (v64 >= v56)
              {
                v65 = v14 >> 16;
                if (v64 <= v57)
                {
                  _S0 = (float)v64;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              *v61 = v65;
              v67 = v62[1];
              LOWORD(v65) = v14;
              if (v67 >= v56)
              {
                v65 = v14 >> 16;
                if (v67 <= v57)
                {
                  _S0 = (float)v67;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              v61[1] = v65;
              v69 = v62[2];
              LOWORD(v65) = v14;
              if (v69 >= v56)
              {
                v65 = v14 >> 16;
                if (v69 <= v57)
                {
                  _S0 = (float)v69;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              v61[2] = v65;
              v71 = v62[3];
              LOWORD(v65) = v14;
              if (v71 >= v56)
              {
                v65 = v14 >> 16;
                if (v71 <= v57)
                {
                  _S0 = (float)v71;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              v61[3] = v65;
              v62 += v41;
              v61 = (_WORD *)((char *)v61 + v59);
              --v63;
            }
            while (v63);
          }
          v73 = *v62;
          LOWORD(v74) = v14;
          if (v73 >= v56)
          {
            v74 = v14 >> 16;
            if (v73 <= v57)
            {
              _S0 = (float)v73;
              __asm { FCVT            H0, S0 }
              LOWORD(v74) = LOWORD(_S0);
            }
          }
          *v61 = v74;
          v76 = v62[1];
          LOWORD(v74) = v14;
          if (v76 >= v56)
          {
            v74 = v14 >> 16;
            if (v76 <= v57)
            {
              _S0 = (float)v76;
              __asm { FCVT            H0, S0 }
              LOWORD(v74) = LOWORD(_S0);
            }
          }
          v61[1] = v74;
          v78 = v62[2];
          LOWORD(v74) = v14;
          if (v78 >= v56)
          {
            v74 = v14 >> 16;
            if (v78 <= v57)
            {
              _S0 = (float)v78;
              __asm { FCVT            H0, S0 }
              LOWORD(v74) = LOWORD(_S0);
            }
          }
          v61[2] = v74;
          v80 = v62[3];
          LOWORD(v81) = v14;
          if (v80 >= v56)
          {
            v81 = v14 >> 16;
            if (v80 <= v57)
            {
              _S0 = (float)v80;
              __asm { FCVT            H0, S0 }
              LOWORD(v81) = LOWORD(_S0);
            }
          }
          v61[3] = v81;
          v44 += v42;
          v50 += v179;
          ++v60;
        }
        while (v60 != v40 - 1);
      }
      if (v39 != 1)
      {
        do
        {
          v103 = *v44;
          LOWORD(v104) = v14;
          if (v103 >= v56)
          {
            v104 = v14 >> 16;
            if (v103 <= v57)
            {
              _S0 = (float)v103;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          *v50 = v104;
          v106 = v44[1];
          LOWORD(v104) = v14;
          if (v106 >= v56)
          {
            v104 = v14 >> 16;
            if (v106 <= v57)
            {
              _S0 = (float)v106;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          v50[1] = v104;
          v108 = v44[2];
          LOWORD(v104) = v14;
          if (v108 >= v56)
          {
            v104 = v14 >> 16;
            if (v108 <= v57)
            {
              _S0 = (float)v108;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          v50[2] = v104;
          v110 = v44[3];
          LOWORD(v104) = v14;
          if (v110 >= v56)
          {
            v104 = v14 >> 16;
            if (v110 <= v57)
            {
              _S0 = (float)v110;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          v50[3] = v104;
          v44 += v41;
          v50 = (_WORD *)((char *)v50 + v59);
          --v58;
        }
        while (v58);
      }
      v93 = *v44;
      LOWORD(v94) = v14;
      if (v93 >= v56)
      {
        v94 = v14 >> 16;
        if (v93 <= v57)
        {
          _S0 = (float)v93;
          __asm { FCVT            H0, S0 }
          LOWORD(v94) = LOWORD(_S0);
        }
      }
      *v50 = v94;
      v96 = v44[1];
      LOWORD(v94) = v14;
      if (v96 >= v56)
      {
        v94 = v14 >> 16;
        if (v96 <= v57)
        {
          _S0 = (float)v96;
          __asm { FCVT            H0, S0 }
          LOWORD(v94) = LOWORD(_S0);
        }
      }
      v50[1] = v94;
      v98 = v44[2];
      LOWORD(v94) = v14;
      if (v98 >= v56)
      {
        v94 = v14 >> 16;
        if (v98 <= v57)
        {
          _S0 = (float)v98;
          __asm { FCVT            H0, S0 }
          LOWORD(v94) = LOWORD(_S0);
        }
      }
      v50[2] = v94;
      v100 = v44[3];
      if (v100 >= v56)
      {
        v14 >>= 16;
        if (v100 <= v57)
        {
          _S0 = (float)v100;
          __asm { FCVT            H0, S0 }
          LOWORD(v14) = LOWORD(_S0);
        }
      }
      v50[3] = v14;
    }
  }
LABEL_133:
  v102 = v196;
  *(_QWORD *)&v196 = 0;
  if (v102)
    (*(void (**)(uint64_t))(*(_QWORD *)v102 + 8))(v102);
  result = v189;
  v189 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434F4AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a16)
    (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22434F530(uint64_t **a1, float a2)
{
  return sub_22434F53C(**a1, (*a1)[1], a2);
}

uint64_t sub_22434F53C(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  _WORD *v45;
  _BYTE *v46;
  _BYTE *v47;
  _WORD *v48;
  int v49;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v73 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v72, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v73, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v72 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_BYTE **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v28;
      v43 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOBYTE(_S0) = *v29;
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v35 = _S0;
            LOBYTE(_S0) = v29[1];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[1] = _S0;
            LOBYTE(_S0) = v29[2];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[2] = _S0;
            LOBYTE(_S0) = v29[3];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[3] = LOWORD(_S0);
            v29 += v26;
            v35 += v27;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v35 + 2;
          v46 = v29 + 1;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v23 - 1;
            do
            {
              LOBYTE(_S0) = *(v47 - 1);
              *(float *)&_S0 = (float)LODWORD(_S0);
              __asm { FCVT            H0, S0 }
              *(v48 - 2) = _S0;
              LOBYTE(_S0) = *v47;
              *(float *)&_S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *(v48 - 1) = _S0;
              LOBYTE(_S0) = v47[1];
              *(float *)&_S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *v48 = _S0;
              LOBYTE(_S0) = v47[2];
              _S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              v48[1] = LOWORD(_S0);
              v48 = (_WORD *)((char *)v48 + v42);
              v47 += v25;
              --v49;
            }
            while (v49);
            LOBYTE(_S0) = *(v47 - 1);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v48 - 2) = _S0;
            LOBYTE(_S0) = *v47;
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *(v48 - 1) = _S0;
            LOBYTE(_S0) = v47[1];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v48 = _S0;
            LOBYTE(_S0) = v47[2];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v48[1] = LOWORD(_S0);
            v29 += v26;
            v35 += v27;
            ++v44;
            v45 += v27;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOBYTE(_S0) = *v29;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = _S0;
          LOBYTE(_S0) = v29[1];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[1] = _S0;
          LOBYTE(_S0) = v29[2];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[2] = _S0;
          LOBYTE(_S0) = v29[3];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[3] = LOWORD(_S0);
          v29 += v25;
          v35 = (_WORD *)((char *)v35 + v42);
          --v41;
        }
        while (v41);
      }
      LOBYTE(_S0) = *v29;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v35 = _S0;
      LOBYTE(_S0) = v29[1];
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[1] = _S0;
      LOBYTE(_S0) = v29[2];
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[2] = _S0;
      LOBYTE(_S0) = v29[3];
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[3] = LOWORD(_S0);
    }
  }
LABEL_65:
  v70 = v72;
  v72 = 0;
  if (v70)
    (*(void (**)(uint64_t))(*(_QWORD *)v70 + 8))(v70);
  result = v73;
  v73 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22434FA2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_22434FA90@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v23;
  unsigned int v24;
  unsigned __int8 **v26;
  unsigned int v27;
  unsigned __int8 **v30;
  unsigned int v31;
  unsigned __int8 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int8 **v39;
  unsigned int v40;
  unsigned __int8 *v41;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 >= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int8 *)(*a2 + 3);
      if (v24 < **v23)
      {
        _H0 = *(_WORD *)v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int8 *)(*a2 + 1);
  if (v31 >= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int8 *)(*a2 + 2);
  if (v35 >= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int8 *)(*a2 + 3);
  if (v40 >= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *(_WORD *)v41;
    *(_WORD *)(v38 + 6) = *(_WORD *)v41;
  }
  return result;
}

__int16 sub_22434FCAC@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v23;
  unsigned int v24;
  unsigned __int8 **v26;
  unsigned int v27;
  unsigned __int8 **v30;
  unsigned int v31;
  unsigned __int8 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int8 **v39;
  unsigned int v40;
  unsigned __int8 *v41;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 <= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int8 *)(*a2 + 3);
      if (v24 > **v23)
      {
        _H0 = *(_WORD *)v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int8 *)(*a2 + 1);
  if (v31 <= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int8 *)(*a2 + 2);
  if (v35 <= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int8 *)(*a2 + 3);
  if (v40 <= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *(_WORD *)v41;
    *(_WORD *)(v38 + 6) = *(_WORD *)v41;
  }
  return result;
}

void sub_22434FEC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224350044(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 2) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 40);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224350020(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224350044(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22435026C(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22435020C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435026C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2243502E4();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_2243502E4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557918E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557918E0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F4418();
    sub_2243504E8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243504E8((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557918C8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557918C8, &dword_22314D000);
          __cxa_guard_release(&qword_2557918E0);
          return &stru_2557918C8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557918C8;
}

void sub_224350434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2557918E0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2557918E0);
  _Unwind_Resume(a1);
}

void sub_2243504E8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224350584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243505A0(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  float v17;
  double v18;
  float v19;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  float *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  double v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  unint64_t v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  double ****v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  _OWORD v84[2];

  v9 = *a1;
  v10 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 16))
  {
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    if ((float)v10 != 0.0 || 1.0 != (float)v13)
      goto LABEL_15;
    return sub_224351868(v15, v14, v17);
  }
  v11 = *(double *)a2;
  if (*(double *)a2 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a2 + 8) <= 255.0)
    v12 = *(double *)(a2 + 8);
  v13 = (int)v12;
  v15 = *v9;
  v14 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  if (v17 == (float)v10 && v19 == (float)v13)
    return sub_224351868(v15, v14, v17);
LABEL_15:
  v72 = (double)v10;
  v21 = 1.0;
  v22 = 1.0 / ((double)v13 - (double)v10);
  v70 = v17;
  v71 = v22;
  v23 = v19;
  a3.n128_f64[0] = v23 - v17;
  v69 = a3.n128_u64[0];
  v68[0] = &v72;
  v68[1] = &v71;
  v67[0] = &v70;
  v67[1] = &v69;
  v66[0] = v68;
  v66[1] = v67;
  v24 = *(_QWORD *)(v15 + 8);
  if (!v24)
    goto LABEL_38;
  v25 = *(std::__shared_weak_count **)(v15 + 16);
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    v24 = *(_QWORD *)(v15 + 8);
    v29 = *(std::__shared_weak_count **)(v15 + 16);
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      do
        v32 = __ldaxr(v30);
      while (__stlxr(v32 - 1, v30));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  if (*(_BYTE *)(v15 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v24 + 96))(&v74, v24, 0);
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v74 = 0;
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_54;
  }
  v36 = *(std::__shared_weak_count **)(v14 + 16);
  if (v36)
  {
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
    v33 = *(_QWORD *)(v14 + 8);
    v40 = *(std::__shared_weak_count **)(v14 + 16);
    if (v40)
    {
      v41 = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
      do
        v43 = __ldaxr(v41);
      while (__stlxr(v43 - 1, v41));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  if (!*(_BYTE *)(v14 + 73))
  {
LABEL_54:
    v73 = 0;
    v75 = v66;
    v44 = *(_DWORD *)(v15 + 32);
    if (v44)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v33 + 96))(&v73, v33, 1);
  v75 = v66;
  v44 = *(_DWORD *)(v15 + 32);
  if (v44)
  {
LABEL_55:
    v45 = *(_DWORD *)(v15 + 36);
    if (v45)
    {
      v46 = *(_DWORD *)(v15 + 40);
      if (v46)
      {
        v76 = (double ****)&v75;
        v77 = 0;
        v78 = v44 - 1;
        v47 = *(unsigned int *)(v15 + 48);
        v48 = *(unsigned int *)(v14 + 48);
        v79 = *(unsigned int *)(v15 + 44) | ((unint64_t)*(unsigned int *)(v14 + 44) << 32);
        v80 = v45 - 1;
        v81 = v47 | (v48 << 32);
        v82 = v46 - 1;
        v83 = *(unsigned int *)(v15 + 52) | ((unint64_t)*(unsigned int *)(v14 + 52) << 32);
        v49 = *(_BYTE **)(v15 + 24);
        if (*(_BYTE *)(v15 + 72) && v49)
        {
          v50 = *(_QWORD *)(v15 + 8);
          v51 = *(std::__shared_weak_count **)(v15 + 16);
          if (v51)
          {
            v52 = (unint64_t *)&v51->__shared_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            do
              v54 = __ldaxr(v52);
            while (__stlxr(v54 - 1, v52));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v50 + 88))(v50, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v49 = *(_BYTE **)(v15 + 24);
        }
        v55 = *(float **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v55)
        {
          v56 = *(_QWORD *)(v14 + 8);
          v57 = *(std::__shared_weak_count **)(v14 + 16);
          if (v57)
          {
            v58 = (unint64_t *)&v57->__shared_owners_;
            do
              v59 = __ldxr(v58);
            while (__stxr(v59 + 1, v58));
            do
              v60 = __ldaxr(v58);
            while (__stlxr(v60 - 1, v58));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
              std::__shared_weak_count::__release_weak(v57);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v56 + 88))(v56, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v55 = *(float **)(v14 + 24);
        }
        v61 = 0.0;
        memset(v84, 0, sizeof(v84));
        v62 = v82;
        if (v82)
        {
          v63 = v83;
          v64 = 4 * HIDWORD(v83);
          do
          {
            *(float *)&v61 = sub_224351D6C(&v77, v84, &v76, v49, v55, v61, v23, v22, v21, a7, a8, a9);
            v49 += v63;
            v55 = (float *)((char *)v55 + v64);
            --v62;
          }
          while (v62);
        }
        a3.n128_f32[0] = sub_224351D6C(&v77, v84, &v76, v49, v55, v61, v23, v22, v21, a7, a8, a9);
      }
    }
  }
LABEL_79:
  v65 = v73;
  v73 = 0;
  if (v65)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v65 + 8))(v65, a3);
  result = v74;
  v74 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224350A70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224350AD4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  float v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  float *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  float v53;
  unsigned int v54;
  float v55;
  unsigned int v56;
  float v57;
  unsigned int v58;
  float v59;
  unsigned __int8 *v60;
  float *v61;
  int v62;
  unsigned int v63;
  float v64;
  unsigned int v65;
  float v66;
  unsigned int v67;
  float v68;
  unsigned int v69;
  float v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unsigned int v81;
  float v82;
  unsigned int v83;
  float v84;
  unsigned int v85;
  float v86;
  unsigned int v87;
  float v88;
  unsigned int v89;
  float v90;
  unsigned int v91;
  float v92;
  unsigned int v93;
  float v94;
  unsigned int v95;
  float v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 *v111;
  uint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *p_shared_owners;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  std::__shared_weak_count *v140;
  unint64_t *v141;
  unint64_t v142;
  unint64_t v143;
  int v144;
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 *v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  std::__shared_weak_count *v157;
  unint64_t *v158;
  unint64_t v159;
  unint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  float *v166;
  char v167;
  float v168;
  uint64_t v169;
  uint64_t v170;
  char **v171;
  char ***v172;
  uint64_t v173;
  int v174;
  unint64_t v175;
  int v176;
  uint64_t v177;
  int v178;
  unint64_t v179;
  __int128 v180;
  __int128 v181;

  v4 = **a1;
  v3 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 1.0;
    v7 = 0.0;
    a3.n128_u32[0] = 1132396544;
    if (1.0 <= 255.0)
      goto LABEL_14;
LABEL_31:
    if (v7 < 0.0)
    {
      a3.n128_u32[0] = 1132396544;
      if (v8 > 255.0)
        return sub_224351868(**a1, v3, 255.0);
      v168 = v8;
      v167 = (int)v8;
      v165 = &v167;
      v166 = &v168;
      v126 = *(_QWORD *)(v4 + 8);
      if (!v126)
        goto LABEL_223;
      v127 = *(std::__shared_weak_count **)(v4 + 16);
      if (v127)
      {
        p_shared_owners = (unint64_t *)&v127->__shared_owners_;
        do
          v129 = __ldxr(p_shared_owners);
        while (__stxr(v129 + 1, p_shared_owners));
        do
          v130 = __ldaxr(p_shared_owners);
        while (__stlxr(v130 - 1, p_shared_owners));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = *(_QWORD *)(v4 + 8);
        v131 = *(std::__shared_weak_count **)(v4 + 16);
        if (v131)
        {
          v132 = (unint64_t *)&v131->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v126 + 96))(&v170, v126, 0);
        v135 = *(_QWORD *)(v3 + 8);
        if (!v135)
          goto LABEL_238;
      }
      else
      {
LABEL_223:
        v170 = 0;
        v135 = *(_QWORD *)(v3 + 8);
        if (!v135)
          goto LABEL_238;
      }
      v136 = *(std::__shared_weak_count **)(v3 + 16);
      if (v136)
      {
        v137 = (unint64_t *)&v136->__shared_owners_;
        do
          v138 = __ldxr(v137);
        while (__stxr(v138 + 1, v137));
        do
          v139 = __ldaxr(v137);
        while (__stlxr(v139 - 1, v137));
        if (!v139)
        {
          ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
          std::__shared_weak_count::__release_weak(v136);
        }
        v135 = *(_QWORD *)(v3 + 8);
        v140 = *(std::__shared_weak_count **)(v3 + 16);
        if (v140)
        {
          v141 = (unint64_t *)&v140->__shared_owners_;
          do
            v142 = __ldxr(v141);
          while (__stxr(v142 + 1, v141));
          do
            v143 = __ldaxr(v141);
          while (__stlxr(v143 - 1, v141));
          if (!v143)
          {
            ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
            std::__shared_weak_count::__release_weak(v140);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v135 + 96))(&v169, v135, 1);
LABEL_239:
        v171 = &v165;
        v144 = *(_DWORD *)(v4 + 32);
        if (v144)
        {
          v145 = *(_DWORD *)(v4 + 36);
          if (v145)
          {
            v146 = *(_DWORD *)(v4 + 40);
            if (v146)
            {
              v172 = &v171;
              v173 = 0;
              v174 = v144 - 1;
              v147 = *(unsigned int *)(v4 + 48);
              v148 = *(unsigned int *)(v3 + 48);
              v175 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
              v176 = v145 - 1;
              v177 = v147 | (v148 << 32);
              v178 = v146 - 1;
              v179 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
              v149 = *(unsigned __int8 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v149)
              {
                v150 = *(_QWORD *)(v4 + 8);
                v151 = *(std::__shared_weak_count **)(v4 + 16);
                if (v151)
                {
                  v152 = (unint64_t *)&v151->__shared_owners_;
                  do
                    v153 = __ldxr(v152);
                  while (__stxr(v153 + 1, v152));
                  do
                    v154 = __ldaxr(v152);
                  while (__stlxr(v154 - 1, v152));
                  if (!v154)
                  {
                    ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
                    std::__shared_weak_count::__release_weak(v151);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v150 + 88))(v150, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v149 = *(unsigned __int8 **)(v4 + 24);
              }
              v155 = *(_QWORD *)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v155)
              {
                v156 = *(_QWORD *)(v3 + 8);
                v157 = *(std::__shared_weak_count **)(v3 + 16);
                if (v157)
                {
                  v158 = (unint64_t *)&v157->__shared_owners_;
                  do
                    v159 = __ldxr(v158);
                  while (__stxr(v159 + 1, v158));
                  do
                    v160 = __ldaxr(v158);
                  while (__stlxr(v160 - 1, v158));
                  if (!v160)
                  {
                    ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
                    std::__shared_weak_count::__release_weak(v157);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v156 + 88))(v156, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v155 = *(_QWORD *)(v3 + 24);
              }
              v180 = 0u;
              v181 = 0u;
              v161 = v178;
              if (v178)
              {
                v162 = v179;
                v163 = 4 * HIDWORD(v179);
                do
                {
                  sub_224352120(&v173, (unsigned __int8 **)&v180, (unsigned __int8 ****)&v172, v149, v155);
                  v149 += v162;
                  v155 += v163;
                  --v161;
                }
                while (v161);
              }
              a3.n128_f32[0] = sub_224352120(&v173, (unsigned __int8 **)&v180, (unsigned __int8 ****)&v172, v149, v155);
            }
          }
        }
        goto LABEL_264;
      }
LABEL_238:
      v169 = 0;
      goto LABEL_239;
    }
    v168 = v7;
    v167 = (int)v7;
    v165 = &v167;
    v166 = &v168;
    v71 = *(_QWORD *)(v4 + 8);
    if (!v71)
      goto LABEL_166;
    v72 = *(std::__shared_weak_count **)(v4 + 16);
    if (v72)
    {
      v73 = (unint64_t *)&v72->__shared_owners_;
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 1, v73));
      do
        v75 = __ldaxr(v73);
      while (__stlxr(v75 - 1, v73));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
      v71 = *(_QWORD *)(v4 + 8);
      v76 = *(std::__shared_weak_count **)(v4 + 16);
      if (v76)
      {
        v77 = (unint64_t *)&v76->__shared_owners_;
        do
          v78 = __ldxr(v77);
        while (__stxr(v78 + 1, v77));
        do
          v79 = __ldaxr(v77);
        while (__stlxr(v79 - 1, v77));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
          std::__shared_weak_count::__release_weak(v76);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v170, v71, 0);
      v80 = *(_QWORD *)(v3 + 8);
      if (!v80)
        goto LABEL_182;
    }
    else
    {
LABEL_166:
      v170 = 0;
      v80 = *(_QWORD *)(v3 + 8);
      if (!v80)
        goto LABEL_182;
    }
    v98 = *(std::__shared_weak_count **)(v3 + 16);
    if (v98)
    {
      v99 = (unint64_t *)&v98->__shared_owners_;
      do
        v100 = __ldxr(v99);
      while (__stxr(v100 + 1, v99));
      do
        v101 = __ldaxr(v99);
      while (__stlxr(v101 - 1, v99));
      if (!v101)
      {
        ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
        std::__shared_weak_count::__release_weak(v98);
      }
      v80 = *(_QWORD *)(v3 + 8);
      v102 = *(std::__shared_weak_count **)(v3 + 16);
      if (v102)
      {
        v103 = (unint64_t *)&v102->__shared_owners_;
        do
          v104 = __ldxr(v103);
        while (__stxr(v104 + 1, v103));
        do
          v105 = __ldaxr(v103);
        while (__stlxr(v105 - 1, v103));
        if (!v105)
        {
          ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
          std::__shared_weak_count::__release_weak(v102);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v80 + 96))(&v169, v80, 1);
      v171 = &v165;
      v106 = *(_DWORD *)(v4 + 32);
      if (!v106)
        goto LABEL_264;
      goto LABEL_183;
    }
LABEL_182:
    v169 = 0;
    v171 = &v165;
    v106 = *(_DWORD *)(v4 + 32);
    if (!v106)
      goto LABEL_264;
LABEL_183:
    v107 = *(_DWORD *)(v4 + 36);
    if (v107)
    {
      v108 = *(_DWORD *)(v4 + 40);
      if (v108)
      {
        v172 = &v171;
        v173 = 0;
        v174 = v106 - 1;
        v109 = *(unsigned int *)(v4 + 48);
        v110 = *(unsigned int *)(v3 + 48);
        v175 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v176 = v107 - 1;
        v177 = v109 | (v110 << 32);
        v178 = v108 - 1;
        v179 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v111 = *(unsigned __int8 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v111)
        {
          v112 = *(_QWORD *)(v4 + 8);
          v113 = *(std::__shared_weak_count **)(v4 + 16);
          if (v113)
          {
            v114 = (unint64_t *)&v113->__shared_owners_;
            do
              v115 = __ldxr(v114);
            while (__stxr(v115 + 1, v114));
            do
              v116 = __ldaxr(v114);
            while (__stlxr(v116 - 1, v114));
            if (!v116)
            {
              ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
              std::__shared_weak_count::__release_weak(v113);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v112 + 88))(v112, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v111 = *(unsigned __int8 **)(v4 + 24);
        }
        v117 = *(_QWORD *)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v117)
        {
          v118 = *(_QWORD *)(v3 + 8);
          v119 = *(std::__shared_weak_count **)(v3 + 16);
          if (v119)
          {
            v120 = (unint64_t *)&v119->__shared_owners_;
            do
              v121 = __ldxr(v120);
            while (__stxr(v121 + 1, v120));
            do
              v122 = __ldaxr(v120);
            while (__stlxr(v122 - 1, v120));
            if (!v122)
            {
              ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
              std::__shared_weak_count::__release_weak(v119);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v118 + 88))(v118, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v117 = *(_QWORD *)(v3 + 24);
        }
        v180 = 0u;
        v181 = 0u;
        v123 = v178;
        if (v178)
        {
          v124 = v179;
          v125 = 4 * HIDWORD(v179);
          do
          {
            sub_224351F3C(&v173, (unsigned __int8 **)&v180, (unsigned __int8 ****)&v172, v111, v117);
            v111 += v124;
            v117 += v125;
            --v123;
          }
          while (v123);
        }
        a3.n128_f32[0] = sub_224351F3C(&v173, (unsigned __int8 **)&v180, (unsigned __int8 ****)&v172, v111, v117);
      }
    }
LABEL_264:
    v164 = v169;
    v169 = 0;
    if (v164)
      (*(void (**)(uint64_t, __n128))(*(_QWORD *)v164 + 8))(v164, a3);
    result = v170;
    v170 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
    return result;
  }
  v5 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v5 = 0.0;
  v6 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v6 = 1.0;
  if (v5 < -3.40282347e38)
    v5 = -3.40282347e38;
  v7 = v5;
  a3.n128_u64[0] = 0x47EFFFFFE0000000;
  if (v6 <= 3.40282347e38)
    a3.n128_f64[0] = v6;
  v8 = a3.n128_f64[0];
  a3.n128_u32[0] = 1132396544;
  if (v7 < 0.0 || v8 > 255.0)
    goto LABEL_31;
LABEL_14:
  v10 = *(_QWORD *)(v4 + 8);
  if (!v10)
    goto LABEL_34;
  v11 = *(std::__shared_weak_count **)(v4 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v4 + 8);
    v15 = *(std::__shared_weak_count **)(v4 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v173, v10, 0);
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_50;
  }
  else
  {
LABEL_34:
    v173 = 0;
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_50;
  }
  v21 = *(std::__shared_weak_count **)(v3 + 16);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v19 = *(_QWORD *)(v3 + 8);
    v25 = *(std::__shared_weak_count **)(v3 + 16);
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
      do
        v28 = __ldaxr(v26);
      while (__stlxr(v28 - 1, v26));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v180, v19, 1);
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_161;
    goto LABEL_51;
  }
LABEL_50:
  *(_QWORD *)&v180 = 0;
  if (!*(_DWORD *)(v4 + 32))
    goto LABEL_161;
LABEL_51:
  v29 = *(_DWORD *)(v4 + 36);
  if (v29)
  {
    v30 = *(_DWORD *)(v4 + 40);
    if (v30)
    {
      v31 = *(unsigned int *)(v4 + 48);
      v32 = *(unsigned int *)(v4 + 52);
      v34 = *(unsigned int *)(v3 + 48);
      v33 = *(unsigned int *)(v3 + 52);
      v35 = *(unsigned __int8 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v35)
      {
        v36 = *(_QWORD *)(v4 + 8);
        v37 = *(std::__shared_weak_count **)(v4 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(unsigned __int8 **)(v4 + 24);
      }
      v41 = *(float **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v41)
      {
        v42 = *(_QWORD *)(v3 + 8);
        v43 = *(std::__shared_weak_count **)(v3 + 16);
        if (v43)
        {
          v44 = (unint64_t *)&v43->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v42 + 88))(v42, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v41 = *(float **)(v3 + 24);
      }
      v47 = (int)v7;
      v48 = (int)v8;
      v49 = v29 - 1;
      v50 = 4 * v34;
      if (v30 != 1)
      {
        v51 = 0;
        do
        {
          v60 = v35;
          v61 = v41;
          if (v29 != 1)
          {
            v62 = v29 - 1;
            v61 = v41;
            v60 = v35;
            do
            {
              v63 = *v60;
              v64 = (float)v63;
              if (v63 > v48)
                v64 = v8;
              if (v63 < v47)
                v64 = v7;
              *v61 = v64;
              v65 = v60[1];
              v66 = (float)v65;
              if (v65 > v48)
                v66 = v8;
              if (v65 < v47)
                v66 = v7;
              v61[1] = v66;
              v67 = v60[2];
              v68 = (float)v67;
              if (v67 > v48)
                v68 = v8;
              if (v67 < v47)
                v68 = v7;
              v61[2] = v68;
              v69 = v60[3];
              v70 = (float)v69;
              if (v69 > v48)
                v70 = v8;
              if (v69 < v47)
                v70 = v7;
              v61[3] = v70;
              v60 += v31;
              v61 = (float *)((char *)v61 + v50);
              --v62;
            }
            while (v62);
          }
          v52 = *v60;
          v53 = (float)v52;
          if (v52 > v48)
            v53 = v8;
          if (v52 < v47)
            v53 = v7;
          *v61 = v53;
          v54 = v60[1];
          v55 = (float)v54;
          if (v54 > v48)
            v55 = v8;
          if (v54 < v47)
            v55 = v7;
          v61[1] = v55;
          v56 = v60[2];
          v57 = (float)v56;
          if (v56 > v48)
            v57 = v8;
          if (v56 < v47)
            v57 = v7;
          v61[2] = v57;
          v58 = v60[3];
          v59 = (float)v58;
          if (v58 > v48)
            v59 = v8;
          if (v58 < v47)
            v59 = v7;
          v61[3] = v59;
          v35 += v32;
          v41 += v33;
          ++v51;
        }
        while (v51 != v30 - 1);
      }
      if (v29 != 1)
      {
        do
        {
          v81 = *v35;
          v82 = (float)v81;
          if (v81 > v48)
            v82 = v8;
          if (v81 < v47)
            v82 = v7;
          *v41 = v82;
          v83 = v35[1];
          v84 = (float)v83;
          if (v83 > v48)
            v84 = v8;
          if (v83 < v47)
            v84 = v7;
          v41[1] = v84;
          v85 = v35[2];
          v86 = (float)v85;
          if (v85 > v48)
            v86 = v8;
          if (v85 < v47)
            v86 = v7;
          v41[2] = v86;
          v87 = v35[3];
          v88 = (float)v87;
          if (v87 > v48)
            v88 = v8;
          if (v87 < v47)
            v88 = v7;
          v41[3] = v88;
          v35 += v31;
          v41 = (float *)((char *)v41 + v50);
          --v49;
        }
        while (v49);
      }
      v89 = *v35;
      v90 = (float)v89;
      if (v89 > v48)
        v90 = v8;
      if (v89 < v47)
        v90 = v7;
      *v41 = v90;
      v91 = v35[1];
      v92 = (float)v91;
      if (v91 > v48)
        v92 = v8;
      if (v91 < v47)
        v92 = v7;
      v41[1] = v92;
      v93 = v35[2];
      v94 = (float)v93;
      if (v93 > v48)
        v94 = v8;
      if (v93 < v47)
        v94 = v7;
      v41[2] = v94;
      v95 = v35[3];
      v96 = (float)v95;
      if (v95 > v48)
        v96 = v8;
      if (v95 < v47)
        v96 = v7;
      v41[3] = v96;
    }
  }
LABEL_161:
  v97 = v180;
  *(_QWORD *)&v180 = 0;
  if (v97)
    (*(void (**)(uint64_t))(*(_QWORD *)v97 + 8))(v97);
  result = v173;
  v173 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243517D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a14)
    (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435185C(uint64_t **a1, float a2)
{
  return sub_224351868(**a1, (*a1)[1], a2);
}

uint64_t sub_224351868(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  float *v45;
  _BYTE *v46;
  _BYTE *v47;
  float *v48;
  int v49;
  float v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;
  float v59;
  float v60;
  float v61;
  float v62;
  float v63;
  float v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v68 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v67, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v68, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v67 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_BYTE **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 4 * v28;
      v43 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOBYTE(a3) = *v29;
            v56 = (float)LODWORD(a3);
            *v35 = v56;
            LOBYTE(v56) = v29[1];
            v57 = (float)LODWORD(v56);
            v35[1] = v57;
            LOBYTE(v57) = v29[2];
            v58 = (float)LODWORD(v57);
            v35[2] = v58;
            LOBYTE(v58) = v29[3];
            a3 = (float)LODWORD(v58);
            v35[3] = a3;
            v29 += v26;
            v35 += v27;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v35 + 2;
          v46 = v29 + 1;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v23 - 1;
            do
            {
              LOBYTE(a3) = *(v47 - 1);
              v50 = (float)LODWORD(a3);
              *(v48 - 2) = v50;
              LOBYTE(v50) = *v47;
              v51 = (float)LODWORD(v50);
              *(v48 - 1) = v51;
              LOBYTE(v51) = v47[1];
              v52 = (float)LODWORD(v51);
              *v48 = v52;
              LOBYTE(v52) = v47[2];
              a3 = (float)LODWORD(v52);
              v48[1] = a3;
              v48 = (float *)((char *)v48 + v42);
              v47 += v25;
              --v49;
            }
            while (v49);
            LOBYTE(a3) = *(v47 - 1);
            v53 = (float)LODWORD(a3);
            *(v48 - 2) = v53;
            LOBYTE(v53) = *v47;
            v54 = (float)LODWORD(v53);
            *(v48 - 1) = v54;
            LOBYTE(v54) = v47[1];
            v55 = (float)LODWORD(v54);
            *v48 = v55;
            LOBYTE(v55) = v47[2];
            a3 = (float)LODWORD(v55);
            v48[1] = a3;
            v29 += v26;
            v35 += v27;
            ++v44;
            v45 += v27;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOBYTE(a3) = *v29;
          v59 = (float)LODWORD(a3);
          *v35 = v59;
          LOBYTE(v59) = v29[1];
          v60 = (float)LODWORD(v59);
          v35[1] = v60;
          LOBYTE(v60) = v29[2];
          v61 = (float)LODWORD(v60);
          v35[2] = v61;
          LOBYTE(v61) = v29[3];
          a3 = (float)LODWORD(v61);
          v35[3] = a3;
          v29 += v25;
          v35 = (float *)((char *)v35 + v42);
          --v41;
        }
        while (v41);
      }
      LOBYTE(a3) = *v29;
      v62 = (float)LODWORD(a3);
      *v35 = v62;
      LOBYTE(v62) = v29[1];
      v63 = (float)LODWORD(v62);
      v35[1] = v63;
      LOBYTE(v63) = v29[2];
      v64 = (float)LODWORD(v63);
      v35[2] = v64;
      LOBYTE(v64) = v29[3];
      v35[3] = (float)LODWORD(v64);
    }
  }
LABEL_65:
  v65 = v67;
  v67 = 0;
  if (v65)
    (*(void (**)(uint64_t))(*(_QWORD *)v65 + 8))(v65);
  result = v68;
  v68 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224351D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_224351D6C(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, float *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 4 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *(float *)&v25 = v25;
      *a5 = *(float *)&v25;
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v18 + v19 * v28;
      *(float *)&v29 = v29;
      a5[1] = *(float *)&v29;
      LOBYTE(v29) = a4[2];
      v30 = v17 * ((double)*(unint64_t *)&v29 - v16);
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      v33 = v18 + v19 * v32;
      *(float *)&v33 = v33;
      a5[2] = *(float *)&v33;
      LOBYTE(v33) = a4[3];
      v34 = v17 * ((double)*(unint64_t *)&v33 - v16);
      v35 = fmax(v34, 0.0);
      if (v34 <= 1.0)
        v36 = v35;
      else
        v36 = 1.0;
      a12 = v18 + v19 * v36;
      *(float *)&a12 = a12;
      a5[3] = *(float *)&a12;
      a4 += v20;
      a5 = (float *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v37 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  v40 = v18 + v19 * v39;
  *(float *)&v40 = v40;
  *a5 = *(float *)&v40;
  LOBYTE(v40) = a4[1];
  v41 = v17 * ((double)*(unint64_t *)&v40 - v16);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  v44 = v18 + v19 * v43;
  *(float *)&v44 = v44;
  a5[1] = *(float *)&v44;
  LOBYTE(v44) = a4[2];
  v45 = v17 * ((double)*(unint64_t *)&v44 - v16);
  v46 = fmax(v45, 0.0);
  if (v45 <= 1.0)
    v47 = v46;
  else
    v47 = 1.0;
  v48 = v18 + v19 * v47;
  *(float *)&v48 = v48;
  a5[2] = *(float *)&v48;
  LOBYTE(v48) = a4[3];
  v49 = v17 * ((double)*(unint64_t *)&v48 - v16);
  v50 = fmax(v49, 0.0);
  if (v49 <= 1.0)
    v51 = v50;
  else
    v51 = 1.0;
  result = v18 + v19 * v51;
  a5[3] = result;
  return result;
}

float sub_224351F3C(_DWORD *a1, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, uint64_t a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      *a2 = a4;
      a2[2] = (unsigned __int8 *)a5;
      v10 = *a4;
      if (v10 >= *v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 < *v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 >= *v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 < *v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 >= *v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 < *v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 >= *v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v14 = *a4;
  if (v14 >= *v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 >= *v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 >= *v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 >= *v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 >= *v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 < *v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 >= *v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

float sub_224352120(_DWORD *a1, unsigned __int8 **a2, unsigned __int8 ****a3, unsigned __int8 *a4, uint64_t a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      *a2 = a4;
      a2[2] = (unsigned __int8 *)a5;
      v10 = *a4;
      if (v10 <= *v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 > *v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 <= *v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 > *v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 <= *v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 > *v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 <= *v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 += v8;
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int8 *)a5;
  v14 = *a4;
  if (v14 <= *v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 <= *v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 <= *v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 <= *v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 <= *v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 > *v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 <= *v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

void sub_224352304(int a1)
{
  __asm { BR              X10 }
}

void sub_224352348()
{
  uint64_t v0;
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _WORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  _WORD *v57;
  int v58;
  int v59;
  _WORD *v60;
  _WORD *v61;
  _WORD *v62;
  _WORD *v63;
  int v64;
  int v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  char *v75;
  size_t v76;
  int v77;
  int v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unsigned __int8 v82;
  BOOL v83;
  uint64_t i;
  uint64_t v85;
  unsigned __int8 v86;
  BOOL v87;
  int v88;
  char *v89;
  uint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  int v96;
  char *v97;
  size_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  uint64_t v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  __int16 v121;
  unint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  char *v127;
  char *v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (**v132)();
  uint64_t v133;
  std::__shared_weak_count *v134;
  int v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  __int16 v140;

  sub_2243567C4(v1 - 192, *(_QWORD *)v0, *(_DWORD *)(v0 + 16), *(_QWORD *)v0 + 56);
  v132 = &off_24EC73BA0;
  sub_224356A88(v1 - 192, (uint64_t)&v133);
  v2 = *(std::__shared_weak_count **)(v1 - 176);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v5 = *(_QWORD *)v0;
  *(_QWORD *)(v1 - 192) = &off_24EC22C28;
  sub_22435726C((uint64_t)&v132, (uint64_t *)(v1 - 184));
  v6 = *(_QWORD *)(v1 - 184);
  if (!v6)
    goto LABEL_22;
  v7 = *(std::__shared_weak_count **)(v1 - 176);
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(v1 - 184);
    v11 = *(std::__shared_weak_count **)(v1 - 176);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (*(_BYTE *)(v1 - 119))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, 1);
    if (!*(_BYTE *)(v1 - 120))
      goto LABEL_31;
  }
  else
  {
LABEL_22:
    *(_QWORD *)(v1 - 96) = 0;
    if (!*(_BYTE *)(v1 - 120))
      goto LABEL_31;
  }
  if (*(_QWORD *)(v1 - 168))
  {
    v15 = *(_QWORD *)(v1 - 184);
    v16 = *(std::__shared_weak_count **)(v1 - 176);
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v15 + 88))(v15, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
LABEL_31:
  v20 = *(_QWORD *)(v5 + 8);
  if (!v20)
    goto LABEL_47;
  v21 = *(std::__shared_weak_count **)(v5 + 16);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(v5 + 8);
    v25 = *(std::__shared_weak_count **)(v5 + 16);
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
      do
        v28 = __ldaxr(v26);
      while (__stlxr(v28 - 1, v26));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  if (*(_BYTE *)(v5 + 73))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v20 + 96))(v20, 0);
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  else
  {
LABEL_47:
    *(_QWORD *)(v1 - 112) = 0;
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  if (*(_DWORD *)(v1 - 148) == 1)
  {
    v29 = *(unsigned int *)(v5 + 48);
    v30 = *(unsigned int *)(v1 - 144);
    v31 = *(unsigned int *)(v5 + 32);
    if ((_DWORD)v29 == (_DWORD)v30 && (_DWORD)v29 == (_DWORD)v31)
    {
      v32 = *(unsigned int *)(v5 + 52);
      v33 = *(unsigned int *)(v1 - 140);
      v34 = *(_DWORD *)(v5 + 36);
      v35 = (v34 * v29);
      if ((_DWORD)v32 == (_DWORD)v33 && (_DWORD)v32 == (_DWORD)v35)
      {
        v36 = *(_DWORD *)(v5 + 40);
        v37 = *(char **)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v37)
        {
          v38 = *(_QWORD *)(v5 + 8);
          v39 = *(std::__shared_weak_count **)(v5 + 16);
          if (v39)
          {
            v40 = (unint64_t *)&v39->__shared_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            do
              v42 = __ldaxr(v40);
            while (__stlxr(v42 - 1, v40));
            if (!v42)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v38 + 88))(v38, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v37 = *(char **)(v5 + 24);
        }
        v43 = (v36 * v32);
        if (!(_DWORD)v43 || v37)
        {
          if (!(_DWORD)v43)
            goto LABEL_167;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_160;
        }
        v97 = *(char **)(v1 - 168);
        v98 = 2 * v43;
        v99 = v37;
LABEL_166:
        memmove(v97, v99, v98);
        goto LABEL_167;
      }
      if (!(_DWORD)v29)
        goto LABEL_167;
      if (!v34)
        goto LABEL_167;
      v88 = *(_DWORD *)(v5 + 40);
      if (!v88)
        goto LABEL_167;
      v89 = *(char **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v89)
      {
        v90 = *(_QWORD *)(v5 + 8);
        v91 = *(std::__shared_weak_count **)(v5 + 16);
        if (v91)
        {
          v92 = (unint64_t *)&v91->__shared_owners_;
          do
            v93 = __ldxr(v92);
          while (__stxr(v93 + 1, v92));
          do
            v94 = __ldaxr(v92);
          while (__stlxr(v94 - 1, v92));
          if (!v94)
          {
            ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
            std::__shared_weak_count::__release_weak(v91);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v90 + 88))(v90, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v89 = *(char **)(v5 + 24);
      }
      v95 = *(char **)(v1 - 168);
      v96 = v88 - 1;
      if (v88 == 1)
      {
LABEL_146:
        if (!(_DWORD)v35 || v89)
        {
          if (!(_DWORD)v35)
            goto LABEL_167;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_160;
        }
        v97 = v95;
        v99 = v89;
        v98 = 2 * v35;
        goto LABEL_166;
      }
      if (!(_DWORD)v35)
        goto LABEL_167;
      while (v89
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        memmove(v95, v89, 2 * v35);
        v89 += 2 * v32;
        v95 += 2 * v33;
        if (!--v96)
          goto LABEL_146;
      }
    }
    else
    {
      if (!(_DWORD)v31)
        goto LABEL_167;
      v65 = *(_DWORD *)(v5 + 36);
      if (!v65)
        goto LABEL_167;
      v66 = *(_DWORD *)(v5 + 40);
      if (!v66)
        goto LABEL_167;
      v125 = *(unsigned int *)(v5 + 52);
      v124 = *(unsigned int *)(v1 - 140);
      v67 = *(char **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v67)
      {
        v68 = *(unsigned int *)(v5 + 48);
        v69 = *(_QWORD *)(v5 + 8);
        v70 = *(std::__shared_weak_count **)(v5 + 16);
        if (v70)
        {
          v71 = (unint64_t *)&v70->__shared_owners_;
          do
            v72 = __ldxr(v71);
          while (__stxr(v72 + 1, v71));
          do
            v73 = __ldaxr(v71);
          while (__stlxr(v73 - 1, v71));
          if (!v73)
          {
            ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
            std::__shared_weak_count::__release_weak(v70);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v69 + 88))(v69, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v67 = *(char **)(v5 + 24);
        v29 = v68;
      }
      v74 = v65 - 1;
      v75 = *(char **)(v1 - 168);
      v76 = 2 * v31;
      v129 = v66 - 1;
      if (v66 == 1)
      {
LABEL_155:
        if (v74)
        {
          v102 = 2 * v29;
          v103 = 2 * v30;
          while (1)
          {
            v104 = v67;
            if (!v67
              && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              break;
            }
            memmove(v75, v104, v76);
            v67 = &v104[v102];
            v75 += v103;
            if (!--v74)
              goto LABEL_161;
          }
        }
        else
        {
LABEL_161:
          v105 = v67;
          if (v67
            || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v97 = v75;
            v99 = v105;
            v98 = v76;
            goto LABEL_166;
          }
        }
      }
      else if (v74)
      {
        v77 = 0;
        v131 = 2 * v29;
        while (1)
        {
          v126 = v77;
          v78 = 0;
          v127 = v75;
          v128 = v67;
          v79 = v67;
          v80 = v75;
          do
          {
            while (v79)
            {
              memmove(v80, v79, v76);
              v79 += 2 * v29;
              v80 += 2 * v30;
              if (++v78 == v74)
                goto LABEL_102;
            }
            sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
            v81 = v29;
            v82 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v82 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (byte_255795670)
              v83 = byte_255795678 == 0;
            else
              v83 = 0;
            if (!v83)
            {
              v85 = qword_255795648;
              for (i = qword_255795650; v85 != i; v85 += 16)
                (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v85)(*(_QWORD *)(v85 + 8), "ptr != nullptr || size == 0", 27, "", 0);
            }
            v86 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v86 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (!byte_255795670)
              goto LABEL_160;
            v29 = v81;
            qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, "", 0);
            memcpy(v80, 0, v76);
            v80 += 2 * v30;
            ++v78;
            v79 = (char *)v131;
          }
          while (v78 != v74);
          v87 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          v79 = (char *)v131;
          if (v87)
            break;
LABEL_102:
          memmove(v80, v79, v76);
          v67 = &v128[2 * v125];
          v75 = &v127[2 * v124];
          v77 = v126 + 1;
          if (v126 + 1 == v129)
            goto LABEL_155;
        }
      }
      else
      {
        while (1)
        {
          v100 = v75;
          v101 = v67;
          if (!v67
            && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            break;
          }
          memmove(v100, v101, v76);
          v67 = &v101[2 * v125];
          v75 = &v100[2 * v124];
          if (!--v129)
            goto LABEL_155;
        }
      }
    }
LABEL_160:
    abort();
  }
LABEL_66:
  if (*(_DWORD *)(v5 + 32))
  {
    v44 = *(_DWORD *)(v5 + 36);
    if (v44)
    {
      v45 = *(_DWORD *)(v5 + 40);
      if (v45)
      {
        v46 = *(unsigned int *)(v5 + 48);
        v47 = *(unsigned int *)(v5 + 52);
        v48 = *(unsigned int *)(v1 - 144);
        v49 = *(unsigned int *)(v1 - 140);
        v50 = *(_WORD **)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v50)
        {
          v51 = *(_QWORD *)(v5 + 8);
          v52 = *(std::__shared_weak_count **)(v5 + 16);
          if (v52)
          {
            v53 = (unint64_t *)&v52->__shared_owners_;
            do
              v54 = __ldxr(v53);
            while (__stxr(v54 + 1, v53));
            do
              v55 = __ldaxr(v53);
            while (__stlxr(v55 - 1, v53));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
              std::__shared_weak_count::__release_weak(v52);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v51 + 88))(v51, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v50 = *(_WORD **)(v5 + 24);
        }
        v56 = v44 - 1;
        v57 = *(_WORD **)(v1 - 168);
        v58 = v45 - 1;
        if (v45 != 1)
        {
          if (v44 == 1)
          {
            do
            {
              *v57 = *v50;
              v57[1] = v50[1];
              v57[2] = v50[2];
              v57[3] = v50[3];
              v50 += v47;
              v57 += v49;
              --v58;
            }
            while (v58);
LABEL_145:
            *v57 = *v50;
            v57[1] = v50[1];
            v57[2] = v50[2];
            v57[3] = v50[3];
            goto LABEL_167;
          }
          v59 = 0;
          v60 = v57 + 2;
          v61 = v50 + 2;
          do
          {
            v62 = v61;
            v63 = v60;
            v64 = v44 - 1;
            do
            {
              *(v63 - 2) = *(v62 - 2);
              *(v63 - 1) = *(v62 - 1);
              *v63 = *v62;
              v63[1] = v62[1];
              v63 += v48;
              v62 += v46;
              --v64;
            }
            while (v64);
            *(v63 - 2) = *(v62 - 2);
            *(v63 - 1) = *(v62 - 1);
            *v63 = *v62;
            v63[1] = v62[1];
            v50 += v47;
            v57 += v49;
            ++v59;
            v60 += v49;
            v61 += v47;
          }
          while (v59 != v58);
        }
        if (v44 != 1)
        {
          do
          {
            *v57 = *v50;
            v57[1] = v50[1];
            v57[2] = v50[2];
            v57[3] = v50[3];
            v50 += v46;
            v57 += v48;
            --v56;
          }
          while (v56);
        }
        goto LABEL_145;
      }
    }
  }
LABEL_167:
  v106 = *(_QWORD *)(v1 - 112);
  *(_QWORD *)(v1 - 112) = 0;
  if (v106)
    (*(void (**)(uint64_t))(*(_QWORD *)v106 + 8))(v106);
  v107 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 96) = 0;
  if (v107)
    (*(void (**)(uint64_t))(*(_QWORD *)v107 + 8))(v107);
  v108 = *(std::__shared_weak_count **)(v1 - 176);
  v109 = v130;
  if (v108)
  {
    v110 = (unint64_t *)&v108->__shared_owners_;
    do
      v111 = __ldaxr(v110);
    while (__stlxr(v111 - 1, v110));
    if (!v111)
    {
      ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
      std::__shared_weak_count::__release_weak(v108);
      v109 = v130;
    }
  }
  *(_QWORD *)v109 = &off_24EC1F958;
  v113 = v133;
  v112 = v134;
  if (v134)
  {
    v114 = (unint64_t *)&v134->__shared_owners_;
    do
      v115 = __ldxr(v114);
    while (__stxr(v115 + 1, v114));
    v116 = v134;
  }
  else
  {
    v116 = 0;
  }
  v117 = v138;
  v118 = 2 * v139;
  if (v136)
    v119 = (2 * v135) | 0x100000000;
  else
    v119 = 0;
  v120 = v137;
  v121 = v140;
  *(_QWORD *)(v109 + 8) = v113;
  *(_QWORD *)(v109 + 16) = v112;
  *(_QWORD *)(v109 + 24) = v119;
  *(_QWORD *)(v109 + 32) = v117;
  *(_DWORD *)(v109 + 40) = v118;
  *(_QWORD *)(v109 + 48) = v120;
  *(_DWORD *)(v109 + 56) = 14;
  *(_WORD *)(v109 + 60) = v121;
  if (v116)
  {
    v122 = (unint64_t *)&v116->__shared_owners_;
    do
      v123 = __ldaxr(v122);
    while (__stlxr(v123 - 1, v122));
    if (!v123)
    {
      ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
      std::__shared_weak_count::__release_weak(v116);
    }
  }
}

void sub_224355254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::string *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _QWORD *a20,uint64_t a21,int a22,__int16 a23,char a24,unsigned __int8 a25)
{
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  *(_DWORD *)(v25 - 192) = 33;
  *(_DWORD *)(v25 - 112) = 38;
  sub_2243348B0("Conversion from image of format ", (unsigned int *)(v25 - 112), (uint64_t)" to ", (unsigned int *)(v25 - 192), (uint64_t)" not supported");
  if ((a25 & 0x80u) == 0)
    v26 = &a20;
  else
    v26 = a20;
  if ((a25 & 0x80u) == 0)
    v27 = a25;
  else
    v27 = a21;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v26, v27, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a20);
  abort();
}

void sub_224356228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = *(_QWORD *)(v25 - 192);
  *(_QWORD *)(v25 - 192) = 0;
  if (v27)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
    v28 = a19;
    if (!a19)
    {
LABEL_3:
      v29 = *(_QWORD *)(v25 - 96);
      *(_QWORD *)(v25 - 96) = 0;
      if (!v29)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v28 = a19;
    if (!a19)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  v29 = *(_QWORD *)(v25 - 96);
  *(_QWORD *)(v25 - 96) = 0;
  if (!v29)
  {
LABEL_4:
    sub_223167354(a18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  sub_223167354(a18);
  _Unwind_Resume(a1);
}

void sub_22435662C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231E55CC(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_224356678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231EE5A0(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_2243566C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231EC290(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_224356710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *(_QWORD *)(v10 - 96);
  *(_QWORD *)(v10 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  v13 = *(_QWORD *)(v10 - 112);
  *(_QWORD *)(v10 - 112) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  sub_2231F0770(v10 - 192);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_22435675C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2243567C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(38);
  v34 = &off_24EC20298;
  sub_22434B754((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 2 * v41;
  if (v38)
    v27 = (2 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 38;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_224356A44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224356A60(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224356A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224356A88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224356D10(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 14);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224356BE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224356C04(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224356C6C()
{
  return 14;
}

uint64_t sub_224356C74(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224356C7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224356C94(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224356D10(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 14)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224356F38(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224356ED8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224356F38(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224356FB0();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224356FB0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791900);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791900))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E5C34();
    sub_2243571B4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243571B4((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557918E8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557918E8, &dword_22314D000);
          __cxa_guard_release(&qword_255791900);
          return &stru_2557918E8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557918E8;
}

void sub_224357100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791900);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791900);
  _Unwind_Resume(a1);
}

void sub_2243571B4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224357250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22435726C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E5D2C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224357358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_224357374(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2243573DC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224357664(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 26);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224357534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224357558(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2243575C0()
{
  return 26;
}

uint64_t sub_2243575C8(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2243575D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2243575E8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224357664(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 26)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22435788C(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22435782C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435788C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224357904();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224357904()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791920);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791920))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EC8F8();
    sub_224357B08((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224357B08((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791908, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791908, &dword_22314D000);
          __cxa_guard_release(&qword_255791920);
          return &stru_255791908;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791908;
}

void sub_224357A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791920);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791920);
  _Unwind_Resume(a1);
}

void sub_224357B08(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224357BA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224357BC0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EC9F0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224357CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_224357CC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224357E44(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 30);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224357E20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224357E44(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22435806C(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22435800C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435806C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2243580E4();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_2243580E4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791940);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791940))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231A46DC();
    sub_2243582E8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243582E8((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791928, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791928, &dword_22314D000);
          __cxa_guard_release(&qword_255791940);
          return &stru_255791928;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791928;
}

void sub_224358234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791940);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791940);
  _Unwind_Resume(a1);
}

void sub_2243582E8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224358384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243583A0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224358408(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224358690(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 34);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224358560(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224358584(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2243585EC()
{
  return 34;
}

uint64_t sub_2243585F4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2243585FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224358614(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224358690(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 34)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243588B8(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224358858(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243588B8(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224358930();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224358930()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791960);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791960))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F0DD8();
    sub_224358B34((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224358B34((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791948, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791948, &dword_22314D000);
          __cxa_guard_release(&qword_255791960);
          return &stru_255791948;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791948;
}

void sub_224358A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791960);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791960);
  _Unwind_Resume(a1);
}

void sub_224358B34(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224358BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224358BEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F0ED0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224358CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_224358CF4(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _WORD *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  double v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  double ****v58;
  uint64_t v59;
  _WORD *v60;
  int v61;
  _BYTE *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[2];
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  double ****v90;
  __int128 v91;
  _OWORD v92[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v11 = *(double *)(a2 + 24);
      if (v11 < 0.0)
        v11 = 0.0;
      v10 = (int)v11;
      v12 = 255.0;
      if (*(double *)(a2 + 32) <= 255.0)
        v12 = *(double *)(a2 + 32);
      v13 = (int)v12;
      v14 = HIWORD(v7);
      if (v10 != (unsigned __int16)v7)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = -65536;
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  v13 = 255;
  v14 = HIWORD(v7);
  if (v10 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v14 == v13)
    return sub_2243594B8(v9, v8);
LABEL_17:
  v86 = (double)(unsigned __int16)v7;
  v84 = (double)v10;
  v85 = 1.0 / ((double)v14 - v86);
  a3.n128_f64[0] = (double)v13 - (double)v10;
  v83 = a3.n128_f64[0];
  v82[0] = &v86;
  v82[1] = &v85;
  v81[0] = &v84;
  v81[1] = &v83;
  v80[0] = v82;
  v80[1] = v81;
  v16 = *(_QWORD *)(v9 + 8);
  if (!v16)
    goto LABEL_33;
  v17 = *(std::__shared_weak_count **)(v9 + 16);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(v9 + 8);
    v21 = *(std::__shared_weak_count **)(v9 + 16);
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      do
        v24 = __ldaxr(v22);
      while (__stlxr(v24 - 1, v22));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v16 + 96))(&v88, v16, 0);
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v88 = 0;
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_49;
  }
  v26 = *(std::__shared_weak_count **)(v8 + 16);
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
    do
      v29 = __ldaxr(v27);
    while (__stlxr(v29 - 1, v27));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    v25 = *(_QWORD *)(v8 + 8);
    v30 = *(std::__shared_weak_count **)(v8 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_49:
    v87 = 0;
    v89 = v80;
    if (*(_DWORD *)(v9 + 32))
      goto LABEL_50;
    goto LABEL_93;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v25 + 96))(&v87, v25, 1);
  v89 = v80;
  if (*(_DWORD *)(v9 + 32))
  {
LABEL_50:
    v34 = *(_DWORD *)(v9 + 36);
    if (v34)
    {
      v35 = *(_DWORD *)(v9 + 40);
      if (v35)
      {
        v90 = (double ****)&v89;
        v37 = *(unsigned int *)(v9 + 48);
        v36 = *(unsigned int *)(v9 + 52);
        v38 = *(unsigned int *)(v8 + 48);
        v39 = *(unsigned int *)(v8 + 52);
        v40 = *(_WORD **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v40)
        {
          v41 = *(_QWORD *)(v9 + 8);
          v42 = *(std::__shared_weak_count **)(v9 + 16);
          if (v42)
          {
            v43 = (unint64_t *)&v42->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v40 = *(_WORD **)(v9 + 24);
        }
        v46 = *(_BYTE **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v46)
        {
          v47 = *(_QWORD *)(v8 + 8);
          v48 = *(std::__shared_weak_count **)(v8 + 16);
          if (v48)
          {
            v49 = (unint64_t *)&v48->__shared_owners_;
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
            do
              v51 = __ldaxr(v49);
            while (__stlxr(v51 - 1, v49));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v46 = *(_BYTE **)(v8 + 24);
        }
        v52 = v34 - 1;
        v53 = 0.0;
        v91 = 0u;
        v92[0] = 0u;
        v54 = 2 * v37;
        v55 = v35 - 1;
        if (v55)
        {
          v79 = v39;
          if (v52)
          {
            v56 = 0;
            v57 = v36;
            v58 = v90;
            v59 = 2 * v57;
            do
            {
              v60 = v40;
              v61 = v52;
              v62 = v46;
              do
              {
                LOWORD(v53) = *v60;
                v63 = ((double)*(unint64_t *)&v53 - ****v58) * *(**v58)[1];
                v64 = fmax(v63, 0.0);
                if (v63 <= 1.0)
                  v65 = v64;
                else
                  v65 = 1.0;
                v66 = **(*v58)[1] + v65 * *(*v58)[1][1];
                *v62 = llround(v66);
                LOWORD(v66) = v60[1];
                v67 = ((double)*(unint64_t *)&v66 - ****v58) * *(**v58)[1];
                v68 = fmax(v67, 0.0);
                if (v67 <= 1.0)
                  v69 = v68;
                else
                  v69 = 1.0;
                v70 = **(*v58)[1] + v69 * *(*v58)[1][1];
                v62[1] = llround(v70);
                LOWORD(v70) = v60[2];
                v71 = ((double)*(unint64_t *)&v70 - ****v58) * *(**v58)[1];
                v72 = fmax(v71, 0.0);
                if (v71 <= 1.0)
                  v73 = v72;
                else
                  v73 = 1.0;
                v74 = **(*v58)[1] + v73 * *(*v58)[1][1];
                v62[2] = llround(v74);
                LOWORD(v74) = v60[3];
                v75 = ((double)*(unint64_t *)&v74 - ****v58) * *(**v58)[1];
                v76 = fmax(v75, 0.0);
                if (v75 <= 1.0)
                  v77 = v76;
                else
                  v77 = 1.0;
                v53 = **(*v58)[1] + v77 * *(*v58)[1][1];
                v62[3] = llround(v53);
                v62 += v38;
                v60 = (_WORD *)((char *)v60 + v54);
                --v61;
              }
              while (v61);
              *(_QWORD *)&v91 = v60;
              *(_QWORD *)&v92[0] = v62;
              v53 = sub_22435996C(&v90, (_WORD **)&v91, (uint64_t)v92, v53);
              v40 = (_WORD *)((char *)v40 + v59);
              v46 += v79;
              ++v56;
            }
            while (v56 != v55);
          }
          else
          {
            do
            {
              *(_QWORD *)&v91 = v40;
              *(_QWORD *)&v92[0] = v46;
              v53 = sub_22435996C(&v90, (_WORD **)&v91, (uint64_t)v92, v53);
              v46 += v39;
              v40 += v36;
              --v55;
            }
            while (v55);
          }
        }
        for (; v52; --v52)
        {
          *(_QWORD *)&v91 = v40;
          *(_QWORD *)&v92[0] = v46;
          v53 = sub_22435996C(&v90, (_WORD **)&v91, (uint64_t)v92, v53);
          v46 += v38;
          v40 = (_WORD *)((char *)v40 + v54);
        }
        *(_QWORD *)&v91 = v40;
        *(_QWORD *)&v92[0] = v46;
        a3.n128_f64[0] = sub_22435996C(&v90, (_WORD **)&v91, (uint64_t)v92, v53);
      }
    }
  }
LABEL_93:
  v78 = v87;
  v87 = 0;
  if (v78)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v78 + 8))(v78, a3);
  result = v88;
  v88 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22435938C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (!a22)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a22 + 8))(a22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243593F0(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  int v8;
  double v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    HIWORD(v12) = v8;
    LOWORD(v12) = (int)v9;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 255;
  }
  v11[0] = (char *)&v12 + 2;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_224359AD8(v4, v5, (uint64_t)v11);
}

uint64_t sub_2243594AC(uint64_t **a1)
{
  return sub_2243594B8(**a1, (*a1)[1]);
}

uint64_t sub_2243594B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v52 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v51, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v52, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v51 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(_BYTE **)(a1 + 24);
      }
      v34 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_BYTE **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = *v28;
            v34[1] = v28[2];
            v34[2] = v28[4];
            v34[3] = v28[6];
            v34 += v27;
            v28 += 2 * v24;
            --v42;
          }
          while (v42);
        }
        else
        {
          v43 = 0;
          v44 = v34 + 3;
          v45 = v28 + 4;
          do
          {
            v46 = v45;
            v47 = v44;
            v48 = v22 - 1;
            do
            {
              *(v47 - 3) = *(v46 - 4);
              *(v47 - 2) = *(v46 - 2);
              *(v47 - 1) = *v46;
              *v47 = v46[2];
              v47 += v26;
              v46 += v41;
              --v48;
            }
            while (v48);
            *(v47 - 3) = *(v46 - 4);
            *(v47 - 2) = *(v46 - 2);
            *(v47 - 1) = *v46;
            *v47 = v46[2];
            v28 += 2 * v24;
            v34 += v27;
            ++v43;
            v44 += v27;
            v45 += 2 * v24;
          }
          while (v43 != v42);
        }
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = *v28;
          v34[1] = v28[2];
          v34[2] = v28[4];
          v34[3] = v28[6];
          v34 += v26;
          v28 += v41;
          --v40;
        }
        while (v40);
      }
      *v34 = *v28;
      v34[1] = v28[2];
      v34[2] = v28[4];
      v34[3] = v28[6];
    }
  }
LABEL_65:
  v49 = v51;
  v51 = 0;
  if (v49)
    (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
  result = v52;
  v52 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224359908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22435996C(double *****a1, _WORD **a2, uint64_t a3, double a4)
{
  double ***v4;
  double **v5;
  double **v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double ***v11;
  double **v12;
  double **v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double ***v18;
  double **v19;
  double **v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double ***v25;
  double **v26;
  double **v27;
  double v28;
  double v29;
  double result;

  v4 = **a1;
  LOWORD(a4) = **a2;
  v6 = *v4;
  v5 = v4[1];
  v7 = ((double)*(unint64_t *)&a4 - **v6) * *v6[1];
  v8 = fmax(v7, 0.0);
  if (v7 <= 1.0)
    v9 = v8;
  else
    v9 = 1.0;
  v10 = **v5 + v9 * *v5[1];
  **(_BYTE **)a3 = llround(v10);
  v11 = **a1;
  LOWORD(v10) = (*a2)[1];
  v13 = *v11;
  v12 = v11[1];
  v14 = ((double)*(unint64_t *)&v10 - **v13) * *v13[1];
  v15 = fmax(v14, 0.0);
  if (v14 <= 1.0)
    v16 = v15;
  else
    v16 = 1.0;
  v17 = **v12 + v16 * *v12[1];
  *(_BYTE *)(*(_QWORD *)a3 + 1) = llround(v17);
  v18 = **a1;
  LOWORD(v17) = (*a2)[2];
  v20 = *v18;
  v19 = v18[1];
  v21 = ((double)*(unint64_t *)&v17 - **v20) * *v20[1];
  v22 = fmax(v21, 0.0);
  if (v21 <= 1.0)
    v23 = v22;
  else
    v23 = 1.0;
  v24 = **v19 + v23 * *v19[1];
  *(_BYTE *)(*(_QWORD *)a3 + 2) = llround(v24);
  v25 = **a1;
  LOWORD(v24) = (*a2)[3];
  v27 = *v25;
  v26 = v25[1];
  v28 = ((double)*(unint64_t *)&v24 - **v27) * *v27[1];
  v29 = fmax(v28, 0.0);
  if (v28 > 1.0)
    v29 = 1.0;
  result = **v26 + v29 * *v26[1];
  *(_BYTE *)(*(_QWORD *)a3 + 3) = llround(result);
  return result;
}

uint64_t sub_224359AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  unsigned __int16 ***v47;
  int v48;
  unsigned __int16 *v49;
  _BYTE *v50;
  unsigned __int16 *v51;
  unsigned __int16 **v52;
  unsigned int v53;
  char v54;
  uint64_t v55;
  unsigned __int16 **v56;
  unsigned int v57;
  unsigned __int16 *v58;
  char v59;
  unsigned __int16 **v60;
  unsigned int v61;
  unsigned __int16 *v62;
  char v63;
  unsigned __int16 **v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int16 ***v72;
  __int128 v73;
  __int128 v74;
  _BYTE *v75;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_95;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_95;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_95:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v70 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v69, v15, 1);
    v71 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_89;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v70, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v69 = 0;
  v71 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_89;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v72 = (unsigned __int16 ***)&v71;
      v27 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(unsigned __int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(unsigned __int16 **)(a1 + 24);
      }
      v36 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(_BYTE **)(a2 + 24);
      }
      v42 = v24 - 1;
      v73 = 0u;
      v74 = 0u;
      v43 = 2 * v27;
      v44 = v25 - 1;
      if (v44)
      {
        v45 = 2 * v26;
        if (v42)
        {
          v46 = 0;
          while (1)
          {
            v75 = v36;
            v47 = v72;
            v48 = v42;
            v49 = v30;
            v50 = v36;
            do
            {
              *(_QWORD *)&v73 = v49;
              *(_QWORD *)&v74 = v50;
              v52 = *v47;
              v53 = *v49;
              if (v53 >= **v52)
              {
                if (v53 <= *v52[2])
                  v54 = *v49;
                else
                  v54 = *(_BYTE *)v52[3];
              }
              else
              {
                v54 = *(_BYTE *)v52[1];
              }
              *v50 = v54;
              v47 = v72;
              v51 = (unsigned __int16 *)v73;
              v55 = v74;
              v56 = *v72;
              v57 = *(unsigned __int16 *)(v73 + 2);
              if (v57 < ***v72)
              {
                v58 = v56[1];
LABEL_71:
                v59 = *(_BYTE *)v58;
                goto LABEL_73;
              }
              if (v57 > *v56[2])
              {
                v58 = v56[3];
                goto LABEL_71;
              }
              v59 = *(_WORD *)(v73 + 2);
LABEL_73:
              *(_BYTE *)(v74 + 1) = v59;
              v60 = *v47;
              v61 = v51[2];
              if (v61 < ***v47)
              {
                v62 = v60[1];
LABEL_77:
                v63 = *(_BYTE *)v62;
                goto LABEL_79;
              }
              if (v61 > *v60[2])
              {
                v62 = v60[3];
                goto LABEL_77;
              }
              v63 = v51[2];
LABEL_79:
              *(_BYTE *)(v55 + 2) = v63;
              v64 = *v47;
              LODWORD(v51) = v51[3];
              if (v51 < ***v47)
              {
                v51 = v64[1];
LABEL_60:
                LOBYTE(v51) = *(_BYTE *)v51;
                goto LABEL_61;
              }
              if (v51 > *v64[2])
              {
                v51 = v64[3];
                goto LABEL_60;
              }
LABEL_61:
              *(_BYTE *)(v55 + 3) = (_BYTE)v51;
              v50 = &v75[v28];
              v75 += v28;
              v49 = (unsigned __int16 *)((char *)v49 + v43);
              --v48;
            }
            while (v48);
            sub_22435A0AC(&v73, &v72, v49, &v75);
            v30 = (unsigned __int16 *)((char *)v30 + v45);
            v36 += v29;
            if (++v46 == v44)
              goto LABEL_86;
          }
        }
        v65 = 0;
        v66 = 0;
        do
        {
          v75 = &v36[v65];
          *(_QWORD *)&v73 = (char *)v30 + v66;
          *(_QWORD *)&v74 = &v36[v65];
          sub_22435A0AC(&v73, &v72, (unsigned __int16 *)((char *)v30 + v66), &v75);
          v66 += v45;
          v65 += v29;
          --v44;
        }
        while (v44);
        v30 = (unsigned __int16 *)((char *)v30 + v66);
        v36 += v65;
      }
LABEL_86:
      v75 = v36;
      *(_QWORD *)&v73 = v30;
      for (*(_QWORD *)&v74 = v36; v42; --v42)
      {
        sub_22435A0AC(&v73, &v72, v30, &v75);
        v75 += v28;
        v30 = (unsigned __int16 *)((char *)v30 + v43);
      }
      sub_22435A0AC(&v73, &v72, v30, &v75);
    }
  }
LABEL_89:
  v67 = v69;
  v69 = 0;
  if (v67)
    (*(void (**)(uint64_t))(*(_QWORD *)v67 + 8))(v67);
  result = v70;
  v70 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22435A048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22435A0AC(_QWORD *result, unsigned __int16 ****a2, _WORD *a3, _BYTE **a4)
{
  _BYTE *v4;
  unsigned __int16 **v5;
  unsigned int v6;
  char v7;
  unsigned __int16 **v8;
  unsigned int v9;
  unsigned __int16 *v10;
  char v11;
  unsigned __int16 **v12;
  unsigned int v13;
  unsigned __int16 *v14;
  char v15;
  uint64_t v16;
  unsigned __int16 **v17;
  unsigned int v18;

  *result = a3;
  v4 = *a4;
  result[2] = *a4;
  v5 = **a2;
  v6 = (unsigned __int16)*a3;
  if (v6 >= **v5)
  {
    if (v6 <= *v5[2])
      v7 = *a3;
    else
      v7 = *(_BYTE *)v5[3];
  }
  else
  {
    v7 = *(_BYTE *)v5[1];
  }
  *v4 = v7;
  v8 = **a2;
  v9 = *(unsigned __int16 *)(*result + 2);
  if (v9 < **v8)
  {
    v10 = v8[1];
LABEL_10:
    v11 = *(_BYTE *)v10;
    goto LABEL_12;
  }
  if (v9 > *v8[2])
  {
    v10 = v8[3];
    goto LABEL_10;
  }
  v11 = *(_WORD *)(*result + 2);
LABEL_12:
  *(_BYTE *)(result[2] + 1) = v11;
  v12 = **a2;
  v13 = *(unsigned __int16 *)(*result + 4);
  if (v13 < **v12)
  {
    v14 = v12[1];
LABEL_16:
    v15 = *(_BYTE *)v14;
    goto LABEL_18;
  }
  if (v13 > *v12[2])
  {
    v14 = v12[3];
    goto LABEL_16;
  }
  v15 = *(_WORD *)(*result + 4);
LABEL_18:
  *(_BYTE *)(result[2] + 2) = v15;
  v16 = result[2];
  v17 = **a2;
  v18 = *(unsigned __int16 *)(*result + 6);
  if (v18 >= **v17)
  {
    if (v18 <= *v17[2])
      *(_BYTE *)(v16 + 3) = v18;
    else
      *(_BYTE *)(v16 + 3) = *(_BYTE *)v17[3];
  }
  else
  {
    *(_BYTE *)(v16 + 3) = *(_BYTE *)v17[1];
  }
  return result;
}

uint64_t sub_22435A204(uint64_t **a1, uint64_t a2, __n128 a3, __n128 _Q1, double a5, double a6, double a7, double a8, double _D6)
{
  uint64_t *v9;
  double v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unsigned __int16 v20;
  unsigned int v22;
  unsigned int v23;
  unsigned int v27;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _WORD *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  _WORD *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  double v64;
  double v67;
  double v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  double v73;
  double v74;
  double v75;
  double v77;
  double v78;
  double v79;
  double v81;
  double v82;
  double v83;
  double v85;
  double v86;
  double v87;
  _WORD *v88;
  _WORD *v89;
  int v90;
  double v91;
  double v92;
  double v93;
  double v95;
  double v96;
  double v97;
  double v99;
  double v100;
  double v101;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v110;
  double v111;
  double v112;
  double v114;
  double v115;
  double v116;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v125;
  double v126;
  double v127;
  double v129;
  double v130;
  double v131;
  double v133;
  double v134;
  double v135;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v9 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v10 = *(double *)a2;
    _Q1.n128_u64[0] = *(_QWORD *)(a2 + 8);
    if (*(double *)a2 < 0.0)
      v10 = 0.0;
    v11 = (int)v10;
    a3.n128_u64[0] = 0x40EFFFE000000000;
    if (_Q1.n128_f64[0] <= 65535.0)
      a3.n128_u64[0] = *(_QWORD *)(a2 + 8);
    v12 = v11 | ((int)a3.n128_f64[0] << 16);
    v14 = *v9;
    v13 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v22 = 1006632960;
    goto LABEL_14;
  }
  v12 = -65536;
  v14 = *v9;
  v13 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = -65504.0;
  _Q1.n128_u64[0] = *(_QWORD *)(a2 + 24);
  if (_Q1.n128_f64[0] >= -65504.0)
    v15 = *(double *)(a2 + 24);
  _S0 = v15;
  __asm { FCVT            H0, S0 }
  v20 = LOWORD(_S0);
  a3.n128_u64[0] = 0x40EFFC0000000000;
  if (*(double *)(a2 + 32) <= 65504.0)
    a3.n128_u64[0] = *(_QWORD *)(a2 + 32);
  _S0 = a3.n128_f64[0];
  __asm { FCVT            H0, S0 }
  v22 = v20 | (LOWORD(_S0) << 16);
LABEL_14:
  v23 = (unsigned __int16)v12;
  _H8 = v22;
  _S9 = HIWORD(v22);
  __asm { FCVT            S1, H8 }
  v27 = HIWORD(v12);
  a3.n128_f32[0] = (float)HIWORD(v12);
  __asm { FCVT            S1, H9 }
  _ZF = _ZF && _Q1.n128_f32[0] == a3.n128_f32[0];
  if (_ZF)
    return sub_22435B91C(v14, v13, a3.n128_f32[0]);
  v29 = *(_QWORD *)(v14 + 8);
  if (!v29)
    goto LABEL_35;
  v30 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v30)
    goto LABEL_137;
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(p_shared_owners);
  while (__stxr(v32 + 1, p_shared_owners));
  do
    v33 = __ldaxr(p_shared_owners);
  while (__stlxr(v33 - 1, p_shared_owners));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *, __n128, __n128))v30->__on_zero_shared)(v30, a3, _Q1);
    std::__shared_weak_count::__release_weak(v30);
  }
  v29 = *(_QWORD *)(v14 + 8);
  v34 = *(std::__shared_weak_count **)(v14 + 16);
  if (!v34)
    goto LABEL_137;
  v35 = (unint64_t *)&v34->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_137:
    if (*(_BYTE *)(v14 + 73))
      goto LABEL_31;
LABEL_35:
    v141 = 0;
    v38 = *(_QWORD *)(v13 + 8);
    if (!v38)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *, __n128, __n128))v34->__on_zero_shared)(v34, a3, _Q1);
  std::__shared_weak_count::__release_weak(v34);
  if (!*(_BYTE *)(v14 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128, __n128))(*(_QWORD *)v29 + 96))(&v141, v29, 0, a3, _Q1);
  v38 = *(_QWORD *)(v13 + 8);
  if (!v38)
  {
LABEL_51:
    v140 = 0;
    if (*(_DWORD *)(v14 + 32))
      goto LABEL_52;
    goto LABEL_131;
  }
LABEL_36:
  v40 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v40)
    goto LABEL_47;
  v41 = (unint64_t *)&v40->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  v38 = *(_QWORD *)(v13 + 8);
  v44 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v44)
    goto LABEL_47;
  v45 = (unint64_t *)&v44->__shared_owners_;
  do
    v46 = __ldxr(v45);
  while (__stxr(v46 + 1, v45));
  do
    v47 = __ldaxr(v45);
  while (__stlxr(v47 - 1, v45));
  if (!v47)
  {
    ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
    std::__shared_weak_count::__release_weak(v44);
    if (!*(_BYTE *)(v13 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v13 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v140, v38, 1);
  if (*(_DWORD *)(v14 + 32))
  {
LABEL_52:
    v48 = *(_DWORD *)(v14 + 36);
    if (v48)
    {
      v49 = *(_DWORD *)(v14 + 40);
      if (v49)
      {
        v50 = *(unsigned int *)(v14 + 48);
        v51 = *(unsigned int *)(v13 + 48);
        v138 = *(unsigned int *)(v13 + 52);
        v139 = *(unsigned int *)(v14 + 52);
        v52 = *(_WORD **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v52)
        {
          v53 = *(_QWORD *)(v14 + 8);
          v54 = *(std::__shared_weak_count **)(v14 + 16);
          if (v54)
          {
            v55 = (unint64_t *)&v54->__shared_owners_;
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v53 + 88))(v53, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v52 = *(_WORD **)(v14 + 24);
        }
        v58 = *(_WORD **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v58)
        {
          v59 = *(_QWORD *)(v13 + 8);
          v60 = *(std::__shared_weak_count **)(v13 + 16);
          if (v60)
          {
            v61 = (unint64_t *)&v60->__shared_owners_;
            do
              v62 = __ldxr(v61);
            while (__stxr(v62 + 1, v61));
            do
              v63 = __ldaxr(v61);
            while (__stlxr(v63 - 1, v61));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
              std::__shared_weak_count::__release_weak(v60);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v59 + 88))(v59, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v58 = *(_WORD **)(v13 + 24);
        }
        v64 = (double)v23;
        __asm
        {
          FCVT            D0, H8
          FCVT            D4, H9
        }
        v67 = 1.0 / ((double)v27 - (double)v23);
        v68 = _D4 - _D0;
        v69 = v48 - 1;
        v70 = 2 * v50;
        v71 = 2 * v51;
        if (v49 != 1)
        {
          v72 = 0;
          _D4 = 0.0;
          do
          {
            v88 = v58;
            v89 = v52;
            if (v48 != 1)
            {
              v88 = v58;
              v89 = v52;
              v90 = v48 - 1;
              do
              {
                LOWORD(_D6) = *v89;
                v91 = v67 * ((double)*(unint64_t *)&_D6 - v64);
                v92 = fmax(v91, 0.0);
                if (v91 <= 1.0)
                  v93 = v92;
                else
                  v93 = 1.0;
                _D6 = v68 * v93 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                *v88 = LOWORD(_D6);
                LOWORD(_D6) = v89[1];
                v95 = v67 * ((double)*(unint64_t *)&_D6 - v64);
                v96 = fmax(v95, 0.0);
                if (v95 <= 1.0)
                  v97 = v96;
                else
                  v97 = 1.0;
                _D6 = v68 * v97 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                v88[1] = LOWORD(_D6);
                LOWORD(_D6) = v89[2];
                v99 = v67 * ((double)*(unint64_t *)&_D6 - v64);
                v100 = fmax(v99, 0.0);
                if (v99 <= 1.0)
                  v101 = v100;
                else
                  v101 = 1.0;
                _D6 = v68 * v101 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                v88[2] = LOWORD(_D6);
                LOWORD(_D6) = v89[3];
                v103 = v67 * ((double)*(unint64_t *)&_D6 - v64);
                v104 = fmax(v103, 0.0);
                if (v103 <= 1.0)
                  v105 = v104;
                else
                  v105 = 1.0;
                _D6 = v68 * v105 + _D0;
                *(float *)&_D6 = _D6;
                __asm { FCVT            H6, S6 }
                v88[3] = LOWORD(_D6);
                v89 = (_WORD *)((char *)v89 + v70);
                v88 = (_WORD *)((char *)v88 + v71);
                --v90;
              }
              while (v90);
            }
            LOWORD(_D6) = *v89;
            v73 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v74 = fmax(v73, 0.0);
            if (v73 <= 1.0)
              v75 = v74;
            else
              v75 = 1.0;
            _D6 = v68 * v75 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v88 = LOWORD(_D6);
            LOWORD(_D6) = v89[1];
            v77 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v78 = fmax(v77, 0.0);
            if (v77 <= 1.0)
              v79 = v78;
            else
              v79 = 1.0;
            _D6 = v68 * v79 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v88[1] = LOWORD(_D6);
            LOWORD(_D6) = v89[2];
            v81 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v82 = fmax(v81, 0.0);
            if (v81 <= 1.0)
              v83 = v82;
            else
              v83 = 1.0;
            _D6 = v68 * v83 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v88[2] = LOWORD(_D6);
            LOWORD(_D6) = v89[3];
            v85 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v86 = fmax(v85, 0.0);
            if (v85 <= 1.0)
              v87 = v86;
            else
              v87 = 1.0;
            _D6 = v68 * v87 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v88[3] = LOWORD(_D6);
            v52 += v139;
            v58 += v138;
            ++v72;
          }
          while (v72 != v49 - 1);
        }
        if (v48 != 1)
        {
          _D4 = 0.0;
          do
          {
            LOWORD(_D6) = *v52;
            v106 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v107 = fmax(v106, 0.0);
            if (v106 <= 1.0)
              v108 = v107;
            else
              v108 = 1.0;
            _D6 = v68 * v108 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            *v58 = LOWORD(_D6);
            LOWORD(_D6) = v52[1];
            v110 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v111 = fmax(v110, 0.0);
            if (v110 <= 1.0)
              v112 = v111;
            else
              v112 = 1.0;
            _D6 = v68 * v112 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v58[1] = LOWORD(_D6);
            LOWORD(_D6) = v52[2];
            v114 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v115 = fmax(v114, 0.0);
            if (v114 <= 1.0)
              v116 = v115;
            else
              v116 = 1.0;
            _D6 = v68 * v116 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v58[2] = LOWORD(_D6);
            LOWORD(_D6) = v52[3];
            v118 = v67 * ((double)*(unint64_t *)&_D6 - v64);
            v119 = fmax(v118, 0.0);
            if (v118 <= 1.0)
              v120 = v119;
            else
              v120 = 1.0;
            _D6 = v68 * v120 + _D0;
            *(float *)&_D6 = _D6;
            __asm { FCVT            H6, S6 }
            v58[3] = LOWORD(_D6);
            v52 = (_WORD *)((char *)v52 + v70);
            v58 = (_WORD *)((char *)v58 + v71);
            --v69;
          }
          while (v69);
        }
        LOWORD(_D4) = *v52;
        v121 = v67 * ((double)*(unint64_t *)&_D4 - v64);
        v122 = fmax(v121, 0.0);
        if (v121 <= 1.0)
          v123 = v122;
        else
          v123 = 1.0;
        _D4 = v68 * v123 + _D0;
        *(float *)&_D4 = _D4;
        __asm { FCVT            H4, S4 }
        *v58 = LOWORD(_D4);
        LOWORD(_D4) = v52[1];
        v125 = v67 * ((double)*(unint64_t *)&_D4 - v64);
        v126 = fmax(v125, 0.0);
        if (v125 <= 1.0)
          v127 = v126;
        else
          v127 = 1.0;
        _D4 = v68 * v127 + _D0;
        *(float *)&_D4 = _D4;
        __asm { FCVT            H4, S4 }
        v58[1] = LOWORD(_D4);
        LOWORD(_D4) = v52[2];
        v129 = v67 * ((double)*(unint64_t *)&_D4 - v64);
        v130 = fmax(v129, 0.0);
        if (v129 <= 1.0)
          v131 = v130;
        else
          v131 = 1.0;
        _D4 = v68 * v131 + _D0;
        *(float *)&_D4 = _D4;
        __asm { FCVT            H4, S4 }
        v58[2] = LOWORD(_D4);
        LOWORD(_D4) = v52[3];
        v133 = v67 * ((double)*(unint64_t *)&_D4 - v64);
        v134 = fmax(v133, 0.0);
        if (v133 <= 1.0)
          v135 = v134;
        else
          v135 = 1.0;
        _S0 = v68 * v135 + _D0;
        __asm { FCVT            H0, S0 }
        v58[3] = LOWORD(_S0);
      }
    }
  }
LABEL_131:
  v137 = v140;
  v140 = 0;
  if (v137)
    (*(void (**)(uint64_t))(*(_QWORD *)v137 + 8))(v137);
  result = v141;
  v141 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22435A9E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435AA4C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  unsigned __int16 v12;
  unint64_t v14;
  uint64_t result;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 *v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  _WORD *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _WORD *v61;
  unsigned __int16 *v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  unsigned int v67;
  unsigned int v69;
  unsigned int v71;
  unsigned int v73;
  unint64_t v74;
  unsigned int v76;
  unsigned int v78;
  unsigned int v80;
  unint64_t v81;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  unint64_t v94;
  unsigned int v96;
  unsigned int v98;
  unsigned int v100;
  uint64_t v102;
  unsigned int v103;
  unint64_t v104;
  unsigned int v106;
  unsigned int v108;
  unsigned int v110;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int16 *v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  _WORD *v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *p_shared_owners;
  unint64_t v143;
  unint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  unint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  int v158;
  int v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int16 *v163;
  uint64_t v164;
  std::__shared_weak_count *v165;
  unint64_t *v166;
  unint64_t v167;
  unint64_t v168;
  _WORD *v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __int16 *v181;
  __int16 *v182;
  __int16 v183;
  __int16 v184;
  uint64_t v185;
  uint64_t v186;
  __int16 **v187;
  unsigned __int16 ***v188;
  uint64_t v189;
  int v190;
  unint64_t v191;
  int v192;
  uint64_t v193;
  int v194;
  unint64_t v195;
  __int128 v196;
  __int128 v197;

  v4 = **a1;
  v3 = (*a1)[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v5 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v5 = 0.0;
    v6 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v6 = 1.0;
    if (v5 < -65504.0)
      v5 = -65504.0;
    _S0 = v5;
    __asm { FCVT            H0, S0 }
    v12 = LOWORD(_S0);
    a3.n128_u64[0] = 0x40EFFC0000000000;
    if (v6 <= 65504.0)
      a3.n128_f64[0] = v6;
    _S0 = a3.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v14 = v12 | ((unint64_t)LOWORD(_S0) << 16);
  }
  else
  {
    v14 = 1006632960;
  }
  _H0 = v14;
  __asm { FCVT            S9, H0 }
  _H0 = WORD1(v14);
  __asm { FCVT            S8, H0 }
  a3.n128_u32[0] = 1199570688;
  if (_NF != _VF || _S8 > 65535.0)
  {
    if (_S9 < 0.0)
    {
      a3.n128_u32[0] = 1199570688;
      if (_S8 > 65535.0)
        return sub_22435B91C(**a1, v3, 65535.0);
      v184 = WORD1(v14);
      v183 = (int)_S8;
      v181 = &v183;
      v182 = &v184;
      v140 = *(_QWORD *)(v4 + 8);
      if (!v140)
        goto LABEL_208;
      v141 = *(std::__shared_weak_count **)(v4 + 16);
      if (v141)
      {
        p_shared_owners = (unint64_t *)&v141->__shared_owners_;
        do
          v143 = __ldxr(p_shared_owners);
        while (__stxr(v143 + 1, p_shared_owners));
        do
          v144 = __ldaxr(p_shared_owners);
        while (__stlxr(v144 - 1, p_shared_owners));
        if (!v144)
        {
          ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
          std::__shared_weak_count::__release_weak(v141);
        }
        v140 = *(_QWORD *)(v4 + 8);
        v145 = *(std::__shared_weak_count **)(v4 + 16);
        if (v145)
        {
          v146 = (unint64_t *)&v145->__shared_owners_;
          do
            v147 = __ldxr(v146);
          while (__stxr(v147 + 1, v146));
          do
            v148 = __ldaxr(v146);
          while (__stlxr(v148 - 1, v146));
          if (!v148)
          {
            ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
            std::__shared_weak_count::__release_weak(v145);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v140 + 96))(&v186, v140, 0);
        v149 = *(_QWORD *)(v3 + 8);
        if (!v149)
          goto LABEL_223;
      }
      else
      {
LABEL_208:
        v186 = 0;
        v149 = *(_QWORD *)(v3 + 8);
        if (!v149)
          goto LABEL_223;
      }
      v150 = *(std::__shared_weak_count **)(v3 + 16);
      if (v150)
      {
        v151 = (unint64_t *)&v150->__shared_owners_;
        do
          v152 = __ldxr(v151);
        while (__stxr(v152 + 1, v151));
        do
          v153 = __ldaxr(v151);
        while (__stlxr(v153 - 1, v151));
        if (!v153)
        {
          ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
          std::__shared_weak_count::__release_weak(v150);
        }
        v149 = *(_QWORD *)(v3 + 8);
        v154 = *(std::__shared_weak_count **)(v3 + 16);
        if (v154)
        {
          v155 = (unint64_t *)&v154->__shared_owners_;
          do
            v156 = __ldxr(v155);
          while (__stxr(v156 + 1, v155));
          do
            v157 = __ldaxr(v155);
          while (__stlxr(v157 - 1, v155));
          if (!v157)
          {
            ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
            std::__shared_weak_count::__release_weak(v154);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v149 + 96))(&v185, v149, 1);
LABEL_224:
        v187 = &v181;
        v158 = *(_DWORD *)(v4 + 32);
        if (v158)
        {
          v159 = *(_DWORD *)(v4 + 36);
          if (v159)
          {
            v160 = *(_DWORD *)(v4 + 40);
            if (v160)
            {
              v188 = (unsigned __int16 ***)&v187;
              v189 = 0;
              v190 = v158 - 1;
              v161 = *(unsigned int *)(v4 + 48);
              v162 = *(unsigned int *)(v3 + 48);
              v191 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
              v192 = v159 - 1;
              v193 = v161 | (v162 << 32);
              v194 = v160 - 1;
              v195 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
              v163 = *(unsigned __int16 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v163)
              {
                v164 = *(_QWORD *)(v4 + 8);
                v165 = *(std::__shared_weak_count **)(v4 + 16);
                if (v165)
                {
                  v166 = (unint64_t *)&v165->__shared_owners_;
                  do
                    v167 = __ldxr(v166);
                  while (__stxr(v167 + 1, v166));
                  do
                    v168 = __ldaxr(v166);
                  while (__stlxr(v168 - 1, v166));
                  if (!v168)
                  {
                    ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
                    std::__shared_weak_count::__release_weak(v165);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v164 + 88))(v164, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v163 = *(unsigned __int16 **)(v4 + 24);
              }
              v169 = *(_WORD **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v169)
              {
                v170 = *(_QWORD *)(v3 + 8);
                v171 = *(std::__shared_weak_count **)(v3 + 16);
                if (v171)
                {
                  v172 = (unint64_t *)&v171->__shared_owners_;
                  do
                    v173 = __ldxr(v172);
                  while (__stxr(v173 + 1, v172));
                  do
                    v174 = __ldaxr(v172);
                  while (__stlxr(v174 - 1, v172));
                  if (!v174)
                  {
                    ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
                    std::__shared_weak_count::__release_weak(v171);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v170 + 88))(v170, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v169 = *(_WORD **)(v3 + 24);
              }
              v196 = 0u;
              v197 = 0u;
              v175 = v194;
              if (v194)
              {
                v176 = 2 * v195;
                v177 = 2 * HIDWORD(v195);
                do
                {
                  sub_22435C098(&v189, &v196, &v188, v163, v169);
                  v163 = (unsigned __int16 *)((char *)v163 + v176);
                  v169 = (_WORD *)((char *)v169 + v177);
                  --v175;
                }
                while (v175);
              }
              a3.n128_u64[0] = sub_22435C098(&v189, &v196, &v188, v163, v169);
            }
          }
        }
        goto LABEL_249;
      }
LABEL_223:
      v185 = 0;
      goto LABEL_224;
    }
    v184 = v14;
    v183 = (int)_S9;
    v181 = &v183;
    v182 = &v184;
    v83 = *(_QWORD *)(v4 + 8);
    if (!v83)
      goto LABEL_151;
    v84 = *(std::__shared_weak_count **)(v4 + 16);
    if (v84)
    {
      v85 = (unint64_t *)&v84->__shared_owners_;
      do
        v86 = __ldxr(v85);
      while (__stxr(v86 + 1, v85));
      do
        v87 = __ldaxr(v85);
      while (__stlxr(v87 - 1, v85));
      if (!v87)
      {
        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
        std::__shared_weak_count::__release_weak(v84);
      }
      v83 = *(_QWORD *)(v4 + 8);
      v88 = *(std::__shared_weak_count **)(v4 + 16);
      if (v88)
      {
        v89 = (unint64_t *)&v88->__shared_owners_;
        do
          v90 = __ldxr(v89);
        while (__stxr(v90 + 1, v89));
        do
          v91 = __ldaxr(v89);
        while (__stlxr(v91 - 1, v89));
        if (!v91)
        {
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v83 + 96))(&v186, v83, 0);
      v92 = *(_QWORD *)(v3 + 8);
      if (!v92)
        goto LABEL_167;
    }
    else
    {
LABEL_151:
      v186 = 0;
      v92 = *(_QWORD *)(v3 + 8);
      if (!v92)
        goto LABEL_167;
    }
    v112 = *(std::__shared_weak_count **)(v3 + 16);
    if (v112)
    {
      v113 = (unint64_t *)&v112->__shared_owners_;
      do
        v114 = __ldxr(v113);
      while (__stxr(v114 + 1, v113));
      do
        v115 = __ldaxr(v113);
      while (__stlxr(v115 - 1, v113));
      if (!v115)
      {
        ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
        std::__shared_weak_count::__release_weak(v112);
      }
      v92 = *(_QWORD *)(v3 + 8);
      v116 = *(std::__shared_weak_count **)(v3 + 16);
      if (v116)
      {
        v117 = (unint64_t *)&v116->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v92 + 96))(&v185, v92, 1);
      v187 = &v181;
      v120 = *(_DWORD *)(v4 + 32);
      if (!v120)
        goto LABEL_249;
      goto LABEL_168;
    }
LABEL_167:
    v185 = 0;
    v187 = &v181;
    v120 = *(_DWORD *)(v4 + 32);
    if (!v120)
      goto LABEL_249;
LABEL_168:
    v121 = *(_DWORD *)(v4 + 36);
    if (v121)
    {
      v122 = *(_DWORD *)(v4 + 40);
      if (v122)
      {
        v188 = (unsigned __int16 ***)&v187;
        v189 = 0;
        v190 = v120 - 1;
        v123 = *(unsigned int *)(v4 + 48);
        v124 = *(unsigned int *)(v3 + 48);
        v191 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v192 = v121 - 1;
        v193 = v123 | (v124 << 32);
        v194 = v122 - 1;
        v195 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v125 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v125)
        {
          v126 = *(_QWORD *)(v4 + 8);
          v127 = *(std::__shared_weak_count **)(v4 + 16);
          if (v127)
          {
            v128 = (unint64_t *)&v127->__shared_owners_;
            do
              v129 = __ldxr(v128);
            while (__stxr(v129 + 1, v128));
            do
              v130 = __ldaxr(v128);
            while (__stlxr(v130 - 1, v128));
            if (!v130)
            {
              ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
              std::__shared_weak_count::__release_weak(v127);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v126 + 88))(v126, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v125 = *(unsigned __int16 **)(v4 + 24);
        }
        v131 = *(_WORD **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v131)
        {
          v132 = *(_QWORD *)(v3 + 8);
          v133 = *(std::__shared_weak_count **)(v3 + 16);
          if (v133)
          {
            v134 = (unint64_t *)&v133->__shared_owners_;
            do
              v135 = __ldxr(v134);
            while (__stxr(v135 + 1, v134));
            do
              v136 = __ldaxr(v134);
            while (__stlxr(v136 - 1, v134));
            if (!v136)
            {
              ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
              std::__shared_weak_count::__release_weak(v133);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v132 + 88))(v132, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v131 = *(_WORD **)(v3 + 24);
        }
        v196 = 0u;
        v197 = 0u;
        v137 = v194;
        if (v194)
        {
          v138 = 2 * v195;
          v139 = 2 * HIDWORD(v195);
          do
          {
            sub_22435BE7C(&v189, &v196, &v188, v125, v131);
            v125 = (unsigned __int16 *)((char *)v125 + v138);
            v131 = (_WORD *)((char *)v131 + v139);
            --v137;
          }
          while (v137);
        }
        a3.n128_u64[0] = sub_22435BE7C(&v189, &v196, &v188, v125, v131);
      }
    }
LABEL_249:
    v178 = v185;
    v185 = 0;
    if (v178)
      (*(void (**)(uint64_t, __n128))(*(_QWORD *)v178 + 8))(v178, a3);
    result = v186;
    v186 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
    return result;
  }
  v21 = *(_QWORD *)(v4 + 8);
  if (!v21)
    goto LABEL_36;
  v22 = *(std::__shared_weak_count **)(v4 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v21 = *(_QWORD *)(v4 + 8);
    v26 = *(std::__shared_weak_count **)(v4 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v21 + 96))(&v189, v21, 0);
    v30 = *(_QWORD *)(v3 + 8);
    if (!v30)
      goto LABEL_52;
  }
  else
  {
LABEL_36:
    v189 = 0;
    v30 = *(_QWORD *)(v3 + 8);
    if (!v30)
      goto LABEL_52;
  }
  v31 = *(std::__shared_weak_count **)(v3 + 16);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 1, v32));
    do
      v34 = __ldaxr(v32);
    while (__stlxr(v34 - 1, v32));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
    v30 = *(_QWORD *)(v3 + 8);
    v35 = *(std::__shared_weak_count **)(v3 + 16);
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      do
        v38 = __ldaxr(v36);
      while (__stlxr(v38 - 1, v36));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v30 + 96))(&v196, v30, 1);
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_133;
    goto LABEL_53;
  }
LABEL_52:
  *(_QWORD *)&v196 = 0;
  if (!*(_DWORD *)(v4 + 32))
    goto LABEL_133;
LABEL_53:
  v39 = *(_DWORD *)(v4 + 36);
  if (v39)
  {
    v40 = *(_DWORD *)(v4 + 40);
    if (v40)
    {
      v41 = *(unsigned int *)(v4 + 48);
      v42 = *(unsigned int *)(v3 + 48);
      v179 = *(unsigned int *)(v3 + 52);
      v180 = *(unsigned int *)(v4 + 52);
      v43 = *(unsigned __int16 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v43)
      {
        v44 = *(_QWORD *)(v4 + 8);
        v45 = *(std::__shared_weak_count **)(v4 + 16);
        if (v45)
        {
          v46 = (unint64_t *)&v45->__shared_owners_;
          do
            v47 = __ldxr(v46);
          while (__stxr(v47 + 1, v46));
          do
            v48 = __ldaxr(v46);
          while (__stlxr(v48 - 1, v46));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v44 + 88))(v44, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v43 = *(unsigned __int16 **)(v4 + 24);
      }
      v49 = *(_WORD **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v49)
      {
        v50 = *(_QWORD *)(v3 + 8);
        v51 = *(std::__shared_weak_count **)(v3 + 16);
        if (v51)
        {
          v52 = (unint64_t *)&v51->__shared_owners_;
          do
            v53 = __ldxr(v52);
          while (__stxr(v53 + 1, v52));
          do
            v54 = __ldaxr(v52);
          while (__stlxr(v54 - 1, v52));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v50 + 88))(v50, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v49 = *(_WORD **)(v3 + 24);
      }
      v55 = (int)_S9;
      v56 = (int)_S8;
      v57 = v39 - 1;
      v58 = 2 * v41;
      v59 = 2 * v42;
      if (v40 != 1)
      {
        v60 = 0;
        do
        {
          v61 = v49;
          v62 = v43;
          if (v39 != 1)
          {
            v61 = v49;
            v62 = v43;
            v63 = v39 - 1;
            do
            {
              v64 = *v62;
              LOWORD(v65) = v14;
              if (v64 >= v55)
              {
                v65 = v14 >> 16;
                if (v64 <= v56)
                {
                  _S0 = (float)v64;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              *v61 = v65;
              v67 = v62[1];
              LOWORD(v65) = v14;
              if (v67 >= v55)
              {
                v65 = v14 >> 16;
                if (v67 <= v56)
                {
                  _S0 = (float)v67;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              v61[1] = v65;
              v69 = v62[2];
              LOWORD(v65) = v14;
              if (v69 >= v55)
              {
                v65 = v14 >> 16;
                if (v69 <= v56)
                {
                  _S0 = (float)v69;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              v61[2] = v65;
              v71 = v62[3];
              LOWORD(v65) = v14;
              if (v71 >= v55)
              {
                v65 = v14 >> 16;
                if (v71 <= v56)
                {
                  _S0 = (float)v71;
                  __asm { FCVT            H0, S0 }
                  LOWORD(v65) = LOWORD(_S0);
                }
              }
              v61[3] = v65;
              v62 = (unsigned __int16 *)((char *)v62 + v58);
              v61 = (_WORD *)((char *)v61 + v59);
              --v63;
            }
            while (v63);
          }
          v73 = *v62;
          LOWORD(v74) = v14;
          if (v73 >= v55)
          {
            v74 = v14 >> 16;
            if (v73 <= v56)
            {
              _S0 = (float)v73;
              __asm { FCVT            H0, S0 }
              LOWORD(v74) = LOWORD(_S0);
            }
          }
          *v61 = v74;
          v76 = v62[1];
          LOWORD(v74) = v14;
          if (v76 >= v55)
          {
            v74 = v14 >> 16;
            if (v76 <= v56)
            {
              _S0 = (float)v76;
              __asm { FCVT            H0, S0 }
              LOWORD(v74) = LOWORD(_S0);
            }
          }
          v61[1] = v74;
          v78 = v62[2];
          LOWORD(v74) = v14;
          if (v78 >= v55)
          {
            v74 = v14 >> 16;
            if (v78 <= v56)
            {
              _S0 = (float)v78;
              __asm { FCVT            H0, S0 }
              LOWORD(v74) = LOWORD(_S0);
            }
          }
          v61[2] = v74;
          v80 = v62[3];
          LOWORD(v81) = v14;
          if (v80 >= v55)
          {
            v81 = v14 >> 16;
            if (v80 <= v56)
            {
              _S0 = (float)v80;
              __asm { FCVT            H0, S0 }
              LOWORD(v81) = LOWORD(_S0);
            }
          }
          v61[3] = v81;
          v43 += v180;
          v49 += v179;
          ++v60;
        }
        while (v60 != v40 - 1);
      }
      if (v39 != 1)
      {
        do
        {
          v103 = *v43;
          LOWORD(v104) = v14;
          if (v103 >= v55)
          {
            v104 = v14 >> 16;
            if (v103 <= v56)
            {
              _S0 = (float)v103;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          *v49 = v104;
          v106 = v43[1];
          LOWORD(v104) = v14;
          if (v106 >= v55)
          {
            v104 = v14 >> 16;
            if (v106 <= v56)
            {
              _S0 = (float)v106;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          v49[1] = v104;
          v108 = v43[2];
          LOWORD(v104) = v14;
          if (v108 >= v55)
          {
            v104 = v14 >> 16;
            if (v108 <= v56)
            {
              _S0 = (float)v108;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          v49[2] = v104;
          v110 = v43[3];
          LOWORD(v104) = v14;
          if (v110 >= v55)
          {
            v104 = v14 >> 16;
            if (v110 <= v56)
            {
              _S0 = (float)v110;
              __asm { FCVT            H0, S0 }
              LOWORD(v104) = LOWORD(_S0);
            }
          }
          v49[3] = v104;
          v43 = (unsigned __int16 *)((char *)v43 + v58);
          v49 = (_WORD *)((char *)v49 + v59);
          --v57;
        }
        while (v57);
      }
      v93 = *v43;
      LOWORD(v94) = v14;
      if (v93 >= v55)
      {
        v94 = v14 >> 16;
        if (v93 <= v56)
        {
          _S0 = (float)v93;
          __asm { FCVT            H0, S0 }
          LOWORD(v94) = LOWORD(_S0);
        }
      }
      *v49 = v94;
      v96 = v43[1];
      LOWORD(v94) = v14;
      if (v96 >= v55)
      {
        v94 = v14 >> 16;
        if (v96 <= v56)
        {
          _S0 = (float)v96;
          __asm { FCVT            H0, S0 }
          LOWORD(v94) = LOWORD(_S0);
        }
      }
      v49[1] = v94;
      v98 = v43[2];
      LOWORD(v94) = v14;
      if (v98 >= v55)
      {
        v94 = v14 >> 16;
        if (v98 <= v56)
        {
          _S0 = (float)v98;
          __asm { FCVT            H0, S0 }
          LOWORD(v94) = LOWORD(_S0);
        }
      }
      v49[2] = v94;
      v100 = v43[3];
      if (v100 >= v55)
      {
        v14 >>= 16;
        if (v100 <= v56)
        {
          _S0 = (float)v100;
          __asm { FCVT            H0, S0 }
          LOWORD(v14) = LOWORD(_S0);
        }
      }
      v49[3] = v14;
    }
  }
LABEL_133:
  v102 = v196;
  *(_QWORD *)&v196 = 0;
  if (v102)
    (*(void (**)(uint64_t))(*(_QWORD *)v102 + 8))(v102);
  result = v189;
  v189 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22435B88C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a16)
    (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435B910(uint64_t **a1, float a2)
{
  return sub_22435B91C(**a1, (*a1)[1], a2);
}

uint64_t sub_22435B91C(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  _WORD *v46;
  _WORD *v47;
  _WORD *v48;
  _WORD *v49;
  int v50;
  uint64_t v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v74 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v73, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v74, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v73 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v26;
      v43 = 2 * v28;
      v44 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOWORD(_S0) = *v29;
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v35 = _S0;
            LOWORD(_S0) = v29[1];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[1] = _S0;
            LOWORD(_S0) = v29[2];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[2] = _S0;
            LOWORD(_S0) = v29[3];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[3] = LOWORD(_S0);
            v29 += v25;
            v35 += v27;
            --v44;
          }
          while (v44);
        }
        else
        {
          v45 = 0;
          v46 = v35 + 2;
          v47 = v29 + 2;
          do
          {
            v48 = v47;
            v49 = v46;
            v50 = v23 - 1;
            do
            {
              LOWORD(_S0) = *(v48 - 2);
              *(float *)&_S0 = (float)LODWORD(_S0);
              __asm { FCVT            H0, S0 }
              *(v49 - 2) = _S0;
              LOWORD(_S0) = *(v48 - 1);
              *(float *)&_S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *(v49 - 1) = _S0;
              LOWORD(_S0) = *v48;
              *(float *)&_S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *v49 = _S0;
              LOWORD(_S0) = v48[1];
              _S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              v49[1] = LOWORD(_S0);
              v49 = (_WORD *)((char *)v49 + v43);
              v48 = (_WORD *)((char *)v48 + v42);
              --v50;
            }
            while (v50);
            LOWORD(_S0) = *(v48 - 2);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v49 - 2) = _S0;
            LOWORD(_S0) = *(v48 - 1);
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *(v49 - 1) = _S0;
            LOWORD(_S0) = *v48;
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v49 = _S0;
            LOWORD(_S0) = v48[1];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v49[1] = LOWORD(_S0);
            v29 += v25;
            v35 += v27;
            ++v45;
            v46 += v27;
            v47 += v25;
          }
          while (v45 != v44);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOWORD(_S0) = *v29;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = _S0;
          LOWORD(_S0) = v29[1];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[1] = _S0;
          LOWORD(_S0) = v29[2];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[2] = _S0;
          LOWORD(_S0) = v29[3];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[3] = LOWORD(_S0);
          v29 = (_WORD *)((char *)v29 + v42);
          v35 = (_WORD *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      LOWORD(_S0) = *v29;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v35 = _S0;
      LOWORD(_S0) = v29[1];
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[1] = _S0;
      LOWORD(_S0) = v29[2];
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[2] = _S0;
      LOWORD(_S0) = v29[3];
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[3] = LOWORD(_S0);
    }
  }
LABEL_65:
  v71 = v73;
  v73 = 0;
  if (v71)
    (*(void (**)(uint64_t))(*(_QWORD *)v71 + 8))(v71);
  result = v74;
  v74 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22435BE18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

unsigned __int16 sub_22435BE7C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 **v26;
  unsigned int v27;
  unsigned __int16 **v30;
  unsigned int v31;
  unsigned __int16 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int16 **v39;
  unsigned int v40;
  unsigned __int16 *v41;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 >= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int16 *)(*a2 + 6);
      if (v24 < **v23)
      {
        _H0 = *v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int16 *)(*a2 + 2);
  if (v31 >= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int16 *)(*a2 + 4);
  if (v35 >= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int16 *)(*a2 + 6);
  if (v40 >= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *v41;
    *(_WORD *)(v38 + 6) = *v41;
  }
  return result;
}

unsigned __int16 sub_22435C098@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v23;
  unsigned int v24;
  unsigned __int16 **v26;
  unsigned int v27;
  unsigned __int16 **v30;
  unsigned int v31;
  unsigned __int16 **v34;
  unsigned int v35;
  uint64_t v38;
  unsigned __int16 **v39;
  unsigned int v40;
  unsigned __int16 *v41;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 <= **v19)
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v19[1];
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      v23 = **a3;
      v24 = *(unsigned __int16 *)(*a2 + 6);
      if (v24 > **v23)
      {
        _H0 = *v23[1];
      }
      else
      {
        _S0 = (float)v24;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 6) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  v27 = *a4;
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *a5 = _H0;
  v30 = **a3;
  v31 = *(unsigned __int16 *)(*a2 + 2);
  if (v31 <= **v30)
  {
    _S0 = (float)v31;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v30[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v34 = **a3;
  v35 = *(unsigned __int16 *)(*a2 + 4);
  if (v35 <= **v34)
  {
    _S0 = (float)v35;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v34[1];
  }
  *(_WORD *)(a2[2] + 4) = _H0;
  v38 = a2[2];
  v39 = **a3;
  v40 = *(unsigned __int16 *)(*a2 + 6);
  if (v40 <= **v39)
  {
    _S0 = (float)v40;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v38 + 6) = result;
  }
  else
  {
    v41 = v39[1];
    result = *v41;
    *(_WORD *)(v38 + 6) = *v41;
  }
  return result;
}

uint64_t sub_22435C2B4(uint64_t **a1, uint64_t a2, float64x2_t a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  float v11;
  double v12;
  float v13;
  unsigned int v14;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint16x4_t *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  float32x4_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  unint64_t v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t ****v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  _OWORD v74[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v13 = 1.0;
    v11 = 0.0;
    goto LABEL_14;
  }
  v7 = -65536;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v10 = *(double *)(a2 + 24);
  v11 = v10;
  v12 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v12 = *(double *)(a2 + 32);
  v13 = v12;
LABEL_14:
  v14 = HIWORD(v7);
  if (v11 == (float)(unsigned __int16)v7 && v13 == (float)v14)
    return sub_22435D3F4(v9, v8);
  v62 = (double)(unsigned __int16)v7;
  v60 = v11;
  v61 = 1.0 / ((double)v14 - v62);
  a3.f64[0] = v13 - v11;
  v59 = *(_QWORD *)&a3.f64[0];
  v58[0] = &v62;
  v58[1] = &v61;
  v57[0] = &v60;
  v57[1] = &v59;
  v56[0] = v58;
  v56[1] = v57;
  v16 = *(_QWORD *)(v9 + 8);
  if (!v16)
    goto LABEL_35;
  v17 = *(std::__shared_weak_count **)(v9 + 16);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(v9 + 8);
    v21 = *(std::__shared_weak_count **)(v9 + 16);
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      do
        v24 = __ldaxr(v22);
      while (__stlxr(v24 - 1, v22));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v16 + 96))(&v64, v16, 0);
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v64 = 0;
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_51;
  }
  v27 = *(std::__shared_weak_count **)(v8 + 16);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v25 = *(_QWORD *)(v8 + 8);
    v31 = *(std::__shared_weak_count **)(v8 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_51:
    v63 = 0;
    v65 = v56;
    v35 = *(_DWORD *)(v9 + 32);
    if (v35)
      goto LABEL_52;
    goto LABEL_76;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v25 + 96))(&v63, v25, 1);
  v65 = v56;
  v35 = *(_DWORD *)(v9 + 32);
  if (v35)
  {
LABEL_52:
    v36 = *(_DWORD *)(v9 + 36);
    if (v36)
    {
      v37 = *(_DWORD *)(v9 + 40);
      if (v37)
      {
        v66 = (uint64_t ****)&v65;
        v67 = 0;
        v68 = v35 - 1;
        v38 = *(unsigned int *)(v9 + 48);
        v39 = *(unsigned int *)(v8 + 48);
        v69 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v70 = v36 - 1;
        v71 = v38 | (v39 << 32);
        v72 = v37 - 1;
        v73 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v40 = *(uint16x4_t **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v40)
        {
          v41 = *(_QWORD *)(v9 + 8);
          v42 = *(std::__shared_weak_count **)(v9 + 16);
          if (v42)
          {
            v43 = (unint64_t *)&v42->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v40 = *(uint16x4_t **)(v9 + 24);
        }
        v46 = *(float32x4_t **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v46)
        {
          v47 = *(_QWORD *)(v8 + 8);
          v48 = *(std::__shared_weak_count **)(v8 + 16);
          if (v48)
          {
            v49 = (unint64_t *)&v48->__shared_owners_;
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
            do
              v51 = __ldaxr(v49);
            while (__stlxr(v51 - 1, v49));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v46 = *(float32x4_t **)(v8 + 24);
        }
        memset(v74, 0, sizeof(v74));
        v52 = v72;
        if (v72)
        {
          v53 = 2 * v73;
          v54 = 4 * HIDWORD(v73);
          do
          {
            sub_22435D854(&v67, (uint16x4_t **)v74, &v66, v40, v46);
            v40 = (uint16x4_t *)((char *)v40 + v53);
            v46 = (float32x4_t *)((char *)v46 + v54);
            --v52;
          }
          while (v52);
        }
        a3 = sub_22435D854(&v67, (uint16x4_t **)v74, &v66, v40, v46);
      }
    }
  }
LABEL_76:
  v55 = v63;
  v63 = 0;
  if (v55)
    (*(void (**)(uint64_t, float64x2_t))(*(_QWORD *)v55 + 8))(v55, a3);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, float64x2_t))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22435C784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435C7E8(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  float v7;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int16 *v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  unint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *p_shared_owners;
  unint64_t v89;
  unint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unint64_t v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  unint64_t v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int16 *v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int32 *v125;
  unsigned __int32 *v126;
  __int16 *v127;
  unsigned __int32 *v128;
  __int16 v129;
  __int16 v130;
  unsigned __int32 v131;
  unsigned __int32 v132;
  uint64_t v133;
  uint64_t v134;
  unsigned __int32 **v135;
  unsigned __int32 ***v136;
  uint64_t v137;
  int v138;
  unint64_t v139;
  int v140;
  uint64_t v141;
  int v142;
  unint64_t v143;
  __int128 v144;
  __int128 v145;

  v4 = **a1;
  v3 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    a3.n128_u32[0] = 1.0;
    v7 = 0.0;
    if (65535.0 >= 1.0)
      goto LABEL_14;
LABEL_31:
    if (v7 < 0.0)
    {
      if (a3.n128_f32[0] > 65535.0)
        return sub_22435D3F4(**a1, v3);
      v132 = a3.n128_u32[0];
      LOWORD(v131) = (int)a3.n128_f32[0];
      v125 = &v131;
      v126 = &v132;
      v86 = *(_QWORD *)(v4 + 8);
      if (!v86)
        goto LABEL_148;
      v87 = *(std::__shared_weak_count **)(v4 + 16);
      if (v87)
      {
        p_shared_owners = (unint64_t *)&v87->__shared_owners_;
        do
          v89 = __ldxr(p_shared_owners);
        while (__stxr(v89 + 1, p_shared_owners));
        do
          v90 = __ldaxr(p_shared_owners);
        while (__stlxr(v90 - 1, p_shared_owners));
        if (!v90)
        {
          ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
          std::__shared_weak_count::__release_weak(v87);
        }
        v86 = *(_QWORD *)(v4 + 8);
        v91 = *(std::__shared_weak_count **)(v4 + 16);
        if (v91)
        {
          v92 = (unint64_t *)&v91->__shared_owners_;
          do
            v93 = __ldxr(v92);
          while (__stxr(v93 + 1, v92));
          do
            v94 = __ldaxr(v92);
          while (__stlxr(v94 - 1, v92));
          if (!v94)
          {
            ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
            std::__shared_weak_count::__release_weak(v91);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v86 + 96))(&v134, v86, 0);
        v95 = *(_QWORD *)(v3 + 8);
        if (!v95)
          goto LABEL_163;
      }
      else
      {
LABEL_148:
        v134 = 0;
        v95 = *(_QWORD *)(v3 + 8);
        if (!v95)
          goto LABEL_163;
      }
      v96 = *(std::__shared_weak_count **)(v3 + 16);
      if (v96)
      {
        v97 = (unint64_t *)&v96->__shared_owners_;
        do
          v98 = __ldxr(v97);
        while (__stxr(v98 + 1, v97));
        do
          v99 = __ldaxr(v97);
        while (__stlxr(v99 - 1, v97));
        if (!v99)
        {
          ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
          std::__shared_weak_count::__release_weak(v96);
        }
        v95 = *(_QWORD *)(v3 + 8);
        v100 = *(std::__shared_weak_count **)(v3 + 16);
        if (v100)
        {
          v101 = (unint64_t *)&v100->__shared_owners_;
          do
            v102 = __ldxr(v101);
          while (__stxr(v102 + 1, v101));
          do
            v103 = __ldaxr(v101);
          while (__stlxr(v103 - 1, v101));
          if (!v103)
          {
            ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
            std::__shared_weak_count::__release_weak(v100);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v95 + 96))(&v133, v95, 1);
LABEL_164:
        v135 = &v125;
        v104 = *(_DWORD *)(v4 + 32);
        if (v104)
        {
          v105 = *(_DWORD *)(v4 + 36);
          if (v105)
          {
            v106 = *(_DWORD *)(v4 + 40);
            if (v106)
            {
              v136 = &v135;
              v137 = 0;
              v138 = v104 - 1;
              v107 = *(unsigned int *)(v4 + 48);
              v108 = *(unsigned int *)(v3 + 48);
              v139 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
              v140 = v105 - 1;
              v141 = v107 | (v108 << 32);
              v142 = v106 - 1;
              v143 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
              v109 = *(unsigned __int16 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v109)
              {
                v110 = *(_QWORD *)(v4 + 8);
                v111 = *(std::__shared_weak_count **)(v4 + 16);
                if (v111)
                {
                  v112 = (unint64_t *)&v111->__shared_owners_;
                  do
                    v113 = __ldxr(v112);
                  while (__stxr(v113 + 1, v112));
                  do
                    v114 = __ldaxr(v112);
                  while (__stlxr(v114 - 1, v112));
                  if (!v114)
                  {
                    ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                    std::__shared_weak_count::__release_weak(v111);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v110 + 88))(v110, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v109 = *(unsigned __int16 **)(v4 + 24);
              }
              v115 = *(_QWORD *)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v115)
              {
                v116 = *(_QWORD *)(v3 + 8);
                v117 = *(std::__shared_weak_count **)(v3 + 16);
                if (v117)
                {
                  v118 = (unint64_t *)&v117->__shared_owners_;
                  do
                    v119 = __ldxr(v118);
                  while (__stxr(v119 + 1, v118));
                  do
                    v120 = __ldaxr(v118);
                  while (__stlxr(v120 - 1, v118));
                  if (!v120)
                  {
                    ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
                    std::__shared_weak_count::__release_weak(v117);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v116 + 88))(v116, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v115 = *(_QWORD *)(v3 + 24);
              }
              v144 = 0u;
              v145 = 0u;
              v121 = v142;
              if (v142)
              {
                v122 = 2 * v143;
                v123 = 4 * HIDWORD(v143);
                do
                {
                  sub_22435DE1C(&v137, (unsigned __int16 **)&v144, (unsigned __int16 ****)&v136, v109, v115);
                  v109 = (unsigned __int16 *)((char *)v109 + v122);
                  v115 += v123;
                  --v121;
                }
                while (v121);
              }
              a3.n128_f32[0] = sub_22435DE1C(&v137, (unsigned __int16 **)&v144, (unsigned __int16 ****)&v136, v109, v115);
            }
          }
        }
        goto LABEL_189;
      }
LABEL_163:
      v133 = 0;
      goto LABEL_164;
    }
    v132 = LODWORD(v7);
    LOWORD(v131) = (int)v7;
    v125 = &v131;
    v126 = &v132;
    v48 = *(_QWORD *)(v4 + 8);
    if (!v48)
      goto LABEL_91;
    v49 = *(std::__shared_weak_count **)(v4 + 16);
    if (v49)
    {
      v50 = (unint64_t *)&v49->__shared_owners_;
      do
        v51 = __ldxr(v50);
      while (__stxr(v51 + 1, v50));
      do
        v52 = __ldaxr(v50);
      while (__stlxr(v52 - 1, v50));
      if (!v52)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v49->__on_zero_shared)(v49, a3);
        std::__shared_weak_count::__release_weak(v49);
      }
      v48 = *(_QWORD *)(v4 + 8);
      v53 = *(std::__shared_weak_count **)(v4 + 16);
      if (v53)
      {
        v54 = (unint64_t *)&v53->__shared_owners_;
        do
          v55 = __ldxr(v54);
        while (__stxr(v55 + 1, v54));
        do
          v56 = __ldaxr(v54);
        while (__stlxr(v56 - 1, v54));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v53->__on_zero_shared)(v53, a3);
          std::__shared_weak_count::__release_weak(v53);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128))(*(_QWORD *)v48 + 96))(&v134, v48, 0, a3);
      v57 = *(_QWORD *)(v3 + 8);
      if (!v57)
        goto LABEL_107;
    }
    else
    {
LABEL_91:
      v134 = 0;
      v57 = *(_QWORD *)(v3 + 8);
      if (!v57)
        goto LABEL_107;
    }
    v58 = *(std::__shared_weak_count **)(v3 + 16);
    if (v58)
    {
      v59 = (unint64_t *)&v58->__shared_owners_;
      do
        v60 = __ldxr(v59);
      while (__stxr(v60 + 1, v59));
      do
        v61 = __ldaxr(v59);
      while (__stlxr(v61 - 1, v59));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
      v57 = *(_QWORD *)(v3 + 8);
      v62 = *(std::__shared_weak_count **)(v3 + 16);
      if (v62)
      {
        v63 = (unint64_t *)&v62->__shared_owners_;
        do
          v64 = __ldxr(v63);
        while (__stxr(v64 + 1, v63));
        do
          v65 = __ldaxr(v63);
        while (__stlxr(v65 - 1, v63));
        if (!v65)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v57 + 96))(&v133, v57, 1);
      v135 = &v125;
      v66 = *(_DWORD *)(v4 + 32);
      if (!v66)
        goto LABEL_189;
      goto LABEL_108;
    }
LABEL_107:
    v133 = 0;
    v135 = &v125;
    v66 = *(_DWORD *)(v4 + 32);
    if (!v66)
      goto LABEL_189;
LABEL_108:
    v67 = *(_DWORD *)(v4 + 36);
    if (v67)
    {
      v68 = *(_DWORD *)(v4 + 40);
      if (v68)
      {
        v136 = &v135;
        v137 = 0;
        v138 = v66 - 1;
        v69 = *(unsigned int *)(v4 + 48);
        v70 = *(unsigned int *)(v3 + 48);
        v139 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v140 = v67 - 1;
        v141 = v69 | (v70 << 32);
        v142 = v68 - 1;
        v143 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v71 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v71)
        {
          v72 = *(_QWORD *)(v4 + 8);
          v73 = *(std::__shared_weak_count **)(v4 + 16);
          if (v73)
          {
            v74 = (unint64_t *)&v73->__shared_owners_;
            do
              v75 = __ldxr(v74);
            while (__stxr(v75 + 1, v74));
            do
              v76 = __ldaxr(v74);
            while (__stlxr(v76 - 1, v74));
            if (!v76)
            {
              ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
              std::__shared_weak_count::__release_weak(v73);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v72 + 88))(v72, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v71 = *(unsigned __int16 **)(v4 + 24);
        }
        v77 = *(_QWORD *)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v77)
        {
          v78 = *(_QWORD *)(v3 + 8);
          v79 = *(std::__shared_weak_count **)(v3 + 16);
          if (v79)
          {
            v80 = (unint64_t *)&v79->__shared_owners_;
            do
              v81 = __ldxr(v80);
            while (__stxr(v81 + 1, v80));
            do
              v82 = __ldaxr(v80);
            while (__stlxr(v82 - 1, v80));
            if (!v82)
            {
              ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
              std::__shared_weak_count::__release_weak(v79);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v78 + 88))(v78, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v77 = *(_QWORD *)(v3 + 24);
        }
        v144 = 0u;
        v145 = 0u;
        v83 = v142;
        if (v142)
        {
          v84 = 2 * v143;
          v85 = 4 * HIDWORD(v143);
          do
          {
            sub_22435DC70(&v137, (unsigned __int16 **)&v144, (unsigned __int16 ****)&v136, v71, v77);
            v71 = (unsigned __int16 *)((char *)v71 + v84);
            v77 += v85;
            --v83;
          }
          while (v83);
        }
        a3.n128_f32[0] = sub_22435DC70(&v137, (unsigned __int16 **)&v144, (unsigned __int16 ****)&v136, v71, v77);
      }
    }
    goto LABEL_189;
  }
  v5 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v5 = 0.0;
  v6 = 1.0;
  if (*(_BYTE *)(a2 + 24))
    v6 = *(double *)(a2 + 16);
  if (v5 < -3.40282347e38)
    v5 = -3.40282347e38;
  v7 = v5;
  a3.n128_u64[0] = 0x47EFFFFFE0000000;
  if (v6 <= 3.40282347e38)
    a3.n128_f64[0] = v6;
  a3.n128_f32[0] = a3.n128_f64[0];
  if (v7 < 0.0 || a3.n128_f32[0] > 65535.0)
    goto LABEL_31;
LABEL_14:
  v131 = a3.n128_u32[0];
  v132 = LODWORD(v7);
  v130 = (int)v7;
  v129 = (int)a3.n128_f32[0];
  v125 = (unsigned __int32 *)&v130;
  v126 = &v132;
  v127 = &v129;
  v128 = &v131;
  v9 = *(_QWORD *)(v4 + 8);
  if (!v9)
    goto LABEL_34;
  v10 = *(std::__shared_weak_count **)(v4 + 16);
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    v9 = *(_QWORD *)(v4 + 8);
    v14 = *(std::__shared_weak_count **)(v4 + 16);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
      do
        v17 = __ldaxr(v15);
      while (__stlxr(v17 - 1, v15));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(&v134, v9, 0);
    v18 = *(_QWORD *)(v3 + 8);
    if (!v18)
      goto LABEL_50;
  }
  else
  {
LABEL_34:
    v134 = 0;
    v18 = *(_QWORD *)(v3 + 8);
    if (!v18)
      goto LABEL_50;
  }
  v20 = *(std::__shared_weak_count **)(v3 + 16);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    v18 = *(_QWORD *)(v3 + 8);
    v24 = *(std::__shared_weak_count **)(v3 + 16);
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
      do
        v27 = __ldaxr(v25);
      while (__stlxr(v27 - 1, v25));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
  }
  if (!*(_BYTE *)(v3 + 73))
  {
LABEL_50:
    v133 = 0;
    v135 = &v125;
    v28 = *(_DWORD *)(v4 + 32);
    if (v28)
      goto LABEL_51;
    goto LABEL_189;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v133, v18, 1);
  v135 = &v125;
  v28 = *(_DWORD *)(v4 + 32);
  if (v28)
  {
LABEL_51:
    v29 = *(_DWORD *)(v4 + 36);
    if (v29)
    {
      v30 = *(_DWORD *)(v4 + 40);
      if (v30)
      {
        v136 = &v135;
        v137 = 0;
        v138 = v28 - 1;
        v31 = *(unsigned int *)(v4 + 48);
        v32 = *(unsigned int *)(v3 + 48);
        v139 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v140 = v29 - 1;
        v141 = v31 | (v32 << 32);
        v142 = v30 - 1;
        v143 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v33 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v33)
        {
          v34 = *(_QWORD *)(v4 + 8);
          v35 = *(std::__shared_weak_count **)(v4 + 16);
          if (v35)
          {
            v36 = (unint64_t *)&v35->__shared_owners_;
            do
              v37 = __ldxr(v36);
            while (__stxr(v37 + 1, v36));
            do
              v38 = __ldaxr(v36);
            while (__stlxr(v38 - 1, v36));
            if (!v38)
            {
              ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v34 + 88))(v34, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v33 = *(unsigned __int16 **)(v4 + 24);
        }
        v39 = *(_QWORD *)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v39)
        {
          v40 = *(_QWORD *)(v3 + 8);
          v41 = *(std::__shared_weak_count **)(v3 + 16);
          if (v41)
          {
            v42 = (unint64_t *)&v41->__shared_owners_;
            do
              v43 = __ldxr(v42);
            while (__stxr(v43 + 1, v42));
            do
              v44 = __ldaxr(v42);
            while (__stlxr(v44 - 1, v42));
            if (!v44)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v40 + 88))(v40, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v39 = *(_QWORD *)(v3 + 24);
        }
        v144 = 0u;
        v145 = 0u;
        v45 = v142;
        if (v142)
        {
          v46 = 2 * v143;
          v47 = 4 * HIDWORD(v143);
          do
          {
            sub_22435D984(&v137, (unsigned __int16 **)&v144, (unsigned __int16 ****)&v136, v33, v39);
            v33 = (unsigned __int16 *)((char *)v33 + v46);
            v39 += v47;
            --v45;
          }
          while (v45);
        }
        a3.n128_f32[0] = sub_22435D984(&v137, (unsigned __int16 **)&v144, (unsigned __int16 ****)&v136, v33, v39);
      }
    }
  }
LABEL_189:
  v124 = v133;
  v133 = 0;
  if (v124)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v124 + 8))(v124, a3);
  result = v134;
  v134 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22435D354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (!a16)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22435D3E8(uint64_t **a1)
{
  return sub_22435D3F4(**a1, (*a1)[1]);
}

uint64_t sub_22435D3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint16x4_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float32x4_t *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  float32x4_t *v45;
  uint16x4_t *v46;
  int v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v51 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v50, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v51, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v50 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(uint16x4_t **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(uint16x4_t **)(a1 + 24);
      }
      v34 = *(float32x4_t **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(float32x4_t **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = 4 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = vcvtq_f32_u32(vmovl_u16(*v28));
            v28 = (uint16x4_t *)((char *)v28 + 2 * v24);
            v34 = (float32x4_t *)((char *)v34 + 4 * v26);
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          do
          {
            v45 = v34;
            v46 = v28;
            v47 = v22 - 1;
            do
            {
              *v45 = vcvtq_f32_u32(vmovl_u16(*v46));
              v46 = (uint16x4_t *)((char *)v46 + v41);
              v45 = (float32x4_t *)((char *)v45 + v42);
              --v47;
            }
            while (v47);
            *v45 = vcvtq_f32_u32(vmovl_u16(*v46));
            v28 = (uint16x4_t *)((char *)v28 + 2 * v24);
            v34 = (float32x4_t *)((char *)v34 + 4 * v26);
            ++v44;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = vcvtq_f32_u32(vmovl_u16(*v28));
          v28 = (uint16x4_t *)((char *)v28 + v41);
          v34 = (float32x4_t *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      *v34 = vcvtq_f32_u32(vmovl_u16(*v28));
    }
  }
LABEL_65:
  v48 = v50;
  v50 = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  result = v51;
  v51 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22435D7F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float64x2_t sub_22435D854(_DWORD *a1, uint16x4_t **a2, uint64_t *****a3, uint16x4_t *a4, float32x4_t *a5)
{
  int v5;
  uint64_t ***v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint32x4_t v22;
  uint64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  uint32x4_t v27;
  uint64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t result;

  *a2 = a4;
  a2[2] = (uint16x4_t *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *(double *)v8[1];
  v11 = **v7;
  v12 = *(double *)v7[1];
  __asm { FMOV            V2.2D, #1.0 }
  if (v5)
  {
    v18 = (float64x2_t)vdupq_lane_s64(v11, 0);
    v19 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v20 = 2 * a1[6];
    v21 = 4 * a1[7];
    do
    {
      v22 = vmovl_u16(*a4);
      v23.i64[0] = v22.u32[2];
      v23.i64[1] = v22.u32[3];
      v24 = vcvtq_f64_u64(v23);
      v23.i64[0] = v22.u32[0];
      v23.i64[1] = v22.u32[1];
      v25 = vmulq_n_f64(vsubq_f64(v24, v19), v10);
      v26 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v23), v19), v10);
      *a5 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v26, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v26, (float64x2_t)0)), v12))), vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v25, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v25, (float64x2_t)0)), v12)));
      a4 = (uint16x4_t *)((char *)a4 + v20);
      a5 = (float32x4_t *)((char *)a5 + v21);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (uint16x4_t *)a5;
  v27 = vmovl_u16(*a4);
  v28.i64[0] = v27.u32[2];
  v28.i64[1] = v27.u32[3];
  v29 = vcvtq_f64_u64(v28);
  v28.i64[0] = v27.u32[0];
  v28.i64[1] = v27.u32[1];
  v30 = (float64x2_t)vdupq_lane_s64(v9, 0);
  v31 = vsubq_f64(vcvtq_f64_u64(v28), v30);
  v32 = vmulq_n_f64(vsubq_f64(v29, v30), v10);
  v33 = vmulq_n_f64(v31, v10);
  v34 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v32, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v32, (float64x2_t)0));
  v35 = vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v33, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v33, (float64x2_t)0)), v12);
  v36 = (float64x2_t)vdupq_lane_s64(v11, 0);
  result = vaddq_f64(v36, vmulq_n_f64(v34, v12));
  *a5 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vaddq_f64(v36, v35)), result);
  return result;
}

float sub_22435D984(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  float *v19;
  float result;
  float *v21;

  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (v11 < v7)
          break;
        if (v11 <= *v6[2])
        {
          *(float *)a5 = (float)v11;
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
        else
        {
          *(_DWORD *)a5 = *(_DWORD *)v6[3];
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
LABEL_10:
        if (v12 > *v6[2])
        {
          *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
          v13 = a4[2];
          if (v13 < v7)
            goto LABEL_15;
          goto LABEL_18;
        }
        *(float *)(a5 + 4) = (float)v12;
        v13 = a4[2];
        if (v13 >= v7)
          goto LABEL_18;
LABEL_15:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v14 = a4[3];
        if (v14 >= v7)
          goto LABEL_22;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v10;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          goto LABEL_25;
      }
      *(_DWORD *)a5 = *(_DWORD *)v6[1];
      v12 = a4[1];
      if (v12 >= v7)
        goto LABEL_10;
LABEL_14:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v13 = a4[2];
      if (v13 < v7)
        goto LABEL_15;
LABEL_18:
      if (v13 <= *v6[2])
      {
        *(float *)(a5 + 8) = (float)v13;
        v14 = a4[3];
        if (v14 >= v7)
          goto LABEL_22;
        goto LABEL_3;
      }
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[3];
      v14 = a4[3];
      if (v14 < v7)
        goto LABEL_3;
LABEL_22:
      if (v14 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      *(float *)(a5 + 12) = (float)v14;
      a4 = (unsigned __int16 *)((char *)a4 + v8);
      a5 += v9;
      --v5;
    }
    while (v5);
  }
LABEL_25:
  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v15 = *a4;
  if (v15 >= v7)
  {
    if (v15 <= *v6[2])
    {
      *(float *)a5 = (float)v15;
      v16 = a4[1];
      if (v16 < v7)
        goto LABEL_34;
    }
    else
    {
      *(_DWORD *)a5 = *(_DWORD *)v6[3];
      v16 = a4[1];
      if (v16 < v7)
        goto LABEL_34;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v16 = a4[1];
    if (v16 < v7)
    {
LABEL_34:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v17 = a4[2];
      if (v17 < v7)
        goto LABEL_35;
LABEL_38:
      if (v17 <= *v6[2])
      {
        *(float *)(a5 + 8) = (float)v17;
        v18 = a4[3];
        if (v18 >= v7)
          goto LABEL_40;
      }
      else
      {
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[3];
        v18 = a4[3];
        if (v18 >= v7)
          goto LABEL_40;
      }
LABEL_43:
      v21 = (float *)v6[1];
      result = *v21;
      *(float *)(a5 + 12) = *v21;
      return result;
    }
  }
  if (v16 > *v6[2])
  {
    *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
    v17 = a4[2];
    if (v17 < v7)
      goto LABEL_35;
    goto LABEL_38;
  }
  *(float *)(a5 + 4) = (float)v16;
  v17 = a4[2];
  if (v17 >= v7)
    goto LABEL_38;
LABEL_35:
  *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
  v18 = a4[3];
  if (v18 < v7)
    goto LABEL_43;
LABEL_40:
  if (v18 <= *v6[2])
  {
    result = (float)v18;
    *(float *)(a5 + 12) = (float)v18;
  }
  else
  {
    v19 = (float *)v6[3];
    result = *v19;
    *(float *)(a5 + 12) = *v19;
  }
  return result;
}

float sub_22435DC70(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      v10 = *a4;
      if (v10 >= v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 < v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 >= v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 < v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 >= v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 < v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 >= v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v14 = *a4;
  if (v14 >= v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 >= v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 >= v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 >= v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 >= v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 < v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 >= v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

float sub_22435DE1C(_DWORD *a1, unsigned __int16 **a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    while (1)
    {
      v10 = *a4;
      if (v10 <= v7)
      {
        *(float *)a5 = (float)v10;
        v11 = a4[1];
        if (v11 > v7)
          goto LABEL_10;
LABEL_6:
        *(float *)(a5 + 4) = (float)v11;
        v12 = a4[2];
        if (v12 <= v7)
          goto LABEL_7;
LABEL_11:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
        v13 = a4[3];
        if (v13 > v7)
          goto LABEL_3;
LABEL_12:
        *(float *)(a5 + 12) = (float)v13;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v11 = a4[1];
        if (v11 <= v7)
          goto LABEL_6;
LABEL_10:
        *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
        v12 = a4[2];
        if (v12 > v7)
          goto LABEL_11;
LABEL_7:
        *(float *)(a5 + 8) = (float)v12;
        v13 = a4[3];
        if (v13 <= v7)
          goto LABEL_12;
LABEL_3:
        *(_DWORD *)(a5 + 12) = *(_DWORD *)v6[1];
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          break;
      }
    }
  }
  *a2 = a4;
  a2[2] = (unsigned __int16 *)a5;
  v14 = *a4;
  if (v14 <= v7)
  {
    *(float *)a5 = (float)v14;
    v15 = a4[1];
    if (v15 <= v7)
    {
LABEL_15:
      *(float *)(a5 + 4) = (float)v15;
      v16 = a4[2];
      if (v16 <= v7)
        goto LABEL_16;
LABEL_20:
      *(_DWORD *)(a5 + 8) = *(_DWORD *)v6[1];
      v17 = a4[3];
      if (v17 <= v7)
        goto LABEL_17;
      goto LABEL_21;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 <= v7)
      goto LABEL_15;
  }
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
  v16 = a4[2];
  if (v16 > v7)
    goto LABEL_20;
LABEL_16:
  *(float *)(a5 + 8) = (float)v16;
  v17 = a4[3];
  if (v17 <= v7)
  {
LABEL_17:
    result = (float)v17;
    *(float *)(a5 + 12) = (float)v17;
    return result;
  }
LABEL_21:
  v19 = (float *)v6[1];
  result = *v19;
  *(float *)(a5 + 12) = *v19;
  return result;
}

void sub_22435DFC8(int a1)
{
  __asm { BR              X10 }
}

void sub_22435E00C()
{
  uint64_t v0;
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _WORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  _WORD *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  _WORD *v62;
  _WORD *v63;
  _WORD *v64;
  _WORD *v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _WORD *v84;
  __int16 *v85;
  uint64_t v86;
  unint64_t v87;
  _OWORD *v88;
  __int128 v89;
  __int16 v90;
  uint64_t v91;
  _WORD *v92;
  __int16 *v93;
  __int128 *v94;
  _OWORD *v95;
  unint64_t v96;
  __int128 v97;
  uint64_t v98;
  __int16 v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _WORD *v117;
  __int16 *v118;
  uint64_t v119;
  unint64_t v120;
  _OWORD *v121;
  __int128 v122;
  __int16 v123;
  _WORD *v124;
  unint64_t v125;
  __int16 *v126;
  unint64_t v127;
  unint64_t v128;
  _WORD *v129;
  __int128 *v130;
  _OWORD *v131;
  unint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _WORD *v143;
  __int16 *v144;
  uint64_t v145;
  unint64_t v146;
  _OWORD *v147;
  __int128 v148;
  __int16 v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  _WORD *v153;
  __int16 *v154;
  __int128 *v155;
  _OWORD *v156;
  unint64_t v157;
  __int128 v158;
  __int16 v159;
  __int16 v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  _WORD *v164;
  __int16 *v165;
  __int128 *v166;
  _OWORD *v167;
  unint64_t v168;
  __int128 v169;
  __int16 v170;
  uint64_t v171;
  uint64_t v172;
  std::__shared_weak_count *v173;
  uint64_t v174;
  unint64_t *v175;
  unint64_t v176;
  std::__shared_weak_count *v177;
  uint64_t v178;
  unint64_t *v179;
  unint64_t v180;
  std::__shared_weak_count *v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  __int16 v186;
  unint64_t *v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t (**v204)();
  uint64_t v205;
  std::__shared_weak_count *v206;
  int v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  __int16 v212;

  sub_224362724(v1 - 192, *(_QWORD *)v0, *(_DWORD *)(v0 + 16), *(_QWORD *)v0 + 56);
  v204 = &off_24EC73C98;
  sub_2243629E8(v1 - 192, (uint64_t)&v205);
  v2 = *(std::__shared_weak_count **)(v1 - 176);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v5 = *(_QWORD *)v0;
  *(_QWORD *)(v1 - 192) = &off_24EC22D20;
  sub_2243631CC((uint64_t)&v204, (uint64_t *)(v1 - 184));
  v6 = *(_QWORD *)(v1 - 184);
  if (!v6)
    goto LABEL_22;
  v7 = *(std::__shared_weak_count **)(v1 - 176);
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = *(_QWORD *)(v1 - 184);
    v11 = *(std::__shared_weak_count **)(v1 - 176);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (*(_BYTE *)(v1 - 119))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, 1);
    if (!*(_BYTE *)(v1 - 120))
      goto LABEL_31;
  }
  else
  {
LABEL_22:
    *(_QWORD *)(v1 - 96) = 0;
    if (!*(_BYTE *)(v1 - 120))
      goto LABEL_31;
  }
  if (*(_QWORD *)(v1 - 168))
  {
    v15 = *(_QWORD *)(v1 - 184);
    v16 = *(std::__shared_weak_count **)(v1 - 176);
    if (v16)
    {
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v15 + 88))(v15, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
LABEL_31:
  v20 = *(_QWORD *)(v5 + 8);
  if (!v20)
    goto LABEL_47;
  v21 = *(std::__shared_weak_count **)(v5 + 16);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(v5 + 8);
    v25 = *(std::__shared_weak_count **)(v5 + 16);
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
      do
        v28 = __ldaxr(v26);
      while (__stlxr(v28 - 1, v26));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  if (*(_BYTE *)(v5 + 73))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v20 + 96))(v20, 0);
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  else
  {
LABEL_47:
    *(_QWORD *)(v1 - 112) = 0;
    if (*(_DWORD *)(v5 + 44) != 1)
    {
LABEL_66:
      if (*(_DWORD *)(v5 + 32))
      {
        v44 = *(_DWORD *)(v5 + 36);
        if (v44)
        {
          v45 = *(_DWORD *)(v5 + 40);
          if (v45)
          {
            v47 = *(unsigned int *)(v5 + 48);
            v46 = *(unsigned int *)(v5 + 52);
            v49 = *(unsigned int *)(v1 - 144);
            v48 = *(unsigned int *)(v1 - 140);
            v50 = *(_WORD **)(v5 + 24);
            if (*(_BYTE *)(v5 + 72) && v50)
            {
              v51 = *(_QWORD *)(v5 + 8);
              v52 = *(std::__shared_weak_count **)(v5 + 16);
              if (v52)
              {
                v53 = (unint64_t *)&v52->__shared_owners_;
                do
                  v54 = __ldxr(v53);
                while (__stxr(v54 + 1, v53));
                do
                  v55 = __ldaxr(v53);
                while (__stlxr(v55 - 1, v53));
                if (!v55)
                {
                  ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
                  std::__shared_weak_count::__release_weak(v52);
                }
              }
              (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v51 + 88))(v51, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v50 = *(_WORD **)(v5 + 24);
            }
            v56 = v44 - 1;
            v57 = *(_WORD **)(v1 - 168);
            v58 = 2 * v47;
            v59 = 2 * v49;
            v60 = v45 - 1;
            if (v45 != 1)
            {
              if (v44 == 1)
              {
                do
                {
                  *v57 = *v50;
                  v57[1] = v50[1];
                  v57[2] = v50[2];
                  v57[3] = v50[3];
                  v50 += v46;
                  v57 += v48;
                  --v60;
                }
                while (v60);
              }
              else
              {
                v61 = 0;
                v62 = v57 + 2;
                v63 = v50 + 2;
                do
                {
                  v64 = v63;
                  v65 = v62;
                  v66 = v44 - 1;
                  do
                  {
                    *(v65 - 2) = *(v64 - 2);
                    *(v65 - 1) = *(v64 - 1);
                    *v65 = *v64;
                    v65[1] = v64[1];
                    v65 = (_WORD *)((char *)v65 + v59);
                    v64 = (_WORD *)((char *)v64 + v58);
                    --v66;
                  }
                  while (v66);
                  *(v65 - 2) = *(v64 - 2);
                  *(v65 - 1) = *(v64 - 1);
                  *v65 = *v64;
                  v65[1] = v64[1];
                  v50 += v46;
                  v57 += v48;
                  ++v61;
                  v62 += v48;
                  v63 += v46;
                }
                while (v61 != v60);
              }
            }
            if (v44 != 1)
            {
              do
              {
                *v57 = *v50;
                v57[1] = v50[1];
                v57[2] = v50[2];
                v57[3] = v50[3];
                v50 = (_WORD *)((char *)v50 + v58);
                v57 = (_WORD *)((char *)v57 + v59);
                --v56;
              }
              while (v56);
            }
            *v57 = *v50;
            v57[1] = v50[1];
            v57[2] = v50[2];
            v57[3] = v50[3];
          }
        }
      }
      goto LABEL_203;
    }
  }
  if (*(_DWORD *)(v1 - 148) != 1)
    goto LABEL_66;
  v29 = *(_DWORD *)(v5 + 48);
  v30 = *(unsigned int *)(v1 - 144);
  v31 = *(_DWORD *)(v5 + 32);
  v192 = v29;
  if (v29 != (_DWORD)v30 || v29 != v31)
  {
    v200 = *(unsigned int *)(v5 + 32);
    if (!v31)
      goto LABEL_203;
    v67 = *(_DWORD *)(v5 + 36);
    if (!v67)
      goto LABEL_203;
    v68 = *(_DWORD *)(v5 + 40);
    if (!v68)
      goto LABEL_203;
    v69 = *(unsigned int *)(v5 + 52);
    v70 = *(unsigned int *)(v1 - 140);
    v71 = *(_QWORD *)(v5 + 24);
    if (*(_BYTE *)(v5 + 72) && v71)
    {
      v72 = *(_QWORD *)(v5 + 8);
      v73 = *(std::__shared_weak_count **)(v5 + 16);
      if (v73)
      {
        v74 = (unint64_t *)&v73->__shared_owners_;
        do
          v75 = __ldxr(v74);
        while (__stxr(v75 + 1, v74));
        do
          v76 = __ldaxr(v74);
        while (__stlxr(v76 - 1, v74));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v72 + 88))(v72, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v71 = *(_QWORD *)(v5 + 24);
    }
    v202 = v67 - 1;
    v77 = 2 * v30;
    v191 = v68 - 1;
    if (v68 == 1)
    {
      v78 = *(_QWORD *)(v1 - 168);
      v91 = v192;
LABEL_162:
      if (v67 != 1)
      {
        v134 = v78;
        v135 = 0;
        v136 = v71;
        v137 = 2 * v91;
        v138 = (v200 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v139 = (v138 + 1) & 0xFFFFFFFFFFFFFFF0;
        v140 = 2 * v139;
        v141 = v134;
        v142 = v136;
        while (v136
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v143 = (_WORD *)v134;
          v144 = (__int16 *)v136;
          if (v138 < 0xF)
            goto LABEL_227;
          v143 = (_WORD *)v134;
          v144 = (__int16 *)v136;
          if ((unint64_t)(v141 + v77 * v135 - (v142 + v137 * v135)) < 0x20)
            goto LABEL_227;
          v145 = 0;
          v143 = (_WORD *)(v134 + v140);
          v144 = (__int16 *)(v136 + v140);
          v146 = (v138 + 1) & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v147 = (_OWORD *)(v134 + v145);
            v148 = *(_OWORD *)(v136 + v145 + 16);
            *v147 = *(_OWORD *)(v136 + v145);
            v147[1] = v148;
            v145 += 32;
            v146 -= 16;
          }
          while (v146);
          if (v138 + 1 != v139)
          {
LABEL_227:
            do
            {
              v149 = *v144++;
              *v143++ = v149;
            }
            while (v144 != (__int16 *)(v136 + 2 * v200));
          }
          v136 += v137;
          v134 += v77;
          if ((_DWORD)++v135 == v202)
            goto LABEL_175;
        }
        goto LABEL_193;
      }
      v134 = v78;
      v136 = v71;
LABEL_175:
      if (!v136
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_193:
        abort();
      }
      v150 = (v200 - 1) & 0x7FFFFFFFFFFFFFFFLL;
      if (v150 < 0xF || (unint64_t)(v134 - v136) < 0x20)
      {
        v153 = (_WORD *)v134;
        v154 = (__int16 *)v136;
      }
      else
      {
        v151 = v150 + 1;
        v152 = (v150 + 1) & 0xFFFFFFFFFFFFFFF0;
        v153 = (_WORD *)(v134 + 2 * v152);
        v154 = (__int16 *)(v136 + 2 * v152);
        v155 = (__int128 *)(v136 + 16);
        v156 = (_OWORD *)(v134 + 16);
        v157 = v152;
        do
        {
          v158 = *v155;
          *(v156 - 1) = *(v155 - 1);
          *v156 = v158;
          v155 += 2;
          v156 += 2;
          v157 -= 16;
        }
        while (v157);
        if (v151 == v152)
          goto LABEL_203;
      }
      do
      {
        v159 = *v154++;
        *v153++ = v159;
      }
      while (v154 != (__int16 *)(v136 + 2 * v200));
      goto LABEL_203;
    }
    v197 = 0;
    v78 = *(_QWORD *)(v1 - 168);
    v79 = (v200 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    v193 = 2 * v69;
    v194 = 2 * v70;
    v80 = 2 * v192;
    v199 = v79 + 1;
    v81 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
    v82 = 2 * v81;
    v189 = v78;
    v190 = v71;
    while (1)
    {
      v195 = v71;
      v196 = v78;
      if (v67 != 1)
      {
        v83 = 0;
        while (v71
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v84 = (_WORD *)v78;
          v85 = (__int16 *)v71;
          if (v79 < 0xF)
            goto LABEL_228;
          v84 = (_WORD *)v78;
          v85 = (__int16 *)v71;
          if ((unint64_t)(v189 + v194 * v197 + v77 * v83 - (v190 + v193 * v197 + v80 * v83)) < 0x20)
            goto LABEL_228;
          v86 = 0;
          v84 = (_WORD *)(v78 + v82);
          v85 = (__int16 *)(v71 + v82);
          v87 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v88 = (_OWORD *)(v78 + v86);
            v89 = *(_OWORD *)(v71 + v86 + 16);
            *v88 = *(_OWORD *)(v71 + v86);
            v88[1] = v89;
            v86 += 32;
            v87 -= 16;
          }
          while (v87);
          if (v199 != v81)
          {
LABEL_228:
            do
            {
              v90 = *v85++;
              *v84++ = v90;
            }
            while (v85 != (__int16 *)(v71 + 2 * v200));
          }
          v71 += v80;
          v78 += v77;
          if ((_DWORD)++v83 == v202)
            goto LABEL_112;
        }
        goto LABEL_193;
      }
LABEL_112:
      if (!v71
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_193;
      }
      if (v79 < 0xF)
      {
        v92 = (_WORD *)v78;
        v93 = (__int16 *)v71;
        v91 = v192;
      }
      else
      {
        v91 = v192;
        if ((unint64_t)(v78 - v71) >= 0x20)
        {
          v92 = (_WORD *)(v78 + v82);
          v93 = (__int16 *)(v71 + v82);
          v94 = (__int128 *)(v71 + 16);
          v95 = (_OWORD *)(v78 + 16);
          v96 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
          do
          {
            v97 = *v94;
            *(v95 - 1) = *(v94 - 1);
            *v95 = v97;
            v94 += 2;
            v95 += 2;
            v96 -= 16;
          }
          while (v96);
          v98 = v196;
          if (v199 == v81)
            goto LABEL_99;
          goto LABEL_123;
        }
        v92 = (_WORD *)v78;
        v93 = (__int16 *)v71;
      }
      v98 = v196;
      do
      {
LABEL_123:
        v99 = *v93++;
        *v92++ = v99;
      }
      while (v93 != (__int16 *)(v71 + 2 * v200));
LABEL_99:
      v71 = v195 + v193;
      v78 = v98 + v194;
      if ((_DWORD)++v197 == v191)
        goto LABEL_162;
    }
  }
  v32 = *(unsigned int *)(v5 + 52);
  v33 = *(unsigned int *)(v1 - 140);
  v34 = *(_DWORD *)(v5 + 36);
  v35 = v34 * v29;
  if ((_DWORD)v32 == (_DWORD)v33 && (_DWORD)v32 == (_DWORD)v35)
  {
    v36 = *(_DWORD *)(v5 + 40);
    v37 = *(_QWORD *)(v5 + 24);
    if (*(_BYTE *)(v5 + 72) && v37)
    {
      v38 = *(_QWORD *)(v5 + 8);
      v39 = *(std::__shared_weak_count **)(v5 + 16);
      if (v39)
      {
        v40 = (unint64_t *)&v39->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v38 + 88))(v38, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v37 = *(_QWORD *)(v5 + 24);
    }
    v43 = (v36 * v32);
    if (!(_DWORD)v43 || v37)
    {
      if (!(_DWORD)v43)
        goto LABEL_203;
    }
    else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_193;
    }
    v124 = *(_WORD **)(v1 - 168);
    v125 = (v43 - 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (v125 < 0xF)
    {
      v126 = (__int16 *)v37;
    }
    else
    {
      v126 = (__int16 *)v37;
      if ((unint64_t)v124 - v37 >= 0x20)
      {
        v127 = v125 + 1;
        v128 = v127 & 0xFFFFFFFFFFFFFFF0;
        v129 = &v124[v128];
        v126 = (__int16 *)(v37 + v128 * 2);
        v130 = (__int128 *)(v37 + 16);
        v131 = v124 + 8;
        v132 = v127 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v133 = *v130;
          *(v131 - 1) = *(v130 - 1);
          *v131 = v133;
          v130 += 2;
          v131 += 2;
          v132 -= 16;
        }
        while (v132);
        v124 = v129;
        if (v127 == (v127 & 0xFFFFFFFFFFFFFFF0))
          goto LABEL_203;
      }
    }
    do
    {
      v160 = *v126++;
      *v124++ = v160;
    }
    while (v126 != (__int16 *)(v37 + 2 * v43));
    goto LABEL_203;
  }
  v203 = v35;
  if ((_DWORD)v192)
  {
    if (v34)
    {
      v100 = *(_DWORD *)(v5 + 40);
      if (v100)
      {
        v101 = *(_QWORD *)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v101)
        {
          v102 = *(_QWORD *)(v5 + 8);
          v103 = *(std::__shared_weak_count **)(v5 + 16);
          if (v103)
          {
            v104 = (unint64_t *)&v103->__shared_owners_;
            do
              v105 = __ldxr(v104);
            while (__stxr(v105 + 1, v104));
            do
              v106 = __ldaxr(v104);
            while (__stlxr(v106 - 1, v104));
            if (!v106)
            {
              ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
              std::__shared_weak_count::__release_weak(v103);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v102 + 88))(v102, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v101 = *(_QWORD *)(v5 + 24);
        }
        v201 = v101;
        v107 = *(_QWORD *)(v1 - 168);
        v108 = v100 - 1;
        if (v100 == 1)
        {
          v116 = *(_QWORD *)(v1 - 168);
          v112 = v101;
LABEL_190:
          if (!(_DWORD)v203 || v112)
          {
            if (!(_DWORD)v203)
              goto LABEL_203;
          }
          else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_193;
          }
          v161 = (v203 - 1) & 0x7FFFFFFFFFFFFFFFLL;
          if (v161 < 0xF || (unint64_t)(v116 - v112) < 0x20)
          {
            v164 = (_WORD *)v116;
            v165 = (__int16 *)v112;
          }
          else
          {
            v162 = v161 + 1;
            v163 = (v161 + 1) & 0xFFFFFFFFFFFFFFF0;
            v164 = (_WORD *)(v116 + 2 * v163);
            v165 = (__int16 *)(v112 + 2 * v163);
            v166 = (__int128 *)(v112 + 16);
            v167 = (_OWORD *)(v116 + 16);
            v168 = v163;
            do
            {
              v169 = *v166;
              *(v167 - 1) = *(v166 - 1);
              *v167 = v169;
              v166 += 2;
              v167 += 2;
              v168 -= 16;
            }
            while (v168);
            if (v162 == v163)
              goto LABEL_203;
          }
          do
          {
            v170 = *v165++;
            *v164++ = v170;
          }
          while (v165 != (__int16 *)(v112 + 2 * v203));
          goto LABEL_203;
        }
        if ((_DWORD)v203)
        {
          v109 = 0;
          v110 = 2 * v33;
          v111 = 2 * v32;
          v112 = v101;
          v113 = (v203 - 1) & 0x7FFFFFFFFFFFFFFFLL;
          v114 = (v113 + 1) & 0xFFFFFFFFFFFFFFF0;
          v115 = 2 * v114;
          v116 = *(_QWORD *)(v1 - 168);
          while (v112
               || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v117 = (_WORD *)v116;
            v118 = (__int16 *)v112;
            if (v113 < 0xF)
              goto LABEL_229;
            v117 = (_WORD *)v116;
            v118 = (__int16 *)v112;
            if ((unint64_t)(v107 + v110 * v109 - (v201 + v111 * v109)) < 0x20)
              goto LABEL_229;
            v119 = 0;
            v117 = (_WORD *)(v116 + v115);
            v118 = (__int16 *)(v112 + v115);
            v120 = (v113 + 1) & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v121 = (_OWORD *)(v116 + v119);
              v122 = *(_OWORD *)(v112 + v119 + 16);
              *v121 = *(_OWORD *)(v112 + v119);
              v121[1] = v122;
              v119 += 32;
              v120 -= 16;
            }
            while (v120);
            if (v113 + 1 != v114)
            {
LABEL_229:
              do
              {
                v123 = *v118++;
                *v117++ = v123;
              }
              while (v118 != (__int16 *)(v112 + 2 * v203));
            }
            v112 += v111;
            v116 += v110;
            if ((_DWORD)++v109 == v108)
              goto LABEL_190;
          }
          goto LABEL_193;
        }
      }
    }
  }
LABEL_203:
  v171 = *(_QWORD *)(v1 - 112);
  *(_QWORD *)(v1 - 112) = 0;
  if (v171)
    (*(void (**)(uint64_t))(*(_QWORD *)v171 + 8))(v171);
  v172 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 96) = 0;
  if (v172)
    (*(void (**)(uint64_t))(*(_QWORD *)v172 + 8))(v172);
  v173 = *(std::__shared_weak_count **)(v1 - 176);
  v174 = v198;
  if (v173)
  {
    v175 = (unint64_t *)&v173->__shared_owners_;
    do
      v176 = __ldaxr(v175);
    while (__stlxr(v176 - 1, v175));
    if (!v176)
    {
      ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
      std::__shared_weak_count::__release_weak(v173);
      v174 = v198;
    }
  }
  *(_QWORD *)v174 = &off_24EC1F958;
  v178 = v205;
  v177 = v206;
  if (v206)
  {
    v179 = (unint64_t *)&v206->__shared_owners_;
    do
      v180 = __ldxr(v179);
    while (__stxr(v180 + 1, v179));
    v181 = v206;
  }
  else
  {
    v181 = 0;
  }
  v182 = v210;
  v183 = 2 * v211;
  if (v208)
    v184 = (2 * v207) | 0x100000000;
  else
    v184 = 0;
  v185 = v209;
  v186 = v212;
  *(_QWORD *)(v174 + 8) = v178;
  *(_QWORD *)(v174 + 16) = v177;
  *(_QWORD *)(v174 + 24) = v184;
  *(_QWORD *)(v174 + 32) = v182;
  *(_DWORD *)(v174 + 40) = v183;
  *(_QWORD *)(v174 + 48) = v185;
  *(_DWORD *)(v174 + 56) = 15;
  *(_WORD *)(v174 + 60) = v186;
  if (v181)
  {
    v187 = (unint64_t *)&v181->__shared_owners_;
    do
      v188 = __ldaxr(v187);
    while (__stlxr(v188 - 1, v187));
    if (!v188)
    {
      ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
      std::__shared_weak_count::__release_weak(v181);
    }
  }
}

void sub_2243611B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::string *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,int a26,__int16 a27,char a28,unsigned __int8 a29)
{
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  *(_DWORD *)(v29 - 192) = 34;
  *(_DWORD *)(v29 - 112) = 39;
  sub_2243348B0("Conversion from image of format ", (unsigned int *)(v29 - 112), (uint64_t)" to ", (unsigned int *)(v29 - 192), (uint64_t)" not supported");
  if ((a29 & 0x80u) == 0)
    v30 = &a24;
  else
    v30 = a24;
  if ((a29 & 0x80u) == 0)
    v31 = a29;
  else
    v31 = a25;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v30, v31, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a24);
  abort();
}

void sub_224362184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = *(_QWORD *)(v29 - 192);
  *(_QWORD *)(v29 - 192) = 0;
  if (v31)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = a23;
    if (!a23)
    {
LABEL_3:
      v33 = *(_QWORD *)(v29 - 96);
      *(_QWORD *)(v29 - 96) = 0;
      if (!v33)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v32 = a23;
    if (!a23)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  v33 = *(_QWORD *)(v29 - 96);
  *(_QWORD *)(v29 - 96) = 0;
  if (!v33)
  {
LABEL_4:
    sub_223167354(a18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  sub_223167354(a18);
  _Unwind_Resume(a1);
}

void sub_224362570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v11 = *(_QWORD *)(v9 - 112);
  *(_QWORD *)(v9 - 112) = 0;
  if (v11)
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  v12 = *(_QWORD *)(v9 - 96);
  *(_QWORD *)(v9 - 96) = 0;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  sub_2231E5E90(v9 - 192);
  sub_223167354(a9);
  _Unwind_Resume(a1);
}

void sub_2243625D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(v14 - 96);
  *(_QWORD *)(v14 - 96) = 0;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  v17 = *(_QWORD *)(v14 - 112);
  *(_QWORD *)(v14 - 112) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  sub_2231ECB54(v14 - 192);
  sub_223167354(a14);
  _Unwind_Resume(a1);
}

void sub_224362624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(v14 - 96);
  *(_QWORD *)(v14 - 96) = 0;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  v17 = *(_QWORD *)(v14 - 112);
  *(_QWORD *)(v14 - 112) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  sub_2231F1034(v14 - 192);
  sub_223167354(a14);
  _Unwind_Resume(a1);
}

void sub_224362670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(v14 - 96);
  *(_QWORD *)(v14 - 96) = 0;
  if (v16)
    (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  v17 = *(_QWORD *)(v14 - 112);
  *(_QWORD *)(v14 - 112) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  sub_2231CD9B0(v14 - 192);
  sub_223167354(a14);
  _Unwind_Resume(a1);
}

uint64_t sub_2243626BC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224362724(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(39);
  v34 = &off_24EC73368;
  sub_22434D760((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 2 * v41;
  if (v38)
    v27 = (2 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 39;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_2243629A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2243629C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2243629D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2243629E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224362C70(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 15);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224362B40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224362B64(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224362BCC()
{
  return 15;
}

uint64_t sub_224362BD4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224362BDC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224362BF4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224362C70(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 15)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224362E98(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224362E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224362E98(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224362F10();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224362F10()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791980);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791980))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E64F8();
    sub_224363114((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224363114((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791968, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791968, &dword_22314D000);
          __cxa_guard_release(&qword_255791980);
          return &stru_255791968;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791968;
}

void sub_224363060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791980);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791980);
  _Unwind_Resume(a1);
}

void sub_224363114(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2243631B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2243631CC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E65F0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2243632B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2243632D4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22436333C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_2243635C4(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 27);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224363494(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2243634B8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224363520()
{
  return 27;
}

uint64_t sub_224363528(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224363530@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224363548(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2243635C4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 27)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243637EC(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22436378C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243637EC(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224363864();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224363864()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557919A0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557919A0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231ED1BC();
    sub_224363A68((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224363A68((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791988, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791988, &dword_22314D000);
          __cxa_guard_release(&qword_2557919A0);
          return &stru_255791988;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791988;
}

void sub_2243639B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2557919A0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2557919A0);
  _Unwind_Resume(a1);
}

void sub_224363A68(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224363B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224363B20(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231ED2B4(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224363C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_224363C28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224363DA4(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 31);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224363D80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224363DA4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 31)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224363FCC(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224363F6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224363FCC(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224364044();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224364044()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557919C0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557919C0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EF4F0();
    sub_224364248((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224364248((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557919A8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557919A8, &dword_22314D000);
          __cxa_guard_release(&qword_2557919C0);
          return &stru_2557919A8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557919A8;
}

void sub_224364194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2557919C0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2557919C0);
  _Unwind_Resume(a1);
}

void sub_224364248(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2243642E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224364300(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224364368(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_2243645F0(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 35);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2243644C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2243644E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22436454C()
{
  return 35;
}

uint64_t sub_224364554(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_22436455C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224364574(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2243645F0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 35)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224364818(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_2243647B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224364818(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224364890();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224364890()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557919E0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557919E0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F169C();
    sub_224364A94((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224364A94((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557919C8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557919C8, &dword_22314D000);
          __cxa_guard_release(&qword_2557919E0);
          return &stru_2557919C8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557919C8;
}

void sub_2243649E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_2557919E0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_2557919E0);
  _Unwind_Resume(a1);
}

void sub_224364A94(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224364B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224364B4C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F1794(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224364C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_224364C54(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;
  double v15;
  double v16;
  unsigned int v17;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  double ****v65;
  uint64_t v66;
  __int16 *v67;
  int v68;
  _BYTE *v69;
  double v72;
  double v73;
  double v74;
  double v77;
  double v78;
  double v79;
  double v82;
  double v83;
  double v84;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[2];
  double v95;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  double ****v102;
  __int128 v103;
  _OWORD v104[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a2 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a2 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v12 = *v3;
    v11 = v3[1];
    _Q0.n128_u32[0] = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_Q0.n128_u32[0]);
    v14 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v17 = 255;
    goto LABEL_14;
  }
  v12 = *v3;
  v11 = v3[1];
  _Q0.n128_u32[0] = 1006632960;
  LOWORD(_S1) = 15360;
  v14 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = *(double *)(a2 + 24);
  if (v15 < 0.0)
    v15 = 0.0;
  v14 = (int)v15;
  v16 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v16 = *(double *)(a2 + 32);
  v17 = (int)v16;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v17;
  if (_ZF)
    return sub_224365468(v12, v11, _Q0);
  __asm { FCVT            D0, H0 }
  v98 = _D0;
  __asm { FCVT            D1, H1 }
  v96 = (double)v14;
  v97 = 1.0 / (_D1 - _D0);
  _Q0.n128_f64[0] = (double)v17 - (double)v14;
  v95 = _Q0.n128_f64[0];
  v94[0] = &v98;
  v94[1] = &v97;
  v93[0] = &v96;
  v93[1] = &v95;
  v92[0] = v94;
  v92[1] = v93;
  v23 = *(_QWORD *)(v12 + 8);
  if (!v23)
    goto LABEL_35;
  v24 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v24)
    goto LABEL_101;
  p_shared_owners = (unint64_t *)&v24->__shared_owners_;
  do
    v26 = __ldxr(p_shared_owners);
  while (__stxr(v26 + 1, p_shared_owners));
  do
    v27 = __ldaxr(p_shared_owners);
  while (__stlxr(v27 - 1, p_shared_owners));
  if (!v27)
  {
    ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
    std::__shared_weak_count::__release_weak(v24);
  }
  v23 = *(_QWORD *)(v12 + 8);
  v28 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v28)
    goto LABEL_101;
  v29 = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(v29);
  while (__stxr(v30 + 1, v29));
  do
    v31 = __ldaxr(v29);
  while (__stlxr(v31 - 1, v29));
  if (v31)
  {
LABEL_101:
    if (*(_BYTE *)(v12 + 73))
      goto LABEL_31;
LABEL_35:
    v100 = 0;
    v32 = *(_QWORD *)(v11 + 8);
    if (!v32)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
  std::__shared_weak_count::__release_weak(v28);
  if (!*(_BYTE *)(v12 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v23 + 96))(&v100, v23, 0);
  v32 = *(_QWORD *)(v11 + 8);
  if (!v32)
  {
LABEL_51:
    v99 = 0;
    v101 = v92;
    if (*(_DWORD *)(v12 + 32))
      goto LABEL_52;
    goto LABEL_95;
  }
LABEL_36:
  v34 = *(std::__shared_weak_count **)(v11 + 16);
  if (!v34)
    goto LABEL_47;
  v35 = (unint64_t *)&v34->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (!v37)
  {
    ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
    std::__shared_weak_count::__release_weak(v34);
  }
  v32 = *(_QWORD *)(v11 + 8);
  v38 = *(std::__shared_weak_count **)(v11 + 16);
  if (!v38)
    goto LABEL_47;
  v39 = (unint64_t *)&v38->__shared_owners_;
  do
    v40 = __ldxr(v39);
  while (__stxr(v40 + 1, v39));
  do
    v41 = __ldaxr(v39);
  while (__stlxr(v41 - 1, v39));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
    if (!*(_BYTE *)(v11 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v11 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v32 + 96))(&v99, v32, 1);
  v101 = v92;
  if (*(_DWORD *)(v12 + 32))
  {
LABEL_52:
    v42 = *(_DWORD *)(v12 + 36);
    if (v42)
    {
      v43 = *(_DWORD *)(v12 + 40);
      if (v43)
      {
        v102 = (double ****)&v101;
        v45 = *(unsigned int *)(v12 + 48);
        v44 = *(unsigned int *)(v12 + 52);
        v46 = *(unsigned int *)(v11 + 48);
        v47 = *(unsigned int *)(v11 + 52);
        v48 = *(__int16 **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v48)
        {
          v49 = *(_QWORD *)(v12 + 8);
          v50 = *(std::__shared_weak_count **)(v12 + 16);
          if (v50)
          {
            v51 = (unint64_t *)&v50->__shared_owners_;
            do
              v52 = __ldxr(v51);
            while (__stxr(v52 + 1, v51));
            do
              v53 = __ldaxr(v51);
            while (__stlxr(v53 - 1, v51));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v48 = *(__int16 **)(v12 + 24);
        }
        v54 = *(_BYTE **)(v11 + 24);
        if (*(_BYTE *)(v11 + 72) && v54)
        {
          v55 = *(_QWORD *)(v11 + 8);
          v56 = *(std::__shared_weak_count **)(v11 + 16);
          if (v56)
          {
            v57 = (unint64_t *)&v56->__shared_owners_;
            do
              v58 = __ldxr(v57);
            while (__stxr(v58 + 1, v57));
            do
              v59 = __ldaxr(v57);
            while (__stlxr(v59 - 1, v57));
            if (!v59)
            {
              ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
              std::__shared_weak_count::__release_weak(v56);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v55 + 88))(v55, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v54 = *(_BYTE **)(v11 + 24);
        }
        v60 = v42 - 1;
        v103 = 0u;
        v104[0] = 0u;
        v61 = 2 * v45;
        v62 = v43 - 1;
        if (v62)
        {
          v91 = v47;
          if (v60)
          {
            v63 = 0;
            v64 = v44;
            v65 = v102;
            v66 = 2 * v64;
            do
            {
              v67 = v48;
              v68 = v60;
              v69 = v54;
              do
              {
                _H0 = *v67;
                __asm { FCVT            D0, H0 }
                v72 = (_D0 - ****v65) * *(**v65)[1];
                v73 = fmax(v72, 0.0);
                if (v72 <= 1.0)
                  v74 = v73;
                else
                  v74 = 1.0;
                *v69 = llround(**(*v65)[1] + v74 * *(*v65)[1][1]);
                _H0 = v67[1];
                __asm { FCVT            D0, H0 }
                v77 = (_D0 - ****v65) * *(**v65)[1];
                v78 = fmax(v77, 0.0);
                if (v77 <= 1.0)
                  v79 = v78;
                else
                  v79 = 1.0;
                v69[1] = llround(**(*v65)[1] + v79 * *(*v65)[1][1]);
                _H0 = v67[2];
                __asm { FCVT            D0, H0 }
                v82 = (_D0 - ****v65) * *(**v65)[1];
                v83 = fmax(v82, 0.0);
                if (v82 <= 1.0)
                  v84 = v83;
                else
                  v84 = 1.0;
                v69[2] = llround(**(*v65)[1] + v84 * *(*v65)[1][1]);
                _H0 = v67[3];
                __asm { FCVT            D0, H0 }
                v87 = (_D0 - ****v65) * *(**v65)[1];
                v88 = fmax(v87, 0.0);
                if (v87 <= 1.0)
                  v89 = v88;
                else
                  v89 = 1.0;
                v69[3] = llround(**(*v65)[1] + v89 * *(*v65)[1][1]);
                v69 += v46;
                v67 = (__int16 *)((char *)v67 + v61);
                --v68;
              }
              while (v68);
              *(_QWORD *)&v103 = v67;
              *(_QWORD *)&v104[0] = v69;
              sub_224365964(&v102, (__int16 **)&v103, (uint64_t)v104);
              v48 = (__int16 *)((char *)v48 + v66);
              v54 += v91;
              ++v63;
            }
            while (v63 != v62);
          }
          else
          {
            do
            {
              *(_QWORD *)&v103 = v48;
              *(_QWORD *)&v104[0] = v54;
              sub_224365964(&v102, (__int16 **)&v103, (uint64_t)v104);
              v54 += v47;
              v48 += v44;
              --v62;
            }
            while (v62);
          }
        }
        for (; v60; --v60)
        {
          *(_QWORD *)&v103 = v48;
          *(_QWORD *)&v104[0] = v54;
          sub_224365964(&v102, (__int16 **)&v103, (uint64_t)v104);
          v54 += v46;
          v48 = (__int16 *)((char *)v48 + v61);
        }
        *(_QWORD *)&v103 = v48;
        *(_QWORD *)&v104[0] = v54;
        _Q0.n128_f64[0] = sub_224365964(&v102, (__int16 **)&v103, (uint64_t)v104);
      }
    }
  }
LABEL_95:
  v90 = v99;
  v99 = 0;
  if (v90)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v90 + 8))(v90, _Q0);
  result = v100;
  v100 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
  return result;
}

void sub_224365324(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (!a22)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a22 + 8))(a22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224365388(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  char v22;
  char v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 23544;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_224365AD0(v4, v5, (uint64_t)v19);
}

uint64_t sub_22436545C(uint64_t **a1, __n128 a2)
{
  return sub_224365468(**a1, (*a1)[1], a2);
}

uint64_t sub_224365468(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  _OWORD v54[2];

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_64;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v46 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v45, v14, 1);
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v46, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v45 = 0;
  v23 = *(_DWORD *)(a1 + 32);
  if (!v23)
    goto LABEL_58;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v48 = v23 - 1;
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a2 + 48);
      v49 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v47 = 0;
      v50 = v24 - 1;
      v51 = v26 | (v27 << 32);
      v52 = v25 - 1;
      v53 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(__int16 **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(__int16 **)(a2 + 24);
      }
      memset(v54, 0, sizeof(v54));
      v40 = v52;
      if (v52)
      {
        v41 = HIDWORD(v53);
        v42 = 2 * v53;
        do
        {
          sub_224365870(&v47, (__int16 **)v54, v28, v34);
          v34 = (__int16 *)((char *)v34 + v41);
          v28 = (__int16 *)((char *)v28 + v42);
          --v40;
        }
        while (v40);
      }
      a3.n128_f32[0] = sub_224365870(&v47, (__int16 **)v54, v28, v34);
    }
  }
LABEL_58:
  v43 = v45;
  v45 = 0;
  if (v43)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v43 + 8))(v43, a3);
  result = v46;
  v46 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22436580C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_224365870(_DWORD *a1, __int16 **a2, __int16 *a3, __int16 *a4)
{
  unsigned int v4;
  float result;

  *a2 = a3;
  a2[2] = a4;
  if (a1[5])
  {
    v4 = 0;
    do
    {
      *a2 = a3;
      a2[2] = a4;
      _H0 = *a3;
      __asm { FCVT            S0, H0 }
      *(_BYTE *)a4 = (int)_S0;
      LOWORD(_S0) = (*a2)[1];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 1) = (int)_S0;
      LOWORD(_S0) = (*a2)[2];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 2) = (int)_S0;
      LOWORD(_S0) = (*a2)[3];
      __asm { FCVT            S0, H0 }
      *((_BYTE *)a2[2] + 3) = (int)_S0;
      a3 += a1[6];
      a4 = (__int16 *)((char *)a4 + a1[7]);
      ++v4;
    }
    while (v4 < a1[5]);
  }
  *a2 = a3;
  a2[2] = a4;
  _H0 = *a3;
  __asm { FCVT            S0, H0 }
  *(_BYTE *)a4 = (int)_S0;
  LOWORD(_S0) = (*a2)[1];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 1) = (int)_S0;
  LOWORD(_S0) = (*a2)[2];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 2) = (int)_S0;
  LOWORD(_S0) = (*a2)[3];
  __asm { FCVT            S0, H0 }
  *((_BYTE *)a2[2] + 3) = (int)result;
  return result;
}

double sub_224365964(double *****a1, __int16 **a2, uint64_t a3)
{
  double ***v3;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v15;
  double **v18;
  double **v19;
  double v20;
  double v21;
  double v22;
  double ***v23;
  double **v26;
  double **v27;
  double v28;
  double v29;
  double v30;
  double ***v31;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double result;

  v3 = **a1;
  _H0 = **a2;
  __asm { FCVT            D0, H0 }
  v11 = *v3;
  v10 = v3[1];
  v12 = (_D0 - **v11) * *v11[1];
  v13 = fmax(v12, 0.0);
  if (v12 <= 1.0)
    v14 = v13;
  else
    v14 = 1.0;
  **(_BYTE **)a3 = llround(**v10 + v14 * *v10[1]);
  v15 = **a1;
  _H2 = (*a2)[1];
  __asm { FCVT            D2, H2 }
  v19 = *v15;
  v18 = v15[1];
  v20 = (_D2 - **v19) * *v19[1];
  v21 = fmax(v20, 0.0);
  if (v20 <= 1.0)
    v22 = v21;
  else
    v22 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 1) = llround(**v18 + v22 * *v18[1]);
  v23 = **a1;
  _H2 = (*a2)[2];
  __asm { FCVT            D2, H2 }
  v27 = *v23;
  v26 = v23[1];
  v28 = (_D2 - **v27) * *v27[1];
  v29 = fmax(v28, 0.0);
  if (v28 <= 1.0)
    v30 = v29;
  else
    v30 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 2) = llround(**v26 + v30 * *v26[1]);
  v31 = **a1;
  _H2 = (*a2)[3];
  __asm { FCVT            D2, H2 }
  v35 = *v31;
  v34 = v31[1];
  v36 = (_D2 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 > 1.0)
    v37 = 1.0;
  result = **v34 + v37 * *v34[1];
  *(_BYTE *)(*(_QWORD *)a3 + 3) = llround(result);
  return result;
}

uint64_t sub_224365AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  __int16 ***v47;
  __int16 *v48;
  int v49;
  _BYTE *v50;
  __int16 *v51;
  __int16 **v52;
  __int16 **v63;
  __int16 *v68;
  __int16 **v71;
  __int16 *v76;
  __int16 **v79;
  uint64_t v86;
  uint64_t result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int16 ***v92;
  __int128 v93;
  __int128 v94;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_93;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_93;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_93:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v90 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v89, v15, 1);
    v91 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_87;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v90, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v89 = 0;
  v91 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_87;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v92 = (__int16 ***)&v91;
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(__int16 **)(a1 + 24);
      }
      v36 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(_BYTE **)(a2 + 24);
      }
      v42 = v24 - 1;
      v93 = 0u;
      v94 = 0u;
      v43 = 2 * v26;
      v44 = v25 - 1;
      if (v25 != 1)
      {
        v88 = v29;
        v45 = 2 * v27;
        if (v42)
        {
          v46 = 0;
          v47 = v92;
          while (1)
          {
            v48 = v30;
            v49 = v42;
            v50 = v36;
            do
            {
              while (1)
              {
                v52 = *v47;
                _H0 = *v48;
                _H1 = ***v47;
                __asm
                {
                  FCVT            S0, H0
                  FCVT            S1, H1
                }
                if (_S0 >= _S1)
                {
                  _H1 = *v52[2];
                  __asm { FCVT            S1, H1 }
                  if (_S0 <= _S1)
                    LODWORD(v52) = (int)_S0;
                  else
                    LOBYTE(v52) = *(_BYTE *)v52[3];
                }
                else
                {
                  LOBYTE(v52) = *(_BYTE *)v52[1];
                }
                *v50 = (_BYTE)v52;
                v63 = *v47;
                _H0 = v48[1];
                _H1 = ***v47;
                __asm
                {
                  FCVT            S0, H0
                  FCVT            S1, H1
                }
                if (_S0 < _S1)
                {
                  v68 = v63[1];
LABEL_70:
                  LOBYTE(v68) = *(_BYTE *)v68;
                  goto LABEL_72;
                }
                _H1 = *v63[2];
                __asm { FCVT            S1, H1 }
                if (_S0 > _S1)
                {
                  v68 = v63[3];
                  goto LABEL_70;
                }
                LODWORD(v68) = (int)_S0;
LABEL_72:
                v50[1] = (_BYTE)v68;
                v71 = *v47;
                _H0 = v48[2];
                _H1 = ***v47;
                __asm
                {
                  FCVT            S0, H0
                  FCVT            S1, H1
                }
                if (_S0 < _S1)
                {
                  v76 = v71[1];
LABEL_76:
                  LOBYTE(v76) = *(_BYTE *)v76;
                  goto LABEL_78;
                }
                _H1 = *v71[2];
                __asm { FCVT            S1, H1 }
                if (_S0 > _S1)
                {
                  v76 = v71[3];
                  goto LABEL_76;
                }
                LODWORD(v76) = (int)_S0;
LABEL_78:
                v50[2] = (_BYTE)v76;
                v79 = *v47;
                _H0 = v48[3];
                _H1 = ***v47;
                __asm
                {
                  FCVT            S0, H0
                  FCVT            S1, H1
                }
                if (_S0 >= _S1)
                  break;
                v51 = v79[1];
LABEL_60:
                v50[3] = *(_BYTE *)v51;
                v50 += v28;
                v48 = (__int16 *)((char *)v48 + v43);
                if (!--v49)
                  goto LABEL_57;
              }
              _H1 = *v79[2];
              __asm { FCVT            S1, H1 }
              if (_S0 > _S1)
              {
                v51 = v79[3];
                goto LABEL_60;
              }
              v50[3] = (int)_S0;
              v50 += v28;
              v48 = (__int16 *)((char *)v48 + v43);
              --v49;
            }
            while (v49);
LABEL_57:
            *(_QWORD *)&v93 = v48;
            *(_QWORD *)&v94 = v50;
            sub_2243660C8(&v92, (__int16 **)&v93, (uint64_t *)&v94);
            v30 = (__int16 *)((char *)v30 + v45);
            v36 += v88;
            if (++v46 == v44)
              goto LABEL_84;
          }
        }
        do
        {
          *(_QWORD *)&v93 = v30;
          *(_QWORD *)&v94 = v36;
          sub_2243660C8(&v92, (__int16 **)&v93, (uint64_t *)&v94);
          v36 += v29;
          v30 = (__int16 *)((char *)v30 + v45);
          --v44;
        }
        while (v44);
      }
LABEL_84:
      while (v42)
      {
        *(_QWORD *)&v93 = v30;
        *(_QWORD *)&v94 = v36;
        sub_2243660C8(&v92, (__int16 **)&v93, (uint64_t *)&v94);
        v36 += v28;
        v30 = (__int16 *)((char *)v30 + v43);
        --v42;
      }
      *(_QWORD *)&v93 = v30;
      *(_QWORD *)&v94 = v36;
      sub_2243660C8(&v92, (__int16 **)&v93, (uint64_t *)&v94);
    }
  }
LABEL_87:
  v86 = v89;
  v89 = 0;
  if (v86)
    (*(void (**)(uint64_t))(*(_QWORD *)v86 + 8))(v86);
  result = v90;
  v90 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224366064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

__int16 ****sub_2243660C8(__int16 ****result, __int16 **a2, uint64_t *a3)
{
  __int16 **v3;
  __int16 **v14;
  __int16 *v19;
  __int16 **v22;
  __int16 *v27;
  uint64_t v30;
  __int16 **v31;

  v3 = **result;
  _H0 = **a2;
  _H1 = **v3;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v3[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      LODWORD(v3) = (int)_S0;
    else
      LOBYTE(v3) = *(_BYTE *)v3[3];
  }
  else
  {
    LOBYTE(v3) = *(_BYTE *)v3[1];
  }
  *(_BYTE *)*a3 = (_BYTE)v3;
  v14 = **result;
  _H0 = (*a2)[1];
  _H1 = **v14;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 < _S1)
  {
    v19 = v14[1];
LABEL_10:
    LOBYTE(v19) = *(_BYTE *)v19;
    goto LABEL_12;
  }
  _H1 = *v14[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v19 = v14[3];
    goto LABEL_10;
  }
  LODWORD(v19) = (int)_S0;
LABEL_12:
  *(_BYTE *)(*a3 + 1) = (_BYTE)v19;
  v22 = **result;
  _H0 = (*a2)[2];
  _H1 = **v22;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 < _S1)
  {
    v27 = v22[1];
LABEL_16:
    LOBYTE(v27) = *(_BYTE *)v27;
    goto LABEL_18;
  }
  _H1 = *v22[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v27 = v22[3];
    goto LABEL_16;
  }
  LODWORD(v27) = (int)_S0;
LABEL_18:
  *(_BYTE *)(*a3 + 2) = (_BYTE)v27;
  v30 = *a3;
  v31 = **result;
  _H0 = (*a2)[3];
  _H1 = **v31;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v31[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *(_BYTE *)(v30 + 3) = (int)_S0;
    else
      *(_BYTE *)(v30 + 3) = *(_BYTE *)v31[3];
  }
  else
  {
    *(_BYTE *)(v30 + 3) = *(_BYTE *)v31[1];
  }
  return result;
}

uint64_t sub_22436624C(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  uint64_t v11;
  uint64_t v12;
  double v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v20;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int16 *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  _WORD *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  double v59;
  double v60;
  double v61;
  double v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  double v69;
  double v70;
  double v71;
  double v74;
  double v75;
  double v76;
  double v79;
  double v80;
  double v81;
  double v84;
  double v85;
  double v86;
  __int16 *v87;
  _WORD *v88;
  int v89;
  double v92;
  double v93;
  double v94;
  double v97;
  double v98;
  double v99;
  double v102;
  double v103;
  double v104;
  double v107;
  double v108;
  double v109;
  double v112;
  double v113;
  double v114;
  double v117;
  double v118;
  double v119;
  double v122;
  double v123;
  double v124;
  double v127;
  double v128;
  double v129;
  double v132;
  double v133;
  double v134;
  double v137;
  double v138;
  double v139;
  double v142;
  double v143;
  double v144;
  double v147;
  double v148;
  double v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    _Q0.n128_u64[0] = 0x40EFFC0000000000;
    if (*(double *)(a2 + 8) <= 65504.0)
      _Q0.n128_u64[0] = *(_QWORD *)(a2 + 8);
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v12 = *v3;
    v11 = v3[1];
    _S8 = v9 | (LOWORD(_S0) << 16);
    _S9 = HIWORD(_S8);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v17 = -65536;
    goto LABEL_14;
  }
  v12 = *v3;
  v11 = v3[1];
  LOWORD(_S8) = 0;
  LOWORD(_S9) = 15360;
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v15 = *(double *)(a2 + 24);
  if (v15 < 0.0)
    v15 = 0.0;
  v16 = (int)v15;
  _Q0.n128_u64[0] = 0x40EFFFE000000000;
  if (*(double *)(a2 + 32) <= 65535.0)
    _Q0.n128_u64[0] = *(_QWORD *)(a2 + 32);
  v17 = v16 | ((int)_Q0.n128_f64[0] << 16);
LABEL_14:
  v18 = (unsigned __int16)v17;
  __asm { FCVT            S0, H8 }
  v20 = HIWORD(v17);
  __asm { FCVT            S0, H9 }
  _ZF = _ZF && _Q0.n128_f32[0] == (float)HIWORD(v17);
  if (_ZF)
    return sub_224366B40(v12, v11, _Q0);
  v22 = *(_QWORD *)(v12 + 8);
  if (!v22)
    goto LABEL_35;
  v23 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v23)
    goto LABEL_136;
  p_shared_owners = (unint64_t *)&v23->__shared_owners_;
  do
    v25 = __ldxr(p_shared_owners);
  while (__stxr(v25 + 1, p_shared_owners));
  do
    v26 = __ldaxr(p_shared_owners);
  while (__stlxr(v26 - 1, p_shared_owners));
  if (!v26)
  {
    ((void (*)(std::__shared_weak_count *, __n128))v23->__on_zero_shared)(v23, _Q0);
    std::__shared_weak_count::__release_weak(v23);
  }
  v22 = *(_QWORD *)(v12 + 8);
  v27 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v27)
    goto LABEL_136;
  v28 = (unint64_t *)&v27->__shared_owners_;
  do
    v29 = __ldxr(v28);
  while (__stxr(v29 + 1, v28));
  do
    v30 = __ldaxr(v28);
  while (__stlxr(v30 - 1, v28));
  if (v30)
  {
LABEL_136:
    if (*(_BYTE *)(v12 + 73))
      goto LABEL_31;
LABEL_35:
    v154 = 0;
    v31 = *(_QWORD *)(v11 + 8);
    if (!v31)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *, __n128))v27->__on_zero_shared)(v27, _Q0);
  std::__shared_weak_count::__release_weak(v27);
  if (!*(_BYTE *)(v12 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128))(*(_QWORD *)v22 + 96))(&v154, v22, 0, _Q0);
  v31 = *(_QWORD *)(v11 + 8);
  if (!v31)
  {
LABEL_51:
    v153 = 0;
    if (*(_DWORD *)(v12 + 32))
      goto LABEL_52;
    goto LABEL_130;
  }
LABEL_36:
  v33 = *(std::__shared_weak_count **)(v11 + 16);
  if (!v33)
    goto LABEL_47;
  v34 = (unint64_t *)&v33->__shared_owners_;
  do
    v35 = __ldxr(v34);
  while (__stxr(v35 + 1, v34));
  do
    v36 = __ldaxr(v34);
  while (__stlxr(v36 - 1, v34));
  if (!v36)
  {
    ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
    std::__shared_weak_count::__release_weak(v33);
  }
  v31 = *(_QWORD *)(v11 + 8);
  v37 = *(std::__shared_weak_count **)(v11 + 16);
  if (!v37)
    goto LABEL_47;
  v38 = (unint64_t *)&v37->__shared_owners_;
  do
    v39 = __ldxr(v38);
  while (__stxr(v39 + 1, v38));
  do
    v40 = __ldaxr(v38);
  while (__stlxr(v40 - 1, v38));
  if (!v40)
  {
    ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
    std::__shared_weak_count::__release_weak(v37);
    if (!*(_BYTE *)(v11 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v11 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v31 + 96))(&v153, v31, 1);
  if (*(_DWORD *)(v12 + 32))
  {
LABEL_52:
    v41 = *(_DWORD *)(v12 + 36);
    if (v41)
    {
      v42 = *(_DWORD *)(v12 + 40);
      if (v42)
      {
        v43 = *(unsigned int *)(v12 + 48);
        v44 = *(unsigned int *)(v11 + 48);
        v151 = *(unsigned int *)(v11 + 52);
        v152 = *(unsigned int *)(v12 + 52);
        v45 = *(__int16 **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v45)
        {
          v46 = *(_QWORD *)(v12 + 8);
          v47 = *(std::__shared_weak_count **)(v12 + 16);
          if (v47)
          {
            v48 = (unint64_t *)&v47->__shared_owners_;
            do
              v49 = __ldxr(v48);
            while (__stxr(v49 + 1, v48));
            do
              v50 = __ldaxr(v48);
            while (__stlxr(v50 - 1, v48));
            if (!v50)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v46 + 88))(v46, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v45 = *(__int16 **)(v12 + 24);
        }
        v51 = *(_WORD **)(v11 + 24);
        if (*(_BYTE *)(v11 + 72) && v51)
        {
          v52 = *(_QWORD *)(v11 + 8);
          v53 = *(std::__shared_weak_count **)(v11 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v52 + 88))(v52, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(_WORD **)(v11 + 24);
        }
        __asm
        {
          FCVT            D1, H8
          FCVT            D0, H9
        }
        v59 = _D0 - _D1;
        v60 = (double)v18;
        v61 = 1.0 / v59;
        v62 = (double)v20 - (double)v18;
        v63 = v41 - 1;
        v64 = 2 * v43;
        v65 = 2 * v44;
        if (v42 != 1)
        {
          v66 = 0;
          do
          {
            v87 = v45;
            v88 = v51;
            if (v41 != 1)
            {
              v87 = v45;
              v89 = v41 - 1;
              v88 = v51;
              do
              {
                _H6 = *v87;
                __asm { FCVT            D6, H6 }
                v92 = v61 * (_D6 - _D1);
                v93 = fmax(v92, 0.0);
                if (v92 <= 1.0)
                  v94 = v93;
                else
                  v94 = 1.0;
                *v88 = llround(v62 * v94 + v60);
                _H6 = v87[1];
                __asm { FCVT            D6, H6 }
                v97 = v61 * (_D6 - _D1);
                v98 = fmax(v97, 0.0);
                if (v97 <= 1.0)
                  v99 = v98;
                else
                  v99 = 1.0;
                v88[1] = llround(v62 * v99 + v60);
                _H6 = v87[2];
                __asm { FCVT            D6, H6 }
                v102 = v61 * (_D6 - _D1);
                v103 = fmax(v102, 0.0);
                if (v102 <= 1.0)
                  v104 = v103;
                else
                  v104 = 1.0;
                v88[2] = llround(v62 * v104 + v60);
                _H6 = v87[3];
                __asm { FCVT            D6, H6 }
                v107 = v61 * (_D6 - _D1);
                v108 = fmax(v107, 0.0);
                if (v107 <= 1.0)
                  v109 = v108;
                else
                  v109 = 1.0;
                v88[3] = llround(v62 * v109 + v60);
                v88 = (_WORD *)((char *)v88 + v65);
                v87 = (__int16 *)((char *)v87 + v64);
                --v89;
              }
              while (v89);
            }
            _H6 = *v87;
            __asm { FCVT            D6, H6 }
            v69 = v61 * (_D6 - _D1);
            v70 = fmax(v69, 0.0);
            if (v69 <= 1.0)
              v71 = v70;
            else
              v71 = 1.0;
            *v88 = llround(v62 * v71 + v60);
            _H6 = v87[1];
            __asm { FCVT            D6, H6 }
            v74 = v61 * (_D6 - _D1);
            v75 = fmax(v74, 0.0);
            if (v74 <= 1.0)
              v76 = v75;
            else
              v76 = 1.0;
            v88[1] = llround(v62 * v76 + v60);
            _H6 = v87[2];
            __asm { FCVT            D6, H6 }
            v79 = v61 * (_D6 - _D1);
            v80 = fmax(v79, 0.0);
            if (v79 <= 1.0)
              v81 = v80;
            else
              v81 = 1.0;
            v88[2] = llround(v62 * v81 + v60);
            _H6 = v87[3];
            __asm { FCVT            D6, H6 }
            v84 = v61 * (_D6 - _D1);
            v85 = fmax(v84, 0.0);
            if (v84 <= 1.0)
              v86 = v85;
            else
              v86 = 1.0;
            v88[3] = llround(v62 * v86 + v60);
            v45 += v152;
            v51 += v151;
            ++v66;
          }
          while (v66 != v42 - 1);
        }
        if (v41 != 1)
        {
          do
          {
            _H6 = *v45;
            __asm { FCVT            D6, H6 }
            v112 = v61 * (_D6 - _D1);
            v113 = fmax(v112, 0.0);
            if (v112 <= 1.0)
              v114 = v113;
            else
              v114 = 1.0;
            *v51 = llround(v62 * v114 + v60);
            _H6 = v45[1];
            __asm { FCVT            D6, H6 }
            v117 = v61 * (_D6 - _D1);
            v118 = fmax(v117, 0.0);
            if (v117 <= 1.0)
              v119 = v118;
            else
              v119 = 1.0;
            v51[1] = llround(v62 * v119 + v60);
            _H6 = v45[2];
            __asm { FCVT            D6, H6 }
            v122 = v61 * (_D6 - _D1);
            v123 = fmax(v122, 0.0);
            if (v122 <= 1.0)
              v124 = v123;
            else
              v124 = 1.0;
            v51[2] = llround(v62 * v124 + v60);
            _H6 = v45[3];
            __asm { FCVT            D6, H6 }
            v127 = v61 * (_D6 - _D1);
            v128 = fmax(v127, 0.0);
            if (v127 <= 1.0)
              v129 = v128;
            else
              v129 = 1.0;
            v51[3] = llround(v62 * v129 + v60);
            v45 = (__int16 *)((char *)v45 + v64);
            v51 = (_WORD *)((char *)v51 + v65);
            --v63;
          }
          while (v63);
        }
        _H4 = *v45;
        __asm { FCVT            D4, H4 }
        v132 = v61 * (_D4 - _D1);
        v133 = fmax(v132, 0.0);
        if (v132 <= 1.0)
          v134 = v133;
        else
          v134 = 1.0;
        *v51 = llround(v62 * v134 + v60);
        _H4 = v45[1];
        __asm { FCVT            D4, H4 }
        v137 = v61 * (_D4 - _D1);
        v138 = fmax(v137, 0.0);
        if (v137 <= 1.0)
          v139 = v138;
        else
          v139 = 1.0;
        v51[1] = llround(v62 * v139 + v60);
        _H4 = v45[2];
        __asm { FCVT            D4, H4 }
        v142 = v61 * (_D4 - _D1);
        v143 = fmax(v142, 0.0);
        if (v142 <= 1.0)
          v144 = v143;
        else
          v144 = 1.0;
        v51[2] = llround(v62 * v144 + v60);
        _H4 = v45[3];
        __asm { FCVT            D4, H4 }
        v147 = v61 * (_D4 - _D1);
        v148 = fmax(v147, 0.0);
        if (v147 <= 1.0)
          v149 = v148;
        else
          v149 = 1.0;
        v51[3] = llround(v62 * v149 + v60);
      }
    }
  }
LABEL_130:
  v150 = v153;
  v153 = 0;
  if (v150)
    (*(void (**)(uint64_t))(*(_QWORD *)v150 + 8))(v150);
  result = v154;
  v154 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243669FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224366A60(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  __int16 v22;
  __int16 v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 31744;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_22436700C(v4, v5, (uint64_t)v19);
}

uint64_t sub_224366B34(uint64_t **a1, __n128 a2)
{
  return sub_224366B40(**a1, (*a1)[1], a2);
}

uint64_t sub_224366B40(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  __int16 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  _OWORD v54[2];

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_64;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v46 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v45, v14, 1);
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v46, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v45 = 0;
  v23 = *(_DWORD *)(a1 + 32);
  if (!v23)
    goto LABEL_58;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v48 = v23 - 1;
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a2 + 48);
      v49 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v47 = 0;
      v50 = v24 - 1;
      v51 = v26 | (v27 << 32);
      v52 = v25 - 1;
      v53 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(__int16 **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(__int16 **)(a2 + 24);
      }
      memset(v54, 0, sizeof(v54));
      v40 = v52;
      if (v52)
      {
        v41 = 2 * v53;
        v42 = 2 * HIDWORD(v53);
        do
        {
          sub_224366F4C(&v47, (__int16 **)v54, v28, v34);
          v28 = (__int16 *)((char *)v28 + v41);
          v34 = (__int16 *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      a3.n128_f32[0] = sub_224366F4C(&v47, (__int16 **)v54, v28, v34);
    }
  }
LABEL_58:
  v43 = v45;
  v45 = 0;
  if (v43)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v43 + 8))(v43, a3);
  result = v46;
  v46 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224366EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_224366F4C(_DWORD *a1, __int16 **a2, __int16 *a3, __int16 *a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  float result;

  *a2 = a3;
  a2[2] = a4;
  v4 = a1[5];
  if (v4)
  {
    v5 = 2 * a1[6];
    v6 = 2 * a1[7];
    do
    {
      *a2 = a3;
      a2[2] = a4;
      _H0 = *a3;
      __asm { FCVT            S0, H0 }
      *a4 = (int)_S0;
      LOWORD(_S0) = a3[1];
      __asm { FCVT            S0, H0 }
      a4[1] = (int)_S0;
      LOWORD(_S0) = a3[2];
      __asm { FCVT            S0, H0 }
      a4[2] = (int)_S0;
      LOWORD(_S0) = a3[3];
      __asm { FCVT            S0, H0 }
      a4[3] = (int)_S0;
      a3 = (__int16 *)((char *)a3 + v5);
      a4 = (__int16 *)((char *)a4 + v6);
      --v4;
    }
    while (v4);
  }
  *a2 = a3;
  a2[2] = a4;
  _H0 = *a3;
  __asm { FCVT            S0, H0 }
  *a4 = (int)_S0;
  LOWORD(_S0) = a3[1];
  __asm { FCVT            S0, H0 }
  a4[1] = (int)_S0;
  LOWORD(_S0) = a3[2];
  __asm { FCVT            S0, H0 }
  a4[2] = (int)_S0;
  LOWORD(_S0) = a3[3];
  __asm { FCVT            S0, H0 }
  a4[3] = (int)result;
  return result;
}

uint64_t sub_22436700C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int i;
  __int16 *v48;
  _WORD *v49;
  _WORD *v50;
  __int16 *v51;
  int v52;
  __int16 *v53;
  _WORD *v54;
  int v55;
  int v64;
  int v71;
  int v78;
  uint64_t v87;
  uint64_t result;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_90;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_90;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_90:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v91 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v90, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_84;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v91, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v90 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_84;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v89 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v28 = *(unsigned int *)(a2 + 52);
      v29 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(__int16 **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v24 - 1;
      v42 = 2 * v26;
      v43 = 2 * v27;
      v44 = v25 - 1;
      if (v44)
      {
        v45 = 2 * v89;
        v46 = 2 * v28;
        if (v41)
        {
          for (i = 0; i != v44; ++i)
          {
            v48 = *(__int16 **)(a3 + 16);
            v49 = *(_WORD **)(a3 + 24);
            v50 = v35;
            v51 = v29;
            v52 = v41;
            v53 = *(__int16 **)a3;
            v54 = *(_WORD **)(a3 + 8);
            do
            {
              _H0 = *v51;
              _H1 = *v53;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v48;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v64 = (int)_S0;
                else
                  LOWORD(v64) = *v49;
              }
              else
              {
                LOWORD(v64) = *v54;
              }
              *v50 = v64;
              _H0 = v51[1];
              _H1 = *v53;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v48;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v71 = (int)_S0;
                else
                  LOWORD(v71) = *v49;
              }
              else
              {
                LOWORD(v71) = *v54;
              }
              v50[1] = v71;
              _H0 = v51[2];
              _H1 = *v53;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v48;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v78 = (int)_S0;
                else
                  LOWORD(v78) = *v49;
              }
              else
              {
                LOWORD(v78) = *v54;
              }
              v50[2] = v78;
              _H0 = v51[3];
              _H1 = *v53;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 < _S1)
              {
                LOWORD(v55) = *v54;
              }
              else
              {
                _H1 = *v48;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v55 = (int)_S0;
                else
                  LOWORD(v55) = *v49;
              }
              v50[3] = v55;
              v51 = (__int16 *)((char *)v51 + v42);
              v50 = (_WORD *)((char *)v50 + v43);
              --v52;
            }
            while (v52);
            sub_224367564((__int16 **)a3, v51, v50);
            v29 = (__int16 *)((char *)v29 + v45);
            v35 = (_WORD *)((char *)v35 + v46);
          }
        }
        else
        {
          do
          {
            sub_224367564((__int16 **)a3, v29, v35);
            v29 = (__int16 *)((char *)v29 + v45);
            v35 = (_WORD *)((char *)v35 + v46);
            --v44;
          }
          while (v44);
        }
      }
      for (; v41; --v41)
      {
        sub_224367564((__int16 **)a3, v29, v35);
        v29 = (__int16 *)((char *)v29 + v42);
        v35 = (_WORD *)((char *)v35 + v43);
      }
      sub_224367564((__int16 **)a3, v29, v35);
    }
  }
LABEL_84:
  v87 = v90;
  v90 = 0;
  if (v87)
    (*(void (**)(uint64_t))(*(_QWORD *)v87 + 8))(v87);
  result = v91;
  v91 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224367500(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

__int16 **sub_224367564(__int16 **result, __int16 *a2, _WORD *a3)
{
  __int16 *v3;
  int v12;
  __int16 *v19;
  __int16 *v26;

  v3 = *result;
  _H0 = *a2;
  _H1 = **result;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *result[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v12 = (int)_S0;
    else
      LOWORD(v12) = *result[3];
  }
  else
  {
    LOWORD(v12) = *result[1];
  }
  *a3 = v12;
  _H0 = a2[1];
  _H1 = *v3;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v19 = result[1];
LABEL_10:
    LOWORD(v19) = *v19;
    goto LABEL_12;
  }
  _H1 = *result[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v19 = result[3];
    goto LABEL_10;
  }
  LODWORD(v19) = (int)_S0;
LABEL_12:
  a3[1] = (_WORD)v19;
  _H0 = a2[2];
  _H1 = *v3;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v26 = result[1];
LABEL_16:
    LOWORD(v26) = *v26;
    goto LABEL_18;
  }
  _H1 = *result[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v26 = result[3];
    goto LABEL_16;
  }
  LODWORD(v26) = (int)_S0;
LABEL_18:
  a3[2] = (_WORD)v26;
  _H0 = a2[3];
  _H1 = *v3;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *result[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      a3[3] = (int)_S0;
    else
      a3[3] = *result[3];
  }
  else
  {
    a3[3] = *result[1];
  }
  return result;
}

uint64_t sub_22436769C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  double v16;
  float v17;
  double v18;
  float v19;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int16 *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  float *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  double ****v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  _OWORD v86[2];

  v3 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v13 = *v3;
    v12 = v3[1];
    LOWORD(_S0) = 0;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    __asm
    {
      FCVT            S4, H0
      FCVT            S5, H1
    }
    if (_S4 != 0.0 || 1.0 != _S5)
      goto LABEL_15;
    return sub_224367CE8(v13, v12);
  }
  v4 = -65504.0;
  if (*(double *)a2 >= -65504.0)
    v4 = *(double *)a2;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v9 = LOWORD(_S0);
  v10 = 65504.0;
  if (*(double *)(a2 + 8) <= 65504.0)
    v10 = *(double *)(a2 + 8);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v13 = *v3;
  v12 = v3[1];
  _S0 = v9 | (LOWORD(_S0) << 16);
  _S1 = HIWORD(_S0);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (v17 == _S4 && v19 == _S5)
    return sub_224367CE8(v13, v12);
LABEL_15:
  __asm { FCVT            D0, H0 }
  v74 = _D0;
  __asm { FCVT            D1, H1 }
  v72 = v17;
  v73 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = v19 - v17;
  v71 = a3.n128_f64[0];
  v70[0] = &v74;
  v70[1] = &v73;
  v69[0] = &v72;
  v69[1] = &v71;
  v68[0] = v70;
  v68[1] = v69;
  v25 = *(_QWORD *)(v13 + 8);
  if (!v25)
    goto LABEL_38;
  v26 = *(std::__shared_weak_count **)(v13 + 16);
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(p_shared_owners);
    while (__stxr(v28 + 1, p_shared_owners));
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    v25 = *(_QWORD *)(v13 + 8);
    v30 = *(std::__shared_weak_count **)(v13 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }
  if (*(_BYTE *)(v13 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v25 + 96))(&v76, v25, 0);
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v76 = 0;
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_54;
  }
  v39 = *(std::__shared_weak_count **)(v12 + 16);
  if (v39)
  {
    v40 = (unint64_t *)&v39->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
    v34 = *(_QWORD *)(v12 + 8);
    v43 = *(std::__shared_weak_count **)(v12 + 16);
    if (v43)
    {
      v44 = (unint64_t *)&v43->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
  }
  if (!*(_BYTE *)(v12 + 73))
  {
LABEL_54:
    v75 = 0;
    v77 = v68;
    v47 = *(_DWORD *)(v13 + 32);
    if (v47)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v34 + 96))(&v75, v34, 1);
  v77 = v68;
  v47 = *(_DWORD *)(v13 + 32);
  if (v47)
  {
LABEL_55:
    v48 = *(_DWORD *)(v13 + 36);
    if (v48)
    {
      v49 = *(_DWORD *)(v13 + 40);
      if (v49)
      {
        v78 = (double ****)&v77;
        v79 = 0;
        v80 = v47 - 1;
        v50 = *(unsigned int *)(v13 + 48);
        v51 = *(unsigned int *)(v12 + 48);
        v81 = *(unsigned int *)(v13 + 44) | ((unint64_t)*(unsigned int *)(v12 + 44) << 32);
        v82 = v48 - 1;
        v83 = v50 | (v51 << 32);
        v84 = v49 - 1;
        v85 = *(unsigned int *)(v13 + 52) | ((unint64_t)*(unsigned int *)(v12 + 52) << 32);
        v52 = *(__int16 **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v52)
        {
          v53 = *(_QWORD *)(v13 + 8);
          v54 = *(std::__shared_weak_count **)(v13 + 16);
          if (v54)
          {
            v55 = (unint64_t *)&v54->__shared_owners_;
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v53 + 88))(v53, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v52 = *(__int16 **)(v13 + 24);
        }
        v58 = *(float **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v58)
        {
          v59 = *(_QWORD *)(v12 + 8);
          v60 = *(std::__shared_weak_count **)(v12 + 16);
          if (v60)
          {
            v61 = (unint64_t *)&v60->__shared_owners_;
            do
              v62 = __ldxr(v61);
            while (__stxr(v62 + 1, v61));
            do
              v63 = __ldaxr(v61);
            while (__stlxr(v63 - 1, v61));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
              std::__shared_weak_count::__release_weak(v60);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v59 + 88))(v59, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v58 = *(float **)(v12 + 24);
        }
        memset(v86, 0, sizeof(v86));
        v64 = v84;
        if (v84)
        {
          v65 = 2 * v85;
          v66 = 4 * HIDWORD(v85);
          do
          {
            sub_2243681F8(&v79, (__int16 **)v86, &v78, v52, v58);
            v52 = (__int16 *)((char *)v52 + v65);
            v58 = (float *)((char *)v58 + v66);
            --v64;
          }
          while (v64);
        }
        a3.n128_f32[0] = sub_2243681F8(&v79, (__int16 **)v86, &v78, v52, v58);
      }
    }
  }
LABEL_79:
  v67 = v75;
  v75 = 0;
  if (v67)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v67 + 8))(v67, a3);
  result = v76;
  v76 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224367BA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224367C08(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  _QWORD v17[4];
  __int16 v18;
  __int16 v19;
  float v20;
  float v21;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 1.0;
    if (v6 < -3.40282347e38)
      v6 = -3.40282347e38;
    _S0 = v6;
    if (v7 > 3.40282347e38)
      v7 = 3.40282347e38;
    _S1 = v7;
    v20 = _S1;
    v21 = _S0;
    __asm { FCVT            H0, S0 }
    v19 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v20 = 1.0;
    v21 = 0.0;
    _H0 = 15360;
    v19 = 0;
  }
  v18 = _H0;
  v17[0] = &v19;
  v17[1] = &v21;
  v17[2] = &v18;
  v17[3] = &v20;
  return sub_2243683CC(v4, v5, (uint64_t)v17);
}

uint64_t sub_224367CDC(uint64_t **a1)
{
  return sub_224367CE8(**a1, (*a1)[1]);
}

uint64_t sub_224367CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  _DWORD *v45;
  _WORD *v46;
  _WORD *v47;
  _DWORD *v48;
  int v49;
  uint64_t v79;
  uint64_t result;
  uint64_t v81;
  uint64_t v82;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v82 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v81, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v82, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v81 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_DWORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_DWORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = 4 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = _S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = _S0;
            LOWORD(_S0) = v28[2];
            __asm { FCVT            S0, H0 }
            v34[2] = _S0;
            LOWORD(_S0) = v28[3];
            __asm { FCVT            S0, H0 }
            v34[3] = _S0;
            v28 += v24;
            v34 += v26;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v34 + 2;
          v46 = v28 + 2;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v22 - 1;
            do
            {
              _H0 = *(v47 - 2);
              __asm { FCVT            S0, H0 }
              *(v48 - 2) = _S0;
              LOWORD(_S0) = *(v47 - 1);
              __asm { FCVT            S0, H0 }
              *(v48 - 1) = _S0;
              LOWORD(_S0) = *v47;
              __asm { FCVT            S0, H0 }
              *v48 = _S0;
              LOWORD(_S0) = v47[1];
              __asm { FCVT            S0, H0 }
              v48[1] = _S0;
              v48 = (_DWORD *)((char *)v48 + v42);
              v47 = (_WORD *)((char *)v47 + v41);
              --v49;
            }
            while (v49);
            _H0 = *(v47 - 2);
            __asm { FCVT            S0, H0 }
            *(v48 - 2) = _S0;
            LOWORD(_S0) = *(v47 - 1);
            __asm { FCVT            S0, H0 }
            *(v48 - 1) = _S0;
            LOWORD(_S0) = *v47;
            __asm { FCVT            S0, H0 }
            *v48 = _S0;
            LOWORD(_S0) = v47[1];
            __asm { FCVT            S0, H0 }
            v48[1] = _S0;
            v28 += v24;
            v34 += v26;
            ++v44;
            v45 += v26;
            v46 += v24;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = _S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = _S0;
          LOWORD(_S0) = v28[2];
          __asm { FCVT            S0, H0 }
          v34[2] = _S0;
          LOWORD(_S0) = v28[3];
          __asm { FCVT            S0, H0 }
          v34[3] = _S0;
          v28 = (__int16 *)((char *)v28 + v41);
          v34 = (_DWORD *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      _H0 = *v28;
      __asm { FCVT            S0, H0 }
      *v34 = _S0;
      LOWORD(_S0) = v28[1];
      __asm { FCVT            S0, H0 }
      v34[1] = _S0;
      LOWORD(_S0) = v28[2];
      __asm { FCVT            S0, H0 }
      v34[2] = _S0;
      LOWORD(_S0) = v28[3];
      __asm { FCVT            S0, H0 }
      v34[3] = _S0;
    }
  }
LABEL_65:
  v79 = v81;
  v81 = 0;
  if (v79)
    (*(void (**)(uint64_t))(*(_QWORD *)v79 + 8))(v79);
  result = v82;
  v82 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224368194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2243681F8(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  double v36;
  double v37;
  double v38;
  float v39;
  double v42;
  double v43;
  double v44;
  double v47;
  double v48;
  double v49;
  double v52;
  double v53;
  double v54;
  double v57;
  double v58;
  double v59;
  float result;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      _S6 = v11 + v12 * v23;
      *a5 = _S6;
      LOWORD(_S6) = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      _S6 = v11 + v12 * v28;
      a5[1] = _S6;
      LOWORD(_S6) = a4[2];
      __asm { FCVT            D6, H6 }
      v31 = v10 * (_D6 - v9);
      v32 = fmax(v31, 0.0);
      if (v31 <= 1.0)
        v33 = v32;
      else
        v33 = 1.0;
      _S6 = v11 + v12 * v33;
      a5[2] = _S6;
      LOWORD(_S6) = a4[3];
      __asm { FCVT            D6, H6 }
      v36 = v10 * (_D6 - v9);
      v37 = fmax(v36, 0.0);
      if (v36 <= 1.0)
        v38 = v37;
      else
        v38 = 1.0;
      v39 = v11 + v12 * v38;
      a5[3] = v39;
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v42 = v10 * (_D4 - v9);
  v43 = fmax(v42, 0.0);
  if (v42 <= 1.0)
    v44 = v43;
  else
    v44 = 1.0;
  _S4 = v11 + v12 * v44;
  *a5 = _S4;
  LOWORD(_S4) = a4[1];
  __asm { FCVT            D4, H4 }
  v47 = v10 * (_D4 - v9);
  v48 = fmax(v47, 0.0);
  if (v47 <= 1.0)
    v49 = v48;
  else
    v49 = 1.0;
  _S4 = v11 + v12 * v49;
  a5[1] = _S4;
  LOWORD(_S4) = a4[2];
  __asm { FCVT            D4, H4 }
  v52 = v10 * (_D4 - v9);
  v53 = fmax(v52, 0.0);
  if (v52 <= 1.0)
    v54 = v53;
  else
    v54 = 1.0;
  _S4 = v11 + v12 * v54;
  a5[2] = _S4;
  LOWORD(_S4) = a4[3];
  __asm { FCVT            D4, H4 }
  v57 = v10 * (_D4 - v9);
  v58 = fmax(v57, 0.0);
  if (v57 <= 1.0)
    v59 = v58;
  else
    v59 = 1.0;
  result = v11 + v12 * v59;
  a5[3] = result;
  return result;
}

uint64_t sub_2243683CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  __int16 *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int16 *v46;
  float *v47;
  float *v48;
  __int16 *v50;
  float *v51;
  float *v52;
  __int16 *v53;
  int v54;
  float *v55;
  float *v107;
  __int16 *v108;
  float *v109;
  float *v138;
  float *v145;
  float *v152;
  float *v159;
  uint64_t v162;
  uint64_t result;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_138;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_138;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_138:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v166 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v165, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_132;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v166, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v165 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_132;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v164 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v28 = *(unsigned int *)(a2 + 52);
      v29 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(__int16 **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      v41 = v24 - 1;
      v42 = *(__int16 **)a3;
      v43 = 2 * v26;
      v44 = 4 * v27;
      if (v25 != 1)
      {
        v45 = 0;
        v46 = *(__int16 **)(a3 + 16);
        v47 = *(float **)(a3 + 24);
        v48 = *(float **)(a3 + 8);
        do
        {
          v50 = v29;
          v51 = v35;
          if (v24 != 1)
          {
            v53 = *(__int16 **)(a3 + 16);
            v52 = *(float **)(a3 + 24);
            v50 = v29;
            v54 = v24 - 1;
            v51 = v35;
            v55 = *(float **)(a3 + 8);
            do
            {
              _H0 = *v50;
              _H1 = *v42;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v53;
                __asm { FCVT            S1, H1 }
                if (_S0 > _S1)
                  _S0 = *v52;
              }
              else
              {
                _S0 = *v55;
              }
              *v51 = _S0;
              _H0 = v50[1];
              _H1 = *v42;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v53;
                __asm { FCVT            S1, H1 }
                if (_S0 > _S1)
                  _S0 = *v52;
              }
              else
              {
                _S0 = *v55;
              }
              v51[1] = _S0;
              _H0 = v50[2];
              _H1 = *v42;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v53;
                __asm { FCVT            S1, H1 }
                if (_S0 > _S1)
                  _S0 = *v52;
              }
              else
              {
                _S0 = *v55;
              }
              v51[2] = _S0;
              _H0 = v50[3];
              _H1 = *v42;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 < _S1)
              {
                _S0 = *v55;
              }
              else
              {
                _H1 = *v53;
                __asm { FCVT            S1, H1 }
                if (_S0 > _S1)
                  _S0 = *v52;
              }
              v51[3] = _S0;
              v51 = (float *)((char *)v51 + v44);
              v50 = (__int16 *)((char *)v50 + v43);
              --v54;
            }
            while (v54);
          }
          _H0 = *v50;
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v46;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v47;
          }
          else
          {
            _S0 = *v48;
          }
          *v51 = _S0;
          _H0 = v50[1];
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v46;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v47;
          }
          else
          {
            _S0 = *v48;
          }
          v51[1] = _S0;
          _H0 = v50[2];
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v46;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v47;
          }
          else
          {
            _S0 = *v48;
          }
          v51[2] = _S0;
          _H0 = v50[3];
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 < _S1)
          {
            _S0 = *v48;
          }
          else
          {
            _H1 = *v46;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v47;
          }
          v51[3] = _S0;
          v29 += v164;
          v35 += v28;
          ++v45;
        }
        while (v45 != v25 - 1);
      }
      if (v24 != 1)
      {
        v108 = *(__int16 **)(a3 + 16);
        v107 = *(float **)(a3 + 24);
        v109 = *(float **)(a3 + 8);
        do
        {
          _H0 = *v29;
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v108;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v107;
          }
          else
          {
            _S0 = *v109;
          }
          *v35 = _S0;
          _H0 = v29[1];
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v108;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v107;
          }
          else
          {
            _S0 = *v109;
          }
          v35[1] = _S0;
          _H0 = v29[2];
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v108;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v107;
          }
          else
          {
            _S0 = *v109;
          }
          v35[2] = _S0;
          _H0 = v29[3];
          _H1 = *v42;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 < _S1)
          {
            _S0 = *v109;
          }
          else
          {
            _H1 = *v108;
            __asm { FCVT            S1, H1 }
            if (_S0 > _S1)
              _S0 = *v107;
          }
          v35[3] = _S0;
          v29 = (__int16 *)((char *)v29 + v43);
          v35 = (float *)((char *)v35 + v44);
          --v41;
        }
        while (v41);
      }
      _H0 = *v29;
      _H1 = *v42;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(a3 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_116;
        v138 = *(float **)(a3 + 24);
      }
      else
      {
        v138 = *(float **)(a3 + 8);
      }
      _S0 = *v138;
LABEL_116:
      *v35 = _S0;
      _H0 = v29[1];
      _H1 = *v42;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(a3 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_121;
        v145 = *(float **)(a3 + 24);
      }
      else
      {
        v145 = *(float **)(a3 + 8);
      }
      _S0 = *v145;
LABEL_121:
      v35[1] = _S0;
      _H0 = v29[2];
      _H1 = *v42;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(a3 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_126;
        v152 = *(float **)(a3 + 24);
      }
      else
      {
        v152 = *(float **)(a3 + 8);
      }
      _S0 = *v152;
LABEL_126:
      v35[2] = _S0;
      _H0 = v29[3];
      _H1 = *v42;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(a3 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
LABEL_131:
          v35[3] = _S0;
          goto LABEL_132;
        }
        v159 = *(float **)(a3 + 24);
      }
      else
      {
        v159 = *(float **)(a3 + 8);
      }
      _S0 = *v159;
      goto LABEL_131;
    }
  }
LABEL_132:
  v162 = v165;
  v165 = 0;
  if (v162)
    (*(void (**)(uint64_t))(*(_QWORD *)v162 + 8))(v162);
  result = v166;
  v166 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224368B38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

void sub_224368B9C(int a1)
{
  __asm { BR              X10 }
}

void sub_224368BE0()
{
  uint64_t v0;
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  _DWORD *v57;
  int v58;
  int v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  int v64;
  int v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  char *v75;
  size_t v76;
  int v77;
  int v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unsigned __int8 v82;
  BOOL v83;
  uint64_t i;
  uint64_t v85;
  unsigned __int8 v86;
  BOOL v87;
  int v88;
  char *v89;
  uint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  int v96;
  char *v97;
  size_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  uint64_t v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  uint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  __int16 v121;
  unint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  char *v127;
  char *v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (**v132)();
  uint64_t v133;
  std::__shared_weak_count *v134;
  _DWORD *v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t (**v142)();
  uint64_t v143;
  std::__shared_weak_count *v144;
  int v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  __int16 v150;

  sub_22436CF7C((uint64_t)&v132, *(_QWORD *)v0, *(_DWORD *)(v0 + 16), *(_QWORD *)v0 + 56);
  v142 = &off_24EC73D90;
  sub_22436D240((uint64_t)&v132, (uint64_t)&v143);
  v2 = v134;
  if (v134)
  {
    p_shared_owners = (unint64_t *)&v134->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  v5 = *(_QWORD *)v0;
  v132 = &off_24EC22E18;
  sub_22436DA24((uint64_t)&v142, &v133);
  v6 = v133;
  if (!v133)
    goto LABEL_22;
  v7 = v134;
  if (v134)
  {
    v8 = (unint64_t *)&v134->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
    do
      v10 = __ldaxr(v8);
    while (__stlxr(v10 - 1, v8));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    v6 = v133;
    v11 = v134;
    if (v134)
    {
      v12 = (unint64_t *)&v134->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (v140)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, 1);
    if (!v139)
      goto LABEL_31;
  }
  else
  {
LABEL_22:
    *(_QWORD *)(v1 - 96) = 0;
    if (!v139)
      goto LABEL_31;
  }
  if (v135)
  {
    v15 = v133;
    v16 = v134;
    if (v134)
    {
      v17 = (unint64_t *)&v134->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v15 + 88))(v15, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1287");
  }
LABEL_31:
  v20 = *(_QWORD *)(v5 + 8);
  if (!v20)
    goto LABEL_47;
  v21 = *(std::__shared_weak_count **)(v5 + 16);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(v5 + 8);
    v25 = *(std::__shared_weak_count **)(v5 + 16);
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
      do
        v28 = __ldaxr(v26);
      while (__stlxr(v28 - 1, v26));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  if (*(_BYTE *)(v5 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v20 + 96))(&v141, v20, 0);
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  else
  {
LABEL_47:
    v141 = 0;
    if (*(_DWORD *)(v5 + 44) != 1)
      goto LABEL_66;
  }
  if (v136 == 1)
  {
    v29 = *(unsigned int *)(v5 + 48);
    v30 = v137;
    v31 = *(unsigned int *)(v5 + 32);
    if ((_DWORD)v29 == v137 && (_DWORD)v29 == (_DWORD)v31)
    {
      v32 = *(unsigned int *)(v5 + 52);
      v33 = v138;
      v34 = *(_DWORD *)(v5 + 36);
      v35 = (v34 * v29);
      if ((_DWORD)v32 == v138 && (_DWORD)v32 == (_DWORD)v35)
      {
        v36 = *(_DWORD *)(v5 + 40);
        v37 = *(char **)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v37)
        {
          v38 = *(_QWORD *)(v5 + 8);
          v39 = *(std::__shared_weak_count **)(v5 + 16);
          if (v39)
          {
            v40 = (unint64_t *)&v39->__shared_owners_;
            do
              v41 = __ldxr(v40);
            while (__stxr(v41 + 1, v40));
            do
              v42 = __ldaxr(v40);
            while (__stlxr(v42 - 1, v40));
            if (!v42)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v38 + 88))(v38, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v37 = *(char **)(v5 + 24);
        }
        v43 = (v36 * v32);
        if (!(_DWORD)v43 || v37)
        {
          if (!(_DWORD)v43)
            goto LABEL_167;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_160;
        }
        v97 = (char *)v135;
        v98 = 4 * v43;
        v99 = v37;
LABEL_166:
        memmove(v97, v99, v98);
        goto LABEL_167;
      }
      if (!(_DWORD)v29)
        goto LABEL_167;
      if (!v34)
        goto LABEL_167;
      v88 = *(_DWORD *)(v5 + 40);
      if (!v88)
        goto LABEL_167;
      v89 = *(char **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v89)
      {
        v90 = *(_QWORD *)(v5 + 8);
        v91 = *(std::__shared_weak_count **)(v5 + 16);
        if (v91)
        {
          v92 = (unint64_t *)&v91->__shared_owners_;
          do
            v93 = __ldxr(v92);
          while (__stxr(v93 + 1, v92));
          do
            v94 = __ldaxr(v92);
          while (__stlxr(v94 - 1, v92));
          if (!v94)
          {
            ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
            std::__shared_weak_count::__release_weak(v91);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v90 + 88))(v90, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v89 = *(char **)(v5 + 24);
      }
      v95 = (char *)v135;
      v96 = v88 - 1;
      if (v88 == 1)
      {
LABEL_146:
        if (!(_DWORD)v35 || v89)
        {
          if (!(_DWORD)v35)
            goto LABEL_167;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_160;
        }
        v97 = v95;
        v99 = v89;
        v98 = 4 * v35;
        goto LABEL_166;
      }
      if (!(_DWORD)v35)
        goto LABEL_167;
      while (v89
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        memmove(v95, v89, 4 * v35);
        v89 += 4 * v32;
        v95 += 4 * v33;
        if (!--v96)
          goto LABEL_146;
      }
    }
    else
    {
      if (!(_DWORD)v31)
        goto LABEL_167;
      v65 = *(_DWORD *)(v5 + 36);
      if (!v65)
        goto LABEL_167;
      v66 = *(_DWORD *)(v5 + 40);
      if (!v66)
        goto LABEL_167;
      v125 = *(unsigned int *)(v5 + 52);
      v124 = v138;
      v67 = *(char **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v67)
      {
        v68 = *(unsigned int *)(v5 + 48);
        v69 = *(_QWORD *)(v5 + 8);
        v70 = *(std::__shared_weak_count **)(v5 + 16);
        if (v70)
        {
          v71 = (unint64_t *)&v70->__shared_owners_;
          do
            v72 = __ldxr(v71);
          while (__stxr(v72 + 1, v71));
          do
            v73 = __ldaxr(v71);
          while (__stlxr(v73 - 1, v71));
          if (!v73)
          {
            ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
            std::__shared_weak_count::__release_weak(v70);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v69 + 88))(v69, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v67 = *(char **)(v5 + 24);
        v29 = v68;
      }
      v74 = v65 - 1;
      v75 = (char *)v135;
      v76 = 4 * v31;
      v129 = v66 - 1;
      if (v66 == 1)
      {
LABEL_155:
        if (v74)
        {
          v102 = 4 * v29;
          v103 = 4 * v30;
          while (1)
          {
            v104 = v67;
            if (!v67
              && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              break;
            }
            memmove(v75, v104, v76);
            v67 = &v104[v102];
            v75 += v103;
            if (!--v74)
              goto LABEL_161;
          }
        }
        else
        {
LABEL_161:
          v105 = v67;
          if (v67
            || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v97 = v75;
            v99 = v105;
            v98 = v76;
            goto LABEL_166;
          }
        }
      }
      else if (v74)
      {
        v77 = 0;
        v131 = 4 * v29;
        while (1)
        {
          v126 = v77;
          v78 = 0;
          v127 = v75;
          v128 = v67;
          v79 = v67;
          v80 = v75;
          do
          {
            while (v79)
            {
              memmove(v80, v79, v76);
              v79 += 4 * v29;
              v80 += 4 * v30;
              if (++v78 == v74)
                goto LABEL_102;
            }
            sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
            v81 = v29;
            v82 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v82 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (byte_255795670)
              v83 = byte_255795678 == 0;
            else
              v83 = 0;
            if (!v83)
            {
              v85 = qword_255795648;
              for (i = qword_255795650; v85 != i; v85 += 16)
                (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v85)(*(_QWORD *)(v85 + 8), "ptr != nullptr || size == 0", 27, "", 0);
            }
            v86 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v86 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (!byte_255795670)
              goto LABEL_160;
            v29 = v81;
            qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, "", 0);
            memcpy(v80, 0, v76);
            v80 += 4 * v30;
            ++v78;
            v79 = (char *)v131;
          }
          while (v78 != v74);
          v87 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          v79 = (char *)v131;
          if (v87)
            break;
LABEL_102:
          memmove(v80, v79, v76);
          v67 = &v128[4 * v125];
          v75 = &v127[4 * v124];
          v77 = v126 + 1;
          if (v126 + 1 == v129)
            goto LABEL_155;
        }
      }
      else
      {
        while (1)
        {
          v100 = v75;
          v101 = v67;
          if (!v67
            && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            break;
          }
          memmove(v100, v101, v76);
          v67 = &v101[4 * v125];
          v75 = &v100[4 * v124];
          if (!--v129)
            goto LABEL_155;
        }
      }
    }
LABEL_160:
    abort();
  }
LABEL_66:
  if (*(_DWORD *)(v5 + 32))
  {
    v44 = *(_DWORD *)(v5 + 36);
    if (v44)
    {
      v45 = *(_DWORD *)(v5 + 40);
      if (v45)
      {
        v46 = *(unsigned int *)(v5 + 48);
        v47 = *(unsigned int *)(v5 + 52);
        v48 = v137;
        v49 = v138;
        v50 = *(_DWORD **)(v5 + 24);
        if (*(_BYTE *)(v5 + 72) && v50)
        {
          v51 = *(_QWORD *)(v5 + 8);
          v52 = *(std::__shared_weak_count **)(v5 + 16);
          if (v52)
          {
            v53 = (unint64_t *)&v52->__shared_owners_;
            do
              v54 = __ldxr(v53);
            while (__stxr(v54 + 1, v53));
            do
              v55 = __ldaxr(v53);
            while (__stlxr(v55 - 1, v53));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
              std::__shared_weak_count::__release_weak(v52);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v51 + 88))(v51, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v50 = *(_DWORD **)(v5 + 24);
        }
        v56 = v44 - 1;
        v57 = v135;
        v58 = v45 - 1;
        if (v45 != 1)
        {
          if (v44 == 1)
          {
            do
            {
              *v57 = *v50;
              v57[1] = v50[1];
              v57[2] = v50[2];
              v57[3] = v50[3];
              v50 += v47;
              v57 += v49;
              --v58;
            }
            while (v58);
LABEL_145:
            *v57 = *v50;
            v57[1] = v50[1];
            v57[2] = v50[2];
            v57[3] = v50[3];
            goto LABEL_167;
          }
          v59 = 0;
          v60 = v135 + 2;
          v61 = v50 + 2;
          do
          {
            v62 = v61;
            v63 = v60;
            v64 = v44 - 1;
            do
            {
              *(v63 - 2) = *(v62 - 2);
              *(v63 - 1) = *(v62 - 1);
              *v63 = *v62;
              v63[1] = v62[1];
              v63 += v48;
              v62 += v46;
              --v64;
            }
            while (v64);
            *(v63 - 2) = *(v62 - 2);
            *(v63 - 1) = *(v62 - 1);
            *v63 = *v62;
            v63[1] = v62[1];
            v50 += v47;
            v57 += v49;
            ++v59;
            v60 += v49;
            v61 += v47;
          }
          while (v59 != v58);
        }
        if (v44 != 1)
        {
          do
          {
            *v57 = *v50;
            v57[1] = v50[1];
            v57[2] = v50[2];
            v57[3] = v50[3];
            v50 += v46;
            v57 += v48;
            --v56;
          }
          while (v56);
        }
        goto LABEL_145;
      }
    }
  }
LABEL_167:
  v106 = v141;
  v141 = 0;
  if (v106)
    (*(void (**)(uint64_t))(*(_QWORD *)v106 + 8))(v106);
  v107 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 96) = 0;
  if (v107)
    (*(void (**)(uint64_t))(*(_QWORD *)v107 + 8))(v107);
  v108 = v134;
  v109 = v130;
  if (v134)
  {
    v110 = (unint64_t *)&v134->__shared_owners_;
    do
      v111 = __ldaxr(v110);
    while (__stlxr(v111 - 1, v110));
    if (!v111)
    {
      ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
      std::__shared_weak_count::__release_weak(v108);
      v109 = v130;
    }
  }
  *(_QWORD *)v109 = &off_24EC1F958;
  v113 = v143;
  v112 = v144;
  if (v144)
  {
    v114 = (unint64_t *)&v144->__shared_owners_;
    do
      v115 = __ldxr(v114);
    while (__stxr(v115 + 1, v114));
    v116 = v144;
  }
  else
  {
    v116 = 0;
  }
  v117 = v148;
  v118 = 4 * v149;
  if (v146)
    v119 = (4 * v145) | 0x100000000;
  else
    v119 = 0;
  v120 = v147;
  v121 = v150;
  *(_QWORD *)(v109 + 8) = v113;
  *(_QWORD *)(v109 + 16) = v112;
  *(_QWORD *)(v109 + 24) = v119;
  *(_QWORD *)(v109 + 32) = v117;
  *(_DWORD *)(v109 + 40) = v118;
  *(_QWORD *)(v109 + 48) = v120;
  *(_DWORD *)(v109 + 56) = 16;
  *(_WORD *)(v109 + 60) = v121;
  if (v116)
  {
    v122 = (unint64_t *)&v116->__shared_owners_;
    do
      v123 = __ldaxr(v122);
    while (__stlxr(v123 - 1, v122));
    if (!v123)
    {
      ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
      std::__shared_weak_count::__release_weak(v116);
    }
  }
}

void sub_22436BA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,std::string *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned int a29,uint64_t a30,_QWORD *a31,uint64_t a32,int a33,__int16 a34,char a35,unsigned __int8 a36)
{
  _QWORD *v36;
  uint64_t v37;

  LODWORD(a19) = 35;
  a29 = 40;
  sub_2243348B0("Conversion from image of format ", &a29, (uint64_t)" to ", (unsigned int *)&a19, (uint64_t)" not supported");
  if ((a36 & 0x80u) == 0)
    v36 = &a31;
  else
    v36 = a31;
  if ((a36 & 0x80u) == 0)
    v37 = a36;
  else
    v37 = a32;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v36, v37, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a31);
  abort();
}

void sub_22436C9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  if (a19)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
    v38 = *(_QWORD *)(v36 - 104);
    *(_QWORD *)(v36 - 104) = 0;
    if (!v38)
    {
LABEL_3:
      v39 = *(_QWORD *)(v36 - 96);
      *(_QWORD *)(v36 - 96) = 0;
      if (!v39)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v38 = *(_QWORD *)(v36 - 104);
    *(_QWORD *)(v36 - 104) = 0;
    if (!v38)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
  v39 = *(_QWORD *)(v36 - 96);
  *(_QWORD *)(v36 - 96) = 0;
  if (!v39)
  {
LABEL_4:
    sub_223167354(a18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
  sub_223167354(a18);
  _Unwind_Resume(a1);
}

void sub_22436CDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v31 = a29;
  a29 = 0;
  if (v31)
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  v32 = *(_QWORD *)(v29 - 96);
  *(_QWORD *)(v29 - 96) = 0;
  if (v32)
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  sub_2231E6754((uint64_t)&a19);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_22436CE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v31 = *(_QWORD *)(v29 - 96);
  *(_QWORD *)(v29 - 96) = 0;
  if (v31)
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  v32 = a29;
  a29 = 0;
  if (v32)
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  sub_2231ED418((uint64_t)&a19);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_22436CE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v31 = *(_QWORD *)(v29 - 96);
  *(_QWORD *)(v29 - 96) = 0;
  if (v31)
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  v32 = a29;
  a29 = 0;
  if (v32)
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  sub_2231DCAAC((uint64_t)&a19);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_22436CEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v31 = *(_QWORD *)(v29 - 96);
  *(_QWORD *)(v29 - 96) = 0;
  if (v31)
    (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  v32 = a29;
  a29 = 0;
  if (v32)
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  sub_2231F18F8((uint64_t)&a19);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_22436CF14(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22436CF7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(40);
  v34 = &off_24EC734E8;
  sub_22434FEC8((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 4 * v41;
  if (v38)
    v27 = (4 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 40;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22436D1FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22436D218(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22436D22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22436D240(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22436D4C8(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 2) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 16);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22436D398(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22436D3BC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22436D424()
{
  return 16;
}

uint64_t sub_22436D42C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_22436D434@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_22436D44C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_22436D4C8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22436D6F0(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22436D690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22436D6F0(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22436D768();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22436D768()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791A00);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791A00))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E6DBC();
    sub_22436D96C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22436D96C((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_2557919E8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557919E8, &dword_22314D000);
          __cxa_guard_release(&qword_255791A00);
          return &stru_2557919E8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_2557919E8;
}

void sub_22436D8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791A00);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791A00);
  _Unwind_Resume(a1);
}

void sub_22436D96C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22436DA08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22436DA24(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E6EB4(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22436DB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_22436DB2C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22436DB94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22436DE1C(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 2) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 28);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22436DCEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22436DD10(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22436DD78()
{
  return 28;
}

uint64_t sub_22436DD80(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_22436DD88@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_22436DDA0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_22436DE1C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 28)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22436E044(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22436DFE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22436E044(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22436E0BC();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22436E0BC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791A20);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791A20))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EDA80();
    sub_22436E2C0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22436E2C0((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791A08, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791A08, &dword_22314D000);
          __cxa_guard_release(&qword_255791A20);
          return &stru_255791A08;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791A08;
}

void sub_22436E20C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791A20);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791A20);
  _Unwind_Resume(a1);
}

void sub_22436E2C0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22436E35C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22436E378(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231EDB78(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22436E464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_22436E480(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22436E5FC(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 2) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 32);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22436E5D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22436E5FC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 32)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22436E824(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22436E7C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22436E824(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22436E89C();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22436E89C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791A40);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791A40))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EFDB4();
    sub_22436EAA0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22436EAA0((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791A28, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791A28, &dword_22314D000);
          __cxa_guard_release(&qword_255791A40);
          return &stru_255791A28;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791A28;
}

void sub_22436E9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791A40);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791A40);
  _Unwind_Resume(a1);
}

void sub_22436EAA0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22436EB3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22436EB58(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22436EBC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22436EE48(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 2) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 36);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22436ED18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22436ED3C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22436EDA4()
{
  return 36;
}

uint64_t sub_22436EDAC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_22436EDB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_22436EDCC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_22436EE48(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 36)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22436F070(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_22436F010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22436F070(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22436F0E8();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22436F0E8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791A60);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791A60))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231F1F60();
    sub_22436F2EC((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_22436F2EC((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791A48, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791A48, &dword_22314D000);
          __cxa_guard_release(&qword_255791A60);
          return &stru_255791A48;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791A48;
}

void sub_22436F238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791A60);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791A60);
  _Unwind_Resume(a1);
}

void sub_22436F2EC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22436F388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22436F3A4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231F2058(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22436F490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_22436F4AC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  double v9;
  double v10;
  unsigned int v11;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  double ****v56;
  uint64_t v57;
  float *v58;
  int v59;
  _BYTE *v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  double v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  double ****v85;
  __int128 v86;
  _OWORD v87[2];

  v3 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v5 = 1.0;
    a3.n128_u32[0] = 0;
    v7 = *v3;
    v6 = v3[1];
    v8 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v11 = 255;
    if (a3.n128_f32[0] != (float)v8 || v5 != (float)0xFFu)
      goto LABEL_15;
    return sub_22436FC7C(v7, v6, a3);
  }
  a3.n128_u64[0] = 0xC7EFFFFFE0000000;
  if (*(double *)a2 >= -3.40282347e38)
    a3.n128_u64[0] = *(_QWORD *)a2;
  a3.n128_f32[0] = a3.n128_f64[0];
  v4 = 3.40282347e38;
  if (*(double *)(a2 + 8) <= 3.40282347e38)
    v4 = *(double *)(a2 + 8);
  v5 = v4;
  v7 = *v3;
  v6 = v3[1];
  v8 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v9 = *(double *)(a2 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v8 = (int)v9;
  v10 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v10 = *(double *)(a2 + 32);
  v11 = (int)v10;
  if (a3.n128_f32[0] == (float)v8 && v5 == (float)(int)v10)
    return sub_22436FC7C(v7, v6, a3);
LABEL_15:
  v81 = a3.n128_f32[0];
  v79 = (double)v8;
  v80 = 1.0 / (v5 - a3.n128_f32[0]);
  a3.n128_f64[0] = (double)v11 - (double)v8;
  v78 = a3.n128_f64[0];
  v77[0] = &v81;
  v77[1] = &v80;
  v76[0] = &v79;
  v76[1] = &v78;
  v75[0] = v77;
  v75[1] = v76;
  v13 = *(_QWORD *)(v7 + 8);
  if (!v13)
    goto LABEL_38;
  v14 = *(std::__shared_weak_count **)(v7 + 16);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(v7 + 8);
    v18 = *(std::__shared_weak_count **)(v7 + 16);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
  }
  if (*(_BYTE *)(v7 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v83, v13, 0);
    v22 = *(_QWORD *)(v6 + 8);
    if (!v22)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v83 = 0;
    v22 = *(_QWORD *)(v6 + 8);
    if (!v22)
      goto LABEL_54;
  }
  v25 = *(std::__shared_weak_count **)(v6 + 16);
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
    do
      v28 = __ldaxr(v26);
    while (__stlxr(v28 - 1, v26));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    v22 = *(_QWORD *)(v6 + 8);
    v29 = *(std::__shared_weak_count **)(v6 + 16);
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      do
        v32 = __ldaxr(v30);
      while (__stlxr(v32 - 1, v30));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  if (!*(_BYTE *)(v6 + 73))
  {
LABEL_54:
    v82 = 0;
    v84 = v75;
    if (*(_DWORD *)(v7 + 32))
      goto LABEL_55;
    goto LABEL_98;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 96))(&v82, v22, 1);
  v84 = v75;
  if (*(_DWORD *)(v7 + 32))
  {
LABEL_55:
    v33 = *(_DWORD *)(v7 + 36);
    if (v33)
    {
      v34 = *(_DWORD *)(v7 + 40);
      if (v34)
      {
        v85 = (double ****)&v84;
        v36 = *(unsigned int *)(v7 + 48);
        v35 = *(unsigned int *)(v7 + 52);
        v37 = *(unsigned int *)(v6 + 48);
        v38 = *(unsigned int *)(v6 + 52);
        v39 = *(float **)(v7 + 24);
        if (*(_BYTE *)(v7 + 72) && v39)
        {
          v40 = *(_QWORD *)(v7 + 8);
          v41 = *(std::__shared_weak_count **)(v7 + 16);
          if (v41)
          {
            v42 = (unint64_t *)&v41->__shared_owners_;
            do
              v43 = __ldxr(v42);
            while (__stxr(v43 + 1, v42));
            do
              v44 = __ldaxr(v42);
            while (__stlxr(v44 - 1, v42));
            if (!v44)
            {
              ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
              std::__shared_weak_count::__release_weak(v41);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v40 + 88))(v40, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v39 = *(float **)(v7 + 24);
        }
        v45 = *(_BYTE **)(v6 + 24);
        if (*(_BYTE *)(v6 + 72) && v45)
        {
          v46 = *(_QWORD *)(v6 + 8);
          v47 = *(std::__shared_weak_count **)(v6 + 16);
          if (v47)
          {
            v48 = (unint64_t *)&v47->__shared_owners_;
            do
              v49 = __ldxr(v48);
            while (__stxr(v49 + 1, v48));
            do
              v50 = __ldaxr(v48);
            while (__stlxr(v50 - 1, v48));
            if (!v50)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v46 + 88))(v46, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v45 = *(_BYTE **)(v6 + 24);
        }
        v51 = v33 - 1;
        v86 = 0u;
        v87[0] = 0u;
        v52 = 4 * v36;
        v53 = v34 - 1;
        if (v53)
        {
          v74 = v38;
          if (v51)
          {
            v54 = 0;
            v55 = v35;
            v56 = v85;
            v57 = 4 * v55;
            do
            {
              v58 = v39;
              v59 = v51;
              v60 = v45;
              do
              {
                v61 = (*v58 - ****v56) * *(**v56)[1];
                v62 = fmax(v61, 0.0);
                if (v61 <= 1.0)
                  v63 = v62;
                else
                  v63 = 1.0;
                *v60 = llround(**(*v56)[1] + v63 * *(*v56)[1][1]);
                v64 = (v58[1] - ****v56) * *(**v56)[1];
                v65 = fmax(v64, 0.0);
                if (v64 <= 1.0)
                  v66 = v65;
                else
                  v66 = 1.0;
                v60[1] = llround(**(*v56)[1] + v66 * *(*v56)[1][1]);
                v67 = (v58[2] - ****v56) * *(**v56)[1];
                v68 = fmax(v67, 0.0);
                if (v67 <= 1.0)
                  v69 = v68;
                else
                  v69 = 1.0;
                v60[2] = llround(**(*v56)[1] + v69 * *(*v56)[1][1]);
                v70 = (v58[3] - ****v56) * *(**v56)[1];
                v71 = fmax(v70, 0.0);
                if (v70 <= 1.0)
                  v72 = v71;
                else
                  v72 = 1.0;
                v60[3] = llround(**(*v56)[1] + v72 * *(*v56)[1][1]);
                v60 += v37;
                v58 = (float *)((char *)v58 + v52);
                --v59;
              }
              while (v59);
              *(_QWORD *)&v86 = v58;
              *(_QWORD *)&v87[0] = v60;
              sub_224370158(&v85, (uint64_t)&v86, (uint64_t)v87);
              v39 = (float *)((char *)v39 + v57);
              v45 += v74;
              ++v54;
            }
            while (v54 != v53);
          }
          else
          {
            do
            {
              *(_QWORD *)&v86 = v39;
              *(_QWORD *)&v87[0] = v45;
              sub_224370158(&v85, (uint64_t)&v86, (uint64_t)v87);
              v45 += v38;
              v39 += v35;
              --v53;
            }
            while (v53);
          }
        }
        for (; v51; --v51)
        {
          *(_QWORD *)&v86 = v39;
          *(_QWORD *)&v87[0] = v45;
          sub_224370158(&v85, (uint64_t)&v86, (uint64_t)v87);
          v45 += v37;
          v39 = (float *)((char *)v39 + v52);
        }
        *(_QWORD *)&v86 = v39;
        *(_QWORD *)&v87[0] = v45;
        a3.n128_f64[0] = sub_224370158(&v85, (uint64_t)&v86, (uint64_t)v87);
      }
    }
  }
LABEL_98:
  v73 = v82;
  v82 = 0;
  if (v73)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v73 + 8))(v73, a3);
  result = v83;
  v83 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22436FB4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (!a22)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a22 + 8))(a22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22436FBB0(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  _QWORD v11[4];
  uint64_t v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    *(float *)&v12 = (float)(int)v9;
    *((float *)&v12 + 1) = (float)v8;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 1132396544;
  }
  v11[0] = (char *)&v12 + 4;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_2243702C4(v4, v5, (uint64_t)v11);
}

uint64_t sub_22436FC70(uint64_t **a1, __n128 a2)
{
  return sub_22436FC7C(**a1, (*a1)[1], a2);
}

uint64_t sub_22436FC7C(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  float *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  _OWORD v54[2];

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_64;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v46 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v45, v14, 1);
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v46, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v45 = 0;
  v23 = *(_DWORD *)(a1 + 32);
  if (!v23)
    goto LABEL_58;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v48 = v23 - 1;
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a2 + 48);
      v49 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v47 = 0;
      v50 = v24 - 1;
      v51 = v26 | (v27 << 32);
      v52 = v25 - 1;
      v53 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v28 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(float **)(a1 + 24);
      }
      v34 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(float **)(a2 + 24);
      }
      memset(v54, 0, sizeof(v54));
      v40 = v52;
      if (v52)
      {
        v41 = HIDWORD(v53);
        v42 = 4 * v53;
        do
        {
          sub_224370084(&v47, (float **)v54, v28, v34);
          v34 = (float *)((char *)v34 + v41);
          v28 = (float *)((char *)v28 + v42);
          --v40;
        }
        while (v40);
      }
      a3.n128_f32[0] = sub_224370084(&v47, (float **)v54, v28, v34);
    }
  }
LABEL_58:
  v43 = v45;
  v45 = 0;
  if (v43)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v43 + 8))(v43, a3);
  result = v46;
  v46 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224370020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_224370084(_DWORD *a1, float **a2, float *a3, float *a4)
{
  unsigned int v4;
  float result;

  *a2 = a3;
  a2[2] = a4;
  if (a1[5])
  {
    v4 = 0;
    do
    {
      *a2 = a3;
      a2[2] = a4;
      *(_BYTE *)a4 = (int)*a3;
      *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
      *((_BYTE *)a2[2] + 2) = (int)(*a2)[2];
      *((_BYTE *)a2[2] + 3) = (int)(*a2)[3];
      a3 += a1[6];
      a4 = (float *)((char *)a4 + a1[7]);
      ++v4;
    }
    while (v4 < a1[5]);
  }
  *a2 = a3;
  a2[2] = a4;
  *(_BYTE *)a4 = (int)*a3;
  *((_BYTE *)a2[2] + 1) = (int)(*a2)[1];
  *((_BYTE *)a2[2] + 2) = (int)(*a2)[2];
  result = (*a2)[3];
  *((_BYTE *)a2[2] + 3) = (int)result;
  return result;
}

double sub_224370158(double *****a1, uint64_t a2, uint64_t a3)
{
  double ***v3;
  double **v4;
  double **v5;
  double v6;
  double v7;
  double v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v15;
  double **v16;
  double **v17;
  double v18;
  double v19;
  double v20;
  double ***v21;
  double **v22;
  double **v23;
  double v24;
  double v25;
  double result;

  v3 = **a1;
  v5 = *v3;
  v4 = v3[1];
  v6 = (**(float **)a2 - **v5) * *v5[1];
  v7 = fmax(v6, 0.0);
  if (v6 <= 1.0)
    v8 = v7;
  else
    v8 = 1.0;
  **(_BYTE **)a3 = llround(**v4 + v8 * *v4[1]);
  v9 = **a1;
  v11 = *v9;
  v10 = v9[1];
  v12 = (*(float *)(*(_QWORD *)a2 + 4) - **v11) * *v11[1];
  v13 = fmax(v12, 0.0);
  if (v12 <= 1.0)
    v14 = v13;
  else
    v14 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 1) = llround(**v10 + v14 * *v10[1]);
  v15 = **a1;
  v17 = *v15;
  v16 = v15[1];
  v18 = (*(float *)(*(_QWORD *)a2 + 8) - **v17) * *v17[1];
  v19 = fmax(v18, 0.0);
  if (v18 <= 1.0)
    v20 = v19;
  else
    v20 = 1.0;
  *(_BYTE *)(*(_QWORD *)a3 + 2) = llround(**v16 + v20 * *v16[1]);
  v21 = **a1;
  v23 = *v21;
  v22 = v21[1];
  v24 = (*(float *)(*(_QWORD *)a2 + 12) - **v23) * *v23[1];
  v25 = fmax(v24, 0.0);
  if (v24 > 1.0)
    v25 = 1.0;
  result = **v22 + v25 * *v22[1];
  *(_BYTE *)(*(_QWORD *)a3 + 3) = llround(result);
  return result;
}

uint64_t sub_2243702C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  float *v48;
  int v49;
  _BYTE *v50;
  _BYTE *v51;
  float **v52;
  float v53;
  uint64_t v54;
  float v55;
  _BYTE *v56;
  uint64_t v57;
  float v58;
  _BYTE *v59;
  uint64_t v60;
  float v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  __int128 v69;
  __int128 v70;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_93;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_93;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_93:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v66 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v65, v15, 1);
    v67 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_87;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v66, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v65 = 0;
  v67 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_87;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v68 = &v67;
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(float **)(a1 + 24);
      }
      v36 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(_BYTE **)(a2 + 24);
      }
      v42 = v24 - 1;
      v69 = 0u;
      v70 = 0u;
      v43 = 4 * v26;
      v44 = v25 - 1;
      if (v25 != 1)
      {
        v64 = v29;
        v45 = 4 * v27;
        if (v42)
        {
          v46 = 0;
          v47 = v68;
          while (1)
          {
            v48 = v30;
            v49 = v42;
            v50 = v36;
            do
            {
              while (1)
              {
                v52 = (float **)*v47;
                v53 = *v48;
                if (*v48 >= **(float **)*v47)
                {
                  if (v53 <= *v52[2])
                    LODWORD(v52) = (int)v53;
                  else
                    LOBYTE(v52) = *(_BYTE *)v52[3];
                }
                else
                {
                  LOBYTE(v52) = *(_BYTE *)v52[1];
                }
                *v50 = (_BYTE)v52;
                v54 = *v47;
                v55 = v48[1];
                if (v55 < **(float **)*v47)
                {
                  v56 = *(_BYTE **)(v54 + 8);
LABEL_70:
                  LOBYTE(v56) = *v56;
                  goto LABEL_72;
                }
                if (v55 > **(float **)(v54 + 16))
                {
                  v56 = *(_BYTE **)(v54 + 24);
                  goto LABEL_70;
                }
                LODWORD(v56) = (int)v55;
LABEL_72:
                v50[1] = (_BYTE)v56;
                v57 = *v47;
                v58 = v48[2];
                if (v58 < **(float **)*v47)
                {
                  v59 = *(_BYTE **)(v57 + 8);
LABEL_76:
                  LOBYTE(v59) = *v59;
                  goto LABEL_78;
                }
                if (v58 > **(float **)(v57 + 16))
                {
                  v59 = *(_BYTE **)(v57 + 24);
                  goto LABEL_76;
                }
                LODWORD(v59) = (int)v58;
LABEL_78:
                v50[2] = (_BYTE)v59;
                v60 = *v47;
                v61 = v48[3];
                if (v61 >= **(float **)*v47)
                  break;
                v51 = *(_BYTE **)(v60 + 8);
LABEL_60:
                v50[3] = *v51;
                v50 += v28;
                v48 = (float *)((char *)v48 + v43);
                if (!--v49)
                  goto LABEL_57;
              }
              if (v61 > **(float **)(v60 + 16))
              {
                v51 = *(_BYTE **)(v60 + 24);
                goto LABEL_60;
              }
              v50[3] = (int)v61;
              v50 += v28;
              v48 = (float *)((char *)v48 + v43);
              --v49;
            }
            while (v49);
LABEL_57:
            *(_QWORD *)&v69 = v48;
            *(_QWORD *)&v70 = v50;
            sub_22437088C(&v68, (float **)&v69, (uint64_t *)&v70);
            v30 = (float *)((char *)v30 + v45);
            v36 += v64;
            if (++v46 == v44)
              goto LABEL_84;
          }
        }
        do
        {
          *(_QWORD *)&v69 = v30;
          *(_QWORD *)&v70 = v36;
          sub_22437088C(&v68, (float **)&v69, (uint64_t *)&v70);
          v36 += v29;
          v30 = (float *)((char *)v30 + v45);
          --v44;
        }
        while (v44);
      }
LABEL_84:
      while (v42)
      {
        *(_QWORD *)&v69 = v30;
        *(_QWORD *)&v70 = v36;
        sub_22437088C(&v68, (float **)&v69, (uint64_t *)&v70);
        v36 += v28;
        v30 = (float *)((char *)v30 + v43);
        --v42;
      }
      *(_QWORD *)&v69 = v30;
      *(_QWORD *)&v70 = v36;
      sub_22437088C(&v68, (float **)&v69, (uint64_t *)&v70);
    }
  }
LABEL_87:
  v62 = v65;
  v65 = 0;
  if (v62)
    (*(void (**)(uint64_t))(*(_QWORD *)v62 + 8))(v62);
  result = v66;
  v66 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224370828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_22437088C(uint64_t **result, float **a2, uint64_t *a3)
{
  uint64_t v3;
  float v4;
  uint64_t v5;
  float v6;
  _BYTE *v7;
  uint64_t v8;
  float v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  float v13;

  v3 = **result;
  v4 = **a2;
  if (v4 >= **(float **)v3)
  {
    if (v4 <= **(float **)(v3 + 16))
      LODWORD(v3) = (int)v4;
    else
      LOBYTE(v3) = **(_BYTE **)(v3 + 24);
  }
  else
  {
    LOBYTE(v3) = **(_BYTE **)(v3 + 8);
  }
  *(_BYTE *)*a3 = v3;
  v5 = **result;
  v6 = (*a2)[1];
  if (v6 < **(float **)v5)
  {
    v7 = *(_BYTE **)(v5 + 8);
LABEL_10:
    LOBYTE(v7) = *v7;
    goto LABEL_12;
  }
  if (v6 > **(float **)(v5 + 16))
  {
    v7 = *(_BYTE **)(v5 + 24);
    goto LABEL_10;
  }
  LODWORD(v7) = (int)v6;
LABEL_12:
  *(_BYTE *)(*a3 + 1) = (_BYTE)v7;
  v8 = **result;
  v9 = (*a2)[2];
  if (v9 < **(float **)v8)
  {
    v10 = *(_BYTE **)(v8 + 8);
LABEL_16:
    LOBYTE(v10) = *v10;
    goto LABEL_18;
  }
  if (v9 > **(float **)(v8 + 16))
  {
    v10 = *(_BYTE **)(v8 + 24);
    goto LABEL_16;
  }
  LODWORD(v10) = (int)v9;
LABEL_18:
  *(_BYTE *)(*a3 + 2) = (_BYTE)v10;
  v11 = *a3;
  v12 = **result;
  v13 = (*a2)[3];
  if (v13 >= **(float **)v12)
  {
    if (v13 <= **(float **)(v12 + 16))
      *(_BYTE *)(v11 + 3) = (int)v13;
    else
      *(_BYTE *)(v11 + 3) = **(_BYTE **)(v12 + 24);
  }
  else
  {
    *(_BYTE *)(v11 + 3) = **(_BYTE **)(v12 + 8);
  }
  return result;
}

uint64_t sub_2243709E0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  float v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  float32x4_t *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int16x4_t *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  double v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  float64x2_t v65;
  float32x4_t *v66;
  int16x4_t *v67;
  int v68;
  float64x2_t v69;
  float64x2_t v70;
  float64x2_t v71;
  float64x2_t v72;
  float64x2_t v73;
  float64x2_t v74;
  float64x2_t v75;
  float64x2_t v76;
  float64x2_t v77;
  float64x2_t v78;
  float64x2_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -3.40282347e38;
    if (*(double *)a2 >= -3.40282347e38)
      v4 = *(double *)a2;
    v5 = v4;
    a3.n128_u64[0] = 0x47EFFFFFE0000000;
    if (*(double *)(a2 + 8) <= 3.40282347e38)
      a3.n128_u64[0] = *(_QWORD *)(a2 + 8);
    v6 = a3.n128_f64[0];
    v8 = *v3;
    v7 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v11 = -65536;
    goto LABEL_14;
  }
  v6 = 1.0;
  v5 = 0.0;
  v8 = *v3;
  v7 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v9 = *(double *)(a2 + 24);
  if (v9 < 0.0)
    v9 = 0.0;
  v10 = (int)v9;
  a3.n128_u64[0] = 0x40EFFFE000000000;
  if (*(double *)(a2 + 32) <= 65535.0)
    a3.n128_u64[0] = *(_QWORD *)(a2 + 32);
  v11 = v10 | ((int)a3.n128_f64[0] << 16);
LABEL_14:
  v12 = (unsigned __int16)v11;
  v13 = HIWORD(v11);
  if (v5 == (float)(unsigned __int16)v11 && v6 == (float)HIWORD(v11))
  {
    a3.n128_f32[0] = (float)(unsigned __int16)v11;
    return sub_224371164(v8, v7, a3);
  }
  v15 = *(_QWORD *)(v8 + 8);
  if (!v15)
    goto LABEL_35;
  v16 = *(std::__shared_weak_count **)(v8 + 16);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(v8 + 8);
    v20 = *(std::__shared_weak_count **)(v8 + 16);
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
  }
  if (*(_BYTE *)(v8 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v15 + 96))(&v84, v15, 0);
    v24 = *(_QWORD *)(v7 + 8);
    if (!v24)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v84 = 0;
    v24 = *(_QWORD *)(v7 + 8);
    if (!v24)
      goto LABEL_51;
  }
  v26 = *(std::__shared_weak_count **)(v7 + 16);
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
    do
      v29 = __ldaxr(v27);
    while (__stlxr(v29 - 1, v27));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    v24 = *(_QWORD *)(v7 + 8);
    v30 = *(std::__shared_weak_count **)(v7 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }
  if (!*(_BYTE *)(v7 + 73))
  {
LABEL_51:
    v83 = 0;
    if (*(_DWORD *)(v8 + 32))
      goto LABEL_52;
    goto LABEL_83;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v24 + 96))(&v83, v24, 1);
  if (*(_DWORD *)(v8 + 32))
  {
LABEL_52:
    v34 = *(_DWORD *)(v8 + 36);
    if (v34)
    {
      v35 = *(_DWORD *)(v8 + 40);
      if (v35)
      {
        v36 = *(unsigned int *)(v8 + 48);
        v37 = *(unsigned int *)(v7 + 48);
        v81 = *(unsigned int *)(v7 + 52);
        v82 = *(unsigned int *)(v8 + 52);
        v38 = *(float32x4_t **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v38)
        {
          v39 = *(_QWORD *)(v8 + 8);
          v40 = *(std::__shared_weak_count **)(v8 + 16);
          if (v40)
          {
            v41 = (unint64_t *)&v40->__shared_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
            do
              v43 = __ldaxr(v41);
            while (__stlxr(v43 - 1, v41));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v40);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v39 + 88))(v39, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v38 = *(float32x4_t **)(v8 + 24);
        }
        v44 = *(int16x4_t **)(v7 + 24);
        if (*(_BYTE *)(v7 + 72) && v44)
        {
          v45 = *(_QWORD *)(v7 + 8);
          v46 = *(std::__shared_weak_count **)(v7 + 16);
          if (v46)
          {
            v47 = (unint64_t *)&v46->__shared_owners_;
            do
              v48 = __ldxr(v47);
            while (__stxr(v48 + 1, v47));
            do
              v49 = __ldaxr(v47);
            while (__stlxr(v49 - 1, v47));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
              std::__shared_weak_count::__release_weak(v46);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v45 + 88))(v45, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v44 = *(int16x4_t **)(v7 + 24);
        }
        *(double *)&v50 = v5;
        v51 = (double)v12;
        v52 = 1.0 / (v6 - v5);
        v53 = (double)v13 - (double)v12;
        v54 = v34 - 1;
        v55 = 4 * v36;
        v56 = 2 * v37;
        __asm { FMOV            V4.2D, #1.0 }
        if (v35 != 1)
        {
          v61 = 0;
          v62 = (float64x2_t)vdupq_lane_s64(v50, 0);
          v63 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v51, 0);
          do
          {
            v66 = v38;
            v67 = v44;
            if (v34 != 1)
            {
              v68 = v34 - 1;
              v66 = v38;
              v67 = v44;
              do
              {
                v69 = vmulq_n_f64(vsubq_f64(vcvt_hight_f64_f32(*v66), v62), v52);
                v70 = vmulq_n_f64(vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)v66->f32), v62), v52);
                *v67 = vuzp1_s16((int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v70, (float64x2_t)_Q4), _Q4, (int8x16_t)vmaxnmq_f64(v70, (float64x2_t)0)), v53), v63)))), (int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v69, (float64x2_t)_Q4), _Q4,
                                                             (int8x16_t)vmaxnmq_f64(v69, (float64x2_t)0)),
                                              v53),
                                            v63)))));
                v67 = (int16x4_t *)((char *)v67 + v56);
                v66 = (float32x4_t *)((char *)v66 + v55);
                --v68;
              }
              while (v68);
            }
            v64 = vmulq_n_f64(vsubq_f64(vcvt_hight_f64_f32(*v66), v62), v52);
            v65 = vmulq_n_f64(vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)v66->f32), v62), v52);
            *v67 = vuzp1_s16((int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v65, (float64x2_t)_Q4), _Q4, (int8x16_t)vmaxnmq_f64(v65, (float64x2_t)0)), v53), v63)))), (int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64, (float64x2_t)_Q4), _Q4,
                                                         (int8x16_t)vmaxnmq_f64(v64, (float64x2_t)0)),
                                          v53),
                                        v63)))));
            v38 = (float32x4_t *)((char *)v38 + 4 * v82);
            v44 = (int16x4_t *)((char *)v44 + 2 * v81);
            ++v61;
          }
          while (v61 != v35 - 1);
        }
        if (v34 != 1)
        {
          v71 = (float64x2_t)vdupq_lane_s64(v50, 0);
          v72 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v51, 0);
          do
          {
            v73 = vmulq_n_f64(vsubq_f64(vcvt_hight_f64_f32(*v38), v71), v52);
            v74 = vmulq_n_f64(vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)v38->f32), v71), v52);
            *v44 = vuzp1_s16((int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v74, (float64x2_t)_Q4), _Q4, (int8x16_t)vmaxnmq_f64(v74, (float64x2_t)0)), v53), v72)))), (int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v73, (float64x2_t)_Q4), _Q4,
                                                         (int8x16_t)vmaxnmq_f64(v73, (float64x2_t)0)),
                                          v53),
                                        v72)))));
            v38 = (float32x4_t *)((char *)v38 + v55);
            v44 = (int16x4_t *)((char *)v44 + v56);
            --v54;
          }
          while (v54);
        }
        v75 = (float64x2_t)vdupq_lane_s64(v50, 0);
        v76 = vsubq_f64(vcvtq_f64_f32(*(float32x2_t *)v38->f32), v75);
        v77 = vmulq_n_f64(vsubq_f64(vcvt_hight_f64_f32(*v38), v75), v52);
        v78 = vmulq_n_f64(v76, v52);
        v79 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v51, 0);
        *v44 = vuzp1_s16((int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v78, (float64x2_t)_Q4), _Q4, (int8x16_t)vmaxnmq_f64(v78, (float64x2_t)0)), v53), v79)))), (int16x4_t)vmovn_s64(vcvtq_s64_f64(vrndaq_f64(vaddq_f64(vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v77, (float64x2_t)_Q4), _Q4,
                                                     (int8x16_t)vmaxnmq_f64(v77, (float64x2_t)0)),
                                      v53),
                                    v79)))));
      }
    }
  }
LABEL_83:
  v80 = v83;
  v83 = 0;
  if (v80)
    (*(void (**)(uint64_t))(*(_QWORD *)v80 + 8))(v80);
  result = v84;
  v84 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224371030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224371094(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  _QWORD v11[4];
  uint64_t v12;
  __int16 v13;
  __int16 v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v14 = v8;
    v13 = (int)v9;
    *(float *)&v12 = (float)(int)v9;
    *((float *)&v12 + 1) = (float)v8;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 1199570688;
  }
  v11[0] = (char *)&v12 + 4;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_2243715C8(v4, v5, (uint64_t)v11);
}

uint64_t sub_224371158(uint64_t **a1, __n128 a2)
{
  return sub_224371164(**a1, (*a1)[1], a2);
}

uint64_t sub_224371164(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  float32x4_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  int16x4_t *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  _OWORD v54[2];

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_64;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v46 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v45, v14, 1);
    v23 = *(_DWORD *)(a1 + 32);
    if (!v23)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v46, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v45 = 0;
  v23 = *(_DWORD *)(a1 + 32);
  if (!v23)
    goto LABEL_58;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v48 = v23 - 1;
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a2 + 48);
      v49 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v47 = 0;
      v50 = v24 - 1;
      v51 = v26 | (v27 << 32);
      v52 = v25 - 1;
      v53 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v28 = *(float32x4_t **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(float32x4_t **)(a1 + 24);
      }
      v34 = *(int16x4_t **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(int16x4_t **)(a2 + 24);
      }
      memset(v54, 0, sizeof(v54));
      v40 = v52;
      if (v52)
      {
        v41 = 4 * v53;
        v42 = 2 * HIDWORD(v53);
        do
        {
          sub_224371570(&v47, (float32x4_t **)v54, v28, v34);
          v28 = (float32x4_t *)((char *)v28 + v41);
          v34 = (int16x4_t *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      a3.n128_u64[0] = (unint64_t)sub_224371570(&v47, (float32x4_t **)v54, v28, v34);
    }
  }
LABEL_58:
  v43 = v45;
  v45 = 0;
  if (v43)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v43 + 8))(v43, a3);
  result = v46;
  v46 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22437150C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

int16x4_t sub_224371570(_DWORD *a1, float32x4_t **a2, float32x4_t *a3, int16x4_t *a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int16x4_t result;

  *a2 = a3;
  a2[2] = (float32x4_t *)a4;
  v4 = a1[5];
  if (v4)
  {
    v5 = 4 * a1[6];
    v6 = 2 * a1[7];
    do
    {
      *a4 = vmovn_s32((int32x4_t)vcvtq_u32_f32(*a3));
      a3 = (float32x4_t *)((char *)a3 + v5);
      a4 = (int16x4_t *)((char *)a4 + v6);
      --v4;
    }
    while (v4);
  }
  *a2 = a3;
  a2[2] = (float32x4_t *)a4;
  result = vmovn_s32((int32x4_t)vcvtq_u32_f32(*a3));
  *a4 = result;
  return result;
}

uint64_t sub_2243715C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _WORD *v48;
  float v49;
  float *v50;
  _WORD *v51;
  _WORD *v52;
  float *v53;
  int v54;
  int v55;
  float v56;
  float v57;
  float v58;
  float v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_91;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_91;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_91:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v64 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v63, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_85;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v64, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v63 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_85;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v62 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v28 = *(unsigned int *)(a2 + 52);
      v29 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(float **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v24 - 1;
      v42 = 4 * v26;
      v43 = 2 * v27;
      v44 = v25 - 1;
      if (v44)
      {
        v45 = 4 * v62;
        v46 = 2 * v28;
        if (v41)
        {
          v47 = 0;
          while (1)
          {
            v48 = *(_WORD **)(a3 + 8);
            v49 = **(float **)a3;
            v50 = *(float **)(a3 + 16);
            v51 = *(_WORD **)(a3 + 24);
            v52 = v35;
            v53 = v29;
            v54 = v41;
            do
            {
              v56 = *v53;
              if (*v53 >= v49)
              {
                if (v56 <= *v50)
                {
                  *v52 = (int)v56;
                  v57 = v53[1];
                  if (v57 < v49)
                  {
LABEL_70:
                    v52[1] = *v48;
                    v58 = v53[2];
                    if (v58 < v49)
                      goto LABEL_71;
                    goto LABEL_74;
                  }
                }
                else
                {
                  *v52 = *v51;
                  v57 = v53[1];
                  if (v57 < v49)
                    goto LABEL_70;
                }
              }
              else
              {
                *v52 = *v48;
                v57 = v53[1];
                if (v57 < v49)
                  goto LABEL_70;
              }
              if (v57 <= *v50)
              {
                v52[1] = (int)v57;
                v58 = v53[2];
                if (v58 < v49)
                {
LABEL_71:
                  v52[2] = *v48;
                  v59 = v53[3];
                  if (v59 < v49)
                    goto LABEL_59;
                  goto LABEL_78;
                }
              }
              else
              {
                v52[1] = *v51;
                v58 = v53[2];
                if (v58 < v49)
                  goto LABEL_71;
              }
LABEL_74:
              if (v58 <= *v50)
              {
                v52[2] = (int)v58;
                v59 = v53[3];
                if (v59 < v49)
                {
LABEL_59:
                  LOWORD(v55) = *v48;
                  goto LABEL_60;
                }
              }
              else
              {
                v52[2] = *v51;
                v59 = v53[3];
                if (v59 < v49)
                  goto LABEL_59;
              }
LABEL_78:
              if (v59 <= *v50)
                v55 = (int)v59;
              else
                LOWORD(v55) = *v51;
LABEL_60:
              v52[3] = v55;
              v53 = (float *)((char *)v53 + v42);
              v52 = (_WORD *)((char *)v52 + v43);
              --v54;
            }
            while (v54);
            sub_224371B3C(a3, v53, v52);
            v29 = (float *)((char *)v29 + v45);
            v35 = (_WORD *)((char *)v35 + v46);
            if (++v47 == v44)
              goto LABEL_82;
          }
        }
        do
        {
          sub_224371B3C(a3, v29, v35);
          v29 = (float *)((char *)v29 + v45);
          v35 = (_WORD *)((char *)v35 + v46);
          --v44;
        }
        while (v44);
      }
LABEL_82:
      while (v41)
      {
        sub_224371B3C(a3, v29, v35);
        v29 = (float *)((char *)v29 + v42);
        v35 = (_WORD *)((char *)v35 + v43);
        --v41;
      }
      sub_224371B3C(a3, v29, v35);
    }
  }
LABEL_85:
  v60 = v63;
  v63 = 0;
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224371AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224371B3C(uint64_t result, float *a2, _WORD *a3)
{
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;

  v3 = **(float **)result;
  v4 = *a2;
  if (*a2 >= v3)
  {
    if (v4 <= **(float **)(result + 16))
    {
      *a3 = (int)v4;
      v5 = a2[1];
      if (v5 < v3)
        goto LABEL_10;
    }
    else
    {
      *a3 = **(_WORD **)(result + 24);
      v5 = a2[1];
      if (v5 < v3)
        goto LABEL_10;
    }
  }
  else
  {
    *a3 = **(_WORD **)(result + 8);
    v5 = a2[1];
    if (v5 < v3)
    {
LABEL_10:
      a3[1] = **(_WORD **)(result + 8);
      v6 = a2[2];
      if (v6 < v3)
        goto LABEL_11;
LABEL_14:
      if (v6 <= **(float **)(result + 16))
      {
        a3[2] = (int)v6;
        v7 = a2[3];
        if (v7 >= v3)
          goto LABEL_16;
      }
      else
      {
        a3[2] = **(_WORD **)(result + 24);
        v7 = a2[3];
        if (v7 >= v3)
          goto LABEL_16;
      }
LABEL_19:
      a3[3] = **(_WORD **)(result + 8);
      return result;
    }
  }
  if (v5 > **(float **)(result + 16))
  {
    a3[1] = **(_WORD **)(result + 24);
    v6 = a2[2];
    if (v6 < v3)
      goto LABEL_11;
    goto LABEL_14;
  }
  a3[1] = (int)v5;
  v6 = a2[2];
  if (v6 >= v3)
    goto LABEL_14;
LABEL_11:
  a3[2] = **(_WORD **)(result + 8);
  v7 = a2[3];
  if (v7 < v3)
    goto LABEL_19;
LABEL_16:
  if (v7 <= **(float **)(result + 16))
    a3[3] = (int)v7;
  else
    a3[3] = **(_WORD **)(result + 24);
  return result;
}

uint64_t sub_224371C94(uint64_t **a1, uint64_t a2)
{
  uint64_t *v2;
  double v3;
  float v4;
  double v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  unsigned __int16 v14;
  double v15;
  unsigned int v17;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  float *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  _WORD *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  double v60;
  double v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  int v68;
  double v69;
  double v70;
  double v71;
  double v73;
  double v74;
  double v75;
  double v77;
  double v78;
  double v79;
  double v81;
  double v82;
  double v83;
  _WORD *v85;
  float *v86;
  int v87;
  double v88;
  double v89;
  double v90;
  double v92;
  double v93;
  double v94;
  double v96;
  double v97;
  double v98;
  double v100;
  double v101;
  double v102;
  double v104;
  double v105;
  double v106;
  double v108;
  double v109;
  double v110;
  double v112;
  double v113;
  double v114;
  double v116;
  double v117;
  double v118;
  double v120;
  double v121;
  double v122;
  double v124;
  double v125;
  double v126;
  double v128;
  double v129;
  double v130;
  double v132;
  double v133;
  double v134;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v2 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v3 = -3.40282347e38;
    if (*(double *)a2 >= -3.40282347e38)
      v3 = *(double *)a2;
    v4 = v3;
    v5 = 3.40282347e38;
    if (*(double *)(a2 + 8) <= 3.40282347e38)
      v5 = *(double *)(a2 + 8);
    v6 = v5;
    v8 = *v2;
    v7 = v2[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v17 = 1006632960;
    goto LABEL_14;
  }
  v6 = 1.0;
  v4 = 0.0;
  v8 = *v2;
  v7 = v2[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v9 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v9 = *(double *)(a2 + 24);
  _S0 = v9;
  __asm { FCVT            H0, S0 }
  v14 = LOWORD(_S0);
  v15 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v15 = *(double *)(a2 + 32);
  _S0 = v15;
  __asm { FCVT            H0, S0 }
  v17 = v14 | (LOWORD(_S0) << 16);
LABEL_14:
  _H10 = v17;
  _S11 = HIWORD(v17);
  __asm
  {
    FCVT            S0, H10
    FCVT            S1, H11
  }
  if (v4 == _S0 && v6 == _S1)
    return sub_2243725AC(v8, v7);
  v23 = *(_QWORD *)(v8 + 8);
  if (!v23)
    goto LABEL_35;
  v24 = *(std::__shared_weak_count **)(v8 + 16);
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldxr(p_shared_owners);
    while (__stxr(v26 + 1, p_shared_owners));
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
    v23 = *(_QWORD *)(v8 + 8);
    v28 = *(std::__shared_weak_count **)(v8 + 16);
    if (v28)
    {
      v29 = (unint64_t *)&v28->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      do
        v31 = __ldaxr(v29);
      while (__stlxr(v31 - 1, v29));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
  }
  if (*(_BYTE *)(v8 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v23 + 96))(&v138, v23, 0);
    v32 = *(_QWORD *)(v7 + 8);
    if (!v32)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v138 = 0;
    v32 = *(_QWORD *)(v7 + 8);
    if (!v32)
      goto LABEL_51;
  }
  v34 = *(std::__shared_weak_count **)(v7 + 16);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    do
      v37 = __ldaxr(v35);
    while (__stlxr(v37 - 1, v35));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
    v32 = *(_QWORD *)(v7 + 8);
    v38 = *(std::__shared_weak_count **)(v7 + 16);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v41 = __ldaxr(v39);
      while (__stlxr(v41 - 1, v39));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  if (!*(_BYTE *)(v7 + 73))
  {
LABEL_51:
    v137 = 0;
    if (*(_DWORD *)(v8 + 32))
      goto LABEL_52;
    goto LABEL_130;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v32 + 96))(&v137, v32, 1);
  if (*(_DWORD *)(v8 + 32))
  {
LABEL_52:
    v42 = *(_DWORD *)(v8 + 36);
    if (v42)
    {
      v43 = *(_DWORD *)(v8 + 40);
      if (v43)
      {
        v45 = *(unsigned int *)(v8 + 48);
        v44 = *(unsigned int *)(v8 + 52);
        v47 = *(unsigned int *)(v7 + 48);
        v46 = *(unsigned int *)(v7 + 52);
        v48 = *(float **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v48)
        {
          v49 = *(_QWORD *)(v8 + 8);
          v50 = *(std::__shared_weak_count **)(v8 + 16);
          if (v50)
          {
            v51 = (unint64_t *)&v50->__shared_owners_;
            do
              v52 = __ldxr(v51);
            while (__stxr(v52 + 1, v51));
            do
              v53 = __ldaxr(v51);
            while (__stlxr(v53 - 1, v51));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v48 = *(float **)(v8 + 24);
        }
        v54 = *(_WORD **)(v7 + 24);
        if (*(_BYTE *)(v7 + 72) && v54)
        {
          v55 = *(_QWORD *)(v7 + 8);
          v56 = *(std::__shared_weak_count **)(v7 + 16);
          if (v56)
          {
            v57 = (unint64_t *)&v56->__shared_owners_;
            do
              v58 = __ldxr(v57);
            while (__stxr(v58 + 1, v57));
            do
              v59 = __ldaxr(v57);
            while (__stlxr(v59 - 1, v57));
            if (!v59)
            {
              ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
              std::__shared_weak_count::__release_weak(v56);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v55 + 88))(v55, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v54 = *(_WORD **)(v7 + 24);
        }
        v60 = v4;
        __asm
        {
          FCVT            D0, H10
          FCVT            D2, H11
        }
        v63 = _D2 - _D0;
        v64 = v42 - 1;
        v65 = 4 * v45;
        v66 = 2 * v47;
        v67 = 1.0 / (v6 - v4);
        if (v43 != 1)
        {
          v68 = 0;
          do
          {
            v85 = v54;
            v86 = v48;
            if (v42 != 1)
            {
              v85 = v54;
              v86 = v48;
              v87 = v42 - 1;
              do
              {
                v88 = v67 * (*v86 - v60);
                v89 = fmax(v88, 0.0);
                if (v88 <= 1.0)
                  v90 = v89;
                else
                  v90 = 1.0;
                _S6 = v63 * v90 + _D0;
                __asm { FCVT            H6, S6 }
                *v85 = LOWORD(_S6);
                v92 = v67 * (v86[1] - v60);
                v93 = fmax(v92, 0.0);
                if (v92 <= 1.0)
                  v94 = v93;
                else
                  v94 = 1.0;
                _S6 = v63 * v94 + _D0;
                __asm { FCVT            H6, S6 }
                v85[1] = LOWORD(_S6);
                v96 = v67 * (v86[2] - v60);
                v97 = fmax(v96, 0.0);
                if (v96 <= 1.0)
                  v98 = v97;
                else
                  v98 = 1.0;
                _S6 = v63 * v98 + _D0;
                __asm { FCVT            H6, S6 }
                v85[2] = LOWORD(_S6);
                v100 = v67 * (v86[3] - v60);
                v101 = fmax(v100, 0.0);
                if (v100 <= 1.0)
                  v102 = v101;
                else
                  v102 = 1.0;
                _S6 = v63 * v102 + _D0;
                __asm { FCVT            H6, S6 }
                v85[3] = LOWORD(_S6);
                v86 = (float *)((char *)v86 + v65);
                v85 = (_WORD *)((char *)v85 + v66);
                --v87;
              }
              while (v87);
            }
            v69 = v67 * (*v86 - v60);
            v70 = fmax(v69, 0.0);
            if (v69 <= 1.0)
              v71 = v70;
            else
              v71 = 1.0;
            _S6 = v63 * v71 + _D0;
            __asm { FCVT            H6, S6 }
            *v85 = LOWORD(_S6);
            v73 = v67 * (v86[1] - v60);
            v74 = fmax(v73, 0.0);
            if (v73 <= 1.0)
              v75 = v74;
            else
              v75 = 1.0;
            _S6 = v63 * v75 + _D0;
            __asm { FCVT            H6, S6 }
            v85[1] = LOWORD(_S6);
            v77 = v67 * (v86[2] - v60);
            v78 = fmax(v77, 0.0);
            if (v77 <= 1.0)
              v79 = v78;
            else
              v79 = 1.0;
            _S6 = v63 * v79 + _D0;
            __asm { FCVT            H6, S6 }
            v85[2] = LOWORD(_S6);
            v81 = v67 * (v86[3] - v60);
            v82 = fmax(v81, 0.0);
            if (v81 <= 1.0)
              v83 = v82;
            else
              v83 = 1.0;
            _S6 = v63 * v83 + _D0;
            __asm { FCVT            H6, S6 }
            v85[3] = LOWORD(_S6);
            v48 += v44;
            v54 += v46;
            ++v68;
          }
          while (v68 != v43 - 1);
        }
        if (v42 != 1)
        {
          do
          {
            v104 = v67 * (*v48 - v60);
            v105 = fmax(v104, 0.0);
            if (v104 <= 1.0)
              v106 = v105;
            else
              v106 = 1.0;
            _S6 = v63 * v106 + _D0;
            __asm { FCVT            H6, S6 }
            *v54 = LOWORD(_S6);
            v108 = v67 * (v48[1] - v60);
            v109 = fmax(v108, 0.0);
            if (v108 <= 1.0)
              v110 = v109;
            else
              v110 = 1.0;
            _S6 = v63 * v110 + _D0;
            __asm { FCVT            H6, S6 }
            v54[1] = LOWORD(_S6);
            v112 = v67 * (v48[2] - v60);
            v113 = fmax(v112, 0.0);
            if (v112 <= 1.0)
              v114 = v113;
            else
              v114 = 1.0;
            _S6 = v63 * v114 + _D0;
            __asm { FCVT            H6, S6 }
            v54[2] = LOWORD(_S6);
            v116 = v67 * (v48[3] - v60);
            v117 = fmax(v116, 0.0);
            if (v116 <= 1.0)
              v118 = v117;
            else
              v118 = 1.0;
            _S6 = v63 * v118 + _D0;
            __asm { FCVT            H6, S6 }
            v54[3] = LOWORD(_S6);
            v48 = (float *)((char *)v48 + v65);
            v54 = (_WORD *)((char *)v54 + v66);
            --v64;
          }
          while (v64);
        }
        v120 = v67 * (*v48 - v60);
        v121 = fmax(v120, 0.0);
        if (v120 <= 1.0)
          v122 = v121;
        else
          v122 = 1.0;
        _S4 = v63 * v122 + _D0;
        __asm { FCVT            H4, S4 }
        *v54 = LOWORD(_S4);
        v124 = v67 * (v48[1] - v60);
        v125 = fmax(v124, 0.0);
        if (v124 <= 1.0)
          v126 = v125;
        else
          v126 = 1.0;
        _S4 = v63 * v126 + _D0;
        __asm { FCVT            H4, S4 }
        v54[1] = LOWORD(_S4);
        v128 = v67 * (v48[2] - v60);
        v129 = fmax(v128, 0.0);
        if (v128 <= 1.0)
          v130 = v129;
        else
          v130 = 1.0;
        _S4 = v63 * v130 + _D0;
        __asm { FCVT            H4, S4 }
        v54[2] = LOWORD(_S4);
        v132 = v67 * (v48[3] - v60);
        v133 = fmax(v132, 0.0);
        if (v132 <= 1.0)
          v134 = v133;
        else
          v134 = 1.0;
        _S0 = v63 * v134 + _D0;
        __asm { FCVT            H0, S0 }
        v54[3] = LOWORD(_S0);
      }
    }
  }
LABEL_130:
  v136 = v137;
  v137 = 0;
  if (v136)
    (*(void (**)(uint64_t))(*(_QWORD *)v136 + 8))(v136);
  result = v138;
  v138 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224372464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243724C8(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  _QWORD v18[4];
  unint64_t v19;
  __int16 v20;
  __int16 v21;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 1.0;
    if (v6 < -65504.0)
      v6 = -65504.0;
    _S0 = v6;
    __asm { FCVT            H0, S0 }
    if (v7 > 65504.0)
      v7 = 65504.0;
    _S1 = v7;
    v21 = _H0;
    __asm { FCVT            H1, S1 }
    v20 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v19 = __PAIR64__(_S2, _S0);
  }
  else
  {
    v21 = 0;
    v20 = 15360;
    v19 = 1065353216;
  }
  v18[0] = (char *)&v19 + 4;
  v18[1] = &v21;
  v18[2] = &v19;
  v18[3] = &v20;
  return sub_224372ABC(v4, v5, (uint64_t)v18);
}

uint64_t sub_2243725A0(uint64_t **a1)
{
  return sub_2243725AC(**a1, (*a1)[1]);
}

uint64_t sub_2243725AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  _WORD *v45;
  int *v46;
  int *v47;
  _WORD *v48;
  int v49;
  uint64_t v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v77 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v76, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v77, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v76 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(int **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(int **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 4 * v25;
      v42 = 2 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _S0 = *v28;
            __asm { FCVT            H0, S0 }
            *v34 = _S0;
            _S0 = v28[1];
            __asm { FCVT            H0, S0 }
            v34[1] = _S0;
            _S0 = v28[2];
            __asm { FCVT            H0, S0 }
            v34[2] = _S0;
            _S0 = v28[3];
            __asm { FCVT            H0, S0 }
            v34[3] = _S0;
            v28 += v24;
            v34 += v26;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v34 + 2;
          v46 = v28 + 2;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v22 - 1;
            do
            {
              _S0 = *(v47 - 2);
              __asm { FCVT            H0, S0 }
              *(v48 - 2) = _S0;
              _S0 = *(v47 - 1);
              __asm { FCVT            H0, S0 }
              *(v48 - 1) = _S0;
              _S0 = *v47;
              __asm { FCVT            H0, S0 }
              *v48 = _S0;
              _S0 = v47[1];
              __asm { FCVT            H0, S0 }
              v48[1] = _S0;
              v48 = (_WORD *)((char *)v48 + v42);
              v47 = (int *)((char *)v47 + v41);
              --v49;
            }
            while (v49);
            _S0 = *(v47 - 2);
            __asm { FCVT            H0, S0 }
            *(v48 - 2) = _S0;
            _S0 = *(v47 - 1);
            __asm { FCVT            H0, S0 }
            *(v48 - 1) = _S0;
            _S0 = *v47;
            __asm { FCVT            H0, S0 }
            *v48 = _S0;
            _S0 = v47[1];
            __asm { FCVT            H0, S0 }
            v48[1] = _S0;
            v28 += v24;
            v34 += v26;
            ++v44;
            v45 += v26;
            v46 += v24;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _S0 = *v28;
          __asm { FCVT            H0, S0 }
          *v34 = _S0;
          _S0 = v28[1];
          __asm { FCVT            H0, S0 }
          v34[1] = _S0;
          _S0 = v28[2];
          __asm { FCVT            H0, S0 }
          v34[2] = _S0;
          _S0 = v28[3];
          __asm { FCVT            H0, S0 }
          v34[3] = _S0;
          v28 = (int *)((char *)v28 + v41);
          v34 = (_WORD *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      _S0 = *v28;
      __asm { FCVT            H0, S0 }
      *v34 = _S0;
      _S0 = v28[1];
      __asm { FCVT            H0, S0 }
      v34[1] = _S0;
      _S0 = v28[2];
      __asm { FCVT            H0, S0 }
      v34[2] = _S0;
      _S0 = v28[3];
      __asm { FCVT            H0, S0 }
      v34[3] = _S0;
    }
  }
LABEL_65:
  v74 = v76;
  v76 = 0;
  if (v74)
    (*(void (**)(uint64_t))(*(_QWORD *)v74 + 8))(v74);
  result = v77;
  v77 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224372A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224372ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _WORD *v48;
  _WORD *v49;
  float *v50;
  int v51;
  _WORD *v58;
  _WORD *v60;
  _WORD *v63;
  _WORD *v68;
  _WORD *v70;
  _WORD *v73;
  _WORD *v80;
  _WORD *v82;
  _WORD *v85;
  _WORD *v90;
  _WORD *v92;
  _WORD *v95;
  __int16 *v98;
  uint64_t v101;
  uint64_t result;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_18;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
LABEL_18:
    v105 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_35;
LABEL_19:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_31;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (v19)
    {
      v15 = *(_QWORD *)(a2 + 8);
      v20 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v20)
        goto LABEL_31;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
      v15 = *(_QWORD *)(a2 + 8);
      v20 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v20)
        goto LABEL_31;
    }
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_35;
LABEL_32:
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v104, v15, 1);
      if (!*(_DWORD *)(a1 + 32))
        goto LABEL_148;
      goto LABEL_36;
    }
LABEL_31:
    if (!*(_BYTE *)(a2 + 73))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v105, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_19;
LABEL_35:
  v104 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_148;
LABEL_36:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v103 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v28 = *(unsigned int *)(a2 + 52);
      v29 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(float **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v24 - 1;
      v42 = 4 * v26;
      v43 = 2 * v27;
      v44 = v25 - 1;
      if (v25 != 1)
      {
        v45 = 0;
        v46 = 4 * v103;
        v47 = 2 * v28;
        while (1)
        {
          v49 = v35;
          v50 = v29;
          if (v24 != 1)
          {
            v49 = v35;
            v50 = v29;
            v51 = v24 - 1;
            while (1)
            {
              _S0 = *v50;
              if (*v50 < **(float **)a3)
                break;
              if (_S0 > **(float **)(a3 + 16))
              {
                v58 = *(_WORD **)(a3 + 24);
LABEL_67:
                *v49 = *v58;
                _S0 = v50[1];
                if (_S0 < **(float **)a3)
                  goto LABEL_68;
                goto LABEL_70;
              }
              __asm { FCVT            H0, S0 }
              *v49 = _H0;
              _S0 = v50[1];
              if (_S0 < **(float **)a3)
              {
LABEL_68:
                v60 = *(_WORD **)(a3 + 8);
                goto LABEL_72;
              }
LABEL_70:
              if (_S0 > **(float **)(a3 + 16))
              {
                v60 = *(_WORD **)(a3 + 24);
LABEL_72:
                v49[1] = *v60;
                _S0 = v50[2];
                if (_S0 < **(float **)a3)
                  goto LABEL_73;
                goto LABEL_75;
              }
              __asm { FCVT            H0, S0 }
              v49[1] = _H0;
              _S0 = v50[2];
              if (_S0 < **(float **)a3)
              {
LABEL_73:
                v63 = *(_WORD **)(a3 + 8);
                goto LABEL_77;
              }
LABEL_75:
              if (_S0 <= **(float **)(a3 + 16))
              {
                __asm { FCVT            H0, S0 }
                v49[2] = _H0;
                _S0 = v50[3];
                if (_S0 < **(float **)a3)
                  goto LABEL_78;
LABEL_81:
                if (_S0 <= **(float **)(a3 + 16))
                {
                  __asm { FCVT            H0, S0 }
                  v49[3] = _H0;
                  v50 = (float *)((char *)v50 + v42);
                  v49 = (_WORD *)((char *)v49 + v43);
                  if (!--v51)
                    goto LABEL_83;
                }
                else
                {
                  v49[3] = **(_WORD **)(a3 + 24);
                  v50 = (float *)((char *)v50 + v42);
                  v49 = (_WORD *)((char *)v49 + v43);
                  if (!--v51)
                    goto LABEL_83;
                }
              }
              else
              {
                v63 = *(_WORD **)(a3 + 24);
LABEL_77:
                v49[2] = *v63;
                _S0 = v50[3];
                if (_S0 >= **(float **)a3)
                  goto LABEL_81;
LABEL_78:
                v49[3] = **(_WORD **)(a3 + 8);
                v50 = (float *)((char *)v50 + v42);
                v49 = (_WORD *)((char *)v49 + v43);
                if (!--v51)
                  goto LABEL_83;
              }
            }
            v58 = *(_WORD **)(a3 + 8);
            goto LABEL_67;
          }
LABEL_83:
          _S0 = *v50;
          if (*v50 < **(float **)a3)
            break;
          if (_S0 > **(float **)(a3 + 16))
          {
            v68 = *(_WORD **)(a3 + 24);
LABEL_87:
            *v49 = *v68;
            _S0 = v50[1];
            if (_S0 < **(float **)a3)
              goto LABEL_88;
            goto LABEL_90;
          }
          __asm { FCVT            H0, S0 }
          *v49 = _H0;
          _S0 = v50[1];
          if (_S0 < **(float **)a3)
          {
LABEL_88:
            v70 = *(_WORD **)(a3 + 8);
            goto LABEL_92;
          }
LABEL_90:
          if (_S0 > **(float **)(a3 + 16))
          {
            v70 = *(_WORD **)(a3 + 24);
LABEL_92:
            v49[1] = *v70;
            _S0 = v50[2];
            if (_S0 < **(float **)a3)
              goto LABEL_93;
            goto LABEL_95;
          }
          __asm { FCVT            H0, S0 }
          v49[1] = _H0;
          _S0 = v50[2];
          if (_S0 < **(float **)a3)
          {
LABEL_93:
            v73 = *(_WORD **)(a3 + 8);
            goto LABEL_97;
          }
LABEL_95:
          if (_S0 <= **(float **)(a3 + 16))
          {
            __asm { FCVT            H0, S0 }
            v49[2] = _H0;
            _S0 = v50[3];
            if (_S0 >= **(float **)a3)
              goto LABEL_100;
LABEL_58:
            v48 = *(_WORD **)(a3 + 8);
LABEL_59:
            v49[3] = *v48;
            v29 = (float *)((char *)v29 + v46);
            v35 = (_WORD *)((char *)v35 + v47);
            if (++v45 == v44)
              goto LABEL_103;
          }
          else
          {
            v73 = *(_WORD **)(a3 + 24);
LABEL_97:
            v49[2] = *v73;
            _S0 = v50[3];
            if (_S0 < **(float **)a3)
              goto LABEL_58;
LABEL_100:
            if (_S0 > **(float **)(a3 + 16))
            {
              v48 = *(_WORD **)(a3 + 24);
              goto LABEL_59;
            }
            __asm { FCVT            H0, S0 }
            v49[3] = _H0;
            v29 = (float *)((char *)v29 + v46);
            v35 = (_WORD *)((char *)v35 + v47);
            if (++v45 == v44)
              goto LABEL_103;
          }
        }
        v68 = *(_WORD **)(a3 + 8);
        goto LABEL_87;
      }
LABEL_103:
      if (v24 == 1)
      {
LABEL_126:
        _S0 = *v29;
        if (*v29 >= **(float **)a3)
        {
          if (_S0 <= **(float **)(a3 + 16))
          {
            __asm { FCVT            H0, S0 }
            *v35 = _H0;
            _S0 = v29[1];
            if (_S0 < **(float **)a3)
              goto LABEL_131;
            goto LABEL_133;
          }
          v90 = *(_WORD **)(a3 + 24);
        }
        else
        {
          v90 = *(_WORD **)(a3 + 8);
        }
        *v35 = *v90;
        _S0 = v29[1];
        if (_S0 < **(float **)a3)
        {
LABEL_131:
          v92 = *(_WORD **)(a3 + 8);
          goto LABEL_135;
        }
LABEL_133:
        if (_S0 <= **(float **)(a3 + 16))
        {
          __asm { FCVT            H0, S0 }
          v35[1] = _H0;
          _S0 = v29[2];
          if (_S0 < **(float **)a3)
            goto LABEL_136;
          goto LABEL_138;
        }
        v92 = *(_WORD **)(a3 + 24);
LABEL_135:
        v35[1] = *v92;
        _S0 = v29[2];
        if (_S0 < **(float **)a3)
        {
LABEL_136:
          v95 = *(_WORD **)(a3 + 8);
          goto LABEL_140;
        }
LABEL_138:
        if (_S0 <= **(float **)(a3 + 16))
        {
          __asm { FCVT            H0, S0 }
          v35[2] = _H0;
          _S0 = v29[3];
          if (_S0 < **(float **)a3)
            goto LABEL_141;
          goto LABEL_143;
        }
        v95 = *(_WORD **)(a3 + 24);
LABEL_140:
        v35[2] = *v95;
        _S0 = v29[3];
        if (_S0 < **(float **)a3)
        {
LABEL_141:
          v98 = *(__int16 **)(a3 + 8);
          goto LABEL_145;
        }
LABEL_143:
        if (_S0 <= **(float **)(a3 + 16))
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_147;
        }
        v98 = *(__int16 **)(a3 + 24);
LABEL_145:
        _H0 = *v98;
LABEL_147:
        v35[3] = _H0;
        goto LABEL_148;
      }
      while (1)
      {
        _S0 = *v29;
        if (*v29 < **(float **)a3)
          break;
        if (_S0 > **(float **)(a3 + 16))
        {
          v80 = *(_WORD **)(a3 + 24);
LABEL_110:
          *v35 = *v80;
          _S0 = v29[1];
          if (_S0 < **(float **)a3)
            goto LABEL_111;
          goto LABEL_113;
        }
        __asm { FCVT            H0, S0 }
        *v35 = _H0;
        _S0 = v29[1];
        if (_S0 < **(float **)a3)
        {
LABEL_111:
          v82 = *(_WORD **)(a3 + 8);
          goto LABEL_115;
        }
LABEL_113:
        if (_S0 > **(float **)(a3 + 16))
        {
          v82 = *(_WORD **)(a3 + 24);
LABEL_115:
          v35[1] = *v82;
          _S0 = v29[2];
          if (_S0 < **(float **)a3)
            goto LABEL_116;
          goto LABEL_118;
        }
        __asm { FCVT            H0, S0 }
        v35[1] = _H0;
        _S0 = v29[2];
        if (_S0 < **(float **)a3)
        {
LABEL_116:
          v85 = *(_WORD **)(a3 + 8);
          goto LABEL_120;
        }
LABEL_118:
        if (_S0 <= **(float **)(a3 + 16))
        {
          __asm { FCVT            H0, S0 }
          v35[2] = _H0;
          _S0 = v29[3];
          if (_S0 < **(float **)a3)
            goto LABEL_121;
LABEL_124:
          if (_S0 <= **(float **)(a3 + 16))
          {
            __asm { FCVT            H0, S0 }
            v35[3] = _H0;
            v29 = (float *)((char *)v29 + v42);
            v35 = (_WORD *)((char *)v35 + v43);
            if (!--v41)
              goto LABEL_126;
          }
          else
          {
            v35[3] = **(_WORD **)(a3 + 24);
            v29 = (float *)((char *)v29 + v42);
            v35 = (_WORD *)((char *)v35 + v43);
            if (!--v41)
              goto LABEL_126;
          }
        }
        else
        {
          v85 = *(_WORD **)(a3 + 24);
LABEL_120:
          v35[2] = *v85;
          _S0 = v29[3];
          if (_S0 >= **(float **)a3)
            goto LABEL_124;
LABEL_121:
          v35[3] = **(_WORD **)(a3 + 8);
          v29 = (float *)((char *)v29 + v42);
          v35 = (_WORD *)((char *)v35 + v43);
          if (!--v41)
            goto LABEL_126;
        }
      }
      v80 = *(_WORD **)(a3 + 8);
      goto LABEL_110;
    }
  }
LABEL_148:
  v101 = v104;
  v104 = 0;
  if (v101)
    (*(void (**)(uint64_t))(*(_QWORD *)v101 + 8))(v101);
  result = v105;
  v105 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243733DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224373440(int a1)
{
  __asm { BR              X10 }
}

void sub_224373484(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, void *__dst, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,uint64_t a25,int a26,int a27,int a28,uint64_t a29,uint64_t a30,__int16 a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *p_shared_owners;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  size_t v78;
  unsigned int v79;
  const void *v80;
  uint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  unint64_t v110;
  char *v111;
  int v112;
  size_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  std::__shared_weak_count *v122;
  uint64_t v123;
  unsigned int v124;
  uint64_t v125;
  char *v126;
  __int16 v127;
  unint64_t *v128;
  unint64_t v129;
  _QWORD v130[2];
  uint64_t v131;
  std::__shared_weak_count *v132;
  unsigned int v133;
  char v134;
  char *v135;
  uint64_t v136;
  unsigned int v137;
  __int16 v138;
  _QWORD v139[2];
  std::__shared_weak_count *v140;

  sub_2243755CC((uint64_t)v139, *(_QWORD *)v57, *(_DWORD *)(v57 + 16), *(_QWORD *)v57 + 56);
  v130[1] = &off_24EC74578;
  sub_22437589C((uint64_t)&v131, (uint64_t)v139);
  v59 = v140;
  if (!v140)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v140->__shared_owners_;
  do
    v61 = __ldaxr(p_shared_owners);
  while (__stlxr(v61 - 1, p_shared_owners));
  if (!v61)
  {
    ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
    std::__shared_weak_count::__release_weak(v59);
    v62 = *(_QWORD *)v57;
    v63 = *(_QWORD *)(*(_QWORD *)v57 + 8);
    if (!v63)
      goto LABEL_22;
  }
  else
  {
LABEL_5:
    v62 = *(_QWORD *)v57;
    v63 = *(_QWORD *)(*(_QWORD *)v57 + 8);
    if (!v63)
      goto LABEL_22;
  }
  v64 = *(std::__shared_weak_count **)(v62 + 16);
  if (v64)
  {
    v65 = (unint64_t *)&v64->__shared_owners_;
    do
      v66 = __ldxr(v65);
    while (__stxr(v66 + 1, v65));
    do
      v67 = __ldaxr(v65);
    while (__stlxr(v67 - 1, v65));
    if (!v67)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
    v63 = *(_QWORD *)(v62 + 8);
    v68 = *(std::__shared_weak_count **)(v62 + 16);
    if (v68)
    {
      v69 = (unint64_t *)&v68->__shared_owners_;
      do
        v70 = __ldxr(v69);
      while (__stxr(v70 + 1, v69));
      do
        v71 = __ldaxr(v69);
      while (__stlxr(v71 - 1, v69));
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
    }
  }
  if (!*(_BYTE *)(v62 + 73))
  {
LABEL_22:
    *(_QWORD *)(v58 - 96) = 0;
    v72 = v131;
    v73 = v132;
    if (!v132)
      goto LABEL_27;
    goto LABEL_23;
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v63 + 96))(v63, 0);
  v72 = v131;
  v73 = v132;
  if (!v132)
    goto LABEL_27;
LABEL_23:
  v74 = (unint64_t *)&v73->__shared_owners_;
  do
    v75 = __ldxr(v74);
  while (__stxr(v75 + 1, v74));
  do
    v76 = __ldaxr(v74);
  while (__stlxr(v76 - 1, v74));
  if (v76)
  {
LABEL_27:
    if (!v72)
      goto LABEL_32;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
  std::__shared_weak_count::__release_weak(v73);
  if (!v72)
  {
LABEL_32:
    v130[0] = 0;
    v77 = *(_DWORD *)(v62 + 52);
    v78 = (2 * *(_DWORD *)(v62 + 56));
    if (v77 != v137)
      goto LABEL_53;
    goto LABEL_33;
  }
LABEL_28:
  if (!HIBYTE(v138))
    goto LABEL_32;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v131 + 96))(v130, v131, 1);
  v77 = *(_DWORD *)(v62 + 52);
  v78 = (2 * *(_DWORD *)(v62 + 56));
  if (v77 != v137)
    goto LABEL_53;
LABEL_33:
  if (v77 == (_DWORD)v78)
  {
    v79 = *(_DWORD *)(v62 + 60);
    v80 = *(const void **)(v62 + 24);
    if (*(_BYTE *)(v62 + 72) && v80)
    {
      v81 = *(_QWORD *)(v62 + 8);
      v82 = *(std::__shared_weak_count **)(v62 + 16);
      if (v82)
      {
        v83 = (unint64_t *)&v82->__shared_owners_;
        do
          v84 = __ldxr(v83);
        while (__stxr(v84 + 1, v83));
        do
          v85 = __ldaxr(v83);
        while (__stlxr(v85 - 1, v83));
        if (!v85)
        {
          ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
          std::__shared_weak_count::__release_weak(v82);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v81 + 88))(v81, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v80 = *(const void **)(v62 + 24);
    }
    v86 = v79 * (unint64_t)v78;
    if (!v86
      || v80
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      v87 = v135;
      if ((_BYTE)v138 && v135)
      {
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v131 + 88))(v131, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
        v87 = v135;
      }
      if (!v86 || v87)
      {
        if (!v86)
          goto LABEL_120;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_52;
      }
      memmove(v87, v80, v79 * (unint64_t)v78);
      goto LABEL_120;
    }
LABEL_52:
    abort();
  }
LABEL_53:
  v88 = *(_QWORD *)(v62 + 8);
  if (!v88)
    goto LABEL_69;
  v89 = *(std::__shared_weak_count **)(v62 + 16);
  if (v89)
  {
    v90 = (unint64_t *)&v89->__shared_owners_;
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 1, v90));
    do
      v92 = __ldaxr(v90);
    while (__stlxr(v92 - 1, v90));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
      std::__shared_weak_count::__release_weak(v89);
    }
    v88 = *(_QWORD *)(v62 + 8);
    v93 = *(std::__shared_weak_count **)(v62 + 16);
    if (v93)
    {
      v94 = (unint64_t *)&v93->__shared_owners_;
      do
        v95 = __ldxr(v94);
      while (__stxr(v95 + 1, v94));
      do
        v96 = __ldaxr(v94);
      while (__stlxr(v96 - 1, v94));
      if (!v96)
      {
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
      }
    }
  }
  if (*(_BYTE *)(v62 + 73))
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v88 + 96))(v139, v88, 0);
    v97 = v131;
    v98 = v132;
    if (!v132)
      goto LABEL_75;
  }
  else
  {
LABEL_69:
    v139[0] = 0;
    v97 = v131;
    v98 = v132;
    if (!v132)
      goto LABEL_75;
  }
  v99 = (unint64_t *)&v98->__shared_owners_;
  do
    v100 = __ldxr(v99);
  while (__stxr(v100 + 1, v99));
  do
    v101 = __ldaxr(v99);
  while (__stlxr(v101 - 1, v99));
  if (!v101)
  {
    ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
    std::__shared_weak_count::__release_weak(v98);
  }
LABEL_75:
  if (v97 && HIBYTE(v138))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v131 + 96))(v131, 1);
  else
    *(_QWORD *)(v58 - 112) = 0;
  if (!*(_DWORD *)(v62 + 32))
    goto LABEL_116;
  if (!*(_DWORD *)(v62 + 36))
    goto LABEL_116;
  v102 = *(_DWORD *)(v62 + 40);
  if (!v102)
    goto LABEL_116;
  v103 = *(unsigned int *)(v62 + 52);
  v104 = v137;
  v105 = *(char **)(v62 + 24);
  if (*(_BYTE *)(v62 + 72) && v105)
  {
    v106 = *(_QWORD *)(v62 + 8);
    v107 = *(std::__shared_weak_count **)(v62 + 16);
    if (v107)
    {
      v108 = (unint64_t *)&v107->__shared_owners_;
      do
        v109 = __ldxr(v108);
      while (__stxr(v109 + 1, v108));
      do
        v110 = __ldaxr(v108);
      while (__stlxr(v110 - 1, v108));
      if (!v110)
      {
        ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
        std::__shared_weak_count::__release_weak(v107);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v106 + 88))(v106, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v105 = *(char **)(v62 + 24);
  }
  v111 = v135;
  if ((_BYTE)v138 && v135)
  {
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v131 + 88))(v131, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
    v111 = v135;
  }
  v112 = v102 - 1;
  if (v102 != 1)
  {
    if ((_DWORD)v78)
    {
      while ((v105
            || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))&& (v111|| !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)))
      {
        memmove(v111, v105, v78);
        v105 += v103;
        v111 += v104;
        if (!--v112)
          goto LABEL_105;
      }
LABEL_102:
      abort();
    }
    goto LABEL_116;
  }
LABEL_105:
  v113 = v78;
  if ((_DWORD)v78 && !v105)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_102;
    }
    v113 = v78;
    if (!v111)
      goto LABEL_112;
    goto LABEL_115;
  }
  if ((_DWORD)v78 && !v111)
  {
LABEL_112:
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_102;
    }
    v111 = 0;
    v113 = v78;
    goto LABEL_115;
  }
  if ((_DWORD)v78)
LABEL_115:
    memmove(v111, v105, v113);
LABEL_116:
  v114 = *(_QWORD *)(v58 - 112);
  *(_QWORD *)(v58 - 112) = 0;
  if (v114)
    (*(void (**)(uint64_t))(*(_QWORD *)v114 + 8))(v114);
  v115 = v139[0];
  v139[0] = 0;
  if (v115)
    (*(void (**)(uint64_t))(*(_QWORD *)v115 + 8))(v115);
LABEL_120:
  v116 = v130[0];
  v130[0] = 0;
  if (v116)
    (*(void (**)(uint64_t))(*(_QWORD *)v116 + 8))(v116);
  v117 = *(_QWORD *)(v58 - 96);
  *(_QWORD *)(v58 - 96) = 0;
  if (v117)
    (*(void (**)(uint64_t))(*(_QWORD *)v117 + 8))(v117);
  *(_QWORD *)v56 = &off_24EC1F958;
  v118 = v131;
  v119 = v132;
  if (v132)
  {
    v120 = (unint64_t *)&v132->__shared_owners_;
    do
      v121 = __ldxr(v120);
    while (__stxr(v121 + 1, v120));
    v122 = v132;
  }
  else
  {
    v122 = 0;
  }
  v123 = v136;
  v124 = v137;
  if (v134)
    v125 = v133 | 0x100000000;
  else
    v125 = 0;
  v126 = v135;
  v127 = v138;
  *(_QWORD *)(v56 + 8) = v118;
  *(_QWORD *)(v56 + 16) = v119;
  *(_QWORD *)(v56 + 24) = v125;
  *(_QWORD *)(v56 + 32) = v123;
  *(_DWORD *)(v56 + 40) = v124;
  *(_QWORD *)(v56 + 48) = v126;
  *(_DWORD *)(v56 + 56) = 5;
  *(_WORD *)(v56 + 60) = v127;
  if (v122)
  {
    v128 = (unint64_t *)&v122->__shared_owners_;
    do
      v129 = __ldaxr(v128);
    while (__stlxr(v129 - 1, v128));
    if (!v129)
    {
      ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
      std::__shared_weak_count::__release_weak(v122);
    }
  }
}

void sub_22437411C(uint64_t a1, uint64_t a2, uint64_t a3, std::string *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned int a28)
{
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;

  a28 = 40;
  *(_DWORD *)(v28 - 112) = 5;
  sub_2243348B0("Conversion from image of format ", (unsigned int *)(v28 - 112), (uint64_t)" to ", &a28, (uint64_t)" not supported");
  if (a13 >= 0)
    v29 = &a12;
  else
    v29 = (__int128 *)a12;
  if (a13 >= 0)
    v30 = HIBYTE(a13);
  else
    v30 = *((_QWORD *)&a12 + 1);
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v29, v30, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a12);
  abort();
}

void sub_2243752E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  if (a32)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a32 + 8))(a32);
    v34 = a11;
    if (!a11)
    {
LABEL_3:
      v35 = *(_QWORD *)(v32 - 96);
      *(_QWORD *)(v32 - 96) = 0;
      if (!v35)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v34 = a11;
    if (!a11)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  v35 = *(_QWORD *)(v32 - 96);
  *(_QWORD *)(v32 - 96) = 0;
  if (!v35)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_224375564(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2243755CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(5);
  v34 = &off_24EC74578;
  sub_22437589C((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = v41;
  if (v38)
    v27 = v37 | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 5;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_224375844(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224375860(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224375874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_224375888@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

void sub_22437589C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  __int16 v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  unint64_t *v22;
  unint64_t v23;
  std::logic_error *exception;
  std::string::size_type v25;
  std::__shared_weak_count *v26;
  std::string v27;

  if (*(_DWORD *)(a2 + 56) != 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224375CE4((uint64_t)&v27, a2);
    std::logic_error::logic_error(exception, &v27);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v27.__r_.__value_.__r.__words[0] = v4;
  v27.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v25 = v4;
    v26 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v25 = 0;
  v26 = 0;
  if (!v27.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v27.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v25;
    v11 = v26;
    if (v25)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v27.__r_.__value_.__l.__size_ + 16))(v27.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v27.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v27);
  v10 = v27.__r_.__value_.__r.__words[0];
  if (v27.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v27.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  if ((*(_QWORD *)(a2 + 24) & 0xFF00000000) != 0)
    v15 = *(_QWORD *)(a2 + 24) | 0x100000000;
  else
    v15 = 0;
  v16 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v17 = (unint64_t *)&v11->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  *(_QWORD *)(a1 + 16) = v15;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v27, v10, 5);
  v20 = *(_OWORD *)(v27.__r_.__value_.__r.__words[0] + 16);
  v19 = *(_OWORD *)(v27.__r_.__value_.__r.__words[0] + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v27.__r_.__value_.__l.__data_;
  *(_OWORD *)(a1 + 40) = v20;
  *(_OWORD *)(a1 + 56) = v19;
  v27.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v21 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v21;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  *(_WORD *)(a1 + 120) = v16;
  if (v11)
  {
    v22 = (unint64_t *)&v11->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_224375B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224375BCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224375BF0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224375C58()
{
  return 5;
}

uint64_t sub_224375C60(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224375C68(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_224375CE4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB70);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB70))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231E0B40();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFB90, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFB90, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB70);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFB90, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_224375F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB70);
  _Unwind_Resume(a1);
}

void sub_224376048(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t *v23;
  unint64_t v24;
  std::logic_error *exception;
  std::string::size_type v26;
  std::__shared_weak_count *v27;
  std::string v28;

  if (*(_DWORD *)(a2 + 56) != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22437639C((uint64_t)&v28, a2);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v28.__r_.__value_.__r.__words[0] = v4;
  v28.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v26 = v4;
    v27 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v26 = 0;
  v27 = 0;
  if (!v28.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v26;
    v11 = v27;
    if (v26)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v28.__r_.__value_.__l.__size_ + 16))(v28.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v28.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v28);
  v10 = v28.__r_.__value_.__r.__words[0];
  if (v28.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v28.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  v15 = *(_QWORD *)(a2 + 24);
  if ((v15 & 0xFF00000000) != 0)
    v16 = (v15 >> 1) | 0x100000000;
  else
    v16 = 0;
  v17 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v18 = (unint64_t *)&v11->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  *(_QWORD *)(a1 + 16) = v16;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v28, v10, 6);
  v21 = *(_OWORD *)(v28.__r_.__value_.__r.__words[0] + 16);
  v20 = *(_OWORD *)(v28.__r_.__value_.__r.__words[0] + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v28.__r_.__value_.__l.__data_;
  *(_OWORD *)(a1 + 40) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  v28.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  *(_WORD *)(a1 + 120) = v17;
  if (v11)
  {
    v23 = (unint64_t *)&v11->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_224376318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224376378(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_22437639C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB78);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB78))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231E1404();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFBA8, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFBA8, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB78);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFBA8, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_22437662C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB78);
  _Unwind_Resume(a1);
}

uint64_t sub_224376700(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  int v17;
  double v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t result;
  double v22;
  double v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  _WORD *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  double v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  double ****v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  _OWORD v82[2];

  v9 = *a1;
  v10 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a2 + 16))
  {
    v11 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    v12 = 255.0;
    if (*(double *)(a2 + 8) <= 255.0)
      v12 = *(double *)(a2 + 8);
    v13 = (int)v12;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v16 = *(double *)(a2 + 24);
      if (v16 < 0.0)
        v16 = 0.0;
      v17 = (int)v16;
      v18 = 65535.0;
      if (*(double *)(a2 + 32) <= 65535.0)
        v18 = *(double *)(a2 + 32);
      v19 = v17 | ((int)v18 << 16);
      v20 = HIWORD(v19);
      if (v10 != (unsigned __int16)v19)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  LOWORD(v19) = 0;
  v20 = 0xFFFF;
  if (v10)
    goto LABEL_17;
LABEL_15:
  if (v20 == v13)
    return sub_2243771D8(v15, v14);
LABEL_17:
  v70 = (double)v10;
  v22 = 1.0 / ((double)v13 - (double)v10);
  v68 = (double)(unsigned __int16)v19;
  v69 = v22;
  v23 = (double)v20;
  a3.n128_f64[0] = (double)v20 - v68;
  v67 = a3.n128_f64[0];
  v66[0] = &v70;
  v66[1] = &v69;
  v65[0] = &v68;
  v65[1] = &v67;
  v64[0] = v66;
  v64[1] = v65;
  v24 = *(_QWORD *)(v15 + 8);
  if (!v24)
    goto LABEL_33;
  v25 = *(std::__shared_weak_count **)(v15 + 16);
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    v24 = *(_QWORD *)(v15 + 8);
    v29 = *(std::__shared_weak_count **)(v15 + 16);
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      do
        v32 = __ldaxr(v30);
      while (__stlxr(v32 - 1, v30));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  if (*(_BYTE *)(v15 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v24 + 96))(&v72, v24, 0);
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v72 = 0;
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_49;
  }
  v34 = *(std::__shared_weak_count **)(v14 + 16);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    do
      v37 = __ldaxr(v35);
    while (__stlxr(v37 - 1, v35));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
    v33 = *(_QWORD *)(v14 + 8);
    v38 = *(std::__shared_weak_count **)(v14 + 16);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v41 = __ldaxr(v39);
      while (__stlxr(v41 - 1, v39));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  if (!*(_BYTE *)(v14 + 73))
  {
LABEL_49:
    v71 = 0;
    v73 = v64;
    v42 = *(_DWORD *)(v15 + 32);
    if (v42)
      goto LABEL_50;
    goto LABEL_74;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v33 + 96))(&v71, v33, 1);
  v73 = v64;
  v42 = *(_DWORD *)(v15 + 32);
  if (v42)
  {
LABEL_50:
    v43 = *(_DWORD *)(v15 + 36);
    if (v43)
    {
      v44 = *(_DWORD *)(v15 + 40);
      if (v44)
      {
        v74 = (double ****)&v73;
        v75 = 0;
        v76 = v42 - 1;
        v45 = *(unsigned int *)(v15 + 48);
        v46 = *(unsigned int *)(v14 + 48);
        v77 = *(unsigned int *)(v15 + 44) | ((unint64_t)*(unsigned int *)(v14 + 44) << 32);
        v78 = v43 - 1;
        v79 = v45 | (v46 << 32);
        v80 = v44 - 1;
        v81 = *(unsigned int *)(v15 + 52) | ((unint64_t)*(unsigned int *)(v14 + 52) << 32);
        v47 = *(_BYTE **)(v15 + 24);
        if (*(_BYTE *)(v15 + 72) && v47)
        {
          v48 = *(_QWORD *)(v15 + 8);
          v49 = *(std::__shared_weak_count **)(v15 + 16);
          if (v49)
          {
            v50 = (unint64_t *)&v49->__shared_owners_;
            do
              v51 = __ldxr(v50);
            while (__stxr(v51 + 1, v50));
            do
              v52 = __ldaxr(v50);
            while (__stlxr(v52 - 1, v50));
            if (!v52)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v49);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v48 + 88))(v48, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v47 = *(_BYTE **)(v15 + 24);
        }
        v53 = *(_WORD **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v53)
        {
          v54 = *(_QWORD *)(v14 + 8);
          v55 = *(std::__shared_weak_count **)(v14 + 16);
          if (v55)
          {
            v56 = (unint64_t *)&v55->__shared_owners_;
            do
              v57 = __ldxr(v56);
            while (__stxr(v57 + 1, v56));
            do
              v58 = __ldaxr(v56);
            while (__stlxr(v58 - 1, v56));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
              std::__shared_weak_count::__release_weak(v55);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v54 + 88))(v54, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v53 = *(_WORD **)(v14 + 24);
        }
        v59 = 0.0;
        memset(v82, 0, sizeof(v82));
        v60 = v80;
        if (v80)
        {
          v61 = v81;
          v62 = 2 * HIDWORD(v81);
          do
          {
            v59 = sub_224377640(&v75, v82, &v74, v47, v53, v59, v23, v22, a6, a7, a8, a9);
            v47 += v61;
            v53 = (_WORD *)((char *)v53 + v62);
            --v60;
          }
          while (v60);
        }
        a3.n128_f64[0] = sub_224377640(&v75, v82, &v74, v47, v53, v59, v23, v22, a6, a7, a8, a9);
      }
    }
  }
LABEL_74:
  v63 = v71;
  v71 = 0;
  if (v63)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v63 + 8))(v63, a3);
  result = v72;
  v72 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224376BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_224376C2C(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  int v6;
  double v7;
  int v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int8 *result;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  _WORD *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  int v49;
  unsigned __int8 *v50;
  _WORD *v51;
  _WORD *v52;
  unsigned __int8 *v53;
  int v54;
  unsigned int v55;
  __int16 v56;
  __int16 v57;
  unsigned int v58;
  __int16 v59;
  __int16 v60;
  unsigned int v61;
  __int16 v62;
  __int16 v63;
  unsigned int v64;
  __int16 v65;
  __int16 v66;
  unsigned int v67;
  __int16 v68;
  __int16 v69;
  unsigned int v70;
  __int16 v71;
  __int16 v72;
  unsigned int v73;
  __int16 v74;
  __int16 v75;
  unsigned int v76;
  __int16 v77;
  __int16 v78;
  unsigned int v79;
  __int16 v80;
  __int16 v81;
  unsigned int v82;
  __int16 v83;
  __int16 v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  unsigned __int8 *v88[2];
  char v89;
  uint64_t v90;

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    LOWORD(v90) = 0;
    v89 = 0;
LABEL_30:
    v88[0] = (unsigned __int8 *)&v89;
    v88[1] = (unsigned __int8 *)&v90;
    return (unsigned __int8 *)sub_224377760(v3, v2, v88);
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65535.0;
  if (v4 < 0.0)
    v4 = 0.0;
  v6 = (int)v4;
  if (v5 <= 65535.0)
    v7 = v5;
  else
    v7 = 65535.0;
  v8 = (int)v7;
  if ((int)v7 > 0xFF)
  {
    LOWORD(v90) = v6;
    v89 = v6;
    goto LABEL_30;
  }
  v9 = *(_QWORD *)(v3 + 8);
  if (!v9)
    goto LABEL_32;
  v10 = *(std::__shared_weak_count **)(v3 + 16);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    v9 = *(_QWORD *)(v3 + 8);
    v14 = *(std::__shared_weak_count **)(v3 + 16);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
      do
        v17 = __ldaxr(v15);
      while (__stlxr(v17 - 1, v15));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(unsigned __int8 **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v9 + 96))(v88, v9, 0);
    v18 = *(_QWORD *)(v2 + 8);
    if (!v18)
      goto LABEL_48;
  }
  else
  {
LABEL_32:
    v88[0] = 0;
    v18 = *(_QWORD *)(v2 + 8);
    if (!v18)
      goto LABEL_48;
  }
  v20 = *(std::__shared_weak_count **)(v2 + 16);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    v18 = *(_QWORD *)(v2 + 8);
    v24 = *(std::__shared_weak_count **)(v2 + 16);
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
      do
        v27 = __ldaxr(v25);
      while (__stlxr(v27 - 1, v25));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
  }
  if (!*(_BYTE *)(v2 + 73))
  {
LABEL_48:
    v90 = 0;
    if (*(_DWORD *)(v3 + 32))
      goto LABEL_49;
    goto LABEL_140;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v18 + 96))(&v90, v18, 1);
  if (*(_DWORD *)(v3 + 32))
  {
LABEL_49:
    v28 = *(_DWORD *)(v3 + 36);
    if (v28)
    {
      v29 = *(_DWORD *)(v3 + 40);
      if (v29)
      {
        v30 = *(unsigned int *)(v3 + 48);
        v31 = *(unsigned int *)(v3 + 52);
        v32 = *(unsigned int *)(v2 + 48);
        v33 = *(unsigned int *)(v2 + 52);
        v34 = *(unsigned __int8 **)(v3 + 24);
        v87 = *(_DWORD *)(v3 + 40);
        v86 = v32;
        if (*(_BYTE *)(v3 + 72) && v34)
        {
          v35 = *(_QWORD *)(v3 + 8);
          v36 = *(std::__shared_weak_count **)(v3 + 16);
          if (v36)
          {
            v37 = (unint64_t *)&v36->__shared_owners_;
            do
              v38 = __ldxr(v37);
            while (__stxr(v38 + 1, v37));
            do
              v39 = __ldaxr(v37);
            while (__stlxr(v39 - 1, v37));
            if (!v39)
            {
              ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
              std::__shared_weak_count::__release_weak(v36);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v35 + 88))(v35, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v34 = *(unsigned __int8 **)(v3 + 24);
          v29 = v87;
          v32 = v86;
        }
        v40 = *(_WORD **)(v2 + 24);
        if (*(_BYTE *)(v2 + 72) && v40)
        {
          v41 = *(_QWORD *)(v2 + 8);
          v42 = *(std::__shared_weak_count **)(v2 + 16);
          if (v42)
          {
            v43 = (unint64_t *)&v42->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v41 + 88))(v41, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v40 = *(_WORD **)(v2 + 24);
          v29 = v87;
          v32 = v86;
        }
        v46 = v28 - 1;
        v47 = 2 * v32;
        v48 = v29 - 1;
        if (v48)
        {
          if (v28 == 1)
          {
            do
            {
              v67 = *v34;
              if (v67 <= v8)
                v68 = *v34;
              else
                v68 = v8;
              if (v67 >= v6)
                v69 = v68;
              else
                v69 = v6;
              *v40 = v69;
              v70 = v34[1];
              if (v70 <= v8)
                v71 = v34[1];
              else
                v71 = v8;
              if (v70 >= v6)
                v72 = v71;
              else
                v72 = v6;
              v40[1] = v72;
              v34 += v31;
              v40 += v33;
              --v48;
            }
            while (v48);
          }
          else
          {
            v49 = 0;
            v50 = v34 + 1;
            v51 = v40 + 1;
            do
            {
              v52 = v51;
              v53 = v50;
              v54 = v28 - 1;
              do
              {
                v55 = *(v53 - 1);
                if (v55 <= v8)
                  v56 = *(v53 - 1);
                else
                  v56 = v8;
                if (v55 >= v6)
                  v57 = v56;
                else
                  v57 = v6;
                *(v52 - 1) = v57;
                v58 = *v53;
                if (v58 <= v8)
                  v59 = *v53;
                else
                  v59 = v8;
                if (v58 >= v6)
                  v60 = v59;
                else
                  v60 = v6;
                *v52 = v60;
                v53 += v30;
                v52 = (_WORD *)((char *)v52 + v47);
                --v54;
              }
              while (v54);
              v61 = *(v53 - 1);
              if (v61 <= v8)
                v62 = *(v53 - 1);
              else
                v62 = v8;
              if (v61 >= v6)
                v63 = v62;
              else
                v63 = v6;
              *(v52 - 1) = v63;
              v64 = *v53;
              if (v64 <= v8)
                v65 = v64;
              else
                v65 = v8;
              if (v64 >= v6)
                v66 = v65;
              else
                v66 = v6;
              *v52 = v66;
              v34 += v31;
              v40 += v33;
              ++v49;
              v50 += v31;
              v51 += v33;
            }
            while (v49 != v48);
          }
        }
        if (v28 != 1)
        {
          do
          {
            v73 = *v34;
            if (v73 <= v8)
              v74 = *v34;
            else
              v74 = v8;
            if (v73 >= v6)
              v75 = v74;
            else
              v75 = v6;
            *v40 = v75;
            v76 = v34[1];
            if (v76 <= v8)
              v77 = v34[1];
            else
              v77 = v8;
            if (v76 >= v6)
              v78 = v77;
            else
              v78 = v6;
            v40[1] = v78;
            v34 += v30;
            v40 = (_WORD *)((char *)v40 + v47);
            --v46;
          }
          while (v46);
        }
        v79 = *v34;
        if (v79 <= v8)
          v80 = *v34;
        else
          v80 = v8;
        if (v79 >= v6)
          v81 = v80;
        else
          v81 = v6;
        *v40 = v81;
        v82 = v34[1];
        if (v82 <= v8)
          v83 = v34[1];
        else
          v83 = v8;
        if (v82 >= v6)
          v84 = v83;
        else
          v84 = v6;
        v40[1] = v84;
      }
    }
  }
LABEL_140:
  v85 = v90;
  v90 = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
  result = v88[0];
  v88[0] = 0;
  if (result)
    return (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224377168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (!a11)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243771CC(uint64_t **a1)
{
  return sub_2243771D8(**a1, (*a1)[1]);
}

uint64_t sub_2243771D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  unsigned __int8 *v43;
  _WORD *v44;
  _WORD *v45;
  unsigned __int8 *v46;
  int v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v51 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v50, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v51, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v50 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v24 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(unsigned __int8 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(unsigned __int8 **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = *v28;
            v34[1] = v28[1];
            v28 += v25;
            v34 += v27;
            --v41;
          }
          while (v41);
LABEL_64:
          *v34 = *v28;
          v34[1] = v28[1];
          goto LABEL_65;
        }
        v42 = 0;
        v43 = v28 + 1;
        v44 = v34 + 1;
        do
        {
          v45 = v44;
          v46 = v43;
          v47 = v22 - 1;
          do
          {
            *(v45 - 1) = *(v46 - 1);
            *v45 = *v46;
            v46 += v24;
            v45 += v26;
            --v47;
          }
          while (v47);
          *(v45 - 1) = *(v46 - 1);
          *v45 = *v46;
          v28 += v25;
          v34 += v27;
          ++v42;
          v43 += v25;
          v44 += v27;
        }
        while (v42 != v41);
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = *v28;
          v34[1] = v28[1];
          v28 += v24;
          v34 += v26;
          --v40;
        }
        while (v40);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v48 = v50;
  v50 = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  result = v51;
  v51 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243775DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_224377640(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, _WORD *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 2 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *a5 = llround(v25);
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a12 = v18 + v19 * v28;
      a5[1] = llround(a12);
      a4 += v20;
      a5 = (_WORD *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v29 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  v32 = v18 + v19 * v31;
  *a5 = llround(v32);
  LOBYTE(v32) = a4[1];
  v33 = v17 * ((double)*(unint64_t *)&v32 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  result = v18 + v19 * v35;
  a5[1] = llround(result);
  return result;
}

uint64_t sub_224377760(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _WORD *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  unsigned __int8 *v43;
  uint64_t v44;
  int v45;
  unsigned __int8 *v46;
  uint64_t v47;
  int v48;
  unsigned __int8 *v49;
  _WORD *v50;
  unsigned __int8 *v51;
  _WORD *v52;
  unsigned __int8 *v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned __int8 *v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_94;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_94;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_94:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v70 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v69, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_88;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v70, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v69 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_88;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(unsigned __int8 **)(a1 + 24);
      v68 = v28;
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(unsigned __int8 **)(a1 + 24);
        v28 = v68;
      }
      v36 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(_WORD **)(a2 + 24);
        v28 = v68;
      }
      v42 = v24 - 1;
      v43 = *a3;
      v44 = 2 * v28;
      v45 = v25 - 1;
      if (v25 != 1)
      {
        v46 = a3[1];
        v47 = 2 * v29;
        if (v24 != 1)
        {
          v48 = 0;
          v49 = v30 + 1;
          v50 = v36 + 1;
          while (1)
          {
            v51 = a3[1];
            v52 = v50;
            v53 = v49;
            v54 = v24 - 1;
            do
            {
              v55 = *(v53 - 1);
              if (v55 < *v43)
              {
                *(v52 - 1) = *(_WORD *)v51;
                v56 = *v53;
                if (v56 >= *v43)
                  goto LABEL_59;
              }
              else
              {
                *(v52 - 1) = v55;
                v56 = *v53;
                if (v56 >= *v43)
                  goto LABEL_59;
              }
              LOWORD(v56) = *(_WORD *)v51;
LABEL_59:
              *v52 = v56;
              v53 += v26;
              v52 = (_WORD *)((char *)v52 + v44);
              --v54;
            }
            while (v54);
            v57 = *(v53 - 1);
            if (v57 < *v43)
              LOWORD(v57) = *(_WORD *)v46;
            *(v52 - 1) = v57;
            v58 = *v53;
            if (v58 < *v43)
              LOWORD(v58) = *(_WORD *)v46;
            *v52 = v58;
            v30 += v27;
            v36 += v29;
            ++v48;
            v49 += v27;
            v50 = (_WORD *)((char *)v50 + v47);
            if (v48 == v45)
              goto LABEL_75;
          }
        }
        do
        {
          v59 = *v30;
          if (v59 < *v43)
          {
            *v36 = *(_WORD *)v46;
            v60 = v30[1];
            if (v60 < *v43)
LABEL_74:
              LOWORD(v60) = *(_WORD *)v46;
          }
          else
          {
            *v36 = v59;
            v60 = v30[1];
            if (v60 < *v43)
              goto LABEL_74;
          }
          v36[1] = v60;
          v30 += v27;
          v36 = (_WORD *)((char *)v36 + v47);
          --v45;
        }
        while (v45);
      }
LABEL_75:
      if (v24 != 1)
      {
        v61 = a3[1];
        do
        {
          v62 = *v30;
          if (v62 < *v43)
          {
            *v36 = *(_WORD *)v61;
            v63 = v30[1];
            if (v63 < *v43)
LABEL_82:
              LOWORD(v63) = *(_WORD *)v61;
          }
          else
          {
            *v36 = v62;
            v63 = v30[1];
            if (v63 < *v43)
              goto LABEL_82;
          }
          v36[1] = v63;
          v30 += v26;
          v36 = (_WORD *)((char *)v36 + v44);
          --v42;
        }
        while (v42);
      }
      v64 = *v30;
      if (v64 < *v43)
        LOWORD(v64) = *(_WORD *)a3[1];
      *v36 = v64;
      v65 = v30[1];
      if (v65 < *v43)
        LOWORD(v65) = *(_WORD *)a3[1];
      v36[1] = v65;
    }
  }
LABEL_88:
  v66 = v69;
  v69 = 0;
  if (v66)
    (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
  result = v70;
  v70 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224377C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224377CE8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224377D50(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t *v23;
  unint64_t v24;
  std::logic_error *exception;
  std::string::size_type v26;
  std::__shared_weak_count *v27;
  std::string v28;

  if (*(_DWORD *)(a2 + 56) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243781B0((uint64_t)&v28, a2);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v28.__r_.__value_.__r.__words[0] = v4;
  v28.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v26 = v4;
    v27 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v26 = 0;
  v27 = 0;
  if (!v28.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v26;
    v11 = v27;
    if (v26)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v28.__r_.__value_.__l.__size_ + 16))(v28.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v28.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v28);
  v10 = v28.__r_.__value_.__r.__words[0];
  if (v28.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v28.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  v15 = *(_QWORD *)(a2 + 24);
  if ((v15 & 0xFF00000000) != 0)
    v16 = (v15 >> 1) | 0x100000000;
  else
    v16 = 0;
  v17 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v18 = (unint64_t *)&v11->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  *(_QWORD *)(a1 + 16) = v16;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v28, v10, 7);
  v21 = *(_OWORD *)(v28.__r_.__value_.__r.__words[0] + 16);
  v20 = *(_OWORD *)(v28.__r_.__value_.__r.__words[0] + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v28.__r_.__value_.__l.__data_;
  *(_OWORD *)(a1 + 40) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  v28.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  *(_WORD *)(a1 + 120) = v17;
  if (v11)
  {
    v23 = (unint64_t *)&v11->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_224378020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_224378080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2243780A4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22437810C()
{
  return 7;
}

uint64_t sub_224378114(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_22437811C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224378134(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_2243781B0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB80);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB80))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231A26C8();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFBC0, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFBC0, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB80);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFBC0, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_224378440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB80);
  _Unwind_Resume(a1);
}

uint64_t sub_224378514(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  unsigned int v4;
  double v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unsigned __int16 v15;
  double v16;
  unsigned int v18;
  double v24;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  _WORD *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  double v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  unint64_t v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  double ****v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  _OWORD v86[2];

  v3 = *a1;
  v4 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a2 + 16))
  {
    v5 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    v6 = 255.0;
    if (*(double *)(a2 + 8) <= 255.0)
      v6 = *(double *)(a2 + 8);
    v7 = (int)v6;
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v18 = 1006632960;
    goto LABEL_14;
  }
  v7 = 255;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v10 = *(double *)(a2 + 24);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v15 = LOWORD(_S0);
  v16 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v16 = *(double *)(a2 + 32);
  _S0 = v16;
  __asm { FCVT            H0, S0 }
  v18 = v15 | (LOWORD(_S0) << 16);
LABEL_14:
  _H0 = v18;
  _S1 = HIWORD(v18);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v7;
  if (_ZF)
    return sub_224379804(v9, v8, *(float *)&v18);
  v74 = (double)v4;
  v24 = 1.0 / ((double)v7 - (double)v4);
  __asm { FCVT            D0, H0 }
  v72 = _D0;
  v73 = v24;
  __asm { FCVT            D1, H1 }
  a3.n128_f64[0] = _D1 - _D0;
  v71 = a3.n128_u64[0];
  v70[0] = &v74;
  v70[1] = &v73;
  v69[0] = &v72;
  v69[1] = &v71;
  v68[0] = v70;
  v68[1] = v69;
  v27 = *(_QWORD *)(v9 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v28)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(p_shared_owners);
  while (__stxr(v30 + 1, p_shared_owners));
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
    std::__shared_weak_count::__release_weak(v28);
  }
  v27 = *(_QWORD *)(v9 + 8);
  v32 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v32)
    goto LABEL_82;
  v33 = (unint64_t *)&v32->__shared_owners_;
  do
    v34 = __ldxr(v33);
  while (__stxr(v34 + 1, v33));
  do
    v35 = __ldaxr(v33);
  while (__stlxr(v35 - 1, v33));
  if (v35)
  {
LABEL_82:
    if (*(_BYTE *)(v9 + 73))
      goto LABEL_31;
LABEL_35:
    v76 = 0;
    v36 = *(_QWORD *)(v8 + 8);
    if (!v36)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
  std::__shared_weak_count::__release_weak(v32);
  if (!*(_BYTE *)(v9 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v76, v27, 0);
  v36 = *(_QWORD *)(v8 + 8);
  if (!v36)
  {
LABEL_51:
    v75 = 0;
    v77 = v68;
    v46 = *(_DWORD *)(v9 + 32);
    if (v46)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v38 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v38)
    goto LABEL_47;
  v39 = (unint64_t *)&v38->__shared_owners_;
  do
    v40 = __ldxr(v39);
  while (__stxr(v40 + 1, v39));
  do
    v41 = __ldaxr(v39);
  while (__stlxr(v41 - 1, v39));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
  v36 = *(_QWORD *)(v8 + 8);
  v42 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v42)
    goto LABEL_47;
  v43 = (unint64_t *)&v42->__shared_owners_;
  do
    v44 = __ldxr(v43);
  while (__stxr(v44 + 1, v43));
  do
    v45 = __ldaxr(v43);
  while (__stlxr(v45 - 1, v43));
  if (!v45)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v75, v36, 1);
  v77 = v68;
  v46 = *(_DWORD *)(v9 + 32);
  if (v46)
  {
LABEL_52:
    v47 = *(_DWORD *)(v9 + 36);
    if (v47)
    {
      v48 = *(_DWORD *)(v9 + 40);
      if (v48)
      {
        v78 = (double ****)&v77;
        v79 = 0;
        v80 = v46 - 1;
        v49 = *(unsigned int *)(v9 + 48);
        v50 = *(unsigned int *)(v8 + 48);
        v81 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v82 = v47 - 1;
        v83 = v49 | (v50 << 32);
        v84 = v48 - 1;
        v85 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v51 = *(_BYTE **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v51)
        {
          v52 = *(_QWORD *)(v9 + 8);
          v53 = *(std::__shared_weak_count **)(v9 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(_BYTE **)(v9 + 24);
        }
        v57 = *(_WORD **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v57)
        {
          v58 = *(_QWORD *)(v8 + 8);
          v59 = *(std::__shared_weak_count **)(v8 + 16);
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldxr(v60);
            while (__stxr(v61 + 1, v60));
            do
              v62 = __ldaxr(v60);
            while (__stlxr(v62 - 1, v60));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v57 = *(_WORD **)(v8 + 24);
        }
        v63 = 0.0;
        memset(v86, 0, sizeof(v86));
        v64 = v84;
        if (v84)
        {
          v65 = v85;
          v66 = 2 * HIDWORD(v85);
          do
          {
            *(_QWORD *)&v63 = sub_224379CB8(&v79, v86, &v78, v51, v57, v63, _D1, v24);
            v51 += v65;
            v57 = (_WORD *)((char *)v57 + v66);
            --v64;
          }
          while (v64);
        }
        a3.n128_u64[0] = sub_224379CB8(&v79, v86, &v78, v51, v57, v63, _D1, v24);
      }
    }
  }
LABEL_76:
  v67 = v75;
  v75 = 0;
  if (v67)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v67 + 8))(v67, a3);
  result = v76;
  v76 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224378A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224378A6C(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t result;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  _WORD *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 *v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  _WORD *v88;
  uint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  unsigned int v94;
  int v95;
  uint64_t v96;
  int v97;
  int v98;
  unsigned __int8 *v99;
  _WORD *v100;
  _WORD *v101;
  unsigned __int8 *v102;
  int v103;
  unsigned int v104;
  unsigned int v106;
  unsigned int v108;
  unsigned int v110;
  uint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *p_shared_owners;
  unint64_t v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  unint64_t v129;
  int v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 *v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  unsigned int v147;
  int v148;
  uint64_t v149;
  int v150;
  int v151;
  unsigned __int8 *v152;
  _WORD *v153;
  _WORD *v154;
  unsigned __int8 *v155;
  int v156;
  unsigned int v157;
  unsigned int v159;
  unsigned int v161;
  unsigned int v163;
  unsigned int v165;
  unsigned int v167;
  unsigned int v169;
  unsigned int v171;
  unsigned int v173;
  unsigned int v175;
  unsigned int v176;
  unsigned int v178;
  unsigned int v180;
  unsigned int v182;
  unsigned int v184;
  unsigned int v186;
  uint64_t v187;
  _QWORD v188[4];
  char v189;
  char v190;
  __int16 v191;
  __int16 v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  unsigned __int8 ***v196;
  uint64_t v197;
  int v198;
  unint64_t v199;
  int v200;
  uint64_t v201;
  int v202;
  unint64_t v203;
  _OWORD v204[3];

  v6 = **a1;
  v5 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_224379804(**a1, v5, _Q0.n128_f32[0]);
  v7 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v7 = -65504.0;
  v8 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v8 = 65504.0;
  if (v7 < -65504.0)
    v7 = -65504.0;
  _S0 = v7;
  __asm { FCVT            H9, S0 }
  if (v8 <= 65504.0)
    _Q0.n128_f64[0] = v8;
  else
    _Q0.n128_f64[0] = 65504.0;
  _S0 = _Q0.n128_f64[0];
  __asm
  {
    FCVT            H8, S0
    FCVT            S11, H9
    FCVT            S10, H8
  }
  _Q0.n128_u32[0] = 1132396544;
  if (_NF != _VF || _S10 > 255.0)
  {
    if (_S11 < 0.0)
    {
      _Q0.n128_u32[0] = 1132396544;
      if (_S10 > 255.0)
        return sub_224379804(**a1, v5, _Q0.n128_f32[0]);
      v112 = *(_QWORD *)(v6 + 8);
      if (!v112)
        goto LABEL_164;
      v113 = *(std::__shared_weak_count **)(v6 + 16);
      if (v113)
      {
        p_shared_owners = (unint64_t *)&v113->__shared_owners_;
        do
          v115 = __ldxr(p_shared_owners);
        while (__stxr(v115 + 1, p_shared_owners));
        do
          v116 = __ldaxr(p_shared_owners);
        while (__stlxr(v116 - 1, p_shared_owners));
        if (!v116)
        {
          ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
          std::__shared_weak_count::__release_weak(v113);
        }
        v112 = *(_QWORD *)(v6 + 8);
        v117 = *(std::__shared_weak_count **)(v6 + 16);
        if (v117)
        {
          v118 = (unint64_t *)&v117->__shared_owners_;
          do
            v119 = __ldxr(v118);
          while (__stxr(v119 + 1, v118));
          do
            v120 = __ldaxr(v118);
          while (__stlxr(v120 - 1, v118));
          if (!v120)
          {
            ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
            std::__shared_weak_count::__release_weak(v117);
          }
        }
      }
      if (*(_BYTE *)(v6 + 73))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v112 + 96))(&v197, v112, 0);
      else
LABEL_164:
        v197 = 0;
      v121 = *(_QWORD *)(v5 + 8);
      if (!v121)
        goto LABEL_180;
      v122 = *(std::__shared_weak_count **)(v5 + 16);
      if (v122)
      {
        v123 = (unint64_t *)&v122->__shared_owners_;
        do
          v124 = __ldxr(v123);
        while (__stxr(v124 + 1, v123));
        do
          v125 = __ldaxr(v123);
        while (__stlxr(v125 - 1, v123));
        if (!v125)
        {
          ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
          std::__shared_weak_count::__release_weak(v122);
        }
        v121 = *(_QWORD *)(v5 + 8);
        v126 = *(std::__shared_weak_count **)(v5 + 16);
        if (v126)
        {
          v127 = (unint64_t *)&v126->__shared_owners_;
          do
            v128 = __ldxr(v127);
          while (__stxr(v128 + 1, v127));
          do
            v129 = __ldaxr(v127);
          while (__stlxr(v129 - 1, v127));
          if (!v129)
          {
            ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
            std::__shared_weak_count::__release_weak(v126);
          }
        }
      }
      if (*(_BYTE *)(v5 + 73))
        (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v121 + 96))(v204, v121, 1);
      else
LABEL_180:
        *(_QWORD *)&v204[0] = 0;
      if (*(_DWORD *)(v6 + 32))
      {
        v130 = *(_DWORD *)(v6 + 36);
        if (v130)
        {
          v131 = *(_DWORD *)(v6 + 40);
          if (v131)
          {
            v132 = *(unsigned int *)(v6 + 48);
            v133 = *(unsigned int *)(v6 + 52);
            v135 = *(unsigned int *)(v5 + 48);
            v134 = *(unsigned int *)(v5 + 52);
            v136 = *(unsigned __int8 **)(v6 + 24);
            if (*(_BYTE *)(v6 + 72) && v136)
            {
              v137 = *(_QWORD *)(v6 + 8);
              v138 = *(std::__shared_weak_count **)(v6 + 16);
              if (v138)
              {
                v139 = (unint64_t *)&v138->__shared_owners_;
                do
                  v140 = __ldxr(v139);
                while (__stxr(v140 + 1, v139));
                do
                  v141 = __ldaxr(v139);
                while (__stlxr(v141 - 1, v139));
                if (!v141)
                {
                  ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
                  std::__shared_weak_count::__release_weak(v138);
                }
              }
              (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v137 + 88))(v137, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v136 = *(unsigned __int8 **)(v6 + 24);
            }
            v88 = *(_WORD **)(v5 + 24);
            if (*(_BYTE *)(v5 + 72) && v88)
            {
              v142 = *(_QWORD *)(v5 + 8);
              v143 = *(std::__shared_weak_count **)(v5 + 16);
              if (v143)
              {
                v144 = (unint64_t *)&v143->__shared_owners_;
                do
                  v145 = __ldxr(v144);
                while (__stxr(v145 + 1, v144));
                do
                  v146 = __ldaxr(v144);
                while (__stlxr(v146 - 1, v144));
                if (!v146)
                {
                  ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
                  std::__shared_weak_count::__release_weak(v143);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v142 + 88))(v142, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v88 = *(_WORD **)(v5 + 24);
            }
            v147 = (int)_S10;
            v148 = v130 - 1;
            v149 = 2 * v135;
            v150 = v131 - 1;
            if (v131 != 1)
            {
              if (v130 == 1)
              {
                do
                {
                  v176 = *v136;
                  _S0 = (float)v176;
                  __asm { FCVT            H0, S0 }
                  if (v176 > v147)
                    _S0 = _S8;
                  *v88 = LOWORD(_S0);
                  v178 = v136[1];
                  _S0 = (float)v178;
                  __asm { FCVT            H0, S0 }
                  if (v178 > v147)
                    _S0 = _S8;
                  v88[1] = LOWORD(_S0);
                  v136 += v133;
                  v88 += v134;
                  --v150;
                }
                while (v150);
              }
              else
              {
                v151 = 0;
                v152 = v136 + 1;
                v153 = v88 + 1;
                do
                {
                  v154 = v153;
                  v155 = v152;
                  v156 = v130 - 1;
                  do
                  {
                    v157 = *(v155 - 1);
                    _S0 = (float)v157;
                    __asm { FCVT            H0, S0 }
                    if (v157 > v147)
                      _S0 = _S8;
                    *(v154 - 1) = LOWORD(_S0);
                    v159 = *v155;
                    _S0 = (float)v159;
                    __asm { FCVT            H0, S0 }
                    if (v159 > v147)
                      _S0 = _S8;
                    *v154 = LOWORD(_S0);
                    v155 += v132;
                    v154 = (_WORD *)((char *)v154 + v149);
                    --v156;
                  }
                  while (v156);
                  v161 = *(v155 - 1);
                  _S0 = (float)v161;
                  __asm { FCVT            H0, S0 }
                  if (v161 > v147)
                    _S0 = _S8;
                  *(v154 - 1) = LOWORD(_S0);
                  v163 = *v155;
                  _S0 = (float)v163;
                  __asm { FCVT            H0, S0 }
                  if (v163 > v147)
                    _S0 = _S8;
                  *v154 = LOWORD(_S0);
                  v136 += v133;
                  v88 += v134;
                  ++v151;
                  v152 += v133;
                  v153 += v134;
                }
                while (v151 != v150);
              }
            }
            if (v130 != 1)
            {
              do
              {
                v180 = *v136;
                _S0 = (float)v180;
                __asm { FCVT            H0, S0 }
                if (v180 > v147)
                  _S0 = _S8;
                *v88 = LOWORD(_S0);
                v182 = v136[1];
                _S0 = (float)v182;
                __asm { FCVT            H0, S0 }
                if (v182 > v147)
                  _S0 = _S8;
                v88[1] = LOWORD(_S0);
                v136 += v132;
                v88 = (_WORD *)((char *)v88 + v149);
                --v148;
              }
              while (v148);
            }
            v184 = *v136;
            _S0 = (float)v184;
            __asm { FCVT            H0, S0 }
            if (v184 > v147)
              _S0 = _S8;
            *v88 = LOWORD(_S0);
            v186 = v136[1];
            _Q0.n128_f32[0] = (float)v186;
            __asm { FCVT            H0, S0 }
            if (v186 > v147)
              _Q0.n128_f32[0] = _S8;
LABEL_248:
            v88[1] = _Q0.n128_u16[0];
            goto LABEL_249;
          }
        }
      }
      goto LABEL_249;
    }
    v58 = *(_QWORD *)(v6 + 8);
    if (!v58)
      goto LABEL_97;
    v59 = *(std::__shared_weak_count **)(v6 + 16);
    if (v59)
    {
      v60 = (unint64_t *)&v59->__shared_owners_;
      do
        v61 = __ldxr(v60);
      while (__stxr(v61 + 1, v60));
      do
        v62 = __ldaxr(v60);
      while (__stlxr(v62 - 1, v60));
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
      v58 = *(_QWORD *)(v6 + 8);
      v63 = *(std::__shared_weak_count **)(v6 + 16);
      if (v63)
      {
        v64 = (unint64_t *)&v63->__shared_owners_;
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
        do
          v66 = __ldaxr(v64);
        while (__stlxr(v66 - 1, v64));
        if (!v66)
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
    }
    if (*(_BYTE *)(v6 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v58 + 96))(&v197, v58, 0);
      v67 = *(_QWORD *)(v5 + 8);
      if (!v67)
        goto LABEL_112;
    }
    else
    {
LABEL_97:
      v197 = 0;
      v67 = *(_QWORD *)(v5 + 8);
      if (!v67)
        goto LABEL_112;
    }
    v68 = *(std::__shared_weak_count **)(v5 + 16);
    if (v68)
    {
      v69 = (unint64_t *)&v68->__shared_owners_;
      do
        v70 = __ldxr(v69);
      while (__stxr(v70 + 1, v69));
      do
        v71 = __ldaxr(v69);
      while (__stlxr(v71 - 1, v69));
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      v67 = *(_QWORD *)(v5 + 8);
      v72 = *(std::__shared_weak_count **)(v5 + 16);
      if (v72)
      {
        v73 = (unint64_t *)&v72->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
      }
    }
    if (*(_BYTE *)(v5 + 73))
    {
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v67 + 96))(v204, v67, 1);
LABEL_113:
      if (*(_DWORD *)(v6 + 32))
      {
        v76 = *(_DWORD *)(v6 + 36);
        if (v76)
        {
          v77 = *(_DWORD *)(v6 + 40);
          if (v77)
          {
            v78 = *(unsigned int *)(v6 + 48);
            v79 = *(unsigned int *)(v6 + 52);
            v81 = *(unsigned int *)(v5 + 48);
            v80 = *(unsigned int *)(v5 + 52);
            v82 = *(unsigned __int8 **)(v6 + 24);
            if (*(_BYTE *)(v6 + 72) && v82)
            {
              v83 = *(_QWORD *)(v6 + 8);
              v84 = *(std::__shared_weak_count **)(v6 + 16);
              if (v84)
              {
                v85 = (unint64_t *)&v84->__shared_owners_;
                do
                  v86 = __ldxr(v85);
                while (__stxr(v86 + 1, v85));
                do
                  v87 = __ldaxr(v85);
                while (__stlxr(v87 - 1, v85));
                if (!v87)
                {
                  ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
                  std::__shared_weak_count::__release_weak(v84);
                }
              }
              (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v83 + 88))(v83, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v82 = *(unsigned __int8 **)(v6 + 24);
            }
            v88 = *(_WORD **)(v5 + 24);
            if (*(_BYTE *)(v5 + 72) && v88)
            {
              v89 = *(_QWORD *)(v5 + 8);
              v90 = *(std::__shared_weak_count **)(v5 + 16);
              if (v90)
              {
                v91 = (unint64_t *)&v90->__shared_owners_;
                do
                  v92 = __ldxr(v91);
                while (__stxr(v92 + 1, v91));
                do
                  v93 = __ldaxr(v91);
                while (__stlxr(v93 - 1, v91));
                if (!v93)
                {
                  ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
                  std::__shared_weak_count::__release_weak(v90);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v89 + 88))(v89, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v88 = *(_WORD **)(v5 + 24);
            }
            v94 = (int)_S11;
            v95 = v76 - 1;
            v96 = 2 * v81;
            v97 = v77 - 1;
            if (v77 != 1)
            {
              if (v76 == 1)
              {
                do
                {
                  v165 = *v82;
                  _S0 = (float)v165;
                  __asm { FCVT            H0, S0 }
                  if (v165 < v94)
                    _S0 = _S9;
                  *v88 = LOWORD(_S0);
                  v167 = v82[1];
                  _S0 = (float)v167;
                  __asm { FCVT            H0, S0 }
                  if (v167 < v94)
                    _S0 = _S9;
                  v88[1] = LOWORD(_S0);
                  v82 += v79;
                  v88 += v80;
                  --v97;
                }
                while (v97);
              }
              else
              {
                v98 = 0;
                v99 = v82 + 1;
                v100 = v88 + 1;
                do
                {
                  v101 = v100;
                  v102 = v99;
                  v103 = v76 - 1;
                  do
                  {
                    v104 = *(v102 - 1);
                    _S0 = (float)v104;
                    __asm { FCVT            H0, S0 }
                    if (v104 < v94)
                      _S0 = _S9;
                    *(v101 - 1) = LOWORD(_S0);
                    v106 = *v102;
                    _S0 = (float)v106;
                    __asm { FCVT            H0, S0 }
                    if (v106 < v94)
                      _S0 = _S9;
                    *v101 = LOWORD(_S0);
                    v102 += v78;
                    v101 = (_WORD *)((char *)v101 + v96);
                    --v103;
                  }
                  while (v103);
                  v108 = *(v102 - 1);
                  _S0 = (float)v108;
                  __asm { FCVT            H0, S0 }
                  if (v108 < v94)
                    _S0 = _S9;
                  *(v101 - 1) = LOWORD(_S0);
                  v110 = *v102;
                  _S0 = (float)v110;
                  __asm { FCVT            H0, S0 }
                  if (v110 < v94)
                    _S0 = _S9;
                  *v101 = LOWORD(_S0);
                  v82 += v79;
                  v88 += v80;
                  ++v98;
                  v99 += v79;
                  v100 += v80;
                }
                while (v98 != v97);
              }
            }
            if (v76 != 1)
            {
              do
              {
                v169 = *v82;
                _S0 = (float)v169;
                __asm { FCVT            H0, S0 }
                if (v169 < v94)
                  _S0 = _S9;
                *v88 = LOWORD(_S0);
                v171 = v82[1];
                _S0 = (float)v171;
                __asm { FCVT            H0, S0 }
                if (v171 < v94)
                  _S0 = _S9;
                v88[1] = LOWORD(_S0);
                v82 += v78;
                v88 = (_WORD *)((char *)v88 + v96);
                --v95;
              }
              while (v95);
            }
            v173 = *v82;
            _S0 = (float)v173;
            __asm { FCVT            H0, S0 }
            if (v173 < v94)
              _S0 = _S9;
            *v88 = LOWORD(_S0);
            v175 = v82[1];
            _Q0.n128_f32[0] = (float)v175;
            __asm { FCVT            H0, S0 }
            if (v175 < v94)
              _Q0.n128_f32[0] = _S9;
            goto LABEL_248;
          }
        }
      }
LABEL_249:
      v187 = *(_QWORD *)&v204[0];
      *(_QWORD *)&v204[0] = 0;
      if (v187)
        (*(void (**)(uint64_t))(*(_QWORD *)v187 + 8))(v187);
      result = v197;
      v197 = 0;
      if (result)
        return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
      return result;
    }
LABEL_112:
    *(_QWORD *)&v204[0] = 0;
    goto LABEL_113;
  }
  v192 = LOWORD(_S9);
  v191 = LOWORD(_S8);
  v190 = (int)_S11;
  v189 = (int)_S10;
  v188[0] = &v190;
  v188[1] = &v192;
  v188[2] = &v189;
  v188[3] = &v191;
  v19 = *(_QWORD *)(v6 + 8);
  if (!v19)
    goto LABEL_35;
  v20 = *(std::__shared_weak_count **)(v6 + 16);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    v19 = *(_QWORD *)(v6 + 8);
    v24 = *(std::__shared_weak_count **)(v6 + 16);
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
      do
        v27 = __ldaxr(v25);
      while (__stlxr(v27 - 1, v25));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
  }
  if (*(_BYTE *)(v6 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v19 + 96))(&v194, v19, 0);
    v28 = *(_QWORD *)(v5 + 8);
    if (!v28)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v194 = 0;
    v28 = *(_QWORD *)(v5 + 8);
    if (!v28)
      goto LABEL_51;
  }
  v29 = *(std::__shared_weak_count **)(v5 + 16);
  if (v29)
  {
    v30 = (unint64_t *)&v29->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
    do
      v32 = __ldaxr(v30);
    while (__stlxr(v32 - 1, v30));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
    v28 = *(_QWORD *)(v5 + 8);
    v33 = *(std::__shared_weak_count **)(v5 + 16);
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
      do
        v36 = __ldaxr(v34);
      while (__stlxr(v36 - 1, v34));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
  }
  if (*(_BYTE *)(v5 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v28 + 96))(&v193, v28, 1);
    v195 = v188;
    v37 = *(_DWORD *)(v6 + 32);
    if (!v37)
      goto LABEL_76;
    goto LABEL_52;
  }
LABEL_51:
  v193 = 0;
  v195 = v188;
  v37 = *(_DWORD *)(v6 + 32);
  if (!v37)
    goto LABEL_76;
LABEL_52:
  v38 = *(_DWORD *)(v6 + 36);
  if (v38)
  {
    v39 = *(_DWORD *)(v6 + 40);
    if (v39)
    {
      v196 = (unsigned __int8 ***)&v195;
      v197 = 0;
      v198 = v37 - 1;
      v40 = *(unsigned int *)(v6 + 48);
      v41 = *(unsigned int *)(v5 + 48);
      v199 = *(unsigned int *)(v6 + 44) | ((unint64_t)*(unsigned int *)(v5 + 44) << 32);
      v200 = v38 - 1;
      v201 = v40 | (v41 << 32);
      v202 = v39 - 1;
      v203 = *(unsigned int *)(v6 + 52) | ((unint64_t)*(unsigned int *)(v5 + 52) << 32);
      v42 = *(unsigned __int8 **)(v6 + 24);
      if (*(_BYTE *)(v6 + 72) && v42)
      {
        v43 = *(_QWORD *)(v6 + 8);
        v44 = *(std::__shared_weak_count **)(v6 + 16);
        if (v44)
        {
          v45 = (unint64_t *)&v44->__shared_owners_;
          do
            v46 = __ldxr(v45);
          while (__stxr(v46 + 1, v45));
          do
            v47 = __ldaxr(v45);
          while (__stlxr(v47 - 1, v45));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v43 + 88))(v43, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v42 = *(unsigned __int8 **)(v6 + 24);
      }
      v48 = *(_WORD **)(v5 + 24);
      if (*(_BYTE *)(v5 + 72) && v48)
      {
        v49 = *(_QWORD *)(v5 + 8);
        v50 = *(std::__shared_weak_count **)(v5 + 16);
        if (v50)
        {
          v51 = (unint64_t *)&v50->__shared_owners_;
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v49 + 88))(v49, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v48 = *(_WORD **)(v5 + 24);
      }
      memset(v204, 0, 32);
      v54 = v202;
      if (v202)
      {
        v55 = v203;
        v56 = 2 * HIDWORD(v203);
        do
        {
          sub_224379E6C(&v197, v204, &v196, v42, v48);
          v42 += v55;
          v48 = (_WORD *)((char *)v48 + v56);
          --v54;
        }
        while (v54);
      }
      _Q0.n128_u64[0] = sub_224379E6C(&v197, v204, &v196, v42, v48);
    }
  }
LABEL_76:
  v57 = v193;
  v193 = 0;
  if (v57)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v57 + 8))(v57, _Q0);
  result = v194;
  v194 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
  return result;
}

void sub_224379774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243797F8(uint64_t **a1, float a2)
{
  return sub_224379804(**a1, (*a1)[1], a2);
}

uint64_t sub_224379804(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  _BYTE *v45;
  _WORD *v46;
  _WORD *v47;
  _BYTE *v48;
  int v49;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v63 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v62, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v63, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v62 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_BYTE **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v28;
      v43 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOBYTE(_S0) = *v29;
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v35 = _S0;
            LOBYTE(_S0) = v29[1];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[1] = LOWORD(_S0);
            v29 += v26;
            v35 += v27;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v29 + 1;
          v46 = v35 + 1;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v23 - 1;
            do
            {
              LOBYTE(_S0) = *(v48 - 1);
              *(float *)&_S0 = (float)LODWORD(_S0);
              __asm { FCVT            H0, S0 }
              *(v47 - 1) = _S0;
              LOBYTE(_S0) = *v48;
              _S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *v47 = LOWORD(_S0);
              v48 += v25;
              v47 = (_WORD *)((char *)v47 + v42);
              --v49;
            }
            while (v49);
            LOBYTE(_S0) = *(v48 - 1);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v47 - 1) = _S0;
            LOBYTE(_S0) = *v48;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v47 = LOWORD(_S0);
            v29 += v26;
            v35 += v27;
            ++v44;
            v45 += v26;
            v46 += v27;
          }
          while (v44 != v43);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOBYTE(_S0) = *v29;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = _S0;
          LOBYTE(_S0) = v29[1];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[1] = LOWORD(_S0);
          v29 += v25;
          v35 = (_WORD *)((char *)v35 + v42);
          --v41;
        }
        while (v41);
      }
      LOBYTE(_S0) = *v29;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v35 = _S0;
      LOBYTE(_S0) = v29[1];
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[1] = LOWORD(_S0);
    }
  }
LABEL_65:
  v60 = v62;
  v62 = 0;
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  result = v63;
  v63 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224379C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_224379CB8@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _BYTE *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOBYTE(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOBYTE(_D2) = *(_BYTE *)(*a2 + 1);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  LOBYTE(a6) = *a4;
  v28 = *v26;
  v27 = v26[1];
  v29 = ((double)*(unint64_t *)&a6 - **v28) * *v28[1];
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  _D0 = **v27 + v31 * *v27[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v33 = **a3;
  LOBYTE(_D0) = *(_BYTE *)(*a2 + 1);
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&_D0 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _S0 = **v34 + v38 * *v34[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = result;
  return result;
}

__int16 sub_224379E6C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int i;
  unsigned __int8 *v6;
  unsigned __int8 **v8;
  unsigned int v9;
  unsigned __int8 **v16;
  unsigned int v17;
  unsigned __int8 **v19;
  unsigned int v20;
  uint64_t v23;
  unsigned __int8 **v24;
  unsigned int v25;
  unsigned __int8 *v26;
  __int16 result;
  unsigned __int8 *v28;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *(_WORD *)v8[3];
        }
      }
      else
      {
        _H0 = *(_WORD *)v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int8 *)(*a2 + 1);
      if (v17 < **v16)
      {
        v6 = v16[1];
      }
      else
      {
        if (v17 <= *v16[2])
        {
          _S0 = (float)v17;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v16[3];
      }
      _H0 = *(_WORD *)v6;
LABEL_5:
      *(_WORD *)(a2[2] + 2) = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v19 = **a3;
  v20 = *a4;
  if (v20 >= **v19)
  {
    if (v20 <= *v19[2])
    {
      _S0 = (float)v20;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)v19[3];
    }
  }
  else
  {
    _H0 = *(_WORD *)v19[1];
  }
  *a5 = _H0;
  v23 = a2[2];
  v24 = **a3;
  v25 = *(unsigned __int8 *)(*a2 + 1);
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v23 + 2) = result;
    }
    else
    {
      v28 = v24[3];
      result = *(_WORD *)v28;
      *(_WORD *)(v23 + 2) = *(_WORD *)v28;
    }
  }
  else
  {
    v26 = v24[1];
    result = *(_WORD *)v26;
    *(_WORD *)(v23 + 2) = *(_WORD *)v26;
  }
  return result;
}

void sub_22437A008(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v14 = a2;
  v15 = a3;
  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    v12 = a2;
    v13 = a3;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  else
  {
    v12 = a2;
    v13 = 0;
  }
  sub_2231E1E4C(a1, &v12);
  v6 = v13;
  if (v13)
  {
    v7 = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = v15;
  if (v15)
  {
    v10 = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_22437A0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_22437A104(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22437A16C(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::string::size_type v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::string::size_type v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t *v23;
  unint64_t v24;
  std::logic_error *exception;
  std::string::size_type v26;
  std::__shared_weak_count *v27;
  std::string v28;

  if (*(_DWORD *)(a2 + 56) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_22437A5CC((uint64_t)&v28, a2);
    std::logic_error::logic_error(exception, &v28);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v28.__r_.__value_.__r.__words[0] = v4;
  v28.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  if (v4)
  {
    v26 = v4;
    v27 = (std::__shared_weak_count *)v5;
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = 0uLL;
    goto LABEL_11;
  }
  v26 = 0;
  v27 = 0;
  if (!v28.__r_.__value_.__l.__size_)
    goto LABEL_11;
  v8 = (unint64_t *)(v28.__r_.__value_.__l.__size_ + 8);
  do
    v9 = __ldaxr(v8);
  while (__stlxr(v9 - 1, v8));
  if (v9)
  {
LABEL_11:
    v10 = v26;
    v11 = v27;
    if (v26)
      goto LABEL_21;
    goto LABEL_12;
  }
  (*(void (**)(std::string::size_type))(*(_QWORD *)v28.__r_.__value_.__l.__size_ + 16))(v28.__r_.__value_.__l.__size_);
  std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v28.__r_.__value_.__l.__size_);
  v11 = 0;
LABEL_12:
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a2 + 8) + 32))(&v28);
  v10 = v28.__r_.__value_.__r.__words[0];
  if (v28.__r_.__value_.__r.__words[0])
  {
    v11 = (std::__shared_weak_count *)operator new();
    v14 = v28.__r_.__value_.__r.__words[0];
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
    v11->__shared_owners_ = 0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = (std::__shared_weak_count_vtbl *)v14;
  }
  else
  {
    v11 = 0;
  }
LABEL_21:
  v15 = *(_QWORD *)(a2 + 24);
  if ((v15 & 0xFF00000000) != 0)
    v16 = (v15 >> 2) | 0x100000000;
  else
    v16 = 0;
  v17 = *(_WORD *)(a2 + 60);
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  if (v11)
  {
    v18 = (unint64_t *)&v11->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  *(_QWORD *)(a1 + 16) = v16;
  (*(void (**)(std::string *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v10 + 64))(&v28, v10, 8);
  v21 = *(_OWORD *)(v28.__r_.__value_.__r.__words[0] + 16);
  v20 = *(_OWORD *)(v28.__r_.__value_.__r.__words[0] + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v28.__r_.__value_.__l.__data_;
  *(_OWORD *)(a1 + 40) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  v28.__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  *(_WORD *)(a1 + 120) = v17;
  if (v11)
  {
    v23 = (unint64_t *)&v11->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_22437A43C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_22437A49C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22437A4C0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22437A528()
{
  return 8;
}

uint64_t sub_22437A530(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_22437A538@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_22437A550(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t sub_22437A5CC(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  std::string *v4;
  std::string *v6;
  __int128 v7;
  __int128 *v8;
  __int128 v9;
  int64x2_t v10;
  int8x16_t v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  void **v16;
  void *v17[2];
  char v18;
  std::string __p;
  void *v20[2];
  char v21;
  void *v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = atomic_load((unsigned __int8 *)&qword_2540CFB88);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CFB88))
  {
    v18 = 5;
    strcpy((char *)v17, "Image");
    v6 = sub_2231E279C();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&__p, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v8 = sub_2231A27C0();
    if (*((char *)v8 + 23) < 0)
    {
      sub_223197FA4(&__p, *(void **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v9;
    }
    sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, (uint64_t)&v22);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    sub_22319BD1C(&v15, (uint64_t)v20, 2uLL);
    sub_2245730F4((char *)v17, (uint64_t *)&v15, &stru_2540CFBD8, v10, v11);
    v12 = (void **)v15;
    if (v15)
    {
      v13 = v16;
      v14 = v15;
      if (v16 != v15)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v15;
      }
      v16 = v12;
      operator delete(v14);
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_24:
        if ((v18 & 0x80000000) == 0)
        {
LABEL_25:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2540CFBD8, &dword_22314D000);
          __cxa_guard_release(&qword_2540CFB88);
          goto LABEL_2;
        }
LABEL_28:
        operator delete(v17[0]);
        goto LABEL_25;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_24;
    }
    operator delete(v20[0]);
    if ((v18 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_28;
  }
LABEL_2:
  v4 = sub_2231DE81C();
  LODWORD(v20[0]) = *(_DWORD *)(a2 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)&stru_2540CFBD8, (uint64_t)" from an ", (uint64_t)v4, (uint64_t)" but the image is of incompatible format ", (unsigned int *)v20);
}

void sub_22437A85C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  void **v36;
  void **v37;

  if (__p)
  {
    v36 = a10;
    v37 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v36 - 1) < 0)
          operator delete(*(v36 - 3));
        v36 -= 3;
      }
      while (v36 != __p);
      v37 = __p;
    }
    operator delete(v37);
  }
  if (a35 < 0)
    operator delete(a30);
  if (a29 < 0)
    operator delete(a24);
  if (a17 < 0)
    operator delete(a12);
  __cxa_guard_abort(&qword_2540CFB88);
  _Unwind_Resume(a1);
}

uint64_t sub_22437A930(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  float v17;
  double v18;
  float v19;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  float *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  double v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  unint64_t v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  double ****v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  _OWORD v84[2];

  v9 = *a1;
  v10 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 16))
  {
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    if ((float)v10 != 0.0 || 1.0 != (float)v13)
      goto LABEL_15;
    return sub_22437BBC0(v15, v14, v17);
  }
  v11 = *(double *)a2;
  if (*(double *)a2 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a2 + 8) <= 255.0)
    v12 = *(double *)(a2 + 8);
  v13 = (int)v12;
  v15 = *v9;
  v14 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  if (v17 == (float)v10 && v19 == (float)v13)
    return sub_22437BBC0(v15, v14, v17);
LABEL_15:
  v72 = (double)v10;
  v21 = 1.0;
  v22 = 1.0 / ((double)v13 - (double)v10);
  v70 = v17;
  v71 = v22;
  v23 = v19;
  a3.n128_f64[0] = v23 - v17;
  v69 = a3.n128_u64[0];
  v68[0] = &v72;
  v68[1] = &v71;
  v67[0] = &v70;
  v67[1] = &v69;
  v66[0] = v68;
  v66[1] = v67;
  v24 = *(_QWORD *)(v15 + 8);
  if (!v24)
    goto LABEL_38;
  v25 = *(std::__shared_weak_count **)(v15 + 16);
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    v24 = *(_QWORD *)(v15 + 8);
    v29 = *(std::__shared_weak_count **)(v15 + 16);
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      do
        v32 = __ldaxr(v30);
      while (__stlxr(v32 - 1, v30));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  if (*(_BYTE *)(v15 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v24 + 96))(&v74, v24, 0);
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v74 = 0;
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_54;
  }
  v36 = *(std::__shared_weak_count **)(v14 + 16);
  if (v36)
  {
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
    v33 = *(_QWORD *)(v14 + 8);
    v40 = *(std::__shared_weak_count **)(v14 + 16);
    if (v40)
    {
      v41 = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
      do
        v43 = __ldaxr(v41);
      while (__stlxr(v43 - 1, v41));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  if (!*(_BYTE *)(v14 + 73))
  {
LABEL_54:
    v73 = 0;
    v75 = v66;
    v44 = *(_DWORD *)(v15 + 32);
    if (v44)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v33 + 96))(&v73, v33, 1);
  v75 = v66;
  v44 = *(_DWORD *)(v15 + 32);
  if (v44)
  {
LABEL_55:
    v45 = *(_DWORD *)(v15 + 36);
    if (v45)
    {
      v46 = *(_DWORD *)(v15 + 40);
      if (v46)
      {
        v76 = (double ****)&v75;
        v77 = 0;
        v78 = v44 - 1;
        v47 = *(unsigned int *)(v15 + 48);
        v48 = *(unsigned int *)(v14 + 48);
        v79 = *(unsigned int *)(v15 + 44) | ((unint64_t)*(unsigned int *)(v14 + 44) << 32);
        v80 = v45 - 1;
        v81 = v47 | (v48 << 32);
        v82 = v46 - 1;
        v83 = *(unsigned int *)(v15 + 52) | ((unint64_t)*(unsigned int *)(v14 + 52) << 32);
        v49 = *(_BYTE **)(v15 + 24);
        if (*(_BYTE *)(v15 + 72) && v49)
        {
          v50 = *(_QWORD *)(v15 + 8);
          v51 = *(std::__shared_weak_count **)(v15 + 16);
          if (v51)
          {
            v52 = (unint64_t *)&v51->__shared_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            do
              v54 = __ldaxr(v52);
            while (__stlxr(v54 - 1, v52));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v50 + 88))(v50, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v49 = *(_BYTE **)(v15 + 24);
        }
        v55 = *(float **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v55)
        {
          v56 = *(_QWORD *)(v14 + 8);
          v57 = *(std::__shared_weak_count **)(v14 + 16);
          if (v57)
          {
            v58 = (unint64_t *)&v57->__shared_owners_;
            do
              v59 = __ldxr(v58);
            while (__stxr(v59 + 1, v58));
            do
              v60 = __ldaxr(v58);
            while (__stlxr(v60 - 1, v58));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
              std::__shared_weak_count::__release_weak(v57);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v56 + 88))(v56, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v55 = *(float **)(v14 + 24);
        }
        v61 = 0.0;
        memset(v84, 0, sizeof(v84));
        v62 = v82;
        if (v82)
        {
          v63 = v83;
          v64 = 4 * HIDWORD(v83);
          do
          {
            *(float *)&v61 = sub_22437C050(&v77, v84, &v76, v49, v55, v61, v23, v22, v21, a7, a8, a9);
            v49 += v63;
            v55 = (float *)((char *)v55 + v64);
            --v62;
          }
          while (v62);
        }
        a3.n128_f32[0] = sub_22437C050(&v77, v84, &v76, v49, v55, v61, v23, v22, v21, a7, a8, a9);
      }
    }
  }
LABEL_79:
  v65 = v73;
  v73 = 0;
  if (v65)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v65 + 8))(v65, a3);
  result = v74;
  v74 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22437AE00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22437AE64(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  float v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  float *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  float *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  unsigned int v87;
  int v88;
  uint64_t v89;
  int v90;
  int v91;
  unsigned __int8 *v92;
  float *v93;
  float *v94;
  unsigned __int8 *v95;
  int v96;
  unsigned int v97;
  float v98;
  unsigned int v99;
  float v100;
  unsigned int v101;
  float v102;
  unsigned int v103;
  float v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *p_shared_owners;
  unint64_t v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned __int8 *v129;
  uint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  unsigned int v140;
  int v141;
  uint64_t v142;
  int v143;
  int v144;
  unsigned __int8 *v145;
  float *v146;
  float *v147;
  unsigned __int8 *v148;
  int v149;
  unsigned int v150;
  float v151;
  unsigned int v152;
  float v153;
  unsigned int v154;
  float v155;
  unsigned int v156;
  float v157;
  unsigned int v158;
  float v159;
  unsigned int v160;
  float v161;
  unsigned int v162;
  float v163;
  unsigned int v164;
  float v165;
  unsigned int v166;
  float v167;
  unsigned int v168;
  unsigned int v169;
  float v170;
  unsigned int v171;
  float v172;
  unsigned int v173;
  float v174;
  unsigned int v175;
  float v176;
  unsigned int v177;
  float v178;
  unsigned int v179;
  uint64_t v180;
  _QWORD v181[4];
  char v182;
  char v183;
  float v184;
  float v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  unsigned __int8 ***v189;
  uint64_t v190;
  int v191;
  unint64_t v192;
  int v193;
  uint64_t v194;
  int v195;
  unint64_t v196;
  _OWORD v197[3];

  v4 = **a1;
  v3 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 3.4028e38;
    v7 = -3.4028e38;
    a3.n128_u32[0] = 1132396544;
    if (-3.4028e38 >= 0.0 && 3.4028e38 <= 255.0)
      goto LABEL_15;
LABEL_36:
    if (v7 < 0.0)
    {
      a3.n128_u32[0] = 1132396544;
      if (v8 > 255.0)
        return sub_22437BBC0(**a1, v3, 255.0);
      v105 = *(_QWORD *)(v4 + 8);
      if (!v105)
        goto LABEL_169;
      v106 = *(std::__shared_weak_count **)(v4 + 16);
      if (v106)
      {
        p_shared_owners = (unint64_t *)&v106->__shared_owners_;
        do
          v108 = __ldxr(p_shared_owners);
        while (__stxr(v108 + 1, p_shared_owners));
        do
          v109 = __ldaxr(p_shared_owners);
        while (__stlxr(v109 - 1, p_shared_owners));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v106);
        }
        v105 = *(_QWORD *)(v4 + 8);
        v110 = *(std::__shared_weak_count **)(v4 + 16);
        if (v110)
        {
          v111 = (unint64_t *)&v110->__shared_owners_;
          do
            v112 = __ldxr(v111);
          while (__stxr(v112 + 1, v111));
          do
            v113 = __ldaxr(v111);
          while (__stlxr(v113 - 1, v111));
          if (!v113)
          {
            ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
            std::__shared_weak_count::__release_weak(v110);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v105 + 96))(&v190, v105, 0);
        v114 = *(_QWORD *)(v3 + 8);
        if (!v114)
          goto LABEL_184;
      }
      else
      {
LABEL_169:
        v190 = 0;
        v114 = *(_QWORD *)(v3 + 8);
        if (!v114)
          goto LABEL_184;
      }
      v115 = *(std::__shared_weak_count **)(v3 + 16);
      if (v115)
      {
        v116 = (unint64_t *)&v115->__shared_owners_;
        do
          v117 = __ldxr(v116);
        while (__stxr(v117 + 1, v116));
        do
          v118 = __ldaxr(v116);
        while (__stlxr(v118 - 1, v116));
        if (!v118)
        {
          ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
          std::__shared_weak_count::__release_weak(v115);
        }
        v114 = *(_QWORD *)(v3 + 8);
        v119 = *(std::__shared_weak_count **)(v3 + 16);
        if (v119)
        {
          v120 = (unint64_t *)&v119->__shared_owners_;
          do
            v121 = __ldxr(v120);
          while (__stxr(v121 + 1, v120));
          do
            v122 = __ldaxr(v120);
          while (__stlxr(v122 - 1, v120));
          if (!v122)
          {
            ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
            std::__shared_weak_count::__release_weak(v119);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v114 + 96))(v197, v114, 1);
LABEL_185:
        if (*(_DWORD *)(v4 + 32))
        {
          v123 = *(_DWORD *)(v4 + 36);
          if (v123)
          {
            v124 = *(_DWORD *)(v4 + 40);
            if (v124)
            {
              v125 = *(unsigned int *)(v4 + 48);
              v126 = *(unsigned int *)(v4 + 52);
              v128 = *(unsigned int *)(v3 + 48);
              v127 = *(unsigned int *)(v3 + 52);
              v129 = *(unsigned __int8 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v129)
              {
                v130 = *(_QWORD *)(v4 + 8);
                v131 = *(std::__shared_weak_count **)(v4 + 16);
                if (v131)
                {
                  v132 = (unint64_t *)&v131->__shared_owners_;
                  do
                    v133 = __ldxr(v132);
                  while (__stxr(v133 + 1, v132));
                  do
                    v134 = __ldaxr(v132);
                  while (__stlxr(v134 - 1, v132));
                  if (!v134)
                  {
                    ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
                    std::__shared_weak_count::__release_weak(v131);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v130 + 88))(v130, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v129 = *(unsigned __int8 **)(v4 + 24);
              }
              v81 = *(float **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v81)
              {
                v135 = *(_QWORD *)(v3 + 8);
                v136 = *(std::__shared_weak_count **)(v3 + 16);
                if (v136)
                {
                  v137 = (unint64_t *)&v136->__shared_owners_;
                  do
                    v138 = __ldxr(v137);
                  while (__stxr(v138 + 1, v137));
                  do
                    v139 = __ldaxr(v137);
                  while (__stlxr(v139 - 1, v137));
                  if (!v139)
                  {
                    ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
                    std::__shared_weak_count::__release_weak(v136);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v135 + 88))(v135, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v81 = *(float **)(v3 + 24);
              }
              v140 = (int)v8;
              v141 = v123 - 1;
              v142 = 4 * v128;
              v143 = v124 - 1;
              if (v124 != 1)
              {
                if (v123 == 1)
                {
                  do
                  {
                    v169 = *v129;
                    v170 = (float)v169;
                    if (v169 > v140)
                      v170 = v8;
                    *v81 = v170;
                    v171 = v129[1];
                    v172 = (float)v171;
                    if (v171 > v140)
                      v172 = v8;
                    v81[1] = v172;
                    v129 += v126;
                    v81 += v127;
                    --v143;
                  }
                  while (v143);
                }
                else
                {
                  v144 = 0;
                  v145 = v129 + 1;
                  v146 = v81 + 1;
                  do
                  {
                    v147 = v146;
                    v148 = v145;
                    v149 = v123 - 1;
                    do
                    {
                      v150 = *(v148 - 1);
                      v151 = (float)v150;
                      if (v150 > v140)
                        v151 = v8;
                      *(v147 - 1) = v151;
                      v152 = *v148;
                      v153 = (float)v152;
                      if (v152 > v140)
                        v153 = v8;
                      *v147 = v153;
                      v148 += v125;
                      v147 = (float *)((char *)v147 + v142);
                      --v149;
                    }
                    while (v149);
                    v154 = *(v148 - 1);
                    v155 = (float)v154;
                    if (v154 > v140)
                      v155 = v8;
                    *(v147 - 1) = v155;
                    v156 = *v148;
                    v157 = (float)v156;
                    if (v156 > v140)
                      v157 = v8;
                    *v147 = v157;
                    v129 += v126;
                    v81 += v127;
                    ++v144;
                    v145 += v126;
                    v146 += v127;
                  }
                  while (v144 != v143);
                }
              }
              if (v123 != 1)
              {
                do
                {
                  v173 = *v129;
                  v174 = (float)v173;
                  if (v173 > v140)
                    v174 = v8;
                  *v81 = v174;
                  v175 = v129[1];
                  v176 = (float)v175;
                  if (v175 > v140)
                    v176 = v8;
                  v81[1] = v176;
                  v129 += v125;
                  v81 = (float *)((char *)v81 + v142);
                  --v141;
                }
                while (v141);
              }
              v177 = *v129;
              v178 = (float)v177;
              if (v177 > v140)
                v178 = v8;
              *v81 = v178;
              v179 = v129[1];
              a3.n128_f32[0] = (float)v179;
              if (v179 > v140)
                a3.n128_f32[0] = v8;
LABEL_252:
              v81[1] = a3.n128_f32[0];
              goto LABEL_253;
            }
          }
        }
        goto LABEL_253;
      }
LABEL_184:
      *(_QWORD *)&v197[0] = 0;
      goto LABEL_185;
    }
    v51 = *(_QWORD *)(v4 + 8);
    if (!v51)
      goto LABEL_101;
    v52 = *(std::__shared_weak_count **)(v4 + 16);
    if (v52)
    {
      v53 = (unint64_t *)&v52->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
      v51 = *(_QWORD *)(v4 + 8);
      v56 = *(std::__shared_weak_count **)(v4 + 16);
      if (v56)
      {
        v57 = (unint64_t *)&v56->__shared_owners_;
        do
          v58 = __ldxr(v57);
        while (__stxr(v58 + 1, v57));
        do
          v59 = __ldaxr(v57);
        while (__stlxr(v59 - 1, v57));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v51 + 96))(&v190, v51, 0);
      v60 = *(_QWORD *)(v3 + 8);
      if (!v60)
        goto LABEL_117;
    }
    else
    {
LABEL_101:
      v190 = 0;
      v60 = *(_QWORD *)(v3 + 8);
      if (!v60)
        goto LABEL_117;
    }
    v61 = *(std::__shared_weak_count **)(v3 + 16);
    if (v61)
    {
      v62 = (unint64_t *)&v61->__shared_owners_;
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
      do
        v64 = __ldaxr(v62);
      while (__stlxr(v64 - 1, v62));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
      v60 = *(_QWORD *)(v3 + 8);
      v65 = *(std::__shared_weak_count **)(v3 + 16);
      if (v65)
      {
        v66 = (unint64_t *)&v65->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(v197, v60, 1);
      if (!*(_DWORD *)(v4 + 32))
        goto LABEL_253;
      goto LABEL_118;
    }
LABEL_117:
    *(_QWORD *)&v197[0] = 0;
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_253;
LABEL_118:
    v69 = *(_DWORD *)(v4 + 36);
    if (v69)
    {
      v70 = *(_DWORD *)(v4 + 40);
      if (v70)
      {
        v71 = *(unsigned int *)(v4 + 48);
        v72 = *(unsigned int *)(v4 + 52);
        v74 = *(unsigned int *)(v3 + 48);
        v73 = *(unsigned int *)(v3 + 52);
        v75 = *(unsigned __int8 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v75)
        {
          v76 = *(_QWORD *)(v4 + 8);
          v77 = *(std::__shared_weak_count **)(v4 + 16);
          if (v77)
          {
            v78 = (unint64_t *)&v77->__shared_owners_;
            do
              v79 = __ldxr(v78);
            while (__stxr(v79 + 1, v78));
            do
              v80 = __ldaxr(v78);
            while (__stlxr(v80 - 1, v78));
            if (!v80)
            {
              ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
              std::__shared_weak_count::__release_weak(v77);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v76 + 88))(v76, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v75 = *(unsigned __int8 **)(v4 + 24);
        }
        v81 = *(float **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v81)
        {
          v82 = *(_QWORD *)(v3 + 8);
          v83 = *(std::__shared_weak_count **)(v3 + 16);
          if (v83)
          {
            v84 = (unint64_t *)&v83->__shared_owners_;
            do
              v85 = __ldxr(v84);
            while (__stxr(v85 + 1, v84));
            do
              v86 = __ldaxr(v84);
            while (__stlxr(v86 - 1, v84));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
              std::__shared_weak_count::__release_weak(v83);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v82 + 88))(v82, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v81 = *(float **)(v3 + 24);
        }
        v87 = (int)v7;
        v88 = v69 - 1;
        v89 = 4 * v74;
        v90 = v70 - 1;
        if (v70 != 1)
        {
          if (v69 == 1)
          {
            do
            {
              v158 = *v75;
              v159 = (float)v158;
              if (v158 < v87)
                v159 = v7;
              *v81 = v159;
              v160 = v75[1];
              v161 = (float)v160;
              if (v160 < v87)
                v161 = v7;
              v81[1] = v161;
              v75 += v72;
              v81 += v73;
              --v90;
            }
            while (v90);
          }
          else
          {
            v91 = 0;
            v92 = v75 + 1;
            v93 = v81 + 1;
            do
            {
              v94 = v93;
              v95 = v92;
              v96 = v69 - 1;
              do
              {
                v97 = *(v95 - 1);
                v98 = (float)v97;
                if (v97 < v87)
                  v98 = v7;
                *(v94 - 1) = v98;
                v99 = *v95;
                v100 = (float)v99;
                if (v99 < v87)
                  v100 = v7;
                *v94 = v100;
                v95 += v71;
                v94 = (float *)((char *)v94 + v89);
                --v96;
              }
              while (v96);
              v101 = *(v95 - 1);
              v102 = (float)v101;
              if (v101 < v87)
                v102 = v7;
              *(v94 - 1) = v102;
              v103 = *v95;
              v104 = (float)v103;
              if (v103 < v87)
                v104 = v7;
              *v94 = v104;
              v75 += v72;
              v81 += v73;
              ++v91;
              v92 += v72;
              v93 += v73;
            }
            while (v91 != v90);
          }
        }
        if (v69 != 1)
        {
          do
          {
            v162 = *v75;
            v163 = (float)v162;
            if (v162 < v87)
              v163 = v7;
            *v81 = v163;
            v164 = v75[1];
            v165 = (float)v164;
            if (v164 < v87)
              v165 = v7;
            v81[1] = v165;
            v75 += v71;
            v81 = (float *)((char *)v81 + v89);
            --v88;
          }
          while (v88);
        }
        v166 = *v75;
        v167 = (float)v166;
        if (v166 < v87)
          v167 = v7;
        *v81 = v167;
        v168 = v75[1];
        a3.n128_f32[0] = (float)v168;
        if (v168 < v87)
          a3.n128_f32[0] = v7;
        goto LABEL_252;
      }
    }
LABEL_253:
    v180 = *(_QWORD *)&v197[0];
    *(_QWORD *)&v197[0] = 0;
    if (v180)
      (*(void (**)(uint64_t))(*(_QWORD *)v180 + 8))(v180);
    result = v190;
    v190 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
    return result;
  }
  v5 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v5 = -3.40282347e38;
  v6 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v6 = 3.40282347e38;
  if (v5 < -3.40282347e38)
    v5 = -3.40282347e38;
  v7 = v5;
  if (v6 <= 3.40282347e38)
    a3.n128_f64[0] = v6;
  else
    a3.n128_f64[0] = 3.40282347e38;
  v8 = a3.n128_f64[0];
  a3.n128_u32[0] = 1132396544;
  if (v7 < 0.0 || v8 > 255.0)
    goto LABEL_36;
LABEL_15:
  v184 = v8;
  v185 = v7;
  v183 = (int)v7;
  v182 = (int)v8;
  v181[0] = &v183;
  v181[1] = &v185;
  v181[2] = &v182;
  v181[3] = &v184;
  v10 = *(_QWORD *)(v4 + 8);
  if (!v10)
    goto LABEL_39;
  v11 = *(std::__shared_weak_count **)(v4 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v4 + 8);
    v15 = *(std::__shared_weak_count **)(v4 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v187, v10, 0);
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_55;
  }
  else
  {
LABEL_39:
    v187 = 0;
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_55;
  }
  v22 = *(std::__shared_weak_count **)(v3 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v19 = *(_QWORD *)(v3 + 8);
    v26 = *(std::__shared_weak_count **)(v3 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v186, v19, 1);
    v188 = v181;
    v30 = *(_DWORD *)(v4 + 32);
    if (!v30)
      goto LABEL_80;
    goto LABEL_56;
  }
LABEL_55:
  v186 = 0;
  v188 = v181;
  v30 = *(_DWORD *)(v4 + 32);
  if (!v30)
    goto LABEL_80;
LABEL_56:
  v31 = *(_DWORD *)(v4 + 36);
  if (v31)
  {
    v32 = *(_DWORD *)(v4 + 40);
    if (v32)
    {
      v189 = (unsigned __int8 ***)&v188;
      v190 = 0;
      v191 = v30 - 1;
      v33 = *(unsigned int *)(v4 + 48);
      v34 = *(unsigned int *)(v3 + 48);
      v192 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
      v193 = v31 - 1;
      v194 = v33 | (v34 << 32);
      v195 = v32 - 1;
      v196 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
      v35 = *(unsigned __int8 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v35)
      {
        v36 = *(_QWORD *)(v4 + 8);
        v37 = *(std::__shared_weak_count **)(v4 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(unsigned __int8 **)(v4 + 24);
      }
      v41 = *(float **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v41)
      {
        v42 = *(_QWORD *)(v3 + 8);
        v43 = *(std::__shared_weak_count **)(v3 + 16);
        if (v43)
        {
          v44 = (unint64_t *)&v43->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v42 + 88))(v42, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v41 = *(float **)(v3 + 24);
      }
      memset(v197, 0, 32);
      v47 = v195;
      if (v195)
      {
        v48 = v196;
        v49 = 4 * HIDWORD(v196);
        do
        {
          sub_22437C170(&v190, v197, &v189, v35, v41);
          v35 += v48;
          v41 = (float *)((char *)v41 + v49);
          --v47;
        }
        while (v47);
      }
      a3.n128_f32[0] = sub_22437C170(&v190, v197, &v189, v35, v41);
    }
  }
LABEL_80:
  v50 = v186;
  v186 = 0;
  if (v50)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v50 + 8))(v50, a3);
  result = v187;
  v187 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22437BB30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22437BBB4(uint64_t **a1, float a2)
{
  return sub_22437BBC0(**a1, (*a1)[1], a2);
}

uint64_t sub_22437BBC0(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  _BYTE *v44;
  float *v45;
  float *v46;
  _BYTE *v47;
  int v48;
  float v49;
  float v50;
  float v51;
  float v52;
  float v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v57 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v56, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v57, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v56 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v28 = *(unsigned int *)(a2 + 52);
      v29 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_BYTE **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOBYTE(a3) = *v29;
            v52 = (float)LODWORD(a3);
            *v35 = v52;
            LOBYTE(v52) = v29[1];
            a3 = (float)LODWORD(v52);
            v35[1] = a3;
            v29 += v26;
            v35 += v28;
            --v42;
          }
          while (v42);
LABEL_64:
          LOBYTE(a3) = *v29;
          v53 = (float)LODWORD(a3);
          *v35 = v53;
          LOBYTE(v53) = v29[1];
          v35[1] = (float)LODWORD(v53);
          goto LABEL_65;
        }
        v43 = 0;
        v44 = v29 + 1;
        v45 = v35 + 1;
        do
        {
          v46 = v45;
          v47 = v44;
          v48 = v23 - 1;
          do
          {
            LOBYTE(a3) = *(v47 - 1);
            v49 = (float)LODWORD(a3);
            *(v46 - 1) = v49;
            LOBYTE(v49) = *v47;
            a3 = (float)LODWORD(v49);
            *v46 = a3;
            v47 += v25;
            v46 += v27;
            --v48;
          }
          while (v48);
          LOBYTE(a3) = *(v47 - 1);
          v50 = (float)LODWORD(a3);
          *(v46 - 1) = v50;
          LOBYTE(v50) = *v47;
          a3 = (float)LODWORD(v50);
          *v46 = a3;
          v29 += v26;
          v35 += v28;
          ++v43;
          v44 += v26;
          v45 += v28;
        }
        while (v43 != v42);
      }
      if (v23 != 1)
      {
        do
        {
          LOBYTE(a3) = *v29;
          v51 = (float)LODWORD(a3);
          *v35 = v51;
          LOBYTE(v51) = v29[1];
          a3 = (float)LODWORD(v51);
          v35[1] = a3;
          v29 += v25;
          v35 += v27;
          --v41;
        }
        while (v41);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v54 = v56;
  v56 = 0;
  if (v54)
    (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
  result = v57;
  v57 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22437BFEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_22437C050(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, float *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 4 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *(float *)&v25 = v25;
      *a5 = *(float *)&v25;
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a12 = v18 + v19 * v28;
      *(float *)&a12 = a12;
      a5[1] = *(float *)&a12;
      a4 += v20;
      a5 = (float *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v29 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  v32 = v18 + v19 * v31;
  *(float *)&v32 = v32;
  *a5 = *(float *)&v32;
  LOBYTE(v32) = a4[1];
  v33 = v17 * ((double)*(unint64_t *)&v32 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  result = v18 + v19 * v35;
  a5[1] = result;
  return result;
}

float sub_22437C170(_DWORD *a1, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, float *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  float *v15;
  float result;
  float *v17;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        *a2 = a4;
        a2[2] = a5;
        v11 = *a4;
        if (v11 >= *v7)
          break;
        *a5 = *(float *)v6[1];
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_12;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        a5[1] = *(float *)v10;
        a4 += v8;
        a5 = (float *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_15;
      }
      if (v11 <= *v6[2])
      {
        *a5 = (float)v11;
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_12;
        goto LABEL_3;
      }
      *a5 = *(float *)v6[3];
      v12 = a4[1];
      if (v12 < *v7)
        goto LABEL_3;
LABEL_12:
      if (v12 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      a5[1] = (float)v12;
      a4 += v8;
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_15:
  *a2 = a4;
  a2[2] = a5;
  v13 = *a4;
  if (v13 >= *v7)
  {
    if (v13 <= *v6[2])
    {
      *a5 = (float)v13;
      v14 = a4[1];
      if (v14 >= *v7)
        goto LABEL_20;
    }
    else
    {
      *a5 = *(float *)v6[3];
      v14 = a4[1];
      if (v14 >= *v7)
        goto LABEL_20;
    }
LABEL_23:
    v17 = (float *)v6[1];
    result = *v17;
    a5[1] = *v17;
    return result;
  }
  *a5 = *(float *)v6[1];
  v14 = a4[1];
  if (v14 < *v7)
    goto LABEL_23;
LABEL_20:
  if (v14 <= *v6[2])
  {
    result = (float)v14;
    a5[1] = (float)v14;
  }
  else
  {
    v15 = (float *)v6[3];
    result = *v15;
    a5[1] = *v15;
  }
  return result;
}

void sub_22437C31C(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v14 = a2;
  v15 = a3;
  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    v12 = a2;
    v13 = a3;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  else
  {
    v12 = a2;
    v13 = 0;
  }
  sub_2231E2894(a1, &v12);
  v6 = v13;
  if (v13)
  {
    v7 = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = v15;
  if (v15)
  {
    v10 = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_22437C3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_22437C418(int a1)
{
  __asm { BR              X10 }
}

void sub_22437C45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  __int16 v31;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;

  sub_22437E548((uint64_t)&v32, *(_QWORD *)v1, *(_DWORD *)(v1 + 16), *(_QWORD *)v1 + 56);
  sub_22437589C((uint64_t)&v24, (uint64_t)&v32);
  v3 = v34;
  if (v34)
  {
    p_shared_owners = (unint64_t *)&v34->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  v7 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 8);
  v32 = &off_24EC22370;
  sub_22437F9B4(&v33, v24, v25);
  *(_QWORD *)(v2 - 112) = v7;
  *(_QWORD *)(v2 - 104) = &v32;
  v8 = *(unsigned int *)(v6 + 64);
  if ((_DWORD)v8 == -1)
    sub_22316DD70();
  *(_QWORD *)(v2 - 96) = v2 - 112;
  ((void (*)(uint64_t, uint64_t))off_24EC74490[v8])(v2 - 96, v6 + 8);
  v9 = v34;
  if (!v34)
    goto LABEL_11;
  v10 = (unint64_t *)&v34->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    *(_QWORD *)v0 = &off_24EC1F958;
    v13 = v24;
    v12 = v25;
    if (v25)
    {
LABEL_12:
      v14 = (unint64_t *)&v12->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      v16 = v25;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_11:
    *(_QWORD *)v0 = &off_24EC1F958;
    v13 = v24;
    v12 = v25;
    if (v25)
      goto LABEL_12;
  }
  v16 = 0;
LABEL_17:
  v17 = v29;
  v18 = v30;
  if (v27)
    v19 = v26 | 0x100000000;
  else
    v19 = 0;
  v20 = v28;
  v21 = v31;
  *(_QWORD *)(v0 + 8) = v13;
  *(_QWORD *)(v0 + 16) = v12;
  *(_QWORD *)(v0 + 24) = v19;
  *(_QWORD *)(v0 + 32) = v17;
  *(_DWORD *)(v0 + 40) = v18;
  *(_QWORD *)(v0 + 48) = v20;
  *(_DWORD *)(v0 + 56) = 5;
  *(_WORD *)(v0 + 60) = v21;
  if (v16)
  {
    v22 = (unint64_t *)&v16->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_22437E2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  if (a32)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a32 + 8))(a32);
    v34 = a11;
    if (!a11)
    {
LABEL_3:
      v35 = *(_QWORD *)(v32 - 96);
      *(_QWORD *)(v32 - 96) = 0;
      if (!v35)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v34 = a11;
    if (!a11)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  v35 = *(_QWORD *)(v32 - 96);
  *(_QWORD *)(v32 - 96) = 0;
  if (!v35)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_22437E548(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(6);
  v34 = &off_24EC617D0;
  sub_224376048((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 2 * v41;
  if (v38)
    v27 = (2 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 6;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22437E7C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22437E7E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22437E7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22437E80C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;
  double v16;
  double v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _WORD *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  double v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  double v61;
  double v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  double ****v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  unint64_t v75;
  _OWORD v76[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v11 = *(double *)(a2 + 24);
      if (v11 < 0.0)
        v11 = 0.0;
      v10 = (int)v11;
      v12 = 255.0;
      if (*(double *)(a2 + 32) <= 255.0)
        v12 = *(double *)(a2 + 32);
      v13 = (int)v12;
      v14 = HIWORD(v7);
      if (v10 != (unsigned __int16)v7)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = -65536;
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  v13 = 255;
  v14 = HIWORD(v7);
  if (v10 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v14 == v13)
    return sub_22437EE00(v9, v8);
LABEL_17:
  v64 = (double)(unsigned __int16)v7;
  v16 = 1.0 / ((double)v14 - v64);
  v62 = (double)v10;
  v63 = v16;
  v17 = (double)v13;
  a3.n128_f64[0] = (double)v13 - (double)v10;
  v61 = a3.n128_f64[0];
  v60[0] = &v64;
  v60[1] = &v63;
  v59[0] = &v62;
  v59[1] = &v61;
  v58[0] = v60;
  v58[1] = v59;
  v18 = *(_QWORD *)(v9 + 8);
  if (!v18)
    goto LABEL_33;
  v19 = *(std::__shared_weak_count **)(v9 + 16);
  if (v19)
  {
    p_shared_owners = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(p_shared_owners);
    while (__stxr(v21 + 1, p_shared_owners));
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(v9 + 8);
    v23 = *(std::__shared_weak_count **)(v9 + 16);
    if (v23)
    {
      v24 = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
      do
        v26 = __ldaxr(v24);
      while (__stlxr(v26 - 1, v24));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v18 + 96))(&v66, v18, 0);
    v27 = *(_QWORD *)(v8 + 8);
    if (!v27)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v66 = 0;
    v27 = *(_QWORD *)(v8 + 8);
    if (!v27)
      goto LABEL_49;
  }
  v28 = *(std::__shared_weak_count **)(v8 + 16);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
    v27 = *(_QWORD *)(v8 + 8);
    v32 = *(std::__shared_weak_count **)(v8 + 16);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_49:
    v65 = 0;
    v67 = v58;
    v36 = *(_DWORD *)(v9 + 32);
    if (v36)
      goto LABEL_50;
    goto LABEL_74;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v65, v27, 1);
  v67 = v58;
  v36 = *(_DWORD *)(v9 + 32);
  if (v36)
  {
LABEL_50:
    v37 = *(_DWORD *)(v9 + 36);
    if (v37)
    {
      v38 = *(_DWORD *)(v9 + 40);
      if (v38)
      {
        v68 = (double ****)&v67;
        v69 = 0;
        v70 = v36 - 1;
        v39 = *(unsigned int *)(v9 + 48);
        v40 = *(unsigned int *)(v8 + 48);
        v71 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v72 = v37 - 1;
        v73 = v39 | (v40 << 32);
        v74 = v38 - 1;
        v75 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v41 = *(_WORD **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v41)
        {
          v42 = *(_QWORD *)(v9 + 8);
          v43 = *(std::__shared_weak_count **)(v9 + 16);
          if (v43)
          {
            v44 = (unint64_t *)&v43->__shared_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            do
              v46 = __ldaxr(v44);
            while (__stlxr(v46 - 1, v44));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v42 + 88))(v42, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v41 = *(_WORD **)(v9 + 24);
        }
        v47 = *(_BYTE **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v47)
        {
          v48 = *(_QWORD *)(v8 + 8);
          v49 = *(std::__shared_weak_count **)(v8 + 16);
          if (v49)
          {
            v50 = (unint64_t *)&v49->__shared_owners_;
            do
              v51 = __ldxr(v50);
            while (__stxr(v51 + 1, v50));
            do
              v52 = __ldaxr(v50);
            while (__stlxr(v52 - 1, v50));
            if (!v52)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v49);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v48 + 88))(v48, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v47 = *(_BYTE **)(v8 + 24);
        }
        v53 = 0.0;
        memset(v76, 0, sizeof(v76));
        v54 = v74;
        if (v74)
        {
          v55 = HIDWORD(v75);
          v56 = 2 * v75;
          do
          {
            v53 = sub_22437F264(&v69, v76, &v68, v41, v47, v53, v17, v16);
            v47 += v55;
            v41 = (_WORD *)((char *)v41 + v56);
            --v54;
          }
          while (v54);
        }
        a3.n128_f64[0] = sub_22437F264(&v69, v76, &v68, v41, v47, v53, v17, v16);
      }
    }
  }
LABEL_74:
  v57 = v65;
  v65 = 0;
  if (v57)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v57 + 8))(v57, a3);
  result = v66;
  v66 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22437ECD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22437ED38(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  int v8;
  double v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    HIWORD(v12) = v8;
    LOWORD(v12) = (int)v9;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 255;
  }
  v11[0] = (char *)&v12 + 2;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_22437F408(v4, v5, (uint64_t)v11);
}

uint64_t sub_22437EDF4(uint64_t **a1)
{
  return sub_22437EE00(**a1, (*a1)[1]);
}

uint64_t sub_22437EE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v52 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v51, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v52, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v51 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(_BYTE **)(a1 + 24);
      }
      v34 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_BYTE **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = *v28;
            v34[1] = v28[2];
            v34 += v27;
            v28 += 2 * v24;
            --v42;
          }
          while (v42);
        }
        else
        {
          v43 = 0;
          v44 = v28 + 2;
          v45 = v34 + 1;
          do
          {
            v46 = v45;
            v47 = v44;
            v48 = v22 - 1;
            do
            {
              *(v46 - 1) = *(v47 - 2);
              *v46 = *v47;
              v47 += v41;
              v46 += v26;
              --v48;
            }
            while (v48);
            *(v46 - 1) = *(v47 - 2);
            *v46 = *v47;
            v28 += 2 * v24;
            v34 += v27;
            ++v43;
            v44 += 2 * v24;
            v45 += v27;
          }
          while (v43 != v42);
        }
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = *v28;
          v34[1] = v28[2];
          v34 += v26;
          v28 += v41;
          --v40;
        }
        while (v40);
      }
      *v34 = *v28;
      v34[1] = v28[2];
    }
  }
LABEL_65:
  v49 = v51;
  v51 = 0;
  if (v49)
    (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
  result = v52;
  v52 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22437F200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22437F264(_DWORD *a1, _QWORD *a2, double *****a3, _WORD *a4, _BYTE *a5, double a6, double a7, double a8)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double ***v16;
  double **v17;
  double **v18;
  double v19;
  double v20;
  double v21;
  double ***v22;
  double **v23;
  double **v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double ***v29;
  double **v30;
  double **v31;
  double v32;
  double v33;
  double v34;
  double result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOWORD(a8) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&a8 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      v15 = **v10 + v14 * *v10[1];
      *a5 = llround(v15);
      v16 = **a3;
      LOWORD(v15) = *(_WORD *)(*a2 + 2);
      v18 = *v16;
      v17 = v16[1];
      v19 = ((double)*(unint64_t *)&v15 - **v18) * *v18[1];
      v20 = fmax(v19, 0.0);
      if (v19 <= 1.0)
        v21 = v20;
      else
        v21 = 1.0;
      a8 = **v17 + v21 * *v17[1];
      *(_BYTE *)(a2[2] + 1) = llround(a8);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  LOWORD(a6) = *a4;
  v24 = *v22;
  v23 = v22[1];
  v25 = ((double)*(unint64_t *)&a6 - **v24) * *v24[1];
  v26 = fmax(v25, 0.0);
  if (v25 <= 1.0)
    v27 = v26;
  else
    v27 = 1.0;
  v28 = **v23 + v27 * *v23[1];
  *a5 = llround(v28);
  v29 = **a3;
  LOWORD(v28) = *(_WORD *)(*a2 + 2);
  v31 = *v29;
  v30 = v29[1];
  v32 = ((double)*(unint64_t *)&v28 - **v31) * *v31[1];
  v33 = fmax(v32, 0.0);
  if (v32 <= 1.0)
    v34 = v33;
  else
    v34 = 1.0;
  result = **v30 + v34 * *v30[1];
  *(_BYTE *)(a2[2] + 1) = llround(result);
  return result;
}

uint64_t sub_22437F408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int16 ***v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = (unsigned __int16 ***)&v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_BYTE **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = HIDWORD(v56);
        v43 = 2 * v56;
        do
        {
          sub_22437F828(&v50, v57, &v49, v29, v35);
          v35 += v42;
          v29 = (_WORD *)((char *)v29 + v43);
          --v41;
        }
        while (v41);
      }
      sub_22437F828(&v50, v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22437F7C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22437F828(_DWORD *result, _QWORD *a2, unsigned __int16 ****a3, _WORD *a4, _BYTE *a5)
{
  unsigned int i;
  unsigned __int16 *v6;
  char v7;
  unsigned __int16 **v8;
  unsigned int v9;
  char v10;
  unsigned __int16 **v11;
  unsigned int v12;
  unsigned __int16 **v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  unsigned __int16 **v17;
  unsigned int v18;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = (unsigned __int16)*a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
          v10 = *a4;
        else
          v10 = *(_BYTE *)v8[3];
      }
      else
      {
        v10 = *(_BYTE *)v8[1];
      }
      *a5 = v10;
      v11 = **a3;
      v12 = *(unsigned __int16 *)(*a2 + 2);
      if (v12 < **v11)
      {
        v6 = v11[1];
      }
      else
      {
        if (v12 <= *v11[2])
        {
          v7 = *(_WORD *)(*a2 + 2);
          goto LABEL_5;
        }
        v6 = v11[3];
      }
      v7 = *(_BYTE *)v6;
LABEL_5:
      *(_BYTE *)(a2[2] + 1) = v7;
      a4 += result[6];
      a5 += result[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v13 = **a3;
  v14 = (unsigned __int16)*a4;
  if (v14 >= **v13)
  {
    if (v14 <= *v13[2])
      v15 = *a4;
    else
      v15 = *(_BYTE *)v13[3];
  }
  else
  {
    v15 = *(_BYTE *)v13[1];
  }
  *a5 = v15;
  v16 = a2[2];
  v17 = **a3;
  v18 = *(unsigned __int16 *)(*a2 + 2);
  if (v18 >= **v17)
  {
    if (v18 <= *v17[2])
      *(_BYTE *)(v16 + 1) = v18;
    else
      *(_BYTE *)(v16 + 1) = *(_BYTE *)v17[3];
  }
  else
  {
    *(_BYTE *)(v16 + 1) = *(_BYTE *)v17[1];
  }
  return result;
}

void sub_22437F9B4(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v14 = a2;
  v15 = a3;
  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    v12 = a2;
    v13 = a3;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  else
  {
    v12 = a2;
    v13 = 0;
  }
  sub_2231E0C38(a1, &v12);
  v6 = v13;
  if (v13)
  {
    v7 = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = v15;
  if (v15)
  {
    v10 = (unint64_t *)&v15->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_22437FA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_22437FAB0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unsigned __int16 v15;
  double v16;
  unsigned int v18;
  unsigned int v19;
  unsigned int v23;
  double v26;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _WORD *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  _WORD *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  double v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  unint64_t v73;
  double v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  double ****v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  _OWORD v88[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v18 = 1006632960;
    goto LABEL_14;
  }
  v7 = -65536;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v10 = *(double *)(a2 + 24);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v15 = LOWORD(_S0);
  v16 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v16 = *(double *)(a2 + 32);
  _S0 = v16;
  __asm { FCVT            H0, S0 }
  v18 = v15 | (LOWORD(_S0) << 16);
LABEL_14:
  v19 = (unsigned __int16)v7;
  _H0 = v18;
  _S1 = HIWORD(v18);
  __asm { FCVT            S3, H0 }
  v23 = HIWORD(v7);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v23;
  if (_ZF)
    return sub_224380E10(v9, v8, *(float *)&v18);
  v76 = (double)v19;
  v26 = 1.0 / ((double)v23 - (double)v19);
  __asm { FCVT            D0, H0 }
  v74 = _D0;
  v75 = v26;
  __asm { FCVT            D1, H1 }
  a3.n128_f64[0] = _D1 - _D0;
  v73 = a3.n128_u64[0];
  v72[0] = &v76;
  v72[1] = &v75;
  v71[0] = &v74;
  v71[1] = &v73;
  v70[0] = v72;
  v70[1] = v71;
  v29 = *(_QWORD *)(v9 + 8);
  if (!v29)
    goto LABEL_35;
  v30 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v30)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(p_shared_owners);
  while (__stxr(v32 + 1, p_shared_owners));
  do
    v33 = __ldaxr(p_shared_owners);
  while (__stlxr(v33 - 1, p_shared_owners));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
  v29 = *(_QWORD *)(v9 + 8);
  v34 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v34)
    goto LABEL_82;
  v35 = (unint64_t *)&v34->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_82:
    if (*(_BYTE *)(v9 + 73))
      goto LABEL_31;
LABEL_35:
    v78 = 0;
    v38 = *(_QWORD *)(v8 + 8);
    if (!v38)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
  std::__shared_weak_count::__release_weak(v34);
  if (!*(_BYTE *)(v9 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v29 + 96))(&v78, v29, 0);
  v38 = *(_QWORD *)(v8 + 8);
  if (!v38)
  {
LABEL_51:
    v77 = 0;
    v79 = v70;
    v48 = *(_DWORD *)(v9 + 32);
    if (v48)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v40 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v40)
    goto LABEL_47;
  v41 = (unint64_t *)&v40->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  v38 = *(_QWORD *)(v8 + 8);
  v44 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v44)
    goto LABEL_47;
  v45 = (unint64_t *)&v44->__shared_owners_;
  do
    v46 = __ldxr(v45);
  while (__stxr(v46 + 1, v45));
  do
    v47 = __ldaxr(v45);
  while (__stlxr(v47 - 1, v45));
  if (!v47)
  {
    ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
    std::__shared_weak_count::__release_weak(v44);
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v77, v38, 1);
  v79 = v70;
  v48 = *(_DWORD *)(v9 + 32);
  if (v48)
  {
LABEL_52:
    v49 = *(_DWORD *)(v9 + 36);
    if (v49)
    {
      v50 = *(_DWORD *)(v9 + 40);
      if (v50)
      {
        v80 = (double ****)&v79;
        v81 = 0;
        v82 = v48 - 1;
        v51 = *(unsigned int *)(v9 + 48);
        v52 = *(unsigned int *)(v8 + 48);
        v83 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v84 = v49 - 1;
        v85 = v51 | (v52 << 32);
        v86 = v50 - 1;
        v87 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v53 = *(_WORD **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v53)
        {
          v54 = *(_QWORD *)(v9 + 8);
          v55 = *(std::__shared_weak_count **)(v9 + 16);
          if (v55)
          {
            v56 = (unint64_t *)&v55->__shared_owners_;
            do
              v57 = __ldxr(v56);
            while (__stxr(v57 + 1, v56));
            do
              v58 = __ldaxr(v56);
            while (__stlxr(v58 - 1, v56));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
              std::__shared_weak_count::__release_weak(v55);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v54 + 88))(v54, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v53 = *(_WORD **)(v9 + 24);
        }
        v59 = *(_WORD **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v59)
        {
          v60 = *(_QWORD *)(v8 + 8);
          v61 = *(std::__shared_weak_count **)(v8 + 16);
          if (v61)
          {
            v62 = (unint64_t *)&v61->__shared_owners_;
            do
              v63 = __ldxr(v62);
            while (__stxr(v63 + 1, v62));
            do
              v64 = __ldaxr(v62);
            while (__stlxr(v64 - 1, v62));
            if (!v64)
            {
              ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
              std::__shared_weak_count::__release_weak(v61);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v60 + 88))(v60, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v59 = *(_WORD **)(v8 + 24);
        }
        v65 = 0.0;
        memset(v88, 0, sizeof(v88));
        v66 = v86;
        if (v86)
        {
          v67 = 2 * v87;
          v68 = 2 * HIDWORD(v87);
          do
          {
            *(_QWORD *)&v65 = sub_2243812D0(&v81, v88, &v80, v53, v59, v65, _D1, v26);
            v53 = (_WORD *)((char *)v53 + v67);
            v59 = (_WORD *)((char *)v59 + v68);
            --v66;
          }
          while (v66);
        }
        a3.n128_u64[0] = sub_2243812D0(&v81, v88, &v80, v53, v59, v65, _D1, v26);
      }
    }
  }
LABEL_76:
  v69 = v77;
  v77 = 0;
  if (v69)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v69 + 8))(v69, a3);
  result = v78;
  v78 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22437FFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224380018(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  unsigned __int16 v12;
  unint64_t v14;
  uint64_t result;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int16 *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  _WORD *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int16 *v84;
  uint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  _WORD *v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  unsigned int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  unsigned __int16 *v102;
  _WORD *v103;
  _WORD *v104;
  unsigned __int16 *v105;
  int v106;
  unsigned int v107;
  unsigned int v109;
  unsigned int v111;
  unsigned int v113;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *p_shared_owners;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  unint64_t v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int16 *v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  std::__shared_weak_count *v146;
  unint64_t *v147;
  unint64_t v148;
  unint64_t v149;
  unsigned int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  int v155;
  unsigned __int16 *v156;
  _WORD *v157;
  _WORD *v158;
  unsigned __int16 *v159;
  int v160;
  unsigned int v161;
  unsigned int v163;
  unsigned int v165;
  unsigned int v167;
  unsigned int v169;
  unsigned int v171;
  unsigned int v173;
  unsigned int v175;
  unsigned int v177;
  unsigned int v179;
  unsigned int v180;
  unsigned int v182;
  unsigned int v184;
  unsigned int v186;
  unsigned int v188;
  unsigned int v190;
  uint64_t v191;
  _QWORD v192[4];
  __int16 v193;
  __int16 v194;
  __int16 v195;
  __int16 v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  unsigned __int16 ***v200;
  uint64_t v201;
  int v202;
  unint64_t v203;
  int v204;
  uint64_t v205;
  int v206;
  unint64_t v207;
  _OWORD v208[3];

  v4 = **a1;
  v3 = (*a1)[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v5 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v5 = -65504.0;
    v6 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v6 = 65504.0;
    if (v5 < -65504.0)
      v5 = -65504.0;
    _S0 = v5;
    __asm { FCVT            H0, S0 }
    v12 = LOWORD(_S0);
    if (v6 <= 65504.0)
      _Q0.n128_f64[0] = v6;
    else
      _Q0.n128_f64[0] = 65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v14 = v12 | ((unint64_t)LOWORD(_S0) << 16);
  }
  else
  {
    v14 = 2080373759;
  }
  _S9 = *(float *)&v14;
  __asm { FCVT            S11, H9 }
  LODWORD(_S8) = v14 >> 16;
  __asm { FCVT            S10, H8 }
  _Q0.n128_u32[0] = 1199570688;
  if (_NF != _VF || _S10 > 65535.0)
  {
    if (_S11 < 0.0)
    {
      _Q0.n128_u32[0] = 1199570688;
      if (_S10 > 65535.0)
        return sub_224380E10(**a1, v3, 65535.0);
      v115 = *(_QWORD *)(v4 + 8);
      if (!v115)
        goto LABEL_167;
      v116 = *(std::__shared_weak_count **)(v4 + 16);
      if (v116)
      {
        p_shared_owners = (unint64_t *)&v116->__shared_owners_;
        do
          v118 = __ldxr(p_shared_owners);
        while (__stxr(v118 + 1, p_shared_owners));
        do
          v119 = __ldaxr(p_shared_owners);
        while (__stlxr(v119 - 1, p_shared_owners));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = *(_QWORD *)(v4 + 8);
        v120 = *(std::__shared_weak_count **)(v4 + 16);
        if (v120)
        {
          v121 = (unint64_t *)&v120->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v115 + 96))(&v201, v115, 0);
        v124 = *(_QWORD *)(v3 + 8);
        if (!v124)
          goto LABEL_182;
      }
      else
      {
LABEL_167:
        v201 = 0;
        v124 = *(_QWORD *)(v3 + 8);
        if (!v124)
          goto LABEL_182;
      }
      v125 = *(std::__shared_weak_count **)(v3 + 16);
      if (v125)
      {
        v126 = (unint64_t *)&v125->__shared_owners_;
        do
          v127 = __ldxr(v126);
        while (__stxr(v127 + 1, v126));
        do
          v128 = __ldaxr(v126);
        while (__stlxr(v128 - 1, v126));
        if (!v128)
        {
          ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
          std::__shared_weak_count::__release_weak(v125);
        }
        v124 = *(_QWORD *)(v3 + 8);
        v129 = *(std::__shared_weak_count **)(v3 + 16);
        if (v129)
        {
          v130 = (unint64_t *)&v129->__shared_owners_;
          do
            v131 = __ldxr(v130);
          while (__stxr(v131 + 1, v130));
          do
            v132 = __ldaxr(v130);
          while (__stlxr(v132 - 1, v130));
          if (!v132)
          {
            ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
            std::__shared_weak_count::__release_weak(v129);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v124 + 96))(v208, v124, 1);
LABEL_183:
        if (*(_DWORD *)(v4 + 32))
        {
          v133 = *(_DWORD *)(v4 + 36);
          if (v133)
          {
            v134 = *(_DWORD *)(v4 + 40);
            if (v134)
            {
              v136 = *(unsigned int *)(v4 + 48);
              v135 = *(unsigned int *)(v4 + 52);
              v138 = *(unsigned int *)(v3 + 48);
              v137 = *(unsigned int *)(v3 + 52);
              v139 = *(unsigned __int16 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v139)
              {
                v140 = *(_QWORD *)(v4 + 8);
                v141 = *(std::__shared_weak_count **)(v4 + 16);
                if (v141)
                {
                  v142 = (unint64_t *)&v141->__shared_owners_;
                  do
                    v143 = __ldxr(v142);
                  while (__stxr(v143 + 1, v142));
                  do
                    v144 = __ldaxr(v142);
                  while (__stlxr(v144 - 1, v142));
                  if (!v144)
                  {
                    ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
                    std::__shared_weak_count::__release_weak(v141);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v140 + 88))(v140, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v139 = *(unsigned __int16 **)(v4 + 24);
              }
              v90 = *(_WORD **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v90)
              {
                v145 = *(_QWORD *)(v3 + 8);
                v146 = *(std::__shared_weak_count **)(v3 + 16);
                if (v146)
                {
                  v147 = (unint64_t *)&v146->__shared_owners_;
                  do
                    v148 = __ldxr(v147);
                  while (__stxr(v148 + 1, v147));
                  do
                    v149 = __ldaxr(v147);
                  while (__stlxr(v149 - 1, v147));
                  if (!v149)
                  {
                    ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
                    std::__shared_weak_count::__release_weak(v146);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v145 + 88))(v145, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v90 = *(_WORD **)(v3 + 24);
              }
              v150 = (int)_S10;
              v151 = v133 - 1;
              v152 = 2 * v136;
              v153 = 2 * v138;
              v154 = v134 - 1;
              if (v134 != 1)
              {
                if (v133 == 1)
                {
                  do
                  {
                    v180 = *v139;
                    _S0 = (float)v180;
                    __asm { FCVT            H0, S0 }
                    if (v180 > v150)
                      _S0 = _S8;
                    *v90 = LOWORD(_S0);
                    v182 = v139[1];
                    _S0 = (float)v182;
                    __asm { FCVT            H0, S0 }
                    if (v182 > v150)
                      _S0 = _S8;
                    v90[1] = LOWORD(_S0);
                    v139 += v135;
                    v90 += v137;
                    --v154;
                  }
                  while (v154);
                }
                else
                {
                  v155 = 0;
                  v156 = v139 + 1;
                  v157 = v90 + 1;
                  do
                  {
                    v158 = v157;
                    v159 = v156;
                    v160 = v133 - 1;
                    do
                    {
                      v161 = *(v159 - 1);
                      _S0 = (float)v161;
                      __asm { FCVT            H0, S0 }
                      if (v161 > v150)
                        _S0 = _S8;
                      *(v158 - 1) = LOWORD(_S0);
                      v163 = *v159;
                      _S0 = (float)v163;
                      __asm { FCVT            H0, S0 }
                      if (v163 > v150)
                        _S0 = _S8;
                      *v158 = LOWORD(_S0);
                      v159 = (unsigned __int16 *)((char *)v159 + v152);
                      v158 = (_WORD *)((char *)v158 + v153);
                      --v160;
                    }
                    while (v160);
                    v165 = *(v159 - 1);
                    _S0 = (float)v165;
                    __asm { FCVT            H0, S0 }
                    if (v165 > v150)
                      _S0 = _S8;
                    *(v158 - 1) = LOWORD(_S0);
                    v167 = *v159;
                    _S0 = (float)v167;
                    __asm { FCVT            H0, S0 }
                    if (v167 > v150)
                      _S0 = _S8;
                    *v158 = LOWORD(_S0);
                    v139 += v135;
                    v90 += v137;
                    ++v155;
                    v156 += v135;
                    v157 += v137;
                  }
                  while (v155 != v154);
                }
              }
              if (v133 != 1)
              {
                do
                {
                  v184 = *v139;
                  _S0 = (float)v184;
                  __asm { FCVT            H0, S0 }
                  if (v184 > v150)
                    _S0 = _S8;
                  *v90 = LOWORD(_S0);
                  v186 = v139[1];
                  _S0 = (float)v186;
                  __asm { FCVT            H0, S0 }
                  if (v186 > v150)
                    _S0 = _S8;
                  v90[1] = LOWORD(_S0);
                  v139 = (unsigned __int16 *)((char *)v139 + v152);
                  v90 = (_WORD *)((char *)v90 + v153);
                  --v151;
                }
                while (v151);
              }
              v188 = *v139;
              _S0 = (float)v188;
              __asm { FCVT            H0, S0 }
              if (v188 > v150)
                _S0 = _S8;
              *v90 = LOWORD(_S0);
              v190 = v139[1];
              _Q0.n128_f32[0] = (float)v190;
              __asm { FCVT            H0, S0 }
              if (v190 > v150)
                _Q0.n128_f32[0] = _S8;
LABEL_250:
              v90[1] = _Q0.n128_u16[0];
              goto LABEL_251;
            }
          }
        }
        goto LABEL_251;
      }
LABEL_182:
      *(_QWORD *)&v208[0] = 0;
      goto LABEL_183;
    }
    v60 = *(_QWORD *)(v4 + 8);
    if (!v60)
      goto LABEL_99;
    v61 = *(std::__shared_weak_count **)(v4 + 16);
    if (v61)
    {
      v62 = (unint64_t *)&v61->__shared_owners_;
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
      do
        v64 = __ldaxr(v62);
      while (__stlxr(v64 - 1, v62));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
      v60 = *(_QWORD *)(v4 + 8);
      v65 = *(std::__shared_weak_count **)(v4 + 16);
      if (v65)
      {
        v66 = (unint64_t *)&v65->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v60 + 96))(&v201, v60, 0);
      v69 = *(_QWORD *)(v3 + 8);
      if (!v69)
        goto LABEL_115;
    }
    else
    {
LABEL_99:
      v201 = 0;
      v69 = *(_QWORD *)(v3 + 8);
      if (!v69)
        goto LABEL_115;
    }
    v70 = *(std::__shared_weak_count **)(v3 + 16);
    if (v70)
    {
      v71 = (unint64_t *)&v70->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
        std::__shared_weak_count::__release_weak(v70);
      }
      v69 = *(_QWORD *)(v3 + 8);
      v74 = *(std::__shared_weak_count **)(v3 + 16);
      if (v74)
      {
        v75 = (unint64_t *)&v74->__shared_owners_;
        do
          v76 = __ldxr(v75);
        while (__stxr(v76 + 1, v75));
        do
          v77 = __ldaxr(v75);
        while (__stlxr(v77 - 1, v75));
        if (!v77)
        {
          ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
          std::__shared_weak_count::__release_weak(v74);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v69 + 96))(v208, v69, 1);
      if (!*(_DWORD *)(v4 + 32))
        goto LABEL_251;
      goto LABEL_116;
    }
LABEL_115:
    *(_QWORD *)&v208[0] = 0;
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_251;
LABEL_116:
    v78 = *(_DWORD *)(v4 + 36);
    if (v78)
    {
      v79 = *(_DWORD *)(v4 + 40);
      if (v79)
      {
        v81 = *(unsigned int *)(v4 + 48);
        v80 = *(unsigned int *)(v4 + 52);
        v83 = *(unsigned int *)(v3 + 48);
        v82 = *(unsigned int *)(v3 + 52);
        v84 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v84)
        {
          v85 = *(_QWORD *)(v4 + 8);
          v86 = *(std::__shared_weak_count **)(v4 + 16);
          if (v86)
          {
            v87 = (unint64_t *)&v86->__shared_owners_;
            do
              v88 = __ldxr(v87);
            while (__stxr(v88 + 1, v87));
            do
              v89 = __ldaxr(v87);
            while (__stlxr(v89 - 1, v87));
            if (!v89)
            {
              ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
              std::__shared_weak_count::__release_weak(v86);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v85 + 88))(v85, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v84 = *(unsigned __int16 **)(v4 + 24);
        }
        v90 = *(_WORD **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v90)
        {
          v91 = *(_QWORD *)(v3 + 8);
          v92 = *(std::__shared_weak_count **)(v3 + 16);
          if (v92)
          {
            v93 = (unint64_t *)&v92->__shared_owners_;
            do
              v94 = __ldxr(v93);
            while (__stxr(v94 + 1, v93));
            do
              v95 = __ldaxr(v93);
            while (__stlxr(v95 - 1, v93));
            if (!v95)
            {
              ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
              std::__shared_weak_count::__release_weak(v92);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v91 + 88))(v91, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v90 = *(_WORD **)(v3 + 24);
        }
        v96 = (int)_S11;
        v97 = v78 - 1;
        v98 = 2 * v81;
        v99 = 2 * v83;
        v100 = v79 - 1;
        if (v79 != 1)
        {
          if (v78 == 1)
          {
            do
            {
              v169 = *v84;
              _S0 = (float)v169;
              __asm { FCVT            H0, S0 }
              if (v169 < v96)
                _S0 = _S9;
              *v90 = LOWORD(_S0);
              v171 = v84[1];
              _S0 = (float)v171;
              __asm { FCVT            H0, S0 }
              if (v171 < v96)
                _S0 = _S9;
              v90[1] = LOWORD(_S0);
              v84 += v80;
              v90 += v82;
              --v100;
            }
            while (v100);
          }
          else
          {
            v101 = 0;
            v102 = v84 + 1;
            v103 = v90 + 1;
            do
            {
              v104 = v103;
              v105 = v102;
              v106 = v78 - 1;
              do
              {
                v107 = *(v105 - 1);
                _S0 = (float)v107;
                __asm { FCVT            H0, S0 }
                if (v107 < v96)
                  _S0 = _S9;
                *(v104 - 1) = LOWORD(_S0);
                v109 = *v105;
                _S0 = (float)v109;
                __asm { FCVT            H0, S0 }
                if (v109 < v96)
                  _S0 = _S9;
                *v104 = LOWORD(_S0);
                v105 = (unsigned __int16 *)((char *)v105 + v98);
                v104 = (_WORD *)((char *)v104 + v99);
                --v106;
              }
              while (v106);
              v111 = *(v105 - 1);
              _S0 = (float)v111;
              __asm { FCVT            H0, S0 }
              if (v111 < v96)
                _S0 = _S9;
              *(v104 - 1) = LOWORD(_S0);
              v113 = *v105;
              _S0 = (float)v113;
              __asm { FCVT            H0, S0 }
              if (v113 < v96)
                _S0 = _S9;
              *v104 = LOWORD(_S0);
              v84 += v80;
              v90 += v82;
              ++v101;
              v102 += v80;
              v103 += v82;
            }
            while (v101 != v100);
          }
        }
        if (v78 != 1)
        {
          do
          {
            v173 = *v84;
            _S0 = (float)v173;
            __asm { FCVT            H0, S0 }
            if (v173 < v96)
              _S0 = _S9;
            *v90 = LOWORD(_S0);
            v175 = v84[1];
            _S0 = (float)v175;
            __asm { FCVT            H0, S0 }
            if (v175 < v96)
              _S0 = _S9;
            v90[1] = LOWORD(_S0);
            v84 = (unsigned __int16 *)((char *)v84 + v98);
            v90 = (_WORD *)((char *)v90 + v99);
            --v97;
          }
          while (v97);
        }
        v177 = *v84;
        _S0 = (float)v177;
        __asm { FCVT            H0, S0 }
        if (v177 < v96)
          _S0 = _S9;
        *v90 = LOWORD(_S0);
        v179 = v84[1];
        _Q0.n128_f32[0] = (float)v179;
        __asm { FCVT            H0, S0 }
        if (v179 < v96)
          _Q0.n128_f32[0] = _S9;
        goto LABEL_250;
      }
    }
LABEL_251:
    v191 = *(_QWORD *)&v208[0];
    *(_QWORD *)&v208[0] = 0;
    if (v191)
      (*(void (**)(uint64_t))(*(_QWORD *)v191 + 8))(v191);
    result = v201;
    v201 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
    return result;
  }
  v195 = WORD1(v14);
  v196 = v14;
  v194 = (int)_S11;
  v193 = (int)_S10;
  v192[0] = &v194;
  v192[1] = &v196;
  v192[2] = &v193;
  v192[3] = &v195;
  v21 = *(_QWORD *)(v4 + 8);
  if (!v21)
    goto LABEL_37;
  v22 = *(std::__shared_weak_count **)(v4 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v21 = *(_QWORD *)(v4 + 8);
    v26 = *(std::__shared_weak_count **)(v4 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v21 + 96))(&v198, v21, 0);
    v30 = *(_QWORD *)(v3 + 8);
    if (!v30)
      goto LABEL_53;
  }
  else
  {
LABEL_37:
    v198 = 0;
    v30 = *(_QWORD *)(v3 + 8);
    if (!v30)
      goto LABEL_53;
  }
  v31 = *(std::__shared_weak_count **)(v3 + 16);
  if (v31)
  {
    v32 = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 1, v32));
    do
      v34 = __ldaxr(v32);
    while (__stlxr(v34 - 1, v32));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
    v30 = *(_QWORD *)(v3 + 8);
    v35 = *(std::__shared_weak_count **)(v3 + 16);
    if (v35)
    {
      v36 = (unint64_t *)&v35->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
      do
        v38 = __ldaxr(v36);
      while (__stlxr(v38 - 1, v36));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
        std::__shared_weak_count::__release_weak(v35);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v30 + 96))(&v197, v30, 1);
    v199 = v192;
    v39 = *(_DWORD *)(v4 + 32);
    if (!v39)
      goto LABEL_78;
    goto LABEL_54;
  }
LABEL_53:
  v197 = 0;
  v199 = v192;
  v39 = *(_DWORD *)(v4 + 32);
  if (!v39)
    goto LABEL_78;
LABEL_54:
  v40 = *(_DWORD *)(v4 + 36);
  if (v40)
  {
    v41 = *(_DWORD *)(v4 + 40);
    if (v41)
    {
      v200 = (unsigned __int16 ***)&v199;
      v201 = 0;
      v202 = v39 - 1;
      v42 = *(unsigned int *)(v4 + 48);
      v43 = *(unsigned int *)(v3 + 48);
      v203 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
      v204 = v40 - 1;
      v205 = v42 | (v43 << 32);
      v206 = v41 - 1;
      v207 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
      v44 = *(unsigned __int16 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v44)
      {
        v45 = *(_QWORD *)(v4 + 8);
        v46 = *(std::__shared_weak_count **)(v4 + 16);
        if (v46)
        {
          v47 = (unint64_t *)&v46->__shared_owners_;
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v44 = *(unsigned __int16 **)(v4 + 24);
      }
      v50 = *(_WORD **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v50)
      {
        v51 = *(_QWORD *)(v3 + 8);
        v52 = *(std::__shared_weak_count **)(v3 + 16);
        if (v52)
        {
          v53 = (unint64_t *)&v52->__shared_owners_;
          do
            v54 = __ldxr(v53);
          while (__stxr(v54 + 1, v53));
          do
            v55 = __ldaxr(v53);
          while (__stlxr(v55 - 1, v53));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
            std::__shared_weak_count::__release_weak(v52);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v51 + 88))(v51, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v50 = *(_WORD **)(v3 + 24);
      }
      memset(v208, 0, 32);
      v56 = v206;
      if (v206)
      {
        v57 = 2 * v207;
        v58 = 2 * HIDWORD(v207);
        do
        {
          sub_224381484(&v201, v208, &v200, v44, v50);
          v44 = (unsigned __int16 *)((char *)v44 + v57);
          v50 = (_WORD *)((char *)v50 + v58);
          --v56;
        }
        while (v56);
      }
      _Q0.n128_u64[0] = sub_224381484(&v201, v208, &v200, v44, v50);
    }
  }
LABEL_78:
  v59 = v197;
  v197 = 0;
  if (v59)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v59 + 8))(v59, _Q0);
  result = v198;
  v198 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
  return result;
}

void sub_224380D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224380E04(uint64_t **a1, float a2)
{
  return sub_224380E10(**a1, (*a1)[1], a2);
}

uint64_t sub_224380E10(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  _WORD *v46;
  _WORD *v47;
  _WORD *v48;
  _WORD *v49;
  int v50;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v64 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v63, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v64, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v63 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v26;
      v43 = 2 * v28;
      v44 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOWORD(_S0) = *v29;
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v35 = _S0;
            LOWORD(_S0) = v29[1];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[1] = LOWORD(_S0);
            v29 += v25;
            v35 += v27;
            --v44;
          }
          while (v44);
        }
        else
        {
          v45 = 0;
          v46 = v29 + 1;
          v47 = v35 + 1;
          do
          {
            v48 = v47;
            v49 = v46;
            v50 = v23 - 1;
            do
            {
              LOWORD(_S0) = *(v49 - 1);
              *(float *)&_S0 = (float)LODWORD(_S0);
              __asm { FCVT            H0, S0 }
              *(v48 - 1) = _S0;
              LOWORD(_S0) = *v49;
              _S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *v48 = LOWORD(_S0);
              v49 = (_WORD *)((char *)v49 + v42);
              v48 = (_WORD *)((char *)v48 + v43);
              --v50;
            }
            while (v50);
            LOWORD(_S0) = *(v49 - 1);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v48 - 1) = _S0;
            LOWORD(_S0) = *v49;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v48 = LOWORD(_S0);
            v29 += v25;
            v35 += v27;
            ++v45;
            v46 += v25;
            v47 += v27;
          }
          while (v45 != v44);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOWORD(_S0) = *v29;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = _S0;
          LOWORD(_S0) = v29[1];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[1] = LOWORD(_S0);
          v29 = (_WORD *)((char *)v29 + v42);
          v35 = (_WORD *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      LOWORD(_S0) = *v29;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v35 = _S0;
      LOWORD(_S0) = v29[1];
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[1] = LOWORD(_S0);
    }
  }
LABEL_65:
  v61 = v63;
  v63 = 0;
  if (v61)
    (*(void (**)(uint64_t))(*(_QWORD *)v61 + 8))(v61);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22438126C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_2243812D0@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _WORD *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v27;
  double **v28;
  double v29;
  double v30;
  double v31;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOWORD(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOWORD(_D2) = *(_WORD *)(*a2 + 2);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  LOWORD(a6) = *a4;
  v28 = *v26;
  v27 = v26[1];
  v29 = ((double)*(unint64_t *)&a6 - **v28) * *v28[1];
  v30 = fmax(v29, 0.0);
  if (v29 <= 1.0)
    v31 = v30;
  else
    v31 = 1.0;
  _D0 = **v27 + v31 * *v27[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v33 = **a3;
  LOWORD(_D0) = *(_WORD *)(*a2 + 2);
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&_D0 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _S0 = **v34 + v38 * *v34[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = result;
  return result;
}

unsigned __int16 sub_224381484@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int i;
  unsigned __int16 *v6;
  unsigned __int16 **v8;
  unsigned int v9;
  unsigned __int16 **v16;
  unsigned int v17;
  unsigned __int16 **v19;
  unsigned int v20;
  uint64_t v23;
  unsigned __int16 **v24;
  unsigned int v25;
  unsigned __int16 *v26;
  unsigned __int16 result;
  unsigned __int16 *v28;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *v8[3];
        }
      }
      else
      {
        _H0 = *v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int16 *)(*a2 + 2);
      if (v17 < **v16)
      {
        v6 = v16[1];
      }
      else
      {
        if (v17 <= *v16[2])
        {
          _S0 = (float)v17;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v16[3];
      }
      _H0 = *v6;
LABEL_5:
      *(_WORD *)(a2[2] + 2) = _H0;
      a4 += a1[6];
      a5 += a1[7];
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v19 = **a3;
  v20 = *a4;
  if (v20 >= **v19)
  {
    if (v20 <= *v19[2])
    {
      _S0 = (float)v20;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *v19[3];
    }
  }
  else
  {
    _H0 = *v19[1];
  }
  *a5 = _H0;
  v23 = a2[2];
  v24 = **a3;
  v25 = *(unsigned __int16 *)(*a2 + 2);
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v23 + 2) = result;
    }
    else
    {
      v28 = v24[3];
      result = *v28;
      *(_WORD *)(v23 + 2) = *v28;
    }
  }
  else
  {
    v26 = v24[1];
    result = *v26;
    *(_WORD *)(v23 + 2) = *v26;
  }
  return result;
}

uint64_t sub_224381620(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  float v11;
  double v12;
  float v13;
  unsigned int v14;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  float32x2_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  unint64_t v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t ****v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  _OWORD v74[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v13 = 1.0;
    v11 = 0.0;
    goto LABEL_14;
  }
  v7 = -65536;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v10 = *(double *)(a2 + 24);
  v11 = v10;
  v12 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v12 = *(double *)(a2 + 32);
  v13 = v12;
LABEL_14:
  v14 = HIWORD(v7);
  if (v11 == (float)(unsigned __int16)v7 && v13 == (float)v14)
    return sub_224382994(v9, v8, v11);
  v62 = (double)(unsigned __int16)v7;
  v60 = v11;
  v61 = 1.0 / ((double)v14 - v62);
  a3.n128_f64[0] = v13 - v11;
  v59 = a3.n128_u64[0];
  v58[0] = &v62;
  v58[1] = &v61;
  v57[0] = &v60;
  v57[1] = &v59;
  v56[0] = v58;
  v56[1] = v57;
  v16 = *(_QWORD *)(v9 + 8);
  if (!v16)
    goto LABEL_35;
  v17 = *(std::__shared_weak_count **)(v9 + 16);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(v9 + 8);
    v21 = *(std::__shared_weak_count **)(v9 + 16);
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      do
        v24 = __ldaxr(v22);
      while (__stlxr(v24 - 1, v22));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v16 + 96))(&v64, v16, 0);
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v64 = 0;
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_51;
  }
  v27 = *(std::__shared_weak_count **)(v8 + 16);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v25 = *(_QWORD *)(v8 + 8);
    v31 = *(std::__shared_weak_count **)(v8 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_51:
    v63 = 0;
    v65 = v56;
    v35 = *(_DWORD *)(v9 + 32);
    if (v35)
      goto LABEL_52;
    goto LABEL_76;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v25 + 96))(&v63, v25, 1);
  v65 = v56;
  v35 = *(_DWORD *)(v9 + 32);
  if (v35)
  {
LABEL_52:
    v36 = *(_DWORD *)(v9 + 36);
    if (v36)
    {
      v37 = *(_DWORD *)(v9 + 40);
      if (v37)
      {
        v66 = (uint64_t ****)&v65;
        v67 = 0;
        v68 = v35 - 1;
        v38 = *(unsigned int *)(v9 + 48);
        v39 = *(unsigned int *)(v8 + 48);
        v69 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v70 = v36 - 1;
        v71 = v38 | (v39 << 32);
        v72 = v37 - 1;
        v73 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v40 = *(unsigned __int16 **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v40)
        {
          v41 = *(_QWORD *)(v9 + 8);
          v42 = *(std::__shared_weak_count **)(v9 + 16);
          if (v42)
          {
            v43 = (unint64_t *)&v42->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v40 = *(unsigned __int16 **)(v9 + 24);
        }
        v46 = *(float32x2_t **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v46)
        {
          v47 = *(_QWORD *)(v8 + 8);
          v48 = *(std::__shared_weak_count **)(v8 + 16);
          if (v48)
          {
            v49 = (unint64_t *)&v48->__shared_owners_;
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
            do
              v51 = __ldaxr(v49);
            while (__stlxr(v51 - 1, v49));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v46 = *(float32x2_t **)(v8 + 24);
        }
        memset(v74, 0, sizeof(v74));
        v52 = v72;
        if (v72)
        {
          v53 = 2 * v73;
          v54 = 4 * HIDWORD(v73);
          do
          {
            sub_224382E34(&v67, v74, &v66, v40, v46);
            v40 = (unsigned __int16 *)((char *)v40 + v53);
            v46 = (float32x2_t *)((char *)v46 + v54);
            --v52;
          }
          while (v52);
        }
        a3.n128_u64[0] = (unint64_t)sub_224382E34(&v67, v74, &v66, v40, v46);
      }
    }
  }
LABEL_76:
  v55 = v63;
  v63 = 0;
  if (v55)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v55 + 8))(v55, a3);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224381AF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224381B54(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  float v6;
  double v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  float *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  unsigned __int16 *v55;
  float *v56;
  float *v57;
  unsigned __int16 *v58;
  int v59;
  unsigned int v60;
  float v61;
  unsigned int v62;
  float v63;
  unsigned int v64;
  float v65;
  unsigned int v66;
  float v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int16 *v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  unsigned int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  unsigned __int16 *v109;
  float *v110;
  float *v111;
  unsigned __int16 *v112;
  int v113;
  unsigned int v114;
  float v115;
  unsigned int v116;
  float v117;
  unsigned int v118;
  float v119;
  unsigned int v120;
  float v121;
  uint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *p_shared_owners;
  unint64_t v125;
  unint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unsigned __int16 *v146;
  uint64_t v147;
  std::__shared_weak_count *v148;
  unint64_t *v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  unsigned int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int v162;
  unsigned __int16 *v163;
  float *v164;
  float *v165;
  unsigned __int16 *v166;
  int v167;
  unsigned int v168;
  float v169;
  unsigned int v170;
  float v171;
  unsigned int v172;
  float v173;
  unsigned int v174;
  float v175;
  unsigned int v176;
  float v177;
  unsigned int v178;
  float v179;
  unsigned int v180;
  float v181;
  unsigned int v182;
  float v183;
  unsigned int v184;
  float v185;
  unsigned int v186;
  float v187;
  BOOL v188;
  unsigned int v189;
  float v190;
  unsigned int v191;
  float v192;
  unsigned int v193;
  float v194;
  unsigned int v195;
  float v196;
  unsigned int v197;
  float v198;
  unsigned int v199;
  uint64_t v200;
  unsigned int v201;
  float v202;
  unsigned int v203;
  float v204;
  unsigned int v205;
  float v206;
  unsigned int v207;
  float v208;
  unsigned int v209;
  float v210;
  unsigned int v211;
  uint64_t v212;
  uint64_t v213;

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 3.4028e38;
    v6 = -3.4028e38;
    if (-3.4028e38 >= 0.0 && 3.4028e38 <= 65535.0)
      goto LABEL_15;
LABEL_36:
    if (v6 < 0.0)
    {
      if (v8 > 65535.0)
        return sub_224382994(**a1, v2, 65535.0);
      v122 = *(_QWORD *)(v3 + 8);
      if (!v122)
        goto LABEL_183;
      v123 = *(std::__shared_weak_count **)(v3 + 16);
      if (v123)
      {
        p_shared_owners = (unint64_t *)&v123->__shared_owners_;
        do
          v125 = __ldxr(p_shared_owners);
        while (__stxr(v125 + 1, p_shared_owners));
        do
          v126 = __ldaxr(p_shared_owners);
        while (__stlxr(v126 - 1, p_shared_owners));
        if (!v126)
        {
          ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
          std::__shared_weak_count::__release_weak(v123);
        }
        v122 = *(_QWORD *)(v3 + 8);
        v127 = *(std::__shared_weak_count **)(v3 + 16);
        if (v127)
        {
          v128 = (unint64_t *)&v127->__shared_owners_;
          do
            v129 = __ldxr(v128);
          while (__stxr(v129 + 1, v128));
          do
            v130 = __ldaxr(v128);
          while (__stlxr(v130 - 1, v128));
          if (!v130)
          {
            ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
            std::__shared_weak_count::__release_weak(v127);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v122 + 96))(&v213, v122, 0);
        v131 = *(_QWORD *)(v2 + 8);
        if (!v131)
          goto LABEL_198;
      }
      else
      {
LABEL_183:
        v213 = 0;
        v131 = *(_QWORD *)(v2 + 8);
        if (!v131)
          goto LABEL_198;
      }
      v132 = *(std::__shared_weak_count **)(v2 + 16);
      if (v132)
      {
        v133 = (unint64_t *)&v132->__shared_owners_;
        do
          v134 = __ldxr(v133);
        while (__stxr(v134 + 1, v133));
        do
          v135 = __ldaxr(v133);
        while (__stlxr(v135 - 1, v133));
        if (!v135)
        {
          ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
          std::__shared_weak_count::__release_weak(v132);
        }
        v131 = *(_QWORD *)(v2 + 8);
        v136 = *(std::__shared_weak_count **)(v2 + 16);
        if (v136)
        {
          v137 = (unint64_t *)&v136->__shared_owners_;
          do
            v138 = __ldxr(v137);
          while (__stxr(v138 + 1, v137));
          do
            v139 = __ldaxr(v137);
          while (__stlxr(v139 - 1, v137));
          if (!v139)
          {
            ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
            std::__shared_weak_count::__release_weak(v136);
          }
        }
      }
      if (*(_BYTE *)(v2 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v131 + 96))(&v212, v131, 1);
        goto LABEL_199;
      }
LABEL_198:
      v212 = 0;
LABEL_199:
      if (!*(_DWORD *)(v3 + 32))
        goto LABEL_278;
      v140 = *(_DWORD *)(v3 + 36);
      if (!v140)
        goto LABEL_278;
      v141 = *(_DWORD *)(v3 + 40);
      if (!v141)
        goto LABEL_278;
      v143 = *(unsigned int *)(v3 + 48);
      v142 = *(unsigned int *)(v3 + 52);
      v145 = *(unsigned int *)(v2 + 48);
      v144 = *(unsigned int *)(v2 + 52);
      v146 = *(unsigned __int16 **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v146)
      {
        v147 = *(_QWORD *)(v3 + 8);
        v148 = *(std::__shared_weak_count **)(v3 + 16);
        if (v148)
        {
          v149 = (unint64_t *)&v148->__shared_owners_;
          do
            v150 = __ldxr(v149);
          while (__stxr(v150 + 1, v149));
          do
            v151 = __ldaxr(v149);
          while (__stlxr(v151 - 1, v149));
          if (!v151)
          {
            ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
            std::__shared_weak_count::__release_weak(v148);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v147 + 88))(v147, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v146 = *(unsigned __int16 **)(v3 + 24);
      }
      v42 = *(float **)(v2 + 24);
      if (*(_BYTE *)(v2 + 72) && v42)
      {
        v152 = *(_QWORD *)(v2 + 8);
        v153 = *(std::__shared_weak_count **)(v2 + 16);
        if (v153)
        {
          v154 = (unint64_t *)&v153->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v152 + 88))(v152, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v42 = *(float **)(v2 + 24);
      }
      v157 = (int)v8;
      v158 = v140 - 1;
      v159 = 2 * v143;
      v160 = 4 * v145;
      v161 = v141 - 1;
      if (v141 != 1)
      {
        if (v140 == 1)
        {
          do
          {
            v201 = *v146;
            v202 = (float)v201;
            if (v201 > v157)
              v202 = v8;
            *v42 = v202;
            v203 = v146[1];
            v204 = (float)v203;
            if (v203 > v157)
              v204 = v8;
            v42[1] = v204;
            v146 += v142;
            v42 += v144;
            --v161;
          }
          while (v161);
        }
        else
        {
          v162 = 0;
          v163 = v146 + 1;
          v164 = v42 + 1;
          do
          {
            v165 = v164;
            v166 = v163;
            v167 = v140 - 1;
            do
            {
              v168 = *(v166 - 1);
              v169 = (float)v168;
              if (v168 > v157)
                v169 = v8;
              *(v165 - 1) = v169;
              v170 = *v166;
              v171 = (float)v170;
              if (v170 > v157)
                v171 = v8;
              *v165 = v171;
              v166 = (unsigned __int16 *)((char *)v166 + v159);
              v165 = (float *)((char *)v165 + v160);
              --v167;
            }
            while (v167);
            v172 = *(v166 - 1);
            v173 = (float)v172;
            if (v172 > v157)
              v173 = v8;
            *(v165 - 1) = v173;
            v174 = *v166;
            v175 = (float)v174;
            if (v174 > v157)
              v175 = v8;
            *v165 = v175;
            v146 += v142;
            v42 += v144;
            ++v162;
            v163 += v142;
            v164 += v144;
          }
          while (v162 != v161);
        }
      }
      if (v140 != 1)
      {
        do
        {
          v205 = *v146;
          v206 = (float)v205;
          if (v205 > v157)
            v206 = v8;
          *v42 = v206;
          v207 = v146[1];
          v208 = (float)v207;
          if (v207 > v157)
            v208 = v8;
          v42[1] = v208;
          v146 = (unsigned __int16 *)((char *)v146 + v159);
          v42 = (float *)((char *)v42 + v160);
          --v158;
        }
        while (v158);
      }
      v209 = *v146;
      v210 = (float)v209;
      if (v209 > v157)
        v210 = v8;
      *v42 = v210;
      v211 = v146[1];
      v187 = (float)v211;
      if (v211 > v157)
        v187 = v8;
      goto LABEL_277;
    }
    v68 = *(_QWORD *)(v3 + 8);
    if (!v68)
      goto LABEL_115;
    v69 = *(std::__shared_weak_count **)(v3 + 16);
    if (v69)
    {
      v70 = (unint64_t *)&v69->__shared_owners_;
      do
        v71 = __ldxr(v70);
      while (__stxr(v71 + 1, v70));
      do
        v72 = __ldaxr(v70);
      while (__stlxr(v72 - 1, v70));
      if (!v72)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      v68 = *(_QWORD *)(v3 + 8);
      v73 = *(std::__shared_weak_count **)(v3 + 16);
      if (v73)
      {
        v74 = (unint64_t *)&v73->__shared_owners_;
        do
          v75 = __ldxr(v74);
        while (__stxr(v75 + 1, v74));
        do
          v76 = __ldaxr(v74);
        while (__stlxr(v76 - 1, v74));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v68 + 96))(&v213, v68, 0);
      v77 = *(_QWORD *)(v2 + 8);
      if (!v77)
        goto LABEL_131;
    }
    else
    {
LABEL_115:
      v213 = 0;
      v77 = *(_QWORD *)(v2 + 8);
      if (!v77)
        goto LABEL_131;
    }
    v78 = *(std::__shared_weak_count **)(v2 + 16);
    if (v78)
    {
      v79 = (unint64_t *)&v78->__shared_owners_;
      do
        v80 = __ldxr(v79);
      while (__stxr(v80 + 1, v79));
      do
        v81 = __ldaxr(v79);
      while (__stlxr(v81 - 1, v79));
      if (!v81)
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
      v77 = *(_QWORD *)(v2 + 8);
      v82 = *(std::__shared_weak_count **)(v2 + 16);
      if (v82)
      {
        v83 = (unint64_t *)&v82->__shared_owners_;
        do
          v84 = __ldxr(v83);
        while (__stxr(v84 + 1, v83));
        do
          v85 = __ldaxr(v83);
        while (__stlxr(v85 - 1, v83));
        if (!v85)
        {
          ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
          std::__shared_weak_count::__release_weak(v82);
        }
      }
    }
    if (*(_BYTE *)(v2 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v77 + 96))(&v212, v77, 1);
      if (!*(_DWORD *)(v3 + 32))
        goto LABEL_278;
      goto LABEL_132;
    }
LABEL_131:
    v212 = 0;
    if (!*(_DWORD *)(v3 + 32))
      goto LABEL_278;
LABEL_132:
    v86 = *(_DWORD *)(v3 + 36);
    if (!v86)
      goto LABEL_278;
    v87 = *(_DWORD *)(v3 + 40);
    if (!v87)
      goto LABEL_278;
    v89 = *(unsigned int *)(v3 + 48);
    v88 = *(unsigned int *)(v3 + 52);
    v91 = *(unsigned int *)(v2 + 48);
    v90 = *(unsigned int *)(v2 + 52);
    v92 = *(unsigned __int16 **)(v3 + 24);
    if (*(_BYTE *)(v3 + 72) && v92)
    {
      v93 = *(_QWORD *)(v3 + 8);
      v94 = *(std::__shared_weak_count **)(v3 + 16);
      if (v94)
      {
        v95 = (unint64_t *)&v94->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v93 + 88))(v93, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v92 = *(unsigned __int16 **)(v3 + 24);
    }
    v42 = *(float **)(v2 + 24);
    if (*(_BYTE *)(v2 + 72) && v42)
    {
      v98 = *(_QWORD *)(v2 + 8);
      v99 = *(std::__shared_weak_count **)(v2 + 16);
      if (v99)
      {
        v100 = (unint64_t *)&v99->__shared_owners_;
        do
          v101 = __ldxr(v100);
        while (__stxr(v101 + 1, v100));
        do
          v102 = __ldaxr(v100);
        while (__stlxr(v102 - 1, v100));
        if (!v102)
        {
          ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
          std::__shared_weak_count::__release_weak(v99);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v98 + 88))(v98, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v42 = *(float **)(v2 + 24);
    }
    v103 = (int)v6;
    v104 = v86 - 1;
    v105 = 2 * v89;
    v106 = 4 * v91;
    v107 = v87 - 1;
    if (v87 != 1)
    {
      if (v86 == 1)
      {
        do
        {
          v189 = *v92;
          v190 = (float)v189;
          if (v189 < v103)
            v190 = v6;
          *v42 = v190;
          v191 = v92[1];
          v192 = (float)v191;
          if (v191 < v103)
            v192 = v6;
          v42[1] = v192;
          v92 += v88;
          v42 += v90;
          --v107;
        }
        while (v107);
      }
      else
      {
        v108 = 0;
        v109 = v92 + 1;
        v110 = v42 + 1;
        do
        {
          v111 = v110;
          v112 = v109;
          v113 = v86 - 1;
          do
          {
            v114 = *(v112 - 1);
            v115 = (float)v114;
            if (v114 < v103)
              v115 = v6;
            *(v111 - 1) = v115;
            v116 = *v112;
            v117 = (float)v116;
            if (v116 < v103)
              v117 = v6;
            *v111 = v117;
            v112 = (unsigned __int16 *)((char *)v112 + v105);
            v111 = (float *)((char *)v111 + v106);
            --v113;
          }
          while (v113);
          v118 = *(v112 - 1);
          v119 = (float)v118;
          if (v118 < v103)
            v119 = v6;
          *(v111 - 1) = v119;
          v120 = *v112;
          v121 = (float)v120;
          if (v120 < v103)
            v121 = v6;
          *v111 = v121;
          v92 += v88;
          v42 += v90;
          ++v108;
          v109 += v88;
          v110 += v90;
        }
        while (v108 != v107);
      }
    }
    if (v86 != 1)
    {
      do
      {
        v193 = *v92;
        v194 = (float)v193;
        if (v193 < v103)
          v194 = v6;
        *v42 = v194;
        v195 = v92[1];
        v196 = (float)v195;
        if (v195 < v103)
          v196 = v6;
        v42[1] = v196;
        v92 = (unsigned __int16 *)((char *)v92 + v105);
        v42 = (float *)((char *)v42 + v106);
        --v104;
      }
      while (v104);
    }
    v197 = *v92;
    v198 = (float)v197;
    if (v197 < v103)
      v198 = v6;
    *v42 = v198;
    v199 = v92[1];
    v187 = (float)v199;
    v188 = v199 >= v103;
LABEL_275:
    if (!v188)
      v187 = v6;
LABEL_277:
    v42[1] = v187;
    goto LABEL_278;
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = -3.40282347e38;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 3.40282347e38;
  if (v4 < -3.40282347e38)
    v4 = -3.40282347e38;
  v6 = v4;
  if (v5 <= 3.40282347e38)
    v7 = v5;
  else
    v7 = 3.40282347e38;
  v8 = v7;
  if (v6 < 0.0 || v8 > 65535.0)
    goto LABEL_36;
LABEL_15:
  v10 = *(_QWORD *)(v3 + 8);
  if (!v10)
    goto LABEL_39;
  v11 = *(std::__shared_weak_count **)(v3 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v3 + 8);
    v15 = *(std::__shared_weak_count **)(v3 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (!*(_BYTE *)(v3 + 73))
  {
LABEL_39:
    v213 = 0;
    v19 = *(_QWORD *)(v2 + 8);
    if (!v19)
      goto LABEL_55;
LABEL_40:
    v22 = *(std::__shared_weak_count **)(v2 + 16);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      do
        v25 = __ldaxr(v23);
      while (__stlxr(v25 - 1, v23));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
      v19 = *(_QWORD *)(v2 + 8);
      v26 = *(std::__shared_weak_count **)(v2 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
        do
          v29 = __ldaxr(v27);
        while (__stlxr(v29 - 1, v27));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
    }
    if (*(_BYTE *)(v2 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v212, v19, 1);
      if (!*(_DWORD *)(v3 + 32))
        goto LABEL_278;
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v213, v10, 0);
  v19 = *(_QWORD *)(v2 + 8);
  if (v19)
    goto LABEL_40;
LABEL_55:
  v212 = 0;
  if (*(_DWORD *)(v3 + 32))
  {
LABEL_56:
    v30 = *(_DWORD *)(v3 + 36);
    if (!v30)
      goto LABEL_278;
    v31 = *(_DWORD *)(v3 + 40);
    if (!v31)
      goto LABEL_278;
    v33 = *(unsigned int *)(v3 + 48);
    v32 = *(unsigned int *)(v3 + 52);
    v35 = *(unsigned int *)(v2 + 48);
    v34 = *(unsigned int *)(v2 + 52);
    v36 = *(unsigned __int16 **)(v3 + 24);
    if (*(_BYTE *)(v3 + 72) && v36)
    {
      v37 = *(_QWORD *)(v3 + 8);
      v38 = *(std::__shared_weak_count **)(v3 + 16);
      if (v38)
      {
        v39 = (unint64_t *)&v38->__shared_owners_;
        do
          v40 = __ldxr(v39);
        while (__stxr(v40 + 1, v39));
        do
          v41 = __ldaxr(v39);
        while (__stlxr(v41 - 1, v39));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v36 = *(unsigned __int16 **)(v3 + 24);
    }
    v42 = *(float **)(v2 + 24);
    if (*(_BYTE *)(v2 + 72) && v42)
    {
      v43 = *(_QWORD *)(v2 + 8);
      v44 = *(std::__shared_weak_count **)(v2 + 16);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldxr(v45);
        while (__stxr(v46 + 1, v45));
        do
          v47 = __ldaxr(v45);
        while (__stlxr(v47 - 1, v45));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v43 + 88))(v43, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v42 = *(float **)(v2 + 24);
    }
    v48 = (int)v6;
    v49 = (int)v8;
    v50 = v30 - 1;
    v51 = 2 * v33;
    v52 = 4 * v35;
    v53 = v31 - 1;
    if (v31 != 1)
    {
      if (v30 == 1)
      {
        do
        {
          v176 = *v36;
          v177 = (float)v176;
          if (v176 > v49)
            v177 = v8;
          if (v176 < v48)
            v177 = v6;
          *v42 = v177;
          v178 = v36[1];
          v179 = (float)v178;
          if (v178 > v49)
            v179 = v8;
          if (v178 < v48)
            v179 = v6;
          v42[1] = v179;
          v36 += v32;
          v42 += v34;
          --v53;
        }
        while (v53);
      }
      else
      {
        v54 = 0;
        v55 = v36 + 1;
        v56 = v42 + 1;
        do
        {
          v57 = v56;
          v58 = v55;
          v59 = v30 - 1;
          do
          {
            v60 = *(v58 - 1);
            v61 = (float)v60;
            if (v60 > v49)
              v61 = v8;
            if (v60 < v48)
              v61 = v6;
            *(v57 - 1) = v61;
            v62 = *v58;
            v63 = (float)v62;
            if (v62 > v49)
              v63 = v8;
            if (v62 < v48)
              v63 = v6;
            *v57 = v63;
            v58 = (unsigned __int16 *)((char *)v58 + v51);
            v57 = (float *)((char *)v57 + v52);
            --v59;
          }
          while (v59);
          v64 = *(v58 - 1);
          v65 = (float)v64;
          if (v64 > v49)
            v65 = v8;
          if (v64 < v48)
            v65 = v6;
          *(v57 - 1) = v65;
          v66 = *v58;
          v67 = (float)v66;
          if (v66 > v49)
            v67 = v8;
          if (v66 < v48)
            v67 = v6;
          *v57 = v67;
          v36 += v32;
          v42 += v34;
          ++v54;
          v55 += v32;
          v56 += v34;
        }
        while (v54 != v53);
      }
    }
    if (v30 != 1)
    {
      do
      {
        v180 = *v36;
        v181 = (float)v180;
        if (v180 > v49)
          v181 = v8;
        if (v180 < v48)
          v181 = v6;
        *v42 = v181;
        v182 = v36[1];
        v183 = (float)v182;
        if (v182 > v49)
          v183 = v8;
        if (v182 < v48)
          v183 = v6;
        v42[1] = v183;
        v36 = (unsigned __int16 *)((char *)v36 + v51);
        v42 = (float *)((char *)v42 + v52);
        --v50;
      }
      while (v50);
    }
    v184 = *v36;
    v185 = (float)v184;
    if (v184 > v49)
      v185 = v8;
    if (v184 < v48)
      v185 = v6;
    *v42 = v185;
    v186 = v36[1];
    v187 = (float)v186;
    if (v186 > v49)
      v187 = v8;
    v188 = v186 >= v48;
    goto LABEL_275;
  }
LABEL_278:
  v200 = v212;
  v212 = 0;
  if (v200)
    (*(void (**)(uint64_t))(*(_QWORD *)v200 + 8))(v200);
  result = v213;
  v213 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243828F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224382988(uint64_t **a1, float a2)
{
  return sub_224382994(**a1, (*a1)[1], a2);
}

uint64_t sub_224382994(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  int v43;
  _WORD *v44;
  float *v45;
  float *v46;
  _WORD *v47;
  int v48;
  float v49;
  float v50;
  float v51;
  float v52;
  float v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v57 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v56, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v57, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v56 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v28 = *(unsigned int *)(a2 + 52);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOWORD(a3) = *v29;
            v52 = (float)LODWORD(a3);
            *v35 = v52;
            LOWORD(v52) = v29[1];
            a3 = (float)LODWORD(v52);
            v35[1] = a3;
            v29 += v26;
            v35 += v28;
            --v42;
          }
          while (v42);
LABEL_64:
          LOWORD(a3) = *v29;
          v53 = (float)LODWORD(a3);
          *v35 = v53;
          LOWORD(v53) = v29[1];
          v35[1] = (float)LODWORD(v53);
          goto LABEL_65;
        }
        v43 = 0;
        v44 = v29 + 1;
        v45 = v35 + 1;
        do
        {
          v46 = v45;
          v47 = v44;
          v48 = v23 - 1;
          do
          {
            LOWORD(a3) = *(v47 - 1);
            v49 = (float)LODWORD(a3);
            *(v46 - 1) = v49;
            LOWORD(v49) = *v47;
            a3 = (float)LODWORD(v49);
            *v46 = a3;
            v47 += v25;
            v46 += v27;
            --v48;
          }
          while (v48);
          LOWORD(a3) = *(v47 - 1);
          v50 = (float)LODWORD(a3);
          *(v46 - 1) = v50;
          LOWORD(v50) = *v47;
          a3 = (float)LODWORD(v50);
          *v46 = a3;
          v29 += v26;
          v35 += v28;
          ++v43;
          v44 += v26;
          v45 += v28;
        }
        while (v43 != v42);
      }
      if (v23 != 1)
      {
        do
        {
          LOWORD(a3) = *v29;
          v51 = (float)LODWORD(a3);
          *v35 = v51;
          LOWORD(v51) = v29[1];
          a3 = (float)LODWORD(v51);
          v35[1] = a3;
          v29 += v25;
          v35 += v27;
          --v41;
        }
        while (v41);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v54 = v56;
  v56 = 0;
  if (v54)
    (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
  result = v57;
  v57 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224382DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float32x2_t sub_224382E34(_DWORD *a1, _QWORD *a2, uint64_t *****a3, unsigned __int16 *a4, float32x2_t *a5)
{
  int v5;
  uint64_t ***v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64x2_t v22;
  float64x2_t v23;
  uint64x2_t v24;
  float64x2_t v25;
  float32x2_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *(double *)v8[1];
  v11 = **v7;
  v12 = *(double *)v7[1];
  __asm { FMOV            V2.2D, #1.0 }
  if (v5)
  {
    v18 = (float64x2_t)vdupq_lane_s64(v11, 0);
    v19 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v20 = 2 * a1[6];
    v21 = 4 * a1[7];
    do
    {
      v22.i64[0] = *a4;
      v22.i64[1] = a4[1];
      v23 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v22), v19), v10);
      *a5 = vcvt_f32_f64(vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v23, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v23, (float64x2_t)0)), v12)));
      a4 = (unsigned __int16 *)((char *)a4 + v20);
      a5 = (float32x2_t *)((char *)a5 + v21);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v24.i64[0] = *a4;
  v24.i64[1] = a4[1];
  v25 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v24), (float64x2_t)vdupq_lane_s64(v9, 0)), v10);
  result = vcvt_f32_f64(vaddq_f64((float64x2_t)vdupq_lane_s64(v11, 0), vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v25, _Q2), (int8x16_t)_Q2, (int8x16_t)vmaxnmq_f64(v25, (float64x2_t)0)), v12)));
  *a5 = result;
  return result;
}

void sub_224382F24(int a1)
{
  __asm { BR              X10 }
}

void sub_224382F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, std::string *a8, int a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24,__int16 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *p_shared_owners;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;
  unint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unsigned int v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  __int16 v81;
  uint64_t (**v82)();
  uint64_t v83;
  std::__shared_weak_count *v84;

  sub_2243851DC((uint64_t)&v82, *(_QWORD *)v51, *(_DWORD *)(v51 + 16), *(_QWORD *)v51 + 56);
  sub_22437589C((uint64_t)&v74, (uint64_t)&v82);
  v53 = v84;
  if (v84)
  {
    p_shared_owners = (unint64_t *)&v84->__shared_owners_;
    do
      v55 = __ldaxr(p_shared_owners);
    while (__stlxr(v55 - 1, p_shared_owners));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
  v57 = *(_QWORD *)v51;
  v56 = *(_QWORD *)(v51 + 8);
  v82 = &off_24EC22370;
  sub_22437F9B4(&v83, v74, v75);
  *(_QWORD *)(v52 - 112) = v57;
  *(_QWORD *)(v52 - 104) = &v82;
  v58 = *(unsigned int *)(v56 + 64);
  if ((_DWORD)v58 == -1)
    sub_22316DD70();
  *(_QWORD *)(v52 - 96) = v52 - 112;
  ((void (*)(uint64_t, uint64_t))off_24EC744D8[v58])(v52 - 96, v56 + 8);
  v59 = v84;
  if (!v84)
    goto LABEL_11;
  v60 = (unint64_t *)&v84->__shared_owners_;
  do
    v61 = __ldaxr(v60);
  while (__stlxr(v61 - 1, v60));
  if (!v61)
  {
    ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
    std::__shared_weak_count::__release_weak(v59);
    *(_QWORD *)v50 = &off_24EC1F958;
    v63 = v74;
    v62 = v75;
    if (v75)
    {
LABEL_12:
      v64 = (unint64_t *)&v62->__shared_owners_;
      do
        v65 = __ldxr(v64);
      while (__stxr(v65 + 1, v64));
      v66 = v75;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_11:
    *(_QWORD *)v50 = &off_24EC1F958;
    v63 = v74;
    v62 = v75;
    if (v75)
      goto LABEL_12;
  }
  v66 = 0;
LABEL_17:
  v67 = v79;
  v68 = v80;
  if (v77)
    v69 = v76 | 0x100000000;
  else
    v69 = 0;
  v70 = v78;
  v71 = v81;
  *(_QWORD *)(v50 + 8) = v63;
  *(_QWORD *)(v50 + 16) = v62;
  *(_QWORD *)(v50 + 24) = v69;
  *(_QWORD *)(v50 + 32) = v67;
  *(_DWORD *)(v50 + 40) = v68;
  *(_QWORD *)(v50 + 48) = v70;
  *(_DWORD *)(v50 + 56) = 5;
  *(_WORD *)(v50 + 60) = v71;
  if (v66)
  {
    v72 = (unint64_t *)&v66->__shared_owners_;
    do
      v73 = __ldaxr(v72);
    while (__stlxr(v73 - 1, v72));
    if (!v73)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
}

void sub_224384F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;

  if (a36)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a36 + 8))(a36);
    v38 = a15;
    if (!a15)
    {
LABEL_3:
      v39 = *(_QWORD *)(v36 - 96);
      *(_QWORD *)(v36 - 96) = 0;
      if (!v39)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v38 = a15;
    if (!a15)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
  v39 = *(_QWORD *)(v36 - 96);
  *(_QWORD *)(v36 - 96) = 0;
  if (!v39)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_2243851DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(7);
  v34 = &off_24EC74670;
  sub_224377D50((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 2 * v41;
  if (v38)
    v27 = (2 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 7;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22438545C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224385478(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22438548C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2243854A0(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  unsigned int v16;
  double v17;
  double v18;
  unsigned int v19;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  __int16 *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  __int16 *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  double v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  double ****v75;
  uint64_t v76;
  int v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  _OWORD v83[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    v10 = 65504.0;
    if (*(double *)(a2 + 8) <= 65504.0)
      v10 = *(double *)(a2 + 8);
    _S0 = v10;
    __asm { FCVT            H0, S0 }
    v13 = *v3;
    v12 = v3[1];
    _S0 = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_S0);
    v16 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v19 = 255;
    goto LABEL_14;
  }
  v13 = *v3;
  v12 = v3[1];
  LOWORD(_S0) = 0;
  LOWORD(_S1) = 15360;
  v16 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v17 = *(double *)(a2 + 24);
  if (v17 < 0.0)
    v17 = 0.0;
  v16 = (int)v17;
  v18 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v18 = *(double *)(a2 + 32);
  v19 = (int)v18;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v19;
  if (_ZF)
    return sub_224385AE4(v13, v12);
  __asm { FCVT            D0, H0 }
  v71 = _D0;
  __asm { FCVT            D1, H1 }
  v69 = (double)v16;
  v70 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = (double)v19 - (double)v16;
  v68 = a3.n128_f64[0];
  v67[0] = &v71;
  v67[1] = &v70;
  v66[0] = &v69;
  v66[1] = &v68;
  v65[0] = v67;
  v65[1] = v66;
  v25 = *(_QWORD *)(v13 + 8);
  if (!v25)
    goto LABEL_35;
  v26 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v26)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v26->__shared_owners_;
  do
    v28 = __ldxr(p_shared_owners);
  while (__stxr(v28 + 1, p_shared_owners));
  do
    v29 = __ldaxr(p_shared_owners);
  while (__stlxr(v29 - 1, p_shared_owners));
  if (!v29)
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
  v25 = *(_QWORD *)(v13 + 8);
  v30 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v30)
    goto LABEL_82;
  v31 = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(v31);
  while (__stxr(v32 + 1, v31));
  do
    v33 = __ldaxr(v31);
  while (__stlxr(v33 - 1, v31));
  if (v33)
  {
LABEL_82:
    if (*(_BYTE *)(v13 + 73))
      goto LABEL_31;
LABEL_35:
    v73 = 0;
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
  std::__shared_weak_count::__release_weak(v30);
  if (!*(_BYTE *)(v13 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v25 + 96))(&v73, v25, 0);
  v34 = *(_QWORD *)(v12 + 8);
  if (!v34)
  {
LABEL_51:
    v72 = 0;
    v74 = v65;
    v44 = *(_DWORD *)(v13 + 32);
    if (v44)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v36 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v36)
    goto LABEL_47;
  v37 = (unint64_t *)&v36->__shared_owners_;
  do
    v38 = __ldxr(v37);
  while (__stxr(v38 + 1, v37));
  do
    v39 = __ldaxr(v37);
  while (__stlxr(v39 - 1, v37));
  if (!v39)
  {
    ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
    std::__shared_weak_count::__release_weak(v36);
  }
  v34 = *(_QWORD *)(v12 + 8);
  v40 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v40)
    goto LABEL_47;
  v41 = (unint64_t *)&v40->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
    if (!*(_BYTE *)(v12 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v12 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v34 + 96))(&v72, v34, 1);
  v74 = v65;
  v44 = *(_DWORD *)(v13 + 32);
  if (v44)
  {
LABEL_52:
    v45 = *(_DWORD *)(v13 + 36);
    if (v45)
    {
      v46 = *(_DWORD *)(v13 + 40);
      if (v46)
      {
        v75 = (double ****)&v74;
        v76 = 0;
        v77 = v44 - 1;
        v47 = *(unsigned int *)(v13 + 48);
        v48 = *(unsigned int *)(v12 + 48);
        v78 = *(unsigned int *)(v13 + 44) | ((unint64_t)*(unsigned int *)(v12 + 44) << 32);
        v79 = v45 - 1;
        v80 = v47 | (v48 << 32);
        v81 = v46 - 1;
        v82 = *(unsigned int *)(v13 + 52) | ((unint64_t)*(unsigned int *)(v12 + 52) << 32);
        v49 = *(__int16 **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v49)
        {
          v50 = *(_QWORD *)(v13 + 8);
          v51 = *(std::__shared_weak_count **)(v13 + 16);
          if (v51)
          {
            v52 = (unint64_t *)&v51->__shared_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            do
              v54 = __ldaxr(v52);
            while (__stlxr(v54 - 1, v52));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v50 + 88))(v50, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v49 = *(__int16 **)(v13 + 24);
        }
        v55 = *(__int16 **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v55)
        {
          v56 = *(_QWORD *)(v12 + 8);
          v57 = *(std::__shared_weak_count **)(v12 + 16);
          if (v57)
          {
            v58 = (unint64_t *)&v57->__shared_owners_;
            do
              v59 = __ldxr(v58);
            while (__stxr(v59 + 1, v58));
            do
              v60 = __ldaxr(v58);
            while (__stlxr(v60 - 1, v58));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
              std::__shared_weak_count::__release_weak(v57);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v56 + 88))(v56, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v55 = *(__int16 **)(v12 + 24);
        }
        memset(v83, 0, sizeof(v83));
        v61 = v81;
        if (v81)
        {
          v62 = HIDWORD(v82);
          v63 = 2 * v82;
          do
          {
            sub_224385F98(&v76, (__int16 **)v83, &v75, v49, v55);
            v55 = (__int16 *)((char *)v55 + v62);
            v49 = (__int16 *)((char *)v49 + v63);
            --v61;
          }
          while (v61);
        }
        a3.n128_f64[0] = sub_224385F98(&v76, (__int16 **)v83, &v75, v49, v55);
      }
    }
  }
LABEL_76:
  v64 = v72;
  v72 = 0;
  if (v64)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v64 + 8))(v64, a3);
  result = v73;
  v73 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2243859A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224385A04(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  char v22;
  char v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 23544;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_22438613C(v4, v5, (uint64_t)v19);
}

uint64_t sub_224385AD8(uint64_t **a1)
{
  return sub_224385AE4(**a1, (*a1)[1]);
}

uint64_t sub_224385AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  _WORD *v44;
  _BYTE *v45;
  _BYTE *v46;
  _WORD *v47;
  int v48;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v71 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v70, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v71, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v70 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_BYTE **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = (int)_S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = (int)_S0;
            v34 += v27;
            v28 += v24;
            --v42;
          }
          while (v42);
        }
        else
        {
          v43 = 0;
          v44 = v28 + 1;
          v45 = v34 + 1;
          do
          {
            v46 = v45;
            v47 = v44;
            v48 = v22 - 1;
            do
            {
              _H0 = *(v47 - 1);
              __asm { FCVT            S0, H0 }
              *(v46 - 1) = (int)_S0;
              LOWORD(_S0) = *v47;
              __asm { FCVT            S0, H0 }
              *v46 = (int)_S0;
              v47 = (_WORD *)((char *)v47 + v41);
              v46 += v26;
              --v48;
            }
            while (v48);
            _H0 = *(v47 - 1);
            __asm { FCVT            S0, H0 }
            *(v46 - 1) = (int)_S0;
            LOWORD(_S0) = *v47;
            __asm { FCVT            S0, H0 }
            *v46 = (int)_S0;
            v28 += v24;
            v34 += v27;
            ++v43;
            v44 += v24;
            v45 += v27;
          }
          while (v43 != v42);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = (int)_S0;
          v34 += v26;
          v28 = (__int16 *)((char *)v28 + v41);
          --v40;
        }
        while (v40);
      }
      _H0 = *v28;
      __asm { FCVT            S0, H0 }
      *v34 = (int)_S0;
      LOWORD(_S0) = v28[1];
      __asm { FCVT            S0, H0 }
      v34[1] = (int)_S0;
    }
  }
LABEL_65:
  v68 = v70;
  v70 = 0;
  if (v68)
    (*(void (**)(uint64_t))(*(_QWORD *)v68 + 8))(v68);
  result = v71;
  v71 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224385F34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_224385F98(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  unsigned int v5;
  double ***v6;
  double **v13;
  double **v14;
  double v15;
  double v16;
  double v17;
  double ***v18;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v26;
  double **v29;
  double **v30;
  double v31;
  double v32;
  double v33;
  double ***v34;
  double **v37;
  double **v38;
  double v39;
  double v40;
  double v41;
  double result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      _H2 = *a4;
      __asm { FCVT            D2, H2 }
      v14 = *v6;
      v13 = v6[1];
      v15 = (_D2 - **v14) * *v14[1];
      v16 = fmax(v15, 0.0);
      if (v15 <= 1.0)
        v17 = v16;
      else
        v17 = 1.0;
      *(_BYTE *)a5 = llround(**v13 + v17 * *v13[1]);
      v18 = **a3;
      _H2 = (*a2)[1];
      __asm { FCVT            D2, H2 }
      v22 = *v18;
      v21 = v18[1];
      v23 = (_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      *((_BYTE *)a2[2] + 1) = llround(**v21 + v25 * *v21[1]);
      a4 += a1[6];
      a5 = (__int16 *)((char *)a5 + a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v26 = **a3;
  _H0 = *a4;
  __asm { FCVT            D0, H0 }
  v30 = *v26;
  v29 = v26[1];
  v31 = (_D0 - **v30) * *v30[1];
  v32 = fmax(v31, 0.0);
  if (v31 <= 1.0)
    v33 = v32;
  else
    v33 = 1.0;
  *(_BYTE *)a5 = llround(**v29 + v33 * *v29[1]);
  v34 = **a3;
  _H0 = (*a2)[1];
  __asm { FCVT            D0, H0 }
  v38 = *v34;
  v37 = v34[1];
  v39 = (_D0 - **v38) * *v38[1];
  v40 = fmax(v39, 0.0);
  if (v39 <= 1.0)
    v41 = v40;
  else
    v41 = 1.0;
  result = **v37 + v41 * *v37[1];
  *((_BYTE *)a2[2] + 1) = llround(result);
  return result;
}

uint64_t sub_22438613C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  __int16 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 ***v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = (__int16 ***)&v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(__int16 **)(a1 + 24);
      }
      v35 = *(__int16 **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(__int16 **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = HIDWORD(v56);
        v43 = 2 * v56;
        do
        {
          sub_22438655C(&v50, (__int16 **)v57, &v49, v29, v35);
          v35 = (__int16 *)((char *)v35 + v42);
          v29 = (__int16 *)((char *)v29 + v43);
          --v41;
        }
        while (v41);
      }
      sub_22438655C(&v50, (__int16 **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243864F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22438655C(_DWORD *result, __int16 **a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  unsigned int i;
  __int16 *v6;
  __int16 **v7;
  __int16 **v18;
  __int16 **v25;
  __int16 *v32;
  __int16 **v33;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      _H0 = *a4;
      _H1 = **v7;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 >= _S1)
      {
        _H1 = *v7[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          LODWORD(v7) = (int)_S0;
        else
          LOBYTE(v7) = *(_BYTE *)v7[3];
      }
      else
      {
        LOBYTE(v7) = *(_BYTE *)v7[1];
      }
      *(_BYTE *)a5 = (_BYTE)v7;
      v18 = **a3;
      _H0 = (*a2)[1];
      _H1 = **v18;
      __asm
      {
        FCVT            S0, H0
        FCVT            S1, H1
      }
      if (_S0 < _S1)
      {
        v6 = v18[1];
      }
      else
      {
        _H1 = *v18[2];
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v6) = (int)_S0;
          goto LABEL_5;
        }
        v6 = v18[3];
      }
      LOBYTE(v6) = *(_BYTE *)v6;
LABEL_5:
      *((_BYTE *)a2[2] + 1) = (_BYTE)v6;
      a4 += result[6];
      a5 = (__int16 *)((char *)a5 + result[7]);
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v25 = **a3;
  _H0 = *a4;
  _H1 = **v25;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v25[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      LODWORD(v25) = (int)_S0;
    else
      LOBYTE(v25) = *(_BYTE *)v25[3];
  }
  else
  {
    LOBYTE(v25) = *(_BYTE *)v25[1];
  }
  *(_BYTE *)a5 = (_BYTE)v25;
  v32 = a2[2];
  v33 = **a3;
  _H0 = (*a2)[1];
  _H1 = **v33;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v33[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *((_BYTE *)v32 + 1) = (int)_S0;
    else
      *((_BYTE *)v32 + 1) = *(_BYTE *)v33[3];
  }
  else
  {
    *((_BYTE *)v32 + 1) = *(_BYTE *)v33[1];
  }
  return result;
}

uint64_t sub_224386718(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  double v16;
  int v17;
  double v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v22;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int16 *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  __int16 *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  double v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  double ****v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  _OWORD v85[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    v10 = 65504.0;
    if (*(double *)(a2 + 8) <= 65504.0)
      v10 = *(double *)(a2 + 8);
    _S0 = v10;
    __asm { FCVT            H0, S0 }
    v13 = *v3;
    v12 = v3[1];
    _S0 = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_S0);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v19 = -65536;
    goto LABEL_14;
  }
  v13 = *v3;
  v12 = v3[1];
  LOWORD(_S0) = 0;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v16 = *(double *)(a2 + 24);
  if (v16 < 0.0)
    v16 = 0.0;
  v17 = (int)v16;
  v18 = 65535.0;
  if (*(double *)(a2 + 32) <= 65535.0)
    v18 = *(double *)(a2 + 32);
  v19 = v17 | ((int)v18 << 16);
LABEL_14:
  v20 = (unsigned __int16)v19;
  __asm { FCVT            S2, H0 }
  v22 = HIWORD(v19);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v22;
  if (_ZF)
    return sub_224386D6C(v13, v12);
  __asm { FCVT            D0, H0 }
  v73 = _D0;
  __asm { FCVT            D1, H1 }
  v71 = (double)v20;
  v72 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = (double)v22 - (double)v20;
  v70 = a3.n128_f64[0];
  v69[0] = &v73;
  v69[1] = &v72;
  v68[0] = &v71;
  v68[1] = &v70;
  v67[0] = v69;
  v67[1] = v68;
  v27 = *(_QWORD *)(v13 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v28)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(p_shared_owners);
  while (__stxr(v30 + 1, p_shared_owners));
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
    std::__shared_weak_count::__release_weak(v28);
  }
  v27 = *(_QWORD *)(v13 + 8);
  v32 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v32)
    goto LABEL_82;
  v33 = (unint64_t *)&v32->__shared_owners_;
  do
    v34 = __ldxr(v33);
  while (__stxr(v34 + 1, v33));
  do
    v35 = __ldaxr(v33);
  while (__stlxr(v35 - 1, v33));
  if (v35)
  {
LABEL_82:
    if (*(_BYTE *)(v13 + 73))
      goto LABEL_31;
LABEL_35:
    v75 = 0;
    v36 = *(_QWORD *)(v12 + 8);
    if (!v36)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
  std::__shared_weak_count::__release_weak(v32);
  if (!*(_BYTE *)(v13 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v75, v27, 0);
  v36 = *(_QWORD *)(v12 + 8);
  if (!v36)
  {
LABEL_51:
    v74 = 0;
    v76 = v67;
    v46 = *(_DWORD *)(v13 + 32);
    if (v46)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v38 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v38)
    goto LABEL_47;
  v39 = (unint64_t *)&v38->__shared_owners_;
  do
    v40 = __ldxr(v39);
  while (__stxr(v40 + 1, v39));
  do
    v41 = __ldaxr(v39);
  while (__stlxr(v41 - 1, v39));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
  v36 = *(_QWORD *)(v12 + 8);
  v42 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v42)
    goto LABEL_47;
  v43 = (unint64_t *)&v42->__shared_owners_;
  do
    v44 = __ldxr(v43);
  while (__stxr(v44 + 1, v43));
  do
    v45 = __ldaxr(v43);
  while (__stlxr(v45 - 1, v43));
  if (!v45)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
    if (!*(_BYTE *)(v12 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v12 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v74, v36, 1);
  v76 = v67;
  v46 = *(_DWORD *)(v13 + 32);
  if (v46)
  {
LABEL_52:
    v47 = *(_DWORD *)(v13 + 36);
    if (v47)
    {
      v48 = *(_DWORD *)(v13 + 40);
      if (v48)
      {
        v77 = (double ****)&v76;
        v78 = 0;
        v79 = v46 - 1;
        v49 = *(unsigned int *)(v13 + 48);
        v50 = *(unsigned int *)(v12 + 48);
        v80 = *(unsigned int *)(v13 + 44) | ((unint64_t)*(unsigned int *)(v12 + 44) << 32);
        v81 = v47 - 1;
        v82 = v49 | (v50 << 32);
        v83 = v48 - 1;
        v84 = *(unsigned int *)(v13 + 52) | ((unint64_t)*(unsigned int *)(v12 + 52) << 32);
        v51 = *(__int16 **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v51)
        {
          v52 = *(_QWORD *)(v13 + 8);
          v53 = *(std::__shared_weak_count **)(v13 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(__int16 **)(v13 + 24);
        }
        v57 = *(__int16 **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v57)
        {
          v58 = *(_QWORD *)(v12 + 8);
          v59 = *(std::__shared_weak_count **)(v12 + 16);
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldxr(v60);
            while (__stxr(v61 + 1, v60));
            do
              v62 = __ldaxr(v60);
            while (__stlxr(v62 - 1, v60));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v57 = *(__int16 **)(v12 + 24);
        }
        memset(v85, 0, sizeof(v85));
        v63 = v83;
        if (v83)
        {
          v64 = 2 * v84;
          v65 = 2 * HIDWORD(v84);
          do
          {
            sub_22438722C(&v78, (__int16 **)v85, &v77, v51, v57);
            v51 = (__int16 *)((char *)v51 + v64);
            v57 = (__int16 *)((char *)v57 + v65);
            --v63;
          }
          while (v63);
        }
        a3.n128_f64[0] = sub_22438722C(&v78, (__int16 **)v85, &v77, v51, v57);
      }
    }
  }
LABEL_76:
  v66 = v74;
  v74 = 0;
  if (v66)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v66 + 8))(v66, a3);
  result = v75;
  v75 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224386C28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224386C8C(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  __int16 v22;
  __int16 v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 31744;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_224387350(v4, v5, (uint64_t)v19);
}

uint64_t sub_224386D60(uint64_t **a1)
{
  return sub_224386D6C(**a1, (*a1)[1]);
}

uint64_t sub_224386D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  _WORD *v45;
  _WORD *v46;
  _WORD *v47;
  _WORD *v48;
  int v49;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v72 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v71, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v72, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v71 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = 2 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = (int)_S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = (int)_S0;
            v28 += v24;
            v34 += v26;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v28 + 1;
          v46 = v34 + 1;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v22 - 1;
            do
            {
              _H0 = *(v48 - 1);
              __asm { FCVT            S0, H0 }
              *(v47 - 1) = (int)_S0;
              LOWORD(_S0) = *v48;
              __asm { FCVT            S0, H0 }
              *v47 = (int)_S0;
              v48 = (_WORD *)((char *)v48 + v41);
              v47 = (_WORD *)((char *)v47 + v42);
              --v49;
            }
            while (v49);
            _H0 = *(v48 - 1);
            __asm { FCVT            S0, H0 }
            *(v47 - 1) = (int)_S0;
            LOWORD(_S0) = *v48;
            __asm { FCVT            S0, H0 }
            *v47 = (int)_S0;
            v28 += v24;
            v34 += v26;
            ++v44;
            v45 += v24;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = (int)_S0;
          v28 = (__int16 *)((char *)v28 + v41);
          v34 = (_WORD *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      _H0 = *v28;
      __asm { FCVT            S0, H0 }
      *v34 = (int)_S0;
      LOWORD(_S0) = v28[1];
      __asm { FCVT            S0, H0 }
      v34[1] = (int)_S0;
    }
  }
LABEL_65:
  v69 = v71;
  v71 = 0;
  if (v69)
    (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
  result = v72;
  v72 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243871C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22438722C(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  double v36;
  double v37;
  double v38;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      *a5 = llround(v11 + v12 * v23);
      _H6 = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a5[1] = llround(v11 + v12 * v28);
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (__int16 *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v31 = v10 * (_D4 - v9);
  v32 = fmax(v31, 0.0);
  if (v31 <= 1.0)
    v33 = v32;
  else
    v33 = 1.0;
  *a5 = llround(v11 + v12 * v33);
  _H4 = a4[1];
  __asm { FCVT            D4, H4 }
  v36 = v10 * (_D4 - v9);
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  result = v11 + v12 * v38;
  a5[1] = llround(result);
  return result;
}

uint64_t sub_224387350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  __int16 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 ***v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = (__int16 ***)&v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(__int16 **)(a1 + 24);
      }
      v35 = *(__int16 **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(__int16 **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = 2 * v56;
        v43 = 2 * HIDWORD(v56);
        do
        {
          sub_224387774(&v50, (__int16 **)v57, &v49, v29, v35);
          v29 = (__int16 *)((char *)v29 + v42);
          v35 = (__int16 *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      sub_224387774(&v50, (__int16 **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224387710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_224387774(_DWORD *result, __int16 **a2, __int16 ****a3, __int16 *a4, __int16 *a5)
{
  int v5;
  __int16 **v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  __int16 *v10;
  int v19;
  int v32;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = 2 * result[6];
    v9 = 2 * result[7];
    do
    {
      while (1)
      {
        *a2 = a4;
        a2[2] = a5;
        _H0 = *a4;
        _H1 = *v7;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
        {
          _H1 = *v6[2];
          __asm { FCVT            S1, H1 }
          if (_S0 <= _S1)
            v19 = (int)_S0;
          else
            LOWORD(v19) = *v6[3];
        }
        else
        {
          LOWORD(v19) = *v6[1];
        }
        *a5 = v19;
        _H0 = a4[1];
        _H1 = *v7;
        __asm
        {
          FCVT            S1, H1
          FCVT            S0, H0
        }
        if (_S0 >= _S1)
          break;
        v10 = v6[1];
LABEL_4:
        a5[1] = *v10;
        a4 = (__int16 *)((char *)a4 + v8);
        a5 = (__int16 *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_14;
      }
      _H1 = *v6[2];
      __asm { FCVT            S1, H1 }
      if (_S0 > _S1)
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      a5[1] = (int)_S0;
      a4 = (__int16 *)((char *)a4 + v8);
      a5 = (__int16 *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_14:
  *a2 = a4;
  a2[2] = a5;
  _H0 = *a4;
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v6[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      v32 = (int)_S0;
    else
      LOWORD(v32) = *v6[3];
  }
  else
  {
    LOWORD(v32) = *v6[1];
  }
  *a5 = v32;
  _H0 = a4[1];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v6[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      a5[1] = (int)_S0;
    else
      a5[1] = *v6[3];
  }
  else
  {
    a5[1] = *v6[1];
  }
  return result;
}

uint64_t sub_224387908(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  double v16;
  float v17;
  double v18;
  float v19;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int16 *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  float *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  double ****v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  _OWORD v86[2];

  v3 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v13 = *v3;
    v12 = v3[1];
    LOWORD(_S0) = 0;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    __asm
    {
      FCVT            S4, H0
      FCVT            S5, H1
    }
    if (_S4 != 0.0 || 1.0 != _S5)
      goto LABEL_15;
    return sub_224387F54(v13, v12);
  }
  v4 = -65504.0;
  if (*(double *)a2 >= -65504.0)
    v4 = *(double *)a2;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v9 = LOWORD(_S0);
  v10 = 65504.0;
  if (*(double *)(a2 + 8) <= 65504.0)
    v10 = *(double *)(a2 + 8);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v13 = *v3;
  v12 = v3[1];
  _S0 = v9 | (LOWORD(_S0) << 16);
  _S1 = HIWORD(_S0);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (v17 == _S4 && v19 == _S5)
    return sub_224387F54(v13, v12);
LABEL_15:
  __asm { FCVT            D0, H0 }
  v74 = _D0;
  __asm { FCVT            D1, H1 }
  v72 = v17;
  v73 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = v19 - v17;
  v71 = a3.n128_f64[0];
  v70[0] = &v74;
  v70[1] = &v73;
  v69[0] = &v72;
  v69[1] = &v71;
  v68[0] = v70;
  v68[1] = v69;
  v25 = *(_QWORD *)(v13 + 8);
  if (!v25)
    goto LABEL_38;
  v26 = *(std::__shared_weak_count **)(v13 + 16);
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(p_shared_owners);
    while (__stxr(v28 + 1, p_shared_owners));
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    v25 = *(_QWORD *)(v13 + 8);
    v30 = *(std::__shared_weak_count **)(v13 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }
  if (*(_BYTE *)(v13 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v25 + 96))(&v76, v25, 0);
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v76 = 0;
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_54;
  }
  v39 = *(std::__shared_weak_count **)(v12 + 16);
  if (v39)
  {
    v40 = (unint64_t *)&v39->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
    v34 = *(_QWORD *)(v12 + 8);
    v43 = *(std::__shared_weak_count **)(v12 + 16);
    if (v43)
    {
      v44 = (unint64_t *)&v43->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
  }
  if (!*(_BYTE *)(v12 + 73))
  {
LABEL_54:
    v75 = 0;
    v77 = v68;
    v47 = *(_DWORD *)(v13 + 32);
    if (v47)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v34 + 96))(&v75, v34, 1);
  v77 = v68;
  v47 = *(_DWORD *)(v13 + 32);
  if (v47)
  {
LABEL_55:
    v48 = *(_DWORD *)(v13 + 36);
    if (v48)
    {
      v49 = *(_DWORD *)(v13 + 40);
      if (v49)
      {
        v78 = (double ****)&v77;
        v79 = 0;
        v80 = v47 - 1;
        v50 = *(unsigned int *)(v13 + 48);
        v51 = *(unsigned int *)(v12 + 48);
        v81 = *(unsigned int *)(v13 + 44) | ((unint64_t)*(unsigned int *)(v12 + 44) << 32);
        v82 = v48 - 1;
        v83 = v50 | (v51 << 32);
        v84 = v49 - 1;
        v85 = *(unsigned int *)(v13 + 52) | ((unint64_t)*(unsigned int *)(v12 + 52) << 32);
        v52 = *(__int16 **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v52)
        {
          v53 = *(_QWORD *)(v13 + 8);
          v54 = *(std::__shared_weak_count **)(v13 + 16);
          if (v54)
          {
            v55 = (unint64_t *)&v54->__shared_owners_;
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v53 + 88))(v53, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v52 = *(__int16 **)(v13 + 24);
        }
        v58 = *(float **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v58)
        {
          v59 = *(_QWORD *)(v12 + 8);
          v60 = *(std::__shared_weak_count **)(v12 + 16);
          if (v60)
          {
            v61 = (unint64_t *)&v60->__shared_owners_;
            do
              v62 = __ldxr(v61);
            while (__stxr(v62 + 1, v61));
            do
              v63 = __ldaxr(v61);
            while (__stlxr(v63 - 1, v61));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
              std::__shared_weak_count::__release_weak(v60);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v59 + 88))(v59, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v58 = *(float **)(v12 + 24);
        }
        memset(v86, 0, sizeof(v86));
        v64 = v84;
        if (v84)
        {
          v65 = 2 * v85;
          v66 = 4 * HIDWORD(v85);
          do
          {
            sub_2243883F4(&v79, (__int16 **)v86, &v78, v52, v58);
            v52 = (__int16 *)((char *)v52 + v65);
            v58 = (float *)((char *)v58 + v66);
            --v64;
          }
          while (v64);
        }
        a3.n128_f32[0] = sub_2243883F4(&v79, (__int16 **)v86, &v78, v52, v58);
      }
    }
  }
LABEL_79:
  v67 = v75;
  v75 = 0;
  if (v67)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v67 + 8))(v67, a3);
  result = v76;
  v76 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224387E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224387E74(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v9;
  _QWORD v18[4];
  __int16 v19;
  __int16 v20;
  float v21;
  int v22;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = -3.40282347e38;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 3.40282347e38;
    if (v6 < -3.40282347e38)
      v6 = -3.40282347e38;
    _S0 = v6;
    if (v7 <= 3.40282347e38)
      v9 = v7;
    else
      v9 = 3.40282347e38;
    _S1 = v9;
    v21 = _S1;
    v22 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v20 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v21 = 3.4028e38;
    v22 = -8388609;
    v20 = -1024;
    _H0 = 31744;
  }
  v19 = _H0;
  v18[0] = &v20;
  v18[1] = &v22;
  v18[2] = &v19;
  v18[3] = &v21;
  return sub_224388518(v4, v5, (uint64_t)v18);
}

uint64_t sub_224387F48(uint64_t **a1)
{
  return sub_224387F54(**a1, (*a1)[1]);
}

uint64_t sub_224387F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  _DWORD *v44;
  _DWORD *v45;
  _WORD *v46;
  int v47;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v70 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v69, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v70, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v69 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v24 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_DWORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_DWORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = _S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = _S0;
            v28 += v25;
            v34 += v27;
            --v41;
          }
          while (v41);
LABEL_64:
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = _S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = _S0;
          goto LABEL_65;
        }
        v42 = 0;
        v43 = v28 + 1;
        v44 = v34 + 1;
        do
        {
          v45 = v44;
          v46 = v43;
          v47 = v22 - 1;
          do
          {
            _H0 = *(v46 - 1);
            __asm { FCVT            S0, H0 }
            *(v45 - 1) = _S0;
            LOWORD(_S0) = *v46;
            __asm { FCVT            S0, H0 }
            *v45 = _S0;
            v46 += v24;
            v45 += v26;
            --v47;
          }
          while (v47);
          _H0 = *(v46 - 1);
          __asm { FCVT            S0, H0 }
          *(v45 - 1) = _S0;
          LOWORD(_S0) = *v46;
          __asm { FCVT            S0, H0 }
          *v45 = _S0;
          v28 += v25;
          v34 += v27;
          ++v42;
          v43 += v25;
          v44 += v27;
        }
        while (v42 != v41);
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = _S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = _S0;
          v28 += v24;
          v34 += v26;
          --v40;
        }
        while (v40);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v67 = v69;
  v69 = 0;
  if (v67)
    (*(void (**)(uint64_t))(*(_QWORD *)v67 + 8))(v67);
  result = v70;
  v70 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224388390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2243883F4(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  float v29;
  double v32;
  double v33;
  double v34;
  double v37;
  double v38;
  double v39;
  float result;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      _S6 = v11 + v12 * v23;
      *a5 = _S6;
      LOWORD(_S6) = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v11 + v12 * v28;
      a5[1] = v29;
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v32 = v10 * (_D4 - v9);
  v33 = fmax(v32, 0.0);
  if (v32 <= 1.0)
    v34 = v33;
  else
    v34 = 1.0;
  _S4 = v11 + v12 * v34;
  *a5 = _S4;
  LOWORD(_S4) = a4[1];
  __asm { FCVT            D4, H4 }
  v37 = v10 * (_D4 - v9);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  result = v11 + v12 * v39;
  a5[1] = result;
  return result;
}

uint64_t sub_224388518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = &v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(__int16 **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = 2 * v56;
        v43 = 4 * HIDWORD(v56);
        do
        {
          sub_22438893C(&v50, (__int16 **)v57, &v49, v29, v35);
          v29 = (__int16 *)((char *)v29 + v42);
          v35 = (float *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      sub_22438893C(&v50, (__int16 **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243888D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22438893C(_DWORD *result, __int16 **a2, uint64_t **a3, __int16 *a4, float *a5)
{
  int v5;
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v20;
  float *v32;
  float *v39;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *(__int16 **)v6;
  if (v5)
  {
    v8 = 2 * result[6];
    v9 = 4 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H0 = *a4;
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_11;
        v20 = *(float **)(v6 + 24);
      }
      else
      {
        v20 = *(float **)(v6 + 8);
      }
      _S0 = *v20;
LABEL_11:
      *a5 = _S0;
      _H0 = a4[1];
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v10 = *(float **)(v6 + 8);
      }
      else
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_5;
        v10 = *(float **)(v6 + 24);
      }
      _S0 = *v10;
LABEL_5:
      a5[1] = _S0;
      a4 = (__int16 *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H0 = *a4;
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(v6 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_19;
    v32 = *(float **)(v6 + 24);
  }
  else
  {
    v32 = *(float **)(v6 + 8);
  }
  _S0 = *v32;
LABEL_19:
  *a5 = _S0;
  _H0 = a4[1];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v39 = *(float **)(v6 + 8);
LABEL_23:
    _S0 = *v39;
    goto LABEL_24;
  }
  _H1 = **(_WORD **)(v6 + 16);
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v39 = *(float **)(v6 + 24);
    goto LABEL_23;
  }
LABEL_24:
  a5[1] = _S0;
  return result;
}

void sub_224388A8C(int a1)
{
  __asm { BR              X10 }
}

void sub_224388AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, void *__dst,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__dsta,int a29,int a30,uint64_t a31,uint64_t a32,__int16 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,std::string *a63)
{
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *p_shared_owners;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  uint64_t v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  __int16 v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t (**v87)();
  uint64_t v88;
  std::__shared_weak_count *v89;
  _QWORD v90[3];
  uint64_t v91;
  std::__shared_weak_count *v92;
  unsigned int v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  __int16 v98;

  sub_22438ABCC((uint64_t)&v87, *(_QWORD *)v64, *(_DWORD *)(v64 + 16), *(_QWORD *)v64 + 56);
  v90[2] = &off_24EC74578;
  sub_22437589C((uint64_t)&v91, (uint64_t)&v87);
  v66 = v89;
  if (v89)
  {
    p_shared_owners = (unint64_t *)&v89->__shared_owners_;
    do
      v68 = __ldaxr(p_shared_owners);
    while (__stlxr(v68 - 1, p_shared_owners));
    if (!v68)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
  v70 = *(_QWORD *)v64;
  v69 = *(_QWORD *)(v64 + 8);
  v87 = &off_24EC22370;
  sub_22437F9B4(&v88, v91, v92);
  v90[0] = v70;
  v90[1] = &v87;
  v71 = *(unsigned int *)(v69 + 64);
  if ((_DWORD)v71 == -1)
    sub_22316DD70();
  *(_QWORD *)(v65 - 96) = v90;
  ((void (*)(uint64_t, uint64_t))off_24EC74520[v71])(v65 - 96, v69 + 8);
  v72 = v89;
  if (!v89)
    goto LABEL_11;
  v73 = (unint64_t *)&v89->__shared_owners_;
  do
    v74 = __ldaxr(v73);
  while (__stlxr(v74 - 1, v73));
  if (!v74)
  {
    ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
    std::__shared_weak_count::__release_weak(v72);
    *(_QWORD *)v63 = &off_24EC1F958;
    v76 = v91;
    v75 = v92;
    if (v92)
    {
LABEL_12:
      v77 = (unint64_t *)&v75->__shared_owners_;
      do
        v78 = __ldxr(v77);
      while (__stxr(v78 + 1, v77));
      v79 = v92;
      goto LABEL_17;
    }
  }
  else
  {
LABEL_11:
    *(_QWORD *)v63 = &off_24EC1F958;
    v76 = v91;
    v75 = v92;
    if (v92)
      goto LABEL_12;
  }
  v79 = 0;
LABEL_17:
  v80 = v96;
  v81 = v97;
  if (v94)
    v82 = v93 | 0x100000000;
  else
    v82 = 0;
  v83 = v95;
  v84 = v98;
  *(_QWORD *)(v63 + 8) = v76;
  *(_QWORD *)(v63 + 16) = v75;
  *(_QWORD *)(v63 + 24) = v82;
  *(_QWORD *)(v63 + 32) = v80;
  *(_DWORD *)(v63 + 40) = v81;
  *(_QWORD *)(v63 + 48) = v83;
  *(_DWORD *)(v63 + 56) = 5;
  *(_WORD *)(v63 + 60) = v84;
  if (v79)
  {
    v85 = (unint64_t *)&v79->__shared_owners_;
    do
      v86 = __ldaxr(v85);
    while (__stlxr(v86 - 1, v85));
    if (!v86)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      std::__shared_weak_count::__release_weak(v79);
    }
  }
}

void sub_22438A948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  if (a11)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
    v30 = *(_QWORD *)(v28 - 104);
    *(_QWORD *)(v28 - 104) = 0;
    if (!v30)
    {
LABEL_3:
      v31 = *(_QWORD *)(v28 - 96);
      *(_QWORD *)(v28 - 96) = 0;
      if (!v31)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v30 = *(_QWORD *)(v28 - 104);
    *(_QWORD *)(v28 - 104) = 0;
    if (!v30)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
  v31 = *(_QWORD *)(v28 - 96);
  *(_QWORD *)(v28 - 96) = 0;
  if (!v31)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_22438ABCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(8);
  v34 = &off_24EC74768;
  sub_22437A16C((uint64_t)&v35, (uint64_t)v45);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 4 * v41;
  if (v38)
    v27 = (4 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 8;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22438AE4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22438AE68(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22438AE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22438AE90(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  float v5;
  double v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  float *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  float *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  double ****v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  _OWORD v74[2];

  v3 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v7 = 1.0;
    v5 = 0.0;
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v13 = 255;
    if (v5 != (float)v10 || v7 != (float)0xFFu)
      goto LABEL_15;
    return sub_22438B490(v9, v8);
  }
  v4 = -3.40282347e38;
  if (*(double *)a2 >= -3.40282347e38)
    v4 = *(double *)a2;
  v5 = v4;
  v6 = 3.40282347e38;
  if (*(double *)(a2 + 8) <= 3.40282347e38)
    v6 = *(double *)(a2 + 8);
  v7 = v6;
  v9 = *v3;
  v8 = v3[1];
  v10 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v11 = *(double *)(a2 + 24);
  if (v11 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v12 = *(double *)(a2 + 32);
  v13 = (int)v12;
  if (v5 == (float)v10 && v7 == (float)(int)v12)
    return sub_22438B490(v9, v8);
LABEL_15:
  v62 = v5;
  v60 = (double)v10;
  v61 = 1.0 / (v7 - v5);
  a3.n128_f64[0] = (double)v13 - (double)v10;
  v59 = a3.n128_f64[0];
  v58[0] = &v62;
  v58[1] = &v61;
  v57[0] = &v60;
  v57[1] = &v59;
  v56[0] = v58;
  v56[1] = v57;
  v15 = *(_QWORD *)(v9 + 8);
  if (!v15)
    goto LABEL_38;
  v16 = *(std::__shared_weak_count **)(v9 + 16);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(v9 + 8);
    v20 = *(std::__shared_weak_count **)(v9 + 16);
    if (v20)
    {
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v15 + 96))(&v64, v15, 0);
    v24 = *(_QWORD *)(v8 + 8);
    if (!v24)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v64 = 0;
    v24 = *(_QWORD *)(v8 + 8);
    if (!v24)
      goto LABEL_54;
  }
  v27 = *(std::__shared_weak_count **)(v8 + 16);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v24 = *(_QWORD *)(v8 + 8);
    v31 = *(std::__shared_weak_count **)(v8 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_54:
    v63 = 0;
    v65 = v56;
    v35 = *(_DWORD *)(v9 + 32);
    if (v35)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v24 + 96))(&v63, v24, 1);
  v65 = v56;
  v35 = *(_DWORD *)(v9 + 32);
  if (v35)
  {
LABEL_55:
    v36 = *(_DWORD *)(v9 + 36);
    if (v36)
    {
      v37 = *(_DWORD *)(v9 + 40);
      if (v37)
      {
        v66 = (double ****)&v65;
        v67 = 0;
        v68 = v35 - 1;
        v38 = *(unsigned int *)(v9 + 48);
        v39 = *(unsigned int *)(v8 + 48);
        v69 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v70 = v36 - 1;
        v71 = v38 | (v39 << 32);
        v72 = v37 - 1;
        v73 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v40 = *(float **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v40)
        {
          v41 = *(_QWORD *)(v9 + 8);
          v42 = *(std::__shared_weak_count **)(v9 + 16);
          if (v42)
          {
            v43 = (unint64_t *)&v42->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v40 = *(float **)(v9 + 24);
        }
        v46 = *(float **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v46)
        {
          v47 = *(_QWORD *)(v8 + 8);
          v48 = *(std::__shared_weak_count **)(v8 + 16);
          if (v48)
          {
            v49 = (unint64_t *)&v48->__shared_owners_;
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
            do
              v51 = __ldaxr(v49);
            while (__stlxr(v51 - 1, v49));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v46 = *(float **)(v8 + 24);
        }
        memset(v74, 0, sizeof(v74));
        v52 = v72;
        if (v72)
        {
          v53 = HIDWORD(v73);
          v54 = 4 * v73;
          do
          {
            sub_22438B91C(&v67, (float **)v74, &v66, v40, v46);
            v46 = (float *)((char *)v46 + v53);
            v40 = (float *)((char *)v40 + v54);
            --v52;
          }
          while (v52);
        }
        a3.n128_f64[0] = sub_22438B91C(&v67, (float **)v74, &v66, v40, v46);
      }
    }
  }
LABEL_79:
  v55 = v63;
  v63 = 0;
  if (v55)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v55 + 8))(v55, a3);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22438B360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22438B3C4(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  _QWORD v11[4];
  uint64_t v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    *(float *)&v12 = (float)(int)v9;
    *((float *)&v12 + 1) = (float)v8;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 1132396544;
  }
  v11[0] = (char *)&v12 + 4;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_22438BAC0(v4, v5, (uint64_t)v11);
}

uint64_t sub_22438B484(uint64_t **a1)
{
  return sub_22438B490(**a1, (*a1)[1]);
}

uint64_t sub_22438B490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  float *v44;
  _BYTE *v45;
  _BYTE *v46;
  float *v47;
  int v48;
  float v49;
  float v50;
  float v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v55 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v54, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v55, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v54 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(float **)(a1 + 24);
      }
      v34 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_BYTE **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 4 * v25;
      v42 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = (int)*v28;
            v50 = v28[1];
            v28 += v24;
            v34[1] = (int)v50;
            v34 += v27;
            --v42;
          }
          while (v42);
        }
        else
        {
          v43 = 0;
          v44 = v28 + 1;
          v45 = v34 + 1;
          do
          {
            v46 = v45;
            v47 = v44;
            v48 = v22 - 1;
            do
            {
              *(v46 - 1) = (int)*(v47 - 1);
              v49 = *v47;
              v47 = (float *)((char *)v47 + v41);
              *v46 = (int)v49;
              v46 += v26;
              --v48;
            }
            while (v48);
            *(v46 - 1) = (int)*(v47 - 1);
            *v46 = (int)*v47;
            v28 += v24;
            v34 += v27;
            ++v43;
            v44 += v24;
            v45 += v27;
          }
          while (v43 != v42);
        }
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = (int)*v28;
          v51 = v28[1];
          v28 = (float *)((char *)v28 + v41);
          v34[1] = (int)v51;
          v34 += v26;
          --v40;
        }
        while (v40);
      }
      *v34 = (int)*v28;
      v34[1] = (int)v28[1];
    }
  }
LABEL_65:
  v52 = v54;
  v54 = 0;
  if (v52)
    (*(void (**)(uint64_t))(*(_QWORD *)v52 + 8))(v52);
  result = v55;
  v55 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22438B8B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22438B91C(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  unsigned int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double ***v12;
  double **v13;
  double **v14;
  double v15;
  double v16;
  double v17;
  double ***v18;
  double **v19;
  double **v20;
  double v21;
  double v22;
  double v23;
  double ***v24;
  double **v25;
  double **v26;
  double v27;
  double v28;
  double v29;
  double result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      v8 = *v6;
      v7 = v6[1];
      v9 = (*a4 - **v8) * *v8[1];
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      *(_BYTE *)a5 = llround(**v7 + v11 * *v7[1]);
      v12 = **a3;
      v14 = *v12;
      v13 = v12[1];
      v15 = ((*a2)[1] - **v14) * *v14[1];
      v16 = fmax(v15, 0.0);
      if (v15 <= 1.0)
        v17 = v16;
      else
        v17 = 1.0;
      *((_BYTE *)a2[2] + 1) = llround(**v13 + v17 * *v13[1]);
      a4 += a1[6];
      a5 = (float *)((char *)a5 + a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v18 = **a3;
  v20 = *v18;
  v19 = v18[1];
  v21 = (*a4 - **v20) * *v20[1];
  v22 = fmax(v21, 0.0);
  if (v21 <= 1.0)
    v23 = v22;
  else
    v23 = 1.0;
  *(_BYTE *)a5 = llround(**v19 + v23 * *v19[1]);
  v24 = **a3;
  v26 = *v24;
  v25 = v24[1];
  v27 = ((*a2)[1] - **v26) * *v26[1];
  v28 = fmax(v27, 0.0);
  if (v27 <= 1.0)
    v29 = v28;
  else
    v29 = 1.0;
  result = **v25 + v29 * *v25[1];
  *((_BYTE *)a2[2] + 1) = llround(result);
  return result;
}

uint64_t sub_22438BAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = &v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(float **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = HIDWORD(v56);
        v43 = 4 * v56;
        do
        {
          sub_22438BEE0(&v50, (float **)v57, &v49, v29, v35);
          v35 = (float *)((char *)v35 + v42);
          v29 = (float *)((char *)v29 + v43);
          --v41;
        }
        while (v41);
      }
      sub_22438BEE0(&v50, (float **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22438BE7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22438BEE0(_DWORD *result, float **a2, uint64_t **a3, float *a4, float *a5)
{
  unsigned int i;
  _BYTE *v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  float v10;
  uint64_t v11;
  float v12;
  float *v13;
  uint64_t v14;
  float v15;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    for (i = 0; i < result[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (*a4 >= **(float **)v7)
      {
        if (v8 <= **(float **)(v7 + 16))
          LODWORD(v7) = (int)v8;
        else
          LOBYTE(v7) = **(_BYTE **)(v7 + 24);
      }
      else
      {
        LOBYTE(v7) = **(_BYTE **)(v7 + 8);
      }
      *(_BYTE *)a5 = v7;
      v9 = **a3;
      v10 = (*a2)[1];
      if (v10 < **(float **)v9)
      {
        v6 = *(_BYTE **)(v9 + 8);
      }
      else
      {
        if (v10 <= **(float **)(v9 + 16))
        {
          LODWORD(v6) = (int)v10;
          goto LABEL_5;
        }
        v6 = *(_BYTE **)(v9 + 24);
      }
      LOBYTE(v6) = *v6;
LABEL_5:
      *((_BYTE *)a2[2] + 1) = (_BYTE)v6;
      a4 += result[6];
      a5 = (float *)((char *)a5 + result[7]);
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v11 = **a3;
  v12 = *a4;
  if (*a4 >= **(float **)v11)
  {
    if (v12 <= **(float **)(v11 + 16))
      LODWORD(v11) = (int)v12;
    else
      LOBYTE(v11) = **(_BYTE **)(v11 + 24);
  }
  else
  {
    LOBYTE(v11) = **(_BYTE **)(v11 + 8);
  }
  *(_BYTE *)a5 = v11;
  v13 = a2[2];
  v14 = **a3;
  v15 = (*a2)[1];
  if (v15 >= **(float **)v14)
  {
    if (v15 <= **(float **)(v14 + 16))
      *((_BYTE *)v13 + 1) = (int)v15;
    else
      *((_BYTE *)v13 + 1) = **(_BYTE **)(v14 + 24);
  }
  else
  {
    *((_BYTE *)v13 + 1) = **(_BYTE **)(v14 + 8);
  }
  return result;
}

uint64_t sub_22438C06C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  float v5;
  double v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  int v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  float *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  float *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  double v60;
  double v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  double ****v67;
  uint64_t v68;
  int v69;
  unint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  unint64_t v74;
  _OWORD v75[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -3.40282347e38;
    if (*(double *)a2 >= -3.40282347e38)
      v4 = *(double *)a2;
    v5 = v4;
    v6 = 3.40282347e38;
    if (*(double *)(a2 + 8) <= 3.40282347e38)
      v6 = *(double *)(a2 + 8);
    v7 = v6;
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v13 = -65536;
    goto LABEL_14;
  }
  v7 = 1.0;
  v5 = 0.0;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = *(double *)(a2 + 24);
  if (v10 < 0.0)
    v10 = 0.0;
  v11 = (int)v10;
  v12 = 65535.0;
  if (*(double *)(a2 + 32) <= 65535.0)
    v12 = *(double *)(a2 + 32);
  v13 = v11 | ((int)v12 << 16);
LABEL_14:
  v14 = (unsigned __int16)v13;
  v15 = HIWORD(v13);
  if (v5 == (float)v14 && v7 == (float)v15)
    return sub_22438C670(v9, v8);
  v63 = v5;
  v61 = (double)v14;
  v62 = 1.0 / (v7 - v5);
  a3.n128_f64[0] = (double)v15 - (double)v14;
  v60 = a3.n128_f64[0];
  v59[0] = &v63;
  v59[1] = &v62;
  v58[0] = &v61;
  v58[1] = &v60;
  v57[0] = v59;
  v57[1] = v58;
  v17 = *(_QWORD *)(v9 + 8);
  if (!v17)
    goto LABEL_35;
  v18 = *(std::__shared_weak_count **)(v9 + 16);
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(p_shared_owners);
    while (__stxr(v20 + 1, p_shared_owners));
    do
      v21 = __ldaxr(p_shared_owners);
    while (__stlxr(v21 - 1, p_shared_owners));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
    v17 = *(_QWORD *)(v9 + 8);
    v22 = *(std::__shared_weak_count **)(v9 + 16);
    if (v22)
    {
      v23 = (unint64_t *)&v22->__shared_owners_;
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      do
        v25 = __ldaxr(v23);
      while (__stlxr(v25 - 1, v23));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v17 + 96))(&v65, v17, 0);
    v26 = *(_QWORD *)(v8 + 8);
    if (!v26)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v65 = 0;
    v26 = *(_QWORD *)(v8 + 8);
    if (!v26)
      goto LABEL_51;
  }
  v28 = *(std::__shared_weak_count **)(v8 + 16);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
    v26 = *(_QWORD *)(v8 + 8);
    v32 = *(std::__shared_weak_count **)(v8 + 16);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_51:
    v64 = 0;
    v66 = v57;
    v36 = *(_DWORD *)(v9 + 32);
    if (v36)
      goto LABEL_52;
    goto LABEL_76;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v26 + 96))(&v64, v26, 1);
  v66 = v57;
  v36 = *(_DWORD *)(v9 + 32);
  if (v36)
  {
LABEL_52:
    v37 = *(_DWORD *)(v9 + 36);
    if (v37)
    {
      v38 = *(_DWORD *)(v9 + 40);
      if (v38)
      {
        v67 = (double ****)&v66;
        v68 = 0;
        v69 = v36 - 1;
        v39 = *(unsigned int *)(v9 + 48);
        v40 = *(unsigned int *)(v8 + 48);
        v70 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v71 = v37 - 1;
        v72 = v39 | (v40 << 32);
        v73 = v38 - 1;
        v74 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v41 = *(float **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v41)
        {
          v42 = *(_QWORD *)(v9 + 8);
          v43 = *(std::__shared_weak_count **)(v9 + 16);
          if (v43)
          {
            v44 = (unint64_t *)&v43->__shared_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            do
              v46 = __ldaxr(v44);
            while (__stlxr(v46 - 1, v44));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v42 + 88))(v42, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v41 = *(float **)(v9 + 24);
        }
        v47 = *(float **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v47)
        {
          v48 = *(_QWORD *)(v8 + 8);
          v49 = *(std::__shared_weak_count **)(v8 + 16);
          if (v49)
          {
            v50 = (unint64_t *)&v49->__shared_owners_;
            do
              v51 = __ldxr(v50);
            while (__stxr(v51 + 1, v50));
            do
              v52 = __ldaxr(v50);
            while (__stlxr(v52 - 1, v50));
            if (!v52)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v49);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v48 + 88))(v48, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v47 = *(float **)(v8 + 24);
        }
        memset(v75, 0, sizeof(v75));
        v53 = v73;
        if (v73)
        {
          v54 = 4 * v74;
          v55 = 2 * HIDWORD(v74);
          do
          {
            sub_22438CB08(&v68, (float **)v75, &v67, v41, v47);
            v41 = (float *)((char *)v41 + v54);
            v47 = (float *)((char *)v47 + v55);
            --v53;
          }
          while (v53);
        }
        a3.n128_f64[0] = sub_22438CB08(&v68, (float **)v75, &v67, v41, v47);
      }
    }
  }
LABEL_76:
  v56 = v64;
  v64 = 0;
  if (v56)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v56 + 8))(v56, a3);
  result = v65;
  v65 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22438C53C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22438C5A0(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  _QWORD v11[4];
  uint64_t v12;
  __int16 v13;
  __int16 v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v14 = v8;
    v13 = (int)v9;
    *(float *)&v12 = (float)(int)v9;
    *((float *)&v12 + 1) = (float)v8;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 1199570688;
  }
  v11[0] = (char *)&v12 + 4;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_22438CC1C(v4, v5, (uint64_t)v11);
}

uint64_t sub_22438C664(uint64_t **a1)
{
  return sub_22438C670(**a1, (*a1)[1]);
}

uint64_t sub_22438C670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  float *v45;
  _WORD *v46;
  _WORD *v47;
  float *v48;
  int v49;
  float v50;
  float v51;
  float v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v56 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v55, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v56, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v55 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(float **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 4 * v25;
      v42 = 2 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = (int)*v28;
            v51 = v28[1];
            v28 += v24;
            v34[1] = (int)v51;
            v34 += v26;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v28 + 1;
          v46 = v34 + 1;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v22 - 1;
            do
            {
              *(v47 - 1) = (int)*(v48 - 1);
              v50 = *v48;
              v48 = (float *)((char *)v48 + v41);
              *v47 = (int)v50;
              v47 = (_WORD *)((char *)v47 + v42);
              --v49;
            }
            while (v49);
            *(v47 - 1) = (int)*(v48 - 1);
            *v47 = (int)*v48;
            v28 += v24;
            v34 += v26;
            ++v44;
            v45 += v24;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = (int)*v28;
          v52 = v28[1];
          v28 = (float *)((char *)v28 + v41);
          v34[1] = (int)v52;
          v34 = (_WORD *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      *v34 = (int)*v28;
      v34[1] = (int)v28[1];
    }
  }
LABEL_65:
  v53 = v55;
  v55 = 0;
  if (v53)
    (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  result = v56;
  v56 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22438CAA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22438CB08(_DWORD *a1, float **a2, double *****a3, float *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  BOOL v16;
  double v17;
  double v18;
  __int16 v19;
  double v20;
  float v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 4 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      v15 = v10 * (*a4 - v9);
      v16 = v15 <= 1.0;
      v17 = fmax(v15, 0.0);
      if (!v16)
        v17 = 1.0;
      v18 = v10 * (a4[1] - v9);
      v19 = llround(v11 + v12 * v17);
      v20 = fmax(v18, 0.0);
      if (v18 > 1.0)
        v20 = 1.0;
      *(_WORD *)a5 = v19;
      *((_WORD *)a5 + 1) = llround(v11 + v12 * v20);
      a4 = (float *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  v21 = a4[1];
  v22 = v10 * (*a4 - v9);
  v16 = v22 <= 1.0;
  v23 = fmax(v22, 0.0);
  if (!v16)
    v23 = 1.0;
  *(_WORD *)a5 = llround(v11 + v12 * v23);
  v24 = v10 * (v21 - v9);
  v25 = fmax(v24, 0.0);
  if (v24 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  result = v11 + v12 * v26;
  *((_WORD *)a5 + 1) = llround(result);
  return result;
}

uint64_t sub_22438CC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  float *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = &v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(float **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = 4 * v56;
        v43 = 2 * HIDWORD(v56);
        do
        {
          sub_22438D040(&v50, (float **)v57, &v49, v29, v35);
          v29 = (float *)((char *)v29 + v42);
          v35 = (float *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      sub_22438D040(&v50, (float **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22438CFDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22438D040(_DWORD *result, float **a2, uint64_t **a3, float *a4, float *a5)
{
  int v5;
  uint64_t v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  float v11;
  float v12;
  float v13;
  float v14;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = **(float **)v6;
  if (v5)
  {
    v8 = 4 * result[6];
    v9 = 2 * result[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (*a4 >= v7)
          break;
        *(_WORD *)a5 = **(_WORD **)(v6 + 8);
        v12 = a4[1];
        if (v12 >= v7)
          goto LABEL_12;
LABEL_3:
        v10 = *(_WORD **)(v6 + 8);
LABEL_4:
        *((_WORD *)a5 + 1) = *v10;
        a4 = (float *)((char *)a4 + v8);
        a5 = (float *)((char *)a5 + v9);
        if (!--v5)
          goto LABEL_15;
      }
      if (v11 <= **(float **)(v6 + 16))
      {
        *(_WORD *)a5 = (int)v11;
        v12 = a4[1];
        if (v12 >= v7)
          goto LABEL_12;
        goto LABEL_3;
      }
      *(_WORD *)a5 = **(_WORD **)(v6 + 24);
      v12 = a4[1];
      if (v12 < v7)
        goto LABEL_3;
LABEL_12:
      if (v12 > **(float **)(v6 + 16))
      {
        v10 = *(_WORD **)(v6 + 24);
        goto LABEL_4;
      }
      *((_WORD *)a5 + 1) = (int)v12;
      a4 = (float *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
LABEL_15:
  *a2 = a4;
  a2[2] = a5;
  v13 = *a4;
  if (*a4 >= v7)
  {
    if (v13 <= **(float **)(v6 + 16))
    {
      *(_WORD *)a5 = (int)v13;
      v14 = a4[1];
      if (v14 >= v7)
        goto LABEL_20;
    }
    else
    {
      *(_WORD *)a5 = **(_WORD **)(v6 + 24);
      v14 = a4[1];
      if (v14 >= v7)
        goto LABEL_20;
    }
LABEL_23:
    *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 8);
    return result;
  }
  *(_WORD *)a5 = **(_WORD **)(v6 + 8);
  v14 = a4[1];
  if (v14 < v7)
    goto LABEL_23;
LABEL_20:
  if (v14 <= **(float **)(v6 + 16))
    *((_WORD *)a5 + 1) = (int)v14;
  else
    *((_WORD *)a5 + 1) = **(_WORD **)(v6 + 24);
  return result;
}

uint64_t sub_22438D1CC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  float v5;
  double v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unsigned __int16 v15;
  double v16;
  unsigned int v18;
  double v24;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  float *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  float *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  unint64_t v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  double ****v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  _OWORD v85[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -3.40282347e38;
    if (*(double *)a2 >= -3.40282347e38)
      v4 = *(double *)a2;
    v5 = v4;
    v6 = 3.40282347e38;
    if (*(double *)(a2 + 8) <= 3.40282347e38)
      v6 = *(double *)(a2 + 8);
    v7 = v6;
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v18 = 1006632960;
    goto LABEL_14;
  }
  v7 = 1.0;
  v5 = 0.0;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v10 = *(double *)(a2 + 24);
  _S2 = v10;
  __asm { FCVT            H2, S2 }
  v15 = LOWORD(_S2);
  v16 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v16 = *(double *)(a2 + 32);
  _S2 = v16;
  __asm { FCVT            H2, S2 }
  v18 = v15 | (LOWORD(_S2) << 16);
LABEL_14:
  _H2 = v18;
  _S3 = HIWORD(v18);
  __asm
  {
    FCVT            S4, H2
    FCVT            S5, H3
  }
  if (v5 == _S4 && v7 == _S5)
    return sub_22438D80C(v9, v8);
  v73 = v5;
  v24 = 1.0 / (v7 - v5);
  __asm { FCVT            D0, H2 }
  v71 = _D0;
  v72 = v24;
  __asm { FCVT            D1, H3 }
  a3.n128_f64[0] = _D1 - _D0;
  v70 = a3.n128_u64[0];
  v69[0] = &v73;
  v69[1] = &v72;
  v68[0] = &v71;
  v68[1] = &v70;
  v67[0] = v69;
  v67[1] = v68;
  v27 = *(_QWORD *)(v9 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v9 + 16);
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldxr(p_shared_owners);
    while (__stxr(v30 + 1, p_shared_owners));
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
    v27 = *(_QWORD *)(v9 + 8);
    v32 = *(std::__shared_weak_count **)(v9 + 16);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v75, v27, 0);
    v36 = *(_QWORD *)(v8 + 8);
    if (!v36)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v75 = 0;
    v36 = *(_QWORD *)(v8 + 8);
    if (!v36)
      goto LABEL_51;
  }
  v38 = *(std::__shared_weak_count **)(v8 + 16);
  if (v38)
  {
    v39 = (unint64_t *)&v38->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
    v36 = *(_QWORD *)(v8 + 8);
    v42 = *(std::__shared_weak_count **)(v8 + 16);
    if (v42)
    {
      v43 = (unint64_t *)&v42->__shared_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      do
        v45 = __ldaxr(v43);
      while (__stlxr(v45 - 1, v43));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_51:
    v74 = 0;
    v76 = v67;
    v46 = *(_DWORD *)(v9 + 32);
    if (v46)
      goto LABEL_52;
    goto LABEL_76;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v74, v36, 1);
  v76 = v67;
  v46 = *(_DWORD *)(v9 + 32);
  if (v46)
  {
LABEL_52:
    v47 = *(_DWORD *)(v9 + 36);
    if (v47)
    {
      v48 = *(_DWORD *)(v9 + 40);
      if (v48)
      {
        v77 = (double ****)&v76;
        v78 = 0;
        v79 = v46 - 1;
        v49 = *(unsigned int *)(v9 + 48);
        v50 = *(unsigned int *)(v8 + 48);
        v80 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v81 = v47 - 1;
        v82 = v49 | (v50 << 32);
        v83 = v48 - 1;
        v84 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v51 = *(float **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v51)
        {
          v52 = *(_QWORD *)(v9 + 8);
          v53 = *(std::__shared_weak_count **)(v9 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(float **)(v9 + 24);
        }
        v57 = *(float **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v57)
        {
          v58 = *(_QWORD *)(v8 + 8);
          v59 = *(std::__shared_weak_count **)(v8 + 16);
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldxr(v60);
            while (__stxr(v61 + 1, v60));
            do
              v62 = __ldaxr(v60);
            while (__stlxr(v62 - 1, v60));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v57 = *(float **)(v8 + 24);
        }
        memset(v85, 0, sizeof(v85));
        v63 = v83;
        if (v83)
        {
          v64 = 4 * v84;
          v65 = 2 * HIDWORD(v84);
          do
          {
            sub_22438DCA4(&v78, (float **)v85, &v77, v51, v57);
            v51 = (float *)((char *)v51 + v64);
            v57 = (float *)((char *)v57 + v65);
            --v63;
          }
          while (v63);
        }
        a3.n128_u64[0] = sub_22438DCA4(&v78, (float **)v85, &v77, v51, v57);
      }
    }
  }
LABEL_76:
  v66 = v74;
  v74 = 0;
  if (v66)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v66 + 8))(v66, a3);
  result = v75;
  v75 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22438D6B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22438D71C(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v14;
  _QWORD v18[4];
  unsigned __int32 v19;
  int v20;
  __int16 v21;
  __int16 v22;

  v4 = *a1;
  v5 = **a1;
  v6 = v4[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    _Q0.n128_u64[0] = *(_QWORD *)a2;
    if (!*(_BYTE *)(a2 + 8))
      _Q0.n128_f64[0] = -65504.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65504.0;
    if (_Q0.n128_f64[0] < -65504.0)
      _Q0.n128_f64[0] = -65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    if (v7 <= 65504.0)
      v14 = v7;
    else
      v14 = 65504.0;
    _S1 = v14;
    v22 = _H0;
    __asm { FCVT            H1, S1 }
    v21 = LOWORD(_S1);
    __asm
    {
      FCVT            S2, H0
      FCVT            S0, H1
    }
    v19 = _Q0.n128_u32[0];
    v20 = _S2;
  }
  else
  {
    v22 = -1025;
    v21 = 31743;
    v20 = -947920896;
    v19 = 1199562752;
  }
  v18[0] = &v20;
  v18[1] = &v22;
  v18[2] = &v19;
  v18[3] = &v21;
  return sub_22438DE58(v5, v6, (uint64_t)v18, _Q0);
}

uint64_t sub_22438D800(uint64_t **a1)
{
  return sub_22438D80C(**a1, (*a1)[1]);
}

uint64_t sub_22438D80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int *v45;
  _WORD *v46;
  _WORD *v47;
  int *v48;
  int v49;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v67 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v66, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v67, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v66 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(int **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(int **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 4 * v25;
      v42 = 2 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _S0 = *v28;
            __asm { FCVT            H0, S0 }
            *v34 = _S0;
            _S0 = v28[1];
            __asm { FCVT            H0, S0 }
            v34[1] = _S0;
            v28 += v24;
            v34 += v26;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v28 + 1;
          v46 = v34 + 1;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v22 - 1;
            do
            {
              _S0 = *(v48 - 1);
              __asm { FCVT            H0, S0 }
              *(v47 - 1) = _S0;
              _S0 = *v48;
              __asm { FCVT            H0, S0 }
              *v47 = _S0;
              v48 = (int *)((char *)v48 + v41);
              v47 = (_WORD *)((char *)v47 + v42);
              --v49;
            }
            while (v49);
            _S0 = *(v48 - 1);
            __asm { FCVT            H0, S0 }
            *(v47 - 1) = _S0;
            _S0 = *v48;
            __asm { FCVT            H0, S0 }
            *v47 = _S0;
            v28 += v24;
            v34 += v26;
            ++v44;
            v45 += v24;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _S0 = *v28;
          __asm { FCVT            H0, S0 }
          *v34 = _S0;
          _S0 = v28[1];
          __asm { FCVT            H0, S0 }
          v34[1] = _S0;
          v28 = (int *)((char *)v28 + v41);
          v34 = (_WORD *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      _S0 = *v28;
      __asm { FCVT            H0, S0 }
      *v34 = _S0;
      _S0 = v28[1];
      __asm { FCVT            H0, S0 }
      v34[1] = _S0;
    }
  }
LABEL_65:
  v64 = v66;
  v66 = 0;
  if (v64)
    (*(void (**)(uint64_t))(*(_QWORD *)v64 + 8))(v64);
  result = v67;
  v67 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22438DC40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_22438DCA4@<H0>(_DWORD *a1@<X0>, float **a2@<X1>, double *****a3@<X2>, float *a4@<X3>, float *a5@<X4>)
{
  unsigned int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double ***v17;
  double **v18;
  double **v19;
  double v20;
  double v21;
  double v22;
  double ***v24;
  double **v25;
  double **v26;
  double v27;
  double v28;
  double v29;
  double ***v31;
  double **v32;
  double **v33;
  double v34;
  double v35;
  double v36;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v6 = **a3;
      v8 = *v6;
      v7 = v6[1];
      v9 = (*a4 - **v8) * *v8[1];
      v10 = fmax(v9, 0.0);
      if (v9 <= 1.0)
        v11 = v10;
      else
        v11 = 1.0;
      _S2 = **v7 + v11 * *v7[1];
      __asm { FCVT            H2, S2 }
      *(_WORD *)a5 = LOWORD(_S2);
      v17 = **a3;
      v19 = *v17;
      v18 = v17[1];
      v20 = ((*a2)[1] - **v19) * *v19[1];
      v21 = fmax(v20, 0.0);
      if (v20 <= 1.0)
        v22 = v21;
      else
        v22 = 1.0;
      _S2 = **v18 + v22 * *v18[1];
      __asm { FCVT            H2, S2 }
      *((_WORD *)a2[2] + 1) = LOWORD(_S2);
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v24 = **a3;
  v26 = *v24;
  v25 = v24[1];
  v27 = (*a4 - **v26) * *v26[1];
  v28 = fmax(v27, 0.0);
  if (v27 <= 1.0)
    v29 = v28;
  else
    v29 = 1.0;
  _S0 = **v25 + v29 * *v25[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)a5 = LOWORD(_S0);
  v31 = **a3;
  v33 = *v31;
  v32 = v31[1];
  v34 = ((*a2)[1] - **v33) * *v33[1];
  v35 = fmax(v34, 0.0);
  if (v34 <= 1.0)
    v36 = v35;
  else
    v36 = 1.0;
  _S0 = **v32 + v36 * *v32[1];
  __asm { FCVT            H0, S0 }
  *((_WORD *)a2[2] + 1) = result;
  return result;
}

uint64_t sub_22438DE58(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  float *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  float *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  _OWORD v58[2];

  v7 = *(_QWORD *)(a1 + 8);
  if (!v7)
    goto LABEL_17;
  v8 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v8)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  v7 = *(_QWORD *)(a1 + 8);
  v12 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v12)
    goto LABEL_64;
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v48 = 0;
    v16 = *(_QWORD *)(a2 + 8);
    if (!v16)
      goto LABEL_33;
LABEL_18:
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v17)
      goto LABEL_29;
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    do
      v20 = __ldaxr(v18);
    while (__stlxr(v20 - 1, v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(a2 + 8);
    v21 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v21)
      goto LABEL_29;
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v47, v16, 1);
    v49 = a3;
    v25 = *(_DWORD *)(a1 + 32);
    if (!v25)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v7 + 96))(&v48, v7, 0);
  v16 = *(_QWORD *)(a2 + 8);
  if (v16)
    goto LABEL_18;
LABEL_33:
  v47 = 0;
  v49 = a3;
  v25 = *(_DWORD *)(a1 + 32);
  if (!v25)
    goto LABEL_58;
LABEL_34:
  v26 = *(_DWORD *)(a1 + 36);
  if (v26)
  {
    v27 = *(_DWORD *)(a1 + 40);
    if (v27)
    {
      v50 = &v49;
      v51 = 0;
      v52 = v25 - 1;
      v28 = *(unsigned int *)(a1 + 48);
      v29 = *(unsigned int *)(a2 + 48);
      v53 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v54 = v26 - 1;
      v55 = v28 | (v29 << 32);
      v56 = v27 - 1;
      v57 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v30 = *(float **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(float **)(a1 + 24);
      }
      v36 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(float **)(a2 + 24);
      }
      memset(v58, 0, sizeof(v58));
      v42 = v56;
      if (v56)
      {
        v43 = 4 * v57;
        v44 = 2 * HIDWORD(v57);
        do
        {
          sub_22438E27C(&v51, (float **)v58, &v50, v30, v36);
          v30 = (float *)((char *)v30 + v43);
          v36 = (float *)((char *)v36 + v44);
          --v42;
        }
        while (v42);
      }
      a4.n128_u64[0] = sub_22438E27C(&v51, (float **)v58, &v50, v30, v36);
    }
  }
LABEL_58:
  v45 = v47;
  v47 = 0;
  if (v45)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v45 + 8))(v45, a4);
  result = v48;
  v48 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a4);
  return result;
}

void sub_22438E218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_22438E27C@<H0>(_DWORD *a1@<X0>, float **a2@<X1>, uint64_t **a3@<X2>, float *a4@<X3>, float *a5@<X4>)
{
  unsigned int i;
  __int16 *v6;
  uint64_t v8;
  uint64_t v15;
  uint64_t v17;
  float *v20;
  uint64_t v21;
  __int16 *v23;
  __int16 result;
  __int16 *v25;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    for (i = 0; i < a1[5]; ++i)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      _S0 = *a4;
      if (*a4 >= **(float **)v8)
      {
        if (_S0 <= **(float **)(v8 + 16))
          __asm { FCVT            H0, S0 }
        else
          _H0 = **(_WORD **)(v8 + 24);
      }
      else
      {
        _H0 = **(_WORD **)(v8 + 8);
      }
      *(_WORD *)a5 = _H0;
      v15 = **a3;
      _S0 = (*a2)[1];
      if (_S0 < **(float **)v15)
      {
        v6 = *(__int16 **)(v15 + 8);
      }
      else
      {
        if (_S0 <= **(float **)(v15 + 16))
        {
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = *(__int16 **)(v15 + 24);
      }
      _H0 = *v6;
LABEL_5:
      *((_WORD *)a2[2] + 1) = _H0;
      a4 += a1[6];
      a5 = (float *)((char *)a5 + 2 * a1[7]);
    }
  }
  *a2 = a4;
  a2[2] = a5;
  v17 = **a3;
  _S0 = *a4;
  if (*a4 >= **(float **)v17)
  {
    if (_S0 <= **(float **)(v17 + 16))
      __asm { FCVT            H0, S0 }
    else
      _H0 = **(_WORD **)(v17 + 24);
  }
  else
  {
    _H0 = **(_WORD **)(v17 + 8);
  }
  *(_WORD *)a5 = _H0;
  v20 = a2[2];
  v21 = **a3;
  _S0 = (*a2)[1];
  if (_S0 >= **(float **)v21)
  {
    if (_S0 <= **(float **)(v21 + 16))
    {
      __asm { FCVT            H0, S0 }
      *((_WORD *)v20 + 1) = result;
    }
    else
    {
      v25 = *(__int16 **)(v21 + 24);
      result = *v25;
      *((_WORD *)v20 + 1) = *v25;
    }
  }
  else
  {
    v23 = *(__int16 **)(v21 + 8);
    result = *v23;
    *((_WORD *)v20 + 1) = *v23;
  }
  return result;
}

void sub_22438E408(int a1)
{
  __asm { BR              X10 }
}

void sub_22438E44C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, int a11, uint64_t a12, size_t __len, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22,void *__dst,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,uint64_t a31,int a32,int a33,int a34,uint64_t a35,uint64_t a36,__int16 a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *p_shared_owners;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  int v80;
  int v81;
  size_t v82;
  unsigned int v83;
  const void *v84;
  uint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  size_t v90;
  void *v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t v114;
  char *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  std::__shared_weak_count *v125;
  uint64_t v126;
  unsigned int v127;
  uint64_t v128;
  char *v129;
  __int16 v130;
  unint64_t *v131;
  unint64_t v132;
  int v133;
  size_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[2];
  uint64_t v138;
  std::__shared_weak_count *v139;
  unsigned int v140;
  char v141;
  char *v142;
  uint64_t v143;
  unsigned int v144;
  __int16 v145;

  sub_224390AAC(v61 - 168, *(_QWORD *)v60, *(_DWORD *)(v60 + 16), *(_QWORD *)v60 + 56);
  v137[1] = &off_24EC74980;
  sub_224390D7C(v61 - 168, (uint64_t)&v138);
  v62 = *(std::__shared_weak_count **)(v61 - 152);
  if (v62)
  {
    p_shared_owners = (unint64_t *)&v62->__shared_owners_;
    do
      v64 = __ldaxr(p_shared_owners);
    while (__stlxr(v64 - 1, p_shared_owners));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
    }
  }
  v65 = *(_QWORD *)v60;
  v66 = *(_QWORD *)(*(_QWORD *)v60 + 8);
  if (!v66)
    goto LABEL_22;
  v67 = *(std::__shared_weak_count **)(v65 + 16);
  if (v67)
  {
    v68 = (unint64_t *)&v67->__shared_owners_;
    do
      v69 = __ldxr(v68);
    while (__stxr(v69 + 1, v68));
    do
      v70 = __ldaxr(v68);
    while (__stlxr(v70 - 1, v68));
    if (!v70)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
    v66 = *(_QWORD *)(v65 + 8);
    v71 = *(std::__shared_weak_count **)(v65 + 16);
    if (v71)
    {
      v72 = (unint64_t *)&v71->__shared_owners_;
      do
        v73 = __ldxr(v72);
      while (__stxr(v73 + 1, v72));
      do
        v74 = __ldaxr(v72);
      while (__stlxr(v74 - 1, v72));
      if (!v74)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
  }
  if (*(_BYTE *)(v65 + 73))
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v66 + 96))(v137, v66, 0);
    v75 = v138;
    v76 = v139;
    if (!v139)
      goto LABEL_28;
  }
  else
  {
LABEL_22:
    v137[0] = 0;
    v75 = v138;
    v76 = v139;
    if (!v139)
      goto LABEL_28;
  }
  v77 = (unint64_t *)&v76->__shared_owners_;
  do
    v78 = __ldxr(v77);
  while (__stxr(v78 + 1, v77));
  do
    v79 = __ldaxr(v77);
  while (__stlxr(v79 - 1, v77));
  if (!v79)
  {
    ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
    std::__shared_weak_count::__release_weak(v76);
  }
LABEL_28:
  if (v75 && HIBYTE(v145))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v138 + 96))(&v135, v138, 1);
    v80 = *(_DWORD *)(v65 + 52);
    v81 = *(_DWORD *)(v65 + 56);
    v82 = (3 * v81);
    if (v80 != v144)
      goto LABEL_53;
  }
  else
  {
    v135 = 0;
    v80 = *(_DWORD *)(v65 + 52);
    v81 = *(_DWORD *)(v65 + 56);
    v82 = (3 * v81);
    if (v80 != v144)
      goto LABEL_53;
  }
  if (v80 == (_DWORD)v82)
  {
    v83 = *(_DWORD *)(v65 + 60);
    v84 = *(const void **)(v65 + 24);
    if (*(_BYTE *)(v65 + 72) && v84)
    {
      v85 = *(_QWORD *)(v65 + 8);
      v86 = *(std::__shared_weak_count **)(v65 + 16);
      if (v86)
      {
        v87 = (unint64_t *)&v86->__shared_owners_;
        do
          v88 = __ldxr(v87);
        while (__stxr(v88 + 1, v87));
        do
          v89 = __ldaxr(v87);
        while (__stlxr(v89 - 1, v87));
        if (!v89)
        {
          ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
          std::__shared_weak_count::__release_weak(v86);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v85 + 88))(v85, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v84 = *(const void **)(v65 + 24);
    }
    v90 = v83 * (unint64_t)v82;
    if (!v90
      || v84
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      v91 = v142;
      if ((_BYTE)v145 && v142)
      {
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v138 + 88))(v138, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
        v91 = v142;
      }
      if (!v90 || v91)
      {
        if (!v90)
          goto LABEL_121;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_52;
      }
      memmove(v91, v84, v90);
      goto LABEL_121;
    }
LABEL_52:
    abort();
  }
LABEL_53:
  v92 = *(_QWORD *)(v65 + 8);
  if (!v92)
    goto LABEL_69;
  v93 = *(std::__shared_weak_count **)(v65 + 16);
  if (v93)
  {
    v94 = (unint64_t *)&v93->__shared_owners_;
    do
      v95 = __ldxr(v94);
    while (__stxr(v95 + 1, v94));
    do
      v96 = __ldaxr(v94);
    while (__stlxr(v96 - 1, v94));
    if (!v96)
    {
      ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
      std::__shared_weak_count::__release_weak(v93);
    }
    v92 = *(_QWORD *)(v65 + 8);
    v97 = *(std::__shared_weak_count **)(v65 + 16);
    if (v97)
    {
      v98 = (unint64_t *)&v97->__shared_owners_;
      do
        v99 = __ldxr(v98);
      while (__stxr(v99 + 1, v98));
      do
        v100 = __ldaxr(v98);
      while (__stlxr(v100 - 1, v98));
      if (!v100)
      {
        ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
        std::__shared_weak_count::__release_weak(v97);
      }
    }
  }
  if (*(_BYTE *)(v65 + 73))
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v92 + 96))(v92, 0);
    v101 = v138;
    v102 = v139;
    v134 = v82;
    if (!v139)
      goto LABEL_75;
  }
  else
  {
LABEL_69:
    *(_QWORD *)(v61 - 168) = 0;
    v101 = v138;
    v102 = v139;
    v134 = v82;
    if (!v139)
      goto LABEL_75;
  }
  v103 = (unint64_t *)&v102->__shared_owners_;
  do
    v104 = __ldxr(v103);
  while (__stxr(v104 + 1, v103));
  do
    v105 = __ldaxr(v103);
  while (__stlxr(v105 - 1, v103));
  if (!v105)
  {
    ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
    std::__shared_weak_count::__release_weak(v102);
  }
LABEL_75:
  if (v101 && HIBYTE(v145))
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v138 + 96))(&v136, v138, 1);
  else
    v136 = 0;
  if (!*(_DWORD *)(v65 + 32))
    goto LABEL_117;
  if (!*(_DWORD *)(v65 + 36))
    goto LABEL_117;
  v106 = *(_DWORD *)(v65 + 40);
  if (!v106)
    goto LABEL_117;
  v107 = *(unsigned int *)(v65 + 52);
  v108 = v144;
  v109 = *(char **)(v65 + 24);
  if (*(_BYTE *)(v65 + 72) && v109)
  {
    v110 = *(_QWORD *)(v65 + 8);
    v111 = *(std::__shared_weak_count **)(v65 + 16);
    if (v111)
    {
      v112 = (unint64_t *)&v111->__shared_owners_;
      do
        v113 = __ldxr(v112);
      while (__stxr(v113 + 1, v112));
      do
        v114 = __ldaxr(v112);
      while (__stlxr(v114 - 1, v112));
      if (!v114)
      {
        ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
        std::__shared_weak_count::__release_weak(v111);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v110 + 88))(v110, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v109 = *(char **)(v65 + 24);
  }
  v115 = v142;
  if ((_BYTE)v145 && v142)
  {
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v138 + 88))(v138, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
    v115 = v142;
  }
  v116 = v106 - 1;
  if (v106 != 1)
  {
    if (v81)
    {
      v133 = v81;
      while ((v109
            || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))&& (v115|| !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)))
      {
        memmove(v115, v109, v134);
        v109 += v107;
        v115 += v108;
        if (!--v116)
          goto LABEL_106;
      }
LABEL_102:
      abort();
    }
    goto LABEL_117;
  }
  v133 = v81;
LABEL_106:
  if (v133 && !v109)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_102;
    }
    if (!v115)
      goto LABEL_113;
    goto LABEL_116;
  }
  if (v133 && !v115)
  {
LABEL_113:
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_102;
    }
    v115 = 0;
    goto LABEL_116;
  }
  if (v133)
LABEL_116:
    memmove(v115, v109, v134);
LABEL_117:
  v117 = v136;
  v136 = 0;
  if (v117)
    (*(void (**)(uint64_t))(*(_QWORD *)v117 + 8))(v117);
  v118 = *(_QWORD *)(v61 - 168);
  *(_QWORD *)(v61 - 168) = 0;
  if (v118)
    (*(void (**)(uint64_t))(*(_QWORD *)v118 + 8))(v118);
LABEL_121:
  v119 = v135;
  v135 = 0;
  if (v119)
    (*(void (**)(uint64_t))(*(_QWORD *)v119 + 8))(v119);
  v120 = v137[0];
  v137[0] = 0;
  if (v120)
    (*(void (**)(uint64_t))(*(_QWORD *)v120 + 8))(v120);
  *(_QWORD *)v59 = &off_24EC1F958;
  v121 = v138;
  v122 = v139;
  if (v139)
  {
    v123 = (unint64_t *)&v139->__shared_owners_;
    do
      v124 = __ldxr(v123);
    while (__stxr(v124 + 1, v123));
    v125 = v139;
  }
  else
  {
    v125 = 0;
  }
  v126 = v143;
  v127 = v144;
  if (v141)
    v128 = v140 | 0x100000000;
  else
    v128 = 0;
  v129 = v142;
  v130 = v145;
  *(_QWORD *)(v59 + 8) = v121;
  *(_QWORD *)(v59 + 16) = v122;
  *(_QWORD *)(v59 + 24) = v128;
  *(_QWORD *)(v59 + 32) = v126;
  *(_DWORD *)(v59 + 40) = v127;
  *(_QWORD *)(v59 + 48) = v129;
  *(_DWORD *)(v59 + 56) = 9;
  *(_WORD *)(v59 + 60) = v130;
  if (v125)
  {
    v131 = (unint64_t *)&v125->__shared_owners_;
    do
      v132 = __ldaxr(v131);
    while (__stlxr(v132 - 1, v131));
    if (!v132)
    {
      ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
      std::__shared_weak_count::__release_weak(v125);
    }
  }
}

void sub_22438F60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, std::string *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 16;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 15;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 14;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 13;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 4;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 2;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 3;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438F988()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_22438F9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 1;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 7;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 5;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 6;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 8;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 40;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 39;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 38;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 37;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 36;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 35;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 34;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22438FF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 33;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_224390008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 32;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_224390084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 31;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_224390100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 30;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22439017C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 29;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_2243901F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 28;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_224390274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 27;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_2243902F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 26;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22439036C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 25;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_2243903E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 24;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_224390464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 23;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_2243904E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 22;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_22439055C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 20;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_2243905D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 19;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a17);
  abort();
}

void sub_224390654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, _QWORD *a17, uint64_t a18, int a19, __int16 a20,char a21,unsigned __int8 a22)
{
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  *(_DWORD *)(v22 - 168) = 18;
  a14 = 9;
  sub_2243348B0("Conversion from image of format ", &a14, (uint64_t)" to ", (unsigned int *)(v22 - 168), (uint64_t)" not supported");
  if ((a22 & 0x80u) == 0)
    v23 = &a17;
  else
    v23 = a17;
  if ((a22 & 0x80u) == 0)
    v24 = a22;
  else
    v24 = a18;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v23, v24, (void (*)(void **))sub_22457406C);
  JUMPOUT(0x2243906CCLL);
}

void sub_2243906D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = *(_QWORD *)(v22 - 168);
  *(_QWORD *)(v22 - 168) = 0;
  if (v24)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
    v25 = a13;
    if (!a13)
    {
LABEL_3:
      v26 = a16;
      if (!a16)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v25 = a13;
    if (!a13)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
  v26 = a16;
  if (!a16)
  {
LABEL_4:
    sub_223167354(a11);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
  sub_223167354(a11);
  _Unwind_Resume(a1);
}

uint64_t sub_224390A44(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224390AAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(9);
  v34 = &off_24EC74980;
  sub_224390D7C((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = v41;
  if (v38)
    v27 = v37 | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 9;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_224390D24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224390D40(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_224390D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_224390D68@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

void sub_224390D7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_224390FEC(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 9);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224390ED4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224390EF8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224390F60()
{
  return 9;
}

uint64_t sub_224390F68(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224390F70(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224390FEC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 9)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224391214(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_2243911B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224391214(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22439128C();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22439128C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791A80);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791A80))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E3060();
    sub_224391490((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224391490((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791A68, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791A68, &dword_22314D000);
          __cxa_guard_release(&qword_255791A80);
          return &stru_255791A68;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791A68;
}

void sub_2243913DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791A80);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791A80);
  _Unwind_Resume(a1);
}

void sub_224391490(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22439152C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224391548(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2243915B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_224391838(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 10);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224391708(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22439172C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224391794()
{
  return 10;
}

uint64_t sub_22439179C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2243917A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2243917BC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_224391838(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 10)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224391A60(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224391A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224391A60(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224391AD8();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224391AD8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791AA0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791AA0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E3924();
    sub_224391CDC((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224391CDC((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791A88, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791A88, &dword_22314D000);
          __cxa_guard_release(&qword_255791AA0);
          return &stru_255791A88;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791A88;
}

void sub_224391C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791AA0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791AA0);
  _Unwind_Resume(a1);
}

void sub_224391CDC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224391D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224391D94(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  int v17;
  double v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t result;
  double v22;
  double v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  _WORD *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  double v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  double v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  double ****v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  _OWORD v82[2];

  v9 = *a1;
  v10 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a2 + 16))
  {
    v11 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v11 = 0.0;
    v10 = (int)v11;
    v12 = 255.0;
    if (*(double *)(a2 + 8) <= 255.0)
      v12 = *(double *)(a2 + 8);
    v13 = (int)v12;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v16 = *(double *)(a2 + 24);
      if (v16 < 0.0)
        v16 = 0.0;
      v17 = (int)v16;
      v18 = 65535.0;
      if (*(double *)(a2 + 32) <= 65535.0)
        v18 = *(double *)(a2 + 32);
      v19 = v17 | ((int)v18 << 16);
      v20 = HIWORD(v19);
      if (v10 != (unsigned __int16)v19)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  LOWORD(v19) = 0;
  v20 = 0xFFFF;
  if (v10)
    goto LABEL_17;
LABEL_15:
  if (v20 == v13)
    return sub_2243927A8(v15, v14);
LABEL_17:
  v70 = (double)v10;
  v22 = 1.0 / ((double)v13 - (double)v10);
  v68 = (double)(unsigned __int16)v19;
  v69 = v22;
  v23 = (double)v20;
  a3.n128_f64[0] = (double)v20 - v68;
  v67 = a3.n128_f64[0];
  v66[0] = &v70;
  v66[1] = &v69;
  v65[0] = &v68;
  v65[1] = &v67;
  v64[0] = v66;
  v64[1] = v65;
  v24 = *(_QWORD *)(v15 + 8);
  if (!v24)
    goto LABEL_33;
  v25 = *(std::__shared_weak_count **)(v15 + 16);
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    v24 = *(_QWORD *)(v15 + 8);
    v29 = *(std::__shared_weak_count **)(v15 + 16);
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      do
        v32 = __ldaxr(v30);
      while (__stlxr(v32 - 1, v30));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  if (*(_BYTE *)(v15 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v24 + 96))(&v72, v24, 0);
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v72 = 0;
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_49;
  }
  v34 = *(std::__shared_weak_count **)(v14 + 16);
  if (v34)
  {
    v35 = (unint64_t *)&v34->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    do
      v37 = __ldaxr(v35);
    while (__stlxr(v37 - 1, v35));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
    v33 = *(_QWORD *)(v14 + 8);
    v38 = *(std::__shared_weak_count **)(v14 + 16);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldxr(v39);
      while (__stxr(v40 + 1, v39));
      do
        v41 = __ldaxr(v39);
      while (__stlxr(v41 - 1, v39));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
  }
  if (!*(_BYTE *)(v14 + 73))
  {
LABEL_49:
    v71 = 0;
    v73 = v64;
    v42 = *(_DWORD *)(v15 + 32);
    if (v42)
      goto LABEL_50;
    goto LABEL_74;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v33 + 96))(&v71, v33, 1);
  v73 = v64;
  v42 = *(_DWORD *)(v15 + 32);
  if (v42)
  {
LABEL_50:
    v43 = *(_DWORD *)(v15 + 36);
    if (v43)
    {
      v44 = *(_DWORD *)(v15 + 40);
      if (v44)
      {
        v74 = (double ****)&v73;
        v75 = 0;
        v76 = v42 - 1;
        v45 = *(unsigned int *)(v15 + 48);
        v46 = *(unsigned int *)(v14 + 48);
        v77 = *(unsigned int *)(v15 + 44) | ((unint64_t)*(unsigned int *)(v14 + 44) << 32);
        v78 = v43 - 1;
        v79 = v45 | (v46 << 32);
        v80 = v44 - 1;
        v81 = *(unsigned int *)(v15 + 52) | ((unint64_t)*(unsigned int *)(v14 + 52) << 32);
        v47 = *(_BYTE **)(v15 + 24);
        if (*(_BYTE *)(v15 + 72) && v47)
        {
          v48 = *(_QWORD *)(v15 + 8);
          v49 = *(std::__shared_weak_count **)(v15 + 16);
          if (v49)
          {
            v50 = (unint64_t *)&v49->__shared_owners_;
            do
              v51 = __ldxr(v50);
            while (__stxr(v51 + 1, v50));
            do
              v52 = __ldaxr(v50);
            while (__stlxr(v52 - 1, v50));
            if (!v52)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v49);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v48 + 88))(v48, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v47 = *(_BYTE **)(v15 + 24);
        }
        v53 = *(_WORD **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v53)
        {
          v54 = *(_QWORD *)(v14 + 8);
          v55 = *(std::__shared_weak_count **)(v14 + 16);
          if (v55)
          {
            v56 = (unint64_t *)&v55->__shared_owners_;
            do
              v57 = __ldxr(v56);
            while (__stxr(v57 + 1, v56));
            do
              v58 = __ldaxr(v56);
            while (__stlxr(v58 - 1, v56));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
              std::__shared_weak_count::__release_weak(v55);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v54 + 88))(v54, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v53 = *(_WORD **)(v14 + 24);
        }
        v59 = 0.0;
        memset(v82, 0, sizeof(v82));
        v60 = v80;
        if (v80)
        {
          v61 = v81;
          v62 = 2 * HIDWORD(v81);
          do
          {
            v59 = sub_224392C38(&v75, v82, &v74, v47, v53, v59, v23, v22, a6, a7, a8, a9);
            v47 += v61;
            v53 = (_WORD *)((char *)v53 + v62);
            --v60;
          }
          while (v60);
        }
        a3.n128_f64[0] = sub_224392C38(&v75, v82, &v74, v47, v53, v59, v23, v22, a6, a7, a8, a9);
      }
    }
  }
LABEL_74:
  v63 = v71;
  v71 = 0;
  if (v63)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v63 + 8))(v63, a3);
  result = v72;
  v72 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22439225C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243922C0(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  int v6;
  double v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  _WORD *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[4];
  char v49;
  char v50;
  __int16 v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unsigned __int8 ***v56;
  unsigned __int8 *v57;
  _BYTE v58[12];
  int v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  _OWORD v63[2];

  v3 = **a1;
  v2 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    LOWORD(v63[0]) = 0;
    LOBYTE(v48[0]) = 0;
LABEL_30:
    v57 = (unsigned __int8 *)v48;
    *(_QWORD *)v58 = v63;
    return sub_224392F34(v3, v2, &v57);
  }
  v4 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v4 = 0.0;
  v5 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v5 = 65535.0;
  if (v4 < 0.0)
    v4 = 0.0;
  v6 = (int)v4;
  if (v5 <= 65535.0)
    v7 = v5;
  else
    v7 = 65535.0;
  if ((int)v7 > 0xFF)
  {
    LOWORD(v63[0]) = v6;
    LOBYTE(v48[0]) = v6;
    goto LABEL_30;
  }
  v52 = v6;
  v51 = (int)v7;
  v50 = v6;
  v49 = (int)v7;
  v48[0] = &v50;
  v48[1] = &v52;
  v48[2] = &v49;
  v48[3] = &v51;
  v8 = *(_QWORD *)(v3 + 8);
  if (!v8)
    goto LABEL_32;
  v9 = *(std::__shared_weak_count **)(v3 + 16);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
    v8 = *(_QWORD *)(v3 + 8);
    v13 = *(std::__shared_weak_count **)(v3 + 16);
    if (v13)
    {
      v14 = (unint64_t *)&v13->__shared_owners_;
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
      do
        v16 = __ldaxr(v14);
      while (__stlxr(v16 - 1, v14));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 96))(&v54, v8, 0);
    v17 = *(_QWORD *)(v2 + 8);
    if (!v17)
      goto LABEL_48;
  }
  else
  {
LABEL_32:
    v54 = 0;
    v17 = *(_QWORD *)(v2 + 8);
    if (!v17)
      goto LABEL_48;
  }
  v19 = *(std::__shared_weak_count **)(v2 + 16);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v17 = *(_QWORD *)(v2 + 8);
    v23 = *(std::__shared_weak_count **)(v2 + 16);
    if (v23)
    {
      v24 = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
      do
        v26 = __ldaxr(v24);
      while (__stlxr(v26 - 1, v24));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  if (!*(_BYTE *)(v2 + 73))
  {
LABEL_48:
    v53 = 0;
    v55 = v48;
    v27 = *(_DWORD *)(v3 + 32);
    if (v27)
      goto LABEL_49;
    goto LABEL_73;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v53, v17, 1);
  v55 = v48;
  v27 = *(_DWORD *)(v3 + 32);
  if (v27)
  {
LABEL_49:
    v28 = *(_DWORD *)(v3 + 36);
    if (v28)
    {
      v29 = *(_DWORD *)(v3 + 40);
      if (v29)
      {
        v56 = (unsigned __int8 ***)&v55;
        v57 = 0;
        *(_DWORD *)v58 = v27 - 1;
        v30 = *(unsigned int *)(v3 + 48);
        v31 = *(unsigned int *)(v2 + 48);
        *(_QWORD *)&v58[4] = *(unsigned int *)(v3 + 44) | ((unint64_t)*(unsigned int *)(v2 + 44) << 32);
        v59 = v28 - 1;
        v60 = v30 | (v31 << 32);
        v61 = v29 - 1;
        v62 = *(unsigned int *)(v3 + 52) | ((unint64_t)*(unsigned int *)(v2 + 52) << 32);
        v32 = *(unsigned __int8 **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v32)
        {
          v33 = *(_QWORD *)(v3 + 8);
          v34 = *(std::__shared_weak_count **)(v3 + 16);
          if (v34)
          {
            v35 = (unint64_t *)&v34->__shared_owners_;
            do
              v36 = __ldxr(v35);
            while (__stxr(v36 + 1, v35));
            do
              v37 = __ldaxr(v35);
            while (__stlxr(v37 - 1, v35));
            if (!v37)
            {
              ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
              std::__shared_weak_count::__release_weak(v34);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v33 + 88))(v33, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v32 = *(unsigned __int8 **)(v3 + 24);
        }
        v38 = *(_WORD **)(v2 + 24);
        if (*(_BYTE *)(v2 + 72) && v38)
        {
          v39 = *(_QWORD *)(v2 + 8);
          v40 = *(std::__shared_weak_count **)(v2 + 16);
          if (v40)
          {
            v41 = (unint64_t *)&v40->__shared_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
            do
              v43 = __ldaxr(v41);
            while (__stlxr(v43 - 1, v41));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
              std::__shared_weak_count::__release_weak(v40);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v39 + 88))(v39, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v38 = *(_WORD **)(v2 + 24);
        }
        memset(v63, 0, sizeof(v63));
        v44 = v61;
        if (v61)
        {
          v45 = v62;
          v46 = 2 * HIDWORD(v62);
          do
          {
            sub_224392DB0(&v57, v63, &v56, v32, v38);
            v32 += v45;
            v38 = (_WORD *)((char *)v38 + v46);
            --v44;
          }
          while (v44);
        }
        sub_224392DB0(&v57, v63, &v56, v32, v38);
      }
    }
  }
LABEL_73:
  v47 = v53;
  v53 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v54;
  v54 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224392738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (!a16)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22439279C(uint64_t **a1)
{
  return sub_2243927A8(**a1, (*a1)[1]);
}

uint64_t sub_2243927A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  _WORD *v46;
  int v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v51 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v50, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v51, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v50 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v24 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(unsigned __int8 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(unsigned __int8 **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = *v28;
            v34[1] = v28[1];
            v34[2] = v28[2];
            v28 += v25;
            v34 += v27;
            --v41;
          }
          while (v41);
LABEL_64:
          *v34 = *v28;
          v34[1] = v28[1];
          v34[2] = v28[2];
          goto LABEL_65;
        }
        v42 = 0;
        v43 = v34 + 2;
        v44 = v28 + 2;
        do
        {
          v45 = v44;
          v46 = v43;
          v47 = v22 - 1;
          do
          {
            *(v46 - 2) = *(v45 - 2);
            *(v46 - 1) = *(v45 - 1);
            *v46 = *v45;
            v46 += v26;
            v45 += v24;
            --v47;
          }
          while (v47);
          *(v46 - 2) = *(v45 - 2);
          *(v46 - 1) = *(v45 - 1);
          *v46 = *v45;
          v28 += v25;
          v34 += v27;
          ++v42;
          v43 += v27;
          v44 += v25;
        }
        while (v42 != v41);
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = *v28;
          v34[1] = v28[1];
          v34[2] = v28[2];
          v28 += v24;
          v34 += v26;
          --v40;
        }
        while (v40);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v48 = v50;
  v50 = 0;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  result = v51;
  v51 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224392BD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_224392C38(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, _WORD *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 2 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *a5 = llround(v25);
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v18 + v19 * v28;
      a5[1] = llround(v29);
      LOBYTE(v29) = a4[2];
      v30 = v17 * ((double)*(unint64_t *)&v29 - v16);
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      a12 = v18 + v19 * v32;
      a5[2] = llround(a12);
      a4 += v20;
      a5 = (_WORD *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v33 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  v36 = v18 + v19 * v35;
  *a5 = llround(v36);
  LOBYTE(v36) = a4[1];
  v37 = v17 * ((double)*(unint64_t *)&v36 - v16);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  v40 = v18 + v19 * v39;
  a5[1] = llround(v40);
  LOBYTE(v40) = a4[2];
  v41 = v17 * ((double)*(unint64_t *)&v40 - v16);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  result = v18 + v19 * v43;
  a5[2] = llround(result);
  return result;
}

_DWORD *sub_224392DB0(_DWORD *result, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, _WORD *a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned __int8 *v13;

  *a2 = a4;
  a2[2] = a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = result[6];
    v9 = 2 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LODWORD(v10) = *a4;
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_11;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_11:
      *a5 = (_WORD)v10;
      LODWORD(v10) = a4[1];
      if (v10 >= *v7)
      {
        if (v10 <= *v6[2])
          goto LABEL_16;
        v10 = v6[3];
      }
      else
      {
        v10 = v6[1];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_16:
      a5[1] = (_WORD)v10;
      LODWORD(v10) = a4[2];
      if (v10 < *v7)
      {
        v10 = v6[1];
      }
      else
      {
        if (v10 <= *v6[2])
          goto LABEL_5;
        v10 = v6[3];
      }
      LOWORD(v10) = *(_WORD *)v10;
LABEL_5:
      a5[2] = (_WORD)v10;
      a4 += v8;
      a5 = (_WORD *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  LODWORD(v11) = *a4;
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_24;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_24:
  *a5 = (_WORD)v11;
  LODWORD(v11) = a4[1];
  if (v11 >= *v7)
  {
    if (v11 <= *v6[2])
      goto LABEL_29;
    v11 = v6[3];
  }
  else
  {
    v11 = v6[1];
  }
  LOWORD(v11) = *(_WORD *)v11;
LABEL_29:
  a5[1] = (_WORD)v11;
  v12 = a4[2];
  if (v12 < *v7)
  {
    v13 = v6[1];
LABEL_33:
    LOWORD(v12) = *(_WORD *)v13;
    goto LABEL_34;
  }
  if (v12 > *v6[2])
  {
    v13 = v6[3];
    goto LABEL_33;
  }
LABEL_34:
  a5[2] = v12;
  return result;
}

uint64_t sub_224392F34(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _WORD *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  unsigned __int8 *v43;
  uint64_t v44;
  int v45;
  unsigned __int8 *v46;
  uint64_t v47;
  int v48;
  _WORD *v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  _WORD *v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned __int8 *v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_107;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_107;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_107:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v75 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v74, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_97;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v75, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v74 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_97;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v27 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(unsigned __int8 **)(a1 + 24);
      v73 = v28;
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(unsigned __int8 **)(a1 + 24);
        v28 = v73;
      }
      v36 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(_WORD **)(a2 + 24);
        v28 = v73;
      }
      v42 = v24 - 1;
      v43 = *a3;
      v44 = 2 * v28;
      v45 = v25 - 1;
      if (v25 != 1)
      {
        v46 = a3[1];
        v47 = 2 * v29;
        if (v24 != 1)
        {
          v48 = 0;
          v49 = v36 + 2;
          v50 = v30 + 2;
          while (1)
          {
            v51 = a3[1];
            v52 = v50;
            v53 = v49;
            v54 = v24 - 1;
            do
            {
              v55 = *(v52 - 2);
              if (v55 < *v43)
              {
                *(v53 - 2) = *(_WORD *)v51;
                v56 = *(v52 - 1);
                if (v56 < *v43)
                {
LABEL_65:
                  *(v53 - 1) = *(_WORD *)v51;
                  v57 = *v52;
                  if (v57 >= *v43)
                    goto LABEL_59;
                  goto LABEL_66;
                }
              }
              else
              {
                *(v53 - 2) = v55;
                v56 = *(v52 - 1);
                if (v56 < *v43)
                  goto LABEL_65;
              }
              *(v53 - 1) = v56;
              v57 = *v52;
              if (v57 >= *v43)
                goto LABEL_59;
LABEL_66:
              LOWORD(v57) = *(_WORD *)v51;
LABEL_59:
              *v53 = v57;
              v53 = (_WORD *)((char *)v53 + v44);
              v52 += v26;
              --v54;
            }
            while (v54);
            v58 = *(v52 - 2);
            if (v58 < *v43)
            {
              *(v53 - 2) = *(_WORD *)v46;
              v59 = *(v52 - 1);
              if (v59 < *v43)
                goto LABEL_72;
LABEL_69:
              *(v53 - 1) = v59;
              v60 = *v52;
              if (v60 < *v43)
LABEL_73:
                LOWORD(v60) = *(_WORD *)v46;
            }
            else
            {
              *(v53 - 2) = v58;
              v59 = *(v52 - 1);
              if (v59 >= *v43)
                goto LABEL_69;
LABEL_72:
              *(v53 - 1) = *(_WORD *)v46;
              v60 = *v52;
              if (v60 < *v43)
                goto LABEL_73;
            }
            *v53 = v60;
            v30 += v27;
            v36 += v29;
            ++v48;
            v49 = (_WORD *)((char *)v49 + v47);
            v50 += v27;
            if (v48 == v45)
              goto LABEL_82;
          }
        }
        do
        {
          v61 = *v30;
          if (v61 < *v43)
          {
            *v36 = *(_WORD *)v46;
            v62 = v30[1];
            if (v62 >= *v43)
            {
LABEL_77:
              v36[1] = v62;
              v63 = v30[2];
              if (v63 < *v43)
                goto LABEL_81;
              goto LABEL_74;
            }
          }
          else
          {
            *v36 = v61;
            v62 = v30[1];
            if (v62 >= *v43)
              goto LABEL_77;
          }
          v36[1] = *(_WORD *)v46;
          v63 = v30[2];
          if (v63 < *v43)
LABEL_81:
            LOWORD(v63) = *(_WORD *)v46;
LABEL_74:
          v36[2] = v63;
          v30 += v27;
          v36 = (_WORD *)((char *)v36 + v47);
          --v45;
        }
        while (v45);
      }
LABEL_82:
      if (v24 != 1)
      {
        v64 = a3[1];
        do
        {
          v65 = *v30;
          if (v65 < *v43)
          {
            *v36 = *(_WORD *)v64;
            v66 = v30[1];
            if (v66 >= *v43)
            {
LABEL_87:
              v36[1] = v66;
              v67 = v30[2];
              if (v67 < *v43)
                goto LABEL_91;
              goto LABEL_84;
            }
          }
          else
          {
            *v36 = v65;
            v66 = v30[1];
            if (v66 >= *v43)
              goto LABEL_87;
          }
          v36[1] = *(_WORD *)v64;
          v67 = v30[2];
          if (v67 < *v43)
LABEL_91:
            LOWORD(v67) = *(_WORD *)v64;
LABEL_84:
          v36[2] = v67;
          v30 += v26;
          v36 = (_WORD *)((char *)v36 + v44);
          --v42;
        }
        while (v42);
      }
      v68 = *v30;
      if (v68 < *v43)
      {
        *v36 = *(_WORD *)a3[1];
        v69 = v30[1];
        if (v69 >= *v43)
        {
LABEL_94:
          v36[1] = v69;
          v70 = v30[2];
          if (v70 >= *v43)
          {
LABEL_96:
            v36[2] = v70;
            goto LABEL_97;
          }
LABEL_95:
          LOWORD(v70) = *(_WORD *)a3[1];
          goto LABEL_96;
        }
      }
      else
      {
        *v36 = v68;
        v69 = v30[1];
        if (v69 >= *v43)
          goto LABEL_94;
      }
      v36[1] = *(_WORD *)a3[1];
      v70 = v30[2];
      if (v70 >= *v43)
        goto LABEL_96;
      goto LABEL_95;
    }
  }
LABEL_97:
  v71 = v74;
  v74 = 0;
  if (v71)
    (*(void (**)(uint64_t))(*(_QWORD *)v71 + 8))(v71);
  result = v75;
  v75 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224393568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

void sub_2243935CC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E3A1C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2243936B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_2243936D4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_22439373C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_2243939C4(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 11);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224393894(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2243938B8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_224393920()
{
  return 11;
}

uint64_t sub_224393928(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_224393930@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_224393948(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2243939C4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224393BEC(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224393B8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224393BEC(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_224393C64();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_224393C64()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791AC0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791AC0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E41E8();
    sub_224393E68((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224393E68((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791AA8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791AA8, &dword_22314D000);
          __cxa_guard_release(&qword_255791AC0);
          return &stru_255791AA8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791AA8;
}

void sub_224393DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791AC0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791AC0);
  _Unwind_Resume(a1);
}

void sub_224393E68(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224393F04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224393F20(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  unsigned int v4;
  double v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unsigned __int16 v15;
  double v16;
  unsigned int v18;
  double v24;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  _WORD *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  double v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  unint64_t v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  double ****v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  _OWORD v86[2];

  v3 = *a1;
  v4 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a2 + 16))
  {
    v5 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v5 = 0.0;
    v4 = (int)v5;
    v6 = 255.0;
    if (*(double *)(a2 + 8) <= 255.0)
      v6 = *(double *)(a2 + 8);
    v7 = (int)v6;
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v18 = 1006632960;
    goto LABEL_14;
  }
  v7 = 255;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v10 = *(double *)(a2 + 24);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v15 = LOWORD(_S0);
  v16 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v16 = *(double *)(a2 + 32);
  _S0 = v16;
  __asm { FCVT            H0, S0 }
  v18 = v15 | (LOWORD(_S0) << 16);
LABEL_14:
  _H0 = v18;
  _S1 = HIWORD(v18);
  __asm
  {
    FCVT            S3, H0
    FCVT            S3, H1
  }
  _ZF = _ZF && _S3 == (float)v7;
  if (_ZF)
    return sub_224395058(v9, v8, *(float *)&v18);
  v74 = (double)v4;
  v24 = 1.0 / ((double)v7 - (double)v4);
  __asm { FCVT            D0, H0 }
  v72 = _D0;
  v73 = v24;
  __asm { FCVT            D1, H1 }
  a3.n128_f64[0] = _D1 - _D0;
  v71 = a3.n128_u64[0];
  v70[0] = &v74;
  v70[1] = &v73;
  v69[0] = &v72;
  v69[1] = &v71;
  v68[0] = v70;
  v68[1] = v69;
  v27 = *(_QWORD *)(v9 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v28)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(p_shared_owners);
  while (__stxr(v30 + 1, p_shared_owners));
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
    std::__shared_weak_count::__release_weak(v28);
  }
  v27 = *(_QWORD *)(v9 + 8);
  v32 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v32)
    goto LABEL_82;
  v33 = (unint64_t *)&v32->__shared_owners_;
  do
    v34 = __ldxr(v33);
  while (__stxr(v34 + 1, v33));
  do
    v35 = __ldaxr(v33);
  while (__stlxr(v35 - 1, v33));
  if (v35)
  {
LABEL_82:
    if (*(_BYTE *)(v9 + 73))
      goto LABEL_31;
LABEL_35:
    v76 = 0;
    v36 = *(_QWORD *)(v8 + 8);
    if (!v36)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
  std::__shared_weak_count::__release_weak(v32);
  if (!*(_BYTE *)(v9 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v76, v27, 0);
  v36 = *(_QWORD *)(v8 + 8);
  if (!v36)
  {
LABEL_51:
    v75 = 0;
    v77 = v68;
    v46 = *(_DWORD *)(v9 + 32);
    if (v46)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v38 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v38)
    goto LABEL_47;
  v39 = (unint64_t *)&v38->__shared_owners_;
  do
    v40 = __ldxr(v39);
  while (__stxr(v40 + 1, v39));
  do
    v41 = __ldaxr(v39);
  while (__stlxr(v41 - 1, v39));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
  v36 = *(_QWORD *)(v8 + 8);
  v42 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v42)
    goto LABEL_47;
  v43 = (unint64_t *)&v42->__shared_owners_;
  do
    v44 = __ldxr(v43);
  while (__stxr(v44 + 1, v43));
  do
    v45 = __ldaxr(v43);
  while (__stlxr(v45 - 1, v43));
  if (!v45)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v75, v36, 1);
  v77 = v68;
  v46 = *(_DWORD *)(v9 + 32);
  if (v46)
  {
LABEL_52:
    v47 = *(_DWORD *)(v9 + 36);
    if (v47)
    {
      v48 = *(_DWORD *)(v9 + 40);
      if (v48)
      {
        v78 = (double ****)&v77;
        v79 = 0;
        v80 = v46 - 1;
        v49 = *(unsigned int *)(v9 + 48);
        v50 = *(unsigned int *)(v8 + 48);
        v81 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v82 = v47 - 1;
        v83 = v49 | (v50 << 32);
        v84 = v48 - 1;
        v85 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v51 = *(_BYTE **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v51)
        {
          v52 = *(_QWORD *)(v9 + 8);
          v53 = *(std::__shared_weak_count **)(v9 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(_BYTE **)(v9 + 24);
        }
        v57 = *(_WORD **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v57)
        {
          v58 = *(_QWORD *)(v8 + 8);
          v59 = *(std::__shared_weak_count **)(v8 + 16);
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldxr(v60);
            while (__stxr(v61 + 1, v60));
            do
              v62 = __ldaxr(v60);
            while (__stlxr(v62 - 1, v60));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v57 = *(_WORD **)(v8 + 24);
        }
        v63 = 0.0;
        memset(v86, 0, sizeof(v86));
        v64 = v84;
        if (v84)
        {
          v65 = v85;
          v66 = 2 * HIDWORD(v85);
          do
          {
            *(_QWORD *)&v63 = sub_22439555C(&v79, v86, &v78, v51, v57, v63, _D1, v24);
            v51 += v65;
            v57 = (_WORD *)((char *)v57 + v66);
            --v64;
          }
          while (v64);
        }
        a3.n128_u64[0] = sub_22439555C(&v79, v86, &v78, v51, v57, v63, _D1, v24);
      }
    }
  }
LABEL_76:
  v67 = v75;
  v75 = 0;
  if (v67)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v67 + 8))(v67, a3);
  result = v76;
  v76 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224394414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224394478(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t result;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  _WORD *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 *v79;
  uint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  unint64_t v84;
  _WORD *v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *p_shared_owners;
  unint64_t v97;
  unint64_t v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  unint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  unint64_t v111;
  int v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int8 *v117;
  uint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  _WORD *v123;
  uint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  unint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int16 *v133;
  __int16 *v134;
  char *v135;
  __int16 *v136;
  char v137;
  char v138;
  __int16 v139;
  __int16 v140;
  uint64_t v141;
  uint64_t v142;
  __int16 **v143;
  unsigned __int8 ***v144;
  uint64_t v145;
  int v146;
  unint64_t v147;
  int v148;
  uint64_t v149;
  int v150;
  unint64_t v151;
  __int128 v152;
  __int128 v153;

  v4 = **a1;
  v3 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
    return sub_224395058(**a1, v3, _Q0.n128_f32[0]);
  v5 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v5 = -65504.0;
  if (*(_BYTE *)(a2 + 24))
    v6 = *(double *)(a2 + 16);
  else
    v6 = 65504.0;
  if (v5 < -65504.0)
    v5 = -65504.0;
  _S0 = v5;
  __asm { FCVT            H2, S0 }
  if (v6 <= 65504.0)
    _Q0.n128_f64[0] = v6;
  else
    _Q0.n128_f64[0] = 65504.0;
  _S0 = _Q0.n128_f64[0];
  __asm
  {
    FCVT            H1, S0
    FCVT            S3, H2
    FCVT            S0, H1
  }
  if (_NF != _VF || _Q0.n128_f32[0] > 255.0)
  {
    if (_S3 < 0.0)
    {
      if (_Q0.n128_f32[0] <= 255.0)
      {
        v140 = _H1;
        LOBYTE(v139) = (int)_Q0.n128_f32[0];
        v133 = &v139;
        v134 = &v140;
        v94 = *(_QWORD *)(v4 + 8);
        if (!v94)
          goto LABEL_149;
        v95 = *(std::__shared_weak_count **)(v4 + 16);
        if (v95)
        {
          p_shared_owners = (unint64_t *)&v95->__shared_owners_;
          do
            v97 = __ldxr(p_shared_owners);
          while (__stxr(v97 + 1, p_shared_owners));
          do
            v98 = __ldaxr(p_shared_owners);
          while (__stlxr(v98 - 1, p_shared_owners));
          if (!v98)
          {
            ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
            std::__shared_weak_count::__release_weak(v95);
          }
          v94 = *(_QWORD *)(v4 + 8);
          v99 = *(std::__shared_weak_count **)(v4 + 16);
          if (v99)
          {
            v100 = (unint64_t *)&v99->__shared_owners_;
            do
              v101 = __ldxr(v100);
            while (__stxr(v101 + 1, v100));
            do
              v102 = __ldaxr(v100);
            while (__stlxr(v102 - 1, v100));
            if (!v102)
            {
              ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
              std::__shared_weak_count::__release_weak(v99);
            }
          }
        }
        if (*(_BYTE *)(v4 + 73))
          (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v94 + 96))(&v142, v94, 0);
        else
LABEL_149:
          v142 = 0;
        v103 = *(_QWORD *)(v3 + 8);
        if (!v103)
          goto LABEL_165;
        v104 = *(std::__shared_weak_count **)(v3 + 16);
        if (v104)
        {
          v105 = (unint64_t *)&v104->__shared_owners_;
          do
            v106 = __ldxr(v105);
          while (__stxr(v106 + 1, v105));
          do
            v107 = __ldaxr(v105);
          while (__stlxr(v107 - 1, v105));
          if (!v107)
          {
            ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
            std::__shared_weak_count::__release_weak(v104);
          }
          v103 = *(_QWORD *)(v3 + 8);
          v108 = *(std::__shared_weak_count **)(v3 + 16);
          if (v108)
          {
            v109 = (unint64_t *)&v108->__shared_owners_;
            do
              v110 = __ldxr(v109);
            while (__stxr(v110 + 1, v109));
            do
              v111 = __ldaxr(v109);
            while (__stlxr(v111 - 1, v109));
            if (!v111)
            {
              ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
              std::__shared_weak_count::__release_weak(v108);
            }
          }
        }
        if (*(_BYTE *)(v3 + 73))
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v103 + 96))(&v141, v103, 1);
        else
LABEL_165:
          v141 = 0;
        v143 = &v133;
        v112 = *(_DWORD *)(v4 + 32);
        if (v112)
        {
          v113 = *(_DWORD *)(v4 + 36);
          if (v113)
          {
            v114 = *(_DWORD *)(v4 + 40);
            if (v114)
            {
              v144 = (unsigned __int8 ***)&v143;
              v145 = 0;
              v146 = v112 - 1;
              v115 = *(unsigned int *)(v4 + 48);
              v116 = *(unsigned int *)(v3 + 48);
              v147 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
              v148 = v113 - 1;
              v149 = v115 | (v116 << 32);
              v150 = v114 - 1;
              v151 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
              v117 = *(unsigned __int8 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v117)
              {
                v118 = *(_QWORD *)(v4 + 8);
                v119 = *(std::__shared_weak_count **)(v4 + 16);
                if (v119)
                {
                  v120 = (unint64_t *)&v119->__shared_owners_;
                  do
                    v121 = __ldxr(v120);
                  while (__stxr(v121 + 1, v120));
                  do
                    v122 = __ldaxr(v120);
                  while (__stlxr(v122 - 1, v120));
                  if (!v122)
                  {
                    ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
                    std::__shared_weak_count::__release_weak(v119);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v118 + 88))(v118, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v117 = *(unsigned __int8 **)(v4 + 24);
              }
              v123 = *(_WORD **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v123)
              {
                v124 = *(_QWORD *)(v3 + 8);
                v125 = *(std::__shared_weak_count **)(v3 + 16);
                if (v125)
                {
                  v126 = (unint64_t *)&v125->__shared_owners_;
                  do
                    v127 = __ldxr(v126);
                  while (__stxr(v127 + 1, v126));
                  do
                    v128 = __ldaxr(v126);
                  while (__stlxr(v128 - 1, v126));
                  if (!v128)
                  {
                    ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
                    std::__shared_weak_count::__release_weak(v125);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v124 + 88))(v124, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v123 = *(_WORD **)(v3 + 24);
              }
              v153 = 0u;
              v152 = 0u;
              v129 = v150;
              if (v150)
              {
                v130 = v151;
                v131 = 2 * HIDWORD(v151);
                do
                {
                  sub_224395BB0(&v145, &v152, &v144, v117, v123);
                  v117 += v130;
                  v123 = (_WORD *)((char *)v123 + v131);
                  --v129;
                }
                while (v129);
              }
              _Q0.n128_u64[0] = sub_224395BB0(&v145, &v152, &v144, v117, v123);
            }
          }
        }
        goto LABEL_191;
      }
      return sub_224395058(**a1, v3, _Q0.n128_f32[0]);
    }
    v140 = _H2;
    LOBYTE(v139) = (int)_S3;
    v133 = &v139;
    v134 = &v140;
    v56 = *(_QWORD *)(v4 + 8);
    if (!v56)
      goto LABEL_93;
    v57 = *(std::__shared_weak_count **)(v4 + 16);
    if (v57)
    {
      v58 = (unint64_t *)&v57->__shared_owners_;
      do
        v59 = __ldxr(v58);
      while (__stxr(v59 + 1, v58));
      do
        v60 = __ldaxr(v58);
      while (__stlxr(v60 - 1, v58));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v57->__on_zero_shared)(v57, _Q0);
        std::__shared_weak_count::__release_weak(v57);
      }
      v56 = *(_QWORD *)(v4 + 8);
      v61 = *(std::__shared_weak_count **)(v4 + 16);
      if (v61)
      {
        v62 = (unint64_t *)&v61->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v61->__on_zero_shared)(v61, _Q0);
          std::__shared_weak_count::__release_weak(v61);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128))(*(_QWORD *)v56 + 96))(&v142, v56, 0, _Q0);
      v65 = *(_QWORD *)(v3 + 8);
      if (!v65)
        goto LABEL_108;
    }
    else
    {
LABEL_93:
      v142 = 0;
      v65 = *(_QWORD *)(v3 + 8);
      if (!v65)
        goto LABEL_108;
    }
    v66 = *(std::__shared_weak_count **)(v3 + 16);
    if (v66)
    {
      v67 = (unint64_t *)&v66->__shared_owners_;
      do
        v68 = __ldxr(v67);
      while (__stxr(v68 + 1, v67));
      do
        v69 = __ldaxr(v67);
      while (__stlxr(v69 - 1, v67));
      if (!v69)
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
      v65 = *(_QWORD *)(v3 + 8);
      v70 = *(std::__shared_weak_count **)(v3 + 16);
      if (v70)
      {
        v71 = (unint64_t *)&v70->__shared_owners_;
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 1, v71));
        do
          v73 = __ldaxr(v71);
        while (__stlxr(v73 - 1, v71));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v65 + 96))(&v141, v65, 1);
LABEL_109:
      v143 = &v133;
      v74 = *(_DWORD *)(v4 + 32);
      if (v74)
      {
        v75 = *(_DWORD *)(v4 + 36);
        if (v75)
        {
          v76 = *(_DWORD *)(v4 + 40);
          if (v76)
          {
            v144 = (unsigned __int8 ***)&v143;
            v145 = 0;
            v146 = v74 - 1;
            v77 = *(unsigned int *)(v4 + 48);
            v78 = *(unsigned int *)(v3 + 48);
            v147 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
            v148 = v75 - 1;
            v149 = v77 | (v78 << 32);
            v150 = v76 - 1;
            v151 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
            v79 = *(unsigned __int8 **)(v4 + 24);
            if (*(_BYTE *)(v4 + 72) && v79)
            {
              v80 = *(_QWORD *)(v4 + 8);
              v81 = *(std::__shared_weak_count **)(v4 + 16);
              if (v81)
              {
                v82 = (unint64_t *)&v81->__shared_owners_;
                do
                  v83 = __ldxr(v82);
                while (__stxr(v83 + 1, v82));
                do
                  v84 = __ldaxr(v82);
                while (__stlxr(v84 - 1, v82));
                if (!v84)
                {
                  ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
                  std::__shared_weak_count::__release_weak(v81);
                }
              }
              (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v80 + 88))(v80, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v79 = *(unsigned __int8 **)(v4 + 24);
            }
            v85 = *(_WORD **)(v3 + 24);
            if (*(_BYTE *)(v3 + 72) && v85)
            {
              v86 = *(_QWORD *)(v3 + 8);
              v87 = *(std::__shared_weak_count **)(v3 + 16);
              if (v87)
              {
                v88 = (unint64_t *)&v87->__shared_owners_;
                do
                  v89 = __ldxr(v88);
                while (__stxr(v89 + 1, v88));
                do
                  v90 = __ldaxr(v88);
                while (__stlxr(v90 - 1, v88));
                if (!v90)
                {
                  ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
                  std::__shared_weak_count::__release_weak(v87);
                }
              }
              (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v86 + 88))(v86, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v85 = *(_WORD **)(v3 + 24);
            }
            v153 = 0u;
            v152 = 0u;
            v91 = v150;
            if (v150)
            {
              v92 = v151;
              v93 = 2 * HIDWORD(v151);
              do
              {
                sub_224395A0C(&v145, &v152, &v144, v79, v85);
                v79 += v92;
                v85 = (_WORD *)((char *)v85 + v93);
                --v91;
              }
              while (v91);
            }
            _Q0.n128_u64[0] = sub_224395A0C(&v145, &v152, &v144, v79, v85);
          }
        }
      }
      goto LABEL_191;
    }
LABEL_108:
    v141 = 0;
    goto LABEL_109;
  }
  v140 = _H2;
  v139 = _H1;
  v138 = (int)_S3;
  v137 = (int)_Q0.n128_f32[0];
  v133 = (__int16 *)&v138;
  v134 = &v140;
  v135 = &v137;
  v136 = &v139;
  v18 = *(_QWORD *)(v4 + 8);
  if (!v18)
    goto LABEL_36;
  v19 = *(std::__shared_weak_count **)(v4 + 16);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
    v18 = *(_QWORD *)(v4 + 8);
    v23 = *(std::__shared_weak_count **)(v4 + 16);
    if (v23)
    {
      v24 = (unint64_t *)&v23->__shared_owners_;
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 1, v24));
      do
        v26 = __ldaxr(v24);
      while (__stlxr(v26 - 1, v24));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v18 + 96))(&v142, v18, 0);
    v27 = *(_QWORD *)(v3 + 8);
    if (!v27)
      goto LABEL_52;
  }
  else
  {
LABEL_36:
    v142 = 0;
    v27 = *(_QWORD *)(v3 + 8);
    if (!v27)
      goto LABEL_52;
  }
  v28 = *(std::__shared_weak_count **)(v3 + 16);
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
    v27 = *(_QWORD *)(v3 + 8);
    v32 = *(std::__shared_weak_count **)(v3 + 16);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      do
        v35 = __ldaxr(v33);
      while (__stlxr(v35 - 1, v33));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  if (!*(_BYTE *)(v3 + 73))
  {
LABEL_52:
    v141 = 0;
    v143 = &v133;
    v36 = *(_DWORD *)(v4 + 32);
    if (v36)
      goto LABEL_53;
    goto LABEL_191;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v141, v27, 1);
  v143 = &v133;
  v36 = *(_DWORD *)(v4 + 32);
  if (v36)
  {
LABEL_53:
    v37 = *(_DWORD *)(v4 + 36);
    if (v37)
    {
      v38 = *(_DWORD *)(v4 + 40);
      if (v38)
      {
        v144 = (unsigned __int8 ***)&v143;
        v145 = 0;
        v146 = v36 - 1;
        v39 = *(unsigned int *)(v4 + 48);
        v40 = *(unsigned int *)(v3 + 48);
        v147 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v148 = v37 - 1;
        v149 = v39 | (v40 << 32);
        v150 = v38 - 1;
        v151 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v41 = *(unsigned __int8 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v41)
        {
          v42 = *(_QWORD *)(v4 + 8);
          v43 = *(std::__shared_weak_count **)(v4 + 16);
          if (v43)
          {
            v44 = (unint64_t *)&v43->__shared_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            do
              v46 = __ldaxr(v44);
            while (__stlxr(v46 - 1, v44));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v42 + 88))(v42, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v41 = *(unsigned __int8 **)(v4 + 24);
        }
        v47 = *(_WORD **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v47)
        {
          v48 = *(_QWORD *)(v3 + 8);
          v49 = *(std::__shared_weak_count **)(v3 + 16);
          if (v49)
          {
            v50 = (unint64_t *)&v49->__shared_owners_;
            do
              v51 = __ldxr(v50);
            while (__stxr(v51 + 1, v50));
            do
              v52 = __ldaxr(v50);
            while (__stlxr(v52 - 1, v50));
            if (!v52)
            {
              ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
              std::__shared_weak_count::__release_weak(v49);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v48 + 88))(v48, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v47 = *(_WORD **)(v3 + 24);
        }
        v153 = 0u;
        v152 = 0u;
        v53 = v150;
        if (v150)
        {
          v54 = v151;
          v55 = 2 * HIDWORD(v151);
          do
          {
            sub_2243957C8(&v145, &v152, &v144, v41, v47);
            v41 += v54;
            v47 = (_WORD *)((char *)v47 + v55);
            --v53;
          }
          while (v53);
        }
        _Q0.n128_u64[0] = sub_2243957C8(&v145, &v152, &v144, v41, v47);
      }
    }
  }
LABEL_191:
  v132 = v141;
  v141 = 0;
  if (v132)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v132 + 8))(v132, _Q0);
  result = v142;
  v142 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
  return result;
}

void sub_224394FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (!a16)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22439504C(uint64_t **a1, float a2)
{
  return sub_224395058(**a1, (*a1)[1], a2);
}

uint64_t sub_224395058(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  _WORD *v45;
  _BYTE *v46;
  _BYTE *v47;
  _WORD *v48;
  int v49;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v68 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v67, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v68, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v67 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_BYTE **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v28;
      v43 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOBYTE(_S0) = *v29;
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v35 = _S0;
            LOBYTE(_S0) = v29[1];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[1] = _S0;
            LOBYTE(_S0) = v29[2];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[2] = LOWORD(_S0);
            v29 += v26;
            v35 += v27;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v35 + 2;
          v46 = v29 + 2;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v23 - 1;
            do
            {
              LOBYTE(_S0) = *(v47 - 2);
              *(float *)&_S0 = (float)LODWORD(_S0);
              __asm { FCVT            H0, S0 }
              *(v48 - 2) = _S0;
              LOBYTE(_S0) = *(v47 - 1);
              *(float *)&_S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *(v48 - 1) = _S0;
              LOBYTE(_S0) = *v47;
              _S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *v48 = LOWORD(_S0);
              v48 = (_WORD *)((char *)v48 + v42);
              v47 += v25;
              --v49;
            }
            while (v49);
            LOBYTE(_S0) = *(v47 - 2);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v48 - 2) = _S0;
            LOBYTE(_S0) = *(v47 - 1);
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *(v48 - 1) = _S0;
            LOBYTE(_S0) = *v47;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v48 = LOWORD(_S0);
            v29 += v26;
            v35 += v27;
            ++v44;
            v45 += v27;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOBYTE(_S0) = *v29;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = _S0;
          LOBYTE(_S0) = v29[1];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[1] = _S0;
          LOBYTE(_S0) = v29[2];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[2] = LOWORD(_S0);
          v29 += v25;
          v35 = (_WORD *)((char *)v35 + v42);
          --v41;
        }
        while (v41);
      }
      LOBYTE(_S0) = *v29;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v35 = _S0;
      LOBYTE(_S0) = v29[1];
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[1] = _S0;
      LOBYTE(_S0) = v29[2];
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[2] = LOWORD(_S0);
    }
  }
LABEL_65:
  v65 = v67;
  v67 = 0;
  if (v65)
    (*(void (**)(uint64_t))(*(_QWORD *)v65 + 8))(v65);
  result = v68;
  v68 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243954F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_22439555C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _BYTE *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v27;
  double **v28;
  double **v29;
  double v30;
  double v31;
  double v32;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  double ***v40;
  double **v41;
  double **v42;
  double v43;
  double v44;
  double v45;
  double ***v47;
  double **v48;
  double **v49;
  double v50;
  double v51;
  double v52;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOBYTE(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOBYTE(_D2) = *(_BYTE *)(*a2 + 1);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      v27 = **a3;
      LOBYTE(_D2) = *(_BYTE *)(*a2 + 2);
      v29 = *v27;
      v28 = v27[1];
      v30 = ((double)*(unint64_t *)&_D2 - **v29) * *v29[1];
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      _D2 = **v28 + v32 * *v28[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 4) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v33 = **a3;
  LOBYTE(a6) = *a4;
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&a6 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _D0 = **v34 + v38 * *v34[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v40 = **a3;
  LOBYTE(_D0) = *(_BYTE *)(*a2 + 1);
  v42 = *v40;
  v41 = v40[1];
  v43 = ((double)*(unint64_t *)&_D0 - **v42) * *v42[1];
  v44 = fmax(v43, 0.0);
  if (v43 <= 1.0)
    v45 = v44;
  else
    v45 = 1.0;
  _D0 = **v41 + v45 * *v41[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = LOWORD(_D0);
  v47 = **a3;
  LOBYTE(_D0) = *(_BYTE *)(*a2 + 2);
  v49 = *v47;
  v48 = v47[1];
  v50 = ((double)*(unint64_t *)&_D0 - **v49) * *v49[1];
  v51 = fmax(v50, 0.0);
  if (v50 <= 1.0)
    v52 = v51;
  else
    v52 = 1.0;
  _S0 = **v48 + v52 * *v48[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 4) = result;
  return result;
}

__int16 sub_2243957C8@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  int v5;
  unsigned __int8 *v6;
  unsigned __int8 **v8;
  unsigned int v9;
  unsigned __int8 **v16;
  unsigned int v17;
  unsigned __int8 *v18;
  unsigned __int8 **v21;
  unsigned int v22;
  unsigned __int8 **v24;
  unsigned int v25;
  unsigned __int8 **v28;
  unsigned int v29;
  unsigned __int8 *v30;
  uint64_t v33;
  unsigned __int8 **v34;
  unsigned int v35;
  unsigned __int8 *v36;
  __int16 result;
  unsigned __int8 *v38;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *(_WORD *)v8[3];
        }
      }
      else
      {
        _H0 = *(_WORD *)v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int8 *)(*a2 + 1);
      if (v17 < **v16)
        break;
      if (v17 > *v16[2])
      {
        v18 = v16[3];
        goto LABEL_15;
      }
      _S0 = (float)v17;
      __asm { FCVT            H0, S0 }
LABEL_17:
      *(_WORD *)(a2[2] + 2) = _H0;
      v21 = **a3;
      v22 = *(unsigned __int8 *)(*a2 + 2);
      if (v22 < **v21)
      {
        v6 = v21[1];
      }
      else
      {
        if (v22 <= *v21[2])
        {
          _S0 = (float)v22;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v21[3];
      }
      _H0 = *(_WORD *)v6;
LABEL_5:
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      if (++v5 >= a1[5])
        goto LABEL_21;
    }
    v18 = v16[1];
LABEL_15:
    _H0 = *(_WORD *)v18;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v24 = **a3;
  v25 = *a4;
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *(_WORD *)v24[3];
    }
  }
  else
  {
    _H0 = *(_WORD *)v24[1];
  }
  *a5 = _H0;
  v28 = **a3;
  v29 = *(unsigned __int8 *)(*a2 + 1);
  if (v29 < **v28)
  {
    v30 = v28[1];
LABEL_30:
    _H0 = *(_WORD *)v30;
    goto LABEL_32;
  }
  if (v29 > *v28[2])
  {
    v30 = v28[3];
    goto LABEL_30;
  }
  _S0 = (float)v29;
  __asm { FCVT            H0, S0 }
LABEL_32:
  *(_WORD *)(a2[2] + 2) = _H0;
  v33 = a2[2];
  v34 = **a3;
  v35 = *(unsigned __int8 *)(*a2 + 2);
  if (v35 >= **v34)
  {
    if (v35 <= *v34[2])
    {
      _S0 = (float)v35;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v33 + 4) = result;
    }
    else
    {
      v38 = v34[3];
      result = *(_WORD *)v38;
      *(_WORD *)(v33 + 4) = *(_WORD *)v38;
    }
  }
  else
  {
    v36 = v34[1];
    result = *(_WORD *)v36;
    *(_WORD *)(v33 + 4) = *(_WORD *)v36;
  }
  return result;
}

__int16 sub_224395A0C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v22;
  unsigned int v23;
  unsigned __int8 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int8 **v31;
  unsigned int v32;
  unsigned __int8 *v33;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 < **v19)
      {
        _H0 = *(_WORD *)v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 >= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int8 *)(*a2 + 1);
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int8 *)(*a2 + 2);
  if (v32 >= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *(_WORD *)v33;
    *(_WORD *)(v30 + 4) = *(_WORD *)v33;
  }
  return result;
}

__int16 sub_224395BB0@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 ****a3@<X2>, unsigned __int8 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int8 **v7;
  unsigned int v8;
  unsigned __int8 **v15;
  unsigned int v16;
  unsigned __int8 **v19;
  unsigned int v20;
  unsigned __int8 **v22;
  unsigned int v23;
  unsigned __int8 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int8 **v31;
  unsigned int v32;
  unsigned __int8 *v33;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int8 *)(*a2 + 1);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *(_WORD *)v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int8 *)(*a2 + 2);
      if (v20 > **v19)
      {
        _H0 = *(_WORD *)v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 <= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int8 *)(*a2 + 1);
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *(_WORD *)v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int8 *)(*a2 + 2);
  if (v32 <= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *(_WORD *)v33;
    *(_WORD *)(v30 + 4) = *(_WORD *)v33;
  }
  return result;
}

void sub_224395D54(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E42E0(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224395E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_224395E5C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_224395EC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_22439614C(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 2) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 12);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_22439601C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224396040(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2243960A8()
{
  return 12;
}

uint64_t sub_2243960B0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2243960B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2243960D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_22439614C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224396374(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224396314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224396374(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2243963EC();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_2243963EC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791AE0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791AE0))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E4AAC();
    sub_2243965F0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243965F0((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791AC8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791AC8, &dword_22314D000);
          __cxa_guard_release(&qword_255791AE0);
          return &stru_255791AC8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791AC8;
}

void sub_22439653C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791AE0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791AE0);
  _Unwind_Resume(a1);
}

void sub_2243965F0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_22439668C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243966A8(uint64_t **a1, uint64_t a2, __n128 a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t *v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  float v17;
  double v18;
  float v19;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  float *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  double v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  unint64_t v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  double ****v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  _OWORD v84[2];

  v9 = *a1;
  v10 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 16))
  {
    v13 = 255;
    v15 = *v9;
    v14 = v9[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    if ((float)v10 != 0.0 || 1.0 != (float)v13)
      goto LABEL_15;
    return sub_224397A08(v15, v14, v17);
  }
  v11 = *(double *)a2;
  if (*(double *)a2 < 0.0)
    v11 = 0.0;
  v10 = (int)v11;
  v12 = 255.0;
  if (*(double *)(a2 + 8) <= 255.0)
    v12 = *(double *)(a2 + 8);
  v13 = (int)v12;
  v15 = *v9;
  v14 = v9[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  if (v17 == (float)v10 && v19 == (float)v13)
    return sub_224397A08(v15, v14, v17);
LABEL_15:
  v72 = (double)v10;
  v21 = 1.0;
  v22 = 1.0 / ((double)v13 - (double)v10);
  v70 = v17;
  v71 = v22;
  v23 = v19;
  a3.n128_f64[0] = v23 - v17;
  v69 = a3.n128_u64[0];
  v68[0] = &v72;
  v68[1] = &v71;
  v67[0] = &v70;
  v67[1] = &v69;
  v66[0] = v68;
  v66[1] = v67;
  v24 = *(_QWORD *)(v15 + 8);
  if (!v24)
    goto LABEL_38;
  v25 = *(std::__shared_weak_count **)(v15 + 16);
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
    v24 = *(_QWORD *)(v15 + 8);
    v29 = *(std::__shared_weak_count **)(v15 + 16);
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 1, v30));
      do
        v32 = __ldaxr(v30);
      while (__stlxr(v32 - 1, v30));
      if (!v32)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
  }
  if (*(_BYTE *)(v15 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v24 + 96))(&v74, v24, 0);
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v74 = 0;
    v33 = *(_QWORD *)(v14 + 8);
    if (!v33)
      goto LABEL_54;
  }
  v36 = *(std::__shared_weak_count **)(v14 + 16);
  if (v36)
  {
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
    v33 = *(_QWORD *)(v14 + 8);
    v40 = *(std::__shared_weak_count **)(v14 + 16);
    if (v40)
    {
      v41 = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 1, v41));
      do
        v43 = __ldaxr(v41);
      while (__stlxr(v43 - 1, v41));
      if (!v43)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  if (!*(_BYTE *)(v14 + 73))
  {
LABEL_54:
    v73 = 0;
    v75 = v66;
    v44 = *(_DWORD *)(v15 + 32);
    if (v44)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v33 + 96))(&v73, v33, 1);
  v75 = v66;
  v44 = *(_DWORD *)(v15 + 32);
  if (v44)
  {
LABEL_55:
    v45 = *(_DWORD *)(v15 + 36);
    if (v45)
    {
      v46 = *(_DWORD *)(v15 + 40);
      if (v46)
      {
        v76 = (double ****)&v75;
        v77 = 0;
        v78 = v44 - 1;
        v47 = *(unsigned int *)(v15 + 48);
        v48 = *(unsigned int *)(v14 + 48);
        v79 = *(unsigned int *)(v15 + 44) | ((unint64_t)*(unsigned int *)(v14 + 44) << 32);
        v80 = v45 - 1;
        v81 = v47 | (v48 << 32);
        v82 = v46 - 1;
        v83 = *(unsigned int *)(v15 + 52) | ((unint64_t)*(unsigned int *)(v14 + 52) << 32);
        v49 = *(_BYTE **)(v15 + 24);
        if (*(_BYTE *)(v15 + 72) && v49)
        {
          v50 = *(_QWORD *)(v15 + 8);
          v51 = *(std::__shared_weak_count **)(v15 + 16);
          if (v51)
          {
            v52 = (unint64_t *)&v51->__shared_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            do
              v54 = __ldaxr(v52);
            while (__stlxr(v54 - 1, v52));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v50 + 88))(v50, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v49 = *(_BYTE **)(v15 + 24);
        }
        v55 = *(float **)(v14 + 24);
        if (*(_BYTE *)(v14 + 72) && v55)
        {
          v56 = *(_QWORD *)(v14 + 8);
          v57 = *(std::__shared_weak_count **)(v14 + 16);
          if (v57)
          {
            v58 = (unint64_t *)&v57->__shared_owners_;
            do
              v59 = __ldxr(v58);
            while (__stxr(v59 + 1, v58));
            do
              v60 = __ldaxr(v58);
            while (__stlxr(v60 - 1, v58));
            if (!v60)
            {
              ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
              std::__shared_weak_count::__release_weak(v57);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v56 + 88))(v56, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v55 = *(float **)(v14 + 24);
        }
        v61 = 0.0;
        memset(v84, 0, sizeof(v84));
        v62 = v82;
        if (v82)
        {
          v63 = v83;
          v64 = 4 * HIDWORD(v83);
          do
          {
            *(float *)&v61 = sub_224397ED0(&v77, v84, &v76, v49, v55, v61, v23, v22, v21, a7, a8, a9);
            v49 += v63;
            v55 = (float *)((char *)v55 + v64);
            --v62;
          }
          while (v62);
        }
        a3.n128_f32[0] = sub_224397ED0(&v77, v84, &v76, v49, v55, v61, v23, v22, v21, a7, a8, a9);
      }
    }
  }
LABEL_79:
  v65 = v73;
  v73 = 0;
  if (v65)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v65 + 8))(v65, a3);
  result = v74;
  v74 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224396B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224396BDC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  float v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  float *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  unsigned int v87;
  int v88;
  int v89;
  int v90;
  float *v91;
  unsigned __int8 *v92;
  unsigned __int8 *v93;
  float *v94;
  int v95;
  unsigned int v96;
  float v97;
  unsigned int v98;
  float v99;
  unsigned int v100;
  float v101;
  unsigned int v102;
  float v103;
  unsigned int v104;
  float v105;
  unsigned int v106;
  float v107;
  unsigned int v108;
  float v109;
  unsigned int v110;
  float v111;
  unsigned int v112;
  float v113;
  uint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *p_shared_owners;
  unint64_t v117;
  unint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  std::__shared_weak_count *v128;
  unint64_t *v129;
  unint64_t v130;
  unint64_t v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned __int8 *v138;
  uint64_t v139;
  std::__shared_weak_count *v140;
  unint64_t *v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  unint64_t v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  float *v153;
  unsigned __int8 *v154;
  unsigned __int8 *v155;
  float *v156;
  int v157;
  unsigned int v158;
  float v159;
  unsigned int v160;
  float v161;
  unsigned int v162;
  float v163;
  unsigned int v164;
  float v165;
  unsigned int v166;
  float v167;
  unsigned int v168;
  float v169;
  unsigned int v170;
  float v171;
  unsigned int v172;
  float v173;
  unsigned int v174;
  float v175;
  unsigned int v176;
  float v177;
  unsigned int v178;
  float v179;
  unsigned int v180;
  float v181;
  unsigned int v182;
  float v183;
  unsigned int v184;
  float v185;
  unsigned int v186;
  unsigned int v187;
  float v188;
  unsigned int v189;
  float v190;
  unsigned int v191;
  float v192;
  unsigned int v193;
  float v194;
  unsigned int v195;
  float v196;
  unsigned int v197;
  uint64_t v198;
  _QWORD v199[4];
  char v200;
  char v201;
  float v202;
  float v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  unsigned __int8 ***v207;
  uint64_t v208;
  int v209;
  unint64_t v210;
  int v211;
  uint64_t v212;
  int v213;
  unint64_t v214;
  _OWORD v215[3];

  v4 = **a1;
  v3 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 3.4028e38;
    v7 = -3.4028e38;
    a3.n128_u32[0] = 1132396544;
    if (-3.4028e38 >= 0.0 && 3.4028e38 <= 255.0)
      goto LABEL_15;
LABEL_36:
    if (v7 < 0.0)
    {
      a3.n128_u32[0] = 1132396544;
      if (v8 > 255.0)
        return sub_224397A08(**a1, v3, 255.0);
      v114 = *(_QWORD *)(v4 + 8);
      if (!v114)
        goto LABEL_181;
      v115 = *(std::__shared_weak_count **)(v4 + 16);
      if (v115)
      {
        p_shared_owners = (unint64_t *)&v115->__shared_owners_;
        do
          v117 = __ldxr(p_shared_owners);
        while (__stxr(v117 + 1, p_shared_owners));
        do
          v118 = __ldaxr(p_shared_owners);
        while (__stlxr(v118 - 1, p_shared_owners));
        if (!v118)
        {
          ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
          std::__shared_weak_count::__release_weak(v115);
        }
        v114 = *(_QWORD *)(v4 + 8);
        v119 = *(std::__shared_weak_count **)(v4 + 16);
        if (v119)
        {
          v120 = (unint64_t *)&v119->__shared_owners_;
          do
            v121 = __ldxr(v120);
          while (__stxr(v121 + 1, v120));
          do
            v122 = __ldaxr(v120);
          while (__stlxr(v122 - 1, v120));
          if (!v122)
          {
            ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
            std::__shared_weak_count::__release_weak(v119);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v114 + 96))(&v208, v114, 0);
        v123 = *(_QWORD *)(v3 + 8);
        if (!v123)
          goto LABEL_196;
      }
      else
      {
LABEL_181:
        v208 = 0;
        v123 = *(_QWORD *)(v3 + 8);
        if (!v123)
          goto LABEL_196;
      }
      v124 = *(std::__shared_weak_count **)(v3 + 16);
      if (v124)
      {
        v125 = (unint64_t *)&v124->__shared_owners_;
        do
          v126 = __ldxr(v125);
        while (__stxr(v126 + 1, v125));
        do
          v127 = __ldaxr(v125);
        while (__stlxr(v127 - 1, v125));
        if (!v127)
        {
          ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
          std::__shared_weak_count::__release_weak(v124);
        }
        v123 = *(_QWORD *)(v3 + 8);
        v128 = *(std::__shared_weak_count **)(v3 + 16);
        if (v128)
        {
          v129 = (unint64_t *)&v128->__shared_owners_;
          do
            v130 = __ldxr(v129);
          while (__stxr(v130 + 1, v129));
          do
            v131 = __ldaxr(v129);
          while (__stlxr(v131 - 1, v129));
          if (!v131)
          {
            ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
            std::__shared_weak_count::__release_weak(v128);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v123 + 96))(v215, v123, 1);
LABEL_197:
        if (*(_DWORD *)(v4 + 32))
        {
          v132 = *(_DWORD *)(v4 + 36);
          if (v132)
          {
            v133 = *(_DWORD *)(v4 + 40);
            if (v133)
            {
              v134 = *(unsigned int *)(v4 + 48);
              v135 = *(unsigned int *)(v4 + 52);
              v136 = *(unsigned int *)(v3 + 48);
              v137 = *(unsigned int *)(v3 + 52);
              v138 = *(unsigned __int8 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v138)
              {
                v139 = *(_QWORD *)(v4 + 8);
                v140 = *(std::__shared_weak_count **)(v4 + 16);
                if (v140)
                {
                  v141 = (unint64_t *)&v140->__shared_owners_;
                  do
                    v142 = __ldxr(v141);
                  while (__stxr(v142 + 1, v141));
                  do
                    v143 = __ldaxr(v141);
                  while (__stlxr(v143 - 1, v141));
                  if (!v143)
                  {
                    ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
                    std::__shared_weak_count::__release_weak(v140);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v139 + 88))(v139, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v138 = *(unsigned __int8 **)(v4 + 24);
              }
              v81 = *(float **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v81)
              {
                v144 = *(_QWORD *)(v3 + 8);
                v145 = *(std::__shared_weak_count **)(v3 + 16);
                if (v145)
                {
                  v146 = (unint64_t *)&v145->__shared_owners_;
                  do
                    v147 = __ldxr(v146);
                  while (__stxr(v147 + 1, v146));
                  do
                    v148 = __ldaxr(v146);
                  while (__stlxr(v148 - 1, v146));
                  if (!v148)
                  {
                    ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
                    std::__shared_weak_count::__release_weak(v145);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v144 + 88))(v144, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v81 = *(float **)(v3 + 24);
              }
              v149 = (int)v8;
              v150 = v132 - 1;
              v151 = v133 - 1;
              if (v133 != 1)
              {
                if (v132 == 1)
                {
                  do
                  {
                    v187 = *v138;
                    v188 = (float)v187;
                    if (v187 > v149)
                      v188 = v8;
                    *v81 = v188;
                    v189 = v138[1];
                    v190 = (float)v189;
                    if (v189 > v149)
                      v190 = v8;
                    v81[1] = v190;
                    v191 = v138[2];
                    v192 = (float)v191;
                    if (v191 > v149)
                      v192 = v8;
                    v81[2] = v192;
                    v138 += v135;
                    v81 += v137;
                    --v151;
                  }
                  while (v151);
                  goto LABEL_266;
                }
                v152 = 0;
                v153 = v81 + 2;
                v154 = v138 + 2;
                do
                {
                  v155 = v154;
                  v156 = v153;
                  v157 = v132 - 1;
                  do
                  {
                    v158 = *(v155 - 2);
                    v159 = (float)v158;
                    if (v158 > v149)
                      v159 = v8;
                    *(v156 - 2) = v159;
                    v160 = *(v155 - 1);
                    v161 = (float)v160;
                    if (v160 > v149)
                      v161 = v8;
                    *(v156 - 1) = v161;
                    v162 = *v155;
                    v163 = (float)v162;
                    if (v162 > v149)
                      v163 = v8;
                    *v156 = v163;
                    v156 += v136;
                    v155 += v134;
                    --v157;
                  }
                  while (v157);
                  v164 = *(v155 - 2);
                  v165 = (float)v164;
                  if (v164 > v149)
                    v165 = v8;
                  *(v156 - 2) = v165;
                  v166 = *(v155 - 1);
                  v167 = (float)v166;
                  if (v166 > v149)
                    v167 = v8;
                  *(v156 - 1) = v167;
                  v168 = *v155;
                  v169 = (float)v168;
                  if (v168 > v149)
                    v169 = v8;
                  *v156 = v169;
                  v138 += v135;
                  v81 += v137;
                  ++v152;
                  v153 += v137;
                  v154 += v135;
                }
                while (v152 != v151);
              }
              if (v132 != 1)
              {
                do
                {
                  v170 = *v138;
                  v171 = (float)v170;
                  if (v170 > v149)
                    v171 = v8;
                  *v81 = v171;
                  v172 = v138[1];
                  v173 = (float)v172;
                  if (v172 > v149)
                    v173 = v8;
                  v81[1] = v173;
                  v174 = v138[2];
                  v175 = (float)v174;
                  if (v174 > v149)
                    v175 = v8;
                  v81[2] = v175;
                  v138 += v134;
                  v81 += v136;
                  --v150;
                }
                while (v150);
              }
LABEL_266:
              v193 = *v138;
              v194 = (float)v193;
              if (v193 > v149)
                v194 = v8;
              *v81 = v194;
              v195 = v138[1];
              v196 = (float)v195;
              if (v195 > v149)
                v196 = v8;
              v81[1] = v196;
              v197 = v138[2];
              a3.n128_f32[0] = (float)v197;
              if (v197 > v149)
                a3.n128_f32[0] = v8;
LABEL_272:
              v81[2] = a3.n128_f32[0];
            }
          }
        }
LABEL_273:
        v198 = *(_QWORD *)&v215[0];
        *(_QWORD *)&v215[0] = 0;
        if (v198)
          (*(void (**)(uint64_t))(*(_QWORD *)v198 + 8))(v198);
        result = v208;
        v208 = 0;
        if (result)
          return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
        return result;
      }
LABEL_196:
      *(_QWORD *)&v215[0] = 0;
      goto LABEL_197;
    }
    v51 = *(_QWORD *)(v4 + 8);
    if (!v51)
      goto LABEL_101;
    v52 = *(std::__shared_weak_count **)(v4 + 16);
    if (v52)
    {
      v53 = (unint64_t *)&v52->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
      v51 = *(_QWORD *)(v4 + 8);
      v56 = *(std::__shared_weak_count **)(v4 + 16);
      if (v56)
      {
        v57 = (unint64_t *)&v56->__shared_owners_;
        do
          v58 = __ldxr(v57);
        while (__stxr(v58 + 1, v57));
        do
          v59 = __ldaxr(v57);
        while (__stlxr(v59 - 1, v57));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v51 + 96))(&v208, v51, 0);
      v60 = *(_QWORD *)(v3 + 8);
      if (!v60)
        goto LABEL_117;
    }
    else
    {
LABEL_101:
      v208 = 0;
      v60 = *(_QWORD *)(v3 + 8);
      if (!v60)
        goto LABEL_117;
    }
    v61 = *(std::__shared_weak_count **)(v3 + 16);
    if (v61)
    {
      v62 = (unint64_t *)&v61->__shared_owners_;
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
      do
        v64 = __ldaxr(v62);
      while (__stlxr(v64 - 1, v62));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
      v60 = *(_QWORD *)(v3 + 8);
      v65 = *(std::__shared_weak_count **)(v3 + 16);
      if (v65)
      {
        v66 = (unint64_t *)&v65->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(v215, v60, 1);
      if (!*(_DWORD *)(v4 + 32))
        goto LABEL_273;
LABEL_118:
      v69 = *(_DWORD *)(v4 + 36);
      if (!v69)
        goto LABEL_273;
      v70 = *(_DWORD *)(v4 + 40);
      if (!v70)
        goto LABEL_273;
      v71 = *(unsigned int *)(v4 + 48);
      v72 = *(unsigned int *)(v4 + 52);
      v73 = *(unsigned int *)(v3 + 48);
      v74 = *(unsigned int *)(v3 + 52);
      v75 = *(unsigned __int8 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v75)
      {
        v76 = *(_QWORD *)(v4 + 8);
        v77 = *(std::__shared_weak_count **)(v4 + 16);
        if (v77)
        {
          v78 = (unint64_t *)&v77->__shared_owners_;
          do
            v79 = __ldxr(v78);
          while (__stxr(v79 + 1, v78));
          do
            v80 = __ldaxr(v78);
          while (__stlxr(v80 - 1, v78));
          if (!v80)
          {
            ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
            std::__shared_weak_count::__release_weak(v77);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v76 + 88))(v76, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v75 = *(unsigned __int8 **)(v4 + 24);
      }
      v81 = *(float **)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v81)
      {
        v82 = *(_QWORD *)(v3 + 8);
        v83 = *(std::__shared_weak_count **)(v3 + 16);
        if (v83)
        {
          v84 = (unint64_t *)&v83->__shared_owners_;
          do
            v85 = __ldxr(v84);
          while (__stxr(v85 + 1, v84));
          do
            v86 = __ldaxr(v84);
          while (__stlxr(v86 - 1, v84));
          if (!v86)
          {
            ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
            std::__shared_weak_count::__release_weak(v83);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v82 + 88))(v82, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v81 = *(float **)(v3 + 24);
      }
      v87 = (int)v7;
      v88 = v69 - 1;
      v89 = v70 - 1;
      if (v70 != 1)
      {
        if (v69 == 1)
        {
          do
          {
            v176 = *v75;
            v177 = (float)v176;
            if (v176 < v87)
              v177 = v7;
            *v81 = v177;
            v178 = v75[1];
            v179 = (float)v178;
            if (v178 < v87)
              v179 = v7;
            v81[1] = v179;
            v180 = v75[2];
            v181 = (float)v180;
            if (v180 < v87)
              v181 = v7;
            v81[2] = v181;
            v75 += v72;
            v81 += v74;
            --v89;
          }
          while (v89);
          goto LABEL_252;
        }
        v90 = 0;
        v91 = v81 + 2;
        v92 = v75 + 2;
        do
        {
          v93 = v92;
          v94 = v91;
          v95 = v69 - 1;
          do
          {
            v96 = *(v93 - 2);
            v97 = (float)v96;
            if (v96 < v87)
              v97 = v7;
            *(v94 - 2) = v97;
            v98 = *(v93 - 1);
            v99 = (float)v98;
            if (v98 < v87)
              v99 = v7;
            *(v94 - 1) = v99;
            v100 = *v93;
            v101 = (float)v100;
            if (v100 < v87)
              v101 = v7;
            *v94 = v101;
            v94 += v73;
            v93 += v71;
            --v95;
          }
          while (v95);
          v102 = *(v93 - 2);
          v103 = (float)v102;
          if (v102 < v87)
            v103 = v7;
          *(v94 - 2) = v103;
          v104 = *(v93 - 1);
          v105 = (float)v104;
          if (v104 < v87)
            v105 = v7;
          *(v94 - 1) = v105;
          v106 = *v93;
          v107 = (float)v106;
          if (v106 < v87)
            v107 = v7;
          *v94 = v107;
          v75 += v72;
          v81 += v74;
          ++v90;
          v91 += v74;
          v92 += v72;
        }
        while (v90 != v89);
      }
      if (v69 != 1)
      {
        do
        {
          v108 = *v75;
          v109 = (float)v108;
          if (v108 < v87)
            v109 = v7;
          *v81 = v109;
          v110 = v75[1];
          v111 = (float)v110;
          if (v110 < v87)
            v111 = v7;
          v81[1] = v111;
          v112 = v75[2];
          v113 = (float)v112;
          if (v112 < v87)
            v113 = v7;
          v81[2] = v113;
          v75 += v71;
          v81 += v73;
          --v88;
        }
        while (v88);
      }
LABEL_252:
      v182 = *v75;
      v183 = (float)v182;
      if (v182 < v87)
        v183 = v7;
      *v81 = v183;
      v184 = v75[1];
      v185 = (float)v184;
      if (v184 < v87)
        v185 = v7;
      v81[1] = v185;
      v186 = v75[2];
      a3.n128_f32[0] = (float)v186;
      if (v186 < v87)
        a3.n128_f32[0] = v7;
      goto LABEL_272;
    }
LABEL_117:
    *(_QWORD *)&v215[0] = 0;
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_273;
    goto LABEL_118;
  }
  v5 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v5 = -3.40282347e38;
  v6 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v6 = 3.40282347e38;
  if (v5 < -3.40282347e38)
    v5 = -3.40282347e38;
  v7 = v5;
  if (v6 <= 3.40282347e38)
    a3.n128_f64[0] = v6;
  else
    a3.n128_f64[0] = 3.40282347e38;
  v8 = a3.n128_f64[0];
  a3.n128_u32[0] = 1132396544;
  if (v7 < 0.0 || v8 > 255.0)
    goto LABEL_36;
LABEL_15:
  v202 = v8;
  v203 = v7;
  v201 = (int)v7;
  v200 = (int)v8;
  v199[0] = &v201;
  v199[1] = &v203;
  v199[2] = &v200;
  v199[3] = &v202;
  v10 = *(_QWORD *)(v4 + 8);
  if (!v10)
    goto LABEL_39;
  v11 = *(std::__shared_weak_count **)(v4 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v4 + 8);
    v15 = *(std::__shared_weak_count **)(v4 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v205, v10, 0);
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_55;
  }
  else
  {
LABEL_39:
    v205 = 0;
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_55;
  }
  v22 = *(std::__shared_weak_count **)(v3 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v19 = *(_QWORD *)(v3 + 8);
    v26 = *(std::__shared_weak_count **)(v3 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v204, v19, 1);
    v206 = v199;
    v30 = *(_DWORD *)(v4 + 32);
    if (!v30)
      goto LABEL_80;
    goto LABEL_56;
  }
LABEL_55:
  v204 = 0;
  v206 = v199;
  v30 = *(_DWORD *)(v4 + 32);
  if (!v30)
    goto LABEL_80;
LABEL_56:
  v31 = *(_DWORD *)(v4 + 36);
  if (v31)
  {
    v32 = *(_DWORD *)(v4 + 40);
    if (v32)
    {
      v207 = (unsigned __int8 ***)&v206;
      v208 = 0;
      v209 = v30 - 1;
      v33 = *(unsigned int *)(v4 + 48);
      v34 = *(unsigned int *)(v3 + 48);
      v210 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
      v211 = v31 - 1;
      v212 = v33 | (v34 << 32);
      v213 = v32 - 1;
      v214 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
      v35 = *(unsigned __int8 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v35)
      {
        v36 = *(_QWORD *)(v4 + 8);
        v37 = *(std::__shared_weak_count **)(v4 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(unsigned __int8 **)(v4 + 24);
      }
      v41 = *(_QWORD *)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v41)
      {
        v42 = *(_QWORD *)(v3 + 8);
        v43 = *(std::__shared_weak_count **)(v3 + 16);
        if (v43)
        {
          v44 = (unint64_t *)&v43->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v42 + 88))(v42, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v41 = *(_QWORD *)(v3 + 24);
      }
      memset(v215, 0, 32);
      v47 = v213;
      if (v213)
      {
        v48 = v214;
        v49 = 4 * HIDWORD(v214);
        do
        {
          sub_224398048(&v208, v215, &v207, v35, v41);
          v35 += v48;
          v41 += v49;
          --v47;
        }
        while (v47);
      }
      a3.n128_f32[0] = sub_224398048(&v208, v215, &v207, v35, v41);
    }
  }
LABEL_80:
  v50 = v204;
  v204 = 0;
  if (v50)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v50 + 8))(v50, a3);
  result = v205;
  v205 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_224397978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243979FC(uint64_t **a1, float a2)
{
  return sub_224397A08(**a1, (*a1)[1], a2);
}

uint64_t sub_224397A08(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  float *v45;
  _BYTE *v46;
  _BYTE *v47;
  float *v48;
  int v49;
  float v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;
  float v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v63 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v62, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v63, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v62 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_BYTE **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 4 * v28;
      v43 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOBYTE(a3) = *v29;
            v54 = (float)LODWORD(a3);
            *v35 = v54;
            LOBYTE(v54) = v29[1];
            v55 = (float)LODWORD(v54);
            v35[1] = v55;
            LOBYTE(v55) = v29[2];
            a3 = (float)LODWORD(v55);
            v35[2] = a3;
            v29 += v26;
            v35 += v27;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v35 + 2;
          v46 = v29 + 2;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v23 - 1;
            do
            {
              LOBYTE(a3) = *(v47 - 2);
              v50 = (float)LODWORD(a3);
              *(v48 - 2) = v50;
              LOBYTE(v50) = *(v47 - 1);
              v51 = (float)LODWORD(v50);
              *(v48 - 1) = v51;
              LOBYTE(v51) = *v47;
              a3 = (float)LODWORD(v51);
              *v48 = a3;
              v48 = (float *)((char *)v48 + v42);
              v47 += v25;
              --v49;
            }
            while (v49);
            LOBYTE(a3) = *(v47 - 2);
            v52 = (float)LODWORD(a3);
            *(v48 - 2) = v52;
            LOBYTE(v52) = *(v47 - 1);
            v53 = (float)LODWORD(v52);
            *(v48 - 1) = v53;
            LOBYTE(v53) = *v47;
            a3 = (float)LODWORD(v53);
            *v48 = a3;
            v29 += v26;
            v35 += v27;
            ++v44;
            v45 += v27;
            v46 += v26;
          }
          while (v44 != v43);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOBYTE(a3) = *v29;
          v56 = (float)LODWORD(a3);
          *v35 = v56;
          LOBYTE(v56) = v29[1];
          v57 = (float)LODWORD(v56);
          v35[1] = v57;
          LOBYTE(v57) = v29[2];
          a3 = (float)LODWORD(v57);
          v35[2] = a3;
          v29 += v25;
          v35 = (float *)((char *)v35 + v42);
          --v41;
        }
        while (v41);
      }
      LOBYTE(a3) = *v29;
      v58 = (float)LODWORD(a3);
      *v35 = v58;
      LOBYTE(v58) = v29[1];
      v59 = (float)LODWORD(v58);
      v35[1] = v59;
      LOBYTE(v59) = v29[2];
      v35[2] = (float)LODWORD(v59);
    }
  }
LABEL_65:
  v60 = v62;
  v62 = 0;
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  result = v63;
  v63 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_224397E6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_224397ED0(_DWORD *a1, _QWORD *a2, double *****a3, _BYTE *a4, float *a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  int v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  float result;

  *a2 = a4;
  a2[2] = a5;
  v12 = a1[5];
  v13 = **a3;
  v15 = *v13;
  v14 = v13[1];
  v16 = **v15;
  v17 = *v15[1];
  v18 = **v14;
  v19 = *v14[1];
  if (v12)
  {
    v20 = a1[6];
    v21 = 4 * a1[7];
    a10 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      LOBYTE(a12) = *a4;
      v22 = v17 * ((double)*(unint64_t *)&a12 - v16);
      v23 = fmax(v22, 0.0);
      if (v22 <= 1.0)
        v24 = v23;
      else
        v24 = 1.0;
      v25 = v18 + v19 * v24;
      *(float *)&v25 = v25;
      *a5 = *(float *)&v25;
      LOBYTE(v25) = a4[1];
      v26 = v17 * ((double)*(unint64_t *)&v25 - v16);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      v29 = v18 + v19 * v28;
      *(float *)&v29 = v29;
      a5[1] = *(float *)&v29;
      LOBYTE(v29) = a4[2];
      v30 = v17 * ((double)*(unint64_t *)&v29 - v16);
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      a12 = v18 + v19 * v32;
      *(float *)&a12 = a12;
      a5[2] = *(float *)&a12;
      a4 += v20;
      a5 = (float *)((char *)a5 + v21);
      --v12;
    }
    while (v12);
  }
  *a2 = a4;
  a2[2] = a5;
  LOBYTE(a10) = *a4;
  v33 = v17 * ((double)*(unint64_t *)&a10 - v16);
  v34 = fmax(v33, 0.0);
  if (v33 <= 1.0)
    v35 = v34;
  else
    v35 = 1.0;
  v36 = v18 + v19 * v35;
  *(float *)&v36 = v36;
  *a5 = *(float *)&v36;
  LOBYTE(v36) = a4[1];
  v37 = v17 * ((double)*(unint64_t *)&v36 - v16);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  v40 = v18 + v19 * v39;
  *(float *)&v40 = v40;
  a5[1] = *(float *)&v40;
  LOBYTE(v40) = a4[2];
  v41 = v17 * ((double)*(unint64_t *)&v40 - v16);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  result = v18 + v19 * v43;
  a5[2] = result;
  return result;
}

float sub_224398048(_DWORD *a1, _QWORD *a2, unsigned __int8 ****a3, unsigned __int8 *a4, uint64_t a5)
{
  int v5;
  unsigned __int8 **v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  float *v19;
  float result;
  float *v21;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = *v6;
  if (v5)
  {
    v8 = a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        *a2 = a4;
        a2[2] = a5;
        v11 = *a4;
        if (v11 >= *v7)
          break;
        *(_DWORD *)a5 = *(_DWORD *)v6[1];
        v12 = a4[1];
        if (v12 < *v7)
          goto LABEL_13;
LABEL_10:
        if (v12 > *v6[2])
        {
          v13 = v6[3];
          goto LABEL_14;
        }
        *(float *)(a5 + 4) = (float)v12;
        v14 = a4[2];
        if (v14 >= *v7)
          goto LABEL_17;
LABEL_3:
        v10 = v6[1];
LABEL_4:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v10;
        a4 += v8;
        a5 += v9;
        if (!--v5)
          goto LABEL_20;
      }
      if (v11 <= *v6[2])
      {
        *(float *)a5 = (float)v11;
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_10;
      }
      else
      {
        *(_DWORD *)a5 = *(_DWORD *)v6[3];
        v12 = a4[1];
        if (v12 >= *v7)
          goto LABEL_10;
      }
LABEL_13:
      v13 = v6[1];
LABEL_14:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v13;
      v14 = a4[2];
      if (v14 < *v7)
        goto LABEL_3;
LABEL_17:
      if (v14 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      *(float *)(a5 + 8) = (float)v14;
      a4 += v8;
      a5 += v9;
      --v5;
    }
    while (v5);
  }
LABEL_20:
  *a2 = a4;
  a2[2] = a5;
  v15 = *a4;
  if (v15 >= *v7)
  {
    if (v15 <= *v6[2])
    {
      *(float *)a5 = (float)v15;
      v16 = a4[1];
      if (v16 >= *v7)
        goto LABEL_25;
    }
    else
    {
      *(_DWORD *)a5 = *(_DWORD *)v6[3];
      v16 = a4[1];
      if (v16 >= *v7)
        goto LABEL_25;
    }
LABEL_28:
    v17 = v6[1];
    goto LABEL_29;
  }
  *(_DWORD *)a5 = *(_DWORD *)v6[1];
  v16 = a4[1];
  if (v16 < *v7)
    goto LABEL_28;
LABEL_25:
  if (v16 <= *v6[2])
  {
    *(float *)(a5 + 4) = (float)v16;
    v18 = a4[2];
    if (v18 < *v7)
      goto LABEL_30;
    goto LABEL_32;
  }
  v17 = v6[3];
LABEL_29:
  *(_DWORD *)(a5 + 4) = *(_DWORD *)v17;
  v18 = a4[2];
  if (v18 < *v7)
  {
LABEL_30:
    v19 = (float *)v6[1];
    result = *v19;
    *(float *)(a5 + 8) = *v19;
    return result;
  }
LABEL_32:
  if (v18 <= *v6[2])
  {
    result = (float)v18;
    *(float *)(a5 + 8) = (float)v18;
  }
  else
  {
    v21 = (float *)v6[3];
    result = *v21;
    *(float *)(a5 + 8) = *v21;
  }
  return result;
}

void sub_22439828C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E4BA4(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224398378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_224398394(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_224398510(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 17);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2243984EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_224398510(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 17)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_224398738(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_2243986D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_224398738(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2243987B0();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_2243987B0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791B00);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791B00))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E7680();
    sub_2243989B4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243989B4((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791AE8, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791AE8, &dword_22314D000);
          __cxa_guard_release(&qword_255791B00);
          return &stru_255791AE8;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791AE8;
}

void sub_224398900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791B00);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791B00);
  _Unwind_Resume(a1);
}

void sub_2243989B4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224398A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224398A6C(uint64_t a1, char **a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  char *v14;
  uint64_t v15;
  size_t v16;
  int v18;
  int v19;
  BOOL v20;
  char *v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  char *v29;
  int v30;
  int v31;
  unsigned __int8 v32;
  BOOL v33;
  uint64_t i;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  char *v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  std::__shared_weak_count *v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  int v53;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  int v67;
  _BYTE *v68;
  int v69;
  int v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  _BYTE *v74;
  int v75;
  char *v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char *v81;
  char *v82;
  int v83;
  uint64_t v84;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_99;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
    goto LABEL_99;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (*(_BYTE *)(a1 + 73))
  {
LABEL_15:
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v84, v4, 0);
    if (*(_DWORD *)(a1 + 44) != 1 || *((_DWORD *)a2 + 5) != 1)
      goto LABEL_103;
LABEL_20:
    v14 = (char *)*(unsigned int *)(a1 + 48);
    v15 = *((unsigned int *)a2 + 6);
    v16 = *(unsigned int *)(a1 + 32);
    if ((_DWORD)v14 == (_DWORD)v15 && (_DWORD)v14 == (_DWORD)v16)
    {
      v37 = *(unsigned int *)(a1 + 52);
      v38 = *((unsigned int *)a2 + 7);
      v39 = *(_DWORD *)(a1 + 36);
      v16 = (v39 * (_DWORD)v14);
      if ((_DWORD)v37 == (_DWORD)v38 && (_DWORD)v37 == (_DWORD)v16)
      {
        v40 = *(_DWORD *)(a1 + 40);
        v41 = *(char **)(a1 + 24);
        if (*(_BYTE *)(a1 + 72) && v41)
        {
          v43 = *(_QWORD *)(a1 + 8);
          v42 = *(std::__shared_weak_count **)(a1 + 16);
          if (v42)
          {
            v44 = (unint64_t *)&v42->__shared_owners_;
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 1, v44));
            do
              v46 = __ldaxr(v44);
            while (__stlxr(v46 - 1, v44));
            if (!v46)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v43 + 88))(v43, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v41 = *(char **)(a1 + 24);
        }
        v16 = (v40 * v16);
        if (!(_DWORD)v16 || v41)
        {
          if (!(_DWORD)v16)
            goto LABEL_146;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_141;
        }
        v76 = *a2;
LABEL_145:
        memmove(v76, v41, v16);
        goto LABEL_146;
      }
      if (!(_DWORD)v14)
        goto LABEL_146;
      if (!v39)
        goto LABEL_146;
      v47 = *(_DWORD *)(a1 + 40);
      if (!v47)
        goto LABEL_146;
      v41 = *(char **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v41)
      {
        v49 = *(_QWORD *)(a1 + 8);
        v48 = *(std::__shared_weak_count **)(a1 + 16);
        if (v48)
        {
          v50 = (unint64_t *)&v48->__shared_owners_;
          do
            v51 = __ldxr(v50);
          while (__stxr(v51 + 1, v50));
          do
            v52 = __ldaxr(v50);
          while (__stlxr(v52 - 1, v50));
          if (!v52)
          {
            ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
            std::__shared_weak_count::__release_weak(v48);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v41 = *(char **)(a1 + 24);
      }
      v29 = *a2;
      v53 = v47 - 1;
      if (v47 != 1)
      {
        if (!(_DWORD)v16)
          goto LABEL_146;
        while (v41
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          memmove(v29, v41, v16);
          v41 += v37;
          v29 += v38;
          if (!--v53)
            goto LABEL_128;
        }
LABEL_141:
        abort();
      }
LABEL_128:
      if (!(_DWORD)v16 || v41)
      {
        if (!(_DWORD)v16)
          goto LABEL_146;
LABEL_144:
        v76 = v29;
        goto LABEL_145;
      }
    }
    else
    {
      v19 = *(_DWORD *)(a1 + 36);
      v18 = *(_DWORD *)(a1 + 40);
      if ((_DWORD)v16)
        v20 = v19 == 0;
      else
        v20 = 1;
      if (v20 || v18 == 0)
        goto LABEL_146;
      v79 = *(unsigned int *)(a1 + 52);
      v78 = *((unsigned int *)a2 + 7);
      v22 = *(char **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v22)
      {
        v24 = *(_QWORD *)(a1 + 8);
        v23 = *(std::__shared_weak_count **)(a1 + 16);
        if (v23)
        {
          v25 = (unint64_t *)&v23->__shared_owners_;
          do
            v26 = __ldxr(v25);
          while (__stxr(v26 + 1, v25));
          do
            v27 = __ldaxr(v25);
          while (__stlxr(v27 - 1, v25));
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v24 + 88))(v24, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v22 = *(char **)(a1 + 24);
      }
      v28 = v19 - 1;
      v29 = *a2;
      v83 = v18 - 1;
      if (v18 != 1)
      {
        if (v28)
        {
          v30 = 0;
          while (1)
          {
            v80 = v30;
            v31 = 0;
            v81 = v29;
            v82 = v22;
            do
            {
              while (v22)
              {
                memmove(v29, v22, v16);
                v22 = &v14[(_QWORD)v22];
                v29 += v15;
                if (++v31 == v28)
                  goto LABEL_43;
              }
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
              v32 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v32 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (byte_255795670)
                v33 = byte_255795678 == 0;
              else
                v33 = 0;
              if (!v33)
              {
                v35 = qword_255795648;
                for (i = qword_255795650; v35 != i; v35 += 16)
                  (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v35)(*(_QWORD *)(v35 + 8), "ptr != nullptr || size == 0", 27, "", 0);
              }
              v36 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v36 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                goto LABEL_141;
              qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, "", 0);
              memcpy(v29, 0, v16);
              v29 += v15;
              ++v31;
              v22 = v14;
            }
            while (v31 != v28);
            v22 = v14;
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              break;
            }
LABEL_43:
            memmove(v29, v22, v16);
            v22 = &v82[v79];
            v29 = &v81[v78];
            v30 = v80 + 1;
            if (v80 + 1 == v83)
              goto LABEL_136;
          }
        }
        else
        {
          while (v22
               || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            memmove(v29, v22, v16);
            v22 += v79;
            v29 += v78;
            if (!--v83)
              goto LABEL_136;
          }
        }
        goto LABEL_141;
      }
LABEL_136:
      if (v28)
      {
        while (v22
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          memmove(v29, v22, v16);
          v22 = &v14[(_QWORD)v22];
          v29 += v15;
          if (!--v28)
            goto LABEL_142;
        }
        goto LABEL_141;
      }
LABEL_142:
      v41 = v22;
      if (v22)
        goto LABEL_144;
    }
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_141;
    }
    goto LABEL_144;
  }
LABEL_99:
  v84 = 0;
  if (*(_DWORD *)(a1 + 44) == 1 && *((_DWORD *)a2 + 5) == 1)
    goto LABEL_20;
LABEL_103:
  if (*(_DWORD *)(a1 + 32))
  {
    v55 = *(_DWORD *)(a1 + 36);
    if (v55)
    {
      v56 = *(_DWORD *)(a1 + 40);
      if (v56)
      {
        v57 = *(unsigned int *)(a1 + 48);
        v58 = *(unsigned int *)(a1 + 52);
        v59 = *((unsigned int *)a2 + 6);
        v60 = *((unsigned int *)a2 + 7);
        v61 = *(_BYTE **)(a1 + 24);
        if (*(_BYTE *)(a1 + 72) && v61)
        {
          v62 = *(_QWORD *)(a1 + 8);
          v63 = *(std::__shared_weak_count **)(a1 + 16);
          if (v63)
          {
            v64 = (unint64_t *)&v63->__shared_owners_;
            do
              v65 = __ldxr(v64);
            while (__stxr(v65 + 1, v64));
            do
              v66 = __ldaxr(v64);
            while (__stlxr(v66 - 1, v64));
            if (!v66)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v62 + 88))(v62, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v61 = *(_BYTE **)(a1 + 24);
        }
        v67 = v55 - 1;
        v68 = *a2;
        v69 = v56 - 1;
        if (v56 != 1)
        {
          if (v55 == 1)
          {
            do
            {
              *v68 = *v61;
              v68[1] = v61[1];
              v68[2] = v61[2];
              v61 += v58;
              v68 += v60;
              --v69;
            }
            while (v69);
          }
          else
          {
            v70 = 0;
            v71 = v68 + 2;
            v72 = v61 + 2;
            do
            {
              v73 = v72;
              v74 = v71;
              v75 = v55 - 1;
              do
              {
                *(v74 - 2) = *(v73 - 2);
                *(v74 - 1) = *(v73 - 1);
                *v74 = *v73;
                v74 += v59;
                v73 += v57;
                --v75;
              }
              while (v75);
              *(v74 - 2) = *(v73 - 2);
              *(v74 - 1) = *(v73 - 1);
              *v74 = *v73;
              v61 += v58;
              v68 += v60;
              ++v70;
              v71 += v60;
              v72 += v58;
            }
            while (v70 != v69);
          }
        }
        if (v55 != 1)
        {
          do
          {
            *v68 = *v61;
            v68[1] = v61[1];
            v68[2] = v61[2];
            v61 += v57;
            v68 += v59;
            --v67;
          }
          while (v67);
        }
        *v68 = *v61;
        v68[1] = v61[1];
        v68[2] = v61[2];
      }
    }
  }
LABEL_146:
  result = v84;
  v84 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243993CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16)
    (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

void sub_224399408(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E7778(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2243994F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_224399510(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  __int16 v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *size;
  unint64_t *v15;
  unint64_t v16;
  std::string v17;

  sub_22439968C(a1, &v17);
  v4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = 0uLL;
  if ((*(_QWORD *)(a1 + 24) & 0xFF00000000) != 0)
    v5 = *(_QWORD *)(a1 + 24) | 0x100000000;
  else
    v5 = 0;
  v6 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a2 + 16) = v5;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v17.__r_.__value_.__r.__words[2], v4, 21);
  v10 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 16);
  v9 = *(_OWORD *)(v17.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v17.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v10;
  *(_OWORD *)(a2 + 56) = v9;
  v17.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v11;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v6;
  if (*((_QWORD *)&v4 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v15 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_224399668(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22439968C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243998B4(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_224399854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243998B4(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_22439992C();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_22439992C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791B20);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791B20))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231C659C();
    sub_224399B30((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_224399B30((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791B08, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791B08, &dword_22314D000);
          __cxa_guard_release(&qword_255791B20);
          return &stru_255791B08;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791B08;
}

void sub_224399A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791B20);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791B20);
  _Unwind_Resume(a1);
}

void sub_224399B30(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_224399BCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224399BE8(int a1)
{
  __asm { BR              X10 }
}

void sub_224399C2C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, void *__dst, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int __dsta,uint64_t a21,int a22,int a23,int a24,uint64_t a25,uint64_t a26,__int16 a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,std::string *a57)
{
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *p_shared_owners;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  std::__shared_weak_count *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;
  unint64_t *v79;
  unint64_t v80;
  _QWORD v81[2];
  _QWORD *v82;
  uint64_t (**v83)();
  uint64_t v84;
  std::__shared_weak_count *v85;
  unsigned int v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  __int16 v91;

  sub_22439C238(v59 - 168, *(_QWORD *)v58, *(_DWORD *)(v58 + 16), *(_QWORD *)v58 + 56);
  v83 = &off_24EC74980;
  sub_224390D7C(v59 - 168, (uint64_t)&v84);
  v60 = *(std::__shared_weak_count **)(v59 - 152);
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v62 = __ldaxr(p_shared_owners);
    while (__stlxr(v62 - 1, p_shared_owners));
    if (!v62)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  v64 = *(_QWORD *)v58;
  v63 = *(_QWORD *)(v58 + 8);
  *(_QWORD *)(v59 - 168) = &off_24EC22750;
  sub_22439D890((uint64_t)&v83, (uint64_t *)(v59 - 160));
  v81[0] = v64;
  v81[1] = v59 - 168;
  v65 = *(unsigned int *)(v63 + 64);
  if ((_DWORD)v65 == -1)
    sub_22316DD70();
  v82 = v81;
  ((void (*)(_QWORD **, uint64_t))off_24EC74898[v65])(&v82, v63 + 8);
  v66 = *(std::__shared_weak_count **)(v59 - 152);
  if (v66)
  {
    v67 = (unint64_t *)&v66->__shared_owners_;
    do
      v68 = __ldaxr(v67);
    while (__stlxr(v68 - 1, v67));
    if (!v68)
    {
      ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
      std::__shared_weak_count::__release_weak(v66);
    }
  }
  *(_QWORD *)v57 = &off_24EC1F958;
  v70 = v84;
  v69 = v85;
  if (v85)
  {
    v71 = (unint64_t *)&v85->__shared_owners_;
    do
      v72 = __ldxr(v71);
    while (__stxr(v72 + 1, v71));
    v73 = v85;
  }
  else
  {
    v73 = 0;
  }
  v74 = v89;
  v75 = v90;
  if (v87)
    v76 = v86 | 0x100000000;
  else
    v76 = 0;
  v77 = v88;
  v78 = v91;
  *(_QWORD *)(v57 + 8) = v70;
  *(_QWORD *)(v57 + 16) = v69;
  *(_QWORD *)(v57 + 24) = v76;
  *(_QWORD *)(v57 + 32) = v74;
  *(_DWORD *)(v57 + 40) = v75;
  *(_QWORD *)(v57 + 48) = v77;
  *(_DWORD *)(v57 + 56) = 9;
  *(_WORD *)(v57 + 60) = v78;
  if (v73)
  {
    v79 = (unint64_t *)&v73->__shared_owners_;
    do
      v80 = __ldaxr(v79);
    while (__stlxr(v80 - 1, v79));
    if (!v80)
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
    }
  }
}

void sub_22439B084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 4;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 2;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B17C()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_22439B1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 1;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 3;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 7;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 5;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 6;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 8;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 40;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 39;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 38;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 37;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 36;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 35;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 34;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 33;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 32;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 31;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 30;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439B9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 29;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 28;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 27;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 26;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 25;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 24;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 23;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 21;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD v19[2];
  unsigned __int8 v20;

  *(_DWORD *)(v15 - 168) = 20;
  v18 = 10;
  sub_2243348B0("Conversion from image of format ", &v18, (uint64_t)" to ", (unsigned int *)(v15 - 168), (uint64_t)" not supported");
  if ((v20 & 0x80u) == 0)
    v16 = v19;
  else
    v16 = (_QWORD *)v19[0];
  if ((v20 & 0x80u) == 0)
    v17 = v20;
  else
    v17 = v19[1];
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v16, v17, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a15);
  abort();
}

void sub_22439BE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, uint64_t a13, uint64_t a14, _QWORD *a15, uint64_t a16, int a17, __int16 a18, char a19, unsigned __int8 a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  *(_DWORD *)(v20 - 168) = 19;
  a12 = 10;
  sub_2243348B0("Conversion from image of format ", &a12, (uint64_t)" to ", (unsigned int *)(v20 - 168), (uint64_t)" not supported");
  if ((a20 & 0x80u) == 0)
    v21 = &a15;
  else
    v21 = a15;
  if ((a20 & 0x80u) == 0)
    v22 = a20;
  else
    v22 = a16;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_22457406C);
  JUMPOUT(0x22439BEC0);
}

void sub_22439BECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = *(_QWORD *)(v20 - 168);
  *(_QWORD *)(v20 - 168) = 0;
  if (v22)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
    v23 = a11;
    if (!a11)
    {
LABEL_3:
      v24 = a14;
      if (!a14)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v23 = a11;
    if (!a11)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
  v24 = a14;
  if (!a14)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_22439C238(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(10);
  v34 = &off_24EC74A78;
  sub_2243915B0((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 2 * v41;
  if (v38)
    v27 = (2 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 10;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22439C4B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22439C4D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22439C4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22439C4FC(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  double v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _WORD *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  double v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  double ****v58;
  int v59;
  _WORD *v60;
  _BYTE *v61;
  double ***v62;
  double **v63;
  double **v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  double **v71;
  double v72;
  double v73;
  double *v74;
  double *v75;
  double v76;
  double v77;
  double **v78;
  double v79;
  double v80;
  double *v81;
  double *v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  _QWORD v89[2];
  _QWORD v90[2];
  double v91;
  double v92;
  double v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  double ****v98;
  __int128 v99;
  __int128 v100;
  _BYTE *v101[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
    {
LABEL_7:
      v11 = *(double *)(a2 + 24);
      if (v11 < 0.0)
        v11 = 0.0;
      v10 = (int)v11;
      v12 = 255.0;
      if (*(double *)(a2 + 32) <= 255.0)
        v12 = *(double *)(a2 + 32);
      v13 = (int)v12;
      v14 = HIWORD(v7);
      if (v10 != (unsigned __int16)v7)
        goto LABEL_17;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = -65536;
    v9 = *v3;
    v8 = v3[1];
    v10 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
  }
  v13 = 255;
  v14 = HIWORD(v7);
  if (v10 != (unsigned __int16)v7)
    goto LABEL_17;
LABEL_15:
  if (v14 == v13)
    return sub_22439CCA0(v9, v8);
LABEL_17:
  v94 = (double)(unsigned __int16)v7;
  v92 = (double)v10;
  v93 = 1.0 / ((double)v14 - v94);
  a3.n128_f64[0] = (double)v13 - (double)v10;
  v91 = a3.n128_f64[0];
  v90[0] = &v94;
  v90[1] = &v93;
  v89[0] = &v92;
  v89[1] = &v91;
  v88[0] = v90;
  v88[1] = v89;
  v16 = *(_QWORD *)(v9 + 8);
  if (!v16)
    goto LABEL_33;
  v17 = *(std::__shared_weak_count **)(v9 + 16);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(v9 + 8);
    v21 = *(std::__shared_weak_count **)(v9 + 16);
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      do
        v24 = __ldaxr(v22);
      while (__stlxr(v24 - 1, v22));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v16 + 96))(&v96, v16, 0);
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_49;
  }
  else
  {
LABEL_33:
    v96 = 0;
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_49;
  }
  v26 = *(std::__shared_weak_count **)(v8 + 16);
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
    do
      v29 = __ldaxr(v27);
    while (__stlxr(v29 - 1, v27));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    v25 = *(_QWORD *)(v8 + 8);
    v30 = *(std::__shared_weak_count **)(v8 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }
  if (*(_BYTE *)(v8 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v25 + 96))(&v95, v25, 1);
    v97 = v88;
    if (!*(_DWORD *)(v9 + 32))
      goto LABEL_88;
LABEL_50:
    v34 = *(_DWORD *)(v9 + 36);
    if (!v34)
      goto LABEL_88;
    v35 = *(_DWORD *)(v9 + 40);
    if (!v35)
      goto LABEL_88;
    v98 = (double ****)&v97;
    v37 = *(unsigned int *)(v9 + 48);
    v36 = *(unsigned int *)(v9 + 52);
    v38 = *(unsigned int *)(v8 + 48);
    v39 = *(unsigned int *)(v8 + 52);
    v40 = *(_WORD **)(v9 + 24);
    if (*(_BYTE *)(v9 + 72) && v40)
    {
      v41 = *(_QWORD *)(v9 + 8);
      v42 = *(std::__shared_weak_count **)(v9 + 16);
      if (v42)
      {
        v43 = (unint64_t *)&v42->__shared_owners_;
        do
          v44 = __ldxr(v43);
        while (__stxr(v44 + 1, v43));
        do
          v45 = __ldaxr(v43);
        while (__stlxr(v45 - 1, v43));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v40 = *(_WORD **)(v9 + 24);
    }
    v46 = *(_BYTE **)(v8 + 24);
    if (*(_BYTE *)(v8 + 72) && v46)
    {
      v47 = *(_QWORD *)(v8 + 8);
      v48 = *(std::__shared_weak_count **)(v8 + 16);
      if (v48)
      {
        v49 = (unint64_t *)&v48->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v46 = *(_BYTE **)(v8 + 24);
    }
    v52 = v34 - 1;
    v53 = 0.0;
    v99 = 0u;
    v100 = 0u;
    v54 = 2 * v37;
    v55 = v35 - 1;
    if (v55)
    {
      if (v34 == 1)
      {
        v85 = 0;
        v86 = 0;
        v87 = 2 * v36;
        do
        {
          v101[0] = &v46[v85];
          *(_QWORD *)&v99 = (char *)v40 + v86;
          *(_QWORD *)&v100 = &v46[v85];
          v53 = sub_22439D12C(&v99, &v98, (_WORD *)((char *)v40 + v86), v101, v53);
          v86 += v87;
          v85 += v39;
          --v55;
        }
        while (v55);
        v40 = (_WORD *)((char *)v40 + v86);
        v101[0] = &v46[v85];
        *(_QWORD *)&v99 = v40;
        *(_QWORD *)&v100 = &v46[v85];
LABEL_87:
        a3.n128_f64[0] = sub_22439D12C(&v99, &v98, v40, v101, v53);
        goto LABEL_88;
      }
      v56 = 0;
      v57 = 2 * v36;
      do
      {
        v101[0] = v46;
        v58 = v98;
        v59 = v52;
        v60 = v40;
        v61 = v46;
        do
        {
          *(_QWORD *)&v99 = v60;
          *(_QWORD *)&v100 = v61;
          v62 = *v58;
          LOWORD(v53) = *v60;
          v64 = *v62;
          v63 = v62[1];
          v65 = ((double)*(unint64_t *)&v53 - **v64) * *v64[1];
          v66 = fmax(v65, 0.0);
          if (v65 <= 1.0)
            v67 = v66;
          else
            v67 = 1.0;
          v68 = **v63 + v67 * *v63[1];
          *v61 = llround(v68);
          v58 = v98;
          v69 = v99;
          v70 = v100;
          LOWORD(v68) = *(_WORD *)(v99 + 2);
          v71 = (*v98)[1];
          v72 = ((double)*(unint64_t *)&v68 - ****v98) * *(**v98)[1];
          v73 = fmax(v72, 0.0);
          v75 = *v71;
          v74 = v71[1];
          if (v72 <= 1.0)
            v76 = v73;
          else
            v76 = 1.0;
          v77 = *v75 + v76 * *v74;
          *(_BYTE *)(v100 + 1) = llround(v77);
          LOWORD(v77) = *(_WORD *)(v69 + 4);
          v78 = (*v58)[1];
          v79 = ((double)*(unint64_t *)&v77 - ****v58) * *(**v58)[1];
          v80 = fmax(v79, 0.0);
          v81 = *v78;
          v82 = v78[1];
          if (v79 <= 1.0)
            v83 = v80;
          else
            v83 = 1.0;
          v53 = *v81 + v83 * *v82;
          *(_BYTE *)(v70 + 2) = llround(v53);
          v61 = &v101[0][v38];
          v101[0] += v38;
          v60 = (_WORD *)((char *)v60 + v54);
          --v59;
        }
        while (v59);
        v53 = sub_22439D12C(&v99, &v98, v60, v101, v53);
        v40 = (_WORD *)((char *)v40 + v57);
        v46 += v39;
        ++v56;
      }
      while (v56 != v55);
    }
    v101[0] = v46;
    *(_QWORD *)&v99 = v40;
    for (*(_QWORD *)&v100 = v46; v52; --v52)
    {
      v53 = sub_22439D12C(&v99, &v98, v40, v101, v53);
      v101[0] += v38;
      v40 = (_WORD *)((char *)v40 + v54);
    }
    goto LABEL_87;
  }
LABEL_49:
  v95 = 0;
  v97 = v88;
  if (*(_DWORD *)(v9 + 32))
    goto LABEL_50;
LABEL_88:
  v84 = v95;
  v95 = 0;
  if (v84)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v84 + 8))(v84, a3);
  result = v96;
  v96 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22439CB74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22439CBD8(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  int v8;
  double v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v14 = v8;
    v13 = (int)v9;
    HIWORD(v12) = v8;
    LOWORD(v12) = (int)v9;
  }
  else
  {
    v14 = 0;
    v13 = -1;
    v12 = 255;
  }
  v11[0] = (char *)&v12 + 2;
  v11[1] = &v14;
  v11[2] = &v12;
  v11[3] = &v13;
  return sub_22439D244(v4, v5, (uint64_t)v11);
}

uint64_t sub_22439CC94(uint64_t **a1)
{
  return sub_22439CCA0(**a1, (*a1)[1]);
}

uint64_t sub_22439CCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v52 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v51, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v52, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v51 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(_BYTE **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(_BYTE **)(a1 + 24);
      }
      v34 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_BYTE **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            *v34 = *v28;
            v34[1] = v28[2];
            v34[2] = v28[4];
            v34 += v27;
            v28 += 2 * v24;
            --v42;
          }
          while (v42);
        }
        else
        {
          v43 = 0;
          v44 = v34 + 2;
          v45 = v28 + 4;
          do
          {
            v46 = v45;
            v47 = v44;
            v48 = v22 - 1;
            do
            {
              *(v47 - 2) = *(v46 - 4);
              *(v47 - 1) = *(v46 - 2);
              *v47 = *v46;
              v47 += v26;
              v46 += v41;
              --v48;
            }
            while (v48);
            *(v47 - 2) = *(v46 - 4);
            *(v47 - 1) = *(v46 - 2);
            *v47 = *v46;
            v28 += 2 * v24;
            v34 += v27;
            ++v43;
            v44 += v27;
            v45 += 2 * v24;
          }
          while (v43 != v42);
        }
      }
      if (v22 != 1)
      {
        do
        {
          *v34 = *v28;
          v34[1] = v28[2];
          v34[2] = v28[4];
          v34 += v26;
          v28 += v41;
          --v40;
        }
        while (v40);
      }
      *v34 = *v28;
      v34[1] = v28[2];
      v34[2] = v28[4];
    }
  }
LABEL_65:
  v49 = v51;
  v51 = 0;
  if (v49)
    (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
  result = v52;
  v52 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22439D0C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_22439D12C(_QWORD *a1, double *****a2, _WORD *a3, _BYTE **a4, double a5)
{
  _BYTE *v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double ***v13;
  double **v14;
  double **v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double result;

  *a1 = a3;
  v5 = *a4;
  v6 = **a2;
  LOWORD(a5) = *a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = ((double)*(unint64_t *)&a5 - **v8) * *v8[1];
  v10 = fmax(v9, 0.0);
  if (v9 <= 1.0)
    v11 = v10;
  else
    v11 = 1.0;
  v12 = **v7 + v11 * *v7[1];
  a1[2] = v5;
  *v5 = llround(v12);
  v13 = **a2;
  LOWORD(v12) = *(_WORD *)(*a1 + 2);
  v15 = *v13;
  v14 = v13[1];
  v16 = ((double)*(unint64_t *)&v12 - **v15) * *v15[1];
  v17 = fmax(v16, 0.0);
  if (v16 <= 1.0)
    v18 = v17;
  else
    v18 = 1.0;
  v19 = **v14 + v18 * *v14[1];
  *(_BYTE *)(a1[2] + 1) = llround(v19);
  v20 = **a2;
  LOWORD(v19) = *(_WORD *)(*a1 + 4);
  v22 = *v20;
  v21 = v20[1];
  v23 = ((double)*(unint64_t *)&v19 - **v22) * *v22[1];
  v24 = fmax(v23, 0.0);
  if (v23 <= 1.0)
    v25 = v24;
  else
    v25 = 1.0;
  result = **v21 + v25 * *v21[1];
  *(_BYTE *)(a1[2] + 2) = llround(result);
  return result;
}

uint64_t sub_22439D244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int16 ***v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = (unsigned __int16 ***)&v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_BYTE **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = HIDWORD(v56);
        v43 = 2 * v56;
        do
        {
          sub_22439D664(&v50, v57, &v49, v29, v35);
          v35 += v42;
          v29 = (_WORD *)((char *)v29 + v43);
          --v41;
        }
        while (v41);
      }
      sub_22439D664(&v50, v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22439D600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_22439D664(_DWORD *result, _QWORD *a2, unsigned __int16 ****a3, _WORD *a4, _BYTE *a5)
{
  int v5;
  unsigned __int16 *v6;
  char v7;
  unsigned __int16 **v8;
  unsigned int v9;
  char v10;
  unsigned __int16 **v11;
  unsigned int v12;
  unsigned __int16 *v13;
  char v14;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v17;
  unsigned int v18;
  char v19;
  unsigned __int16 **v20;
  unsigned int v21;
  unsigned __int16 *v22;
  char v23;
  uint64_t v24;
  unsigned __int16 **v25;
  unsigned int v26;

  *a2 = a4;
  a2[2] = a5;
  if (result[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = (unsigned __int16)*a4;
      if (v9 >= **v8)
        v10 = v9 <= *v8[2] ? *a4 : *(_BYTE *)v8[3];
      else
        v10 = *(_BYTE *)v8[1];
      *a5 = v10;
      v11 = **a3;
      v12 = *(unsigned __int16 *)(*a2 + 2);
      if (v12 < **v11)
        break;
      if (v12 > *v11[2])
      {
        v13 = v11[3];
        goto LABEL_15;
      }
      v14 = *(_WORD *)(*a2 + 2);
LABEL_17:
      *(_BYTE *)(a2[2] + 1) = v14;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 4);
      if (v16 < **v15)
      {
        v6 = v15[1];
      }
      else
      {
        if (v16 <= *v15[2])
        {
          v7 = *(_WORD *)(*a2 + 4);
          goto LABEL_5;
        }
        v6 = v15[3];
      }
      v7 = *(_BYTE *)v6;
LABEL_5:
      *(_BYTE *)(a2[2] + 2) = v7;
      a4 += result[6];
      a5 += result[7];
      if (++v5 >= result[5])
        goto LABEL_21;
    }
    v13 = v11[1];
LABEL_15:
    v14 = *(_BYTE *)v13;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v17 = **a3;
  v18 = (unsigned __int16)*a4;
  if (v18 >= **v17)
  {
    if (v18 <= *v17[2])
      v19 = *a4;
    else
      v19 = *(_BYTE *)v17[3];
  }
  else
  {
    v19 = *(_BYTE *)v17[1];
  }
  *a5 = v19;
  v20 = **a3;
  v21 = *(unsigned __int16 *)(*a2 + 2);
  if (v21 < **v20)
  {
    v22 = v20[1];
LABEL_30:
    v23 = *(_BYTE *)v22;
    goto LABEL_32;
  }
  if (v21 > *v20[2])
  {
    v22 = v20[3];
    goto LABEL_30;
  }
  v23 = *(_WORD *)(*a2 + 2);
LABEL_32:
  *(_BYTE *)(a2[2] + 1) = v23;
  v24 = a2[2];
  v25 = **a3;
  v26 = *(unsigned __int16 *)(*a2 + 4);
  if (v26 >= **v25)
  {
    if (v26 <= *v25[2])
      *(_BYTE *)(v24 + 2) = v26;
    else
      *(_BYTE *)(v24 + 2) = *(_BYTE *)v25[3];
  }
  else
  {
    *(_BYTE *)(v24 + 2) = *(_BYTE *)v25[1];
  }
  return result;
}

void sub_22439D890(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E3158(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22439D97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_22439D998(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  unsigned __int16 v15;
  double v16;
  unsigned int v18;
  unsigned int v19;
  unsigned int v23;
  double v26;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _WORD *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  _WORD *v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  double v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[2];
  unint64_t v73;
  double v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  double ****v80;
  uint64_t v81;
  int v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  _OWORD v88[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v18 = 1006632960;
    goto LABEL_14;
  }
  v7 = -65536;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -65504.0;
  if (*(double *)(a2 + 24) >= -65504.0)
    v10 = *(double *)(a2 + 24);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v15 = LOWORD(_S0);
  v16 = 65504.0;
  if (*(double *)(a2 + 32) <= 65504.0)
    v16 = *(double *)(a2 + 32);
  _S0 = v16;
  __asm { FCVT            H0, S0 }
  v18 = v15 | (LOWORD(_S0) << 16);
LABEL_14:
  v19 = (unsigned __int16)v7;
  _H0 = v18;
  _S1 = HIWORD(v18);
  __asm { FCVT            S3, H0 }
  v23 = HIWORD(v7);
  __asm { FCVT            S3, H1 }
  _ZF = _ZF && _S3 == (float)v23;
  if (_ZF)
    return sub_22439EB38(v9, v8, *(float *)&v18);
  v76 = (double)v19;
  v26 = 1.0 / ((double)v23 - (double)v19);
  __asm { FCVT            D0, H0 }
  v74 = _D0;
  v75 = v26;
  __asm { FCVT            D1, H1 }
  a3.n128_f64[0] = _D1 - _D0;
  v73 = a3.n128_u64[0];
  v72[0] = &v76;
  v72[1] = &v75;
  v71[0] = &v74;
  v71[1] = &v73;
  v70[0] = v72;
  v70[1] = v71;
  v29 = *(_QWORD *)(v9 + 8);
  if (!v29)
    goto LABEL_35;
  v30 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v30)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(p_shared_owners);
  while (__stxr(v32 + 1, p_shared_owners));
  do
    v33 = __ldaxr(p_shared_owners);
  while (__stlxr(v33 - 1, p_shared_owners));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
  v29 = *(_QWORD *)(v9 + 8);
  v34 = *(std::__shared_weak_count **)(v9 + 16);
  if (!v34)
    goto LABEL_82;
  v35 = (unint64_t *)&v34->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_82:
    if (*(_BYTE *)(v9 + 73))
      goto LABEL_31;
LABEL_35:
    v78 = 0;
    v38 = *(_QWORD *)(v8 + 8);
    if (!v38)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
  std::__shared_weak_count::__release_weak(v34);
  if (!*(_BYTE *)(v9 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v29 + 96))(&v78, v29, 0);
  v38 = *(_QWORD *)(v8 + 8);
  if (!v38)
  {
LABEL_51:
    v77 = 0;
    v79 = v70;
    v48 = *(_DWORD *)(v9 + 32);
    if (v48)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v40 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v40)
    goto LABEL_47;
  v41 = (unint64_t *)&v40->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  v38 = *(_QWORD *)(v8 + 8);
  v44 = *(std::__shared_weak_count **)(v8 + 16);
  if (!v44)
    goto LABEL_47;
  v45 = (unint64_t *)&v44->__shared_owners_;
  do
    v46 = __ldxr(v45);
  while (__stxr(v46 + 1, v45));
  do
    v47 = __ldaxr(v45);
  while (__stlxr(v47 - 1, v45));
  if (!v47)
  {
    ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
    std::__shared_weak_count::__release_weak(v44);
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v8 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v77, v38, 1);
  v79 = v70;
  v48 = *(_DWORD *)(v9 + 32);
  if (v48)
  {
LABEL_52:
    v49 = *(_DWORD *)(v9 + 36);
    if (v49)
    {
      v50 = *(_DWORD *)(v9 + 40);
      if (v50)
      {
        v80 = (double ****)&v79;
        v81 = 0;
        v82 = v48 - 1;
        v51 = *(unsigned int *)(v9 + 48);
        v52 = *(unsigned int *)(v8 + 48);
        v83 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v84 = v49 - 1;
        v85 = v51 | (v52 << 32);
        v86 = v50 - 1;
        v87 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v53 = *(_WORD **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v53)
        {
          v54 = *(_QWORD *)(v9 + 8);
          v55 = *(std::__shared_weak_count **)(v9 + 16);
          if (v55)
          {
            v56 = (unint64_t *)&v55->__shared_owners_;
            do
              v57 = __ldxr(v56);
            while (__stxr(v57 + 1, v56));
            do
              v58 = __ldaxr(v56);
            while (__stlxr(v58 - 1, v56));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
              std::__shared_weak_count::__release_weak(v55);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v54 + 88))(v54, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v53 = *(_WORD **)(v9 + 24);
        }
        v59 = *(_WORD **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v59)
        {
          v60 = *(_QWORD *)(v8 + 8);
          v61 = *(std::__shared_weak_count **)(v8 + 16);
          if (v61)
          {
            v62 = (unint64_t *)&v61->__shared_owners_;
            do
              v63 = __ldxr(v62);
            while (__stxr(v63 + 1, v62));
            do
              v64 = __ldaxr(v62);
            while (__stlxr(v64 - 1, v62));
            if (!v64)
            {
              ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
              std::__shared_weak_count::__release_weak(v61);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v60 + 88))(v60, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v59 = *(_WORD **)(v8 + 24);
        }
        v65 = 0.0;
        memset(v88, 0, sizeof(v88));
        v66 = v86;
        if (v86)
        {
          v67 = 2 * v87;
          v68 = 2 * HIDWORD(v87);
          do
          {
            *(_QWORD *)&v65 = sub_22439F048(&v81, v88, &v80, v53, v59, v65, _D1, v26);
            v53 = (_WORD *)((char *)v53 + v67);
            v59 = (_WORD *)((char *)v59 + v68);
            --v66;
          }
          while (v66);
        }
        a3.n128_u64[0] = sub_22439F048(&v81, v88, &v80, v53, v59, v65, _D1, v26);
      }
    }
  }
LABEL_76:
  v69 = v77;
  v77 = 0;
  if (v69)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v69 + 8))(v69, a3);
  result = v78;
  v78 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22439DE9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22439DF00(uint64_t **a1, uint64_t a2, __n128 _Q0)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  unsigned __int16 v12;
  int v14;
  uint64_t result;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 *v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  _WORD *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int16 *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  _WORD *v87;
  uint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *p_shared_owners;
  unint64_t v99;
  unint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  int v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int16 *v119;
  uint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  unint64_t v124;
  _WORD *v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int16 *v135;
  __int16 *v136;
  __int16 *v137;
  __int16 *v138;
  __int16 v139;
  __int16 v140;
  __int16 v141;
  __int16 v142;
  uint64_t v143;
  uint64_t v144;
  __int16 **v145;
  unsigned __int16 ***v146;
  uint64_t v147;
  int v148;
  unint64_t v149;
  int v150;
  uint64_t v151;
  int v152;
  unint64_t v153;
  __int128 v154;
  __int128 v155;

  v4 = **a1;
  v3 = (*a1)[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v5 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v5 = -65504.0;
    v6 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v6 = 65504.0;
    if (v5 < -65504.0)
      v5 = -65504.0;
    _S0 = v5;
    __asm { FCVT            H0, S0 }
    v12 = LOWORD(_S0);
    if (v6 <= 65504.0)
      _Q0.n128_f64[0] = v6;
    else
      _Q0.n128_f64[0] = 65504.0;
    _S0 = _Q0.n128_f64[0];
    __asm { FCVT            H0, S0 }
    v14 = v12 | (LOWORD(_S0) << 16);
  }
  else
  {
    v14 = 2080373759;
  }
  _H0 = v14;
  __asm { FCVT            S1, H0 }
  _H0 = HIWORD(v14);
  __asm { FCVT            S0, H0 }
  if (_NF != _VF || _Q0.n128_f32[0] > 65535.0)
  {
    if (_S1 < 0.0)
    {
      if (_Q0.n128_f32[0] > 65535.0)
        return sub_22439EB38(**a1, v3, _Q0.n128_f32[0]);
      v142 = HIWORD(v14);
      v141 = (int)_Q0.n128_f32[0];
      v135 = &v141;
      v136 = &v142;
      v96 = *(_QWORD *)(v4 + 8);
      if (!v96)
        goto LABEL_151;
      v97 = *(std::__shared_weak_count **)(v4 + 16);
      if (v97)
      {
        p_shared_owners = (unint64_t *)&v97->__shared_owners_;
        do
          v99 = __ldxr(p_shared_owners);
        while (__stxr(v99 + 1, p_shared_owners));
        do
          v100 = __ldaxr(p_shared_owners);
        while (__stlxr(v100 - 1, p_shared_owners));
        if (!v100)
        {
          ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
          std::__shared_weak_count::__release_weak(v97);
        }
        v96 = *(_QWORD *)(v4 + 8);
        v101 = *(std::__shared_weak_count **)(v4 + 16);
        if (v101)
        {
          v102 = (unint64_t *)&v101->__shared_owners_;
          do
            v103 = __ldxr(v102);
          while (__stxr(v103 + 1, v102));
          do
            v104 = __ldaxr(v102);
          while (__stlxr(v104 - 1, v102));
          if (!v104)
          {
            ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
            std::__shared_weak_count::__release_weak(v101);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v96 + 96))(&v144, v96, 0);
        v105 = *(_QWORD *)(v3 + 8);
        if (!v105)
          goto LABEL_166;
      }
      else
      {
LABEL_151:
        v144 = 0;
        v105 = *(_QWORD *)(v3 + 8);
        if (!v105)
          goto LABEL_166;
      }
      v106 = *(std::__shared_weak_count **)(v3 + 16);
      if (v106)
      {
        v107 = (unint64_t *)&v106->__shared_owners_;
        do
          v108 = __ldxr(v107);
        while (__stxr(v108 + 1, v107));
        do
          v109 = __ldaxr(v107);
        while (__stlxr(v109 - 1, v107));
        if (!v109)
        {
          ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
          std::__shared_weak_count::__release_weak(v106);
        }
        v105 = *(_QWORD *)(v3 + 8);
        v110 = *(std::__shared_weak_count **)(v3 + 16);
        if (v110)
        {
          v111 = (unint64_t *)&v110->__shared_owners_;
          do
            v112 = __ldxr(v111);
          while (__stxr(v112 + 1, v111));
          do
            v113 = __ldaxr(v111);
          while (__stlxr(v113 - 1, v111));
          if (!v113)
          {
            ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
            std::__shared_weak_count::__release_weak(v110);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v105 + 96))(&v143, v105, 1);
LABEL_167:
        v145 = &v135;
        v114 = *(_DWORD *)(v4 + 32);
        if (v114)
        {
          v115 = *(_DWORD *)(v4 + 36);
          if (v115)
          {
            v116 = *(_DWORD *)(v4 + 40);
            if (v116)
            {
              v146 = (unsigned __int16 ***)&v145;
              v147 = 0;
              v148 = v114 - 1;
              v117 = *(unsigned int *)(v4 + 48);
              v118 = *(unsigned int *)(v3 + 48);
              v149 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
              v150 = v115 - 1;
              v151 = v117 | (v118 << 32);
              v152 = v116 - 1;
              v153 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
              v119 = *(unsigned __int16 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v119)
              {
                v120 = *(_QWORD *)(v4 + 8);
                v121 = *(std::__shared_weak_count **)(v4 + 16);
                if (v121)
                {
                  v122 = (unint64_t *)&v121->__shared_owners_;
                  do
                    v123 = __ldxr(v122);
                  while (__stxr(v123 + 1, v122));
                  do
                    v124 = __ldaxr(v122);
                  while (__stlxr(v124 - 1, v122));
                  if (!v124)
                  {
                    ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
                    std::__shared_weak_count::__release_weak(v121);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v120 + 88))(v120, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v119 = *(unsigned __int16 **)(v4 + 24);
              }
              v125 = *(_WORD **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v125)
              {
                v126 = *(_QWORD *)(v3 + 8);
                v127 = *(std::__shared_weak_count **)(v3 + 16);
                if (v127)
                {
                  v128 = (unint64_t *)&v127->__shared_owners_;
                  do
                    v129 = __ldxr(v128);
                  while (__stxr(v129 + 1, v128));
                  do
                    v130 = __ldaxr(v128);
                  while (__stlxr(v130 - 1, v128));
                  if (!v130)
                  {
                    ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
                    std::__shared_weak_count::__release_weak(v127);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v126 + 88))(v126, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v125 = *(_WORD **)(v3 + 24);
              }
              v155 = 0u;
              v154 = 0u;
              v131 = v152;
              if (v152)
              {
                v132 = 2 * v153;
                v133 = 2 * HIDWORD(v153);
                do
                {
                  sub_22439F69C(&v147, &v154, &v146, v119, v125);
                  v119 = (unsigned __int16 *)((char *)v119 + v132);
                  v125 = (_WORD *)((char *)v125 + v133);
                  --v131;
                }
                while (v131);
              }
              _Q0.n128_u64[0] = sub_22439F69C(&v147, &v154, &v146, v119, v125);
            }
          }
        }
        goto LABEL_192;
      }
LABEL_166:
      v143 = 0;
      goto LABEL_167;
    }
    v142 = v14;
    v141 = (int)_S1;
    v135 = &v141;
    v136 = &v142;
    v58 = *(_QWORD *)(v4 + 8);
    if (!v58)
      goto LABEL_94;
    v59 = *(std::__shared_weak_count **)(v4 + 16);
    if (v59)
    {
      v60 = (unint64_t *)&v59->__shared_owners_;
      do
        v61 = __ldxr(v60);
      while (__stxr(v61 + 1, v60));
      do
        v62 = __ldaxr(v60);
      while (__stlxr(v62 - 1, v60));
      if (!v62)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v59->__on_zero_shared)(v59, _Q0);
        std::__shared_weak_count::__release_weak(v59);
      }
      v58 = *(_QWORD *)(v4 + 8);
      v63 = *(std::__shared_weak_count **)(v4 + 16);
      if (v63)
      {
        v64 = (unint64_t *)&v63->__shared_owners_;
        do
          v65 = __ldxr(v64);
        while (__stxr(v65 + 1, v64));
        do
          v66 = __ldaxr(v64);
        while (__stlxr(v66 - 1, v64));
        if (!v66)
        {
          ((void (*)(std::__shared_weak_count *, __n128))v63->__on_zero_shared)(v63, _Q0);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD, __n128))(*(_QWORD *)v58 + 96))(&v144, v58, 0, _Q0);
      v67 = *(_QWORD *)(v3 + 8);
      if (!v67)
        goto LABEL_110;
    }
    else
    {
LABEL_94:
      v144 = 0;
      v67 = *(_QWORD *)(v3 + 8);
      if (!v67)
        goto LABEL_110;
    }
    v68 = *(std::__shared_weak_count **)(v3 + 16);
    if (v68)
    {
      v69 = (unint64_t *)&v68->__shared_owners_;
      do
        v70 = __ldxr(v69);
      while (__stxr(v70 + 1, v69));
      do
        v71 = __ldaxr(v69);
      while (__stlxr(v71 - 1, v69));
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      v67 = *(_QWORD *)(v3 + 8);
      v72 = *(std::__shared_weak_count **)(v3 + 16);
      if (v72)
      {
        v73 = (unint64_t *)&v72->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v67 + 96))(&v143, v67, 1);
      v145 = &v135;
      v76 = *(_DWORD *)(v4 + 32);
      if (!v76)
        goto LABEL_192;
      goto LABEL_111;
    }
LABEL_110:
    v143 = 0;
    v145 = &v135;
    v76 = *(_DWORD *)(v4 + 32);
    if (!v76)
      goto LABEL_192;
LABEL_111:
    v77 = *(_DWORD *)(v4 + 36);
    if (v77)
    {
      v78 = *(_DWORD *)(v4 + 40);
      if (v78)
      {
        v146 = (unsigned __int16 ***)&v145;
        v147 = 0;
        v148 = v76 - 1;
        v79 = *(unsigned int *)(v4 + 48);
        v80 = *(unsigned int *)(v3 + 48);
        v149 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v150 = v77 - 1;
        v151 = v79 | (v80 << 32);
        v152 = v78 - 1;
        v153 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v81 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v81)
        {
          v82 = *(_QWORD *)(v4 + 8);
          v83 = *(std::__shared_weak_count **)(v4 + 16);
          if (v83)
          {
            v84 = (unint64_t *)&v83->__shared_owners_;
            do
              v85 = __ldxr(v84);
            while (__stxr(v85 + 1, v84));
            do
              v86 = __ldaxr(v84);
            while (__stlxr(v86 - 1, v84));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
              std::__shared_weak_count::__release_weak(v83);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v82 + 88))(v82, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v81 = *(unsigned __int16 **)(v4 + 24);
        }
        v87 = *(_WORD **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v87)
        {
          v88 = *(_QWORD *)(v3 + 8);
          v89 = *(std::__shared_weak_count **)(v3 + 16);
          if (v89)
          {
            v90 = (unint64_t *)&v89->__shared_owners_;
            do
              v91 = __ldxr(v90);
            while (__stxr(v91 + 1, v90));
            do
              v92 = __ldaxr(v90);
            while (__stlxr(v92 - 1, v90));
            if (!v92)
            {
              ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
              std::__shared_weak_count::__release_weak(v89);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v88 + 88))(v88, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v87 = *(_WORD **)(v3 + 24);
        }
        v155 = 0u;
        v154 = 0u;
        v93 = v152;
        if (v152)
        {
          v94 = 2 * v153;
          v95 = 2 * HIDWORD(v153);
          do
          {
            sub_22439F4F8(&v147, &v154, &v146, v81, v87);
            v81 = (unsigned __int16 *)((char *)v81 + v94);
            v87 = (_WORD *)((char *)v87 + v95);
            --v93;
          }
          while (v93);
        }
        _Q0.n128_u64[0] = sub_22439F4F8(&v147, &v154, &v146, v81, v87);
      }
    }
    goto LABEL_192;
  }
  v141 = HIWORD(v14);
  v142 = v14;
  v140 = (int)_S1;
  v139 = (int)_Q0.n128_f32[0];
  v135 = &v140;
  v136 = &v142;
  v137 = &v139;
  v138 = &v141;
  v20 = *(_QWORD *)(v4 + 8);
  if (!v20)
    goto LABEL_37;
  v21 = *(std::__shared_weak_count **)(v4 + 16);
  if (v21)
  {
    v22 = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
    v20 = *(_QWORD *)(v4 + 8);
    v25 = *(std::__shared_weak_count **)(v4 + 16);
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 1, v26));
      do
        v28 = __ldaxr(v26);
      while (__stlxr(v28 - 1, v26));
      if (!v28)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v20 + 96))(&v144, v20, 0);
    v29 = *(_QWORD *)(v3 + 8);
    if (!v29)
      goto LABEL_53;
  }
  else
  {
LABEL_37:
    v144 = 0;
    v29 = *(_QWORD *)(v3 + 8);
    if (!v29)
      goto LABEL_53;
  }
  v30 = *(std::__shared_weak_count **)(v3 + 16);
  if (v30)
  {
    v31 = (unint64_t *)&v30->__shared_owners_;
    do
      v32 = __ldxr(v31);
    while (__stxr(v32 + 1, v31));
    do
      v33 = __ldaxr(v31);
    while (__stlxr(v33 - 1, v31));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
    v29 = *(_QWORD *)(v3 + 8);
    v34 = *(std::__shared_weak_count **)(v3 + 16);
    if (v34)
    {
      v35 = (unint64_t *)&v34->__shared_owners_;
      do
        v36 = __ldxr(v35);
      while (__stxr(v36 + 1, v35));
      do
        v37 = __ldaxr(v35);
      while (__stlxr(v37 - 1, v35));
      if (!v37)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
  }
  if (!*(_BYTE *)(v3 + 73))
  {
LABEL_53:
    v143 = 0;
    v145 = &v135;
    v38 = *(_DWORD *)(v4 + 32);
    if (v38)
      goto LABEL_54;
    goto LABEL_192;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v29 + 96))(&v143, v29, 1);
  v145 = &v135;
  v38 = *(_DWORD *)(v4 + 32);
  if (v38)
  {
LABEL_54:
    v39 = *(_DWORD *)(v4 + 36);
    if (v39)
    {
      v40 = *(_DWORD *)(v4 + 40);
      if (v40)
      {
        v146 = (unsigned __int16 ***)&v145;
        v147 = 0;
        v148 = v38 - 1;
        v41 = *(unsigned int *)(v4 + 48);
        v42 = *(unsigned int *)(v3 + 48);
        v149 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
        v150 = v39 - 1;
        v151 = v41 | (v42 << 32);
        v152 = v40 - 1;
        v153 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
        v43 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v43)
        {
          v44 = *(_QWORD *)(v4 + 8);
          v45 = *(std::__shared_weak_count **)(v4 + 16);
          if (v45)
          {
            v46 = (unint64_t *)&v45->__shared_owners_;
            do
              v47 = __ldxr(v46);
            while (__stxr(v47 + 1, v46));
            do
              v48 = __ldaxr(v46);
            while (__stlxr(v48 - 1, v46));
            if (!v48)
            {
              ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
              std::__shared_weak_count::__release_weak(v45);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v44 + 88))(v44, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v43 = *(unsigned __int16 **)(v4 + 24);
        }
        v49 = *(_WORD **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v49)
        {
          v50 = *(_QWORD *)(v3 + 8);
          v51 = *(std::__shared_weak_count **)(v3 + 16);
          if (v51)
          {
            v52 = (unint64_t *)&v51->__shared_owners_;
            do
              v53 = __ldxr(v52);
            while (__stxr(v53 + 1, v52));
            do
              v54 = __ldaxr(v52);
            while (__stlxr(v54 - 1, v52));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
              std::__shared_weak_count::__release_weak(v51);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v50 + 88))(v50, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v49 = *(_WORD **)(v3 + 24);
        }
        v155 = 0u;
        v154 = 0u;
        v55 = v152;
        if (v152)
        {
          v56 = 2 * v153;
          v57 = 2 * HIDWORD(v153);
          do
          {
            sub_22439F2B4(&v147, &v154, &v146, v43, v49);
            v43 = (unsigned __int16 *)((char *)v43 + v56);
            v49 = (_WORD *)((char *)v49 + v57);
            --v55;
          }
          while (v55);
        }
        _Q0.n128_u64[0] = sub_22439F2B4(&v147, &v154, &v146, v43, v49);
      }
    }
  }
LABEL_192:
  v134 = v143;
  v143 = 0;
  if (v134)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v134 + 8))(v134, _Q0);
  result = v144;
  v144 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, _Q0);
  return result;
}

void sub_22439EA98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (!a16)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22439EB2C(uint64_t **a1, float a2)
{
  return sub_22439EB38(**a1, (*a1)[1], a2);
}

uint64_t sub_22439EB38(uint64_t a1, uint64_t a2, float _S0)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _WORD *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  _WORD *v46;
  _WORD *v47;
  _WORD *v48;
  _WORD *v49;
  int v50;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v69 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v68, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v69, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v68 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(_WORD **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v26;
      v43 = 2 * v28;
      v44 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOWORD(_S0) = *v29;
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *v35 = _S0;
            LOWORD(_S0) = v29[1];
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[1] = _S0;
            LOWORD(_S0) = v29[2];
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            v35[2] = LOWORD(_S0);
            v29 += v25;
            v35 += v27;
            --v44;
          }
          while (v44);
        }
        else
        {
          v45 = 0;
          v46 = v35 + 2;
          v47 = v29 + 2;
          do
          {
            v48 = v47;
            v49 = v46;
            v50 = v23 - 1;
            do
            {
              LOWORD(_S0) = *(v48 - 2);
              *(float *)&_S0 = (float)LODWORD(_S0);
              __asm { FCVT            H0, S0 }
              *(v49 - 2) = _S0;
              LOWORD(_S0) = *(v48 - 1);
              *(float *)&_S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *(v49 - 1) = _S0;
              LOWORD(_S0) = *v48;
              _S0 = (float)_S0;
              __asm { FCVT            H0, S0 }
              *v49 = LOWORD(_S0);
              v49 = (_WORD *)((char *)v49 + v43);
              v48 = (_WORD *)((char *)v48 + v42);
              --v50;
            }
            while (v50);
            LOWORD(_S0) = *(v48 - 2);
            *(float *)&_S0 = (float)LODWORD(_S0);
            __asm { FCVT            H0, S0 }
            *(v49 - 2) = _S0;
            LOWORD(_S0) = *(v48 - 1);
            *(float *)&_S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *(v49 - 1) = _S0;
            LOWORD(_S0) = *v48;
            _S0 = (float)_S0;
            __asm { FCVT            H0, S0 }
            *v49 = LOWORD(_S0);
            v29 += v25;
            v35 += v27;
            ++v45;
            v46 += v27;
            v47 += v25;
          }
          while (v45 != v44);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOWORD(_S0) = *v29;
          *(float *)&_S0 = (float)LODWORD(_S0);
          __asm { FCVT            H0, S0 }
          *v35 = _S0;
          LOWORD(_S0) = v29[1];
          *(float *)&_S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[1] = _S0;
          LOWORD(_S0) = v29[2];
          _S0 = (float)_S0;
          __asm { FCVT            H0, S0 }
          v35[2] = LOWORD(_S0);
          v29 = (_WORD *)((char *)v29 + v42);
          v35 = (_WORD *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      LOWORD(_S0) = *v29;
      *(float *)&_S0 = (float)LODWORD(_S0);
      __asm { FCVT            H0, S0 }
      *v35 = _S0;
      LOWORD(_S0) = v29[1];
      *(float *)&_S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[1] = _S0;
      LOWORD(_S0) = v29[2];
      _S0 = (float)_S0;
      __asm { FCVT            H0, S0 }
      v35[2] = LOWORD(_S0);
    }
  }
LABEL_65:
  v66 = v68;
  v68 = 0;
  if (v66)
    (*(void (**)(uint64_t))(*(_QWORD *)v66 + 8))(v66);
  result = v69;
  v69 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22439EFE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 sub_22439F048@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, double *****a3@<X2>, _WORD *a4@<X3>, _WORD *a5@<X4>, double a6@<D0>, double a7@<D1>, double _D2@<D2>)
{
  unsigned int v8;
  double ***v9;
  double **v10;
  double **v11;
  double v12;
  double v13;
  double v14;
  double ***v20;
  double **v21;
  double **v22;
  double v23;
  double v24;
  double v25;
  double ***v27;
  double **v28;
  double **v29;
  double v30;
  double v31;
  double v32;
  double ***v33;
  double **v34;
  double **v35;
  double v36;
  double v37;
  double v38;
  double ***v40;
  double **v41;
  double **v42;
  double v43;
  double v44;
  double v45;
  double ***v47;
  double **v48;
  double **v49;
  double v50;
  double v51;
  double v52;
  __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v8 = 0;
    a6 = 0.0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v9 = **a3;
      LOWORD(_D2) = *a4;
      v11 = *v9;
      v10 = v9[1];
      v12 = ((double)*(unint64_t *)&_D2 - **v11) * *v11[1];
      v13 = fmax(v12, 0.0);
      if (v12 <= 1.0)
        v14 = v13;
      else
        v14 = 1.0;
      _D2 = **v10 + v14 * *v10[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *a5 = LOWORD(_D2);
      v20 = **a3;
      LOWORD(_D2) = *(_WORD *)(*a2 + 2);
      v22 = *v20;
      v21 = v20[1];
      v23 = ((double)*(unint64_t *)&_D2 - **v22) * *v22[1];
      v24 = fmax(v23, 0.0);
      if (v23 <= 1.0)
        v25 = v24;
      else
        v25 = 1.0;
      _D2 = **v21 + v25 * *v21[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 2) = LOWORD(_D2);
      v27 = **a3;
      LOWORD(_D2) = *(_WORD *)(*a2 + 4);
      v29 = *v27;
      v28 = v27[1];
      v30 = ((double)*(unint64_t *)&_D2 - **v29) * *v29[1];
      v31 = fmax(v30, 0.0);
      if (v30 <= 1.0)
        v32 = v31;
      else
        v32 = 1.0;
      _D2 = **v28 + v32 * *v28[1];
      *(float *)&_D2 = _D2;
      __asm { FCVT            H2, S2 }
      *(_WORD *)(a2[2] + 4) = LOWORD(_D2);
      a4 += a1[6];
      a5 += a1[7];
      ++v8;
    }
    while (v8 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v33 = **a3;
  LOWORD(a6) = *a4;
  v35 = *v33;
  v34 = v33[1];
  v36 = ((double)*(unint64_t *)&a6 - **v35) * *v35[1];
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  _D0 = **v34 + v38 * *v34[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *a5 = LOWORD(_D0);
  v40 = **a3;
  LOWORD(_D0) = *(_WORD *)(*a2 + 2);
  v42 = *v40;
  v41 = v40[1];
  v43 = ((double)*(unint64_t *)&_D0 - **v42) * *v42[1];
  v44 = fmax(v43, 0.0);
  if (v43 <= 1.0)
    v45 = v44;
  else
    v45 = 1.0;
  _D0 = **v41 + v45 * *v41[1];
  *(float *)&_D0 = _D0;
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 2) = LOWORD(_D0);
  v47 = **a3;
  LOWORD(_D0) = *(_WORD *)(*a2 + 4);
  v49 = *v47;
  v48 = v47[1];
  v50 = ((double)*(unint64_t *)&_D0 - **v49) * *v49[1];
  v51 = fmax(v50, 0.0);
  if (v50 <= 1.0)
    v52 = v51;
  else
    v52 = 1.0;
  _S0 = **v48 + v52 * *v48[1];
  __asm { FCVT            H0, S0 }
  *(_WORD *)(a2[2] + 4) = result;
  return result;
}

unsigned __int16 sub_22439F2B4@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  int v5;
  unsigned __int16 *v6;
  unsigned __int16 **v8;
  unsigned int v9;
  unsigned __int16 **v16;
  unsigned int v17;
  unsigned __int16 *v18;
  unsigned __int16 **v21;
  unsigned int v22;
  unsigned __int16 **v24;
  unsigned int v25;
  unsigned __int16 **v28;
  unsigned int v29;
  unsigned __int16 *v30;
  uint64_t v33;
  unsigned __int16 **v34;
  unsigned int v35;
  unsigned __int16 *v36;
  unsigned __int16 result;
  unsigned __int16 *v38;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    while (1)
    {
      *a2 = a4;
      a2[2] = a5;
      v8 = **a3;
      v9 = *a4;
      if (v9 >= **v8)
      {
        if (v9 <= *v8[2])
        {
          _S0 = (float)v9;
          __asm { FCVT            H0, S0 }
        }
        else
        {
          _H0 = *v8[3];
        }
      }
      else
      {
        _H0 = *v8[1];
      }
      *a5 = _H0;
      v16 = **a3;
      v17 = *(unsigned __int16 *)(*a2 + 2);
      if (v17 < **v16)
        break;
      if (v17 > *v16[2])
      {
        v18 = v16[3];
        goto LABEL_15;
      }
      _S0 = (float)v17;
      __asm { FCVT            H0, S0 }
LABEL_17:
      *(_WORD *)(a2[2] + 2) = _H0;
      v21 = **a3;
      v22 = *(unsigned __int16 *)(*a2 + 4);
      if (v22 < **v21)
      {
        v6 = v21[1];
      }
      else
      {
        if (v22 <= *v21[2])
        {
          _S0 = (float)v22;
          __asm { FCVT            H0, S0 }
          goto LABEL_5;
        }
        v6 = v21[3];
      }
      _H0 = *v6;
LABEL_5:
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      if (++v5 >= a1[5])
        goto LABEL_21;
    }
    v18 = v16[1];
LABEL_15:
    _H0 = *v18;
    goto LABEL_17;
  }
LABEL_21:
  *a2 = a4;
  a2[2] = a5;
  v24 = **a3;
  v25 = *a4;
  if (v25 >= **v24)
  {
    if (v25 <= *v24[2])
    {
      _S0 = (float)v25;
      __asm { FCVT            H0, S0 }
    }
    else
    {
      _H0 = *v24[3];
    }
  }
  else
  {
    _H0 = *v24[1];
  }
  *a5 = _H0;
  v28 = **a3;
  v29 = *(unsigned __int16 *)(*a2 + 2);
  if (v29 < **v28)
  {
    v30 = v28[1];
LABEL_30:
    _H0 = *v30;
    goto LABEL_32;
  }
  if (v29 > *v28[2])
  {
    v30 = v28[3];
    goto LABEL_30;
  }
  _S0 = (float)v29;
  __asm { FCVT            H0, S0 }
LABEL_32:
  *(_WORD *)(a2[2] + 2) = _H0;
  v33 = a2[2];
  v34 = **a3;
  v35 = *(unsigned __int16 *)(*a2 + 4);
  if (v35 >= **v34)
  {
    if (v35 <= *v34[2])
    {
      _S0 = (float)v35;
      __asm { FCVT            H0, S0 }
      *(_WORD *)(v33 + 4) = result;
    }
    else
    {
      v38 = v34[3];
      result = *v38;
      *(_WORD *)(v33 + 4) = *v38;
    }
  }
  else
  {
    v36 = v34[1];
    result = *v36;
    *(_WORD *)(v33 + 4) = *v36;
  }
  return result;
}

unsigned __int16 sub_22439F4F8@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v22;
  unsigned int v23;
  unsigned __int16 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int16 **v31;
  unsigned int v32;
  unsigned __int16 *v33;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 >= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 >= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 < **v19)
      {
        _H0 = *v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 >= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int16 *)(*a2 + 2);
  if (v27 >= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int16 *)(*a2 + 4);
  if (v32 >= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *v33;
    *(_WORD *)(v30 + 4) = *v33;
  }
  return result;
}

unsigned __int16 sub_22439F69C@<H0>(_DWORD *a1@<X0>, _QWORD *a2@<X1>, unsigned __int16 ****a3@<X2>, unsigned __int16 *a4@<X3>, _WORD *a5@<X4>)
{
  unsigned int v5;
  unsigned __int16 **v7;
  unsigned int v8;
  unsigned __int16 **v15;
  unsigned int v16;
  unsigned __int16 **v19;
  unsigned int v20;
  unsigned __int16 **v22;
  unsigned int v23;
  unsigned __int16 **v26;
  unsigned int v27;
  uint64_t v30;
  unsigned __int16 **v31;
  unsigned int v32;
  unsigned __int16 *v33;
  unsigned __int16 result;

  *a2 = a4;
  a2[2] = a5;
  if (a1[5])
  {
    v5 = 0;
    do
    {
      *a2 = a4;
      a2[2] = a5;
      v7 = **a3;
      v8 = *a4;
      if (v8 <= **v7)
      {
        _S0 = (float)v8;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v7[1];
      }
      *a5 = _H0;
      v15 = **a3;
      v16 = *(unsigned __int16 *)(*a2 + 2);
      if (v16 <= **v15)
      {
        _S0 = (float)v16;
        __asm { FCVT            H0, S0 }
      }
      else
      {
        _H0 = *v15[1];
      }
      *(_WORD *)(a2[2] + 2) = _H0;
      v19 = **a3;
      v20 = *(unsigned __int16 *)(*a2 + 4);
      if (v20 > **v19)
      {
        _H0 = *v19[1];
      }
      else
      {
        _S0 = (float)v20;
        __asm { FCVT            H0, S0 }
      }
      *(_WORD *)(a2[2] + 4) = _H0;
      a4 += a1[6];
      a5 += a1[7];
      ++v5;
    }
    while (v5 < a1[5]);
  }
  *a2 = a4;
  a2[2] = a5;
  v22 = **a3;
  v23 = *a4;
  if (v23 <= **v22)
  {
    _S0 = (float)v23;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v22[1];
  }
  *a5 = _H0;
  v26 = **a3;
  v27 = *(unsigned __int16 *)(*a2 + 2);
  if (v27 <= **v26)
  {
    _S0 = (float)v27;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    _H0 = *v26[1];
  }
  *(_WORD *)(a2[2] + 2) = _H0;
  v30 = a2[2];
  v31 = **a3;
  v32 = *(unsigned __int16 *)(*a2 + 4);
  if (v32 <= **v31)
  {
    _S0 = (float)v32;
    __asm { FCVT            H0, S0 }
    *(_WORD *)(v30 + 4) = result;
  }
  else
  {
    v33 = v31[1];
    result = *v33;
    *(_WORD *)(v30 + 4) = *v33;
  }
  return result;
}

uint64_t sub_22439F840(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  int v5;
  double v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  float v11;
  double v12;
  float v13;
  unsigned int v14;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  float32x2_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  unint64_t v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t **v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  _OWORD v74[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = *(double *)a2;
    if (*(double *)a2 < 0.0)
      v4 = 0.0;
    v5 = (int)v4;
    v6 = 65535.0;
    if (*(double *)(a2 + 8) <= 65535.0)
      v6 = *(double *)(a2 + 8);
    v7 = v5 | ((int)v6 << 16);
    v9 = *v3;
    v8 = v3[1];
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v13 = 1.0;
    v11 = 0.0;
    goto LABEL_14;
  }
  v7 = -65536;
  v9 = *v3;
  v8 = v3[1];
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v10 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v10 = *(double *)(a2 + 24);
  v11 = v10;
  v12 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v12 = *(double *)(a2 + 32);
  v13 = v12;
LABEL_14:
  v14 = HIWORD(v7);
  if (v11 == (float)(unsigned __int16)v7 && v13 == (float)v14)
    return sub_2243A0BBC(v9, v8, v11);
  v62 = (double)(unsigned __int16)v7;
  v60 = v11;
  v61 = 1.0 / ((double)v14 - v62);
  a3.n128_f64[0] = v13 - v11;
  v59 = a3.n128_u64[0];
  v58[0] = &v62;
  v58[1] = &v61;
  v57[0] = &v60;
  v57[1] = &v59;
  v56[0] = v58;
  v56[1] = v57;
  v16 = *(_QWORD *)(v9 + 8);
  if (!v16)
    goto LABEL_35;
  v17 = *(std::__shared_weak_count **)(v9 + 16);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v16 = *(_QWORD *)(v9 + 8);
    v21 = *(std::__shared_weak_count **)(v9 + 16);
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      do
        v24 = __ldaxr(v22);
      while (__stlxr(v24 - 1, v22));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
  if (*(_BYTE *)(v9 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v16 + 96))(&v64, v16, 0);
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_51;
  }
  else
  {
LABEL_35:
    v64 = 0;
    v25 = *(_QWORD *)(v8 + 8);
    if (!v25)
      goto LABEL_51;
  }
  v27 = *(std::__shared_weak_count **)(v8 + 16);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    do
      v30 = __ldaxr(v28);
    while (__stlxr(v30 - 1, v28));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v25 = *(_QWORD *)(v8 + 8);
    v31 = *(std::__shared_weak_count **)(v8 + 16);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldxr(v32);
      while (__stxr(v33 + 1, v32));
      do
        v34 = __ldaxr(v32);
      while (__stlxr(v34 - 1, v32));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  if (!*(_BYTE *)(v8 + 73))
  {
LABEL_51:
    v63 = 0;
    v65 = v56;
    v35 = *(_DWORD *)(v9 + 32);
    if (v35)
      goto LABEL_52;
    goto LABEL_76;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v25 + 96))(&v63, v25, 1);
  v65 = v56;
  v35 = *(_DWORD *)(v9 + 32);
  if (v35)
  {
LABEL_52:
    v36 = *(_DWORD *)(v9 + 36);
    if (v36)
    {
      v37 = *(_DWORD *)(v9 + 40);
      if (v37)
      {
        v66 = &v65;
        v67 = 0;
        v68 = v35 - 1;
        v38 = *(unsigned int *)(v9 + 48);
        v39 = *(unsigned int *)(v8 + 48);
        v69 = *(unsigned int *)(v9 + 44) | ((unint64_t)*(unsigned int *)(v8 + 44) << 32);
        v70 = v36 - 1;
        v71 = v38 | (v39 << 32);
        v72 = v37 - 1;
        v73 = *(unsigned int *)(v9 + 52) | ((unint64_t)*(unsigned int *)(v8 + 52) << 32);
        v40 = *(unsigned __int16 **)(v9 + 24);
        if (*(_BYTE *)(v9 + 72) && v40)
        {
          v41 = *(_QWORD *)(v9 + 8);
          v42 = *(std::__shared_weak_count **)(v9 + 16);
          if (v42)
          {
            v43 = (unint64_t *)&v42->__shared_owners_;
            do
              v44 = __ldxr(v43);
            while (__stxr(v44 + 1, v43));
            do
              v45 = __ldaxr(v43);
            while (__stlxr(v45 - 1, v43));
            if (!v45)
            {
              ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
              std::__shared_weak_count::__release_weak(v42);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v41 + 88))(v41, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v40 = *(unsigned __int16 **)(v9 + 24);
        }
        v46 = *(float32x2_t **)(v8 + 24);
        if (*(_BYTE *)(v8 + 72) && v46)
        {
          v47 = *(_QWORD *)(v8 + 8);
          v48 = *(std::__shared_weak_count **)(v8 + 16);
          if (v48)
          {
            v49 = (unint64_t *)&v48->__shared_owners_;
            do
              v50 = __ldxr(v49);
            while (__stxr(v50 + 1, v49));
            do
              v51 = __ldaxr(v49);
            while (__stlxr(v51 - 1, v49));
            if (!v51)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v48);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v47 + 88))(v47, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v46 = *(float32x2_t **)(v8 + 24);
        }
        memset(v74, 0, sizeof(v74));
        v52 = v72;
        if (v72)
        {
          v53 = 2 * v73;
          v54 = 4 * HIDWORD(v73);
          do
          {
            sub_2243A1090(&v67, v74, &v66, v40, v46);
            v40 = (unsigned __int16 *)((char *)v40 + v53);
            v46 = (float32x2_t *)((char *)v46 + v54);
            --v52;
          }
          while (v52);
        }
        a3.n128_f32[0] = sub_2243A1090(&v67, v74, &v66, v40, v46);
      }
    }
  }
LABEL_76:
  v55 = v63;
  v63 = 0;
  if (v55)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v55 + 8))(v55, a3);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_22439FD10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22439FD74(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  float v7;
  float v8;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int16 *v75;
  uint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  float *v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  unsigned int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  float *v93;
  unsigned __int16 *v94;
  unsigned __int16 *v95;
  float *v96;
  int v97;
  unsigned int v98;
  float v99;
  unsigned int v100;
  float v101;
  unsigned int v102;
  float v103;
  unsigned int v104;
  float v105;
  unsigned int v106;
  float v107;
  unsigned int v108;
  float v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *p_shared_owners;
  unint64_t v113;
  unint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int16 *v134;
  uint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  unint64_t v144;
  unsigned int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  int v150;
  float *v151;
  unsigned __int16 *v152;
  unsigned __int16 *v153;
  float *v154;
  int v155;
  unsigned int v156;
  float v157;
  unsigned int v158;
  float v159;
  unsigned int v160;
  float v161;
  unsigned int v162;
  float v163;
  unsigned int v164;
  float v165;
  unsigned int v166;
  float v167;
  unsigned int v168;
  float v169;
  unsigned int v170;
  float v171;
  unsigned int v172;
  float v173;
  unsigned int v174;
  float v175;
  unsigned int v176;
  float v177;
  unsigned int v178;
  float v179;
  unsigned int v180;
  float v181;
  unsigned int v182;
  float v183;
  unsigned int v184;
  unsigned int v185;
  float v186;
  unsigned int v187;
  float v188;
  unsigned int v189;
  float v190;
  unsigned int v191;
  float v192;
  unsigned int v193;
  float v194;
  unsigned int v195;
  float v196;
  unsigned int v197;
  float v198;
  unsigned int v199;
  float v200;
  unsigned int v201;
  uint64_t v202;
  _QWORD v203[4];
  __int16 v204;
  __int16 v205;
  float v206;
  float v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  unsigned __int16 ***v211;
  uint64_t v212;
  int v213;
  unint64_t v214;
  int v215;
  uint64_t v216;
  int v217;
  unint64_t v218;
  _OWORD v219[3];

  v4 = **a1;
  v3 = (*a1)[1];
  if (!(*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24)))
  {
    v8 = 3.4028e38;
    v7 = -3.4028e38;
    a3.n128_u32[0] = 1199570688;
    if (-3.4028e38 >= 0.0 && 3.4028e38 <= 65535.0)
      goto LABEL_15;
LABEL_36:
    if (v7 < 0.0)
    {
      a3.n128_u32[0] = 1199570688;
      if (v8 > 65535.0)
        return sub_2243A0BBC(**a1, v3, 65535.0);
      v110 = *(_QWORD *)(v4 + 8);
      if (!v110)
        goto LABEL_173;
      v111 = *(std::__shared_weak_count **)(v4 + 16);
      if (v111)
      {
        p_shared_owners = (unint64_t *)&v111->__shared_owners_;
        do
          v113 = __ldxr(p_shared_owners);
        while (__stxr(v113 + 1, p_shared_owners));
        do
          v114 = __ldaxr(p_shared_owners);
        while (__stlxr(v114 - 1, p_shared_owners));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
        v110 = *(_QWORD *)(v4 + 8);
        v115 = *(std::__shared_weak_count **)(v4 + 16);
        if (v115)
        {
          v116 = (unint64_t *)&v115->__shared_owners_;
          do
            v117 = __ldxr(v116);
          while (__stxr(v117 + 1, v116));
          do
            v118 = __ldaxr(v116);
          while (__stlxr(v118 - 1, v116));
          if (!v118)
          {
            ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
            std::__shared_weak_count::__release_weak(v115);
          }
        }
      }
      if (*(_BYTE *)(v4 + 73))
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v110 + 96))(&v212, v110, 0);
        v119 = *(_QWORD *)(v3 + 8);
        if (!v119)
          goto LABEL_188;
      }
      else
      {
LABEL_173:
        v212 = 0;
        v119 = *(_QWORD *)(v3 + 8);
        if (!v119)
          goto LABEL_188;
      }
      v120 = *(std::__shared_weak_count **)(v3 + 16);
      if (v120)
      {
        v121 = (unint64_t *)&v120->__shared_owners_;
        do
          v122 = __ldxr(v121);
        while (__stxr(v122 + 1, v121));
        do
          v123 = __ldaxr(v121);
        while (__stlxr(v123 - 1, v121));
        if (!v123)
        {
          ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
          std::__shared_weak_count::__release_weak(v120);
        }
        v119 = *(_QWORD *)(v3 + 8);
        v124 = *(std::__shared_weak_count **)(v3 + 16);
        if (v124)
        {
          v125 = (unint64_t *)&v124->__shared_owners_;
          do
            v126 = __ldxr(v125);
          while (__stxr(v126 + 1, v125));
          do
            v127 = __ldaxr(v125);
          while (__stlxr(v127 - 1, v125));
          if (!v127)
          {
            ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
            std::__shared_weak_count::__release_weak(v124);
          }
        }
      }
      if (*(_BYTE *)(v3 + 73))
      {
        (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v119 + 96))(v219, v119, 1);
LABEL_189:
        if (*(_DWORD *)(v4 + 32))
        {
          v128 = *(_DWORD *)(v4 + 36);
          if (v128)
          {
            v129 = *(_DWORD *)(v4 + 40);
            if (v129)
            {
              v131 = *(unsigned int *)(v4 + 48);
              v130 = *(unsigned int *)(v4 + 52);
              v133 = *(unsigned int *)(v3 + 48);
              v132 = *(unsigned int *)(v3 + 52);
              v134 = *(unsigned __int16 **)(v4 + 24);
              if (*(_BYTE *)(v4 + 72) && v134)
              {
                v135 = *(_QWORD *)(v4 + 8);
                v136 = *(std::__shared_weak_count **)(v4 + 16);
                if (v136)
                {
                  v137 = (unint64_t *)&v136->__shared_owners_;
                  do
                    v138 = __ldxr(v137);
                  while (__stxr(v138 + 1, v137));
                  do
                    v139 = __ldaxr(v137);
                  while (__stlxr(v139 - 1, v137));
                  if (!v139)
                  {
                    ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
                    std::__shared_weak_count::__release_weak(v136);
                  }
                }
                (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v135 + 88))(v135, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v134 = *(unsigned __int16 **)(v4 + 24);
              }
              v81 = *(float **)(v3 + 24);
              if (*(_BYTE *)(v3 + 72) && v81)
              {
                v140 = *(_QWORD *)(v3 + 8);
                v141 = *(std::__shared_weak_count **)(v3 + 16);
                if (v141)
                {
                  v142 = (unint64_t *)&v141->__shared_owners_;
                  do
                    v143 = __ldxr(v142);
                  while (__stxr(v143 + 1, v142));
                  do
                    v144 = __ldaxr(v142);
                  while (__stlxr(v144 - 1, v142));
                  if (!v144)
                  {
                    ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
                    std::__shared_weak_count::__release_weak(v141);
                  }
                }
                (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v140 + 88))(v140, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v81 = *(float **)(v3 + 24);
              }
              v145 = (int)v8;
              v146 = v128 - 1;
              v147 = 2 * v131;
              v148 = 4 * v133;
              v149 = v129 - 1;
              if (v129 != 1)
              {
                if (v128 == 1)
                {
                  do
                  {
                    v185 = *v134;
                    v186 = (float)v185;
                    if (v185 > v145)
                      v186 = v8;
                    *v81 = v186;
                    v187 = v134[1];
                    v188 = (float)v187;
                    if (v187 > v145)
                      v188 = v8;
                    v81[1] = v188;
                    v189 = v134[2];
                    v190 = (float)v189;
                    if (v189 > v145)
                      v190 = v8;
                    v81[2] = v190;
                    v134 += v130;
                    v81 += v132;
                    --v149;
                  }
                  while (v149);
                }
                else
                {
                  v150 = 0;
                  v151 = v81 + 2;
                  v152 = v134 + 2;
                  do
                  {
                    v153 = v152;
                    v154 = v151;
                    v155 = v128 - 1;
                    do
                    {
                      v156 = *(v153 - 2);
                      v157 = (float)v156;
                      if (v156 > v145)
                        v157 = v8;
                      *(v154 - 2) = v157;
                      v158 = *(v153 - 1);
                      v159 = (float)v158;
                      if (v158 > v145)
                        v159 = v8;
                      *(v154 - 1) = v159;
                      v160 = *v153;
                      v161 = (float)v160;
                      if (v160 > v145)
                        v161 = v8;
                      *v154 = v161;
                      v154 = (float *)((char *)v154 + v148);
                      v153 = (unsigned __int16 *)((char *)v153 + v147);
                      --v155;
                    }
                    while (v155);
                    v162 = *(v153 - 2);
                    v163 = (float)v162;
                    if (v162 > v145)
                      v163 = v8;
                    *(v154 - 2) = v163;
                    v164 = *(v153 - 1);
                    v165 = (float)v164;
                    if (v164 > v145)
                      v165 = v8;
                    *(v154 - 1) = v165;
                    v166 = *v153;
                    v167 = (float)v166;
                    if (v166 > v145)
                      v167 = v8;
                    *v154 = v167;
                    v134 += v130;
                    v81 += v132;
                    ++v150;
                    v151 += v132;
                    v152 += v130;
                  }
                  while (v150 != v149);
                }
              }
              if (v128 != 1)
              {
                do
                {
                  v191 = *v134;
                  v192 = (float)v191;
                  if (v191 > v145)
                    v192 = v8;
                  *v81 = v192;
                  v193 = v134[1];
                  v194 = (float)v193;
                  if (v193 > v145)
                    v194 = v8;
                  v81[1] = v194;
                  v195 = v134[2];
                  v196 = (float)v195;
                  if (v195 > v145)
                    v196 = v8;
                  v81[2] = v196;
                  v134 = (unsigned __int16 *)((char *)v134 + v147);
                  v81 = (float *)((char *)v81 + v148);
                  --v146;
                }
                while (v146);
              }
              v197 = *v134;
              v198 = (float)v197;
              if (v197 > v145)
                v198 = v8;
              *v81 = v198;
              v199 = v134[1];
              v200 = (float)v199;
              if (v199 > v145)
                v200 = v8;
              v81[1] = v200;
              v201 = v134[2];
              a3.n128_f32[0] = (float)v201;
              if (v201 > v145)
                a3.n128_f32[0] = v8;
LABEL_272:
              v81[2] = a3.n128_f32[0];
              goto LABEL_273;
            }
          }
        }
        goto LABEL_273;
      }
LABEL_188:
      *(_QWORD *)&v219[0] = 0;
      goto LABEL_189;
    }
    v51 = *(_QWORD *)(v4 + 8);
    if (!v51)
      goto LABEL_101;
    v52 = *(std::__shared_weak_count **)(v4 + 16);
    if (v52)
    {
      v53 = (unint64_t *)&v52->__shared_owners_;
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      do
        v55 = __ldaxr(v53);
      while (__stlxr(v55 - 1, v53));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
      v51 = *(_QWORD *)(v4 + 8);
      v56 = *(std::__shared_weak_count **)(v4 + 16);
      if (v56)
      {
        v57 = (unint64_t *)&v56->__shared_owners_;
        do
          v58 = __ldxr(v57);
        while (__stxr(v58 + 1, v57));
        do
          v59 = __ldaxr(v57);
        while (__stlxr(v59 - 1, v57));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
          std::__shared_weak_count::__release_weak(v56);
        }
      }
    }
    if (*(_BYTE *)(v4 + 73))
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v51 + 96))(&v212, v51, 0);
      v60 = *(_QWORD *)(v3 + 8);
      if (!v60)
        goto LABEL_117;
    }
    else
    {
LABEL_101:
      v212 = 0;
      v60 = *(_QWORD *)(v3 + 8);
      if (!v60)
        goto LABEL_117;
    }
    v61 = *(std::__shared_weak_count **)(v3 + 16);
    if (v61)
    {
      v62 = (unint64_t *)&v61->__shared_owners_;
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
      do
        v64 = __ldaxr(v62);
      while (__stlxr(v64 - 1, v62));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
        std::__shared_weak_count::__release_weak(v61);
      }
      v60 = *(_QWORD *)(v3 + 8);
      v65 = *(std::__shared_weak_count **)(v3 + 16);
      if (v65)
      {
        v66 = (unint64_t *)&v65->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
    }
    if (*(_BYTE *)(v3 + 73))
    {
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(v219, v60, 1);
      if (!*(_DWORD *)(v4 + 32))
        goto LABEL_273;
      goto LABEL_118;
    }
LABEL_117:
    *(_QWORD *)&v219[0] = 0;
    if (!*(_DWORD *)(v4 + 32))
      goto LABEL_273;
LABEL_118:
    v69 = *(_DWORD *)(v4 + 36);
    if (v69)
    {
      v70 = *(_DWORD *)(v4 + 40);
      if (v70)
      {
        v72 = *(unsigned int *)(v4 + 48);
        v71 = *(unsigned int *)(v4 + 52);
        v74 = *(unsigned int *)(v3 + 48);
        v73 = *(unsigned int *)(v3 + 52);
        v75 = *(unsigned __int16 **)(v4 + 24);
        if (*(_BYTE *)(v4 + 72) && v75)
        {
          v76 = *(_QWORD *)(v4 + 8);
          v77 = *(std::__shared_weak_count **)(v4 + 16);
          if (v77)
          {
            v78 = (unint64_t *)&v77->__shared_owners_;
            do
              v79 = __ldxr(v78);
            while (__stxr(v79 + 1, v78));
            do
              v80 = __ldaxr(v78);
            while (__stlxr(v80 - 1, v78));
            if (!v80)
            {
              ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
              std::__shared_weak_count::__release_weak(v77);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v76 + 88))(v76, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v75 = *(unsigned __int16 **)(v4 + 24);
        }
        v81 = *(float **)(v3 + 24);
        if (*(_BYTE *)(v3 + 72) && v81)
        {
          v82 = *(_QWORD *)(v3 + 8);
          v83 = *(std::__shared_weak_count **)(v3 + 16);
          if (v83)
          {
            v84 = (unint64_t *)&v83->__shared_owners_;
            do
              v85 = __ldxr(v84);
            while (__stxr(v85 + 1, v84));
            do
              v86 = __ldaxr(v84);
            while (__stlxr(v86 - 1, v84));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
              std::__shared_weak_count::__release_weak(v83);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v82 + 88))(v82, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v81 = *(float **)(v3 + 24);
        }
        v87 = (int)v7;
        v88 = v69 - 1;
        v89 = 2 * v72;
        v90 = 4 * v74;
        v91 = v70 - 1;
        if (v70 != 1)
        {
          if (v69 == 1)
          {
            do
            {
              v168 = *v75;
              v169 = (float)v168;
              if (v168 < v87)
                v169 = v7;
              *v81 = v169;
              v170 = v75[1];
              v171 = (float)v170;
              if (v170 < v87)
                v171 = v7;
              v81[1] = v171;
              v172 = v75[2];
              v173 = (float)v172;
              if (v172 < v87)
                v173 = v7;
              v81[2] = v173;
              v75 += v71;
              v81 += v73;
              --v91;
            }
            while (v91);
          }
          else
          {
            v92 = 0;
            v93 = v81 + 2;
            v94 = v75 + 2;
            do
            {
              v95 = v94;
              v96 = v93;
              v97 = v69 - 1;
              do
              {
                v98 = *(v95 - 2);
                v99 = (float)v98;
                if (v98 < v87)
                  v99 = v7;
                *(v96 - 2) = v99;
                v100 = *(v95 - 1);
                v101 = (float)v100;
                if (v100 < v87)
                  v101 = v7;
                *(v96 - 1) = v101;
                v102 = *v95;
                v103 = (float)v102;
                if (v102 < v87)
                  v103 = v7;
                *v96 = v103;
                v96 = (float *)((char *)v96 + v90);
                v95 = (unsigned __int16 *)((char *)v95 + v89);
                --v97;
              }
              while (v97);
              v104 = *(v95 - 2);
              v105 = (float)v104;
              if (v104 < v87)
                v105 = v7;
              *(v96 - 2) = v105;
              v106 = *(v95 - 1);
              v107 = (float)v106;
              if (v106 < v87)
                v107 = v7;
              *(v96 - 1) = v107;
              v108 = *v95;
              v109 = (float)v108;
              if (v108 < v87)
                v109 = v7;
              *v96 = v109;
              v75 += v71;
              v81 += v73;
              ++v92;
              v93 += v73;
              v94 += v71;
            }
            while (v92 != v91);
          }
        }
        if (v69 != 1)
        {
          do
          {
            v174 = *v75;
            v175 = (float)v174;
            if (v174 < v87)
              v175 = v7;
            *v81 = v175;
            v176 = v75[1];
            v177 = (float)v176;
            if (v176 < v87)
              v177 = v7;
            v81[1] = v177;
            v178 = v75[2];
            v179 = (float)v178;
            if (v178 < v87)
              v179 = v7;
            v81[2] = v179;
            v75 = (unsigned __int16 *)((char *)v75 + v89);
            v81 = (float *)((char *)v81 + v90);
            --v88;
          }
          while (v88);
        }
        v180 = *v75;
        v181 = (float)v180;
        if (v180 < v87)
          v181 = v7;
        *v81 = v181;
        v182 = v75[1];
        v183 = (float)v182;
        if (v182 < v87)
          v183 = v7;
        v81[1] = v183;
        v184 = v75[2];
        a3.n128_f32[0] = (float)v184;
        if (v184 < v87)
          a3.n128_f32[0] = v7;
        goto LABEL_272;
      }
    }
LABEL_273:
    v202 = *(_QWORD *)&v219[0];
    *(_QWORD *)&v219[0] = 0;
    if (v202)
      (*(void (**)(uint64_t))(*(_QWORD *)v202 + 8))(v202);
    result = v212;
    v212 = 0;
    if (result)
      return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
    return result;
  }
  v5 = *(double *)a2;
  if (!*(_BYTE *)(a2 + 8))
    v5 = -3.40282347e38;
  v6 = *(double *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 24))
    v6 = 3.40282347e38;
  if (v5 < -3.40282347e38)
    v5 = -3.40282347e38;
  v7 = v5;
  if (v6 <= 3.40282347e38)
    a3.n128_f64[0] = v6;
  else
    a3.n128_f64[0] = 3.40282347e38;
  v8 = a3.n128_f64[0];
  a3.n128_u32[0] = 1199570688;
  if (v7 < 0.0 || v8 > 65535.0)
    goto LABEL_36;
LABEL_15:
  v206 = v8;
  v207 = v7;
  v205 = (int)v7;
  v204 = (int)v8;
  v203[0] = &v205;
  v203[1] = &v207;
  v203[2] = &v204;
  v203[3] = &v206;
  v10 = *(_QWORD *)(v4 + 8);
  if (!v10)
    goto LABEL_39;
  v11 = *(std::__shared_weak_count **)(v4 + 16);
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v10 = *(_QWORD *)(v4 + 8);
    v15 = *(std::__shared_weak_count **)(v4 + 16);
    if (v15)
    {
      v16 = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 1, v16));
      do
        v18 = __ldaxr(v16);
      while (__stlxr(v18 - 1, v16));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
  }
  if (*(_BYTE *)(v4 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v10 + 96))(&v209, v10, 0);
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_55;
  }
  else
  {
LABEL_39:
    v209 = 0;
    v19 = *(_QWORD *)(v3 + 8);
    if (!v19)
      goto LABEL_55;
  }
  v22 = *(std::__shared_weak_count **)(v3 + 16);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    do
      v25 = __ldaxr(v23);
    while (__stlxr(v25 - 1, v23));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
    v19 = *(_QWORD *)(v3 + 8);
    v26 = *(std::__shared_weak_count **)(v3 + 16);
    if (v26)
    {
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
        std::__shared_weak_count::__release_weak(v26);
      }
    }
  }
  if (*(_BYTE *)(v3 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v19 + 96))(&v208, v19, 1);
    v210 = v203;
    v30 = *(_DWORD *)(v4 + 32);
    if (!v30)
      goto LABEL_80;
    goto LABEL_56;
  }
LABEL_55:
  v208 = 0;
  v210 = v203;
  v30 = *(_DWORD *)(v4 + 32);
  if (!v30)
    goto LABEL_80;
LABEL_56:
  v31 = *(_DWORD *)(v4 + 36);
  if (v31)
  {
    v32 = *(_DWORD *)(v4 + 40);
    if (v32)
    {
      v211 = (unsigned __int16 ***)&v210;
      v212 = 0;
      v213 = v30 - 1;
      v33 = *(unsigned int *)(v4 + 48);
      v34 = *(unsigned int *)(v3 + 48);
      v214 = *(unsigned int *)(v4 + 44) | ((unint64_t)*(unsigned int *)(v3 + 44) << 32);
      v215 = v31 - 1;
      v216 = v33 | (v34 << 32);
      v217 = v32 - 1;
      v218 = *(unsigned int *)(v4 + 52) | ((unint64_t)*(unsigned int *)(v3 + 52) << 32);
      v35 = *(unsigned __int16 **)(v4 + 24);
      if (*(_BYTE *)(v4 + 72) && v35)
      {
        v36 = *(_QWORD *)(v4 + 8);
        v37 = *(std::__shared_weak_count **)(v4 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v36 + 88))(v36, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(unsigned __int16 **)(v4 + 24);
      }
      v41 = *(_QWORD *)(v3 + 24);
      if (*(_BYTE *)(v3 + 72) && v41)
      {
        v42 = *(_QWORD *)(v3 + 8);
        v43 = *(std::__shared_weak_count **)(v3 + 16);
        if (v43)
        {
          v44 = (unint64_t *)&v43->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v42 + 88))(v42, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v41 = *(_QWORD *)(v3 + 24);
      }
      memset(v219, 0, 32);
      v47 = v217;
      if (v217)
      {
        v48 = 2 * v218;
        v49 = 4 * HIDWORD(v218);
        do
        {
          sub_2243A11E8(&v212, v219, &v211, v35, v41);
          v35 = (unsigned __int16 *)((char *)v35 + v48);
          v41 += v49;
          --v47;
        }
        while (v47);
      }
      a3.n128_f32[0] = sub_2243A11E8(&v212, v219, &v211, v35, v41);
    }
  }
LABEL_80:
  v50 = v208;
  v208 = 0;
  if (v50)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v50 + 8))(v50, a3);
  result = v209;
  v209 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2243A0B2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A0BB0(uint64_t **a1, float a2)
{
  return sub_2243A0BBC(**a1, (*a1)[1], a2);
}

uint64_t sub_2243A0BBC(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _WORD *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  float *v46;
  _WORD *v47;
  _WORD *v48;
  float *v49;
  int v50;
  float v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;
  float v59;
  float v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
    goto LABEL_17;
  v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v10)
    goto LABEL_71;
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v64 = 0;
    v14 = *(_QWORD *)(a2 + 8);
    if (!v14)
      goto LABEL_33;
LABEL_18:
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_29;
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    v14 = *(_QWORD *)(a2 + 8);
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v19)
      goto LABEL_29;
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v14 + 96))(&v63, v14, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(&v64, v5, 0);
  v14 = *(_QWORD *)(a2 + 8);
  if (v14)
    goto LABEL_18;
LABEL_33:
  v63 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v23 = *(_DWORD *)(a1 + 36);
  if (v23)
  {
    v24 = *(_DWORD *)(a1 + 40);
    if (v24)
    {
      v26 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v29 = *(_WORD **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(_WORD **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      v41 = v23 - 1;
      v42 = 2 * v26;
      v43 = 4 * v28;
      v44 = v24 - 1;
      if (v24 != 1)
      {
        if (v23 == 1)
        {
          do
          {
            LOWORD(a3) = *v29;
            v55 = (float)LODWORD(a3);
            *v35 = v55;
            LOWORD(v55) = v29[1];
            v56 = (float)LODWORD(v55);
            v35[1] = v56;
            LOWORD(v56) = v29[2];
            a3 = (float)LODWORD(v56);
            v35[2] = a3;
            v29 += v25;
            v35 += v27;
            --v44;
          }
          while (v44);
        }
        else
        {
          v45 = 0;
          v46 = v35 + 2;
          v47 = v29 + 2;
          do
          {
            v48 = v47;
            v49 = v46;
            v50 = v23 - 1;
            do
            {
              LOWORD(a3) = *(v48 - 2);
              v51 = (float)LODWORD(a3);
              *(v49 - 2) = v51;
              LOWORD(v51) = *(v48 - 1);
              v52 = (float)LODWORD(v51);
              *(v49 - 1) = v52;
              LOWORD(v52) = *v48;
              a3 = (float)LODWORD(v52);
              *v49 = a3;
              v49 = (float *)((char *)v49 + v43);
              v48 = (_WORD *)((char *)v48 + v42);
              --v50;
            }
            while (v50);
            LOWORD(a3) = *(v48 - 2);
            v53 = (float)LODWORD(a3);
            *(v49 - 2) = v53;
            LOWORD(v53) = *(v48 - 1);
            v54 = (float)LODWORD(v53);
            *(v49 - 1) = v54;
            LOWORD(v54) = *v48;
            a3 = (float)LODWORD(v54);
            *v49 = a3;
            v29 += v25;
            v35 += v27;
            ++v45;
            v46 += v27;
            v47 += v25;
          }
          while (v45 != v44);
        }
      }
      if (v23 != 1)
      {
        do
        {
          LOWORD(a3) = *v29;
          v57 = (float)LODWORD(a3);
          *v35 = v57;
          LOWORD(v57) = v29[1];
          v58 = (float)LODWORD(v57);
          v35[1] = v58;
          LOWORD(v58) = v29[2];
          a3 = (float)LODWORD(v58);
          v35[2] = a3;
          v29 = (_WORD *)((char *)v29 + v42);
          v35 = (float *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      LOWORD(a3) = *v29;
      v59 = (float)LODWORD(a3);
      *v35 = v59;
      LOWORD(v59) = v29[1];
      v60 = (float)LODWORD(v59);
      v35[1] = v60;
      LOWORD(v60) = v29[2];
      v35[2] = (float)LODWORD(v60);
    }
  }
LABEL_65:
  v61 = v63;
  v63 = 0;
  if (v61)
    (*(void (**)(uint64_t))(*(_QWORD *)v61 + 8))(v61);
  result = v64;
  v64 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A102C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float32_t sub_2243A1090(_DWORD *a1, _QWORD *a2, uint64_t ***a3, unsigned __int16 *a4, float32x2_t *a5)
{
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  float64x2_t v18;
  float64x2_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64x2_t v22;
  float64x2_t v23;
  int8x16_t v24;
  float64x2_t v25;
  float32x2_t v26;
  BOOL v27;
  double v28;
  float32_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64x2_t v32;
  float64x2_t v33;
  unint64_t v34;
  double v35;
  double v36;
  double v37;
  float32_t result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **(uint64_t **)v8;
  v10 = **(double **)(v8 + 8);
  v11 = **(uint64_t **)v7;
  v12 = **(double **)(v7 + 8);
  __asm { FMOV            V4.2D, #1.0 }
  if (v5)
  {
    v18 = (float64x2_t)vdupq_lane_s64(v11, 0);
    v19 = (float64x2_t)vdupq_lane_s64(v9, 0);
    v20 = 2 * a1[6];
    v21 = 4 * a1[7];
    do
    {
      v22.i64[0] = *a4;
      v22.i64[1] = a4[1];
      v23 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v22), v19), v10);
      v24 = (int8x16_t)vcgtq_f64(v23, _Q4);
      v25 = vaddq_f64(v18, vmulq_n_f64((float64x2_t)vbslq_s8(v24, (int8x16_t)_Q4, (int8x16_t)vmaxnmq_f64(v23, (float64x2_t)0)), v12));
      v24.i16[0] = a4[2];
      v26 = vcvt_f32_f64(v25);
      *(double *)v24.i64 = v10 * ((double)v24.u64[0] - *(double *)&v9);
      v27 = *(double *)v24.i64 <= 1.0;
      v28 = fmax(*(double *)v24.i64, 0.0);
      if (!v27)
        v28 = 1.0;
      *a5 = v26;
      v29 = *(double *)&v11 + v12 * v28;
      a5[1].f32[0] = v29;
      a4 = (unsigned __int16 *)((char *)a4 + v20);
      a5 = (float32x2_t *)((char *)a5 + v21);
      --v5;
    }
    while (v5);
  }
  v30 = *a4;
  v31 = a4[1];
  *a2 = a4;
  a2[2] = a5;
  v32.i64[0] = v30;
  v32.i64[1] = v31;
  v33 = vmulq_n_f64(vsubq_f64(vcvtq_f64_u64(v32), (float64x2_t)vdupq_lane_s64(v9, 0)), v10);
  v34 = (unint64_t)vcvt_f32_f64(vaddq_f64((float64x2_t)vdupq_lane_s64(v11, 0), vmulq_n_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v33, _Q4), (int8x16_t)_Q4, (int8x16_t)vmaxnmq_f64(v33, (float64x2_t)0)), v12)));
  *a5 = (float32x2_t)v34;
  LOWORD(v34) = a4[2];
  v35 = v10 * ((double)v34 - *(double *)&v9);
  v36 = fmax(v35, 0.0);
  if (v35 <= 1.0)
    v37 = v36;
  else
    v37 = 1.0;
  result = *(double *)&v11 + v12 * v37;
  a5[1].f32[0] = result;
  return result;
}

float sub_2243A11E8(_DWORD *a1, _QWORD *a2, unsigned __int16 ****a3, unsigned __int16 *a4, uint64_t a5)
{
  int v5;
  unsigned __int16 **v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  float *v17;
  float result;
  float *v19;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v7 = **v6;
  if (v5)
  {
    v8 = 2 * a1[6];
    v9 = 4 * a1[7];
    do
    {
      while (1)
      {
        v11 = *a4;
        if (v11 < v7)
          break;
        if (v11 <= *v6[2])
        {
          *(float *)a5 = (float)v11;
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
        else
        {
          *(_DWORD *)a5 = *(_DWORD *)v6[3];
          v12 = a4[1];
          if (v12 < v7)
            goto LABEL_14;
        }
LABEL_10:
        if (v12 <= *v6[2])
        {
          *(float *)(a5 + 4) = (float)v12;
          v13 = a4[2];
          if (v13 >= v7)
            goto LABEL_17;
        }
        else
        {
          *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
          v13 = a4[2];
          if (v13 >= v7)
            goto LABEL_17;
        }
LABEL_3:
        v10 = v6[1];
LABEL_4:
        *(_DWORD *)(a5 + 8) = *(_DWORD *)v10;
        a4 = (unsigned __int16 *)((char *)a4 + v8);
        a5 += v9;
        if (!--v5)
          goto LABEL_20;
      }
      *(_DWORD *)a5 = *(_DWORD *)v6[1];
      v12 = a4[1];
      if (v12 >= v7)
        goto LABEL_10;
LABEL_14:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v13 = a4[2];
      if (v13 < v7)
        goto LABEL_3;
LABEL_17:
      if (v13 > *v6[2])
      {
        v10 = v6[3];
        goto LABEL_4;
      }
      *(float *)(a5 + 8) = (float)v13;
      a4 = (unsigned __int16 *)((char *)a4 + v8);
      a5 += v9;
      --v5;
    }
    while (v5);
  }
LABEL_20:
  *a2 = a4;
  a2[2] = a5;
  v14 = *a4;
  if (v14 >= v7)
  {
    if (v14 <= *v6[2])
    {
      *(float *)a5 = (float)v14;
      v15 = a4[1];
      if (v15 < v7)
        goto LABEL_29;
    }
    else
    {
      *(_DWORD *)a5 = *(_DWORD *)v6[3];
      v15 = a4[1];
      if (v15 < v7)
        goto LABEL_29;
    }
  }
  else
  {
    *(_DWORD *)a5 = *(_DWORD *)v6[1];
    v15 = a4[1];
    if (v15 < v7)
    {
LABEL_29:
      *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[1];
      v16 = a4[2];
      if (v16 < v7)
        goto LABEL_30;
      goto LABEL_32;
    }
  }
  if (v15 <= *v6[2])
  {
    *(float *)(a5 + 4) = (float)v15;
    v16 = a4[2];
    if (v16 < v7)
      goto LABEL_30;
  }
  else
  {
    *(_DWORD *)(a5 + 4) = *(_DWORD *)v6[3];
    v16 = a4[2];
    if (v16 < v7)
    {
LABEL_30:
      v17 = (float *)v6[1];
      result = *v17;
      *(float *)(a5 + 8) = *v17;
      return result;
    }
  }
LABEL_32:
  if (v16 <= *v6[2])
  {
    result = (float)v16;
    *(float *)(a5 + 8) = (float)v16;
  }
  else
  {
    v19 = (float *)v6[3];
    result = *v19;
    *(float *)(a5 + 8) = *v19;
  }
  return result;
}

uint64_t sub_2243A1424(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2243A148C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_2243A1714(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 18);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2243A15E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2243A1608(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2243A1670()
{
  return 18;
}

uint64_t sub_2243A1678(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_2243A1680@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_2243A1698(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2243A1714(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 18)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243A193C(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_2243A18DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A193C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2243A19B4();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_2243A19B4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791B40);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791B40))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231E7F44();
    sub_2243A1BB8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243A1BB8((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791B28, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791B28, &dword_22314D000);
          __cxa_guard_release(&qword_255791B40);
          return &stru_255791B28;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791B28;
}

void sub_2243A1B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791B40);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791B40);
  _Unwind_Resume(a1);
}

void sub_2243A1BB8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2243A1C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A1C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v18;
  int v19;
  BOOL v20;
  char *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  _WORD *v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  const void *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _WORD *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  _WORD *v65;
  int v66;
  int v67;
  _WORD *v68;
  _WORD *v69;
  _WORD *v70;
  _WORD *v71;
  int v72;
  _WORD *v73;
  size_t v74;
  const void *v75;
  int v76;
  int v77;
  uint64_t v78;
  unsigned __int8 v79;
  BOOL v80;
  uint64_t v81;
  uint64_t i;
  unsigned __int8 v83;
  BOOL v84;
  uint64_t v85;
  uint64_t result;
  uint64_t v87;
  uint64_t v88;
  int v89;
  _WORD *v90;
  char *v91;
  int v92;
  uint64_t v93;
  uint64_t v94;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_77;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_15;
    goto LABEL_77;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (*(_BYTE *)(a1 + 73))
  {
LABEL_15:
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v94, v4, 0);
    if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
      goto LABEL_81;
    goto LABEL_20;
  }
LABEL_77:
  v94 = 0;
  if (*(_DWORD *)(a1 + 44) != 1 || *(_DWORD *)(a2 + 20) != 1)
  {
LABEL_81:
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_148;
    v52 = *(_DWORD *)(a1 + 36);
    if (!v52)
      goto LABEL_148;
    v53 = *(_DWORD *)(a1 + 40);
    if (!v53)
      goto LABEL_148;
    v54 = *(unsigned int *)(a1 + 48);
    v55 = *(unsigned int *)(a1 + 52);
    v56 = *(unsigned int *)(a2 + 24);
    v57 = *(unsigned int *)(a2 + 28);
    v58 = *(_WORD **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v58)
    {
      v59 = *(_QWORD *)(a1 + 8);
      v60 = *(std::__shared_weak_count **)(a1 + 16);
      if (v60)
      {
        v61 = (unint64_t *)&v60->__shared_owners_;
        do
          v62 = __ldxr(v61);
        while (__stxr(v62 + 1, v61));
        do
          v63 = __ldaxr(v61);
        while (__stlxr(v63 - 1, v61));
        if (!v63)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v59 + 88))(v59, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v58 = *(_WORD **)(a1 + 24);
    }
    v64 = v52 - 1;
    v65 = *(_WORD **)a2;
    v66 = v53 - 1;
    if (v53 != 1)
    {
      if (v52 == 1)
      {
        do
        {
          *v65 = *v58;
          v65[1] = v58[1];
          v65[2] = v58[2];
          v58 += v55;
          v65 += v57;
          --v66;
        }
        while (v66);
LABEL_105:
        *v65 = *v58;
        v65[1] = v58[1];
        v65[2] = v58[2];
        goto LABEL_148;
      }
      v67 = 0;
      v68 = v65 + 2;
      v69 = v58 + 2;
      do
      {
        v70 = v69;
        v71 = v68;
        v72 = v52 - 1;
        do
        {
          *(v71 - 2) = *(v70 - 2);
          *(v71 - 1) = *(v70 - 1);
          *v71 = *v70;
          v71 += v56;
          v70 += v54;
          --v72;
        }
        while (v72);
        *(v71 - 2) = *(v70 - 2);
        *(v71 - 1) = *(v70 - 1);
        *v71 = *v70;
        v58 += v55;
        v65 += v57;
        ++v67;
        v68 += v57;
        v69 += v55;
      }
      while (v67 != v66);
    }
    if (v52 != 1)
    {
      do
      {
        *v65 = *v58;
        v65[1] = v58[1];
        v65[2] = v58[2];
        v58 += v54;
        v65 += v56;
        --v64;
      }
      while (v64);
    }
    goto LABEL_105;
  }
LABEL_20:
  v14 = *(unsigned int *)(a1 + 48);
  v15 = *(unsigned int *)(a2 + 24);
  v16 = *(unsigned int *)(a1 + 32);
  if ((_DWORD)v14 == (_DWORD)v15 && (_DWORD)v14 == (_DWORD)v16)
  {
    v31 = *(unsigned int *)(a1 + 52);
    v32 = *(unsigned int *)(a2 + 28);
    v33 = *(_DWORD *)(a1 + 36);
    v34 = (v33 * v14);
    if ((_DWORD)v31 == (_DWORD)v32 && (_DWORD)v31 == (_DWORD)v34)
    {
      v35 = *(_DWORD *)(a1 + 40);
      v36 = *(const void **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v36)
      {
        v37 = *(_QWORD *)(a1 + 8);
        v38 = *(std::__shared_weak_count **)(a1 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v37 + 88))(v37, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(const void **)(a1 + 24);
      }
      v42 = (v35 * v34);
      if (!(_DWORD)v42 || v36)
      {
        if (!(_DWORD)v42)
          goto LABEL_148;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_143;
      }
      v73 = *(_WORD **)a2;
      v74 = 2 * v42;
      v75 = v36;
      goto LABEL_147;
    }
    if (!(_DWORD)v14)
      goto LABEL_148;
    if (!v33)
      goto LABEL_148;
    v43 = *(_DWORD *)(a1 + 40);
    if (!v43)
      goto LABEL_148;
    v44 = *(char **)(a1 + 24);
    if (*(_BYTE *)(a1 + 72) && v44)
    {
      v45 = *(_QWORD *)(a1 + 8);
      v46 = *(std::__shared_weak_count **)(a1 + 16);
      if (v46)
      {
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
        do
          v49 = __ldaxr(v47);
        while (__stlxr(v49 - 1, v47));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v45 + 88))(v45, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v44 = *(char **)(a1 + 24);
    }
    v29 = *(_WORD **)a2;
    v30 = 2 * v34;
    v50 = v43 - 1;
    if (v43 != 1)
    {
      if (!(_DWORD)v34)
        goto LABEL_148;
      while (v44
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        memmove(v29, v44, 2 * v34);
        v44 += 2 * v31;
        v29 += v32;
        if (!--v50)
          goto LABEL_106;
      }
      goto LABEL_143;
    }
LABEL_106:
    if ((_DWORD)v34 && !v44)
    {
LABEL_145:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_143;
      }
      goto LABEL_146;
    }
    if ((_DWORD)v34)
    {
LABEL_146:
      v73 = v29;
      v75 = v44;
      v74 = v30;
LABEL_147:
      memmove(v73, v75, v74);
    }
  }
  else
  {
    v19 = *(_DWORD *)(a1 + 36);
    v18 = *(_DWORD *)(a1 + 40);
    if ((_DWORD)v16)
      v20 = v19 == 0;
    else
      v20 = 1;
    if (!v20 && v18 != 0)
    {
      v88 = *(unsigned int *)(a1 + 52);
      v87 = *(unsigned int *)(a2 + 28);
      if (*(_BYTE *)(a1 + 72))
      {
        v22 = *(char **)(a1 + 24);
        if (v22)
        {
          v23 = *(_QWORD *)(a1 + 8);
          v24 = *(std::__shared_weak_count **)(a1 + 16);
          if (v24)
          {
            v25 = (unint64_t *)&v24->__shared_owners_;
            do
              v26 = __ldxr(v25);
            while (__stxr(v26 + 1, v25));
            do
              v27 = __ldaxr(v25);
            while (__stlxr(v27 - 1, v25));
            if (!v27)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v23 + 88))(v23, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v22 = *(char **)(a1 + 24);
        }
        v28 = v19 - 1;
        v29 = *(_WORD **)a2;
        v30 = 2 * v16;
        v92 = v18 - 1;
        if (v18 == 1)
        {
LABEL_138:
          if (v28)
          {
            v85 = 2 * v15;
            while (v22
                 || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              memmove(v29, v22, v30);
              v22 += 2 * v14;
              v29 = (_WORD *)((char *)v29 + v85);
              if (!--v28)
                goto LABEL_144;
            }
            goto LABEL_143;
          }
LABEL_144:
          v44 = v22;
          if (v22)
            goto LABEL_146;
          goto LABEL_145;
        }
      }
      else
      {
        v22 = *(char **)(a1 + 24);
        v28 = v19 - 1;
        v29 = *(_WORD **)a2;
        v30 = 2 * v16;
        v92 = v18 - 1;
        if (v18 == 1)
          goto LABEL_138;
      }
      if (v28)
      {
        v76 = 0;
        v93 = 2 * v14;
        while (1)
        {
          v89 = v76;
          v77 = 0;
          v90 = v29;
          v91 = v22;
          do
          {
            while (v22)
            {
              memmove(v29, v22, v30);
              v22 += 2 * v14;
              v29 += v15;
              if (++v77 == v28)
                goto LABEL_112;
            }
            sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
            v78 = v14;
            v79 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v79 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (byte_255795670)
              v80 = byte_255795678 == 0;
            else
              v80 = 0;
            if (!v80)
            {
              v81 = qword_255795648;
              for (i = qword_255795650; v81 != i; v81 += 16)
                (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v81)(*(_QWORD *)(v81 + 8), "ptr != nullptr || size == 0", 27, "", 0);
            }
            v83 = atomic_load((unsigned __int8 *)&qword_255795680);
            if ((v83 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
            {
              __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
              __cxa_guard_release(&qword_255795680);
            }
            if (!byte_255795670)
              goto LABEL_143;
            v14 = v78;
            qword_255795660(*(_QWORD *)algn_255795668, "ptr != nullptr || size == 0", 27, "", 0);
            memcpy(v29, 0, v30);
            v29 += v15;
            ++v77;
            v22 = (char *)v93;
          }
          while (v77 != v28);
          v84 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          v22 = (char *)v93;
          if (v84)
            break;
LABEL_112:
          memmove(v29, v22, v30);
          v22 = &v91[2 * v88];
          v29 = &v90[v87];
          v76 = v89 + 1;
          if (v89 + 1 == v92)
            goto LABEL_138;
        }
      }
      else
      {
        while (v22
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          memmove(v29, v22, v30);
          v22 += 2 * v88;
          v29 += v87;
          if (!--v92)
            goto LABEL_138;
        }
      }
LABEL_143:
      abort();
    }
  }
LABEL_148:
  result = v94;
  v94 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A2640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a16)
    (*(void (**)(uint64_t))(*(_QWORD *)a16 + 8))(a16);
  _Unwind_Resume(exception_object);
}

void sub_2243A267C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  v17 = v4;
  v18 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v15 = v4;
    v16 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  else
  {
    v15 = v4;
    v16 = 0;
  }
  sub_2231E803C(a2, &v15);
  v9 = v16;
  if (v16)
  {
    v10 = (unint64_t *)&v16->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unint64_t *)&v18->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2243A2768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_223167354((uint64_t)&a9);
  sub_223167354((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_2243A2784(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *size;
  unint64_t *v16;
  unint64_t v17;
  std::string v18;

  sub_2243A2900(a1, &v18);
  v4 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = 0uLL;
  v5 = *(_QWORD *)(a1 + 24);
  if ((v5 & 0xFF00000000) != 0)
    v6 = (v5 >> 1) | 0x100000000;
  else
    v6 = 0;
  v7 = *(_WORD *)(a1 + 60);
  *(_OWORD *)a2 = v4;
  if (*((_QWORD *)&v4 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_QWORD *)(a2 + 16) = v6;
  (*(void (**)(std::string::size_type *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)v4 + 64))(&v18.__r_.__value_.__r.__words[2], v4, 22);
  v11 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 16);
  v10 = *(_OWORD *)(v18.__r_.__value_.__r.__words[2] + 32);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)(a2 + 40) = v11;
  *(_OWORD *)(a2 + 56) = v10;
  v18.__r_.__value_.__r.__words[2] = 0;
  MEMORY[0x227684CE8]();
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a2 + 96) = v12;
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a2 + 120) = v7;
  if (*((_QWORD *)&v4 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v4 + 1) + 16))(*((_QWORD *)&v4 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v4 + 1));
    }
  }
  size = (std::__shared_weak_count *)v18.__r_.__value_.__l.__size_;
  if (v18.__r_.__value_.__l.__size_)
  {
    v16 = (unint64_t *)(v18.__r_.__value_.__l.__size_ + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_2243A28DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_223167354(v2);
  sub_223167354((uint64_t)va);
  sub_223167354((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2243A2900(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  std::string::size_type v5;
  unint64_t *v6;
  unint64_t v7;
  std::string *v8;
  std::__shared_weak_count *size;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string::size_type v15;
  _QWORD *v16;
  std::string::size_type v17;
  std::logic_error *exception;
  std::string v19;

  if (*(_DWORD *)(a1 + 56) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2243A2B28(a1);
    std::logic_error::logic_error(exception, &v19);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E3A8, MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v19.__r_.__value_.__r.__words[0] = v4;
  v19.__r_.__value_.__l.__size_ = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2;
  if (v4)
  {
    a2->__r_.__value_.__r.__words[0] = v4;
    a2->__r_.__value_.__l.__size_ = v5;
    v8 = &v19;
  }
  v8->__r_.__value_.__r.__words[0] = 0;
  v8->__r_.__value_.__l.__size_ = 0;
  size = (std::__shared_weak_count *)v19.__r_.__value_.__l.__size_;
  if (!v19.__r_.__value_.__l.__size_)
    goto LABEL_25;
  v10 = (unint64_t *)(v19.__r_.__value_.__l.__size_ + 8);
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  else
  {
LABEL_25:
    if (a2->__r_.__value_.__r.__words[0])
      return;
  }
  v12 = (std::__shared_weak_count *)a2->__r_.__value_.__l.__size_;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  (*(void (**)(std::string *__return_ptr))(**(_QWORD **)(a1 + 8) + 32))(&v19);
  v15 = v19.__r_.__value_.__r.__words[0];
  a2->__r_.__value_.__r.__words[0] = v19.__r_.__value_.__r.__words[0];
  if (v15)
  {
    v16 = (_QWORD *)operator new();
    v17 = v19.__r_.__value_.__r.__words[0];
    *v16 = &off_24EC20DE8;
    v16[1] = 0;
    v16[2] = 0;
    v16[3] = v17;
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
  }
  else
  {
    a2->__r_.__value_.__l.__size_ = 0;
  }
}

void sub_2243A2AC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (__p)
  {
    (*(void (**)(void *))(*(_QWORD *)__p + 8))(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A2B28(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_2243A2BA0();
  v3 = sub_2231DE81C();
  v5 = *(_DWORD *)(a1 + 56);
  return sub_2231A08B0("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_2243A2BA0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255791B60);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255791B60))
  {
    sub_223174DE4(v7, "Image");
    v2 = sub_2231EA464();
    sub_2243A2DA4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_2231A27C0();
    sub_2243A2DA4((uint64_t)v3, (uint64_t)&__p);
    sub_22319BD1C(v6, (uint64_t)v9, 2uLL);
    sub_2245730F4((char *)v7, (uint64_t *)v6, &stru_255791B48, v4, v5);
    sub_22319BB48(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255791B48, &dword_22314D000);
          __cxa_guard_release(&qword_255791B60);
          return &stru_255791B48;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_255791B48;
}

void sub_2243A2CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_255791B60);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_255791B60);
  _Unwind_Resume(a1);
}

void sub_2243A2DA4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_223197FA4(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_22456D060(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2243A2E40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2243A2E5C(int a1)
{
  __asm { BR              X10 }
}

void sub_2243A2EA0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::string *a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,int a24,int a25,int a26,uint64_t a27,uint64_t a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *p_shared_owners;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  uint64_t v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  __int16 v72;
  unint64_t *v73;
  unint64_t v74;
  _QWORD v75[2];
  _QWORD *v76;
  uint64_t (**v77)();
  uint64_t v78;
  std::__shared_weak_count *v79;
  unsigned int v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  __int16 v85;

  sub_2243A5648(v53 - 168, *(_QWORD *)v52, *(_DWORD *)(v52 + 16), *(_QWORD *)v52 + 56);
  v77 = &off_24EC74980;
  sub_224390D7C(v53 - 168, (uint64_t)&v78);
  v54 = *(std::__shared_weak_count **)(v53 - 152);
  if (v54)
  {
    p_shared_owners = (unint64_t *)&v54->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
    }
  }
  v58 = *(_QWORD *)v52;
  v57 = *(_QWORD *)(v52 + 8);
  *(_QWORD *)(v53 - 168) = &off_24EC22750;
  sub_22439D890((uint64_t)&v77, (uint64_t *)(v53 - 160));
  v75[0] = v58;
  v75[1] = v53 - 168;
  v59 = *(unsigned int *)(v57 + 64);
  if ((_DWORD)v59 == -1)
    sub_22316DD70();
  v76 = v75;
  ((void (*)(_QWORD **, uint64_t))off_24EC748E0[v59])(&v76, v57 + 8);
  v60 = *(std::__shared_weak_count **)(v53 - 152);
  if (v60)
  {
    v61 = (unint64_t *)&v60->__shared_owners_;
    do
      v62 = __ldaxr(v61);
    while (__stlxr(v62 - 1, v61));
    if (!v62)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  *(_QWORD *)v51 = &off_24EC1F958;
  v64 = v78;
  v63 = v79;
  if (v79)
  {
    v65 = (unint64_t *)&v79->__shared_owners_;
    do
      v66 = __ldxr(v65);
    while (__stxr(v66 + 1, v65));
    v67 = v79;
  }
  else
  {
    v67 = 0;
  }
  v68 = v83;
  v69 = v84;
  if (v81)
    v70 = v80 | 0x100000000;
  else
    v70 = 0;
  v71 = v82;
  v72 = v85;
  *(_QWORD *)(v51 + 8) = v64;
  *(_QWORD *)(v51 + 16) = v63;
  *(_QWORD *)(v51 + 24) = v70;
  *(_QWORD *)(v51 + 32) = v68;
  *(_DWORD *)(v51 + 40) = v69;
  *(_QWORD *)(v51 + 48) = v71;
  *(_DWORD *)(v51 + 56) = 9;
  *(_WORD *)(v51 + 60) = v72;
  if (v67)
  {
    v73 = (unint64_t *)&v67->__shared_owners_;
    do
      v74 = __ldaxr(v73);
    while (__stlxr(v74 - 1, v73));
    if (!v74)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
}

void sub_2243A4504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 4;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 2;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A45FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 3;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 7;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A46F4()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_2243A4728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 1;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A47A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 5;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 6;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A489C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 8;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 40;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 39;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 38;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 37;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 36;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 35;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 34;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 33;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 32;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 31;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 30;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 29;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 28;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 27;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A4FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 26;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A505C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 25;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A50D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 24;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A5154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 22;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A51D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 21;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  std::string::~string((std::string *)&a19);
  abort();
}

void sub_2243A524C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17, uint64_t a18, _QWORD *a19, uint64_t a20,int a21,__int16 a22,char a23,unsigned __int8 a24)
{
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  *(_DWORD *)(v24 - 168) = 20;
  a16 = 11;
  sub_2243348B0("Conversion from image of format ", &a16, (uint64_t)" to ", (unsigned int *)(v24 - 168), (uint64_t)" not supported");
  if ((a24 & 0x80u) == 0)
    v25 = &a19;
  else
    v25 = a19;
  if ((a24 & 0x80u) == 0)
    v26 = a24;
  else
    v26 = a20;
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include_private/Kit/Image/Private/Conversion.hpp", 350, (uint64_t)"", 0, (uint64_t)v25, v26, (void (*)(void **))sub_22457406C);
  JUMPOUT(0x2243A52C4);
}

void sub_2243A52D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = *(_QWORD *)(v24 - 168);
  *(_QWORD *)(v24 - 168) = 0;
  if (v26)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
    v27 = a15;
    if (!a15)
    {
LABEL_3:
      v28 = a18;
      if (!a18)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v27 = a15;
    if (!a15)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
  v28 = a18;
  if (!a18)
  {
LABEL_4:
    sub_223167354(a10);
    _Unwind_Resume(a1);
  }
LABEL_7:
  (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  sub_223167354(a10);
  _Unwind_Resume(a1);
}

void sub_2243A5648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  _BYTE v45[16];
  std::__shared_weak_count *v46;
  char v47;

  if (a3)
  {
    if (*(_QWORD *)(a2 + 8))
    {
      v5 = *(std::__shared_weak_count **)(a2 + 16);
      v32 = *(_QWORD *)(a2 + 8);
      v33 = v5;
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
      }
    }
    else
    {
      v32 = 0;
      v33 = 0;
    }
    v34 = (uint64_t (**)())&v32;
    v35 = a4;
    v36 = (std::__shared_weak_count *)v45;
    sub_224478668(a3);
    v11 = v33;
    if (v33)
    {
      v12 = (unint64_t *)&v33->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    return;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    v8 = *(std::__shared_weak_count **)(a2 + 16);
    v43 = *(_QWORD *)(a2 + 8);
    v44 = v8;
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v43 = 0;
    v44 = 0;
  }
  v35 = a4;
  v36 = (std::__shared_weak_count *)&v47;
  sub_224478668(11);
  v34 = &off_24EC74B70;
  sub_22439373C((uint64_t)v45, (uint64_t)&v35);
  v14 = v46;
  if (v46)
  {
    v15 = (unint64_t *)&v46->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = v44;
  if (!v44)
    goto LABEL_29;
  v18 = (unint64_t *)&v44->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
    {
LABEL_30:
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
      v24 = v36;
      goto LABEL_35;
    }
  }
  else
  {
LABEL_29:
    *(_QWORD *)a1 = &off_24EC1F958;
    v20 = v35;
    v21 = v36;
    if (v36)
      goto LABEL_30;
  }
  v24 = 0;
LABEL_35:
  v25 = v40;
  v26 = 2 * v41;
  if (v38)
    v27 = (2 * v37) | 0x100000000;
  else
    v27 = 0;
  v28 = v39;
  v29 = v42;
  *(_QWORD *)(a1 + 8) = v20;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v25;
  *(_DWORD *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v28;
  *(_DWORD *)(a1 + 56) = 11;
  *(_WORD *)(a1 + 60) = v29;
  if (v24)
  {
    v30 = (unint64_t *)&v24->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_2243A58C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22319B358(v1 - 104);
  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2243A58E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_2243A58F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2243A590C(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  unsigned int v16;
  double v17;
  double v18;
  unsigned int v19;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int16 *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  __int16 *v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  double ****v67;
  int v68;
  __int16 *v69;
  __int16 *v70;
  double ***v71;
  double **v73;
  double **v74;
  double v76;
  double v77;
  double v78;
  uint64_t v79;
  uint64_t v80;
  double **v82;
  double v84;
  double v85;
  double *v86;
  double *v87;
  double v88;
  double **v90;
  double v92;
  double v93;
  double *v94;
  double *v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  double v104;
  double v105;
  double v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  double ****v111;
  __int128 v112;
  __int128 v113;
  __int16 *v114[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    v10 = 65504.0;
    if (*(double *)(a2 + 8) <= 65504.0)
      v10 = *(double *)(a2 + 8);
    _S0 = v10;
    __asm { FCVT            H0, S0 }
    v13 = *v3;
    v12 = v3[1];
    _S0 = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_S0);
    v16 = *(unsigned __int8 *)(a2 + 40);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v19 = 255;
    goto LABEL_14;
  }
  v13 = *v3;
  v12 = v3[1];
  LOWORD(_S0) = 0;
  LOWORD(_S1) = 15360;
  v16 = *(unsigned __int8 *)(a2 + 40);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v17 = *(double *)(a2 + 24);
  if (v17 < 0.0)
    v17 = 0.0;
  v16 = (int)v17;
  v18 = 255.0;
  if (*(double *)(a2 + 32) <= 255.0)
    v18 = *(double *)(a2 + 32);
  v19 = (int)v18;
LABEL_14:
  __asm
  {
    FCVT            S3, H0
    FCVT            S2, H1
  }
  _ZF = _ZF && _S2 == (float)v19;
  if (_ZF)
    return sub_2243A6100(v13, v12);
  __asm { FCVT            D0, H0 }
  v107 = _D0;
  __asm { FCVT            D1, H1 }
  v105 = (double)v16;
  v106 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = (double)v19 - (double)v16;
  v104 = a3.n128_f64[0];
  v103[0] = &v107;
  v103[1] = &v106;
  v102[0] = &v105;
  v102[1] = &v104;
  v101[0] = v103;
  v101[1] = v102;
  v25 = *(_QWORD *)(v13 + 8);
  if (!v25)
    goto LABEL_35;
  v26 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v26)
    goto LABEL_100;
  p_shared_owners = (unint64_t *)&v26->__shared_owners_;
  do
    v28 = __ldxr(p_shared_owners);
  while (__stxr(v28 + 1, p_shared_owners));
  do
    v29 = __ldaxr(p_shared_owners);
  while (__stlxr(v29 - 1, p_shared_owners));
  if (!v29)
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
  v25 = *(_QWORD *)(v13 + 8);
  v30 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v30)
    goto LABEL_100;
  v31 = (unint64_t *)&v30->__shared_owners_;
  do
    v32 = __ldxr(v31);
  while (__stxr(v32 + 1, v31));
  do
    v33 = __ldaxr(v31);
  while (__stlxr(v33 - 1, v31));
  if (v33)
  {
LABEL_100:
    if (*(_BYTE *)(v13 + 73))
      goto LABEL_31;
LABEL_35:
    v109 = 0;
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_51;
LABEL_36:
    v36 = *(std::__shared_weak_count **)(v12 + 16);
    if (!v36)
      goto LABEL_47;
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
    v34 = *(_QWORD *)(v12 + 8);
    v40 = *(std::__shared_weak_count **)(v12 + 16);
    if (!v40)
      goto LABEL_47;
    v41 = (unint64_t *)&v40->__shared_owners_;
    do
      v42 = __ldxr(v41);
    while (__stxr(v42 + 1, v41));
    do
      v43 = __ldaxr(v41);
    while (__stlxr(v43 - 1, v41));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
      if (!*(_BYTE *)(v12 + 73))
        goto LABEL_51;
    }
    else
    {
LABEL_47:
      if (!*(_BYTE *)(v12 + 73))
        goto LABEL_51;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v34 + 96))(&v108, v34, 1);
    v110 = v101;
    if (!*(_DWORD *)(v13 + 32))
      goto LABEL_90;
LABEL_52:
    v44 = *(_DWORD *)(v13 + 36);
    if (!v44)
      goto LABEL_90;
    v45 = *(_DWORD *)(v13 + 40);
    if (!v45)
      goto LABEL_90;
    v111 = (double ****)&v110;
    v47 = *(unsigned int *)(v13 + 48);
    v46 = *(unsigned int *)(v13 + 52);
    v48 = *(unsigned int *)(v12 + 48);
    v49 = *(unsigned int *)(v12 + 52);
    v50 = *(__int16 **)(v13 + 24);
    if (*(_BYTE *)(v13 + 72) && v50)
    {
      v51 = *(_QWORD *)(v13 + 8);
      v52 = *(std::__shared_weak_count **)(v13 + 16);
      if (v52)
      {
        v53 = (unint64_t *)&v52->__shared_owners_;
        do
          v54 = __ldxr(v53);
        while (__stxr(v54 + 1, v53));
        do
          v55 = __ldaxr(v53);
        while (__stlxr(v55 - 1, v53));
        if (!v55)
        {
          ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
          std::__shared_weak_count::__release_weak(v52);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v51 + 88))(v51, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v50 = *(__int16 **)(v13 + 24);
    }
    v56 = *(__int16 **)(v12 + 24);
    if (*(_BYTE *)(v12 + 72) && v56)
    {
      v57 = *(_QWORD *)(v12 + 8);
      v58 = *(std::__shared_weak_count **)(v12 + 16);
      if (v58)
      {
        v59 = (unint64_t *)&v58->__shared_owners_;
        do
          v60 = __ldxr(v59);
        while (__stxr(v60 + 1, v59));
        do
          v61 = __ldaxr(v59);
        while (__stlxr(v61 - 1, v59));
        if (!v61)
        {
          ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
          std::__shared_weak_count::__release_weak(v58);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v57 + 88))(v57, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v56 = *(__int16 **)(v12 + 24);
    }
    v62 = v44 - 1;
    v112 = 0u;
    v113 = 0u;
    v63 = 2 * v47;
    v64 = v45 - 1;
    if (v64)
    {
      if (v44 == 1)
      {
        v98 = 0;
        v99 = 0;
        v100 = 2 * v46;
        do
        {
          v114[0] = (__int16 *)((char *)v56 + v98);
          *(_QWORD *)&v112 = (char *)v50 + v99;
          *(_QWORD *)&v113 = (char *)v56 + v98;
          sub_2243A6604((__int16 **)&v112, &v111, (__int16 *)((char *)v50 + v99), v114);
          v99 += v100;
          v98 += v49;
          --v64;
        }
        while (v64);
        v50 = (__int16 *)((char *)v50 + v99);
        v114[0] = (__int16 *)((char *)v56 + v98);
        *(_QWORD *)&v112 = v50;
        *(_QWORD *)&v113 = (char *)v56 + v98;
LABEL_89:
        a3.n128_f64[0] = sub_2243A6604((__int16 **)&v112, &v111, v50, v114);
        goto LABEL_90;
      }
      v65 = 0;
      v66 = 2 * v46;
      do
      {
        v114[0] = v56;
        v67 = v111;
        v68 = v62;
        v69 = v50;
        v70 = v56;
        do
        {
          *(_QWORD *)&v112 = v69;
          *(_QWORD *)&v113 = v70;
          v71 = *v67;
          _H0 = *v69;
          v74 = *v71;
          v73 = v71[1];
          __asm { FCVT            D0, H0 }
          v76 = (_D0 - **v74) * *v74[1];
          v77 = fmax(v76, 0.0);
          if (v76 <= 1.0)
            v78 = v77;
          else
            v78 = 1.0;
          *(_BYTE *)v70 = llround(**v73 + v78 * *v73[1]);
          v67 = v111;
          v79 = v112;
          v80 = v113;
          _H0 = *(_WORD *)(v112 + 2);
          v82 = (*v111)[1];
          __asm { FCVT            D0, H0 }
          v84 = (_D0 - ****v111) * *(**v111)[1];
          v85 = fmax(v84, 0.0);
          v87 = *v82;
          v86 = v82[1];
          if (v84 <= 1.0)
            v88 = v85;
          else
            v88 = 1.0;
          *(_BYTE *)(v113 + 1) = llround(*v87 + v88 * *v86);
          _H0 = *(_WORD *)(v79 + 4);
          v90 = (*v67)[1];
          __asm { FCVT            D0, H0 }
          v92 = (_D0 - ****v67) * *(**v67)[1];
          v93 = fmax(v92, 0.0);
          v94 = *v90;
          v95 = v90[1];
          if (v92 <= 1.0)
            v96 = v93;
          else
            v96 = 1.0;
          *(_BYTE *)(v80 + 2) = llround(*v94 + v96 * *v95);
          v70 = (__int16 *)((char *)v114[0] + v48);
          v114[0] = (__int16 *)((char *)v114[0] + v48);
          v69 = (__int16 *)((char *)v69 + v63);
          --v68;
        }
        while (v68);
        sub_2243A6604((__int16 **)&v112, &v111, v69, v114);
        v50 = (__int16 *)((char *)v50 + v66);
        v56 = (__int16 *)((char *)v56 + v49);
        ++v65;
      }
      while (v65 != v64);
    }
    v114[0] = v56;
    *(_QWORD *)&v112 = v50;
    for (*(_QWORD *)&v113 = v56; v62; --v62)
    {
      sub_2243A6604((__int16 **)&v112, &v111, v50, v114);
      v114[0] = (__int16 *)((char *)v114[0] + v48);
      v50 = (__int16 *)((char *)v50 + v63);
    }
    goto LABEL_89;
  }
  ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
  std::__shared_weak_count::__release_weak(v30);
  if (!*(_BYTE *)(v13 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v25 + 96))(&v109, v25, 0);
  v34 = *(_QWORD *)(v12 + 8);
  if (v34)
    goto LABEL_36;
LABEL_51:
  v108 = 0;
  v110 = v101;
  if (*(_DWORD *)(v13 + 32))
    goto LABEL_52;
LABEL_90:
  v97 = v108;
  v108 = 0;
  if (v97)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v97 + 8))(v97, a3);
  result = v109;
  v109 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2243A5FBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A6020(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  char v22;
  char v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 255.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 255.0)
      v9 = v7;
    else
      v9 = 255.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 23544;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_2243A671C(v4, v5, (uint64_t)v19);
}

uint64_t sub_2243A60F4(uint64_t **a1)
{
  return sub_2243A6100(**a1, (*a1)[1]);
}

uint64_t sub_2243A6100(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  _BYTE *v44;
  _WORD *v45;
  _WORD *v46;
  _BYTE *v47;
  int v48;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v76 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v75, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v76, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v75 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_BYTE **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_BYTE **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = (int)_S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = (int)_S0;
            LOWORD(_S0) = v28[2];
            __asm { FCVT            S0, H0 }
            v34[2] = (int)_S0;
            v34 += v27;
            v28 += v24;
            --v42;
          }
          while (v42);
        }
        else
        {
          v43 = 0;
          v44 = v34 + 2;
          v45 = v28 + 2;
          do
          {
            v46 = v45;
            v47 = v44;
            v48 = v22 - 1;
            do
            {
              _H0 = *(v46 - 2);
              __asm { FCVT            S0, H0 }
              *(v47 - 2) = (int)_S0;
              LOWORD(_S0) = *(v46 - 1);
              __asm { FCVT            S0, H0 }
              *(v47 - 1) = (int)_S0;
              LOWORD(_S0) = *v46;
              __asm { FCVT            S0, H0 }
              *v47 = (int)_S0;
              v47 += v26;
              v46 = (_WORD *)((char *)v46 + v41);
              --v48;
            }
            while (v48);
            _H0 = *(v46 - 2);
            __asm { FCVT            S0, H0 }
            *(v47 - 2) = (int)_S0;
            LOWORD(_S0) = *(v46 - 1);
            __asm { FCVT            S0, H0 }
            *(v47 - 1) = (int)_S0;
            LOWORD(_S0) = *v46;
            __asm { FCVT            S0, H0 }
            *v47 = (int)_S0;
            v28 += v24;
            v34 += v27;
            ++v43;
            v44 += v27;
            v45 += v24;
          }
          while (v43 != v42);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = (int)_S0;
          LOWORD(_S0) = v28[2];
          __asm { FCVT            S0, H0 }
          v34[2] = (int)_S0;
          v34 += v26;
          v28 = (__int16 *)((char *)v28 + v41);
          --v40;
        }
        while (v40);
      }
      _H0 = *v28;
      __asm { FCVT            S0, H0 }
      *v34 = (int)_S0;
      LOWORD(_S0) = v28[1];
      __asm { FCVT            S0, H0 }
      v34[1] = (int)_S0;
      LOWORD(_S0) = v28[2];
      __asm { FCVT            S0, H0 }
      v34[2] = (int)_S0;
    }
  }
LABEL_65:
  v73 = v75;
  v75 = 0;
  if (v73)
    (*(void (**)(uint64_t))(*(_QWORD *)v73 + 8))(v73);
  result = v76;
  v76 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A65A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2243A6604(__int16 **a1, double *****a2, __int16 *a3, __int16 **a4)
{
  __int16 *v4;
  double ***v5;
  double **v12;
  double **v13;
  double v14;
  double v15;
  double v16;
  double ***v17;
  double **v20;
  double **v21;
  double v22;
  double v23;
  double v24;
  double ***v25;
  double **v28;
  double **v29;
  double v30;
  double v31;
  double v32;
  double result;

  *a1 = a3;
  v4 = *a4;
  a1[2] = *a4;
  v5 = **a2;
  _H0 = *a3;
  __asm { FCVT            D0, H0 }
  v13 = *v5;
  v12 = v5[1];
  v14 = (_D0 - **v13) * *v13[1];
  v15 = fmax(v14, 0.0);
  if (v14 <= 1.0)
    v16 = v15;
  else
    v16 = 1.0;
  *(_BYTE *)v4 = llround(**v12 + v16 * *v12[1]);
  v17 = **a2;
  _H0 = (*a1)[1];
  __asm { FCVT            D0, H0 }
  v21 = *v17;
  v20 = v17[1];
  v22 = (_D0 - **v21) * *v21[1];
  v23 = fmax(v22, 0.0);
  if (v22 <= 1.0)
    v24 = v23;
  else
    v24 = 1.0;
  *((_BYTE *)a1[2] + 1) = llround(**v20 + v24 * *v20[1]);
  v25 = **a2;
  _H0 = (*a1)[2];
  __asm { FCVT            D0, H0 }
  v29 = *v25;
  v28 = v25[1];
  v30 = (_D0 - **v29) * *v29[1];
  v31 = fmax(v30, 0.0);
  if (v30 <= 1.0)
    v32 = v31;
  else
    v32 = 1.0;
  result = **v28 + v32 * *v28[1];
  *((_BYTE *)a1[2] + 2) = llround(result);
  return result;
}

uint64_t sub_2243A671C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  __int16 *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  __int16 ***v47;
  int v48;
  __int16 *v49;
  __int16 *v50;
  __int16 *v51;
  __int16 **v52;
  uint64_t v63;
  uint64_t v64;
  __int16 **v65;
  __int16 *v70;
  __int16 **v73;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t result;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int16 ***v88;
  __int128 v89;
  __int128 v90;
  __int16 *v91;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_89;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_89;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_89:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v86 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v85, v15, 1);
    v87 = a3;
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_83;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v86, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v85 = 0;
  v87 = a3;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_83;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v88 = (__int16 ***)&v87;
      v27 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(__int16 **)(a1 + 24);
      }
      v36 = *(__int16 **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(__int16 **)(a2 + 24);
      }
      v42 = v24 - 1;
      v89 = 0u;
      v90 = 0u;
      v43 = 2 * v27;
      v44 = v25 - 1;
      if (v44)
      {
        if (v24 != 1)
        {
          v45 = 0;
          v46 = 2 * v26;
          while (1)
          {
            v91 = v36;
            v47 = v88;
            v48 = v42;
            v49 = v30;
            v50 = v36;
            do
            {
              *(_QWORD *)&v89 = v49;
              *(_QWORD *)&v90 = v50;
              v52 = *v47;
              _H0 = *v49;
              _H1 = **v52;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S0 >= _S1)
              {
                _H1 = *v52[2];
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  LODWORD(v52) = (int)_S0;
                else
                  LOBYTE(v52) = *(_BYTE *)v52[3];
              }
              else
              {
                LOBYTE(v52) = *(_BYTE *)v52[1];
              }
              *(_BYTE *)v50 = (_BYTE)v52;
              v47 = v88;
              v63 = v89;
              v64 = v90;
              v65 = *v88;
              _H0 = *(_WORD *)(v89 + 2);
              _H1 = ***v88;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S0 < _S1)
              {
                v70 = v65[1];
LABEL_71:
                LOBYTE(v70) = *(_BYTE *)v70;
                goto LABEL_73;
              }
              _H1 = *v65[2];
              __asm { FCVT            S1, H1 }
              if (_S0 > _S1)
              {
                v70 = v65[3];
                goto LABEL_71;
              }
              LODWORD(v70) = (int)_S0;
LABEL_73:
              *(_BYTE *)(v90 + 1) = (_BYTE)v70;
              v73 = *v47;
              _H0 = *(_WORD *)(v63 + 4);
              _H1 = ***v47;
              __asm
              {
                FCVT            S0, H0
                FCVT            S1, H1
              }
              if (_S0 < _S1)
              {
                v51 = v73[1];
LABEL_60:
                LOBYTE(v51) = *(_BYTE *)v51;
                goto LABEL_61;
              }
              _H1 = *v73[2];
              __asm { FCVT            S1, H1 }
              if (_S0 > _S1)
              {
                v51 = v73[3];
                goto LABEL_60;
              }
              LODWORD(v51) = (int)_S0;
LABEL_61:
              *(_BYTE *)(v64 + 2) = (_BYTE)v51;
              v50 = (__int16 *)((char *)v91 + v28);
              v91 = (__int16 *)((char *)v91 + v28);
              v49 = (__int16 *)((char *)v49 + v43);
              --v48;
            }
            while (v48);
            sub_2243A6CD4((__int16 **)&v89, &v88, v49, &v91);
            v30 = (__int16 *)((char *)v30 + v46);
            v36 = (__int16 *)((char *)v36 + v29);
            if (++v45 == v44)
              goto LABEL_80;
          }
        }
        v80 = 0;
        v81 = 0;
        v82 = 2 * v26;
        do
        {
          v91 = (__int16 *)((char *)v36 + v80);
          *(_QWORD *)&v89 = (char *)v30 + v81;
          *(_QWORD *)&v90 = (char *)v36 + v80;
          sub_2243A6CD4((__int16 **)&v89, &v88, (__int16 *)((char *)v30 + v81), &v91);
          v81 += v82;
          v80 += v29;
          --v44;
        }
        while (v44);
        v30 = (__int16 *)((char *)v30 + v81);
        v36 = (__int16 *)((char *)v36 + v80);
      }
LABEL_80:
      v91 = v36;
      *(_QWORD *)&v89 = v30;
      for (*(_QWORD *)&v90 = v36; v42; --v42)
      {
        sub_2243A6CD4((__int16 **)&v89, &v88, v30, &v91);
        v91 = (__int16 *)((char *)v91 + v28);
        v30 = (__int16 *)((char *)v30 + v43);
      }
      sub_2243A6CD4((__int16 **)&v89, &v88, v30, &v91);
    }
  }
LABEL_83:
  v83 = v85;
  v85 = 0;
  if (v83)
    (*(void (**)(uint64_t))(*(_QWORD *)v83 + 8))(v83);
  result = v86;
  v86 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A6C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

__int16 **sub_2243A6CD4(__int16 **result, __int16 ****a2, __int16 *a3, __int16 **a4)
{
  __int16 *v4;
  __int16 **v5;
  __int16 **v16;
  __int16 *v21;
  __int16 *v24;
  __int16 **v25;

  *result = a3;
  v4 = *a4;
  result[2] = *a4;
  v5 = **a2;
  _H0 = *a3;
  _H1 = **v5;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = *v5[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      LODWORD(v5) = (int)_S0;
    else
      LOBYTE(v5) = *(_BYTE *)v5[3];
  }
  else
  {
    LOBYTE(v5) = *(_BYTE *)v5[1];
  }
  *(_BYTE *)v4 = (_BYTE)v5;
  v16 = **a2;
  _H0 = (*result)[1];
  _H1 = **v16;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 < _S1)
  {
    v21 = v16[1];
LABEL_10:
    LOBYTE(v21) = *(_BYTE *)v21;
    goto LABEL_12;
  }
  _H1 = *v16[2];
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v21 = v16[3];
    goto LABEL_10;
  }
  LODWORD(v21) = (int)_S0;
LABEL_12:
  *((_BYTE *)result[2] + 1) = (_BYTE)v21;
  v24 = result[2];
  v25 = **a2;
  _H0 = (*result)[2];
  _H1 = **v25;
  __asm
  {
    FCVT            S0, H0
    FCVT            S1, H1
  }
  if (_S0 >= _S1)
  {
    _H1 = *v25[2];
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      *((_BYTE *)v24 + 2) = (int)_S0;
    else
      *((_BYTE *)v24 + 2) = *(_BYTE *)v25[3];
  }
  else
  {
    *((_BYTE *)v24 + 2) = *(_BYTE *)v25[1];
  }
  return result;
}

uint64_t sub_2243A6E00(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  double v16;
  int v17;
  double v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v22;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int16 *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  __int16 *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  double v70;
  double v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  double ****v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  _OWORD v85[2];

  v3 = *a1;
  if (*(_BYTE *)(a2 + 16))
  {
    v4 = -65504.0;
    if (*(double *)a2 >= -65504.0)
      v4 = *(double *)a2;
    _S0 = v4;
    __asm { FCVT            H0, S0 }
    v9 = LOWORD(_S0);
    v10 = 65504.0;
    if (*(double *)(a2 + 8) <= 65504.0)
      v10 = *(double *)(a2 + 8);
    _S0 = v10;
    __asm { FCVT            H0, S0 }
    v13 = *v3;
    v12 = v3[1];
    _S0 = v9 | (LOWORD(_S0) << 16);
    _S1 = HIWORD(_S0);
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_13:
    v19 = -65536;
    goto LABEL_14;
  }
  v13 = *v3;
  v12 = v3[1];
  LOWORD(_S0) = 0;
  LOWORD(_S1) = 15360;
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_13;
LABEL_7:
  v16 = *(double *)(a2 + 24);
  if (v16 < 0.0)
    v16 = 0.0;
  v17 = (int)v16;
  v18 = 65535.0;
  if (*(double *)(a2 + 32) <= 65535.0)
    v18 = *(double *)(a2 + 32);
  v19 = v17 | ((int)v18 << 16);
LABEL_14:
  v20 = (unsigned __int16)v19;
  __asm { FCVT            S2, H0 }
  v22 = HIWORD(v19);
  __asm { FCVT            S2, H1 }
  _ZF = _ZF && _S2 == (float)v22;
  if (_ZF)
    return sub_2243A7454(v13, v12);
  __asm { FCVT            D0, H0 }
  v73 = _D0;
  __asm { FCVT            D1, H1 }
  v71 = (double)v20;
  v72 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = (double)v22 - (double)v20;
  v70 = a3.n128_f64[0];
  v69[0] = &v73;
  v69[1] = &v72;
  v68[0] = &v71;
  v68[1] = &v70;
  v67[0] = v69;
  v67[1] = v68;
  v27 = *(_QWORD *)(v13 + 8);
  if (!v27)
    goto LABEL_35;
  v28 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v28)
    goto LABEL_82;
  p_shared_owners = (unint64_t *)&v28->__shared_owners_;
  do
    v30 = __ldxr(p_shared_owners);
  while (__stxr(v30 + 1, p_shared_owners));
  do
    v31 = __ldaxr(p_shared_owners);
  while (__stlxr(v31 - 1, p_shared_owners));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
    std::__shared_weak_count::__release_weak(v28);
  }
  v27 = *(_QWORD *)(v13 + 8);
  v32 = *(std::__shared_weak_count **)(v13 + 16);
  if (!v32)
    goto LABEL_82;
  v33 = (unint64_t *)&v32->__shared_owners_;
  do
    v34 = __ldxr(v33);
  while (__stxr(v34 + 1, v33));
  do
    v35 = __ldaxr(v33);
  while (__stlxr(v35 - 1, v33));
  if (v35)
  {
LABEL_82:
    if (*(_BYTE *)(v13 + 73))
      goto LABEL_31;
LABEL_35:
    v75 = 0;
    v36 = *(_QWORD *)(v12 + 8);
    if (!v36)
      goto LABEL_51;
    goto LABEL_36;
  }
  ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
  std::__shared_weak_count::__release_weak(v32);
  if (!*(_BYTE *)(v13 + 73))
    goto LABEL_35;
LABEL_31:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v27 + 96))(&v75, v27, 0);
  v36 = *(_QWORD *)(v12 + 8);
  if (!v36)
  {
LABEL_51:
    v74 = 0;
    v76 = v67;
    v46 = *(_DWORD *)(v13 + 32);
    if (v46)
      goto LABEL_52;
    goto LABEL_76;
  }
LABEL_36:
  v38 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v38)
    goto LABEL_47;
  v39 = (unint64_t *)&v38->__shared_owners_;
  do
    v40 = __ldxr(v39);
  while (__stxr(v40 + 1, v39));
  do
    v41 = __ldaxr(v39);
  while (__stlxr(v41 - 1, v39));
  if (!v41)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
  v36 = *(_QWORD *)(v12 + 8);
  v42 = *(std::__shared_weak_count **)(v12 + 16);
  if (!v42)
    goto LABEL_47;
  v43 = (unint64_t *)&v42->__shared_owners_;
  do
    v44 = __ldxr(v43);
  while (__stxr(v44 + 1, v43));
  do
    v45 = __ldaxr(v43);
  while (__stlxr(v45 - 1, v43));
  if (!v45)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
    if (!*(_BYTE *)(v12 + 73))
      goto LABEL_51;
  }
  else
  {
LABEL_47:
    if (!*(_BYTE *)(v12 + 73))
      goto LABEL_51;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v36 + 96))(&v74, v36, 1);
  v76 = v67;
  v46 = *(_DWORD *)(v13 + 32);
  if (v46)
  {
LABEL_52:
    v47 = *(_DWORD *)(v13 + 36);
    if (v47)
    {
      v48 = *(_DWORD *)(v13 + 40);
      if (v48)
      {
        v77 = (double ****)&v76;
        v78 = 0;
        v79 = v46 - 1;
        v49 = *(unsigned int *)(v13 + 48);
        v50 = *(unsigned int *)(v12 + 48);
        v80 = *(unsigned int *)(v13 + 44) | ((unint64_t)*(unsigned int *)(v12 + 44) << 32);
        v81 = v47 - 1;
        v82 = v49 | (v50 << 32);
        v83 = v48 - 1;
        v84 = *(unsigned int *)(v13 + 52) | ((unint64_t)*(unsigned int *)(v12 + 52) << 32);
        v51 = *(__int16 **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v51)
        {
          v52 = *(_QWORD *)(v13 + 8);
          v53 = *(std::__shared_weak_count **)(v13 + 16);
          if (v53)
          {
            v54 = (unint64_t *)&v53->__shared_owners_;
            do
              v55 = __ldxr(v54);
            while (__stxr(v55 + 1, v54));
            do
              v56 = __ldaxr(v54);
            while (__stlxr(v56 - 1, v54));
            if (!v56)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v52 + 88))(v52, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v51 = *(__int16 **)(v13 + 24);
        }
        v57 = *(__int16 **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v57)
        {
          v58 = *(_QWORD *)(v12 + 8);
          v59 = *(std::__shared_weak_count **)(v12 + 16);
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldxr(v60);
            while (__stxr(v61 + 1, v60));
            do
              v62 = __ldaxr(v60);
            while (__stlxr(v62 - 1, v60));
            if (!v62)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v58 + 88))(v58, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v57 = *(__int16 **)(v12 + 24);
        }
        memset(v85, 0, sizeof(v85));
        v63 = v83;
        if (v83)
        {
          v64 = 2 * v84;
          v65 = 2 * HIDWORD(v84);
          do
          {
            sub_2243A796C(&v78, (__int16 **)v85, &v77, v51, v57);
            v51 = (__int16 *)((char *)v51 + v64);
            v57 = (__int16 *)((char *)v57 + v65);
            --v63;
          }
          while (v63);
        }
        a3.n128_f64[0] = sub_2243A796C(&v78, (__int16 **)v85, &v77, v51, v57);
      }
    }
  }
LABEL_76:
  v66 = v74;
  v74 = 0;
  if (v66)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v66 + 8))(v66, a3);
  result = v75;
  v75 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2243A7310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A7374(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  unsigned int v8;
  double v9;
  unsigned int v10;
  _QWORD v19[4];
  __int16 v20;
  __int16 v21;
  __int16 v22;
  __int16 v23;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = 0.0;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 65535.0;
    if (v6 < 0.0)
      v6 = 0.0;
    v8 = (int)v6;
    if (v7 <= 65535.0)
      v9 = v7;
    else
      v9 = 65535.0;
    v10 = (int)v9;
    v23 = v8;
    v22 = (int)v9;
    _S0 = (float)v8;
    __asm { FCVT            H0, S0 }
    v21 = LOWORD(_S0);
    _S0 = (float)v10;
    __asm { FCVT            H0, S0 }
  }
  else
  {
    v23 = 0;
    v22 = -1;
    _H0 = 31744;
    v21 = 0;
  }
  v20 = _H0;
  v19[0] = &v21;
  v19[1] = &v23;
  v19[2] = &v20;
  v19[3] = &v22;
  return sub_2243A7AE8(v4, v5, (uint64_t)v19);
}

uint64_t sub_2243A7448(uint64_t **a1)
{
  return sub_2243A7454(**a1, (*a1)[1]);
}

uint64_t sub_2243A7454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _WORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  int v42;
  _WORD *v43;
  _WORD *v44;
  _WORD *v45;
  _WORD *v46;
  int v47;
  uint64_t v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v75 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v74, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v75, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v74 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v24 = *(unsigned int *)(a1 + 48);
      v25 = *(unsigned int *)(a1 + 52);
      v26 = *(unsigned int *)(a2 + 48);
      v27 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_WORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = (int)_S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = (int)_S0;
            LOWORD(_S0) = v28[2];
            __asm { FCVT            S0, H0 }
            v34[2] = (int)_S0;
            v28 += v25;
            v34 += v27;
            --v41;
          }
          while (v41);
LABEL_64:
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = (int)_S0;
          LOWORD(_S0) = v28[2];
          __asm { FCVT            S0, H0 }
          v34[2] = (int)_S0;
          goto LABEL_65;
        }
        v42 = 0;
        v43 = v34 + 2;
        v44 = v28 + 2;
        do
        {
          v45 = v44;
          v46 = v43;
          v47 = v22 - 1;
          do
          {
            _H0 = *(v45 - 2);
            __asm { FCVT            S0, H0 }
            *(v46 - 2) = (int)_S0;
            LOWORD(_S0) = *(v45 - 1);
            __asm { FCVT            S0, H0 }
            *(v46 - 1) = (int)_S0;
            LOWORD(_S0) = *v45;
            __asm { FCVT            S0, H0 }
            *v46 = (int)_S0;
            v46 += v26;
            v45 += v24;
            --v47;
          }
          while (v47);
          _H0 = *(v45 - 2);
          __asm { FCVT            S0, H0 }
          *(v46 - 2) = (int)_S0;
          LOWORD(_S0) = *(v45 - 1);
          __asm { FCVT            S0, H0 }
          *(v46 - 1) = (int)_S0;
          LOWORD(_S0) = *v45;
          __asm { FCVT            S0, H0 }
          *v46 = (int)_S0;
          v28 += v25;
          v34 += v27;
          ++v42;
          v43 += v27;
          v44 += v25;
        }
        while (v42 != v41);
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = (int)_S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = (int)_S0;
          LOWORD(_S0) = v28[2];
          __asm { FCVT            S0, H0 }
          v34[2] = (int)_S0;
          v28 += v24;
          v34 += v26;
          --v40;
        }
        while (v40);
      }
      goto LABEL_64;
    }
  }
LABEL_65:
  v72 = v74;
  v74 = 0;
  if (v72)
    (*(void (**)(uint64_t))(*(_QWORD *)v72 + 8))(v72);
  result = v75;
  v75 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A7908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

double sub_2243A796C(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, __int16 *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  double v36;
  double v37;
  double v38;
  double v41;
  double v42;
  double v43;
  double v46;
  double v47;
  double v48;
  double result;

  *a2 = a4;
  a2[2] = a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 2 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      *a5 = llround(v11 + v12 * v23);
      _H6 = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      a5[1] = llround(v11 + v12 * v28);
      _H6 = a4[2];
      __asm { FCVT            D6, H6 }
      v31 = v10 * (_D6 - v9);
      v32 = fmax(v31, 0.0);
      if (v31 <= 1.0)
        v33 = v32;
      else
        v33 = 1.0;
      a5[2] = llround(v11 + v12 * v33);
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (__int16 *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v36 = v10 * (_D4 - v9);
  v37 = fmax(v36, 0.0);
  if (v36 <= 1.0)
    v38 = v37;
  else
    v38 = 1.0;
  *a5 = llround(v11 + v12 * v38);
  _H4 = a4[1];
  __asm { FCVT            D4, H4 }
  v41 = v10 * (_D4 - v9);
  v42 = fmax(v41, 0.0);
  if (v41 <= 1.0)
    v43 = v42;
  else
    v43 = 1.0;
  a5[1] = llround(v11 + v12 * v43);
  _H4 = a4[2];
  __asm { FCVT            D4, H4 }
  v46 = v10 * (_D4 - v9);
  v47 = fmax(v46, 0.0);
  if (v46 <= 1.0)
    v48 = v47;
  else
    v48 = 1.0;
  result = v11 + v12 * v48;
  a5[2] = llround(result);
  return result;
}

uint64_t sub_2243A7AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 *v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _WORD *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  __int16 *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _WORD *v47;
  __int16 *v48;
  uint64_t v49;
  uint64_t v50;
  _WORD *v51;
  int v52;
  __int16 *v53;
  _WORD *v54;
  int v55;
  _WORD *v56;
  __int16 *v57;
  _WORD *v58;
  __int16 *v59;
  int v60;
  _WORD *v61;
  int v62;
  int v71;
  int v78;
  int v91;
  int v98;
  int v107;
  int v112;
  int v119;
  _WORD *v128;
  __int16 *v129;
  _WORD *v130;
  int v131;
  int v136;
  int v143;
  int v156;
  _WORD *v163;
  _WORD *v170;
  uint64_t v173;
  uint64_t result;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_148;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_148;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_148:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v177 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v176, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_142;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v177, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v176 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_142;
LABEL_34:
  v24 = *(_DWORD *)(a1 + 36);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 40);
    if (v25)
    {
      v27 = *(unsigned int *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 52);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(__int16 **)(a1 + 24);
      v175 = v28;
      if (*(_BYTE *)(a1 + 72) && v30)
      {
        v31 = *(_QWORD *)(a1 + 8);
        v32 = *(std::__shared_weak_count **)(a1 + 16);
        if (v32)
        {
          v33 = (unint64_t *)&v32->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v31 + 88))(v31, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v30 = *(__int16 **)(a1 + 24);
        v28 = v175;
      }
      v36 = *(_WORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v36)
      {
        v37 = *(_QWORD *)(a2 + 8);
        v38 = *(std::__shared_weak_count **)(a2 + 16);
        if (v38)
        {
          v39 = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(v39);
          while (__stxr(v40 + 1, v39));
          do
            v41 = __ldaxr(v39);
          while (__stlxr(v41 - 1, v39));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v37 + 88))(v37, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v36 = *(_WORD **)(a2 + 24);
        v28 = v175;
      }
      v42 = v24 - 1;
      v43 = *(__int16 **)a3;
      v44 = 2 * v28;
      v45 = 2 * v27;
      v46 = v25 - 1;
      if (v25 != 1)
      {
        v48 = *(__int16 **)(a3 + 16);
        v47 = *(_WORD **)(a3 + 24);
        v49 = 2 * v29;
        v50 = 2 * v26;
        v51 = *(_WORD **)(a3 + 8);
        if (v24 == 1)
        {
          do
          {
            _H0 = *v30;
            _H1 = *v43;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 >= _S1)
            {
              _H1 = *v48;
              __asm { FCVT            S1, H1 }
              if (_S0 <= _S1)
                v112 = (int)_S0;
              else
                LOWORD(v112) = *v47;
            }
            else
            {
              LOWORD(v112) = *v51;
            }
            *v36 = v112;
            _H0 = v30[1];
            _H1 = *v43;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 >= _S1)
            {
              _H1 = *v48;
              __asm { FCVT            S1, H1 }
              if (_S0 <= _S1)
                v119 = (int)_S0;
              else
                LOWORD(v119) = *v47;
            }
            else
            {
              LOWORD(v119) = *v51;
            }
            v36[1] = v119;
            _H0 = v30[2];
            _H1 = *v43;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 < _S1)
            {
              LOWORD(v107) = *v51;
            }
            else
            {
              _H1 = *v48;
              __asm { FCVT            S1, H1 }
              if (_S0 <= _S1)
                v107 = (int)_S0;
              else
                LOWORD(v107) = *v47;
            }
            v36[2] = v107;
            v36 = (_WORD *)((char *)v36 + v49);
            v30 = (__int16 *)((char *)v30 + v50);
            --v46;
          }
          while (v46);
        }
        else
        {
          v52 = 0;
          v53 = v30 + 2;
          v54 = v36 + 2;
          do
          {
            v57 = *(__int16 **)(a3 + 16);
            v56 = *(_WORD **)(a3 + 24);
            v58 = v54;
            v59 = v53;
            v60 = v24 - 1;
            v61 = *(_WORD **)(a3 + 8);
            do
            {
              _H0 = *(v59 - 2);
              _H1 = *v43;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v57;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v71 = (int)_S0;
                else
                  LOWORD(v71) = *v56;
              }
              else
              {
                LOWORD(v71) = *v61;
              }
              *(v58 - 2) = v71;
              _H0 = *(v59 - 1);
              _H1 = *v43;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 >= _S1)
              {
                _H1 = *v57;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v78 = (int)_S0;
                else
                  LOWORD(v78) = *v56;
              }
              else
              {
                LOWORD(v78) = *v61;
              }
              *(v58 - 1) = v78;
              _H0 = *v59;
              _H1 = *v43;
              __asm
              {
                FCVT            S1, H1
                FCVT            S0, H0
              }
              if (_S0 < _S1)
              {
                LOWORD(v62) = *v61;
              }
              else
              {
                _H1 = *v57;
                __asm { FCVT            S1, H1 }
                if (_S0 <= _S1)
                  v62 = (int)_S0;
                else
                  LOWORD(v62) = *v56;
              }
              *v58 = v62;
              v59 = (__int16 *)((char *)v59 + v45);
              v58 = (_WORD *)((char *)v58 + v44);
              --v60;
            }
            while (v60);
            _H0 = *(v59 - 2);
            _H1 = *v43;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 >= _S1)
            {
              _H1 = *v48;
              __asm { FCVT            S1, H1 }
              if (_S0 <= _S1)
                v91 = (int)_S0;
              else
                LOWORD(v91) = *v47;
            }
            else
            {
              LOWORD(v91) = *v51;
            }
            *(v58 - 2) = v91;
            _H0 = *(v59 - 1);
            _H1 = *v43;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 >= _S1)
            {
              _H1 = *v48;
              __asm { FCVT            S1, H1 }
              if (_S0 <= _S1)
                v98 = (int)_S0;
              else
                LOWORD(v98) = *v47;
            }
            else
            {
              LOWORD(v98) = *v51;
            }
            *(v58 - 1) = v98;
            _H0 = *v59;
            _H1 = *v43;
            __asm
            {
              FCVT            S1, H1
              FCVT            S0, H0
            }
            if (_S0 < _S1)
            {
              LOWORD(v55) = *v51;
            }
            else
            {
              _H1 = *v48;
              __asm { FCVT            S1, H1 }
              if (_S0 <= _S1)
                v55 = (int)_S0;
              else
                LOWORD(v55) = *v47;
            }
            *v58 = v55;
            v30 += v26;
            v36 += v29;
            ++v52;
            v53 = (__int16 *)((char *)v53 + v50);
            v54 = (_WORD *)((char *)v54 + v49);
          }
          while (v52 != v46);
        }
      }
      if (v24 != 1)
      {
        v129 = *(__int16 **)(a3 + 16);
        v128 = *(_WORD **)(a3 + 24);
        v130 = *(_WORD **)(a3 + 8);
        do
        {
          _H0 = *v30;
          _H1 = *v43;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v129;
            __asm { FCVT            S1, H1 }
            if (_S0 <= _S1)
              v136 = (int)_S0;
            else
              LOWORD(v136) = *v128;
          }
          else
          {
            LOWORD(v136) = *v130;
          }
          *v36 = v136;
          _H0 = v30[1];
          _H1 = *v43;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = *v129;
            __asm { FCVT            S1, H1 }
            if (_S0 <= _S1)
              v143 = (int)_S0;
            else
              LOWORD(v143) = *v128;
          }
          else
          {
            LOWORD(v143) = *v130;
          }
          v36[1] = v143;
          _H0 = v30[2];
          _H1 = *v43;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 < _S1)
          {
            LOWORD(v131) = *v130;
          }
          else
          {
            _H1 = *v129;
            __asm { FCVT            S1, H1 }
            if (_S0 <= _S1)
              v131 = (int)_S0;
            else
              LOWORD(v131) = *v128;
          }
          v36[2] = v131;
          v36 = (_WORD *)((char *)v36 + v44);
          v30 = (__int16 *)((char *)v30 + v45);
          --v42;
        }
        while (v42);
      }
      _H0 = *v30;
      _H1 = *v43;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(a3 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          v156 = (int)_S0;
        else
          LOWORD(v156) = **(_WORD **)(a3 + 24);
      }
      else
      {
        LOWORD(v156) = **(_WORD **)(a3 + 8);
      }
      *v36 = v156;
      _H0 = v30[1];
      _H1 = *v43;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(a3 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
        {
          LODWORD(v163) = (int)_S0;
LABEL_135:
          v36[1] = (_WORD)v163;
          _H0 = v30[2];
          _H1 = *v43;
          __asm
          {
            FCVT            S1, H1
            FCVT            S0, H0
          }
          if (_S0 >= _S1)
          {
            _H1 = **(_WORD **)(a3 + 16);
            __asm { FCVT            S1, H1 }
            if (_S0 <= _S1)
            {
              LODWORD(v170) = (int)_S0;
              goto LABEL_141;
            }
            v170 = *(_WORD **)(a3 + 24);
          }
          else
          {
            v170 = *(_WORD **)(a3 + 8);
          }
          LOWORD(v170) = *v170;
LABEL_141:
          v36[2] = (_WORD)v170;
          goto LABEL_142;
        }
        v163 = *(_WORD **)(a3 + 24);
      }
      else
      {
        v163 = *(_WORD **)(a3 + 8);
      }
      LOWORD(v163) = *v163;
      goto LABEL_135;
    }
  }
LABEL_142:
  v173 = v176;
  v176 = 0;
  if (v173)
    (*(void (**)(uint64_t))(*(_QWORD *)v173 + 8))(v173);
  result = v177;
  v177 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A82AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (!a12)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A8310(uint64_t **a1, uint64_t a2, __n128 a3)
{
  uint64_t *v3;
  double v4;
  unsigned __int16 v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  double v16;
  float v17;
  double v18;
  float v19;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  __int16 *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  float *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  double v71;
  double v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  double ****v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  unint64_t v85;
  _OWORD v86[2];

  v3 = *a1;
  if (!*(_BYTE *)(a2 + 16))
  {
    v13 = *v3;
    v12 = v3[1];
    LOWORD(_S0) = 0;
    LOWORD(_S1) = 15360;
    if (*(_BYTE *)(a2 + 40))
      goto LABEL_7;
LABEL_32:
    v19 = 1.0;
    v17 = 0.0;
    __asm
    {
      FCVT            S4, H0
      FCVT            S5, H1
    }
    if (_S4 != 0.0 || 1.0 != _S5)
      goto LABEL_15;
    return sub_2243A895C(v13, v12);
  }
  v4 = -65504.0;
  if (*(double *)a2 >= -65504.0)
    v4 = *(double *)a2;
  _S0 = v4;
  __asm { FCVT            H0, S0 }
  v9 = LOWORD(_S0);
  v10 = 65504.0;
  if (*(double *)(a2 + 8) <= 65504.0)
    v10 = *(double *)(a2 + 8);
  _S0 = v10;
  __asm { FCVT            H0, S0 }
  v13 = *v3;
  v12 = v3[1];
  _S0 = v9 | (LOWORD(_S0) << 16);
  _S1 = HIWORD(_S0);
  if (!*(_BYTE *)(a2 + 40))
    goto LABEL_32;
LABEL_7:
  v16 = -3.40282347e38;
  if (*(double *)(a2 + 24) >= -3.40282347e38)
    v16 = *(double *)(a2 + 24);
  v17 = v16;
  v18 = 3.40282347e38;
  if (*(double *)(a2 + 32) <= 3.40282347e38)
    v18 = *(double *)(a2 + 32);
  v19 = v18;
  __asm
  {
    FCVT            S4, H0
    FCVT            S5, H1
  }
  if (v17 == _S4 && v19 == _S5)
    return sub_2243A895C(v13, v12);
LABEL_15:
  __asm { FCVT            D0, H0 }
  v74 = _D0;
  __asm { FCVT            D1, H1 }
  v72 = v17;
  v73 = 1.0 / (_D1 - _D0);
  a3.n128_f64[0] = v19 - v17;
  v71 = a3.n128_f64[0];
  v70[0] = &v74;
  v70[1] = &v73;
  v69[0] = &v72;
  v69[1] = &v71;
  v68[0] = v70;
  v68[1] = v69;
  v25 = *(_QWORD *)(v13 + 8);
  if (!v25)
    goto LABEL_38;
  v26 = *(std::__shared_weak_count **)(v13 + 16);
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldxr(p_shared_owners);
    while (__stxr(v28 + 1, p_shared_owners));
    do
      v29 = __ldaxr(p_shared_owners);
    while (__stlxr(v29 - 1, p_shared_owners));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
    v25 = *(_QWORD *)(v13 + 8);
    v30 = *(std::__shared_weak_count **)(v13 + 16);
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
      do
        v33 = __ldaxr(v31);
      while (__stlxr(v33 - 1, v31));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
    }
  }
  if (*(_BYTE *)(v13 + 73))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v25 + 96))(&v76, v25, 0);
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_54;
  }
  else
  {
LABEL_38:
    v76 = 0;
    v34 = *(_QWORD *)(v12 + 8);
    if (!v34)
      goto LABEL_54;
  }
  v39 = *(std::__shared_weak_count **)(v12 + 16);
  if (v39)
  {
    v40 = (unint64_t *)&v39->__shared_owners_;
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    do
      v42 = __ldaxr(v40);
    while (__stlxr(v42 - 1, v40));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
    v34 = *(_QWORD *)(v12 + 8);
    v43 = *(std::__shared_weak_count **)(v12 + 16);
    if (v43)
    {
      v44 = (unint64_t *)&v43->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
  }
  if (!*(_BYTE *)(v12 + 73))
  {
LABEL_54:
    v75 = 0;
    v77 = v68;
    v47 = *(_DWORD *)(v13 + 32);
    if (v47)
      goto LABEL_55;
    goto LABEL_79;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v34 + 96))(&v75, v34, 1);
  v77 = v68;
  v47 = *(_DWORD *)(v13 + 32);
  if (v47)
  {
LABEL_55:
    v48 = *(_DWORD *)(v13 + 36);
    if (v48)
    {
      v49 = *(_DWORD *)(v13 + 40);
      if (v49)
      {
        v78 = (double ****)&v77;
        v79 = 0;
        v80 = v47 - 1;
        v50 = *(unsigned int *)(v13 + 48);
        v51 = *(unsigned int *)(v12 + 48);
        v81 = *(unsigned int *)(v13 + 44) | ((unint64_t)*(unsigned int *)(v12 + 44) << 32);
        v82 = v48 - 1;
        v83 = v50 | (v51 << 32);
        v84 = v49 - 1;
        v85 = *(unsigned int *)(v13 + 52) | ((unint64_t)*(unsigned int *)(v12 + 52) << 32);
        v52 = *(__int16 **)(v13 + 24);
        if (*(_BYTE *)(v13 + 72) && v52)
        {
          v53 = *(_QWORD *)(v13 + 8);
          v54 = *(std::__shared_weak_count **)(v13 + 16);
          if (v54)
          {
            v55 = (unint64_t *)&v54->__shared_owners_;
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v53 + 88))(v53, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v52 = *(__int16 **)(v13 + 24);
        }
        v58 = *(float **)(v12 + 24);
        if (*(_BYTE *)(v12 + 72) && v58)
        {
          v59 = *(_QWORD *)(v12 + 8);
          v60 = *(std::__shared_weak_count **)(v12 + 16);
          if (v60)
          {
            v61 = (unint64_t *)&v60->__shared_owners_;
            do
              v62 = __ldxr(v61);
            while (__stxr(v62 + 1, v61));
            do
              v63 = __ldaxr(v61);
            while (__stlxr(v63 - 1, v61));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
              std::__shared_weak_count::__release_weak(v60);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v59 + 88))(v59, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v58 = *(float **)(v12 + 24);
        }
        memset(v86, 0, sizeof(v86));
        v64 = v84;
        if (v84)
        {
          v65 = 2 * v85;
          v66 = 4 * HIDWORD(v85);
          do
          {
            sub_2243A8E30(&v79, (__int16 **)v86, &v78, v52, v58);
            v52 = (__int16 *)((char *)v52 + v65);
            v58 = (float *)((char *)v58 + v66);
            --v64;
          }
          while (v64);
        }
        a3.n128_f32[0] = sub_2243A8E30(&v79, (__int16 **)v86, &v78, v52, v58);
      }
    }
  }
LABEL_79:
  v67 = v75;
  v75 = 0;
  if (v67)
    (*(void (**)(uint64_t, __n128))(*(_QWORD *)v67 + 8))(v67, a3);
  result = v76;
  v76 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)result + 8))(result, a3);
  return result;
}

void sub_2243A8818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (!a20)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a20 + 8))(a20);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2243A887C(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v9;
  _QWORD v18[4];
  __int16 v19;
  __int16 v20;
  float v21;
  int v22;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  if (*(unsigned __int8 *)(a2 + 8) | *(unsigned __int8 *)(a2 + 24))
  {
    v6 = *(double *)a2;
    if (!*(_BYTE *)(a2 + 8))
      v6 = -3.40282347e38;
    v7 = *(double *)(a2 + 16);
    if (!*(_BYTE *)(a2 + 24))
      v7 = 3.40282347e38;
    if (v6 < -3.40282347e38)
      v6 = -3.40282347e38;
    _S0 = v6;
    if (v7 <= 3.40282347e38)
      v9 = v7;
    else
      v9 = 3.40282347e38;
    _S1 = v9;
    v21 = _S1;
    v22 = LODWORD(_S0);
    __asm { FCVT            H0, S0 }
    v20 = _H0;
    __asm { FCVT            H0, S1 }
  }
  else
  {
    v21 = 3.4028e38;
    v22 = -8388609;
    v20 = -1024;
    _H0 = 31744;
  }
  v19 = _H0;
  v18[0] = &v20;
  v18[1] = &v22;
  v18[2] = &v19;
  v18[3] = &v21;
  return sub_2243A8FAC(v4, v5, (uint64_t)v18);
}

uint64_t sub_2243A8950(uint64_t **a1)
{
  return sub_2243A895C(**a1, (*a1)[1]);
}

uint64_t sub_2243A895C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  _DWORD *v45;
  _WORD *v46;
  _WORD *v47;
  _DWORD *v48;
  int v49;
  uint64_t v74;
  uint64_t result;
  uint64_t v76;
  uint64_t v77;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_17;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_71;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v4 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v9)
    goto LABEL_71;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_71:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v77 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_33;
LABEL_18:
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v14)
      goto LABEL_29;
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_29;
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v13 + 96))(&v76, v13, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_65;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v77, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (v13)
    goto LABEL_18;
LABEL_33:
  v76 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_65;
LABEL_34:
  v22 = *(_DWORD *)(a1 + 36);
  if (v22)
  {
    v23 = *(_DWORD *)(a1 + 40);
    if (v23)
    {
      v25 = *(unsigned int *)(a1 + 48);
      v24 = *(unsigned int *)(a1 + 52);
      v27 = *(unsigned int *)(a2 + 48);
      v26 = *(unsigned int *)(a2 + 52);
      v28 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v28)
      {
        v29 = *(_QWORD *)(a1 + 8);
        v30 = *(std::__shared_weak_count **)(a1 + 16);
        if (v30)
        {
          v31 = (unint64_t *)&v30->__shared_owners_;
          do
            v32 = __ldxr(v31);
          while (__stxr(v32 + 1, v31));
          do
            v33 = __ldaxr(v31);
          while (__stlxr(v33 - 1, v31));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v29 + 88))(v29, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v28 = *(__int16 **)(a1 + 24);
      }
      v34 = *(_DWORD **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v34)
      {
        v35 = *(_QWORD *)(a2 + 8);
        v36 = *(std::__shared_weak_count **)(a2 + 16);
        if (v36)
        {
          v37 = (unint64_t *)&v36->__shared_owners_;
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 1, v37));
          do
            v39 = __ldaxr(v37);
          while (__stlxr(v39 - 1, v37));
          if (!v39)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v35 + 88))(v35, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v34 = *(_DWORD **)(a2 + 24);
      }
      v40 = v22 - 1;
      v41 = 2 * v25;
      v42 = 4 * v27;
      v43 = v23 - 1;
      if (v23 != 1)
      {
        if (v22 == 1)
        {
          do
          {
            _H0 = *v28;
            __asm { FCVT            S0, H0 }
            *v34 = _S0;
            LOWORD(_S0) = v28[1];
            __asm { FCVT            S0, H0 }
            v34[1] = _S0;
            LOWORD(_S0) = v28[2];
            __asm { FCVT            S0, H0 }
            v34[2] = _S0;
            v28 += v24;
            v34 += v26;
            --v43;
          }
          while (v43);
        }
        else
        {
          v44 = 0;
          v45 = v34 + 2;
          v46 = v28 + 2;
          do
          {
            v47 = v46;
            v48 = v45;
            v49 = v22 - 1;
            do
            {
              _H0 = *(v47 - 2);
              __asm { FCVT            S0, H0 }
              *(v48 - 2) = _S0;
              LOWORD(_S0) = *(v47 - 1);
              __asm { FCVT            S0, H0 }
              *(v48 - 1) = _S0;
              LOWORD(_S0) = *v47;
              __asm { FCVT            S0, H0 }
              *v48 = _S0;
              v48 = (_DWORD *)((char *)v48 + v42);
              v47 = (_WORD *)((char *)v47 + v41);
              --v49;
            }
            while (v49);
            _H0 = *(v47 - 2);
            __asm { FCVT            S0, H0 }
            *(v48 - 2) = _S0;
            LOWORD(_S0) = *(v47 - 1);
            __asm { FCVT            S0, H0 }
            *(v48 - 1) = _S0;
            LOWORD(_S0) = *v47;
            __asm { FCVT            S0, H0 }
            *v48 = _S0;
            v28 += v24;
            v34 += v26;
            ++v44;
            v45 += v26;
            v46 += v24;
          }
          while (v44 != v43);
        }
      }
      if (v22 != 1)
      {
        do
        {
          _H0 = *v28;
          __asm { FCVT            S0, H0 }
          *v34 = _S0;
          LOWORD(_S0) = v28[1];
          __asm { FCVT            S0, H0 }
          v34[1] = _S0;
          LOWORD(_S0) = v28[2];
          __asm { FCVT            S0, H0 }
          v34[2] = _S0;
          v28 = (__int16 *)((char *)v28 + v41);
          v34 = (_DWORD *)((char *)v34 + v42);
          --v40;
        }
        while (v40);
      }
      _H0 = *v28;
      __asm { FCVT            S0, H0 }
      *v34 = _S0;
      LOWORD(_S0) = v28[1];
      __asm { FCVT            S0, H0 }
      v34[1] = _S0;
      LOWORD(_S0) = v28[2];
      __asm { FCVT            S0, H0 }
      v34[2] = _S0;
    }
  }
LABEL_65:
  v74 = v76;
  v76 = 0;
  if (v74)
    (*(void (**)(uint64_t))(*(_QWORD *)v74 + 8))(v74);
  result = v77;
  v77 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A8DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

float sub_2243A8E30(_DWORD *a1, __int16 **a2, double *****a3, __int16 *a4, float *a5)
{
  int v5;
  double ***v6;
  double **v7;
  double **v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v21;
  double v22;
  double v23;
  double v26;
  double v27;
  double v28;
  double v31;
  double v32;
  double v33;
  float v34;
  double v37;
  double v38;
  double v39;
  double v42;
  double v43;
  double v44;
  double v47;
  double v48;
  double v49;
  float result;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = a1[5];
  v6 = **a3;
  v8 = *v6;
  v7 = v6[1];
  v9 = **v8;
  v10 = *v8[1];
  v11 = **v7;
  v12 = *v7[1];
  if (v5)
  {
    v13 = 2 * a1[6];
    v14 = 4 * a1[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H6 = *a4;
      __asm { FCVT            D6, H6 }
      v21 = v10 * (_D6 - v9);
      v22 = fmax(v21, 0.0);
      if (v21 <= 1.0)
        v23 = v22;
      else
        v23 = 1.0;
      _S6 = v11 + v12 * v23;
      *a5 = _S6;
      LOWORD(_S6) = a4[1];
      __asm { FCVT            D6, H6 }
      v26 = v10 * (_D6 - v9);
      v27 = fmax(v26, 0.0);
      if (v26 <= 1.0)
        v28 = v27;
      else
        v28 = 1.0;
      _S6 = v11 + v12 * v28;
      a5[1] = _S6;
      LOWORD(_S6) = a4[2];
      __asm { FCVT            D6, H6 }
      v31 = v10 * (_D6 - v9);
      v32 = fmax(v31, 0.0);
      if (v31 <= 1.0)
        v33 = v32;
      else
        v33 = 1.0;
      v34 = v11 + v12 * v33;
      a5[2] = v34;
      a4 = (__int16 *)((char *)a4 + v13);
      a5 = (float *)((char *)a5 + v14);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H4 = *a4;
  __asm { FCVT            D4, H4 }
  v37 = v10 * (_D4 - v9);
  v38 = fmax(v37, 0.0);
  if (v37 <= 1.0)
    v39 = v38;
  else
    v39 = 1.0;
  _S4 = v11 + v12 * v39;
  *a5 = _S4;
  LOWORD(_S4) = a4[1];
  __asm { FCVT            D4, H4 }
  v42 = v10 * (_D4 - v9);
  v43 = fmax(v42, 0.0);
  if (v42 <= 1.0)
    v44 = v43;
  else
    v44 = 1.0;
  _S4 = v11 + v12 * v44;
  a5[1] = _S4;
  LOWORD(_S4) = a4[2];
  __asm { FCVT            D4, H4 }
  v47 = v10 * (_D4 - v9);
  v48 = fmax(v47, 0.0);
  if (v47 <= 1.0)
    v49 = v48;
  else
    v49 = 1.0;
  result = v11 + v12 * v49;
  a5[2] = result;
  return result;
}

uint64_t sub_2243A8FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  __int16 *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  float *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _OWORD v57[2];

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_64;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_64;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_64:
    if (*(_BYTE *)(a1 + 73))
      goto LABEL_14;
LABEL_17:
    v47 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v46, v15, 1);
    v48 = a3;
    v24 = *(_DWORD *)(a1 + 32);
    if (!v24)
      goto LABEL_58;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 73))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v47, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v46 = 0;
  v48 = a3;
  v24 = *(_DWORD *)(a1 + 32);
  if (!v24)
    goto LABEL_58;
LABEL_34:
  v25 = *(_DWORD *)(a1 + 36);
  if (v25)
  {
    v26 = *(_DWORD *)(a1 + 40);
    if (v26)
    {
      v49 = &v48;
      v50 = 0;
      v51 = v24 - 1;
      v27 = *(unsigned int *)(a1 + 48);
      v28 = *(unsigned int *)(a2 + 48);
      v52 = *(unsigned int *)(a1 + 44) | ((unint64_t)*(unsigned int *)(a2 + 44) << 32);
      v53 = v25 - 1;
      v54 = v27 | (v28 << 32);
      v55 = v26 - 1;
      v56 = *(unsigned int *)(a1 + 52) | ((unint64_t)*(unsigned int *)(a2 + 52) << 32);
      v29 = *(__int16 **)(a1 + 24);
      if (*(_BYTE *)(a1 + 72) && v29)
      {
        v30 = *(_QWORD *)(a1 + 8);
        v31 = *(std::__shared_weak_count **)(a1 + 16);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v30 + 88))(v30, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v29 = *(__int16 **)(a1 + 24);
      }
      v35 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v35)
      {
        v36 = *(_QWORD *)(a2 + 8);
        v37 = *(std::__shared_weak_count **)(a2 + 16);
        if (v37)
        {
          v38 = (unint64_t *)&v37->__shared_owners_;
          do
            v39 = __ldxr(v38);
          while (__stxr(v39 + 1, v38));
          do
            v40 = __ldaxr(v38);
          while (__stlxr(v40 - 1, v38));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v36 + 88))(v36, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v35 = *(float **)(a2 + 24);
      }
      memset(v57, 0, sizeof(v57));
      v41 = v55;
      if (v55)
      {
        v42 = 2 * v56;
        v43 = 4 * HIDWORD(v56);
        do
        {
          sub_2243A93D0(&v50, (__int16 **)v57, &v49, v29, v35);
          v29 = (__int16 *)((char *)v29 + v42);
          v35 = (float *)((char *)v35 + v43);
          --v41;
        }
        while (v41);
      }
      sub_2243A93D0(&v50, (__int16 **)v57, &v49, v29, v35);
    }
  }
LABEL_58:
  v44 = v46;
  v46 = 0;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  result = v47;
  v47 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2243A936C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2243A93D0(_DWORD *result, __int16 **a2, uint64_t **a3, __int16 *a4, float *a5)
{
  int v5;
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  float *v20;
  float *v27;
  float *v39;
  float *v46;
  float *v53;

  *a2 = a4;
  a2[2] = (__int16 *)a5;
  v5 = result[5];
  v6 = **a3;
  v7 = *(__int16 **)v6;
  if (v5)
  {
    v8 = 2 * result[6];
    v9 = 4 * result[7];
    do
    {
      *a2 = a4;
      a2[2] = (__int16 *)a5;
      _H0 = *a4;
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_11;
        v20 = *(float **)(v6 + 24);
      }
      else
      {
        v20 = *(float **)(v6 + 8);
      }
      _S0 = *v20;
LABEL_11:
      *a5 = _S0;
      _H0 = a4[1];
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 >= _S1)
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_16;
        v27 = *(float **)(v6 + 24);
      }
      else
      {
        v27 = *(float **)(v6 + 8);
      }
      _S0 = *v27;
LABEL_16:
      a5[1] = _S0;
      _H0 = a4[2];
      _H1 = *v7;
      __asm
      {
        FCVT            S1, H1
        FCVT            S0, H0
      }
      if (_S0 < _S1)
      {
        v10 = *(float **)(v6 + 8);
      }
      else
      {
        _H1 = **(_WORD **)(v6 + 16);
        __asm { FCVT            S1, H1 }
        if (_S0 <= _S1)
          goto LABEL_5;
        v10 = *(float **)(v6 + 24);
      }
      _S0 = *v10;
LABEL_5:
      a5[2] = _S0;
      a4 = (__int16 *)((char *)a4 + v8);
      a5 = (float *)((char *)a5 + v9);
      --v5;
    }
    while (v5);
  }
  *a2 = a4;
  a2[2] = (__int16 *)a5;
  _H0 = *a4;
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(v6 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_24;
    v39 = *(float **)(v6 + 24);
  }
  else
  {
    v39 = *(float **)(v6 + 8);
  }
  _S0 = *v39;
LABEL_24:
  *a5 = _S0;
  _H0 = a4[1];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 >= _S1)
  {
    _H1 = **(_WORD **)(v6 + 16);
    __asm { FCVT            S1, H1 }
    if (_S0 <= _S1)
      goto LABEL_29;
    v46 = *(float **)(v6 + 24);
  }
  else
  {
    v46 = *(float **)(v6 + 8);
  }
  _S0 = *v46;
LABEL_29:
  a5[1] = _S0;
  _H0 = a4[2];
  _H1 = *v7;
  __asm
  {
    FCVT            S1, H1
    FCVT            S0, H0
  }
  if (_S0 < _S1)
  {
    v53 = *(float **)(v6 + 8);
LABEL_33:
    _S0 = *v53;
    goto LABEL_34;
  }
  _H1 = **(_WORD **)(v6 + 16);
  __asm { FCVT            S1, H1 }
  if (_S0 > _S1)
  {
    v53 = *(float **)(v6 + 24);
    goto LABEL_33;
  }
LABEL_34:
  a5[2] = _S0;
  return result;
}

