void sub_2239CF5A0(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const float *v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  const float *v63;
  uint64_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _QWORD *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  _QWORD *v82;
  int v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  _QWORD *v88;
  uint64_t v89;
  int v90;
  const float *v91;
  uint64_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  _QWORD *v96;
  int v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  const float *v105;
  uint64_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  _QWORD *v110;
  __int32 v111;
  int v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  _QWORD *v116;
  uint64_t v117;
  const float *v118;
  uint64_t v119;
  int v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  _QWORD *v124;
  int v125;
  int v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  _QWORD *v130;
  uint64_t v131;
  int v132;
  const float *v133;
  uint64_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  _QWORD *v138;
  int v139;
  int v140;
  uint64_t v141;
  unsigned int v142;
  unsigned int v143;
  _QWORD *v144;
  uint64_t v145;
  int v146;
  const float *v147;
  uint64_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  _QWORD *v152;
  int v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  unsigned int v157;
  _QWORD *v158;
  uint64_t v159;
  int v160;
  const float *v161;
  uint64_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  _QWORD *v166;
  int v167;
  int v168;
  uint64_t v169;
  unsigned int v170;
  unsigned int v171;
  _QWORD *v172;
  uint64_t v173;
  int v174;
  const float *v175;
  uint64_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  _QWORD *v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  _QWORD *v186;
  uint64_t v187;
  int v188;
  const float *v189;
  uint64_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  _QWORD *v194;
  int v195;
  int v196;
  uint64_t v197;
  unsigned int v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  int v202;
  const float *v203;
  uint64_t v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  int v216;
  const float *v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  __int32 v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  const float *v230;
  uint64_t v231;
  int v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  int v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  int v258;
  const float *v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  int v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  int v286;
  const float *v287;
  uint64_t v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  int v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  int v314;
  const float *v315;
  uint64_t v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  __int32 v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  const float *v342;
  uint64_t v343;
  int v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  int v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  int v370;
  const float *v371;
  uint64_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  int v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  int v398;
  const float *v399;
  uint64_t v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  int v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  int v426;
  const float *v427;
  uint64_t v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  __int32 v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  const float *v454;
  uint64_t v455;
  int v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _BYTE v474[12];
  int32x2_t v475;
  int v476;
  int32x2_t *v477;
  float32x2x3_t v478;
  float32x2x3_t v479;
  float32x2x3_t v480;
  float32x2x3_t v481;
  float32x2x3_t v482;
  float32x2x3_t v483;
  float32x2x3_t v484;
  float32x2x3_t v485;
  float32x2x3_t v486;
  float32x2x3_t v487;
  float32x2x3_t v488;
  float32x2x3_t v489;
  float32x2x3_t v490;
  float32x2x3_t v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;

  v12 = *a1;
  a4.i64[0] = 0x300000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000001);
  *(_QWORD *)v474 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1124);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v478 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v24.f32[0]), v478.val[1], *(float32x2_t *)v24.f32, 1), v478.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v25.f32[0]), v478.val[1], *(float32x2_t *)v25.f32, 1), v478.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  a4.i64[0] = 0x300000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000002);
  *(_QWORD *)v474 = a3.i64[0];
  v27 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v27;
  v28 = *(_DWORD *)(v26[1] + 1128);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = *(_DWORD *)(*v32 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v34);
      a4.f32[1] = (float)(a3.i32[1] / v34);
      a4.f32[2] = (float)(v27 / v34);
      v35 = (const float *)(*v32 + 1656);
      v479 = vld3_f32(v35);
      v36 = *(_QWORD *)(v32[1] + 144);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v38 = vaddq_f32(a4, v37);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v38.f32[0]), v479.val[1], *(float32x2_t *)v38.f32, 1), v479.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v27;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v36);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v39.f32[0]), v479.val[1], *(float32x2_t *)v39.f32, 1), v479.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a4.i64[0] = 0x300000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000003);
  *(_QWORD *)v474 = a3.i64[0];
  v41 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1132);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v480 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v52.f32[0]), v480.val[1], *(float32x2_t *)v52.f32, 1), v480.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v53.f32[0]), v480.val[1], *(float32x2_t *)v53.f32, 1), v480.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  a4.i64[0] = 0x300000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000004);
  *(_QWORD *)v474 = a3.i64[0];
  v55 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v55;
  v56 = *(_DWORD *)(v54[1] + 1136);
  if (v56 != *(_DWORD *)(*v54 + 272))
  {
    v57 = *(_QWORD *)(v54[2] + 8);
    if ((v56 & 0x10000000) != 0)
      v58 = 0x40000000;
    else
      v58 = 0x80000000;
    if ((v56 & 0x20000000) != 0)
      v59 = v58;
    else
      v59 = v56 & 0xCFFFFFFF;
    if ((v59 & 0x40000000) != 0)
    {
      v60 = *(_QWORD **)v57;
      v61 = *v60;
      v62 = *(_DWORD *)(*v60 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v62);
      a4.f32[1] = (float)(a3.i32[1] / v62);
      a4.f32[2] = (float)(v55 / v62);
      v63 = (const float *)(*v60 + 1656);
      v481 = vld3_f32(v63);
      v64 = *(_QWORD *)(v60[1] + 144);
      v65.i64[0] = 0x3F0000003F000000;
      v65.i64[1] = 0x3F0000003F000000;
      v66 = vaddq_f32(a4, v65);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v66.f32[0]), v481.val[1], *(float32x2_t *)v66.f32, 1), v481.val[2], v66, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v55;
      v67 = vmulq_n_f32(vaddq_f32(a3, v65), *(float *)&v64);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v61 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v67.f32[0]), v481.val[1], *(float32x2_t *)v67.f32, 1), v481.val[2], v67, 2);
    }
    else if (!(v59 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v57 + 16), *(_QWORD *)(*(_QWORD *)(v57 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v57 + 8) + 2448) + 520 * v59, *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v68 = *a1;
  a4.i64[0] = 0x300000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000005);
  *(_QWORD *)v474 = a3.i64[0];
  v69 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v69;
  v70 = *(_DWORD *)(v68[1] + 1140);
  if (v70 != *(_DWORD *)(*v68 + 272))
  {
    v71 = *(_QWORD *)(v68[2] + 8);
    if ((v70 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v70 & 0xCFFFFFFF;
    if ((v73 & 0x40000000) != 0)
    {
      v74 = *(_QWORD **)v71;
      v75 = *v74;
      v76 = *(_DWORD *)(*v74 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v76);
      a4.f32[1] = (float)(a3.i32[1] / v76);
      a4.f32[2] = (float)(v69 / v76);
      v77 = (const float *)(*v74 + 1656);
      v482 = vld3_f32(v77);
      v78 = *(_QWORD *)(v74[1] + 144);
      v79.i64[0] = 0x3F0000003F000000;
      v79.i64[1] = 0x3F0000003F000000;
      v80 = vaddq_f32(a4, v79);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v80.f32[0]), v482.val[1], *(float32x2_t *)v80.f32, 1), v482.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v69;
      v81 = vmulq_n_f32(vaddq_f32(a3, v79), *(float *)&v78);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v75 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v81.f32[0]), v482.val[1], *(float32x2_t *)v81.f32, 1), v482.val[2], v81, 2);
    }
    else if (!(v73 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v71 + 16), *(_QWORD *)(*(_QWORD *)(v71 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v71 + 8) + 2448) + 520 * v73, *(_QWORD *)(*(_QWORD *)(v71 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v82 = *a1;
  a4.i64[0] = 0x300000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000006);
  *(_QWORD *)v474 = a3.i64[0];
  v83 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v83;
  v84 = *(_DWORD *)(v82[1] + 1144);
  if (v84 != *(_DWORD *)(*v82 + 272))
  {
    v85 = *(_QWORD *)(v82[2] + 8);
    if ((v84 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v84 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v84 & 0xCFFFFFFF;
    if ((v87 & 0x40000000) != 0)
    {
      v88 = *(_QWORD **)v85;
      v89 = *v88;
      v90 = *(_DWORD *)(*v88 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v90);
      a4.f32[1] = (float)(a3.i32[1] / v90);
      a4.f32[2] = (float)(v83 / v90);
      v91 = (const float *)(*v88 + 1656);
      v483 = vld3_f32(v91);
      v92 = *(_QWORD *)(v88[1] + 144);
      v93.i64[0] = 0x3F0000003F000000;
      v93.i64[1] = 0x3F0000003F000000;
      v94 = vaddq_f32(a4, v93);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v94.f32[0]), v483.val[1], *(float32x2_t *)v94.f32, 1), v483.val[2], v94, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v83;
      v95 = vmulq_n_f32(vaddq_f32(a3, v93), *(float *)&v92);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v89 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v95.f32[0]), v483.val[1], *(float32x2_t *)v95.f32, 1), v483.val[2], v95, 2);
    }
    else if (!(v87 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v85 + 16), *(_QWORD *)(*(_QWORD *)(v85 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v85 + 8) + 2448) + 520 * v87, *(_QWORD *)(*(_QWORD *)(v85 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v96 = *a1;
  a4.i64[0] = 0x300000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000007);
  *(_QWORD *)v474 = a3.i64[0];
  v97 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v97;
  v98 = *(_DWORD *)(v96[1] + 1148);
  if (v98 != *(_DWORD *)(*v96 + 272))
  {
    v99 = *(_QWORD *)(v96[2] + 8);
    if ((v98 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v101 = v100;
    else
      v101 = v98 & 0xCFFFFFFF;
    if ((v101 & 0x40000000) != 0)
    {
      v102 = *(_QWORD **)v99;
      v103 = *v102;
      v104 = *(_DWORD *)(*v102 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v104);
      a4.f32[1] = (float)(a3.i32[1] / v104);
      a4.f32[2] = (float)(v97 / v104);
      v105 = (const float *)(*v102 + 1656);
      v484 = vld3_f32(v105);
      v106 = *(_QWORD *)(v102[1] + 144);
      v107.i64[0] = 0x3F0000003F000000;
      v107.i64[1] = 0x3F0000003F000000;
      v108 = vaddq_f32(a4, v107);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v108.f32[0]), v484.val[1], *(float32x2_t *)v108.f32, 1), v484.val[2], v108, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v97;
      v109 = vmulq_n_f32(vaddq_f32(a3, v107), *(float *)&v106);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v103 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v109.f32[0]), v484.val[1], *(float32x2_t *)v109.f32, 1), v484.val[2], v109, 2);
    }
    else if (!(v101 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v99 + 16), *(_QWORD *)(*(_QWORD *)(v99 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v99 + 8) + 2448) + 520 * v101, *(_QWORD *)(*(_QWORD *)(v99 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v110 = *a1;
  v111 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  a4.i64[0] = 0x400000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x400000004);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v112 = *(_DWORD *)(v110[1] + 1152);
  if (v112 != *(_DWORD *)(*v110 + 272))
  {
    v113 = *(_QWORD *)(v110[2] + 8);
    if ((v112 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v115 = v114;
    else
      v115 = v112 & 0xCFFFFFFF;
    if ((v115 & 0x40000000) != 0)
    {
      v116 = *(_QWORD **)v113;
      v117 = *v116;
      v118 = (const float *)(*v116 + 1656);
      v119 = *(_QWORD *)(v116[1] + 144);
      LODWORD(v116) = *(_DWORD *)(*v116 + 8);
      v120 = a3.i32[1];
      a5.f32[0] = (float)(v111 / (int)v116);
      a5.f32[1] = (float)(a3.i32[0] / (int)v116);
      a5.f32[2] = (float)(a3.i32[1] / (int)v116);
      v121.i64[0] = 0x3F0000003F000000;
      v121.i64[1] = 0x3F0000003F000000;
      v507 = vld3_f32(v118);
      v122 = vaddq_f32(a5, v121);
      *(int32x2_t *)v122.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v122.f32[0]), v507.val[1], *(float32x2_t *)v122.f32, 1), v507.val[2], v122, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v122.f32;
      v476 = 0;
      v122.i32[0] = v111;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v122.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v120;
      v123 = vmulq_n_f32(vaddq_f32(a3, v121), *(float *)&v119);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v117 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v123.f32[0]), v507.val[1], *(float32x2_t *)v123.f32, 1), v507.val[2], v123, 2);
    }
    else if (!(v115 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v113 + 16), *(_QWORD *)(*(_QWORD *)(v113 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v113 + 8) + 2448) + 520 * v115, *(_QWORD *)(*(_QWORD *)(v113 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v124 = *a1;
  a4.i64[0] = 0x400000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000001);
  *(_QWORD *)v474 = a3.i64[0];
  v125 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v125;
  v126 = *(_DWORD *)(v124[1] + 1156);
  if (v126 != *(_DWORD *)(*v124 + 272))
  {
    v127 = *(_QWORD *)(v124[2] + 8);
    if ((v126 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v126 & 0x20000000) != 0)
      v129 = v128;
    else
      v129 = v126 & 0xCFFFFFFF;
    if ((v129 & 0x40000000) != 0)
    {
      v130 = *(_QWORD **)v127;
      v131 = *v130;
      v132 = *(_DWORD *)(*v130 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v132);
      a4.f32[1] = (float)(a3.i32[1] / v132);
      a4.f32[2] = (float)(v125 / v132);
      v133 = (const float *)(*v130 + 1656);
      v485 = vld3_f32(v133);
      v134 = *(_QWORD *)(v130[1] + 144);
      v135.i64[0] = 0x3F0000003F000000;
      v135.i64[1] = 0x3F0000003F000000;
      v136 = vaddq_f32(a4, v135);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v136.f32[0]), v485.val[1], *(float32x2_t *)v136.f32, 1), v485.val[2], v136, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v125;
      v137 = vmulq_n_f32(vaddq_f32(a3, v135), *(float *)&v134);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v131 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v137.f32[0]), v485.val[1], *(float32x2_t *)v137.f32, 1), v485.val[2], v137, 2);
    }
    else if (!(v129 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v127 + 16), *(_QWORD *)(*(_QWORD *)(v127 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v127 + 8) + 2448) + 520 * v129, *(_QWORD *)(*(_QWORD *)(v127 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v138 = *a1;
  a4.i64[0] = 0x400000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000002);
  *(_QWORD *)v474 = a3.i64[0];
  v139 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v139;
  v140 = *(_DWORD *)(v138[1] + 1160);
  if (v140 != *(_DWORD *)(*v138 + 272))
  {
    v141 = *(_QWORD *)(v138[2] + 8);
    if ((v140 & 0x10000000) != 0)
      v142 = 0x40000000;
    else
      v142 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v143 = v142;
    else
      v143 = v140 & 0xCFFFFFFF;
    if ((v143 & 0x40000000) != 0)
    {
      v144 = *(_QWORD **)v141;
      v145 = *v144;
      v146 = *(_DWORD *)(*v144 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v146);
      a4.f32[1] = (float)(a3.i32[1] / v146);
      a4.f32[2] = (float)(v139 / v146);
      v147 = (const float *)(*v144 + 1656);
      v486 = vld3_f32(v147);
      v148 = *(_QWORD *)(v144[1] + 144);
      v149.i64[0] = 0x3F0000003F000000;
      v149.i64[1] = 0x3F0000003F000000;
      v150 = vaddq_f32(a4, v149);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v150.f32[0]), v486.val[1], *(float32x2_t *)v150.f32, 1), v486.val[2], v150, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v139;
      v151 = vmulq_n_f32(vaddq_f32(a3, v149), *(float *)&v148);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v145 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v151.f32[0]), v486.val[1], *(float32x2_t *)v151.f32, 1), v486.val[2], v151, 2);
    }
    else if (!(v143 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v141 + 16), *(_QWORD *)(*(_QWORD *)(v141 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v141 + 8) + 2448) + 520 * v143, *(_QWORD *)(*(_QWORD *)(v141 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v152 = *a1;
  a4.i64[0] = 0x400000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000003);
  *(_QWORD *)v474 = a3.i64[0];
  v153 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v153;
  v154 = *(_DWORD *)(v152[1] + 1164);
  if (v154 != *(_DWORD *)(*v152 + 272))
  {
    v155 = *(_QWORD *)(v152[2] + 8);
    if ((v154 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v157 = v156;
    else
      v157 = v154 & 0xCFFFFFFF;
    if ((v157 & 0x40000000) != 0)
    {
      v158 = *(_QWORD **)v155;
      v159 = *v158;
      v160 = *(_DWORD *)(*v158 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v160);
      a4.f32[1] = (float)(a3.i32[1] / v160);
      a4.f32[2] = (float)(v153 / v160);
      v161 = (const float *)(*v158 + 1656);
      v487 = vld3_f32(v161);
      v162 = *(_QWORD *)(v158[1] + 144);
      v163.i64[0] = 0x3F0000003F000000;
      v163.i64[1] = 0x3F0000003F000000;
      v164 = vaddq_f32(a4, v163);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v164.f32[0]), v487.val[1], *(float32x2_t *)v164.f32, 1), v487.val[2], v164, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v153;
      v165 = vmulq_n_f32(vaddq_f32(a3, v163), *(float *)&v162);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v159 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v165.f32[0]), v487.val[1], *(float32x2_t *)v165.f32, 1), v487.val[2], v165, 2);
    }
    else if (!(v157 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v155 + 16), *(_QWORD *)(*(_QWORD *)(v155 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v155 + 8) + 2448) + 520 * v157, *(_QWORD *)(*(_QWORD *)(v155 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v166 = *a1;
  a4.i64[0] = 0x400000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000004);
  *(_QWORD *)v474 = a3.i64[0];
  v167 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v167;
  v168 = *(_DWORD *)(v166[1] + 1168);
  if (v168 != *(_DWORD *)(*v166 + 272))
  {
    v169 = *(_QWORD *)(v166[2] + 8);
    if ((v168 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v171 = v170;
    else
      v171 = v168 & 0xCFFFFFFF;
    if ((v171 & 0x40000000) != 0)
    {
      v172 = *(_QWORD **)v169;
      v173 = *v172;
      v174 = *(_DWORD *)(*v172 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v174);
      a4.f32[1] = (float)(a3.i32[1] / v174);
      a4.f32[2] = (float)(v167 / v174);
      v175 = (const float *)(*v172 + 1656);
      v488 = vld3_f32(v175);
      v176 = *(_QWORD *)(v172[1] + 144);
      v177.i64[0] = 0x3F0000003F000000;
      v177.i64[1] = 0x3F0000003F000000;
      v178 = vaddq_f32(a4, v177);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v178.f32[0]), v488.val[1], *(float32x2_t *)v178.f32, 1), v488.val[2], v178, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v167;
      v179 = vmulq_n_f32(vaddq_f32(a3, v177), *(float *)&v176);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v173 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v179.f32[0]), v488.val[1], *(float32x2_t *)v179.f32, 1), v488.val[2], v179, 2);
    }
    else if (!(v171 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v169 + 16), *(_QWORD *)(*(_QWORD *)(v169 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v169 + 8) + 2448) + 520 * v171, *(_QWORD *)(*(_QWORD *)(v169 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v180 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000005);
  *(_QWORD *)v474 = a3.i64[0];
  v181 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v181;
  v182 = *(_DWORD *)(v180[1] + 1172);
  if (v182 != *(_DWORD *)(*v180 + 272))
  {
    v183 = *(_QWORD *)(v180[2] + 8);
    if ((v182 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v185 = v184;
    else
      v185 = v182 & 0xCFFFFFFF;
    if ((v185 & 0x40000000) != 0)
    {
      v186 = *(_QWORD **)v183;
      v187 = *v186;
      v188 = *(_DWORD *)(*v186 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v188);
      a4.f32[1] = (float)(a3.i32[1] / v188);
      a4.f32[2] = (float)(v181 / v188);
      v189 = (const float *)(*v186 + 1656);
      v489 = vld3_f32(v189);
      v190 = *(_QWORD *)(v186[1] + 144);
      v191.i64[0] = 0x3F0000003F000000;
      v191.i64[1] = 0x3F0000003F000000;
      v192 = vaddq_f32(a4, v191);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v192.f32[0]), v489.val[1], *(float32x2_t *)v192.f32, 1), v489.val[2], v192, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v181;
      v193 = vmulq_n_f32(vaddq_f32(a3, v191), *(float *)&v190);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v187 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v193.f32[0]), v489.val[1], *(float32x2_t *)v193.f32, 1), v489.val[2], v193, 2);
    }
    else if (!(v185 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v183 + 16), *(_QWORD *)(*(_QWORD *)(v183 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v183 + 8) + 2448) + 520 * v185, *(_QWORD *)(*(_QWORD *)(v183 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v194 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000006);
  *(_QWORD *)v474 = a3.i64[0];
  v195 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v195;
  v196 = *(_DWORD *)(v194[1] + 1176);
  if (v196 != *(_DWORD *)(*v194 + 272))
  {
    v197 = *(_QWORD *)(v194[2] + 8);
    if ((v196 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v199 = v198;
    else
      v199 = v196 & 0xCFFFFFFF;
    if ((v199 & 0x40000000) != 0)
    {
      v200 = *(_QWORD **)v197;
      v201 = *v200;
      v202 = *(_DWORD *)(*v200 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v202);
      a4.f32[1] = (float)(a3.i32[1] / v202);
      a4.f32[2] = (float)(v195 / v202);
      v203 = (const float *)(*v200 + 1656);
      v490 = vld3_f32(v203);
      v204 = *(_QWORD *)(v200[1] + 144);
      v205.i64[0] = 0x3F0000003F000000;
      v205.i64[1] = 0x3F0000003F000000;
      v206 = vaddq_f32(a4, v205);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v206.f32[0]), v490.val[1], *(float32x2_t *)v206.f32, 1), v490.val[2], v206, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v195;
      v207 = vmulq_n_f32(vaddq_f32(a3, v205), *(float *)&v204);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v201 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v207.f32[0]), v490.val[1], *(float32x2_t *)v207.f32, 1), v490.val[2], v207, 2);
    }
    else if (!(v199 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v197 + 16), *(_QWORD *)(*(_QWORD *)(v197 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v197 + 8) + 2448) + 520 * v199, *(_QWORD *)(*(_QWORD *)(v197 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v208 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000007);
  *(_QWORD *)v474 = a3.i64[0];
  v209 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v209;
  v210 = *(_DWORD *)(v208[1] + 1180);
  if (v210 != *(_DWORD *)(*v208 + 272))
  {
    v211 = *(_QWORD *)(v208[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = *(_DWORD *)(*v214 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v216);
      a4.f32[1] = (float)(a3.i32[1] / v216);
      a4.f32[2] = (float)(v209 / v216);
      v217 = (const float *)(*v214 + 1656);
      v491 = vld3_f32(v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a4, v219);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v220.f32[0]), v491.val[1], *(float32x2_t *)v220.f32, 1), v491.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(a3, v219), *(float *)&v218);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v221.f32[0]), v491.val[1], *(float32x2_t *)v221.f32, 1), v491.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  v223 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x400000005);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v224 = *(_DWORD *)(v222[1] + 1184);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = (const float *)(*v228 + 1656);
      v231 = *(_QWORD *)(v228[1] + 144);
      LODWORD(v228) = *(_DWORD *)(*v228 + 8);
      v232 = a3.i32[1];
      a5.f32[0] = (float)(v223 / (int)v228);
      a5.f32[1] = (float)(a3.i32[0] / (int)v228);
      a5.f32[2] = (float)(a3.i32[1] / (int)v228);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v508 = vld3_f32(v230);
      v234 = vaddq_f32(a5, v233);
      *(int32x2_t *)v234.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v234.f32[0]), v508.val[1], *(float32x2_t *)v234.f32, 1), v508.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v234.f32;
      v476 = 0;
      v234.i32[0] = v223;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v234.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v232;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v231);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v235.f32[0]), v508.val[1], *(float32x2_t *)v235.f32, 1), v508.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x500000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000001);
  *(_QWORD *)v474 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1188);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v492 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v248.f32[0]), v492.val[1], *(float32x2_t *)v248.f32, 1), v492.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v249.f32[0]), v492.val[1], *(float32x2_t *)v249.f32, 1), v492.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  a4.i64[0] = 0x500000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000002);
  *(_QWORD *)v474 = a3.i64[0];
  v251 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v251;
  v252 = *(_DWORD *)(v250[1] + 1192);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = *(_DWORD *)(*v256 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v258);
      a4.f32[1] = (float)(a3.i32[1] / v258);
      a4.f32[2] = (float)(v251 / v258);
      v259 = (const float *)(*v256 + 1656);
      v493 = vld3_f32(v259);
      v260 = *(_QWORD *)(v256[1] + 144);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v262 = vaddq_f32(a4, v261);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v262.f32[0]), v493.val[1], *(float32x2_t *)v262.f32, 1), v493.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v251;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v260);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v263.f32[0]), v493.val[1], *(float32x2_t *)v263.f32, 1), v493.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x500000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000003);
  *(_QWORD *)v474 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1196);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v494 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v276.f32[0]), v494.val[1], *(float32x2_t *)v276.f32, 1), v494.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v277.f32[0]), v494.val[1], *(float32x2_t *)v277.f32, 1), v494.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  a4.i64[0] = 0x500000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000004);
  *(_QWORD *)v474 = a3.i64[0];
  v279 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v279;
  v280 = *(_DWORD *)(v278[1] + 1200);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = *(_DWORD *)(*v284 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v286);
      a4.f32[1] = (float)(a3.i32[1] / v286);
      a4.f32[2] = (float)(v279 / v286);
      v287 = (const float *)(*v284 + 1656);
      v495 = vld3_f32(v287);
      v288 = *(_QWORD *)(v284[1] + 144);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v290 = vaddq_f32(a4, v289);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v290.f32[0]), v495.val[1], *(float32x2_t *)v290.f32, 1), v495.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v279;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v288);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v291.f32[0]), v495.val[1], *(float32x2_t *)v291.f32, 1), v495.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  a4.i64[0] = 0x500000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000005);
  *(_QWORD *)v474 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1204);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v496 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v304.f32[0]), v496.val[1], *(float32x2_t *)v304.f32, 1), v496.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v305.f32[0]), v496.val[1], *(float32x2_t *)v305.f32, 1), v496.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  a4.i64[0] = 0x500000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000006);
  *(_QWORD *)v474 = a3.i64[0];
  v307 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v307;
  v308 = *(_DWORD *)(v306[1] + 1208);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = *(_DWORD *)(*v312 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v314);
      a4.f32[1] = (float)(a3.i32[1] / v314);
      a4.f32[2] = (float)(v307 / v314);
      v315 = (const float *)(*v312 + 1656);
      v497 = vld3_f32(v315);
      v316 = *(_QWORD *)(v312[1] + 144);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v318 = vaddq_f32(a4, v317);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v318.f32[0]), v497.val[1], *(float32x2_t *)v318.f32, 1), v497.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v307;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v316);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v319.f32[0]), v497.val[1], *(float32x2_t *)v319.f32, 1), v497.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x500000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000007);
  *(_QWORD *)v474 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 1212);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v498 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v332.f32[0]), v498.val[1], *(float32x2_t *)v332.f32, 1), v498.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v333.f32[0]), v498.val[1], *(float32x2_t *)v333.f32, 1), v498.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  v335 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x400000006);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v336 = *(_DWORD *)(v334[1] + 1216);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = (const float *)(*v340 + 1656);
      v343 = *(_QWORD *)(v340[1] + 144);
      LODWORD(v340) = *(_DWORD *)(*v340 + 8);
      v344 = a3.i32[1];
      a5.f32[0] = (float)(v335 / (int)v340);
      a5.f32[1] = (float)(a3.i32[0] / (int)v340);
      a5.f32[2] = (float)(a3.i32[1] / (int)v340);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v509 = vld3_f32(v342);
      v346 = vaddq_f32(a5, v345);
      *(int32x2_t *)v346.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v346.f32[0]), v509.val[1], *(float32x2_t *)v346.f32, 1), v509.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v346.f32;
      v476 = 0;
      v346.i32[0] = v335;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v346.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v344;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v343);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v347.f32[0]), v509.val[1], *(float32x2_t *)v347.f32, 1), v509.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  a4.i64[0] = 0x600000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000001);
  *(_QWORD *)v474 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 1220);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v499 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v360.f32[0]), v499.val[1], *(float32x2_t *)v360.f32, 1), v499.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v361.f32[0]), v499.val[1], *(float32x2_t *)v361.f32, 1), v499.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  a4.i64[0] = 0x600000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000002);
  *(_QWORD *)v474 = a3.i64[0];
  v363 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v363;
  v364 = *(_DWORD *)(v362[1] + 1224);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = *(_DWORD *)(*v368 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v370);
      a4.f32[1] = (float)(a3.i32[1] / v370);
      a4.f32[2] = (float)(v363 / v370);
      v371 = (const float *)(*v368 + 1656);
      v500 = vld3_f32(v371);
      v372 = *(_QWORD *)(v368[1] + 144);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v374 = vaddq_f32(a4, v373);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v374.f32[0]), v500.val[1], *(float32x2_t *)v374.f32, 1), v500.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v363;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v372);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v375.f32[0]), v500.val[1], *(float32x2_t *)v375.f32, 1), v500.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  a4.i64[0] = 0x600000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000003);
  *(_QWORD *)v474 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 1228);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v501 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v388.f32[0]), v501.val[1], *(float32x2_t *)v388.f32, 1), v501.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v389.f32[0]), v501.val[1], *(float32x2_t *)v389.f32, 1), v501.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  a4.i64[0] = 0x600000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000004);
  *(_QWORD *)v474 = a3.i64[0];
  v391 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v391;
  v392 = *(_DWORD *)(v390[1] + 1232);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = *(_DWORD *)(*v396 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v398);
      a4.f32[1] = (float)(a3.i32[1] / v398);
      a4.f32[2] = (float)(v391 / v398);
      v399 = (const float *)(*v396 + 1656);
      v502 = vld3_f32(v399);
      v400 = *(_QWORD *)(v396[1] + 144);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v402 = vaddq_f32(a4, v401);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v402.f32[0]), v502.val[1], *(float32x2_t *)v402.f32, 1), v502.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v391;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v400);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v403.f32[0]), v502.val[1], *(float32x2_t *)v403.f32, 1), v502.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x600000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000005);
  *(_QWORD *)v474 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 1236);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v503 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v416.f32[0]), v503.val[1], *(float32x2_t *)v416.f32, 1), v503.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v417.f32[0]), v503.val[1], *(float32x2_t *)v417.f32, 1), v503.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  a4.i64[0] = 0x600000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000006);
  *(_QWORD *)v474 = a3.i64[0];
  v419 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v419;
  v420 = *(_DWORD *)(v418[1] + 1240);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = *(_DWORD *)(*v424 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v426);
      a4.f32[1] = (float)(a3.i32[1] / v426);
      a4.f32[2] = (float)(v419 / v426);
      v427 = (const float *)(*v424 + 1656);
      v504 = vld3_f32(v427);
      v428 = *(_QWORD *)(v424[1] + 144);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v430 = vaddq_f32(a4, v429);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v430.f32[0]), v504.val[1], *(float32x2_t *)v430.f32, 1), v504.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v419;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v428);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v431.f32[0]), v504.val[1], *(float32x2_t *)v431.f32, 1), v504.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  a4.i64[0] = 0x600000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000007);
  *(_QWORD *)v474 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 1244);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v505 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v444.f32[0]), v505.val[1], *(float32x2_t *)v444.f32, 1), v505.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v445.f32[0]), v505.val[1], *(float32x2_t *)v445.f32, 1), v505.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  v447 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x400000007);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v448 = *(_DWORD *)(v446[1] + 1248);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = (const float *)(*v452 + 1656);
      v455 = *(_QWORD *)(v452[1] + 144);
      LODWORD(v452) = *(_DWORD *)(*v452 + 8);
      v456 = a3.i32[1];
      a5.f32[0] = (float)(v447 / (int)v452);
      a5.f32[1] = (float)(a3.i32[0] / (int)v452);
      a5.f32[2] = (float)(a3.i32[1] / (int)v452);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v510 = vld3_f32(v454);
      v458 = vaddq_f32(a5, v457);
      *(int32x2_t *)v458.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v458.f32[0]), v510.val[1], *(float32x2_t *)v458.f32, 1), v510.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v458.f32;
      v476 = 0;
      v458.i32[0] = v447;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v458.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v456;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v455);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v459.f32[0]), v510.val[1], *(float32x2_t *)v459.f32, 1), v510.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x700000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000001);
  *(_QWORD *)v474 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v474[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 1252);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v506 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v472.f32[0]), v506.val[1], *(float32x2_t *)v472.f32, 1), v506.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v473.f32[0]), v506.val[1], *(float32x2_t *)v473.f32, 1), v506.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  sub_2239D1E84(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239D1E84(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const float *v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  const float *v63;
  uint64_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _QWORD *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  _QWORD *v82;
  int v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  _QWORD *v88;
  uint64_t v89;
  int v90;
  const float *v91;
  uint64_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  _QWORD *v96;
  int v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  const float *v105;
  uint64_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  _QWORD *v110;
  signed int v111;
  int v112;
  int v113;
  int v114;
  uint64_t v115;
  unsigned int v116;
  unsigned int v117;
  _QWORD *v118;
  uint64_t v119;
  const float *v120;
  int v121;
  uint64_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  _QWORD *v126;
  signed int v127;
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  unsigned int v132;
  unsigned int v133;
  _QWORD *v134;
  uint64_t v135;
  const float *v136;
  int v137;
  uint64_t v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  _QWORD *v142;
  signed int v143;
  int v144;
  int v145;
  int v146;
  uint64_t v147;
  unsigned int v148;
  unsigned int v149;
  _QWORD *v150;
  uint64_t v151;
  const float *v152;
  int v153;
  uint64_t v154;
  float32x4_t v155;
  float32x4_t v156;
  float32x4_t v157;
  _QWORD *v158;
  signed int v159;
  int v160;
  int v161;
  int v162;
  uint64_t v163;
  unsigned int v164;
  unsigned int v165;
  _QWORD *v166;
  uint64_t v167;
  const float *v168;
  int v169;
  uint64_t v170;
  float32x4_t v171;
  float32x4_t v172;
  float32x4_t v173;
  _QWORD *v174;
  signed int v175;
  int v176;
  int v177;
  int v178;
  uint64_t v179;
  unsigned int v180;
  unsigned int v181;
  _QWORD *v182;
  uint64_t v183;
  const float *v184;
  int v185;
  uint64_t v186;
  float32x4_t v187;
  float32x4_t v188;
  float32x4_t v189;
  _QWORD *v190;
  signed int v191;
  int v192;
  int v193;
  int v194;
  uint64_t v195;
  unsigned int v196;
  unsigned int v197;
  _QWORD *v198;
  uint64_t v199;
  const float *v200;
  int v201;
  uint64_t v202;
  float32x4_t v203;
  float32x4_t v204;
  float32x4_t v205;
  _QWORD *v206;
  signed int v207;
  int v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  const float *v216;
  int v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  __int32 v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  const float *v230;
  uint64_t v231;
  int v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  int v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  int v258;
  const float *v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  int v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  int v286;
  const float *v287;
  uint64_t v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  int v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  int v314;
  const float *v315;
  uint64_t v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  __int32 v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  const float *v342;
  uint64_t v343;
  int v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  int v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  int v370;
  const float *v371;
  uint64_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  int v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  int v398;
  const float *v399;
  uint64_t v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  int v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  int v426;
  const float *v427;
  uint64_t v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  __int32 v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  const float *v454;
  uint64_t v455;
  int v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _QWORD *v474;
  int v475;
  int v476;
  uint64_t v477;
  unsigned int v478;
  unsigned int v479;
  _QWORD *v480;
  uint64_t v481;
  int v482;
  const float *v483;
  uint64_t v484;
  float32x4_t v485;
  float32x4_t v486;
  float32x4_t v487;
  _BYTE v488[12];
  int32x2_t v489;
  int v490;
  int32x2_t *v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;
  float32x2x3_t v511;
  float32x2x3_t v512;
  float32x2x3_t v513;
  float32x2x3_t v514;
  float32x2x3_t v515;
  float32x2x3_t v516;
  float32x2x3_t v517;
  float32x2x3_t v518;
  float32x2x3_t v519;
  float32x2x3_t v520;
  float32x2x3_t v521;
  float32x2x3_t v522;
  float32x2x3_t v523;
  float32x2x3_t v524;

  v12 = *a1;
  a4.i64[0] = 0x700000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000002);
  *(_QWORD *)v488 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v488[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1256);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v492 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v24.f32[0]), v492.val[1], *(float32x2_t *)v24.f32, 1), v492.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v25.f32[0]), v492.val[1], *(float32x2_t *)v25.f32, 1), v492.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  a4.i64[0] = 0x700000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000003);
  *(_QWORD *)v488 = a3.i64[0];
  v27 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v488[8] = v27;
  v28 = *(_DWORD *)(v26[1] + 1260);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = *(_DWORD *)(*v32 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v34);
      a4.f32[1] = (float)(a3.i32[1] / v34);
      a4.f32[2] = (float)(v27 / v34);
      v35 = (const float *)(*v32 + 1656);
      v493 = vld3_f32(v35);
      v36 = *(_QWORD *)(v32[1] + 144);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v38 = vaddq_f32(a4, v37);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v38.f32[0]), v493.val[1], *(float32x2_t *)v38.f32, 1), v493.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v27;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v36);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v39.f32[0]), v493.val[1], *(float32x2_t *)v39.f32, 1), v493.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a4.i64[0] = 0x700000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000004);
  *(_QWORD *)v488 = a3.i64[0];
  v41 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v488[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1264);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v494 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v52.f32[0]), v494.val[1], *(float32x2_t *)v52.f32, 1), v494.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v53.f32[0]), v494.val[1], *(float32x2_t *)v53.f32, 1), v494.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  a4.i64[0] = 0x700000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000005);
  *(_QWORD *)v488 = a3.i64[0];
  v55 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v488[8] = v55;
  v56 = *(_DWORD *)(v54[1] + 1268);
  if (v56 != *(_DWORD *)(*v54 + 272))
  {
    v57 = *(_QWORD *)(v54[2] + 8);
    if ((v56 & 0x10000000) != 0)
      v58 = 0x40000000;
    else
      v58 = 0x80000000;
    if ((v56 & 0x20000000) != 0)
      v59 = v58;
    else
      v59 = v56 & 0xCFFFFFFF;
    if ((v59 & 0x40000000) != 0)
    {
      v60 = *(_QWORD **)v57;
      v61 = *v60;
      v62 = *(_DWORD *)(*v60 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v62);
      a4.f32[1] = (float)(a3.i32[1] / v62);
      a4.f32[2] = (float)(v55 / v62);
      v63 = (const float *)(*v60 + 1656);
      v495 = vld3_f32(v63);
      v64 = *(_QWORD *)(v60[1] + 144);
      v65.i64[0] = 0x3F0000003F000000;
      v65.i64[1] = 0x3F0000003F000000;
      v66 = vaddq_f32(a4, v65);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v66.f32[0]), v495.val[1], *(float32x2_t *)v66.f32, 1), v495.val[2], v66, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v55;
      v67 = vmulq_n_f32(vaddq_f32(a3, v65), *(float *)&v64);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v61 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v67.f32[0]), v495.val[1], *(float32x2_t *)v67.f32, 1), v495.val[2], v67, 2);
    }
    else if (!(v59 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v57 + 16), *(_QWORD *)(*(_QWORD *)(v57 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v57 + 8) + 2448) + 520 * v59, *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v68 = *a1;
  a4.i64[0] = 0x700000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000006);
  *(_QWORD *)v488 = a3.i64[0];
  v69 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v488[8] = v69;
  v70 = *(_DWORD *)(v68[1] + 1272);
  if (v70 != *(_DWORD *)(*v68 + 272))
  {
    v71 = *(_QWORD *)(v68[2] + 8);
    if ((v70 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v70 & 0xCFFFFFFF;
    if ((v73 & 0x40000000) != 0)
    {
      v74 = *(_QWORD **)v71;
      v75 = *v74;
      v76 = *(_DWORD *)(*v74 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v76);
      a4.f32[1] = (float)(a3.i32[1] / v76);
      a4.f32[2] = (float)(v69 / v76);
      v77 = (const float *)(*v74 + 1656);
      v496 = vld3_f32(v77);
      v78 = *(_QWORD *)(v74[1] + 144);
      v79.i64[0] = 0x3F0000003F000000;
      v79.i64[1] = 0x3F0000003F000000;
      v80 = vaddq_f32(a4, v79);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v80.f32[0]), v496.val[1], *(float32x2_t *)v80.f32, 1), v496.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v69;
      v81 = vmulq_n_f32(vaddq_f32(a3, v79), *(float *)&v78);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v75 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v81.f32[0]), v496.val[1], *(float32x2_t *)v81.f32, 1), v496.val[2], v81, 2);
    }
    else if (!(v73 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v71 + 16), *(_QWORD *)(*(_QWORD *)(v71 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v71 + 8) + 2448) + 520 * v73, *(_QWORD *)(*(_QWORD *)(v71 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v82 = *a1;
  a4.i64[0] = 0x700000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000007);
  *(_QWORD *)v488 = a3.i64[0];
  v83 = *(_DWORD *)(a2 + 8) + 4;
  *(_DWORD *)&v488[8] = v83;
  v84 = *(_DWORD *)(v82[1] + 1276);
  if (v84 != *(_DWORD *)(*v82 + 272))
  {
    v85 = *(_QWORD *)(v82[2] + 8);
    if ((v84 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v84 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v84 & 0xCFFFFFFF;
    if ((v87 & 0x40000000) != 0)
    {
      v88 = *(_QWORD **)v85;
      v89 = *v88;
      v90 = *(_DWORD *)(*v88 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v90);
      a4.f32[1] = (float)(a3.i32[1] / v90);
      a4.f32[2] = (float)(v83 / v90);
      v91 = (const float *)(*v88 + 1656);
      v497 = vld3_f32(v91);
      v92 = *(_QWORD *)(v88[1] + 144);
      v93.i64[0] = 0x3F0000003F000000;
      v93.i64[1] = 0x3F0000003F000000;
      v94 = vaddq_f32(a4, v93);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v94.f32[0]), v497.val[1], *(float32x2_t *)v94.f32, 1), v497.val[2], v94, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v83;
      v95 = vmulq_n_f32(vaddq_f32(a3, v93), *(float *)&v92);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v89 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v95.f32[0]), v497.val[1], *(float32x2_t *)v95.f32, 1), v497.val[2], v95, 2);
    }
    else if (!(v87 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v85 + 16), *(_QWORD *)(*(_QWORD *)(v85 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v85 + 8) + 2448) + 520 * v87, *(_QWORD *)(*(_QWORD *)(v85 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v96 = *a1;
  a3.i64[0] = *(_QWORD *)a2;
  *(_QWORD *)v488 = *(_QWORD *)a2;
  v97 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v97;
  v98 = *(_DWORD *)(v96[1] + 1280);
  if (v98 != *(_DWORD *)(*v96 + 272))
  {
    v99 = *(_QWORD *)(v96[2] + 8);
    if ((v98 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v101 = v100;
    else
      v101 = v98 & 0xCFFFFFFF;
    if ((v101 & 0x40000000) != 0)
    {
      v102 = *(_QWORD **)v99;
      v103 = *v102;
      v104 = *(_DWORD *)(*v102 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v104);
      a4.f32[1] = (float)(a3.i32[1] / v104);
      a4.f32[2] = (float)(v97 / v104);
      v105 = (const float *)(*v102 + 1656);
      v498 = vld3_f32(v105);
      v106 = *(_QWORD *)(v102[1] + 144);
      v107.i64[0] = 0x3F0000003F000000;
      v107.i64[1] = 0x3F0000003F000000;
      v108 = vaddq_f32(a4, v107);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v108.f32[0]), v498.val[1], *(float32x2_t *)v108.f32, 1), v498.val[2], v108, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v97;
      v109 = vmulq_n_f32(vaddq_f32(a3, v107), *(float *)&v106);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v103 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v109.f32[0]), v498.val[1], *(float32x2_t *)v109.f32, 1), v498.val[2], v109, 2);
    }
    else if (!(v101 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v99 + 16), *(_QWORD *)(*(_QWORD *)(v99 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v99 + 8) + 2448) + 520 * v101, *(_QWORD *)(*(_QWORD *)(v99 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v110 = *a1;
  v111 = *(_DWORD *)(a2 + 4);
  v112 = *(_DWORD *)a2 + 1;
  *(_DWORD *)v488 = v112;
  *(_DWORD *)&v488[4] = v111;
  v113 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v113;
  v114 = *(_DWORD *)(v110[1] + 1284);
  if (v114 != *(_DWORD *)(*v110 + 272))
  {
    v115 = *(_QWORD *)(v110[2] + 8);
    if ((v114 & 0x10000000) != 0)
      v116 = 0x40000000;
    else
      v116 = 0x80000000;
    if ((v114 & 0x20000000) != 0)
      v117 = v116;
    else
      v117 = v114 & 0xCFFFFFFF;
    if ((v117 & 0x40000000) != 0)
    {
      v118 = *(_QWORD **)v115;
      v119 = *v118;
      v120 = (const float *)(*v118 + 1656);
      v121 = *(_DWORD *)(*v118 + 8);
      a3.f32[0] = (float)(v112 / v121);
      v122 = *(_QWORD *)(v118[1] + 144);
      a3.f32[1] = (float)(v111 / v121);
      a3.f32[2] = (float)(v113 / v121);
      v123.i64[0] = 0x3F0000003F000000;
      v123.i64[1] = 0x3F0000003F000000;
      v124 = vaddq_f32(a3, v123);
      v515 = vld3_f32(v120);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v515.val[0], v124.f32[0]), v515.val[1], *(float32x2_t *)v124.f32, 1), v515.val[2], v124, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v124.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v111, v112));
      v124.f32[2] = (float)v113;
      v125 = vmulq_n_f32(vaddq_f32(v124, v123), *(float *)&v122);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v119 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v515.val[0], v125.f32[0]), v515.val[1], *(float32x2_t *)v125.f32, 1), v515.val[2], v125, 2);
    }
    else if (!(v117 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v115 + 16), *(_QWORD *)(*(_QWORD *)(v115 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v115 + 8) + 2448) + 520 * v117, *(_QWORD *)(*(_QWORD *)(v115 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v126 = *a1;
  v127 = *(_DWORD *)(a2 + 4);
  v128 = *(_DWORD *)a2 + 2;
  *(_DWORD *)v488 = v128;
  *(_DWORD *)&v488[4] = v127;
  v129 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v129;
  v130 = *(_DWORD *)(v126[1] + 1288);
  if (v130 != *(_DWORD *)(*v126 + 272))
  {
    v131 = *(_QWORD *)(v126[2] + 8);
    if ((v130 & 0x10000000) != 0)
      v132 = 0x40000000;
    else
      v132 = 0x80000000;
    if ((v130 & 0x20000000) != 0)
      v133 = v132;
    else
      v133 = v130 & 0xCFFFFFFF;
    if ((v133 & 0x40000000) != 0)
    {
      v134 = *(_QWORD **)v131;
      v135 = *v134;
      v136 = (const float *)(*v134 + 1656);
      v137 = *(_DWORD *)(*v134 + 8);
      a3.f32[0] = (float)(v128 / v137);
      v138 = *(_QWORD *)(v134[1] + 144);
      a3.f32[1] = (float)(v127 / v137);
      a3.f32[2] = (float)(v129 / v137);
      v139.i64[0] = 0x3F0000003F000000;
      v139.i64[1] = 0x3F0000003F000000;
      v140 = vaddq_f32(a3, v139);
      v516 = vld3_f32(v136);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v516.val[0], v140.f32[0]), v516.val[1], *(float32x2_t *)v140.f32, 1), v516.val[2], v140, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v140.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v127, v128));
      v140.f32[2] = (float)v129;
      v141 = vmulq_n_f32(vaddq_f32(v140, v139), *(float *)&v138);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v135 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v516.val[0], v141.f32[0]), v516.val[1], *(float32x2_t *)v141.f32, 1), v516.val[2], v141, 2);
    }
    else if (!(v133 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v131 + 16), *(_QWORD *)(*(_QWORD *)(v131 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v131 + 8) + 2448) + 520 * v133, *(_QWORD *)(*(_QWORD *)(v131 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v142 = *a1;
  v143 = *(_DWORD *)(a2 + 4);
  v144 = *(_DWORD *)a2 + 3;
  *(_DWORD *)v488 = v144;
  *(_DWORD *)&v488[4] = v143;
  v145 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v145;
  v146 = *(_DWORD *)(v142[1] + 1292);
  if (v146 != *(_DWORD *)(*v142 + 272))
  {
    v147 = *(_QWORD *)(v142[2] + 8);
    if ((v146 & 0x10000000) != 0)
      v148 = 0x40000000;
    else
      v148 = 0x80000000;
    if ((v146 & 0x20000000) != 0)
      v149 = v148;
    else
      v149 = v146 & 0xCFFFFFFF;
    if ((v149 & 0x40000000) != 0)
    {
      v150 = *(_QWORD **)v147;
      v151 = *v150;
      v152 = (const float *)(*v150 + 1656);
      v153 = *(_DWORD *)(*v150 + 8);
      a3.f32[0] = (float)(v144 / v153);
      v154 = *(_QWORD *)(v150[1] + 144);
      a3.f32[1] = (float)(v143 / v153);
      a3.f32[2] = (float)(v145 / v153);
      v155.i64[0] = 0x3F0000003F000000;
      v155.i64[1] = 0x3F0000003F000000;
      v156 = vaddq_f32(a3, v155);
      v517 = vld3_f32(v152);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v517.val[0], v156.f32[0]), v517.val[1], *(float32x2_t *)v156.f32, 1), v517.val[2], v156, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v156.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v143, v144));
      v156.f32[2] = (float)v145;
      v157 = vmulq_n_f32(vaddq_f32(v156, v155), *(float *)&v154);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v151 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v517.val[0], v157.f32[0]), v517.val[1], *(float32x2_t *)v157.f32, 1), v517.val[2], v157, 2);
    }
    else if (!(v149 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v147 + 16), *(_QWORD *)(*(_QWORD *)(v147 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v147 + 8) + 2448) + 520 * v149, *(_QWORD *)(*(_QWORD *)(v147 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v158 = *a1;
  v159 = *(_DWORD *)(a2 + 4);
  v160 = *(_DWORD *)a2 + 4;
  *(_DWORD *)v488 = v160;
  *(_DWORD *)&v488[4] = v159;
  v161 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v161;
  v162 = *(_DWORD *)(v158[1] + 1296);
  if (v162 != *(_DWORD *)(*v158 + 272))
  {
    v163 = *(_QWORD *)(v158[2] + 8);
    if ((v162 & 0x10000000) != 0)
      v164 = 0x40000000;
    else
      v164 = 0x80000000;
    if ((v162 & 0x20000000) != 0)
      v165 = v164;
    else
      v165 = v162 & 0xCFFFFFFF;
    if ((v165 & 0x40000000) != 0)
    {
      v166 = *(_QWORD **)v163;
      v167 = *v166;
      v168 = (const float *)(*v166 + 1656);
      v169 = *(_DWORD *)(*v166 + 8);
      a3.f32[0] = (float)(v160 / v169);
      v170 = *(_QWORD *)(v166[1] + 144);
      a3.f32[1] = (float)(v159 / v169);
      a3.f32[2] = (float)(v161 / v169);
      v171.i64[0] = 0x3F0000003F000000;
      v171.i64[1] = 0x3F0000003F000000;
      v172 = vaddq_f32(a3, v171);
      v518 = vld3_f32(v168);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v518.val[0], v172.f32[0]), v518.val[1], *(float32x2_t *)v172.f32, 1), v518.val[2], v172, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v172.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v159, v160));
      v172.f32[2] = (float)v161;
      v173 = vmulq_n_f32(vaddq_f32(v172, v171), *(float *)&v170);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v167 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v518.val[0], v173.f32[0]), v518.val[1], *(float32x2_t *)v173.f32, 1), v518.val[2], v173, 2);
    }
    else if (!(v165 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v163 + 16), *(_QWORD *)(*(_QWORD *)(v163 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v163 + 8) + 2448) + 520 * v165, *(_QWORD *)(*(_QWORD *)(v163 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v174 = *a1;
  v175 = *(_DWORD *)(a2 + 4);
  v176 = *(_DWORD *)a2 + 5;
  *(_DWORD *)v488 = v176;
  *(_DWORD *)&v488[4] = v175;
  v177 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v177;
  v178 = *(_DWORD *)(v174[1] + 1300);
  if (v178 != *(_DWORD *)(*v174 + 272))
  {
    v179 = *(_QWORD *)(v174[2] + 8);
    if ((v178 & 0x10000000) != 0)
      v180 = 0x40000000;
    else
      v180 = 0x80000000;
    if ((v178 & 0x20000000) != 0)
      v181 = v180;
    else
      v181 = v178 & 0xCFFFFFFF;
    if ((v181 & 0x40000000) != 0)
    {
      v182 = *(_QWORD **)v179;
      v183 = *v182;
      v184 = (const float *)(*v182 + 1656);
      v185 = *(_DWORD *)(*v182 + 8);
      a3.f32[0] = (float)(v176 / v185);
      v186 = *(_QWORD *)(v182[1] + 144);
      a3.f32[1] = (float)(v175 / v185);
      a3.f32[2] = (float)(v177 / v185);
      v187.i64[0] = 0x3F0000003F000000;
      v187.i64[1] = 0x3F0000003F000000;
      v188 = vaddq_f32(a3, v187);
      v519 = vld3_f32(v184);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v519.val[0], v188.f32[0]), v519.val[1], *(float32x2_t *)v188.f32, 1), v519.val[2], v188, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v188.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v175, v176));
      v188.f32[2] = (float)v177;
      v189 = vmulq_n_f32(vaddq_f32(v188, v187), *(float *)&v186);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v183 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v519.val[0], v189.f32[0]), v519.val[1], *(float32x2_t *)v189.f32, 1), v519.val[2], v189, 2);
    }
    else if (!(v181 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v179 + 16), *(_QWORD *)(*(_QWORD *)(v179 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v179 + 8) + 2448) + 520 * v181, *(_QWORD *)(*(_QWORD *)(v179 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v190 = *a1;
  v191 = *(_DWORD *)(a2 + 4);
  v192 = *(_DWORD *)a2 + 6;
  *(_DWORD *)v488 = v192;
  *(_DWORD *)&v488[4] = v191;
  v193 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v193;
  v194 = *(_DWORD *)(v190[1] + 1304);
  if (v194 != *(_DWORD *)(*v190 + 272))
  {
    v195 = *(_QWORD *)(v190[2] + 8);
    if ((v194 & 0x10000000) != 0)
      v196 = 0x40000000;
    else
      v196 = 0x80000000;
    if ((v194 & 0x20000000) != 0)
      v197 = v196;
    else
      v197 = v194 & 0xCFFFFFFF;
    if ((v197 & 0x40000000) != 0)
    {
      v198 = *(_QWORD **)v195;
      v199 = *v198;
      v200 = (const float *)(*v198 + 1656);
      v201 = *(_DWORD *)(*v198 + 8);
      a3.f32[0] = (float)(v192 / v201);
      v202 = *(_QWORD *)(v198[1] + 144);
      a3.f32[1] = (float)(v191 / v201);
      a3.f32[2] = (float)(v193 / v201);
      v203.i64[0] = 0x3F0000003F000000;
      v203.i64[1] = 0x3F0000003F000000;
      v204 = vaddq_f32(a3, v203);
      v520 = vld3_f32(v200);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v520.val[0], v204.f32[0]), v520.val[1], *(float32x2_t *)v204.f32, 1), v520.val[2], v204, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v204.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v191, v192));
      v204.f32[2] = (float)v193;
      v205 = vmulq_n_f32(vaddq_f32(v204, v203), *(float *)&v202);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v199 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v520.val[0], v205.f32[0]), v520.val[1], *(float32x2_t *)v205.f32, 1), v520.val[2], v205, 2);
    }
    else if (!(v197 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v195 + 16), *(_QWORD *)(*(_QWORD *)(v195 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v195 + 8) + 2448) + 520 * v197, *(_QWORD *)(*(_QWORD *)(v195 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v206 = *a1;
  v207 = *(_DWORD *)(a2 + 4);
  v208 = *(_DWORD *)a2 + 7;
  *(_DWORD *)v488 = v208;
  *(_DWORD *)&v488[4] = v207;
  v209 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v209;
  v210 = *(_DWORD *)(v206[1] + 1308);
  if (v210 != *(_DWORD *)(*v206 + 272))
  {
    v211 = *(_QWORD *)(v206[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = (const float *)(*v214 + 1656);
      v217 = *(_DWORD *)(*v214 + 8);
      a3.f32[0] = (float)(v208 / v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      a3.f32[1] = (float)(v207 / v217);
      a3.f32[2] = (float)(v209 / v217);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a3, v219);
      v521 = vld3_f32(v216);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v521.val[0], v220.f32[0]), v521.val[1], *(float32x2_t *)v220.f32, 1), v521.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v220.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v207, v208));
      v220.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(v220, v219), *(float *)&v218);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v521.val[0], v221.f32[0]), v521.val[1], *(float32x2_t *)v221.f32, 1), v521.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  v223 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x500000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000001);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v224 = *(_DWORD *)(v222[1] + 1312);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = (const float *)(*v228 + 1656);
      v231 = *(_QWORD *)(v228[1] + 144);
      LODWORD(v228) = *(_DWORD *)(*v228 + 8);
      v232 = a3.i32[1];
      a5.f32[0] = (float)(v223 / (int)v228);
      a5.f32[1] = (float)(a3.i32[0] / (int)v228);
      a5.f32[2] = (float)(a3.i32[1] / (int)v228);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v522 = vld3_f32(v230);
      v234 = vaddq_f32(a5, v233);
      *(int32x2_t *)v234.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v522.val[0], v234.f32[0]), v522.val[1], *(float32x2_t *)v234.f32, 1), v522.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v234.f32;
      v490 = 0;
      v234.i32[0] = v223;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v234.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v232;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v231);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v522.val[0], v235.f32[0]), v522.val[1], *(float32x2_t *)v235.f32, 1), v522.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x100000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000001);
  *(_QWORD *)v488 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1316);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v499 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v248.f32[0]), v499.val[1], *(float32x2_t *)v248.f32, 1), v499.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v249.f32[0]), v499.val[1], *(float32x2_t *)v249.f32, 1), v499.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  a4.i64[0] = 0x100000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000002);
  *(_QWORD *)v488 = a3.i64[0];
  v251 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v251;
  v252 = *(_DWORD *)(v250[1] + 1320);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = *(_DWORD *)(*v256 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v258);
      a4.f32[1] = (float)(a3.i32[1] / v258);
      a4.f32[2] = (float)(v251 / v258);
      v259 = (const float *)(*v256 + 1656);
      v500 = vld3_f32(v259);
      v260 = *(_QWORD *)(v256[1] + 144);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v262 = vaddq_f32(a4, v261);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v262.f32[0]), v500.val[1], *(float32x2_t *)v262.f32, 1), v500.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v251;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v260);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v263.f32[0]), v500.val[1], *(float32x2_t *)v263.f32, 1), v500.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x100000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000003);
  *(_QWORD *)v488 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1324);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v501 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v276.f32[0]), v501.val[1], *(float32x2_t *)v276.f32, 1), v501.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v277.f32[0]), v501.val[1], *(float32x2_t *)v277.f32, 1), v501.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  a4.i64[0] = 0x100000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000004);
  *(_QWORD *)v488 = a3.i64[0];
  v279 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v279;
  v280 = *(_DWORD *)(v278[1] + 1328);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = *(_DWORD *)(*v284 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v286);
      a4.f32[1] = (float)(a3.i32[1] / v286);
      a4.f32[2] = (float)(v279 / v286);
      v287 = (const float *)(*v284 + 1656);
      v502 = vld3_f32(v287);
      v288 = *(_QWORD *)(v284[1] + 144);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v290 = vaddq_f32(a4, v289);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v290.f32[0]), v502.val[1], *(float32x2_t *)v290.f32, 1), v502.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v279;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v288);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v291.f32[0]), v502.val[1], *(float32x2_t *)v291.f32, 1), v502.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  a4.i64[0] = 0x100000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000005);
  *(_QWORD *)v488 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1332);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v503 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v304.f32[0]), v503.val[1], *(float32x2_t *)v304.f32, 1), v503.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v305.f32[0]), v503.val[1], *(float32x2_t *)v305.f32, 1), v503.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  a4.i64[0] = 0x100000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000006);
  *(_QWORD *)v488 = a3.i64[0];
  v307 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v307;
  v308 = *(_DWORD *)(v306[1] + 1336);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = *(_DWORD *)(*v312 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v314);
      a4.f32[1] = (float)(a3.i32[1] / v314);
      a4.f32[2] = (float)(v307 / v314);
      v315 = (const float *)(*v312 + 1656);
      v504 = vld3_f32(v315);
      v316 = *(_QWORD *)(v312[1] + 144);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v318 = vaddq_f32(a4, v317);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v318.f32[0]), v504.val[1], *(float32x2_t *)v318.f32, 1), v504.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v307;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v316);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v319.f32[0]), v504.val[1], *(float32x2_t *)v319.f32, 1), v504.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x100000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000007);
  *(_QWORD *)v488 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 1340);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v505 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v332.f32[0]), v505.val[1], *(float32x2_t *)v332.f32, 1), v505.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v333.f32[0]), v505.val[1], *(float32x2_t *)v333.f32, 1), v505.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  v335 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x500000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000002);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v336 = *(_DWORD *)(v334[1] + 1344);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = (const float *)(*v340 + 1656);
      v343 = *(_QWORD *)(v340[1] + 144);
      LODWORD(v340) = *(_DWORD *)(*v340 + 8);
      v344 = a3.i32[1];
      a5.f32[0] = (float)(v335 / (int)v340);
      a5.f32[1] = (float)(a3.i32[0] / (int)v340);
      a5.f32[2] = (float)(a3.i32[1] / (int)v340);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v523 = vld3_f32(v342);
      v346 = vaddq_f32(a5, v345);
      *(int32x2_t *)v346.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v523.val[0], v346.f32[0]), v523.val[1], *(float32x2_t *)v346.f32, 1), v523.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v346.f32;
      v490 = 0;
      v346.i32[0] = v335;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v346.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v344;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v343);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v523.val[0], v347.f32[0]), v523.val[1], *(float32x2_t *)v347.f32, 1), v523.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  a4.i64[0] = 0x200000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000001);
  *(_QWORD *)v488 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 1348);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v506 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v360.f32[0]), v506.val[1], *(float32x2_t *)v360.f32, 1), v506.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v361.f32[0]), v506.val[1], *(float32x2_t *)v361.f32, 1), v506.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  a4.i64[0] = 0x200000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000002);
  *(_QWORD *)v488 = a3.i64[0];
  v363 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v363;
  v364 = *(_DWORD *)(v362[1] + 1352);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = *(_DWORD *)(*v368 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v370);
      a4.f32[1] = (float)(a3.i32[1] / v370);
      a4.f32[2] = (float)(v363 / v370);
      v371 = (const float *)(*v368 + 1656);
      v507 = vld3_f32(v371);
      v372 = *(_QWORD *)(v368[1] + 144);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v374 = vaddq_f32(a4, v373);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v374.f32[0]), v507.val[1], *(float32x2_t *)v374.f32, 1), v507.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v363;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v372);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v375.f32[0]), v507.val[1], *(float32x2_t *)v375.f32, 1), v507.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  a4.i64[0] = 0x200000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000003);
  *(_QWORD *)v488 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 1356);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v508 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v388.f32[0]), v508.val[1], *(float32x2_t *)v388.f32, 1), v508.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v389.f32[0]), v508.val[1], *(float32x2_t *)v389.f32, 1), v508.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  a4.i64[0] = 0x200000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000004);
  *(_QWORD *)v488 = a3.i64[0];
  v391 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v391;
  v392 = *(_DWORD *)(v390[1] + 1360);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = *(_DWORD *)(*v396 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v398);
      a4.f32[1] = (float)(a3.i32[1] / v398);
      a4.f32[2] = (float)(v391 / v398);
      v399 = (const float *)(*v396 + 1656);
      v509 = vld3_f32(v399);
      v400 = *(_QWORD *)(v396[1] + 144);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v402 = vaddq_f32(a4, v401);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v402.f32[0]), v509.val[1], *(float32x2_t *)v402.f32, 1), v509.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v391;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v400);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v403.f32[0]), v509.val[1], *(float32x2_t *)v403.f32, 1), v509.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x200000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000005);
  *(_QWORD *)v488 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 1364);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v510 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v416.f32[0]), v510.val[1], *(float32x2_t *)v416.f32, 1), v510.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v417.f32[0]), v510.val[1], *(float32x2_t *)v417.f32, 1), v510.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  a4.i64[0] = 0x200000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000006);
  *(_QWORD *)v488 = a3.i64[0];
  v419 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v419;
  v420 = *(_DWORD *)(v418[1] + 1368);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = *(_DWORD *)(*v424 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v426);
      a4.f32[1] = (float)(a3.i32[1] / v426);
      a4.f32[2] = (float)(v419 / v426);
      v427 = (const float *)(*v424 + 1656);
      v511 = vld3_f32(v427);
      v428 = *(_QWORD *)(v424[1] + 144);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v430 = vaddq_f32(a4, v429);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v511.val[0], v430.f32[0]), v511.val[1], *(float32x2_t *)v430.f32, 1), v511.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v419;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v428);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v511.val[0], v431.f32[0]), v511.val[1], *(float32x2_t *)v431.f32, 1), v511.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  a4.i64[0] = 0x200000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000007);
  *(_QWORD *)v488 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 1372);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v512 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v512.val[0], v444.f32[0]), v512.val[1], *(float32x2_t *)v444.f32, 1), v512.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v512.val[0], v445.f32[0]), v512.val[1], *(float32x2_t *)v445.f32, 1), v512.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  v447 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x500000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000003);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v448 = *(_DWORD *)(v446[1] + 1376);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = (const float *)(*v452 + 1656);
      v455 = *(_QWORD *)(v452[1] + 144);
      LODWORD(v452) = *(_DWORD *)(*v452 + 8);
      v456 = a3.i32[1];
      a5.f32[0] = (float)(v447 / (int)v452);
      a5.f32[1] = (float)(a3.i32[0] / (int)v452);
      a5.f32[2] = (float)(a3.i32[1] / (int)v452);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v524 = vld3_f32(v454);
      v458 = vaddq_f32(a5, v457);
      *(int32x2_t *)v458.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v524.val[0], v458.f32[0]), v524.val[1], *(float32x2_t *)v458.f32, 1), v524.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v458.f32;
      v490 = 0;
      v458.i32[0] = v447;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v458.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v456;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v455);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v524.val[0], v459.f32[0]), v524.val[1], *(float32x2_t *)v459.f32, 1), v524.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x300000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000001);
  *(_QWORD *)v488 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 1380);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v513 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v513.val[0], v472.f32[0]), v513.val[1], *(float32x2_t *)v472.f32, 1), v513.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v513.val[0], v473.f32[0]), v513.val[1], *(float32x2_t *)v473.f32, 1), v513.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v474 = *a1;
  a4.i64[0] = 0x300000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000002);
  *(_QWORD *)v488 = a3.i64[0];
  v475 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v475;
  v476 = *(_DWORD *)(v474[1] + 1384);
  if (v476 != *(_DWORD *)(*v474 + 272))
  {
    v477 = *(_QWORD *)(v474[2] + 8);
    if ((v476 & 0x10000000) != 0)
      v478 = 0x40000000;
    else
      v478 = 0x80000000;
    if ((v476 & 0x20000000) != 0)
      v479 = v478;
    else
      v479 = v476 & 0xCFFFFFFF;
    if ((v479 & 0x40000000) != 0)
    {
      v480 = *(_QWORD **)v477;
      v481 = *v480;
      v482 = *(_DWORD *)(*v480 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v482);
      a4.f32[1] = (float)(a3.i32[1] / v482);
      a4.f32[2] = (float)(v475 / v482);
      v483 = (const float *)(*v480 + 1656);
      v514 = vld3_f32(v483);
      v484 = *(_QWORD *)(v480[1] + 144);
      v485.i64[0] = 0x3F0000003F000000;
      v485.i64[1] = 0x3F0000003F000000;
      v486 = vaddq_f32(a4, v485);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v514.val[0], v486.f32[0]), v514.val[1], *(float32x2_t *)v486.f32, 1), v514.val[2], v486, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v475;
      v487 = vmulq_n_f32(vaddq_f32(a3, v485), *(float *)&v484);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v481 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v514.val[0], v487.f32[0]), v514.val[1], *(float32x2_t *)v487.f32, 1), v514.val[2], v487, 2);
    }
    else if (!(v479 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v477 + 16), *(_QWORD *)(*(_QWORD *)(v477 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v477 + 8) + 2448) + 520 * v479, *(_QWORD *)(*(_QWORD *)(v477 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  sub_2239D4738(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239D4738(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const float *v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  const float *v63;
  uint64_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _QWORD *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  _QWORD *v82;
  __int32 v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  _QWORD *v88;
  uint64_t v89;
  const float *v90;
  uint64_t v91;
  int v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  _QWORD *v96;
  int v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  const float *v105;
  uint64_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  _QWORD *v110;
  int v111;
  int v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  const float *v119;
  uint64_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  _QWORD *v124;
  int v125;
  int v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  _QWORD *v130;
  uint64_t v131;
  int v132;
  const float *v133;
  uint64_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  _QWORD *v138;
  int v139;
  int v140;
  uint64_t v141;
  unsigned int v142;
  unsigned int v143;
  _QWORD *v144;
  uint64_t v145;
  int v146;
  const float *v147;
  uint64_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  _QWORD *v152;
  int v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  unsigned int v157;
  _QWORD *v158;
  uint64_t v159;
  int v160;
  const float *v161;
  uint64_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  _QWORD *v166;
  int v167;
  int v168;
  uint64_t v169;
  unsigned int v170;
  unsigned int v171;
  _QWORD *v172;
  uint64_t v173;
  int v174;
  const float *v175;
  uint64_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  _QWORD *v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  _QWORD *v186;
  uint64_t v187;
  int v188;
  const float *v189;
  uint64_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  _QWORD *v194;
  __int32 v195;
  int v196;
  uint64_t v197;
  unsigned int v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  const float *v202;
  uint64_t v203;
  int v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  int v216;
  const float *v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  int v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  const float *v231;
  uint64_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  int v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  int v258;
  const float *v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  int v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  int v286;
  const float *v287;
  uint64_t v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  __int32 v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  const float *v314;
  uint64_t v315;
  int v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  int v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  int v342;
  const float *v343;
  uint64_t v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  int v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  int v370;
  const float *v371;
  uint64_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  int v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  int v398;
  const float *v399;
  uint64_t v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  __int32 v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  const float *v426;
  uint64_t v427;
  int v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  int v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  int v454;
  const float *v455;
  uint64_t v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _BYTE v474[12];
  int32x2_t v475;
  int v476;
  int32x2_t *v477;
  float32x2x3_t v478;
  float32x2x3_t v479;
  float32x2x3_t v480;
  float32x2x3_t v481;
  float32x2x3_t v482;
  float32x2x3_t v483;
  float32x2x3_t v484;
  float32x2x3_t v485;
  float32x2x3_t v486;
  float32x2x3_t v487;
  float32x2x3_t v488;
  float32x2x3_t v489;
  float32x2x3_t v490;
  float32x2x3_t v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;

  v12 = *a1;
  a4.i64[0] = 0x300000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000003);
  *(_QWORD *)v474 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1388);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v478 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v24.f32[0]), v478.val[1], *(float32x2_t *)v24.f32, 1), v478.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v25.f32[0]), v478.val[1], *(float32x2_t *)v25.f32, 1), v478.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  a4.i64[0] = 0x300000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000004);
  *(_QWORD *)v474 = a3.i64[0];
  v27 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v27;
  v28 = *(_DWORD *)(v26[1] + 1392);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = *(_DWORD *)(*v32 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v34);
      a4.f32[1] = (float)(a3.i32[1] / v34);
      a4.f32[2] = (float)(v27 / v34);
      v35 = (const float *)(*v32 + 1656);
      v479 = vld3_f32(v35);
      v36 = *(_QWORD *)(v32[1] + 144);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v38 = vaddq_f32(a4, v37);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v38.f32[0]), v479.val[1], *(float32x2_t *)v38.f32, 1), v479.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v27;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v36);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v39.f32[0]), v479.val[1], *(float32x2_t *)v39.f32, 1), v479.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a4.i64[0] = 0x300000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000005);
  *(_QWORD *)v474 = a3.i64[0];
  v41 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1396);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v480 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v52.f32[0]), v480.val[1], *(float32x2_t *)v52.f32, 1), v480.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v53.f32[0]), v480.val[1], *(float32x2_t *)v53.f32, 1), v480.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  a4.i64[0] = 0x300000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000006);
  *(_QWORD *)v474 = a3.i64[0];
  v55 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v55;
  v56 = *(_DWORD *)(v54[1] + 1400);
  if (v56 != *(_DWORD *)(*v54 + 272))
  {
    v57 = *(_QWORD *)(v54[2] + 8);
    if ((v56 & 0x10000000) != 0)
      v58 = 0x40000000;
    else
      v58 = 0x80000000;
    if ((v56 & 0x20000000) != 0)
      v59 = v58;
    else
      v59 = v56 & 0xCFFFFFFF;
    if ((v59 & 0x40000000) != 0)
    {
      v60 = *(_QWORD **)v57;
      v61 = *v60;
      v62 = *(_DWORD *)(*v60 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v62);
      a4.f32[1] = (float)(a3.i32[1] / v62);
      a4.f32[2] = (float)(v55 / v62);
      v63 = (const float *)(*v60 + 1656);
      v481 = vld3_f32(v63);
      v64 = *(_QWORD *)(v60[1] + 144);
      v65.i64[0] = 0x3F0000003F000000;
      v65.i64[1] = 0x3F0000003F000000;
      v66 = vaddq_f32(a4, v65);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v66.f32[0]), v481.val[1], *(float32x2_t *)v66.f32, 1), v481.val[2], v66, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v55;
      v67 = vmulq_n_f32(vaddq_f32(a3, v65), *(float *)&v64);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v61 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v67.f32[0]), v481.val[1], *(float32x2_t *)v67.f32, 1), v481.val[2], v67, 2);
    }
    else if (!(v59 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v57 + 16), *(_QWORD *)(*(_QWORD *)(v57 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v57 + 8) + 2448) + 520 * v59, *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v68 = *a1;
  a4.i64[0] = 0x300000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000007);
  *(_QWORD *)v474 = a3.i64[0];
  v69 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v69;
  v70 = *(_DWORD *)(v68[1] + 1404);
  if (v70 != *(_DWORD *)(*v68 + 272))
  {
    v71 = *(_QWORD *)(v68[2] + 8);
    if ((v70 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v70 & 0xCFFFFFFF;
    if ((v73 & 0x40000000) != 0)
    {
      v74 = *(_QWORD **)v71;
      v75 = *v74;
      v76 = *(_DWORD *)(*v74 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v76);
      a4.f32[1] = (float)(a3.i32[1] / v76);
      a4.f32[2] = (float)(v69 / v76);
      v77 = (const float *)(*v74 + 1656);
      v482 = vld3_f32(v77);
      v78 = *(_QWORD *)(v74[1] + 144);
      v79.i64[0] = 0x3F0000003F000000;
      v79.i64[1] = 0x3F0000003F000000;
      v80 = vaddq_f32(a4, v79);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v80.f32[0]), v482.val[1], *(float32x2_t *)v80.f32, 1), v482.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v69;
      v81 = vmulq_n_f32(vaddq_f32(a3, v79), *(float *)&v78);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v75 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v81.f32[0]), v482.val[1], *(float32x2_t *)v81.f32, 1), v482.val[2], v81, 2);
    }
    else if (!(v73 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v71 + 16), *(_QWORD *)(*(_QWORD *)(v71 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v71 + 8) + 2448) + 520 * v73, *(_QWORD *)(*(_QWORD *)(v71 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v82 = *a1;
  v83 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000004);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v84 = *(_DWORD *)(v82[1] + 1408);
  if (v84 != *(_DWORD *)(*v82 + 272))
  {
    v85 = *(_QWORD *)(v82[2] + 8);
    if ((v84 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v84 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v84 & 0xCFFFFFFF;
    if ((v87 & 0x40000000) != 0)
    {
      v88 = *(_QWORD **)v85;
      v89 = *v88;
      v90 = (const float *)(*v88 + 1656);
      v91 = *(_QWORD *)(v88[1] + 144);
      LODWORD(v88) = *(_DWORD *)(*v88 + 8);
      v92 = a3.i32[1];
      a5.f32[0] = (float)(v83 / (int)v88);
      a5.f32[1] = (float)(a3.i32[0] / (int)v88);
      a5.f32[2] = (float)(a3.i32[1] / (int)v88);
      v93.i64[0] = 0x3F0000003F000000;
      v93.i64[1] = 0x3F0000003F000000;
      v507 = vld3_f32(v90);
      v94 = vaddq_f32(a5, v93);
      *(int32x2_t *)v94.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v94.f32[0]), v507.val[1], *(float32x2_t *)v94.f32, 1), v507.val[2], v94, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v94.f32;
      v476 = 0;
      v94.i32[0] = v83;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v94.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v92;
      v95 = vmulq_n_f32(vaddq_f32(a3, v93), *(float *)&v91);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v89 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v95.f32[0]), v507.val[1], *(float32x2_t *)v95.f32, 1), v507.val[2], v95, 2);
    }
    else if (!(v87 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v85 + 16), *(_QWORD *)(*(_QWORD *)(v85 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v85 + 8) + 2448) + 520 * v87, *(_QWORD *)(*(_QWORD *)(v85 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v96 = *a1;
  a4.i64[0] = 0x400000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000001);
  *(_QWORD *)v474 = a3.i64[0];
  v97 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v97;
  v98 = *(_DWORD *)(v96[1] + 1412);
  if (v98 != *(_DWORD *)(*v96 + 272))
  {
    v99 = *(_QWORD *)(v96[2] + 8);
    if ((v98 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v101 = v100;
    else
      v101 = v98 & 0xCFFFFFFF;
    if ((v101 & 0x40000000) != 0)
    {
      v102 = *(_QWORD **)v99;
      v103 = *v102;
      v104 = *(_DWORD *)(*v102 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v104);
      a4.f32[1] = (float)(a3.i32[1] / v104);
      a4.f32[2] = (float)(v97 / v104);
      v105 = (const float *)(*v102 + 1656);
      v483 = vld3_f32(v105);
      v106 = *(_QWORD *)(v102[1] + 144);
      v107.i64[0] = 0x3F0000003F000000;
      v107.i64[1] = 0x3F0000003F000000;
      v108 = vaddq_f32(a4, v107);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v108.f32[0]), v483.val[1], *(float32x2_t *)v108.f32, 1), v483.val[2], v108, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v97;
      v109 = vmulq_n_f32(vaddq_f32(a3, v107), *(float *)&v106);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v103 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v109.f32[0]), v483.val[1], *(float32x2_t *)v109.f32, 1), v483.val[2], v109, 2);
    }
    else if (!(v101 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v99 + 16), *(_QWORD *)(*(_QWORD *)(v99 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v99 + 8) + 2448) + 520 * v101, *(_QWORD *)(*(_QWORD *)(v99 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v110 = *a1;
  a4.i64[0] = 0x400000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000002);
  *(_QWORD *)v474 = a3.i64[0];
  v111 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v111;
  v112 = *(_DWORD *)(v110[1] + 1416);
  if (v112 != *(_DWORD *)(*v110 + 272))
  {
    v113 = *(_QWORD *)(v110[2] + 8);
    if ((v112 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v115 = v114;
    else
      v115 = v112 & 0xCFFFFFFF;
    if ((v115 & 0x40000000) != 0)
    {
      v116 = *(_QWORD **)v113;
      v117 = *v116;
      v118 = *(_DWORD *)(*v116 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v118);
      a4.f32[1] = (float)(a3.i32[1] / v118);
      a4.f32[2] = (float)(v111 / v118);
      v119 = (const float *)(*v116 + 1656);
      v484 = vld3_f32(v119);
      v120 = *(_QWORD *)(v116[1] + 144);
      v121.i64[0] = 0x3F0000003F000000;
      v121.i64[1] = 0x3F0000003F000000;
      v122 = vaddq_f32(a4, v121);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v122.f32[0]), v484.val[1], *(float32x2_t *)v122.f32, 1), v484.val[2], v122, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v111;
      v123 = vmulq_n_f32(vaddq_f32(a3, v121), *(float *)&v120);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v117 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v123.f32[0]), v484.val[1], *(float32x2_t *)v123.f32, 1), v484.val[2], v123, 2);
    }
    else if (!(v115 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v113 + 16), *(_QWORD *)(*(_QWORD *)(v113 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v113 + 8) + 2448) + 520 * v115, *(_QWORD *)(*(_QWORD *)(v113 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v124 = *a1;
  a4.i64[0] = 0x400000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000003);
  *(_QWORD *)v474 = a3.i64[0];
  v125 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v125;
  v126 = *(_DWORD *)(v124[1] + 1420);
  if (v126 != *(_DWORD *)(*v124 + 272))
  {
    v127 = *(_QWORD *)(v124[2] + 8);
    if ((v126 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v126 & 0x20000000) != 0)
      v129 = v128;
    else
      v129 = v126 & 0xCFFFFFFF;
    if ((v129 & 0x40000000) != 0)
    {
      v130 = *(_QWORD **)v127;
      v131 = *v130;
      v132 = *(_DWORD *)(*v130 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v132);
      a4.f32[1] = (float)(a3.i32[1] / v132);
      a4.f32[2] = (float)(v125 / v132);
      v133 = (const float *)(*v130 + 1656);
      v485 = vld3_f32(v133);
      v134 = *(_QWORD *)(v130[1] + 144);
      v135.i64[0] = 0x3F0000003F000000;
      v135.i64[1] = 0x3F0000003F000000;
      v136 = vaddq_f32(a4, v135);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v136.f32[0]), v485.val[1], *(float32x2_t *)v136.f32, 1), v485.val[2], v136, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v125;
      v137 = vmulq_n_f32(vaddq_f32(a3, v135), *(float *)&v134);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v131 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v137.f32[0]), v485.val[1], *(float32x2_t *)v137.f32, 1), v485.val[2], v137, 2);
    }
    else if (!(v129 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v127 + 16), *(_QWORD *)(*(_QWORD *)(v127 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v127 + 8) + 2448) + 520 * v129, *(_QWORD *)(*(_QWORD *)(v127 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v138 = *a1;
  a4.i64[0] = 0x400000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000004);
  *(_QWORD *)v474 = a3.i64[0];
  v139 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v139;
  v140 = *(_DWORD *)(v138[1] + 1424);
  if (v140 != *(_DWORD *)(*v138 + 272))
  {
    v141 = *(_QWORD *)(v138[2] + 8);
    if ((v140 & 0x10000000) != 0)
      v142 = 0x40000000;
    else
      v142 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v143 = v142;
    else
      v143 = v140 & 0xCFFFFFFF;
    if ((v143 & 0x40000000) != 0)
    {
      v144 = *(_QWORD **)v141;
      v145 = *v144;
      v146 = *(_DWORD *)(*v144 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v146);
      a4.f32[1] = (float)(a3.i32[1] / v146);
      a4.f32[2] = (float)(v139 / v146);
      v147 = (const float *)(*v144 + 1656);
      v486 = vld3_f32(v147);
      v148 = *(_QWORD *)(v144[1] + 144);
      v149.i64[0] = 0x3F0000003F000000;
      v149.i64[1] = 0x3F0000003F000000;
      v150 = vaddq_f32(a4, v149);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v150.f32[0]), v486.val[1], *(float32x2_t *)v150.f32, 1), v486.val[2], v150, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v139;
      v151 = vmulq_n_f32(vaddq_f32(a3, v149), *(float *)&v148);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v145 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v151.f32[0]), v486.val[1], *(float32x2_t *)v151.f32, 1), v486.val[2], v151, 2);
    }
    else if (!(v143 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v141 + 16), *(_QWORD *)(*(_QWORD *)(v141 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v141 + 8) + 2448) + 520 * v143, *(_QWORD *)(*(_QWORD *)(v141 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v152 = *a1;
  a4.i64[0] = 0x400000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000005);
  *(_QWORD *)v474 = a3.i64[0];
  v153 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v153;
  v154 = *(_DWORD *)(v152[1] + 1428);
  if (v154 != *(_DWORD *)(*v152 + 272))
  {
    v155 = *(_QWORD *)(v152[2] + 8);
    if ((v154 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v157 = v156;
    else
      v157 = v154 & 0xCFFFFFFF;
    if ((v157 & 0x40000000) != 0)
    {
      v158 = *(_QWORD **)v155;
      v159 = *v158;
      v160 = *(_DWORD *)(*v158 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v160);
      a4.f32[1] = (float)(a3.i32[1] / v160);
      a4.f32[2] = (float)(v153 / v160);
      v161 = (const float *)(*v158 + 1656);
      v487 = vld3_f32(v161);
      v162 = *(_QWORD *)(v158[1] + 144);
      v163.i64[0] = 0x3F0000003F000000;
      v163.i64[1] = 0x3F0000003F000000;
      v164 = vaddq_f32(a4, v163);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v164.f32[0]), v487.val[1], *(float32x2_t *)v164.f32, 1), v487.val[2], v164, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v153;
      v165 = vmulq_n_f32(vaddq_f32(a3, v163), *(float *)&v162);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v159 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v165.f32[0]), v487.val[1], *(float32x2_t *)v165.f32, 1), v487.val[2], v165, 2);
    }
    else if (!(v157 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v155 + 16), *(_QWORD *)(*(_QWORD *)(v155 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v155 + 8) + 2448) + 520 * v157, *(_QWORD *)(*(_QWORD *)(v155 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v166 = *a1;
  a4.i64[0] = 0x400000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000006);
  *(_QWORD *)v474 = a3.i64[0];
  v167 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v167;
  v168 = *(_DWORD *)(v166[1] + 1432);
  if (v168 != *(_DWORD *)(*v166 + 272))
  {
    v169 = *(_QWORD *)(v166[2] + 8);
    if ((v168 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v171 = v170;
    else
      v171 = v168 & 0xCFFFFFFF;
    if ((v171 & 0x40000000) != 0)
    {
      v172 = *(_QWORD **)v169;
      v173 = *v172;
      v174 = *(_DWORD *)(*v172 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v174);
      a4.f32[1] = (float)(a3.i32[1] / v174);
      a4.f32[2] = (float)(v167 / v174);
      v175 = (const float *)(*v172 + 1656);
      v488 = vld3_f32(v175);
      v176 = *(_QWORD *)(v172[1] + 144);
      v177.i64[0] = 0x3F0000003F000000;
      v177.i64[1] = 0x3F0000003F000000;
      v178 = vaddq_f32(a4, v177);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v178.f32[0]), v488.val[1], *(float32x2_t *)v178.f32, 1), v488.val[2], v178, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v167;
      v179 = vmulq_n_f32(vaddq_f32(a3, v177), *(float *)&v176);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v173 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v179.f32[0]), v488.val[1], *(float32x2_t *)v179.f32, 1), v488.val[2], v179, 2);
    }
    else if (!(v171 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v169 + 16), *(_QWORD *)(*(_QWORD *)(v169 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v169 + 8) + 2448) + 520 * v171, *(_QWORD *)(*(_QWORD *)(v169 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v180 = *a1;
  a4.i64[0] = 0x400000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000007);
  *(_QWORD *)v474 = a3.i64[0];
  v181 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v181;
  v182 = *(_DWORD *)(v180[1] + 1436);
  if (v182 != *(_DWORD *)(*v180 + 272))
  {
    v183 = *(_QWORD *)(v180[2] + 8);
    if ((v182 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v185 = v184;
    else
      v185 = v182 & 0xCFFFFFFF;
    if ((v185 & 0x40000000) != 0)
    {
      v186 = *(_QWORD **)v183;
      v187 = *v186;
      v188 = *(_DWORD *)(*v186 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v188);
      a4.f32[1] = (float)(a3.i32[1] / v188);
      a4.f32[2] = (float)(v181 / v188);
      v189 = (const float *)(*v186 + 1656);
      v489 = vld3_f32(v189);
      v190 = *(_QWORD *)(v186[1] + 144);
      v191.i64[0] = 0x3F0000003F000000;
      v191.i64[1] = 0x3F0000003F000000;
      v192 = vaddq_f32(a4, v191);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v192.f32[0]), v489.val[1], *(float32x2_t *)v192.f32, 1), v489.val[2], v192, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v181;
      v193 = vmulq_n_f32(vaddq_f32(a3, v191), *(float *)&v190);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v187 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v193.f32[0]), v489.val[1], *(float32x2_t *)v193.f32, 1), v489.val[2], v193, 2);
    }
    else if (!(v185 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v183 + 16), *(_QWORD *)(*(_QWORD *)(v183 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v183 + 8) + 2448) + 520 * v185, *(_QWORD *)(*(_QWORD *)(v183 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v194 = *a1;
  v195 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  a4.i64[0] = 0x500000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000005);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v196 = *(_DWORD *)(v194[1] + 1440);
  if (v196 != *(_DWORD *)(*v194 + 272))
  {
    v197 = *(_QWORD *)(v194[2] + 8);
    if ((v196 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v199 = v198;
    else
      v199 = v196 & 0xCFFFFFFF;
    if ((v199 & 0x40000000) != 0)
    {
      v200 = *(_QWORD **)v197;
      v201 = *v200;
      v202 = (const float *)(*v200 + 1656);
      v203 = *(_QWORD *)(v200[1] + 144);
      LODWORD(v200) = *(_DWORD *)(*v200 + 8);
      v204 = a3.i32[1];
      a5.f32[0] = (float)(v195 / (int)v200);
      a5.f32[1] = (float)(a3.i32[0] / (int)v200);
      a5.f32[2] = (float)(a3.i32[1] / (int)v200);
      v205.i64[0] = 0x3F0000003F000000;
      v205.i64[1] = 0x3F0000003F000000;
      v508 = vld3_f32(v202);
      v206 = vaddq_f32(a5, v205);
      *(int32x2_t *)v206.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v206.f32[0]), v508.val[1], *(float32x2_t *)v206.f32, 1), v508.val[2], v206, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v206.f32;
      v476 = 0;
      v206.i32[0] = v195;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v206.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v204;
      v207 = vmulq_n_f32(vaddq_f32(a3, v205), *(float *)&v203);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v201 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v207.f32[0]), v508.val[1], *(float32x2_t *)v207.f32, 1), v508.val[2], v207, 2);
    }
    else if (!(v199 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v197 + 16), *(_QWORD *)(*(_QWORD *)(v197 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v197 + 8) + 2448) + 520 * v199, *(_QWORD *)(*(_QWORD *)(v197 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v208 = *a1;
  a4.i64[0] = 0x500000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000001);
  *(_QWORD *)v474 = a3.i64[0];
  v209 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v209;
  v210 = *(_DWORD *)(v208[1] + 1444);
  if (v210 != *(_DWORD *)(*v208 + 272))
  {
    v211 = *(_QWORD *)(v208[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = *(_DWORD *)(*v214 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v216);
      a4.f32[1] = (float)(a3.i32[1] / v216);
      a4.f32[2] = (float)(v209 / v216);
      v217 = (const float *)(*v214 + 1656);
      v490 = vld3_f32(v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a4, v219);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v220.f32[0]), v490.val[1], *(float32x2_t *)v220.f32, 1), v490.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(a3, v219), *(float *)&v218);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v221.f32[0]), v490.val[1], *(float32x2_t *)v221.f32, 1), v490.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  a4.i64[0] = 0x500000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000002);
  *(_QWORD *)v474 = a3.i64[0];
  v223 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v223;
  v224 = *(_DWORD *)(v222[1] + 1448);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = *(_DWORD *)(*v228 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v230);
      a4.f32[1] = (float)(a3.i32[1] / v230);
      a4.f32[2] = (float)(v223 / v230);
      v231 = (const float *)(*v228 + 1656);
      v491 = vld3_f32(v231);
      v232 = *(_QWORD *)(v228[1] + 144);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v234 = vaddq_f32(a4, v233);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v234.f32[0]), v491.val[1], *(float32x2_t *)v234.f32, 1), v491.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v223;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v232);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v235.f32[0]), v491.val[1], *(float32x2_t *)v235.f32, 1), v491.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x500000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000003);
  *(_QWORD *)v474 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1452);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v492 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v248.f32[0]), v492.val[1], *(float32x2_t *)v248.f32, 1), v492.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v249.f32[0]), v492.val[1], *(float32x2_t *)v249.f32, 1), v492.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000004);
  *(_QWORD *)v474 = a3.i64[0];
  v251 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v251;
  v252 = *(_DWORD *)(v250[1] + 1456);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = *(_DWORD *)(*v256 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v258);
      a4.f32[1] = (float)(a3.i32[1] / v258);
      a4.f32[2] = (float)(v251 / v258);
      v259 = (const float *)(*v256 + 1656);
      v493 = vld3_f32(v259);
      v260 = *(_QWORD *)(v256[1] + 144);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v262 = vaddq_f32(a4, v261);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v262.f32[0]), v493.val[1], *(float32x2_t *)v262.f32, 1), v493.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v251;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v260);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v263.f32[0]), v493.val[1], *(float32x2_t *)v263.f32, 1), v493.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x500000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000005);
  *(_QWORD *)v474 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1460);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v494 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v276.f32[0]), v494.val[1], *(float32x2_t *)v276.f32, 1), v494.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v277.f32[0]), v494.val[1], *(float32x2_t *)v277.f32, 1), v494.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000006);
  *(_QWORD *)v474 = a3.i64[0];
  v279 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v279;
  v280 = *(_DWORD *)(v278[1] + 1464);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = *(_DWORD *)(*v284 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v286);
      a4.f32[1] = (float)(a3.i32[1] / v286);
      a4.f32[2] = (float)(v279 / v286);
      v287 = (const float *)(*v284 + 1656);
      v495 = vld3_f32(v287);
      v288 = *(_QWORD *)(v284[1] + 144);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v290 = vaddq_f32(a4, v289);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v290.f32[0]), v495.val[1], *(float32x2_t *)v290.f32, 1), v495.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v279;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v288);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v291.f32[0]), v495.val[1], *(float32x2_t *)v291.f32, 1), v495.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000007);
  *(_QWORD *)v474 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1468);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v496 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v304.f32[0]), v496.val[1], *(float32x2_t *)v304.f32, 1), v496.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v305.f32[0]), v496.val[1], *(float32x2_t *)v305.f32, 1), v496.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  v307 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000006);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v308 = *(_DWORD *)(v306[1] + 1472);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = (const float *)(*v312 + 1656);
      v315 = *(_QWORD *)(v312[1] + 144);
      LODWORD(v312) = *(_DWORD *)(*v312 + 8);
      v316 = a3.i32[1];
      a5.f32[0] = (float)(v307 / (int)v312);
      a5.f32[1] = (float)(a3.i32[0] / (int)v312);
      a5.f32[2] = (float)(a3.i32[1] / (int)v312);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v509 = vld3_f32(v314);
      v318 = vaddq_f32(a5, v317);
      *(int32x2_t *)v318.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v318.f32[0]), v509.val[1], *(float32x2_t *)v318.f32, 1), v509.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v318.f32;
      v476 = 0;
      v318.i32[0] = v307;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v318.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v316;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v315);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v319.f32[0]), v509.val[1], *(float32x2_t *)v319.f32, 1), v509.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x600000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000001);
  *(_QWORD *)v474 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 1476);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v497 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v332.f32[0]), v497.val[1], *(float32x2_t *)v332.f32, 1), v497.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v333.f32[0]), v497.val[1], *(float32x2_t *)v333.f32, 1), v497.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  a4.i64[0] = 0x600000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000002);
  *(_QWORD *)v474 = a3.i64[0];
  v335 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v335;
  v336 = *(_DWORD *)(v334[1] + 1480);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = *(_DWORD *)(*v340 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v342);
      a4.f32[1] = (float)(a3.i32[1] / v342);
      a4.f32[2] = (float)(v335 / v342);
      v343 = (const float *)(*v340 + 1656);
      v498 = vld3_f32(v343);
      v344 = *(_QWORD *)(v340[1] + 144);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v346 = vaddq_f32(a4, v345);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v346.f32[0]), v498.val[1], *(float32x2_t *)v346.f32, 1), v498.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v335;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v344);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v347.f32[0]), v498.val[1], *(float32x2_t *)v347.f32, 1), v498.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  a4.i64[0] = 0x600000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000003);
  *(_QWORD *)v474 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 1484);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v499 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v360.f32[0]), v499.val[1], *(float32x2_t *)v360.f32, 1), v499.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v361.f32[0]), v499.val[1], *(float32x2_t *)v361.f32, 1), v499.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  a4.i64[0] = 0x600000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000004);
  *(_QWORD *)v474 = a3.i64[0];
  v363 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v363;
  v364 = *(_DWORD *)(v362[1] + 1488);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = *(_DWORD *)(*v368 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v370);
      a4.f32[1] = (float)(a3.i32[1] / v370);
      a4.f32[2] = (float)(v363 / v370);
      v371 = (const float *)(*v368 + 1656);
      v500 = vld3_f32(v371);
      v372 = *(_QWORD *)(v368[1] + 144);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v374 = vaddq_f32(a4, v373);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v374.f32[0]), v500.val[1], *(float32x2_t *)v374.f32, 1), v500.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v363;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v372);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v375.f32[0]), v500.val[1], *(float32x2_t *)v375.f32, 1), v500.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  a4.i64[0] = 0x600000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000005);
  *(_QWORD *)v474 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 1492);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v501 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v388.f32[0]), v501.val[1], *(float32x2_t *)v388.f32, 1), v501.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v389.f32[0]), v501.val[1], *(float32x2_t *)v389.f32, 1), v501.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  a4.i64[0] = 0x600000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000006);
  *(_QWORD *)v474 = a3.i64[0];
  v391 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v391;
  v392 = *(_DWORD *)(v390[1] + 1496);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = *(_DWORD *)(*v396 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v398);
      a4.f32[1] = (float)(a3.i32[1] / v398);
      a4.f32[2] = (float)(v391 / v398);
      v399 = (const float *)(*v396 + 1656);
      v502 = vld3_f32(v399);
      v400 = *(_QWORD *)(v396[1] + 144);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v402 = vaddq_f32(a4, v401);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v402.f32[0]), v502.val[1], *(float32x2_t *)v402.f32, 1), v502.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v391;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v400);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v403.f32[0]), v502.val[1], *(float32x2_t *)v403.f32, 1), v502.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x600000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000007);
  *(_QWORD *)v474 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 1500);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v503 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v416.f32[0]), v503.val[1], *(float32x2_t *)v416.f32, 1), v503.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v417.f32[0]), v503.val[1], *(float32x2_t *)v417.f32, 1), v503.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  v419 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x500000007);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v420 = *(_DWORD *)(v418[1] + 1504);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = (const float *)(*v424 + 1656);
      v427 = *(_QWORD *)(v424[1] + 144);
      LODWORD(v424) = *(_DWORD *)(*v424 + 8);
      v428 = a3.i32[1];
      a5.f32[0] = (float)(v419 / (int)v424);
      a5.f32[1] = (float)(a3.i32[0] / (int)v424);
      a5.f32[2] = (float)(a3.i32[1] / (int)v424);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v510 = vld3_f32(v426);
      v430 = vaddq_f32(a5, v429);
      *(int32x2_t *)v430.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v430.f32[0]), v510.val[1], *(float32x2_t *)v430.f32, 1), v510.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v430.f32;
      v476 = 0;
      v430.i32[0] = v419;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v430.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v428;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v427);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v431.f32[0]), v510.val[1], *(float32x2_t *)v431.f32, 1), v510.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  a4.i64[0] = 0x700000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000001);
  *(_QWORD *)v474 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 1508);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v504 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v444.f32[0]), v504.val[1], *(float32x2_t *)v444.f32, 1), v504.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v445.f32[0]), v504.val[1], *(float32x2_t *)v445.f32, 1), v504.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  a4.i64[0] = 0x700000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000002);
  *(_QWORD *)v474 = a3.i64[0];
  v447 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v447;
  v448 = *(_DWORD *)(v446[1] + 1512);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = *(_DWORD *)(*v452 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v454);
      a4.f32[1] = (float)(a3.i32[1] / v454);
      a4.f32[2] = (float)(v447 / v454);
      v455 = (const float *)(*v452 + 1656);
      v505 = vld3_f32(v455);
      v456 = *(_QWORD *)(v452[1] + 144);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v458 = vaddq_f32(a4, v457);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v458.f32[0]), v505.val[1], *(float32x2_t *)v458.f32, 1), v505.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v447;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v456);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v459.f32[0]), v505.val[1], *(float32x2_t *)v459.f32, 1), v505.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x700000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000003);
  *(_QWORD *)v474 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v474[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 1516);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v506 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v472.f32[0]), v506.val[1], *(float32x2_t *)v472.f32, 1), v506.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v473.f32[0]), v506.val[1], *(float32x2_t *)v473.f32, 1), v506.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  sub_2239D701C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239D701C(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const float *v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  const float *v63;
  uint64_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _QWORD *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  _QWORD *v82;
  signed int v83;
  int v84;
  int v85;
  int v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  _QWORD *v90;
  uint64_t v91;
  const float *v92;
  int v93;
  uint64_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  _QWORD *v98;
  signed int v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  unsigned int v104;
  unsigned int v105;
  _QWORD *v106;
  uint64_t v107;
  const float *v108;
  int v109;
  uint64_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  _QWORD *v114;
  signed int v115;
  int v116;
  int v117;
  int v118;
  uint64_t v119;
  unsigned int v120;
  unsigned int v121;
  _QWORD *v122;
  uint64_t v123;
  const float *v124;
  int v125;
  uint64_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float32x4_t v129;
  _QWORD *v130;
  signed int v131;
  int v132;
  int v133;
  int v134;
  uint64_t v135;
  unsigned int v136;
  unsigned int v137;
  _QWORD *v138;
  uint64_t v139;
  const float *v140;
  int v141;
  uint64_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  _QWORD *v146;
  signed int v147;
  int v148;
  int v149;
  int v150;
  uint64_t v151;
  unsigned int v152;
  unsigned int v153;
  _QWORD *v154;
  uint64_t v155;
  const float *v156;
  int v157;
  uint64_t v158;
  float32x4_t v159;
  float32x4_t v160;
  float32x4_t v161;
  _QWORD *v162;
  signed int v163;
  int v164;
  int v165;
  int v166;
  uint64_t v167;
  unsigned int v168;
  unsigned int v169;
  _QWORD *v170;
  uint64_t v171;
  const float *v172;
  int v173;
  uint64_t v174;
  float32x4_t v175;
  float32x4_t v176;
  float32x4_t v177;
  _QWORD *v178;
  signed int v179;
  int v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  _QWORD *v186;
  uint64_t v187;
  const float *v188;
  int v189;
  uint64_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  _QWORD *v194;
  __int32 v195;
  int v196;
  uint64_t v197;
  unsigned int v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  const float *v202;
  uint64_t v203;
  int v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  int v216;
  const float *v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  int v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  const float *v231;
  uint64_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  int v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  int v258;
  const float *v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  int v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  int v286;
  const float *v287;
  uint64_t v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  __int32 v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  const float *v314;
  uint64_t v315;
  int v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  int v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  int v342;
  const float *v343;
  uint64_t v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  int v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  int v370;
  const float *v371;
  uint64_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  int v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  int v398;
  const float *v399;
  uint64_t v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  __int32 v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  const float *v426;
  uint64_t v427;
  int v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  int v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  int v454;
  const float *v455;
  uint64_t v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _QWORD *v474;
  int v475;
  int v476;
  uint64_t v477;
  unsigned int v478;
  unsigned int v479;
  _QWORD *v480;
  uint64_t v481;
  int v482;
  const float *v483;
  uint64_t v484;
  float32x4_t v485;
  float32x4_t v486;
  float32x4_t v487;
  _BYTE v488[12];
  int32x2_t v489;
  int v490;
  int32x2_t *v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;
  float32x2x3_t v511;
  float32x2x3_t v512;
  float32x2x3_t v513;
  float32x2x3_t v514;
  float32x2x3_t v515;
  float32x2x3_t v516;
  float32x2x3_t v517;
  float32x2x3_t v518;
  float32x2x3_t v519;
  float32x2x3_t v520;
  float32x2x3_t v521;
  float32x2x3_t v522;
  float32x2x3_t v523;
  float32x2x3_t v524;

  v12 = *a1;
  a4.i64[0] = 0x700000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000004);
  *(_QWORD *)v488 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1520);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v492 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v24.f32[0]), v492.val[1], *(float32x2_t *)v24.f32, 1), v492.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v25.f32[0]), v492.val[1], *(float32x2_t *)v25.f32, 1), v492.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  a4.i64[0] = 0x700000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000005);
  *(_QWORD *)v488 = a3.i64[0];
  v27 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v27;
  v28 = *(_DWORD *)(v26[1] + 1524);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = *(_DWORD *)(*v32 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v34);
      a4.f32[1] = (float)(a3.i32[1] / v34);
      a4.f32[2] = (float)(v27 / v34);
      v35 = (const float *)(*v32 + 1656);
      v493 = vld3_f32(v35);
      v36 = *(_QWORD *)(v32[1] + 144);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v38 = vaddq_f32(a4, v37);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v38.f32[0]), v493.val[1], *(float32x2_t *)v38.f32, 1), v493.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v27;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v36);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v39.f32[0]), v493.val[1], *(float32x2_t *)v39.f32, 1), v493.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a4.i64[0] = 0x700000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000006);
  *(_QWORD *)v488 = a3.i64[0];
  v41 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1528);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v494 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v52.f32[0]), v494.val[1], *(float32x2_t *)v52.f32, 1), v494.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v53.f32[0]), v494.val[1], *(float32x2_t *)v53.f32, 1), v494.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  a4.i64[0] = 0x700000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000007);
  *(_QWORD *)v488 = a3.i64[0];
  v55 = *(_DWORD *)(a2 + 8) + 5;
  *(_DWORD *)&v488[8] = v55;
  v56 = *(_DWORD *)(v54[1] + 1532);
  if (v56 != *(_DWORD *)(*v54 + 272))
  {
    v57 = *(_QWORD *)(v54[2] + 8);
    if ((v56 & 0x10000000) != 0)
      v58 = 0x40000000;
    else
      v58 = 0x80000000;
    if ((v56 & 0x20000000) != 0)
      v59 = v58;
    else
      v59 = v56 & 0xCFFFFFFF;
    if ((v59 & 0x40000000) != 0)
    {
      v60 = *(_QWORD **)v57;
      v61 = *v60;
      v62 = *(_DWORD *)(*v60 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v62);
      a4.f32[1] = (float)(a3.i32[1] / v62);
      a4.f32[2] = (float)(v55 / v62);
      v63 = (const float *)(*v60 + 1656);
      v495 = vld3_f32(v63);
      v64 = *(_QWORD *)(v60[1] + 144);
      v65.i64[0] = 0x3F0000003F000000;
      v65.i64[1] = 0x3F0000003F000000;
      v66 = vaddq_f32(a4, v65);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v66.f32[0]), v495.val[1], *(float32x2_t *)v66.f32, 1), v495.val[2], v66, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v55;
      v67 = vmulq_n_f32(vaddq_f32(a3, v65), *(float *)&v64);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v61 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v67.f32[0]), v495.val[1], *(float32x2_t *)v67.f32, 1), v495.val[2], v67, 2);
    }
    else if (!(v59 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v57 + 16), *(_QWORD *)(*(_QWORD *)(v57 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v57 + 8) + 2448) + 520 * v59, *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v68 = *a1;
  a3.i64[0] = *(_QWORD *)a2;
  *(_QWORD *)v488 = *(_QWORD *)a2;
  v69 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v69;
  v70 = *(_DWORD *)(v68[1] + 1536);
  if (v70 != *(_DWORD *)(*v68 + 272))
  {
    v71 = *(_QWORD *)(v68[2] + 8);
    if ((v70 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v70 & 0xCFFFFFFF;
    if ((v73 & 0x40000000) != 0)
    {
      v74 = *(_QWORD **)v71;
      v75 = *v74;
      v76 = *(_DWORD *)(*v74 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v76);
      a4.f32[1] = (float)(a3.i32[1] / v76);
      a4.f32[2] = (float)(v69 / v76);
      v77 = (const float *)(*v74 + 1656);
      v496 = vld3_f32(v77);
      v78 = *(_QWORD *)(v74[1] + 144);
      v79.i64[0] = 0x3F0000003F000000;
      v79.i64[1] = 0x3F0000003F000000;
      v80 = vaddq_f32(a4, v79);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v80.f32[0]), v496.val[1], *(float32x2_t *)v80.f32, 1), v496.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v69;
      v81 = vmulq_n_f32(vaddq_f32(a3, v79), *(float *)&v78);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v75 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v81.f32[0]), v496.val[1], *(float32x2_t *)v81.f32, 1), v496.val[2], v81, 2);
    }
    else if (!(v73 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v71 + 16), *(_QWORD *)(*(_QWORD *)(v71 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v71 + 8) + 2448) + 520 * v73, *(_QWORD *)(*(_QWORD *)(v71 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v82 = *a1;
  v83 = *(_DWORD *)(a2 + 4);
  v84 = *(_DWORD *)a2 + 1;
  *(_DWORD *)v488 = v84;
  *(_DWORD *)&v488[4] = v83;
  v85 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v85;
  v86 = *(_DWORD *)(v82[1] + 1540);
  if (v86 != *(_DWORD *)(*v82 + 272))
  {
    v87 = *(_QWORD *)(v82[2] + 8);
    if ((v86 & 0x10000000) != 0)
      v88 = 0x40000000;
    else
      v88 = 0x80000000;
    if ((v86 & 0x20000000) != 0)
      v89 = v88;
    else
      v89 = v86 & 0xCFFFFFFF;
    if ((v89 & 0x40000000) != 0)
    {
      v90 = *(_QWORD **)v87;
      v91 = *v90;
      v92 = (const float *)(*v90 + 1656);
      v93 = *(_DWORD *)(*v90 + 8);
      a3.f32[0] = (float)(v84 / v93);
      v94 = *(_QWORD *)(v90[1] + 144);
      a3.f32[1] = (float)(v83 / v93);
      a3.f32[2] = (float)(v85 / v93);
      v95.i64[0] = 0x3F0000003F000000;
      v95.i64[1] = 0x3F0000003F000000;
      v96 = vaddq_f32(a3, v95);
      v515 = vld3_f32(v92);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v515.val[0], v96.f32[0]), v515.val[1], *(float32x2_t *)v96.f32, 1), v515.val[2], v96, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v96.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v83, v84));
      v96.f32[2] = (float)v85;
      v97 = vmulq_n_f32(vaddq_f32(v96, v95), *(float *)&v94);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v91 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v515.val[0], v97.f32[0]), v515.val[1], *(float32x2_t *)v97.f32, 1), v515.val[2], v97, 2);
    }
    else if (!(v89 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v87 + 16), *(_QWORD *)(*(_QWORD *)(v87 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v87 + 8) + 2448) + 520 * v89, *(_QWORD *)(*(_QWORD *)(v87 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v98 = *a1;
  v99 = *(_DWORD *)(a2 + 4);
  v100 = *(_DWORD *)a2 + 2;
  *(_DWORD *)v488 = v100;
  *(_DWORD *)&v488[4] = v99;
  v101 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v101;
  v102 = *(_DWORD *)(v98[1] + 1544);
  if (v102 != *(_DWORD *)(*v98 + 272))
  {
    v103 = *(_QWORD *)(v98[2] + 8);
    if ((v102 & 0x10000000) != 0)
      v104 = 0x40000000;
    else
      v104 = 0x80000000;
    if ((v102 & 0x20000000) != 0)
      v105 = v104;
    else
      v105 = v102 & 0xCFFFFFFF;
    if ((v105 & 0x40000000) != 0)
    {
      v106 = *(_QWORD **)v103;
      v107 = *v106;
      v108 = (const float *)(*v106 + 1656);
      v109 = *(_DWORD *)(*v106 + 8);
      a3.f32[0] = (float)(v100 / v109);
      v110 = *(_QWORD *)(v106[1] + 144);
      a3.f32[1] = (float)(v99 / v109);
      a3.f32[2] = (float)(v101 / v109);
      v111.i64[0] = 0x3F0000003F000000;
      v111.i64[1] = 0x3F0000003F000000;
      v112 = vaddq_f32(a3, v111);
      v516 = vld3_f32(v108);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v516.val[0], v112.f32[0]), v516.val[1], *(float32x2_t *)v112.f32, 1), v516.val[2], v112, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v112.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v99, v100));
      v112.f32[2] = (float)v101;
      v113 = vmulq_n_f32(vaddq_f32(v112, v111), *(float *)&v110);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v107 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v516.val[0], v113.f32[0]), v516.val[1], *(float32x2_t *)v113.f32, 1), v516.val[2], v113, 2);
    }
    else if (!(v105 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v103 + 16), *(_QWORD *)(*(_QWORD *)(v103 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v103 + 8) + 2448) + 520 * v105, *(_QWORD *)(*(_QWORD *)(v103 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v114 = *a1;
  v115 = *(_DWORD *)(a2 + 4);
  v116 = *(_DWORD *)a2 + 3;
  *(_DWORD *)v488 = v116;
  *(_DWORD *)&v488[4] = v115;
  v117 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v117;
  v118 = *(_DWORD *)(v114[1] + 1548);
  if (v118 != *(_DWORD *)(*v114 + 272))
  {
    v119 = *(_QWORD *)(v114[2] + 8);
    if ((v118 & 0x10000000) != 0)
      v120 = 0x40000000;
    else
      v120 = 0x80000000;
    if ((v118 & 0x20000000) != 0)
      v121 = v120;
    else
      v121 = v118 & 0xCFFFFFFF;
    if ((v121 & 0x40000000) != 0)
    {
      v122 = *(_QWORD **)v119;
      v123 = *v122;
      v124 = (const float *)(*v122 + 1656);
      v125 = *(_DWORD *)(*v122 + 8);
      a3.f32[0] = (float)(v116 / v125);
      v126 = *(_QWORD *)(v122[1] + 144);
      a3.f32[1] = (float)(v115 / v125);
      a3.f32[2] = (float)(v117 / v125);
      v127.i64[0] = 0x3F0000003F000000;
      v127.i64[1] = 0x3F0000003F000000;
      v128 = vaddq_f32(a3, v127);
      v517 = vld3_f32(v124);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v517.val[0], v128.f32[0]), v517.val[1], *(float32x2_t *)v128.f32, 1), v517.val[2], v128, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v128.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v115, v116));
      v128.f32[2] = (float)v117;
      v129 = vmulq_n_f32(vaddq_f32(v128, v127), *(float *)&v126);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v123 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v517.val[0], v129.f32[0]), v517.val[1], *(float32x2_t *)v129.f32, 1), v517.val[2], v129, 2);
    }
    else if (!(v121 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v119 + 16), *(_QWORD *)(*(_QWORD *)(v119 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v119 + 8) + 2448) + 520 * v121, *(_QWORD *)(*(_QWORD *)(v119 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v130 = *a1;
  v131 = *(_DWORD *)(a2 + 4);
  v132 = *(_DWORD *)a2 + 4;
  *(_DWORD *)v488 = v132;
  *(_DWORD *)&v488[4] = v131;
  v133 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v133;
  v134 = *(_DWORD *)(v130[1] + 1552);
  if (v134 != *(_DWORD *)(*v130 + 272))
  {
    v135 = *(_QWORD *)(v130[2] + 8);
    if ((v134 & 0x10000000) != 0)
      v136 = 0x40000000;
    else
      v136 = 0x80000000;
    if ((v134 & 0x20000000) != 0)
      v137 = v136;
    else
      v137 = v134 & 0xCFFFFFFF;
    if ((v137 & 0x40000000) != 0)
    {
      v138 = *(_QWORD **)v135;
      v139 = *v138;
      v140 = (const float *)(*v138 + 1656);
      v141 = *(_DWORD *)(*v138 + 8);
      a3.f32[0] = (float)(v132 / v141);
      v142 = *(_QWORD *)(v138[1] + 144);
      a3.f32[1] = (float)(v131 / v141);
      a3.f32[2] = (float)(v133 / v141);
      v143.i64[0] = 0x3F0000003F000000;
      v143.i64[1] = 0x3F0000003F000000;
      v144 = vaddq_f32(a3, v143);
      v518 = vld3_f32(v140);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v518.val[0], v144.f32[0]), v518.val[1], *(float32x2_t *)v144.f32, 1), v518.val[2], v144, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v144.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v131, v132));
      v144.f32[2] = (float)v133;
      v145 = vmulq_n_f32(vaddq_f32(v144, v143), *(float *)&v142);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v139 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v518.val[0], v145.f32[0]), v518.val[1], *(float32x2_t *)v145.f32, 1), v518.val[2], v145, 2);
    }
    else if (!(v137 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v135 + 16), *(_QWORD *)(*(_QWORD *)(v135 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v135 + 8) + 2448) + 520 * v137, *(_QWORD *)(*(_QWORD *)(v135 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v146 = *a1;
  v147 = *(_DWORD *)(a2 + 4);
  v148 = *(_DWORD *)a2 + 5;
  *(_DWORD *)v488 = v148;
  *(_DWORD *)&v488[4] = v147;
  v149 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v149;
  v150 = *(_DWORD *)(v146[1] + 1556);
  if (v150 != *(_DWORD *)(*v146 + 272))
  {
    v151 = *(_QWORD *)(v146[2] + 8);
    if ((v150 & 0x10000000) != 0)
      v152 = 0x40000000;
    else
      v152 = 0x80000000;
    if ((v150 & 0x20000000) != 0)
      v153 = v152;
    else
      v153 = v150 & 0xCFFFFFFF;
    if ((v153 & 0x40000000) != 0)
    {
      v154 = *(_QWORD **)v151;
      v155 = *v154;
      v156 = (const float *)(*v154 + 1656);
      v157 = *(_DWORD *)(*v154 + 8);
      a3.f32[0] = (float)(v148 / v157);
      v158 = *(_QWORD *)(v154[1] + 144);
      a3.f32[1] = (float)(v147 / v157);
      a3.f32[2] = (float)(v149 / v157);
      v159.i64[0] = 0x3F0000003F000000;
      v159.i64[1] = 0x3F0000003F000000;
      v160 = vaddq_f32(a3, v159);
      v519 = vld3_f32(v156);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v519.val[0], v160.f32[0]), v519.val[1], *(float32x2_t *)v160.f32, 1), v519.val[2], v160, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v160.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v147, v148));
      v160.f32[2] = (float)v149;
      v161 = vmulq_n_f32(vaddq_f32(v160, v159), *(float *)&v158);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v155 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v519.val[0], v161.f32[0]), v519.val[1], *(float32x2_t *)v161.f32, 1), v519.val[2], v161, 2);
    }
    else if (!(v153 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v151 + 16), *(_QWORD *)(*(_QWORD *)(v151 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v151 + 8) + 2448) + 520 * v153, *(_QWORD *)(*(_QWORD *)(v151 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v162 = *a1;
  v163 = *(_DWORD *)(a2 + 4);
  v164 = *(_DWORD *)a2 + 6;
  *(_DWORD *)v488 = v164;
  *(_DWORD *)&v488[4] = v163;
  v165 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v165;
  v166 = *(_DWORD *)(v162[1] + 1560);
  if (v166 != *(_DWORD *)(*v162 + 272))
  {
    v167 = *(_QWORD *)(v162[2] + 8);
    if ((v166 & 0x10000000) != 0)
      v168 = 0x40000000;
    else
      v168 = 0x80000000;
    if ((v166 & 0x20000000) != 0)
      v169 = v168;
    else
      v169 = v166 & 0xCFFFFFFF;
    if ((v169 & 0x40000000) != 0)
    {
      v170 = *(_QWORD **)v167;
      v171 = *v170;
      v172 = (const float *)(*v170 + 1656);
      v173 = *(_DWORD *)(*v170 + 8);
      a3.f32[0] = (float)(v164 / v173);
      v174 = *(_QWORD *)(v170[1] + 144);
      a3.f32[1] = (float)(v163 / v173);
      a3.f32[2] = (float)(v165 / v173);
      v175.i64[0] = 0x3F0000003F000000;
      v175.i64[1] = 0x3F0000003F000000;
      v176 = vaddq_f32(a3, v175);
      v520 = vld3_f32(v172);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v520.val[0], v176.f32[0]), v520.val[1], *(float32x2_t *)v176.f32, 1), v520.val[2], v176, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v176.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v163, v164));
      v176.f32[2] = (float)v165;
      v177 = vmulq_n_f32(vaddq_f32(v176, v175), *(float *)&v174);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v171 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v520.val[0], v177.f32[0]), v520.val[1], *(float32x2_t *)v177.f32, 1), v520.val[2], v177, 2);
    }
    else if (!(v169 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v167 + 16), *(_QWORD *)(*(_QWORD *)(v167 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v167 + 8) + 2448) + 520 * v169, *(_QWORD *)(*(_QWORD *)(v167 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v178 = *a1;
  v179 = *(_DWORD *)(a2 + 4);
  v180 = *(_DWORD *)a2 + 7;
  *(_DWORD *)v488 = v180;
  *(_DWORD *)&v488[4] = v179;
  v181 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v181;
  v182 = *(_DWORD *)(v178[1] + 1564);
  if (v182 != *(_DWORD *)(*v178 + 272))
  {
    v183 = *(_QWORD *)(v178[2] + 8);
    if ((v182 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v185 = v184;
    else
      v185 = v182 & 0xCFFFFFFF;
    if ((v185 & 0x40000000) != 0)
    {
      v186 = *(_QWORD **)v183;
      v187 = *v186;
      v188 = (const float *)(*v186 + 1656);
      v189 = *(_DWORD *)(*v186 + 8);
      a3.f32[0] = (float)(v180 / v189);
      v190 = *(_QWORD *)(v186[1] + 144);
      a3.f32[1] = (float)(v179 / v189);
      a3.f32[2] = (float)(v181 / v189);
      v191.i64[0] = 0x3F0000003F000000;
      v191.i64[1] = 0x3F0000003F000000;
      v192 = vaddq_f32(a3, v191);
      v521 = vld3_f32(v188);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v521.val[0], v192.f32[0]), v521.val[1], *(float32x2_t *)v192.f32, 1), v521.val[2], v192, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v192.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v179, v180));
      v192.f32[2] = (float)v181;
      v193 = vmulq_n_f32(vaddq_f32(v192, v191), *(float *)&v190);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v187 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v521.val[0], v193.f32[0]), v521.val[1], *(float32x2_t *)v193.f32, 1), v521.val[2], v193, 2);
    }
    else if (!(v185 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v183 + 16), *(_QWORD *)(*(_QWORD *)(v183 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v183 + 8) + 2448) + 520 * v185, *(_QWORD *)(*(_QWORD *)(v183 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v194 = *a1;
  v195 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x600000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000001);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v196 = *(_DWORD *)(v194[1] + 1568);
  if (v196 != *(_DWORD *)(*v194 + 272))
  {
    v197 = *(_QWORD *)(v194[2] + 8);
    if ((v196 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v199 = v198;
    else
      v199 = v196 & 0xCFFFFFFF;
    if ((v199 & 0x40000000) != 0)
    {
      v200 = *(_QWORD **)v197;
      v201 = *v200;
      v202 = (const float *)(*v200 + 1656);
      v203 = *(_QWORD *)(v200[1] + 144);
      LODWORD(v200) = *(_DWORD *)(*v200 + 8);
      v204 = a3.i32[1];
      a5.f32[0] = (float)(v195 / (int)v200);
      a5.f32[1] = (float)(a3.i32[0] / (int)v200);
      a5.f32[2] = (float)(a3.i32[1] / (int)v200);
      v205.i64[0] = 0x3F0000003F000000;
      v205.i64[1] = 0x3F0000003F000000;
      v522 = vld3_f32(v202);
      v206 = vaddq_f32(a5, v205);
      *(int32x2_t *)v206.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v522.val[0], v206.f32[0]), v522.val[1], *(float32x2_t *)v206.f32, 1), v522.val[2], v206, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v206.f32;
      v490 = 0;
      v206.i32[0] = v195;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v206.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v204;
      v207 = vmulq_n_f32(vaddq_f32(a3, v205), *(float *)&v203);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v201 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v522.val[0], v207.f32[0]), v522.val[1], *(float32x2_t *)v207.f32, 1), v522.val[2], v207, 2);
    }
    else if (!(v199 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v197 + 16), *(_QWORD *)(*(_QWORD *)(v197 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v197 + 8) + 2448) + 520 * v199, *(_QWORD *)(*(_QWORD *)(v197 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v208 = *a1;
  a4.i64[0] = 0x100000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000001);
  *(_QWORD *)v488 = a3.i64[0];
  v209 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v209;
  v210 = *(_DWORD *)(v208[1] + 1572);
  if (v210 != *(_DWORD *)(*v208 + 272))
  {
    v211 = *(_QWORD *)(v208[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = *(_DWORD *)(*v214 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v216);
      a4.f32[1] = (float)(a3.i32[1] / v216);
      a4.f32[2] = (float)(v209 / v216);
      v217 = (const float *)(*v214 + 1656);
      v497 = vld3_f32(v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a4, v219);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v220.f32[0]), v497.val[1], *(float32x2_t *)v220.f32, 1), v497.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(a3, v219), *(float *)&v218);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v221.f32[0]), v497.val[1], *(float32x2_t *)v221.f32, 1), v497.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  a4.i64[0] = 0x100000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000002);
  *(_QWORD *)v488 = a3.i64[0];
  v223 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v223;
  v224 = *(_DWORD *)(v222[1] + 1576);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = *(_DWORD *)(*v228 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v230);
      a4.f32[1] = (float)(a3.i32[1] / v230);
      a4.f32[2] = (float)(v223 / v230);
      v231 = (const float *)(*v228 + 1656);
      v498 = vld3_f32(v231);
      v232 = *(_QWORD *)(v228[1] + 144);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v234 = vaddq_f32(a4, v233);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v234.f32[0]), v498.val[1], *(float32x2_t *)v234.f32, 1), v498.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v223;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v232);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v235.f32[0]), v498.val[1], *(float32x2_t *)v235.f32, 1), v498.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x100000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000003);
  *(_QWORD *)v488 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1580);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v499 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v248.f32[0]), v499.val[1], *(float32x2_t *)v248.f32, 1), v499.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v249.f32[0]), v499.val[1], *(float32x2_t *)v249.f32, 1), v499.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  a4.i64[0] = 0x100000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000004);
  *(_QWORD *)v488 = a3.i64[0];
  v251 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v251;
  v252 = *(_DWORD *)(v250[1] + 1584);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = *(_DWORD *)(*v256 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v258);
      a4.f32[1] = (float)(a3.i32[1] / v258);
      a4.f32[2] = (float)(v251 / v258);
      v259 = (const float *)(*v256 + 1656);
      v500 = vld3_f32(v259);
      v260 = *(_QWORD *)(v256[1] + 144);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v262 = vaddq_f32(a4, v261);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v262.f32[0]), v500.val[1], *(float32x2_t *)v262.f32, 1), v500.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v251;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v260);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v263.f32[0]), v500.val[1], *(float32x2_t *)v263.f32, 1), v500.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x100000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000005);
  *(_QWORD *)v488 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1588);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v501 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v276.f32[0]), v501.val[1], *(float32x2_t *)v276.f32, 1), v501.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v277.f32[0]), v501.val[1], *(float32x2_t *)v277.f32, 1), v501.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  a4.i64[0] = 0x100000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000006);
  *(_QWORD *)v488 = a3.i64[0];
  v279 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v279;
  v280 = *(_DWORD *)(v278[1] + 1592);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = *(_DWORD *)(*v284 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v286);
      a4.f32[1] = (float)(a3.i32[1] / v286);
      a4.f32[2] = (float)(v279 / v286);
      v287 = (const float *)(*v284 + 1656);
      v502 = vld3_f32(v287);
      v288 = *(_QWORD *)(v284[1] + 144);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v290 = vaddq_f32(a4, v289);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v290.f32[0]), v502.val[1], *(float32x2_t *)v290.f32, 1), v502.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v279;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v288);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v291.f32[0]), v502.val[1], *(float32x2_t *)v291.f32, 1), v502.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  a4.i64[0] = 0x100000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000007);
  *(_QWORD *)v488 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1596);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v503 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v304.f32[0]), v503.val[1], *(float32x2_t *)v304.f32, 1), v503.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v305.f32[0]), v503.val[1], *(float32x2_t *)v305.f32, 1), v503.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  v307 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x600000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000002);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v308 = *(_DWORD *)(v306[1] + 1600);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = (const float *)(*v312 + 1656);
      v315 = *(_QWORD *)(v312[1] + 144);
      LODWORD(v312) = *(_DWORD *)(*v312 + 8);
      v316 = a3.i32[1];
      a5.f32[0] = (float)(v307 / (int)v312);
      a5.f32[1] = (float)(a3.i32[0] / (int)v312);
      a5.f32[2] = (float)(a3.i32[1] / (int)v312);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v523 = vld3_f32(v314);
      v318 = vaddq_f32(a5, v317);
      *(int32x2_t *)v318.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v523.val[0], v318.f32[0]), v523.val[1], *(float32x2_t *)v318.f32, 1), v523.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v318.f32;
      v490 = 0;
      v318.i32[0] = v307;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v318.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v316;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v315);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v523.val[0], v319.f32[0]), v523.val[1], *(float32x2_t *)v319.f32, 1), v523.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x200000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000001);
  *(_QWORD *)v488 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 1604);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v504 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v332.f32[0]), v504.val[1], *(float32x2_t *)v332.f32, 1), v504.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v333.f32[0]), v504.val[1], *(float32x2_t *)v333.f32, 1), v504.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  a4.i64[0] = 0x200000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000002);
  *(_QWORD *)v488 = a3.i64[0];
  v335 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v335;
  v336 = *(_DWORD *)(v334[1] + 1608);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = *(_DWORD *)(*v340 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v342);
      a4.f32[1] = (float)(a3.i32[1] / v342);
      a4.f32[2] = (float)(v335 / v342);
      v343 = (const float *)(*v340 + 1656);
      v505 = vld3_f32(v343);
      v344 = *(_QWORD *)(v340[1] + 144);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v346 = vaddq_f32(a4, v345);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v346.f32[0]), v505.val[1], *(float32x2_t *)v346.f32, 1), v505.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v335;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v344);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v347.f32[0]), v505.val[1], *(float32x2_t *)v347.f32, 1), v505.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  a4.i64[0] = 0x200000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000003);
  *(_QWORD *)v488 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 1612);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v506 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v360.f32[0]), v506.val[1], *(float32x2_t *)v360.f32, 1), v506.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v361.f32[0]), v506.val[1], *(float32x2_t *)v361.f32, 1), v506.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  a4.i64[0] = 0x200000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000004);
  *(_QWORD *)v488 = a3.i64[0];
  v363 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v363;
  v364 = *(_DWORD *)(v362[1] + 1616);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = *(_DWORD *)(*v368 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v370);
      a4.f32[1] = (float)(a3.i32[1] / v370);
      a4.f32[2] = (float)(v363 / v370);
      v371 = (const float *)(*v368 + 1656);
      v507 = vld3_f32(v371);
      v372 = *(_QWORD *)(v368[1] + 144);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v374 = vaddq_f32(a4, v373);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v374.f32[0]), v507.val[1], *(float32x2_t *)v374.f32, 1), v507.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v363;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v372);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v375.f32[0]), v507.val[1], *(float32x2_t *)v375.f32, 1), v507.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  a4.i64[0] = 0x200000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000005);
  *(_QWORD *)v488 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 1620);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v508 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v388.f32[0]), v508.val[1], *(float32x2_t *)v388.f32, 1), v508.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v389.f32[0]), v508.val[1], *(float32x2_t *)v389.f32, 1), v508.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  a4.i64[0] = 0x200000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000006);
  *(_QWORD *)v488 = a3.i64[0];
  v391 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v391;
  v392 = *(_DWORD *)(v390[1] + 1624);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = *(_DWORD *)(*v396 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v398);
      a4.f32[1] = (float)(a3.i32[1] / v398);
      a4.f32[2] = (float)(v391 / v398);
      v399 = (const float *)(*v396 + 1656);
      v509 = vld3_f32(v399);
      v400 = *(_QWORD *)(v396[1] + 144);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v402 = vaddq_f32(a4, v401);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v402.f32[0]), v509.val[1], *(float32x2_t *)v402.f32, 1), v509.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v391;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v400);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v403.f32[0]), v509.val[1], *(float32x2_t *)v403.f32, 1), v509.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x200000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000007);
  *(_QWORD *)v488 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 1628);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v510 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v416.f32[0]), v510.val[1], *(float32x2_t *)v416.f32, 1), v510.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v417.f32[0]), v510.val[1], *(float32x2_t *)v417.f32, 1), v510.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  v419 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x600000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000003);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v420 = *(_DWORD *)(v418[1] + 1632);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = (const float *)(*v424 + 1656);
      v427 = *(_QWORD *)(v424[1] + 144);
      LODWORD(v424) = *(_DWORD *)(*v424 + 8);
      v428 = a3.i32[1];
      a5.f32[0] = (float)(v419 / (int)v424);
      a5.f32[1] = (float)(a3.i32[0] / (int)v424);
      a5.f32[2] = (float)(a3.i32[1] / (int)v424);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v524 = vld3_f32(v426);
      v430 = vaddq_f32(a5, v429);
      *(int32x2_t *)v430.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v524.val[0], v430.f32[0]), v524.val[1], *(float32x2_t *)v430.f32, 1), v524.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v430.f32;
      v490 = 0;
      v430.i32[0] = v419;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v430.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v428;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v427);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v524.val[0], v431.f32[0]), v524.val[1], *(float32x2_t *)v431.f32, 1), v524.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  a4.i64[0] = 0x300000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000001);
  *(_QWORD *)v488 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 1636);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v511 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v511.val[0], v444.f32[0]), v511.val[1], *(float32x2_t *)v444.f32, 1), v511.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v511.val[0], v445.f32[0]), v511.val[1], *(float32x2_t *)v445.f32, 1), v511.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  a4.i64[0] = 0x300000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000002);
  *(_QWORD *)v488 = a3.i64[0];
  v447 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v447;
  v448 = *(_DWORD *)(v446[1] + 1640);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = *(_DWORD *)(*v452 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v454);
      a4.f32[1] = (float)(a3.i32[1] / v454);
      a4.f32[2] = (float)(v447 / v454);
      v455 = (const float *)(*v452 + 1656);
      v512 = vld3_f32(v455);
      v456 = *(_QWORD *)(v452[1] + 144);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v458 = vaddq_f32(a4, v457);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v512.val[0], v458.f32[0]), v512.val[1], *(float32x2_t *)v458.f32, 1), v512.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v447;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v456);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v512.val[0], v459.f32[0]), v512.val[1], *(float32x2_t *)v459.f32, 1), v512.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x300000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000003);
  *(_QWORD *)v488 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 1644);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v513 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v513.val[0], v472.f32[0]), v513.val[1], *(float32x2_t *)v472.f32, 1), v513.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v513.val[0], v473.f32[0]), v513.val[1], *(float32x2_t *)v473.f32, 1), v513.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v474 = *a1;
  a4.i64[0] = 0x300000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000004);
  *(_QWORD *)v488 = a3.i64[0];
  v475 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v475;
  v476 = *(_DWORD *)(v474[1] + 1648);
  if (v476 != *(_DWORD *)(*v474 + 272))
  {
    v477 = *(_QWORD *)(v474[2] + 8);
    if ((v476 & 0x10000000) != 0)
      v478 = 0x40000000;
    else
      v478 = 0x80000000;
    if ((v476 & 0x20000000) != 0)
      v479 = v478;
    else
      v479 = v476 & 0xCFFFFFFF;
    if ((v479 & 0x40000000) != 0)
    {
      v480 = *(_QWORD **)v477;
      v481 = *v480;
      v482 = *(_DWORD *)(*v480 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v482);
      a4.f32[1] = (float)(a3.i32[1] / v482);
      a4.f32[2] = (float)(v475 / v482);
      v483 = (const float *)(*v480 + 1656);
      v514 = vld3_f32(v483);
      v484 = *(_QWORD *)(v480[1] + 144);
      v485.i64[0] = 0x3F0000003F000000;
      v485.i64[1] = 0x3F0000003F000000;
      v486 = vaddq_f32(a4, v485);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v514.val[0], v486.f32[0]), v514.val[1], *(float32x2_t *)v486.f32, 1), v514.val[2], v486, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v475;
      v487 = vmulq_n_f32(vaddq_f32(a3, v485), *(float *)&v484);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v481 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v514.val[0], v487.f32[0]), v514.val[1], *(float32x2_t *)v487.f32, 1), v514.val[2], v487, 2);
    }
    else if (!(v479 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v477 + 16), *(_QWORD *)(*(_QWORD *)(v477 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v477 + 8) + 2448) + 520 * v479, *(_QWORD *)(*(_QWORD *)(v477 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  sub_2239D98CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239D98CC(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const float *v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  __int32 v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  const float *v62;
  uint64_t v63;
  int v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _QWORD *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  _QWORD *v82;
  int v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  _QWORD *v88;
  uint64_t v89;
  int v90;
  const float *v91;
  uint64_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  _QWORD *v96;
  int v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  const float *v105;
  uint64_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  _QWORD *v110;
  int v111;
  int v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  const float *v119;
  uint64_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  _QWORD *v124;
  int v125;
  int v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  _QWORD *v130;
  uint64_t v131;
  int v132;
  const float *v133;
  uint64_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  _QWORD *v138;
  int v139;
  int v140;
  uint64_t v141;
  unsigned int v142;
  unsigned int v143;
  _QWORD *v144;
  uint64_t v145;
  int v146;
  const float *v147;
  uint64_t v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  _QWORD *v152;
  int v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  unsigned int v157;
  _QWORD *v158;
  uint64_t v159;
  int v160;
  const float *v161;
  uint64_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  _QWORD *v166;
  __int32 v167;
  int v168;
  uint64_t v169;
  unsigned int v170;
  unsigned int v171;
  _QWORD *v172;
  uint64_t v173;
  const float *v174;
  uint64_t v175;
  int v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  _QWORD *v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  _QWORD *v186;
  uint64_t v187;
  int v188;
  const float *v189;
  uint64_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  _QWORD *v194;
  int v195;
  int v196;
  uint64_t v197;
  unsigned int v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  int v202;
  const float *v203;
  uint64_t v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  int v216;
  const float *v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  int v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  const float *v231;
  uint64_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  int v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  int v258;
  const float *v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  __int32 v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  const float *v286;
  uint64_t v287;
  int v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  int v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  int v314;
  const float *v315;
  uint64_t v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  int v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  int v342;
  const float *v343;
  uint64_t v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  int v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  int v370;
  const float *v371;
  uint64_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  __int32 v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  const float *v398;
  uint64_t v399;
  int v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  int v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  int v426;
  const float *v427;
  uint64_t v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  int v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  int v454;
  const float *v455;
  uint64_t v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _BYTE v474[12];
  int32x2_t v475;
  int v476;
  int32x2_t *v477;
  float32x2x3_t v478;
  float32x2x3_t v479;
  float32x2x3_t v480;
  float32x2x3_t v481;
  float32x2x3_t v482;
  float32x2x3_t v483;
  float32x2x3_t v484;
  float32x2x3_t v485;
  float32x2x3_t v486;
  float32x2x3_t v487;
  float32x2x3_t v488;
  float32x2x3_t v489;
  float32x2x3_t v490;
  float32x2x3_t v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;

  v12 = *a1;
  a4.i64[0] = 0x300000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000005);
  *(_QWORD *)v474 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1652);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v478 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v24.f32[0]), v478.val[1], *(float32x2_t *)v24.f32, 1), v478.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v25.f32[0]), v478.val[1], *(float32x2_t *)v25.f32, 1), v478.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  a4.i64[0] = 0x300000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000006);
  *(_QWORD *)v474 = a3.i64[0];
  v27 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v27;
  v28 = *(_DWORD *)(v26[1] + 1656);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = *(_DWORD *)(*v32 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v34);
      a4.f32[1] = (float)(a3.i32[1] / v34);
      a4.f32[2] = (float)(v27 / v34);
      v35 = (const float *)(*v32 + 1656);
      v479 = vld3_f32(v35);
      v36 = *(_QWORD *)(v32[1] + 144);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v38 = vaddq_f32(a4, v37);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v38.f32[0]), v479.val[1], *(float32x2_t *)v38.f32, 1), v479.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v27;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v36);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v39.f32[0]), v479.val[1], *(float32x2_t *)v39.f32, 1), v479.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a4.i64[0] = 0x300000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000007);
  *(_QWORD *)v474 = a3.i64[0];
  v41 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1660);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v480 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v52.f32[0]), v480.val[1], *(float32x2_t *)v52.f32, 1), v480.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v53.f32[0]), v480.val[1], *(float32x2_t *)v53.f32, 1), v480.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  v55 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000004);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v56 = *(_DWORD *)(v54[1] + 1664);
  if (v56 != *(_DWORD *)(*v54 + 272))
  {
    v57 = *(_QWORD *)(v54[2] + 8);
    if ((v56 & 0x10000000) != 0)
      v58 = 0x40000000;
    else
      v58 = 0x80000000;
    if ((v56 & 0x20000000) != 0)
      v59 = v58;
    else
      v59 = v56 & 0xCFFFFFFF;
    if ((v59 & 0x40000000) != 0)
    {
      v60 = *(_QWORD **)v57;
      v61 = *v60;
      v62 = (const float *)(*v60 + 1656);
      v63 = *(_QWORD *)(v60[1] + 144);
      LODWORD(v60) = *(_DWORD *)(*v60 + 8);
      v64 = a3.i32[1];
      a5.f32[0] = (float)(v55 / (int)v60);
      a5.f32[1] = (float)(a3.i32[0] / (int)v60);
      a5.f32[2] = (float)(a3.i32[1] / (int)v60);
      v65.i64[0] = 0x3F0000003F000000;
      v65.i64[1] = 0x3F0000003F000000;
      v507 = vld3_f32(v62);
      v66 = vaddq_f32(a5, v65);
      *(int32x2_t *)v66.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v66.f32[0]), v507.val[1], *(float32x2_t *)v66.f32, 1), v507.val[2], v66, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v66.f32;
      v476 = 0;
      v66.i32[0] = v55;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v66.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v64;
      v67 = vmulq_n_f32(vaddq_f32(a3, v65), *(float *)&v63);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v61 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v67.f32[0]), v507.val[1], *(float32x2_t *)v67.f32, 1), v507.val[2], v67, 2);
    }
    else if (!(v59 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v57 + 16), *(_QWORD *)(*(_QWORD *)(v57 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v57 + 8) + 2448) + 520 * v59, *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v68 = *a1;
  a4.i64[0] = 0x400000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000001);
  *(_QWORD *)v474 = a3.i64[0];
  v69 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v69;
  v70 = *(_DWORD *)(v68[1] + 1668);
  if (v70 != *(_DWORD *)(*v68 + 272))
  {
    v71 = *(_QWORD *)(v68[2] + 8);
    if ((v70 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v70 & 0xCFFFFFFF;
    if ((v73 & 0x40000000) != 0)
    {
      v74 = *(_QWORD **)v71;
      v75 = *v74;
      v76 = *(_DWORD *)(*v74 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v76);
      a4.f32[1] = (float)(a3.i32[1] / v76);
      a4.f32[2] = (float)(v69 / v76);
      v77 = (const float *)(*v74 + 1656);
      v481 = vld3_f32(v77);
      v78 = *(_QWORD *)(v74[1] + 144);
      v79.i64[0] = 0x3F0000003F000000;
      v79.i64[1] = 0x3F0000003F000000;
      v80 = vaddq_f32(a4, v79);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v80.f32[0]), v481.val[1], *(float32x2_t *)v80.f32, 1), v481.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v69;
      v81 = vmulq_n_f32(vaddq_f32(a3, v79), *(float *)&v78);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v75 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v81.f32[0]), v481.val[1], *(float32x2_t *)v81.f32, 1), v481.val[2], v81, 2);
    }
    else if (!(v73 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v71 + 16), *(_QWORD *)(*(_QWORD *)(v71 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v71 + 8) + 2448) + 520 * v73, *(_QWORD *)(*(_QWORD *)(v71 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v82 = *a1;
  a4.i64[0] = 0x400000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000002);
  *(_QWORD *)v474 = a3.i64[0];
  v83 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v83;
  v84 = *(_DWORD *)(v82[1] + 1672);
  if (v84 != *(_DWORD *)(*v82 + 272))
  {
    v85 = *(_QWORD *)(v82[2] + 8);
    if ((v84 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v84 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v84 & 0xCFFFFFFF;
    if ((v87 & 0x40000000) != 0)
    {
      v88 = *(_QWORD **)v85;
      v89 = *v88;
      v90 = *(_DWORD *)(*v88 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v90);
      a4.f32[1] = (float)(a3.i32[1] / v90);
      a4.f32[2] = (float)(v83 / v90);
      v91 = (const float *)(*v88 + 1656);
      v482 = vld3_f32(v91);
      v92 = *(_QWORD *)(v88[1] + 144);
      v93.i64[0] = 0x3F0000003F000000;
      v93.i64[1] = 0x3F0000003F000000;
      v94 = vaddq_f32(a4, v93);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v94.f32[0]), v482.val[1], *(float32x2_t *)v94.f32, 1), v482.val[2], v94, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v83;
      v95 = vmulq_n_f32(vaddq_f32(a3, v93), *(float *)&v92);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v89 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v95.f32[0]), v482.val[1], *(float32x2_t *)v95.f32, 1), v482.val[2], v95, 2);
    }
    else if (!(v87 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v85 + 16), *(_QWORD *)(*(_QWORD *)(v85 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v85 + 8) + 2448) + 520 * v87, *(_QWORD *)(*(_QWORD *)(v85 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v96 = *a1;
  a4.i64[0] = 0x400000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000003);
  *(_QWORD *)v474 = a3.i64[0];
  v97 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v97;
  v98 = *(_DWORD *)(v96[1] + 1676);
  if (v98 != *(_DWORD *)(*v96 + 272))
  {
    v99 = *(_QWORD *)(v96[2] + 8);
    if ((v98 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v101 = v100;
    else
      v101 = v98 & 0xCFFFFFFF;
    if ((v101 & 0x40000000) != 0)
    {
      v102 = *(_QWORD **)v99;
      v103 = *v102;
      v104 = *(_DWORD *)(*v102 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v104);
      a4.f32[1] = (float)(a3.i32[1] / v104);
      a4.f32[2] = (float)(v97 / v104);
      v105 = (const float *)(*v102 + 1656);
      v483 = vld3_f32(v105);
      v106 = *(_QWORD *)(v102[1] + 144);
      v107.i64[0] = 0x3F0000003F000000;
      v107.i64[1] = 0x3F0000003F000000;
      v108 = vaddq_f32(a4, v107);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v108.f32[0]), v483.val[1], *(float32x2_t *)v108.f32, 1), v483.val[2], v108, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v97;
      v109 = vmulq_n_f32(vaddq_f32(a3, v107), *(float *)&v106);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v103 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v109.f32[0]), v483.val[1], *(float32x2_t *)v109.f32, 1), v483.val[2], v109, 2);
    }
    else if (!(v101 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v99 + 16), *(_QWORD *)(*(_QWORD *)(v99 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v99 + 8) + 2448) + 520 * v101, *(_QWORD *)(*(_QWORD *)(v99 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v110 = *a1;
  a4.i64[0] = 0x400000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000004);
  *(_QWORD *)v474 = a3.i64[0];
  v111 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v111;
  v112 = *(_DWORD *)(v110[1] + 1680);
  if (v112 != *(_DWORD *)(*v110 + 272))
  {
    v113 = *(_QWORD *)(v110[2] + 8);
    if ((v112 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v115 = v114;
    else
      v115 = v112 & 0xCFFFFFFF;
    if ((v115 & 0x40000000) != 0)
    {
      v116 = *(_QWORD **)v113;
      v117 = *v116;
      v118 = *(_DWORD *)(*v116 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v118);
      a4.f32[1] = (float)(a3.i32[1] / v118);
      a4.f32[2] = (float)(v111 / v118);
      v119 = (const float *)(*v116 + 1656);
      v484 = vld3_f32(v119);
      v120 = *(_QWORD *)(v116[1] + 144);
      v121.i64[0] = 0x3F0000003F000000;
      v121.i64[1] = 0x3F0000003F000000;
      v122 = vaddq_f32(a4, v121);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v122.f32[0]), v484.val[1], *(float32x2_t *)v122.f32, 1), v484.val[2], v122, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v111;
      v123 = vmulq_n_f32(vaddq_f32(a3, v121), *(float *)&v120);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v117 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v123.f32[0]), v484.val[1], *(float32x2_t *)v123.f32, 1), v484.val[2], v123, 2);
    }
    else if (!(v115 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v113 + 16), *(_QWORD *)(*(_QWORD *)(v113 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v113 + 8) + 2448) + 520 * v115, *(_QWORD *)(*(_QWORD *)(v113 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v124 = *a1;
  a4.i64[0] = 0x400000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000005);
  *(_QWORD *)v474 = a3.i64[0];
  v125 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v125;
  v126 = *(_DWORD *)(v124[1] + 1684);
  if (v126 != *(_DWORD *)(*v124 + 272))
  {
    v127 = *(_QWORD *)(v124[2] + 8);
    if ((v126 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v126 & 0x20000000) != 0)
      v129 = v128;
    else
      v129 = v126 & 0xCFFFFFFF;
    if ((v129 & 0x40000000) != 0)
    {
      v130 = *(_QWORD **)v127;
      v131 = *v130;
      v132 = *(_DWORD *)(*v130 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v132);
      a4.f32[1] = (float)(a3.i32[1] / v132);
      a4.f32[2] = (float)(v125 / v132);
      v133 = (const float *)(*v130 + 1656);
      v485 = vld3_f32(v133);
      v134 = *(_QWORD *)(v130[1] + 144);
      v135.i64[0] = 0x3F0000003F000000;
      v135.i64[1] = 0x3F0000003F000000;
      v136 = vaddq_f32(a4, v135);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v136.f32[0]), v485.val[1], *(float32x2_t *)v136.f32, 1), v485.val[2], v136, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v125;
      v137 = vmulq_n_f32(vaddq_f32(a3, v135), *(float *)&v134);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v131 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v137.f32[0]), v485.val[1], *(float32x2_t *)v137.f32, 1), v485.val[2], v137, 2);
    }
    else if (!(v129 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v127 + 16), *(_QWORD *)(*(_QWORD *)(v127 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v127 + 8) + 2448) + 520 * v129, *(_QWORD *)(*(_QWORD *)(v127 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v138 = *a1;
  a4.i64[0] = 0x400000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000006);
  *(_QWORD *)v474 = a3.i64[0];
  v139 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v139;
  v140 = *(_DWORD *)(v138[1] + 1688);
  if (v140 != *(_DWORD *)(*v138 + 272))
  {
    v141 = *(_QWORD *)(v138[2] + 8);
    if ((v140 & 0x10000000) != 0)
      v142 = 0x40000000;
    else
      v142 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v143 = v142;
    else
      v143 = v140 & 0xCFFFFFFF;
    if ((v143 & 0x40000000) != 0)
    {
      v144 = *(_QWORD **)v141;
      v145 = *v144;
      v146 = *(_DWORD *)(*v144 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v146);
      a4.f32[1] = (float)(a3.i32[1] / v146);
      a4.f32[2] = (float)(v139 / v146);
      v147 = (const float *)(*v144 + 1656);
      v486 = vld3_f32(v147);
      v148 = *(_QWORD *)(v144[1] + 144);
      v149.i64[0] = 0x3F0000003F000000;
      v149.i64[1] = 0x3F0000003F000000;
      v150 = vaddq_f32(a4, v149);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v150.f32[0]), v486.val[1], *(float32x2_t *)v150.f32, 1), v486.val[2], v150, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v139;
      v151 = vmulq_n_f32(vaddq_f32(a3, v149), *(float *)&v148);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v145 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v151.f32[0]), v486.val[1], *(float32x2_t *)v151.f32, 1), v486.val[2], v151, 2);
    }
    else if (!(v143 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v141 + 16), *(_QWORD *)(*(_QWORD *)(v141 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v141 + 8) + 2448) + 520 * v143, *(_QWORD *)(*(_QWORD *)(v141 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v152 = *a1;
  a4.i64[0] = 0x400000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000007);
  *(_QWORD *)v474 = a3.i64[0];
  v153 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v153;
  v154 = *(_DWORD *)(v152[1] + 1692);
  if (v154 != *(_DWORD *)(*v152 + 272))
  {
    v155 = *(_QWORD *)(v152[2] + 8);
    if ((v154 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v157 = v156;
    else
      v157 = v154 & 0xCFFFFFFF;
    if ((v157 & 0x40000000) != 0)
    {
      v158 = *(_QWORD **)v155;
      v159 = *v158;
      v160 = *(_DWORD *)(*v158 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v160);
      a4.f32[1] = (float)(a3.i32[1] / v160);
      a4.f32[2] = (float)(v153 / v160);
      v161 = (const float *)(*v158 + 1656);
      v487 = vld3_f32(v161);
      v162 = *(_QWORD *)(v158[1] + 144);
      v163.i64[0] = 0x3F0000003F000000;
      v163.i64[1] = 0x3F0000003F000000;
      v164 = vaddq_f32(a4, v163);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v164.f32[0]), v487.val[1], *(float32x2_t *)v164.f32, 1), v487.val[2], v164, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v153;
      v165 = vmulq_n_f32(vaddq_f32(a3, v163), *(float *)&v162);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v159 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v165.f32[0]), v487.val[1], *(float32x2_t *)v165.f32, 1), v487.val[2], v165, 2);
    }
    else if (!(v157 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v155 + 16), *(_QWORD *)(*(_QWORD *)(v155 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v155 + 8) + 2448) + 520 * v157, *(_QWORD *)(*(_QWORD *)(v155 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v166 = *a1;
  v167 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000005);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v168 = *(_DWORD *)(v166[1] + 1696);
  if (v168 != *(_DWORD *)(*v166 + 272))
  {
    v169 = *(_QWORD *)(v166[2] + 8);
    if ((v168 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v171 = v170;
    else
      v171 = v168 & 0xCFFFFFFF;
    if ((v171 & 0x40000000) != 0)
    {
      v172 = *(_QWORD **)v169;
      v173 = *v172;
      v174 = (const float *)(*v172 + 1656);
      v175 = *(_QWORD *)(v172[1] + 144);
      LODWORD(v172) = *(_DWORD *)(*v172 + 8);
      v176 = a3.i32[1];
      a5.f32[0] = (float)(v167 / (int)v172);
      a5.f32[1] = (float)(a3.i32[0] / (int)v172);
      a5.f32[2] = (float)(a3.i32[1] / (int)v172);
      v177.i64[0] = 0x3F0000003F000000;
      v177.i64[1] = 0x3F0000003F000000;
      v508 = vld3_f32(v174);
      v178 = vaddq_f32(a5, v177);
      *(int32x2_t *)v178.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v178.f32[0]), v508.val[1], *(float32x2_t *)v178.f32, 1), v508.val[2], v178, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v178.f32;
      v476 = 0;
      v178.i32[0] = v167;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v178.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v176;
      v179 = vmulq_n_f32(vaddq_f32(a3, v177), *(float *)&v175);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v173 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v179.f32[0]), v508.val[1], *(float32x2_t *)v179.f32, 1), v508.val[2], v179, 2);
    }
    else if (!(v171 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v169 + 16), *(_QWORD *)(*(_QWORD *)(v169 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v169 + 8) + 2448) + 520 * v171, *(_QWORD *)(*(_QWORD *)(v169 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v180 = *a1;
  a4.i64[0] = 0x500000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000001);
  *(_QWORD *)v474 = a3.i64[0];
  v181 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v181;
  v182 = *(_DWORD *)(v180[1] + 1700);
  if (v182 != *(_DWORD *)(*v180 + 272))
  {
    v183 = *(_QWORD *)(v180[2] + 8);
    if ((v182 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v185 = v184;
    else
      v185 = v182 & 0xCFFFFFFF;
    if ((v185 & 0x40000000) != 0)
    {
      v186 = *(_QWORD **)v183;
      v187 = *v186;
      v188 = *(_DWORD *)(*v186 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v188);
      a4.f32[1] = (float)(a3.i32[1] / v188);
      a4.f32[2] = (float)(v181 / v188);
      v189 = (const float *)(*v186 + 1656);
      v488 = vld3_f32(v189);
      v190 = *(_QWORD *)(v186[1] + 144);
      v191.i64[0] = 0x3F0000003F000000;
      v191.i64[1] = 0x3F0000003F000000;
      v192 = vaddq_f32(a4, v191);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v192.f32[0]), v488.val[1], *(float32x2_t *)v192.f32, 1), v488.val[2], v192, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v181;
      v193 = vmulq_n_f32(vaddq_f32(a3, v191), *(float *)&v190);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v187 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v193.f32[0]), v488.val[1], *(float32x2_t *)v193.f32, 1), v488.val[2], v193, 2);
    }
    else if (!(v185 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v183 + 16), *(_QWORD *)(*(_QWORD *)(v183 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v183 + 8) + 2448) + 520 * v185, *(_QWORD *)(*(_QWORD *)(v183 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v194 = *a1;
  a4.i64[0] = 0x500000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000002);
  *(_QWORD *)v474 = a3.i64[0];
  v195 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v195;
  v196 = *(_DWORD *)(v194[1] + 1704);
  if (v196 != *(_DWORD *)(*v194 + 272))
  {
    v197 = *(_QWORD *)(v194[2] + 8);
    if ((v196 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v199 = v198;
    else
      v199 = v196 & 0xCFFFFFFF;
    if ((v199 & 0x40000000) != 0)
    {
      v200 = *(_QWORD **)v197;
      v201 = *v200;
      v202 = *(_DWORD *)(*v200 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v202);
      a4.f32[1] = (float)(a3.i32[1] / v202);
      a4.f32[2] = (float)(v195 / v202);
      v203 = (const float *)(*v200 + 1656);
      v489 = vld3_f32(v203);
      v204 = *(_QWORD *)(v200[1] + 144);
      v205.i64[0] = 0x3F0000003F000000;
      v205.i64[1] = 0x3F0000003F000000;
      v206 = vaddq_f32(a4, v205);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v206.f32[0]), v489.val[1], *(float32x2_t *)v206.f32, 1), v489.val[2], v206, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v195;
      v207 = vmulq_n_f32(vaddq_f32(a3, v205), *(float *)&v204);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v201 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v207.f32[0]), v489.val[1], *(float32x2_t *)v207.f32, 1), v489.val[2], v207, 2);
    }
    else if (!(v199 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v197 + 16), *(_QWORD *)(*(_QWORD *)(v197 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v197 + 8) + 2448) + 520 * v199, *(_QWORD *)(*(_QWORD *)(v197 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v208 = *a1;
  a4.i64[0] = 0x500000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000003);
  *(_QWORD *)v474 = a3.i64[0];
  v209 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v209;
  v210 = *(_DWORD *)(v208[1] + 1708);
  if (v210 != *(_DWORD *)(*v208 + 272))
  {
    v211 = *(_QWORD *)(v208[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = *(_DWORD *)(*v214 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v216);
      a4.f32[1] = (float)(a3.i32[1] / v216);
      a4.f32[2] = (float)(v209 / v216);
      v217 = (const float *)(*v214 + 1656);
      v490 = vld3_f32(v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a4, v219);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v220.f32[0]), v490.val[1], *(float32x2_t *)v220.f32, 1), v490.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(a3, v219), *(float *)&v218);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v221.f32[0]), v490.val[1], *(float32x2_t *)v221.f32, 1), v490.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  a4.i64[0] = 0x500000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000004);
  *(_QWORD *)v474 = a3.i64[0];
  v223 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v223;
  v224 = *(_DWORD *)(v222[1] + 1712);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = *(_DWORD *)(*v228 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v230);
      a4.f32[1] = (float)(a3.i32[1] / v230);
      a4.f32[2] = (float)(v223 / v230);
      v231 = (const float *)(*v228 + 1656);
      v491 = vld3_f32(v231);
      v232 = *(_QWORD *)(v228[1] + 144);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v234 = vaddq_f32(a4, v233);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v234.f32[0]), v491.val[1], *(float32x2_t *)v234.f32, 1), v491.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v223;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v232);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v235.f32[0]), v491.val[1], *(float32x2_t *)v235.f32, 1), v491.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x500000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000005);
  *(_QWORD *)v474 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1716);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v492 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v248.f32[0]), v492.val[1], *(float32x2_t *)v248.f32, 1), v492.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v249.f32[0]), v492.val[1], *(float32x2_t *)v249.f32, 1), v492.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  a4.i64[0] = 0x500000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000006);
  *(_QWORD *)v474 = a3.i64[0];
  v251 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v251;
  v252 = *(_DWORD *)(v250[1] + 1720);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = *(_DWORD *)(*v256 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v258);
      a4.f32[1] = (float)(a3.i32[1] / v258);
      a4.f32[2] = (float)(v251 / v258);
      v259 = (const float *)(*v256 + 1656);
      v493 = vld3_f32(v259);
      v260 = *(_QWORD *)(v256[1] + 144);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v262 = vaddq_f32(a4, v261);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v262.f32[0]), v493.val[1], *(float32x2_t *)v262.f32, 1), v493.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v251;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v260);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v263.f32[0]), v493.val[1], *(float32x2_t *)v263.f32, 1), v493.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x500000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000007);
  *(_QWORD *)v474 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1724);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v494 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v276.f32[0]), v494.val[1], *(float32x2_t *)v276.f32, 1), v494.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v277.f32[0]), v494.val[1], *(float32x2_t *)v277.f32, 1), v494.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  v279 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  a4.i64[0] = 0x600000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000006);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v280 = *(_DWORD *)(v278[1] + 1728);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = (const float *)(*v284 + 1656);
      v287 = *(_QWORD *)(v284[1] + 144);
      LODWORD(v284) = *(_DWORD *)(*v284 + 8);
      v288 = a3.i32[1];
      a5.f32[0] = (float)(v279 / (int)v284);
      a5.f32[1] = (float)(a3.i32[0] / (int)v284);
      a5.f32[2] = (float)(a3.i32[1] / (int)v284);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v509 = vld3_f32(v286);
      v290 = vaddq_f32(a5, v289);
      *(int32x2_t *)v290.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v290.f32[0]), v509.val[1], *(float32x2_t *)v290.f32, 1), v509.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v290.f32;
      v476 = 0;
      v290.i32[0] = v279;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v290.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v288;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v287);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v291.f32[0]), v509.val[1], *(float32x2_t *)v291.f32, 1), v509.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  a4.i64[0] = 0x600000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000001);
  *(_QWORD *)v474 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1732);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v495 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v304.f32[0]), v495.val[1], *(float32x2_t *)v304.f32, 1), v495.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v305.f32[0]), v495.val[1], *(float32x2_t *)v305.f32, 1), v495.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  a4.i64[0] = 0x600000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000002);
  *(_QWORD *)v474 = a3.i64[0];
  v307 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v307;
  v308 = *(_DWORD *)(v306[1] + 1736);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = *(_DWORD *)(*v312 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v314);
      a4.f32[1] = (float)(a3.i32[1] / v314);
      a4.f32[2] = (float)(v307 / v314);
      v315 = (const float *)(*v312 + 1656);
      v496 = vld3_f32(v315);
      v316 = *(_QWORD *)(v312[1] + 144);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v318 = vaddq_f32(a4, v317);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v318.f32[0]), v496.val[1], *(float32x2_t *)v318.f32, 1), v496.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v307;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v316);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v319.f32[0]), v496.val[1], *(float32x2_t *)v319.f32, 1), v496.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x600000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000003);
  *(_QWORD *)v474 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 1740);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v497 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v332.f32[0]), v497.val[1], *(float32x2_t *)v332.f32, 1), v497.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v333.f32[0]), v497.val[1], *(float32x2_t *)v333.f32, 1), v497.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000004);
  *(_QWORD *)v474 = a3.i64[0];
  v335 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v335;
  v336 = *(_DWORD *)(v334[1] + 1744);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = *(_DWORD *)(*v340 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v342);
      a4.f32[1] = (float)(a3.i32[1] / v342);
      a4.f32[2] = (float)(v335 / v342);
      v343 = (const float *)(*v340 + 1656);
      v498 = vld3_f32(v343);
      v344 = *(_QWORD *)(v340[1] + 144);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v346 = vaddq_f32(a4, v345);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v346.f32[0]), v498.val[1], *(float32x2_t *)v346.f32, 1), v498.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v335;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v344);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v347.f32[0]), v498.val[1], *(float32x2_t *)v347.f32, 1), v498.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000005);
  *(_QWORD *)v474 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 1748);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v499 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v360.f32[0]), v499.val[1], *(float32x2_t *)v360.f32, 1), v499.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v361.f32[0]), v499.val[1], *(float32x2_t *)v361.f32, 1), v499.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  a4.i64[0] = 0x600000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000006);
  *(_QWORD *)v474 = a3.i64[0];
  v363 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v363;
  v364 = *(_DWORD *)(v362[1] + 1752);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = *(_DWORD *)(*v368 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v370);
      a4.f32[1] = (float)(a3.i32[1] / v370);
      a4.f32[2] = (float)(v363 / v370);
      v371 = (const float *)(*v368 + 1656);
      v500 = vld3_f32(v371);
      v372 = *(_QWORD *)(v368[1] + 144);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v374 = vaddq_f32(a4, v373);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v374.f32[0]), v500.val[1], *(float32x2_t *)v374.f32, 1), v500.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v363;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v372);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v375.f32[0]), v500.val[1], *(float32x2_t *)v375.f32, 1), v500.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000007);
  *(_QWORD *)v474 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 1756);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v501 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v388.f32[0]), v501.val[1], *(float32x2_t *)v388.f32, 1), v501.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v389.f32[0]), v501.val[1], *(float32x2_t *)v389.f32, 1), v501.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  v391 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x600000007);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v392 = *(_DWORD *)(v390[1] + 1760);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = (const float *)(*v396 + 1656);
      v399 = *(_QWORD *)(v396[1] + 144);
      LODWORD(v396) = *(_DWORD *)(*v396 + 8);
      v400 = a3.i32[1];
      a5.f32[0] = (float)(v391 / (int)v396);
      a5.f32[1] = (float)(a3.i32[0] / (int)v396);
      a5.f32[2] = (float)(a3.i32[1] / (int)v396);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v510 = vld3_f32(v398);
      v402 = vaddq_f32(a5, v401);
      *(int32x2_t *)v402.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v402.f32[0]), v510.val[1], *(float32x2_t *)v402.f32, 1), v510.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v402.f32;
      v476 = 0;
      v402.i32[0] = v391;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v402.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v400;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v399);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v403.f32[0]), v510.val[1], *(float32x2_t *)v403.f32, 1), v510.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x700000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000001);
  *(_QWORD *)v474 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 1764);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v502 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v416.f32[0]), v502.val[1], *(float32x2_t *)v416.f32, 1), v502.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v417.f32[0]), v502.val[1], *(float32x2_t *)v417.f32, 1), v502.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  a4.i64[0] = 0x700000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000002);
  *(_QWORD *)v474 = a3.i64[0];
  v419 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v419;
  v420 = *(_DWORD *)(v418[1] + 1768);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = *(_DWORD *)(*v424 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v426);
      a4.f32[1] = (float)(a3.i32[1] / v426);
      a4.f32[2] = (float)(v419 / v426);
      v427 = (const float *)(*v424 + 1656);
      v503 = vld3_f32(v427);
      v428 = *(_QWORD *)(v424[1] + 144);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v430 = vaddq_f32(a4, v429);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v430.f32[0]), v503.val[1], *(float32x2_t *)v430.f32, 1), v503.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v419;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v428);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v431.f32[0]), v503.val[1], *(float32x2_t *)v431.f32, 1), v503.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  a4.i64[0] = 0x700000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000003);
  *(_QWORD *)v474 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 1772);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v504 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v444.f32[0]), v504.val[1], *(float32x2_t *)v444.f32, 1), v504.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v445.f32[0]), v504.val[1], *(float32x2_t *)v445.f32, 1), v504.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  a4.i64[0] = 0x700000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000004);
  *(_QWORD *)v474 = a3.i64[0];
  v447 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v447;
  v448 = *(_DWORD *)(v446[1] + 1776);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = *(_DWORD *)(*v452 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v454);
      a4.f32[1] = (float)(a3.i32[1] / v454);
      a4.f32[2] = (float)(v447 / v454);
      v455 = (const float *)(*v452 + 1656);
      v505 = vld3_f32(v455);
      v456 = *(_QWORD *)(v452[1] + 144);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v458 = vaddq_f32(a4, v457);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v458.f32[0]), v505.val[1], *(float32x2_t *)v458.f32, 1), v505.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v447;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v456);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v459.f32[0]), v505.val[1], *(float32x2_t *)v459.f32, 1), v505.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x700000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000005);
  *(_QWORD *)v474 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v474[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 1780);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v506 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v472.f32[0]), v506.val[1], *(float32x2_t *)v472.f32, 1), v506.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v473.f32[0]), v506.val[1], *(float32x2_t *)v473.f32, 1), v506.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  sub_2239DC1B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239DC1B4(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  const float *v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  signed int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  _QWORD *v62;
  uint64_t v63;
  const float *v64;
  int v65;
  uint64_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  _QWORD *v70;
  signed int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  _QWORD *v78;
  uint64_t v79;
  const float *v80;
  int v81;
  uint64_t v82;
  float32x4_t v83;
  float32x4_t v84;
  float32x4_t v85;
  _QWORD *v86;
  signed int v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  unsigned int v92;
  unsigned int v93;
  _QWORD *v94;
  uint64_t v95;
  const float *v96;
  int v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  _QWORD *v102;
  signed int v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  unsigned int v108;
  unsigned int v109;
  _QWORD *v110;
  uint64_t v111;
  const float *v112;
  int v113;
  uint64_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  _QWORD *v118;
  signed int v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  unsigned int v124;
  unsigned int v125;
  _QWORD *v126;
  uint64_t v127;
  const float *v128;
  int v129;
  uint64_t v130;
  float32x4_t v131;
  float32x4_t v132;
  float32x4_t v133;
  _QWORD *v134;
  signed int v135;
  int v136;
  int v137;
  int v138;
  uint64_t v139;
  unsigned int v140;
  unsigned int v141;
  _QWORD *v142;
  uint64_t v143;
  const float *v144;
  int v145;
  uint64_t v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  _QWORD *v150;
  signed int v151;
  int v152;
  int v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  unsigned int v157;
  _QWORD *v158;
  uint64_t v159;
  const float *v160;
  int v161;
  uint64_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  _QWORD *v166;
  __int32 v167;
  int v168;
  uint64_t v169;
  unsigned int v170;
  unsigned int v171;
  _QWORD *v172;
  uint64_t v173;
  const float *v174;
  uint64_t v175;
  int v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  _QWORD *v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  _QWORD *v186;
  uint64_t v187;
  int v188;
  const float *v189;
  uint64_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  _QWORD *v194;
  int v195;
  int v196;
  uint64_t v197;
  unsigned int v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  int v202;
  const float *v203;
  uint64_t v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  int v216;
  const float *v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  int v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  const float *v231;
  uint64_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  int v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  int v258;
  const float *v259;
  uint64_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  __int32 v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  const float *v286;
  uint64_t v287;
  int v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  int v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  int v314;
  const float *v315;
  uint64_t v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  int v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  int v342;
  const float *v343;
  uint64_t v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  int v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  int v370;
  const float *v371;
  uint64_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  __int32 v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  const float *v398;
  uint64_t v399;
  int v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  int v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  int v426;
  const float *v427;
  uint64_t v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  int v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  int v454;
  const float *v455;
  uint64_t v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _QWORD *v474;
  int v475;
  int v476;
  uint64_t v477;
  unsigned int v478;
  unsigned int v479;
  _QWORD *v480;
  uint64_t v481;
  int v482;
  const float *v483;
  uint64_t v484;
  float32x4_t v485;
  float32x4_t v486;
  float32x4_t v487;
  _BYTE v488[12];
  int32x2_t v489;
  int v490;
  int32x2_t *v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;
  float32x2x3_t v511;
  float32x2x3_t v512;
  float32x2x3_t v513;
  float32x2x3_t v514;
  float32x2x3_t v515;
  float32x2x3_t v516;
  float32x2x3_t v517;
  float32x2x3_t v518;
  float32x2x3_t v519;
  float32x2x3_t v520;
  float32x2x3_t v521;
  float32x2x3_t v522;
  float32x2x3_t v523;
  float32x2x3_t v524;

  v12 = *a1;
  a4.i64[0] = 0x700000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000006);
  *(_QWORD *)v488 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1784);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v492 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v24.f32[0]), v492.val[1], *(float32x2_t *)v24.f32, 1), v492.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v25.f32[0]), v492.val[1], *(float32x2_t *)v25.f32, 1), v492.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  a4.i64[0] = 0x700000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000007);
  *(_QWORD *)v488 = a3.i64[0];
  v27 = *(_DWORD *)(a2 + 8) + 6;
  *(_DWORD *)&v488[8] = v27;
  v28 = *(_DWORD *)(v26[1] + 1788);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = *(_DWORD *)(*v32 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v34);
      a4.f32[1] = (float)(a3.i32[1] / v34);
      a4.f32[2] = (float)(v27 / v34);
      v35 = (const float *)(*v32 + 1656);
      v493 = vld3_f32(v35);
      v36 = *(_QWORD *)(v32[1] + 144);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v38 = vaddq_f32(a4, v37);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v38.f32[0]), v493.val[1], *(float32x2_t *)v38.f32, 1), v493.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v27;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v36);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v39.f32[0]), v493.val[1], *(float32x2_t *)v39.f32, 1), v493.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a3.i64[0] = *(_QWORD *)a2;
  *(_QWORD *)v488 = *(_QWORD *)a2;
  v41 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1792);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v494 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v52.f32[0]), v494.val[1], *(float32x2_t *)v52.f32, 1), v494.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v53.f32[0]), v494.val[1], *(float32x2_t *)v53.f32, 1), v494.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  v55 = *(_DWORD *)(a2 + 4);
  v56 = *(_DWORD *)a2 + 1;
  *(_DWORD *)v488 = v56;
  *(_DWORD *)&v488[4] = v55;
  v57 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v57;
  v58 = *(_DWORD *)(v54[1] + 1796);
  if (v58 != *(_DWORD *)(*v54 + 272))
  {
    v59 = *(_QWORD *)(v54[2] + 8);
    if ((v58 & 0x10000000) != 0)
      v60 = 0x40000000;
    else
      v60 = 0x80000000;
    if ((v58 & 0x20000000) != 0)
      v61 = v60;
    else
      v61 = v58 & 0xCFFFFFFF;
    if ((v61 & 0x40000000) != 0)
    {
      v62 = *(_QWORD **)v59;
      v63 = *v62;
      v64 = (const float *)(*v62 + 1656);
      v65 = *(_DWORD *)(*v62 + 8);
      a3.f32[0] = (float)(v56 / v65);
      v66 = *(_QWORD *)(v62[1] + 144);
      a3.f32[1] = (float)(v55 / v65);
      a3.f32[2] = (float)(v57 / v65);
      v67.i64[0] = 0x3F0000003F000000;
      v67.i64[1] = 0x3F0000003F000000;
      v68 = vaddq_f32(a3, v67);
      v515 = vld3_f32(v64);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v515.val[0], v68.f32[0]), v515.val[1], *(float32x2_t *)v68.f32, 1), v515.val[2], v68, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v68.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v55, v56));
      v68.f32[2] = (float)v57;
      v69 = vmulq_n_f32(vaddq_f32(v68, v67), *(float *)&v66);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v63 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v515.val[0], v69.f32[0]), v515.val[1], *(float32x2_t *)v69.f32, 1), v515.val[2], v69, 2);
    }
    else if (!(v61 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v59 + 16), *(_QWORD *)(*(_QWORD *)(v59 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v59 + 8) + 2448) + 520 * v61, *(_QWORD *)(*(_QWORD *)(v59 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v70 = *a1;
  v71 = *(_DWORD *)(a2 + 4);
  v72 = *(_DWORD *)a2 + 2;
  *(_DWORD *)v488 = v72;
  *(_DWORD *)&v488[4] = v71;
  v73 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v73;
  v74 = *(_DWORD *)(v70[1] + 1800);
  if (v74 != *(_DWORD *)(*v70 + 272))
  {
    v75 = *(_QWORD *)(v70[2] + 8);
    if ((v74 & 0x10000000) != 0)
      v76 = 0x40000000;
    else
      v76 = 0x80000000;
    if ((v74 & 0x20000000) != 0)
      v77 = v76;
    else
      v77 = v74 & 0xCFFFFFFF;
    if ((v77 & 0x40000000) != 0)
    {
      v78 = *(_QWORD **)v75;
      v79 = *v78;
      v80 = (const float *)(*v78 + 1656);
      v81 = *(_DWORD *)(*v78 + 8);
      a3.f32[0] = (float)(v72 / v81);
      v82 = *(_QWORD *)(v78[1] + 144);
      a3.f32[1] = (float)(v71 / v81);
      a3.f32[2] = (float)(v73 / v81);
      v83.i64[0] = 0x3F0000003F000000;
      v83.i64[1] = 0x3F0000003F000000;
      v84 = vaddq_f32(a3, v83);
      v516 = vld3_f32(v80);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v516.val[0], v84.f32[0]), v516.val[1], *(float32x2_t *)v84.f32, 1), v516.val[2], v84, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v84.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v71, v72));
      v84.f32[2] = (float)v73;
      v85 = vmulq_n_f32(vaddq_f32(v84, v83), *(float *)&v82);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v79 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v516.val[0], v85.f32[0]), v516.val[1], *(float32x2_t *)v85.f32, 1), v516.val[2], v85, 2);
    }
    else if (!(v77 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v75 + 16), *(_QWORD *)(*(_QWORD *)(v75 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v75 + 8) + 2448) + 520 * v77, *(_QWORD *)(*(_QWORD *)(v75 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v86 = *a1;
  v87 = *(_DWORD *)(a2 + 4);
  v88 = *(_DWORD *)a2 + 3;
  *(_DWORD *)v488 = v88;
  *(_DWORD *)&v488[4] = v87;
  v89 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v89;
  v90 = *(_DWORD *)(v86[1] + 1804);
  if (v90 != *(_DWORD *)(*v86 + 272))
  {
    v91 = *(_QWORD *)(v86[2] + 8);
    if ((v90 & 0x10000000) != 0)
      v92 = 0x40000000;
    else
      v92 = 0x80000000;
    if ((v90 & 0x20000000) != 0)
      v93 = v92;
    else
      v93 = v90 & 0xCFFFFFFF;
    if ((v93 & 0x40000000) != 0)
    {
      v94 = *(_QWORD **)v91;
      v95 = *v94;
      v96 = (const float *)(*v94 + 1656);
      v97 = *(_DWORD *)(*v94 + 8);
      a3.f32[0] = (float)(v88 / v97);
      v98 = *(_QWORD *)(v94[1] + 144);
      a3.f32[1] = (float)(v87 / v97);
      a3.f32[2] = (float)(v89 / v97);
      v99.i64[0] = 0x3F0000003F000000;
      v99.i64[1] = 0x3F0000003F000000;
      v100 = vaddq_f32(a3, v99);
      v517 = vld3_f32(v96);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v517.val[0], v100.f32[0]), v517.val[1], *(float32x2_t *)v100.f32, 1), v517.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v100.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v87, v88));
      v100.f32[2] = (float)v89;
      v101 = vmulq_n_f32(vaddq_f32(v100, v99), *(float *)&v98);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v517.val[0], v101.f32[0]), v517.val[1], *(float32x2_t *)v101.f32, 1), v517.val[2], v101, 2);
    }
    else if (!(v93 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v91 + 16), *(_QWORD *)(*(_QWORD *)(v91 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v91 + 8) + 2448) + 520 * v93, *(_QWORD *)(*(_QWORD *)(v91 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v102 = *a1;
  v103 = *(_DWORD *)(a2 + 4);
  v104 = *(_DWORD *)a2 + 4;
  *(_DWORD *)v488 = v104;
  *(_DWORD *)&v488[4] = v103;
  v105 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v105;
  v106 = *(_DWORD *)(v102[1] + 1808);
  if (v106 != *(_DWORD *)(*v102 + 272))
  {
    v107 = *(_QWORD *)(v102[2] + 8);
    if ((v106 & 0x10000000) != 0)
      v108 = 0x40000000;
    else
      v108 = 0x80000000;
    if ((v106 & 0x20000000) != 0)
      v109 = v108;
    else
      v109 = v106 & 0xCFFFFFFF;
    if ((v109 & 0x40000000) != 0)
    {
      v110 = *(_QWORD **)v107;
      v111 = *v110;
      v112 = (const float *)(*v110 + 1656);
      v113 = *(_DWORD *)(*v110 + 8);
      a3.f32[0] = (float)(v104 / v113);
      v114 = *(_QWORD *)(v110[1] + 144);
      a3.f32[1] = (float)(v103 / v113);
      a3.f32[2] = (float)(v105 / v113);
      v115.i64[0] = 0x3F0000003F000000;
      v115.i64[1] = 0x3F0000003F000000;
      v116 = vaddq_f32(a3, v115);
      v518 = vld3_f32(v112);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v518.val[0], v116.f32[0]), v518.val[1], *(float32x2_t *)v116.f32, 1), v518.val[2], v116, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v116.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v103, v104));
      v116.f32[2] = (float)v105;
      v117 = vmulq_n_f32(vaddq_f32(v116, v115), *(float *)&v114);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v111 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v518.val[0], v117.f32[0]), v518.val[1], *(float32x2_t *)v117.f32, 1), v518.val[2], v117, 2);
    }
    else if (!(v109 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v107 + 16), *(_QWORD *)(*(_QWORD *)(v107 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v107 + 8) + 2448) + 520 * v109, *(_QWORD *)(*(_QWORD *)(v107 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v118 = *a1;
  v119 = *(_DWORD *)(a2 + 4);
  v120 = *(_DWORD *)a2 + 5;
  *(_DWORD *)v488 = v120;
  *(_DWORD *)&v488[4] = v119;
  v121 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v121;
  v122 = *(_DWORD *)(v118[1] + 1812);
  if (v122 != *(_DWORD *)(*v118 + 272))
  {
    v123 = *(_QWORD *)(v118[2] + 8);
    if ((v122 & 0x10000000) != 0)
      v124 = 0x40000000;
    else
      v124 = 0x80000000;
    if ((v122 & 0x20000000) != 0)
      v125 = v124;
    else
      v125 = v122 & 0xCFFFFFFF;
    if ((v125 & 0x40000000) != 0)
    {
      v126 = *(_QWORD **)v123;
      v127 = *v126;
      v128 = (const float *)(*v126 + 1656);
      v129 = *(_DWORD *)(*v126 + 8);
      a3.f32[0] = (float)(v120 / v129);
      v130 = *(_QWORD *)(v126[1] + 144);
      a3.f32[1] = (float)(v119 / v129);
      a3.f32[2] = (float)(v121 / v129);
      v131.i64[0] = 0x3F0000003F000000;
      v131.i64[1] = 0x3F0000003F000000;
      v132 = vaddq_f32(a3, v131);
      v519 = vld3_f32(v128);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v519.val[0], v132.f32[0]), v519.val[1], *(float32x2_t *)v132.f32, 1), v519.val[2], v132, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v132.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v119, v120));
      v132.f32[2] = (float)v121;
      v133 = vmulq_n_f32(vaddq_f32(v132, v131), *(float *)&v130);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v127 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v519.val[0], v133.f32[0]), v519.val[1], *(float32x2_t *)v133.f32, 1), v519.val[2], v133, 2);
    }
    else if (!(v125 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v123 + 16), *(_QWORD *)(*(_QWORD *)(v123 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v123 + 8) + 2448) + 520 * v125, *(_QWORD *)(*(_QWORD *)(v123 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v134 = *a1;
  v135 = *(_DWORD *)(a2 + 4);
  v136 = *(_DWORD *)a2 + 6;
  *(_DWORD *)v488 = v136;
  *(_DWORD *)&v488[4] = v135;
  v137 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v137;
  v138 = *(_DWORD *)(v134[1] + 1816);
  if (v138 != *(_DWORD *)(*v134 + 272))
  {
    v139 = *(_QWORD *)(v134[2] + 8);
    if ((v138 & 0x10000000) != 0)
      v140 = 0x40000000;
    else
      v140 = 0x80000000;
    if ((v138 & 0x20000000) != 0)
      v141 = v140;
    else
      v141 = v138 & 0xCFFFFFFF;
    if ((v141 & 0x40000000) != 0)
    {
      v142 = *(_QWORD **)v139;
      v143 = *v142;
      v144 = (const float *)(*v142 + 1656);
      v145 = *(_DWORD *)(*v142 + 8);
      a3.f32[0] = (float)(v136 / v145);
      v146 = *(_QWORD *)(v142[1] + 144);
      a3.f32[1] = (float)(v135 / v145);
      a3.f32[2] = (float)(v137 / v145);
      v147.i64[0] = 0x3F0000003F000000;
      v147.i64[1] = 0x3F0000003F000000;
      v148 = vaddq_f32(a3, v147);
      v520 = vld3_f32(v144);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v520.val[0], v148.f32[0]), v520.val[1], *(float32x2_t *)v148.f32, 1), v520.val[2], v148, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v148.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v135, v136));
      v148.f32[2] = (float)v137;
      v149 = vmulq_n_f32(vaddq_f32(v148, v147), *(float *)&v146);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v143 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v520.val[0], v149.f32[0]), v520.val[1], *(float32x2_t *)v149.f32, 1), v520.val[2], v149, 2);
    }
    else if (!(v141 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v139 + 16), *(_QWORD *)(*(_QWORD *)(v139 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v139 + 8) + 2448) + 520 * v141, *(_QWORD *)(*(_QWORD *)(v139 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v150 = *a1;
  v151 = *(_DWORD *)(a2 + 4);
  v152 = *(_DWORD *)a2 + 7;
  *(_DWORD *)v488 = v152;
  *(_DWORD *)&v488[4] = v151;
  v153 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v153;
  v154 = *(_DWORD *)(v150[1] + 1820);
  if (v154 != *(_DWORD *)(*v150 + 272))
  {
    v155 = *(_QWORD *)(v150[2] + 8);
    if ((v154 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v157 = v156;
    else
      v157 = v154 & 0xCFFFFFFF;
    if ((v157 & 0x40000000) != 0)
    {
      v158 = *(_QWORD **)v155;
      v159 = *v158;
      v160 = (const float *)(*v158 + 1656);
      v161 = *(_DWORD *)(*v158 + 8);
      a3.f32[0] = (float)(v152 / v161);
      v162 = *(_QWORD *)(v158[1] + 144);
      a3.f32[1] = (float)(v151 / v161);
      a3.f32[2] = (float)(v153 / v161);
      v163.i64[0] = 0x3F0000003F000000;
      v163.i64[1] = 0x3F0000003F000000;
      v164 = vaddq_f32(a3, v163);
      v521 = vld3_f32(v160);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v521.val[0], v164.f32[0]), v521.val[1], *(float32x2_t *)v164.f32, 1), v521.val[2], v164, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)v164.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v151, v152));
      v164.f32[2] = (float)v153;
      v165 = vmulq_n_f32(vaddq_f32(v164, v163), *(float *)&v162);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v159 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v521.val[0], v165.f32[0]), v521.val[1], *(float32x2_t *)v165.f32, 1), v521.val[2], v165, 2);
    }
    else if (!(v157 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v155 + 16), *(_QWORD *)(*(_QWORD *)(v155 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v155 + 8) + 2448) + 520 * v157, *(_QWORD *)(*(_QWORD *)(v155 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v166 = *a1;
  v167 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x700000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000001);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v168 = *(_DWORD *)(v166[1] + 1824);
  if (v168 != *(_DWORD *)(*v166 + 272))
  {
    v169 = *(_QWORD *)(v166[2] + 8);
    if ((v168 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v171 = v170;
    else
      v171 = v168 & 0xCFFFFFFF;
    if ((v171 & 0x40000000) != 0)
    {
      v172 = *(_QWORD **)v169;
      v173 = *v172;
      v174 = (const float *)(*v172 + 1656);
      v175 = *(_QWORD *)(v172[1] + 144);
      LODWORD(v172) = *(_DWORD *)(*v172 + 8);
      v176 = a3.i32[1];
      a5.f32[0] = (float)(v167 / (int)v172);
      a5.f32[1] = (float)(a3.i32[0] / (int)v172);
      a5.f32[2] = (float)(a3.i32[1] / (int)v172);
      v177.i64[0] = 0x3F0000003F000000;
      v177.i64[1] = 0x3F0000003F000000;
      v522 = vld3_f32(v174);
      v178 = vaddq_f32(a5, v177);
      *(int32x2_t *)v178.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v522.val[0], v178.f32[0]), v522.val[1], *(float32x2_t *)v178.f32, 1), v522.val[2], v178, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v178.f32;
      v490 = 0;
      v178.i32[0] = v167;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v178.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v176;
      v179 = vmulq_n_f32(vaddq_f32(a3, v177), *(float *)&v175);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v173 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v522.val[0], v179.f32[0]), v522.val[1], *(float32x2_t *)v179.f32, 1), v522.val[2], v179, 2);
    }
    else if (!(v171 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v169 + 16), *(_QWORD *)(*(_QWORD *)(v169 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v169 + 8) + 2448) + 520 * v171, *(_QWORD *)(*(_QWORD *)(v169 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v180 = *a1;
  a4.i64[0] = 0x100000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000001);
  *(_QWORD *)v488 = a3.i64[0];
  v181 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v181;
  v182 = *(_DWORD *)(v180[1] + 1828);
  if (v182 != *(_DWORD *)(*v180 + 272))
  {
    v183 = *(_QWORD *)(v180[2] + 8);
    if ((v182 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v185 = v184;
    else
      v185 = v182 & 0xCFFFFFFF;
    if ((v185 & 0x40000000) != 0)
    {
      v186 = *(_QWORD **)v183;
      v187 = *v186;
      v188 = *(_DWORD *)(*v186 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v188);
      a4.f32[1] = (float)(a3.i32[1] / v188);
      a4.f32[2] = (float)(v181 / v188);
      v189 = (const float *)(*v186 + 1656);
      v495 = vld3_f32(v189);
      v190 = *(_QWORD *)(v186[1] + 144);
      v191.i64[0] = 0x3F0000003F000000;
      v191.i64[1] = 0x3F0000003F000000;
      v192 = vaddq_f32(a4, v191);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v192.f32[0]), v495.val[1], *(float32x2_t *)v192.f32, 1), v495.val[2], v192, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v181;
      v193 = vmulq_n_f32(vaddq_f32(a3, v191), *(float *)&v190);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v187 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v193.f32[0]), v495.val[1], *(float32x2_t *)v193.f32, 1), v495.val[2], v193, 2);
    }
    else if (!(v185 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v183 + 16), *(_QWORD *)(*(_QWORD *)(v183 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v183 + 8) + 2448) + 520 * v185, *(_QWORD *)(*(_QWORD *)(v183 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v194 = *a1;
  a4.i64[0] = 0x100000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000002);
  *(_QWORD *)v488 = a3.i64[0];
  v195 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v195;
  v196 = *(_DWORD *)(v194[1] + 1832);
  if (v196 != *(_DWORD *)(*v194 + 272))
  {
    v197 = *(_QWORD *)(v194[2] + 8);
    if ((v196 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v199 = v198;
    else
      v199 = v196 & 0xCFFFFFFF;
    if ((v199 & 0x40000000) != 0)
    {
      v200 = *(_QWORD **)v197;
      v201 = *v200;
      v202 = *(_DWORD *)(*v200 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v202);
      a4.f32[1] = (float)(a3.i32[1] / v202);
      a4.f32[2] = (float)(v195 / v202);
      v203 = (const float *)(*v200 + 1656);
      v496 = vld3_f32(v203);
      v204 = *(_QWORD *)(v200[1] + 144);
      v205.i64[0] = 0x3F0000003F000000;
      v205.i64[1] = 0x3F0000003F000000;
      v206 = vaddq_f32(a4, v205);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v206.f32[0]), v496.val[1], *(float32x2_t *)v206.f32, 1), v496.val[2], v206, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v195;
      v207 = vmulq_n_f32(vaddq_f32(a3, v205), *(float *)&v204);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v201 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v207.f32[0]), v496.val[1], *(float32x2_t *)v207.f32, 1), v496.val[2], v207, 2);
    }
    else if (!(v199 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v197 + 16), *(_QWORD *)(*(_QWORD *)(v197 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v197 + 8) + 2448) + 520 * v199, *(_QWORD *)(*(_QWORD *)(v197 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v208 = *a1;
  a4.i64[0] = 0x100000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000003);
  *(_QWORD *)v488 = a3.i64[0];
  v209 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v209;
  v210 = *(_DWORD *)(v208[1] + 1836);
  if (v210 != *(_DWORD *)(*v208 + 272))
  {
    v211 = *(_QWORD *)(v208[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = *(_DWORD *)(*v214 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v216);
      a4.f32[1] = (float)(a3.i32[1] / v216);
      a4.f32[2] = (float)(v209 / v216);
      v217 = (const float *)(*v214 + 1656);
      v497 = vld3_f32(v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a4, v219);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v220.f32[0]), v497.val[1], *(float32x2_t *)v220.f32, 1), v497.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(a3, v219), *(float *)&v218);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v221.f32[0]), v497.val[1], *(float32x2_t *)v221.f32, 1), v497.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  a4.i64[0] = 0x100000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000004);
  *(_QWORD *)v488 = a3.i64[0];
  v223 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v223;
  v224 = *(_DWORD *)(v222[1] + 1840);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = *(_DWORD *)(*v228 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v230);
      a4.f32[1] = (float)(a3.i32[1] / v230);
      a4.f32[2] = (float)(v223 / v230);
      v231 = (const float *)(*v228 + 1656);
      v498 = vld3_f32(v231);
      v232 = *(_QWORD *)(v228[1] + 144);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v234 = vaddq_f32(a4, v233);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v234.f32[0]), v498.val[1], *(float32x2_t *)v234.f32, 1), v498.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v223;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v232);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v235.f32[0]), v498.val[1], *(float32x2_t *)v235.f32, 1), v498.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x100000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000005);
  *(_QWORD *)v488 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1844);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v499 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v248.f32[0]), v499.val[1], *(float32x2_t *)v248.f32, 1), v499.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v249.f32[0]), v499.val[1], *(float32x2_t *)v249.f32, 1), v499.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  a4.i64[0] = 0x100000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000006);
  *(_QWORD *)v488 = a3.i64[0];
  v251 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v251;
  v252 = *(_DWORD *)(v250[1] + 1848);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = *(_DWORD *)(*v256 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v258);
      a4.f32[1] = (float)(a3.i32[1] / v258);
      a4.f32[2] = (float)(v251 / v258);
      v259 = (const float *)(*v256 + 1656);
      v500 = vld3_f32(v259);
      v260 = *(_QWORD *)(v256[1] + 144);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v262 = vaddq_f32(a4, v261);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v262.f32[0]), v500.val[1], *(float32x2_t *)v262.f32, 1), v500.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v251;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v260);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v263.f32[0]), v500.val[1], *(float32x2_t *)v263.f32, 1), v500.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x100000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x100000007);
  *(_QWORD *)v488 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1852);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v501 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v276.f32[0]), v501.val[1], *(float32x2_t *)v276.f32, 1), v501.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v277.f32[0]), v501.val[1], *(float32x2_t *)v277.f32, 1), v501.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  v279 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x700000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000002);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v280 = *(_DWORD *)(v278[1] + 1856);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = (const float *)(*v284 + 1656);
      v287 = *(_QWORD *)(v284[1] + 144);
      LODWORD(v284) = *(_DWORD *)(*v284 + 8);
      v288 = a3.i32[1];
      a5.f32[0] = (float)(v279 / (int)v284);
      a5.f32[1] = (float)(a3.i32[0] / (int)v284);
      a5.f32[2] = (float)(a3.i32[1] / (int)v284);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v523 = vld3_f32(v286);
      v290 = vaddq_f32(a5, v289);
      *(int32x2_t *)v290.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v523.val[0], v290.f32[0]), v523.val[1], *(float32x2_t *)v290.f32, 1), v523.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v290.f32;
      v490 = 0;
      v290.i32[0] = v279;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v290.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v288;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v287);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v523.val[0], v291.f32[0]), v523.val[1], *(float32x2_t *)v291.f32, 1), v523.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  a4.i64[0] = 0x200000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000001);
  *(_QWORD *)v488 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1860);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v502 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v304.f32[0]), v502.val[1], *(float32x2_t *)v304.f32, 1), v502.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v305.f32[0]), v502.val[1], *(float32x2_t *)v305.f32, 1), v502.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  a4.i64[0] = 0x200000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000002);
  *(_QWORD *)v488 = a3.i64[0];
  v307 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v307;
  v308 = *(_DWORD *)(v306[1] + 1864);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = *(_DWORD *)(*v312 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v314);
      a4.f32[1] = (float)(a3.i32[1] / v314);
      a4.f32[2] = (float)(v307 / v314);
      v315 = (const float *)(*v312 + 1656);
      v503 = vld3_f32(v315);
      v316 = *(_QWORD *)(v312[1] + 144);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v318 = vaddq_f32(a4, v317);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v318.f32[0]), v503.val[1], *(float32x2_t *)v318.f32, 1), v503.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v307;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v316);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v319.f32[0]), v503.val[1], *(float32x2_t *)v319.f32, 1), v503.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x200000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000003);
  *(_QWORD *)v488 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 1868);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v504 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v332.f32[0]), v504.val[1], *(float32x2_t *)v332.f32, 1), v504.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v333.f32[0]), v504.val[1], *(float32x2_t *)v333.f32, 1), v504.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  a4.i64[0] = 0x200000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000004);
  *(_QWORD *)v488 = a3.i64[0];
  v335 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v335;
  v336 = *(_DWORD *)(v334[1] + 1872);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = *(_DWORD *)(*v340 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v342);
      a4.f32[1] = (float)(a3.i32[1] / v342);
      a4.f32[2] = (float)(v335 / v342);
      v343 = (const float *)(*v340 + 1656);
      v505 = vld3_f32(v343);
      v344 = *(_QWORD *)(v340[1] + 144);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v346 = vaddq_f32(a4, v345);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v346.f32[0]), v505.val[1], *(float32x2_t *)v346.f32, 1), v505.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v335;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v344);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v347.f32[0]), v505.val[1], *(float32x2_t *)v347.f32, 1), v505.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  a4.i64[0] = 0x200000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000005);
  *(_QWORD *)v488 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 1876);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v506 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v360.f32[0]), v506.val[1], *(float32x2_t *)v360.f32, 1), v506.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v361.f32[0]), v506.val[1], *(float32x2_t *)v361.f32, 1), v506.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  a4.i64[0] = 0x200000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000006);
  *(_QWORD *)v488 = a3.i64[0];
  v363 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v363;
  v364 = *(_DWORD *)(v362[1] + 1880);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = *(_DWORD *)(*v368 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v370);
      a4.f32[1] = (float)(a3.i32[1] / v370);
      a4.f32[2] = (float)(v363 / v370);
      v371 = (const float *)(*v368 + 1656);
      v507 = vld3_f32(v371);
      v372 = *(_QWORD *)(v368[1] + 144);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v374 = vaddq_f32(a4, v373);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v374.f32[0]), v507.val[1], *(float32x2_t *)v374.f32, 1), v507.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v363;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v372);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v375.f32[0]), v507.val[1], *(float32x2_t *)v375.f32, 1), v507.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  a4.i64[0] = 0x200000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x200000007);
  *(_QWORD *)v488 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 1884);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v508 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v388.f32[0]), v508.val[1], *(float32x2_t *)v388.f32, 1), v508.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v389.f32[0]), v508.val[1], *(float32x2_t *)v389.f32, 1), v508.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  v391 = *(_DWORD *)a2;
  *(_DWORD *)v488 = *(_DWORD *)a2;
  a4.i64[0] = 0x700000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000003);
  *(_QWORD *)&v488[4] = a3.i64[0];
  v392 = *(_DWORD *)(v390[1] + 1888);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = (const float *)(*v396 + 1656);
      v399 = *(_QWORD *)(v396[1] + 144);
      LODWORD(v396) = *(_DWORD *)(*v396 + 8);
      v400 = a3.i32[1];
      a5.f32[0] = (float)(v391 / (int)v396);
      a5.f32[1] = (float)(a3.i32[0] / (int)v396);
      a5.f32[2] = (float)(a3.i32[1] / (int)v396);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v524 = vld3_f32(v398);
      v402 = vaddq_f32(a5, v401);
      *(int32x2_t *)v402.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v524.val[0], v402.f32[0]), v524.val[1], *(float32x2_t *)v402.f32, 1), v524.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v489 = *(int32x2_t *)v402.f32;
      v490 = 0;
      v402.i32[0] = v391;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v402.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v400;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v399);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v524.val[0], v403.f32[0]), v524.val[1], *(float32x2_t *)v403.f32, 1), v524.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x300000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000001);
  *(_QWORD *)v488 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 1892);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v509 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v416.f32[0]), v509.val[1], *(float32x2_t *)v416.f32, 1), v509.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v417.f32[0]), v509.val[1], *(float32x2_t *)v417.f32, 1), v509.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  a4.i64[0] = 0x300000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000002);
  *(_QWORD *)v488 = a3.i64[0];
  v419 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v419;
  v420 = *(_DWORD *)(v418[1] + 1896);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = *(_DWORD *)(*v424 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v426);
      a4.f32[1] = (float)(a3.i32[1] / v426);
      a4.f32[2] = (float)(v419 / v426);
      v427 = (const float *)(*v424 + 1656);
      v510 = vld3_f32(v427);
      v428 = *(_QWORD *)(v424[1] + 144);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v430 = vaddq_f32(a4, v429);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v430.f32[0]), v510.val[1], *(float32x2_t *)v430.f32, 1), v510.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v419;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v428);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v431.f32[0]), v510.val[1], *(float32x2_t *)v431.f32, 1), v510.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  a4.i64[0] = 0x300000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000003);
  *(_QWORD *)v488 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 1900);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v511 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v511.val[0], v444.f32[0]), v511.val[1], *(float32x2_t *)v444.f32, 1), v511.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v511.val[0], v445.f32[0]), v511.val[1], *(float32x2_t *)v445.f32, 1), v511.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  a4.i64[0] = 0x300000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000004);
  *(_QWORD *)v488 = a3.i64[0];
  v447 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v447;
  v448 = *(_DWORD *)(v446[1] + 1904);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = *(_DWORD *)(*v452 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v454);
      a4.f32[1] = (float)(a3.i32[1] / v454);
      a4.f32[2] = (float)(v447 / v454);
      v455 = (const float *)(*v452 + 1656);
      v512 = vld3_f32(v455);
      v456 = *(_QWORD *)(v452[1] + 144);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v458 = vaddq_f32(a4, v457);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v512.val[0], v458.f32[0]), v512.val[1], *(float32x2_t *)v458.f32, 1), v512.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v447;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v456);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v512.val[0], v459.f32[0]), v512.val[1], *(float32x2_t *)v459.f32, 1), v512.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x300000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000005);
  *(_QWORD *)v488 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 1908);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v513 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v513.val[0], v472.f32[0]), v513.val[1], *(float32x2_t *)v472.f32, 1), v513.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v513.val[0], v473.f32[0]), v513.val[1], *(float32x2_t *)v473.f32, 1), v513.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v474 = *a1;
  a4.i64[0] = 0x300000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000006);
  *(_QWORD *)v488 = a3.i64[0];
  v475 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v488[8] = v475;
  v476 = *(_DWORD *)(v474[1] + 1912);
  if (v476 != *(_DWORD *)(*v474 + 272))
  {
    v477 = *(_QWORD *)(v474[2] + 8);
    if ((v476 & 0x10000000) != 0)
      v478 = 0x40000000;
    else
      v478 = 0x80000000;
    if ((v476 & 0x20000000) != 0)
      v479 = v478;
    else
      v479 = v476 & 0xCFFFFFFF;
    if ((v479 & 0x40000000) != 0)
    {
      v480 = *(_QWORD **)v477;
      v481 = *v480;
      v482 = *(_DWORD *)(*v480 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v482);
      a4.f32[1] = (float)(a3.i32[1] / v482);
      a4.f32[2] = (float)(v475 / v482);
      v483 = (const float *)(*v480 + 1656);
      v514 = vld3_f32(v483);
      v484 = *(_QWORD *)(v480[1] + 144);
      v485.i64[0] = 0x3F0000003F000000;
      v485.i64[1] = 0x3F0000003F000000;
      v486 = vaddq_f32(a4, v485);
      v489 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v514.val[0], v486.f32[0]), v514.val[1], *(float32x2_t *)v486.f32, 1), v514.val[2], v486, 2), (float32x2_t)0xBF000000BF000000));
      v490 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v475;
      v487 = vmulq_n_f32(vaddq_f32(a3, v485), *(float *)&v484);
      v491 = &v489;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v481 + 64), (int *)&v489, (uint64_t)&unk_2245BA939, (uint64_t **)&v491)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v514.val[0], v487.f32[0]), v514.val[1], *(float32x2_t *)v487.f32, 1), v514.val[2], v487, 2);
    }
    else if (!(v479 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v477 + 16), *(_QWORD *)(*(_QWORD *)(v477 + 16) + 8), (int32x2_t *)v488, *(_QWORD *)(*(_QWORD *)(v477 + 8) + 2448) + 520 * v479, *(_QWORD *)(*(_QWORD *)(v477 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  sub_2239DEA64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239DEA64(_QWORD **a1, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  const float *v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  _QWORD *v26;
  __int32 v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  const float *v34;
  uint64_t v35;
  int v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  _QWORD *v40;
  int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  const float *v49;
  uint64_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  _QWORD *v54;
  int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  const float *v63;
  uint64_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  _QWORD *v68;
  int v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  _QWORD *v82;
  int v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  unsigned int v87;
  _QWORD *v88;
  uint64_t v89;
  int v90;
  const float *v91;
  uint64_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  _QWORD *v96;
  int v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101;
  _QWORD *v102;
  uint64_t v103;
  int v104;
  const float *v105;
  uint64_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  _QWORD *v110;
  int v111;
  int v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  const float *v119;
  uint64_t v120;
  float32x4_t v121;
  float32x4_t v122;
  float32x4_t v123;
  _QWORD *v124;
  int v125;
  int v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  _QWORD *v130;
  uint64_t v131;
  int v132;
  const float *v133;
  uint64_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  _QWORD *v138;
  __int32 v139;
  int v140;
  uint64_t v141;
  unsigned int v142;
  unsigned int v143;
  _QWORD *v144;
  uint64_t v145;
  const float *v146;
  uint64_t v147;
  int v148;
  float32x4_t v149;
  float32x4_t v150;
  float32x4_t v151;
  _QWORD *v152;
  int v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  unsigned int v157;
  _QWORD *v158;
  uint64_t v159;
  int v160;
  const float *v161;
  uint64_t v162;
  float32x4_t v163;
  float32x4_t v164;
  float32x4_t v165;
  _QWORD *v166;
  int v167;
  int v168;
  uint64_t v169;
  unsigned int v170;
  unsigned int v171;
  _QWORD *v172;
  uint64_t v173;
  int v174;
  const float *v175;
  uint64_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  _QWORD *v180;
  int v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  _QWORD *v186;
  uint64_t v187;
  int v188;
  const float *v189;
  uint64_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  _QWORD *v194;
  int v195;
  int v196;
  uint64_t v197;
  unsigned int v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  int v202;
  const float *v203;
  uint64_t v204;
  float32x4_t v205;
  float32x4_t v206;
  float32x4_t v207;
  _QWORD *v208;
  int v209;
  int v210;
  uint64_t v211;
  unsigned int v212;
  unsigned int v213;
  _QWORD *v214;
  uint64_t v215;
  int v216;
  const float *v217;
  uint64_t v218;
  float32x4_t v219;
  float32x4_t v220;
  float32x4_t v221;
  _QWORD *v222;
  int v223;
  int v224;
  uint64_t v225;
  unsigned int v226;
  unsigned int v227;
  _QWORD *v228;
  uint64_t v229;
  int v230;
  const float *v231;
  uint64_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  _QWORD *v236;
  int v237;
  int v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  _QWORD *v242;
  uint64_t v243;
  int v244;
  const float *v245;
  uint64_t v246;
  float32x4_t v247;
  float32x4_t v248;
  float32x4_t v249;
  _QWORD *v250;
  __int32 v251;
  int v252;
  uint64_t v253;
  unsigned int v254;
  unsigned int v255;
  _QWORD *v256;
  uint64_t v257;
  const float *v258;
  uint64_t v259;
  int v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x4_t v263;
  _QWORD *v264;
  int v265;
  int v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  const float *v273;
  uint64_t v274;
  float32x4_t v275;
  float32x4_t v276;
  float32x4_t v277;
  _QWORD *v278;
  int v279;
  int v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  _QWORD *v284;
  uint64_t v285;
  int v286;
  const float *v287;
  uint64_t v288;
  float32x4_t v289;
  float32x4_t v290;
  float32x4_t v291;
  _QWORD *v292;
  int v293;
  int v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  const float *v301;
  uint64_t v302;
  float32x4_t v303;
  float32x4_t v304;
  float32x4_t v305;
  _QWORD *v306;
  int v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  _QWORD *v312;
  uint64_t v313;
  int v314;
  const float *v315;
  uint64_t v316;
  float32x4_t v317;
  float32x4_t v318;
  float32x4_t v319;
  _QWORD *v320;
  int v321;
  int v322;
  uint64_t v323;
  unsigned int v324;
  unsigned int v325;
  _QWORD *v326;
  uint64_t v327;
  int v328;
  const float *v329;
  uint64_t v330;
  float32x4_t v331;
  float32x4_t v332;
  float32x4_t v333;
  _QWORD *v334;
  int v335;
  int v336;
  uint64_t v337;
  unsigned int v338;
  unsigned int v339;
  _QWORD *v340;
  uint64_t v341;
  int v342;
  const float *v343;
  uint64_t v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x4_t v347;
  _QWORD *v348;
  int v349;
  int v350;
  uint64_t v351;
  unsigned int v352;
  unsigned int v353;
  _QWORD *v354;
  uint64_t v355;
  int v356;
  const float *v357;
  uint64_t v358;
  float32x4_t v359;
  float32x4_t v360;
  float32x4_t v361;
  _QWORD *v362;
  __int32 v363;
  int v364;
  uint64_t v365;
  unsigned int v366;
  unsigned int v367;
  _QWORD *v368;
  uint64_t v369;
  const float *v370;
  uint64_t v371;
  int v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x4_t v375;
  _QWORD *v376;
  int v377;
  int v378;
  uint64_t v379;
  unsigned int v380;
  unsigned int v381;
  _QWORD *v382;
  uint64_t v383;
  int v384;
  const float *v385;
  uint64_t v386;
  float32x4_t v387;
  float32x4_t v388;
  float32x4_t v389;
  _QWORD *v390;
  int v391;
  int v392;
  uint64_t v393;
  unsigned int v394;
  unsigned int v395;
  _QWORD *v396;
  uint64_t v397;
  int v398;
  const float *v399;
  uint64_t v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t v403;
  _QWORD *v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  _QWORD *v410;
  uint64_t v411;
  int v412;
  const float *v413;
  uint64_t v414;
  float32x4_t v415;
  float32x4_t v416;
  float32x4_t v417;
  _QWORD *v418;
  int v419;
  int v420;
  uint64_t v421;
  unsigned int v422;
  unsigned int v423;
  _QWORD *v424;
  uint64_t v425;
  int v426;
  const float *v427;
  uint64_t v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  _QWORD *v432;
  int v433;
  int v434;
  uint64_t v435;
  unsigned int v436;
  unsigned int v437;
  _QWORD *v438;
  uint64_t v439;
  int v440;
  const float *v441;
  uint64_t v442;
  float32x4_t v443;
  float32x4_t v444;
  float32x4_t v445;
  _QWORD *v446;
  int v447;
  int v448;
  uint64_t v449;
  unsigned int v450;
  unsigned int v451;
  _QWORD *v452;
  uint64_t v453;
  int v454;
  const float *v455;
  uint64_t v456;
  float32x4_t v457;
  float32x4_t v458;
  float32x4_t v459;
  _QWORD *v460;
  int v461;
  int v462;
  uint64_t v463;
  unsigned int v464;
  unsigned int v465;
  _QWORD *v466;
  uint64_t v467;
  int v468;
  const float *v469;
  uint64_t v470;
  float32x4_t v471;
  float32x4_t v472;
  float32x4_t v473;
  _BYTE v474[12];
  int32x2_t v475;
  int v476;
  int32x2_t *v477;
  float32x2x3_t v478;
  float32x2x3_t v479;
  float32x2x3_t v480;
  float32x2x3_t v481;
  float32x2x3_t v482;
  float32x2x3_t v483;
  float32x2x3_t v484;
  float32x2x3_t v485;
  float32x2x3_t v486;
  float32x2x3_t v487;
  float32x2x3_t v488;
  float32x2x3_t v489;
  float32x2x3_t v490;
  float32x2x3_t v491;
  float32x2x3_t v492;
  float32x2x3_t v493;
  float32x2x3_t v494;
  float32x2x3_t v495;
  float32x2x3_t v496;
  float32x2x3_t v497;
  float32x2x3_t v498;
  float32x2x3_t v499;
  float32x2x3_t v500;
  float32x2x3_t v501;
  float32x2x3_t v502;
  float32x2x3_t v503;
  float32x2x3_t v504;
  float32x2x3_t v505;
  float32x2x3_t v506;
  float32x2x3_t v507;
  float32x2x3_t v508;
  float32x2x3_t v509;
  float32x2x3_t v510;

  v12 = *a1;
  a4.i64[0] = 0x300000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x300000007);
  *(_QWORD *)v474 = a3.i64[0];
  v13 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v13;
  v14 = *(_DWORD *)(v12[1] + 1916);
  if (v14 != *(_DWORD *)(*v12 + 272))
  {
    v15 = *(_QWORD *)(v12[2] + 8);
    if ((v14 & 0x10000000) != 0)
      v16 = 0x40000000;
    else
      v16 = 0x80000000;
    if ((v14 & 0x20000000) != 0)
      v17 = v16;
    else
      v17 = v14 & 0xCFFFFFFF;
    if ((v17 & 0x40000000) != 0)
    {
      v18 = *(_QWORD **)v15;
      v19 = *v18;
      v20 = *(_DWORD *)(*v18 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v20);
      a4.f32[1] = (float)(a3.i32[1] / v20);
      a4.f32[2] = (float)(v13 / v20);
      v21 = (const float *)(*v18 + 1656);
      v478 = vld3_f32(v21);
      v22 = *(_QWORD *)(v18[1] + 144);
      v23.i64[0] = 0x3F0000003F000000;
      v23.i64[1] = 0x3F0000003F000000;
      v24 = vaddq_f32(a4, v23);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v24.f32[0]), v478.val[1], *(float32x2_t *)v24.f32, 1), v478.val[2], v24, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v13;
      v25 = vmulq_n_f32(vaddq_f32(a3, v23), *(float *)&v22);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v19 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v478.val[0], v25.f32[0]), v478.val[1], *(float32x2_t *)v25.f32, 1), v478.val[2], v25, 2);
    }
    else if (!(v17 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v15 + 16), *(_QWORD *)(*(_QWORD *)(v15 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v15 + 8) + 2448) + 520 * v17, *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v26 = *a1;
  v27 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000004);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v28 = *(_DWORD *)(v26[1] + 1920);
  if (v28 != *(_DWORD *)(*v26 + 272))
  {
    v29 = *(_QWORD *)(v26[2] + 8);
    if ((v28 & 0x10000000) != 0)
      v30 = 0x40000000;
    else
      v30 = 0x80000000;
    if ((v28 & 0x20000000) != 0)
      v31 = v30;
    else
      v31 = v28 & 0xCFFFFFFF;
    if ((v31 & 0x40000000) != 0)
    {
      v32 = *(_QWORD **)v29;
      v33 = *v32;
      v34 = (const float *)(*v32 + 1656);
      v35 = *(_QWORD *)(v32[1] + 144);
      LODWORD(v32) = *(_DWORD *)(*v32 + 8);
      v36 = a3.i32[1];
      a5.f32[0] = (float)(v27 / (int)v32);
      a5.f32[1] = (float)(a3.i32[0] / (int)v32);
      a5.f32[2] = (float)(a3.i32[1] / (int)v32);
      v37.i64[0] = 0x3F0000003F000000;
      v37.i64[1] = 0x3F0000003F000000;
      v507 = vld3_f32(v34);
      v38 = vaddq_f32(a5, v37);
      *(int32x2_t *)v38.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v38.f32[0]), v507.val[1], *(float32x2_t *)v38.f32, 1), v507.val[2], v38, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v38.f32;
      v476 = 0;
      v38.i32[0] = v27;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v38.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v36;
      v39 = vmulq_n_f32(vaddq_f32(a3, v37), *(float *)&v35);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v33 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v507.val[0], v39.f32[0]), v507.val[1], *(float32x2_t *)v39.f32, 1), v507.val[2], v39, 2);
    }
    else if (!(v31 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v29 + 16), *(_QWORD *)(*(_QWORD *)(v29 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v29 + 8) + 2448) + 520 * v31, *(_QWORD *)(*(_QWORD *)(v29 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v40 = *a1;
  a4.i64[0] = 0x400000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000001);
  *(_QWORD *)v474 = a3.i64[0];
  v41 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v41;
  v42 = *(_DWORD *)(v40[1] + 1924);
  if (v42 != *(_DWORD *)(*v40 + 272))
  {
    v43 = *(_QWORD *)(v40[2] + 8);
    if ((v42 & 0x10000000) != 0)
      v44 = 0x40000000;
    else
      v44 = 0x80000000;
    if ((v42 & 0x20000000) != 0)
      v45 = v44;
    else
      v45 = v42 & 0xCFFFFFFF;
    if ((v45 & 0x40000000) != 0)
    {
      v46 = *(_QWORD **)v43;
      v47 = *v46;
      v48 = *(_DWORD *)(*v46 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v48);
      a4.f32[1] = (float)(a3.i32[1] / v48);
      a4.f32[2] = (float)(v41 / v48);
      v49 = (const float *)(*v46 + 1656);
      v479 = vld3_f32(v49);
      v50 = *(_QWORD *)(v46[1] + 144);
      v51.i64[0] = 0x3F0000003F000000;
      v51.i64[1] = 0x3F0000003F000000;
      v52 = vaddq_f32(a4, v51);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v52.f32[0]), v479.val[1], *(float32x2_t *)v52.f32, 1), v479.val[2], v52, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v41;
      v53 = vmulq_n_f32(vaddq_f32(a3, v51), *(float *)&v50);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v47 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v479.val[0], v53.f32[0]), v479.val[1], *(float32x2_t *)v53.f32, 1), v479.val[2], v53, 2);
    }
    else if (!(v45 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v43 + 16), *(_QWORD *)(*(_QWORD *)(v43 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v43 + 8) + 2448) + 520 * v45, *(_QWORD *)(*(_QWORD *)(v43 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v54 = *a1;
  a4.i64[0] = 0x400000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000002);
  *(_QWORD *)v474 = a3.i64[0];
  v55 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v55;
  v56 = *(_DWORD *)(v54[1] + 1928);
  if (v56 != *(_DWORD *)(*v54 + 272))
  {
    v57 = *(_QWORD *)(v54[2] + 8);
    if ((v56 & 0x10000000) != 0)
      v58 = 0x40000000;
    else
      v58 = 0x80000000;
    if ((v56 & 0x20000000) != 0)
      v59 = v58;
    else
      v59 = v56 & 0xCFFFFFFF;
    if ((v59 & 0x40000000) != 0)
    {
      v60 = *(_QWORD **)v57;
      v61 = *v60;
      v62 = *(_DWORD *)(*v60 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v62);
      a4.f32[1] = (float)(a3.i32[1] / v62);
      a4.f32[2] = (float)(v55 / v62);
      v63 = (const float *)(*v60 + 1656);
      v480 = vld3_f32(v63);
      v64 = *(_QWORD *)(v60[1] + 144);
      v65.i64[0] = 0x3F0000003F000000;
      v65.i64[1] = 0x3F0000003F000000;
      v66 = vaddq_f32(a4, v65);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v66.f32[0]), v480.val[1], *(float32x2_t *)v66.f32, 1), v480.val[2], v66, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v55;
      v67 = vmulq_n_f32(vaddq_f32(a3, v65), *(float *)&v64);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v61 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v480.val[0], v67.f32[0]), v480.val[1], *(float32x2_t *)v67.f32, 1), v480.val[2], v67, 2);
    }
    else if (!(v59 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v57 + 16), *(_QWORD *)(*(_QWORD *)(v57 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v57 + 8) + 2448) + 520 * v59, *(_QWORD *)(*(_QWORD *)(v57 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v68 = *a1;
  a4.i64[0] = 0x400000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000003);
  *(_QWORD *)v474 = a3.i64[0];
  v69 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v69;
  v70 = *(_DWORD *)(v68[1] + 1932);
  if (v70 != *(_DWORD *)(*v68 + 272))
  {
    v71 = *(_QWORD *)(v68[2] + 8);
    if ((v70 & 0x10000000) != 0)
      v72 = 0x40000000;
    else
      v72 = 0x80000000;
    if ((v70 & 0x20000000) != 0)
      v73 = v72;
    else
      v73 = v70 & 0xCFFFFFFF;
    if ((v73 & 0x40000000) != 0)
    {
      v74 = *(_QWORD **)v71;
      v75 = *v74;
      v76 = *(_DWORD *)(*v74 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v76);
      a4.f32[1] = (float)(a3.i32[1] / v76);
      a4.f32[2] = (float)(v69 / v76);
      v77 = (const float *)(*v74 + 1656);
      v481 = vld3_f32(v77);
      v78 = *(_QWORD *)(v74[1] + 144);
      v79.i64[0] = 0x3F0000003F000000;
      v79.i64[1] = 0x3F0000003F000000;
      v80 = vaddq_f32(a4, v79);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v80.f32[0]), v481.val[1], *(float32x2_t *)v80.f32, 1), v481.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v69;
      v81 = vmulq_n_f32(vaddq_f32(a3, v79), *(float *)&v78);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v75 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v481.val[0], v81.f32[0]), v481.val[1], *(float32x2_t *)v81.f32, 1), v481.val[2], v81, 2);
    }
    else if (!(v73 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v71 + 16), *(_QWORD *)(*(_QWORD *)(v71 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v71 + 8) + 2448) + 520 * v73, *(_QWORD *)(*(_QWORD *)(v71 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v82 = *a1;
  a4.i64[0] = 0x400000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000004);
  *(_QWORD *)v474 = a3.i64[0];
  v83 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v83;
  v84 = *(_DWORD *)(v82[1] + 1936);
  if (v84 != *(_DWORD *)(*v82 + 272))
  {
    v85 = *(_QWORD *)(v82[2] + 8);
    if ((v84 & 0x10000000) != 0)
      v86 = 0x40000000;
    else
      v86 = 0x80000000;
    if ((v84 & 0x20000000) != 0)
      v87 = v86;
    else
      v87 = v84 & 0xCFFFFFFF;
    if ((v87 & 0x40000000) != 0)
    {
      v88 = *(_QWORD **)v85;
      v89 = *v88;
      v90 = *(_DWORD *)(*v88 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v90);
      a4.f32[1] = (float)(a3.i32[1] / v90);
      a4.f32[2] = (float)(v83 / v90);
      v91 = (const float *)(*v88 + 1656);
      v482 = vld3_f32(v91);
      v92 = *(_QWORD *)(v88[1] + 144);
      v93.i64[0] = 0x3F0000003F000000;
      v93.i64[1] = 0x3F0000003F000000;
      v94 = vaddq_f32(a4, v93);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v94.f32[0]), v482.val[1], *(float32x2_t *)v94.f32, 1), v482.val[2], v94, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v83;
      v95 = vmulq_n_f32(vaddq_f32(a3, v93), *(float *)&v92);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v89 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v482.val[0], v95.f32[0]), v482.val[1], *(float32x2_t *)v95.f32, 1), v482.val[2], v95, 2);
    }
    else if (!(v87 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v85 + 16), *(_QWORD *)(*(_QWORD *)(v85 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v85 + 8) + 2448) + 520 * v87, *(_QWORD *)(*(_QWORD *)(v85 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v96 = *a1;
  a4.i64[0] = 0x400000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000005);
  *(_QWORD *)v474 = a3.i64[0];
  v97 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v97;
  v98 = *(_DWORD *)(v96[1] + 1940);
  if (v98 != *(_DWORD *)(*v96 + 272))
  {
    v99 = *(_QWORD *)(v96[2] + 8);
    if ((v98 & 0x10000000) != 0)
      v100 = 0x40000000;
    else
      v100 = 0x80000000;
    if ((v98 & 0x20000000) != 0)
      v101 = v100;
    else
      v101 = v98 & 0xCFFFFFFF;
    if ((v101 & 0x40000000) != 0)
    {
      v102 = *(_QWORD **)v99;
      v103 = *v102;
      v104 = *(_DWORD *)(*v102 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v104);
      a4.f32[1] = (float)(a3.i32[1] / v104);
      a4.f32[2] = (float)(v97 / v104);
      v105 = (const float *)(*v102 + 1656);
      v483 = vld3_f32(v105);
      v106 = *(_QWORD *)(v102[1] + 144);
      v107.i64[0] = 0x3F0000003F000000;
      v107.i64[1] = 0x3F0000003F000000;
      v108 = vaddq_f32(a4, v107);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v108.f32[0]), v483.val[1], *(float32x2_t *)v108.f32, 1), v483.val[2], v108, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v97;
      v109 = vmulq_n_f32(vaddq_f32(a3, v107), *(float *)&v106);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v103 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v483.val[0], v109.f32[0]), v483.val[1], *(float32x2_t *)v109.f32, 1), v483.val[2], v109, 2);
    }
    else if (!(v101 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v99 + 16), *(_QWORD *)(*(_QWORD *)(v99 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v99 + 8) + 2448) + 520 * v101, *(_QWORD *)(*(_QWORD *)(v99 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v110 = *a1;
  a4.i64[0] = 0x400000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000006);
  *(_QWORD *)v474 = a3.i64[0];
  v111 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v111;
  v112 = *(_DWORD *)(v110[1] + 1944);
  if (v112 != *(_DWORD *)(*v110 + 272))
  {
    v113 = *(_QWORD *)(v110[2] + 8);
    if ((v112 & 0x10000000) != 0)
      v114 = 0x40000000;
    else
      v114 = 0x80000000;
    if ((v112 & 0x20000000) != 0)
      v115 = v114;
    else
      v115 = v112 & 0xCFFFFFFF;
    if ((v115 & 0x40000000) != 0)
    {
      v116 = *(_QWORD **)v113;
      v117 = *v116;
      v118 = *(_DWORD *)(*v116 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v118);
      a4.f32[1] = (float)(a3.i32[1] / v118);
      a4.f32[2] = (float)(v111 / v118);
      v119 = (const float *)(*v116 + 1656);
      v484 = vld3_f32(v119);
      v120 = *(_QWORD *)(v116[1] + 144);
      v121.i64[0] = 0x3F0000003F000000;
      v121.i64[1] = 0x3F0000003F000000;
      v122 = vaddq_f32(a4, v121);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v122.f32[0]), v484.val[1], *(float32x2_t *)v122.f32, 1), v484.val[2], v122, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v111;
      v123 = vmulq_n_f32(vaddq_f32(a3, v121), *(float *)&v120);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v117 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v484.val[0], v123.f32[0]), v484.val[1], *(float32x2_t *)v123.f32, 1), v484.val[2], v123, 2);
    }
    else if (!(v115 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v113 + 16), *(_QWORD *)(*(_QWORD *)(v113 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v113 + 8) + 2448) + 520 * v115, *(_QWORD *)(*(_QWORD *)(v113 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v124 = *a1;
  a4.i64[0] = 0x400000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x400000007);
  *(_QWORD *)v474 = a3.i64[0];
  v125 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v125;
  v126 = *(_DWORD *)(v124[1] + 1948);
  if (v126 != *(_DWORD *)(*v124 + 272))
  {
    v127 = *(_QWORD *)(v124[2] + 8);
    if ((v126 & 0x10000000) != 0)
      v128 = 0x40000000;
    else
      v128 = 0x80000000;
    if ((v126 & 0x20000000) != 0)
      v129 = v128;
    else
      v129 = v126 & 0xCFFFFFFF;
    if ((v129 & 0x40000000) != 0)
    {
      v130 = *(_QWORD **)v127;
      v131 = *v130;
      v132 = *(_DWORD *)(*v130 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v132);
      a4.f32[1] = (float)(a3.i32[1] / v132);
      a4.f32[2] = (float)(v125 / v132);
      v133 = (const float *)(*v130 + 1656);
      v485 = vld3_f32(v133);
      v134 = *(_QWORD *)(v130[1] + 144);
      v135.i64[0] = 0x3F0000003F000000;
      v135.i64[1] = 0x3F0000003F000000;
      v136 = vaddq_f32(a4, v135);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v136.f32[0]), v485.val[1], *(float32x2_t *)v136.f32, 1), v485.val[2], v136, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v125;
      v137 = vmulq_n_f32(vaddq_f32(a3, v135), *(float *)&v134);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v131 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v485.val[0], v137.f32[0]), v485.val[1], *(float32x2_t *)v137.f32, 1), v485.val[2], v137, 2);
    }
    else if (!(v129 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v127 + 16), *(_QWORD *)(*(_QWORD *)(v127 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v127 + 8) + 2448) + 520 * v129, *(_QWORD *)(*(_QWORD *)(v127 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v138 = *a1;
  v139 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000005);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v140 = *(_DWORD *)(v138[1] + 1952);
  if (v140 != *(_DWORD *)(*v138 + 272))
  {
    v141 = *(_QWORD *)(v138[2] + 8);
    if ((v140 & 0x10000000) != 0)
      v142 = 0x40000000;
    else
      v142 = 0x80000000;
    if ((v140 & 0x20000000) != 0)
      v143 = v142;
    else
      v143 = v140 & 0xCFFFFFFF;
    if ((v143 & 0x40000000) != 0)
    {
      v144 = *(_QWORD **)v141;
      v145 = *v144;
      v146 = (const float *)(*v144 + 1656);
      v147 = *(_QWORD *)(v144[1] + 144);
      LODWORD(v144) = *(_DWORD *)(*v144 + 8);
      v148 = a3.i32[1];
      a5.f32[0] = (float)(v139 / (int)v144);
      a5.f32[1] = (float)(a3.i32[0] / (int)v144);
      a5.f32[2] = (float)(a3.i32[1] / (int)v144);
      v149.i64[0] = 0x3F0000003F000000;
      v149.i64[1] = 0x3F0000003F000000;
      v508 = vld3_f32(v146);
      v150 = vaddq_f32(a5, v149);
      *(int32x2_t *)v150.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v150.f32[0]), v508.val[1], *(float32x2_t *)v150.f32, 1), v508.val[2], v150, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v150.f32;
      v476 = 0;
      v150.i32[0] = v139;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v150.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v148;
      v151 = vmulq_n_f32(vaddq_f32(a3, v149), *(float *)&v147);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v145 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v508.val[0], v151.f32[0]), v508.val[1], *(float32x2_t *)v151.f32, 1), v508.val[2], v151, 2);
    }
    else if (!(v143 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v141 + 16), *(_QWORD *)(*(_QWORD *)(v141 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v141 + 8) + 2448) + 520 * v143, *(_QWORD *)(*(_QWORD *)(v141 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v152 = *a1;
  a4.i64[0] = 0x500000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000001);
  *(_QWORD *)v474 = a3.i64[0];
  v153 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v153;
  v154 = *(_DWORD *)(v152[1] + 1956);
  if (v154 != *(_DWORD *)(*v152 + 272))
  {
    v155 = *(_QWORD *)(v152[2] + 8);
    if ((v154 & 0x10000000) != 0)
      v156 = 0x40000000;
    else
      v156 = 0x80000000;
    if ((v154 & 0x20000000) != 0)
      v157 = v156;
    else
      v157 = v154 & 0xCFFFFFFF;
    if ((v157 & 0x40000000) != 0)
    {
      v158 = *(_QWORD **)v155;
      v159 = *v158;
      v160 = *(_DWORD *)(*v158 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v160);
      a4.f32[1] = (float)(a3.i32[1] / v160);
      a4.f32[2] = (float)(v153 / v160);
      v161 = (const float *)(*v158 + 1656);
      v486 = vld3_f32(v161);
      v162 = *(_QWORD *)(v158[1] + 144);
      v163.i64[0] = 0x3F0000003F000000;
      v163.i64[1] = 0x3F0000003F000000;
      v164 = vaddq_f32(a4, v163);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v164.f32[0]), v486.val[1], *(float32x2_t *)v164.f32, 1), v486.val[2], v164, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v153;
      v165 = vmulq_n_f32(vaddq_f32(a3, v163), *(float *)&v162);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v159 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v486.val[0], v165.f32[0]), v486.val[1], *(float32x2_t *)v165.f32, 1), v486.val[2], v165, 2);
    }
    else if (!(v157 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v155 + 16), *(_QWORD *)(*(_QWORD *)(v155 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v155 + 8) + 2448) + 520 * v157, *(_QWORD *)(*(_QWORD *)(v155 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v166 = *a1;
  a4.i64[0] = 0x500000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000002);
  *(_QWORD *)v474 = a3.i64[0];
  v167 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v167;
  v168 = *(_DWORD *)(v166[1] + 1960);
  if (v168 != *(_DWORD *)(*v166 + 272))
  {
    v169 = *(_QWORD *)(v166[2] + 8);
    if ((v168 & 0x10000000) != 0)
      v170 = 0x40000000;
    else
      v170 = 0x80000000;
    if ((v168 & 0x20000000) != 0)
      v171 = v170;
    else
      v171 = v168 & 0xCFFFFFFF;
    if ((v171 & 0x40000000) != 0)
    {
      v172 = *(_QWORD **)v169;
      v173 = *v172;
      v174 = *(_DWORD *)(*v172 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v174);
      a4.f32[1] = (float)(a3.i32[1] / v174);
      a4.f32[2] = (float)(v167 / v174);
      v175 = (const float *)(*v172 + 1656);
      v487 = vld3_f32(v175);
      v176 = *(_QWORD *)(v172[1] + 144);
      v177.i64[0] = 0x3F0000003F000000;
      v177.i64[1] = 0x3F0000003F000000;
      v178 = vaddq_f32(a4, v177);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v178.f32[0]), v487.val[1], *(float32x2_t *)v178.f32, 1), v487.val[2], v178, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v167;
      v179 = vmulq_n_f32(vaddq_f32(a3, v177), *(float *)&v176);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v173 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v487.val[0], v179.f32[0]), v487.val[1], *(float32x2_t *)v179.f32, 1), v487.val[2], v179, 2);
    }
    else if (!(v171 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v169 + 16), *(_QWORD *)(*(_QWORD *)(v169 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v169 + 8) + 2448) + 520 * v171, *(_QWORD *)(*(_QWORD *)(v169 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v180 = *a1;
  a4.i64[0] = 0x500000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000003);
  *(_QWORD *)v474 = a3.i64[0];
  v181 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v181;
  v182 = *(_DWORD *)(v180[1] + 1964);
  if (v182 != *(_DWORD *)(*v180 + 272))
  {
    v183 = *(_QWORD *)(v180[2] + 8);
    if ((v182 & 0x10000000) != 0)
      v184 = 0x40000000;
    else
      v184 = 0x80000000;
    if ((v182 & 0x20000000) != 0)
      v185 = v184;
    else
      v185 = v182 & 0xCFFFFFFF;
    if ((v185 & 0x40000000) != 0)
    {
      v186 = *(_QWORD **)v183;
      v187 = *v186;
      v188 = *(_DWORD *)(*v186 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v188);
      a4.f32[1] = (float)(a3.i32[1] / v188);
      a4.f32[2] = (float)(v181 / v188);
      v189 = (const float *)(*v186 + 1656);
      v488 = vld3_f32(v189);
      v190 = *(_QWORD *)(v186[1] + 144);
      v191.i64[0] = 0x3F0000003F000000;
      v191.i64[1] = 0x3F0000003F000000;
      v192 = vaddq_f32(a4, v191);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v192.f32[0]), v488.val[1], *(float32x2_t *)v192.f32, 1), v488.val[2], v192, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v181;
      v193 = vmulq_n_f32(vaddq_f32(a3, v191), *(float *)&v190);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v187 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v488.val[0], v193.f32[0]), v488.val[1], *(float32x2_t *)v193.f32, 1), v488.val[2], v193, 2);
    }
    else if (!(v185 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v183 + 16), *(_QWORD *)(*(_QWORD *)(v183 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v183 + 8) + 2448) + 520 * v185, *(_QWORD *)(*(_QWORD *)(v183 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v194 = *a1;
  a4.i64[0] = 0x500000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000004);
  *(_QWORD *)v474 = a3.i64[0];
  v195 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v195;
  v196 = *(_DWORD *)(v194[1] + 1968);
  if (v196 != *(_DWORD *)(*v194 + 272))
  {
    v197 = *(_QWORD *)(v194[2] + 8);
    if ((v196 & 0x10000000) != 0)
      v198 = 0x40000000;
    else
      v198 = 0x80000000;
    if ((v196 & 0x20000000) != 0)
      v199 = v198;
    else
      v199 = v196 & 0xCFFFFFFF;
    if ((v199 & 0x40000000) != 0)
    {
      v200 = *(_QWORD **)v197;
      v201 = *v200;
      v202 = *(_DWORD *)(*v200 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v202);
      a4.f32[1] = (float)(a3.i32[1] / v202);
      a4.f32[2] = (float)(v195 / v202);
      v203 = (const float *)(*v200 + 1656);
      v489 = vld3_f32(v203);
      v204 = *(_QWORD *)(v200[1] + 144);
      v205.i64[0] = 0x3F0000003F000000;
      v205.i64[1] = 0x3F0000003F000000;
      v206 = vaddq_f32(a4, v205);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v206.f32[0]), v489.val[1], *(float32x2_t *)v206.f32, 1), v489.val[2], v206, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v195;
      v207 = vmulq_n_f32(vaddq_f32(a3, v205), *(float *)&v204);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v201 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v489.val[0], v207.f32[0]), v489.val[1], *(float32x2_t *)v207.f32, 1), v489.val[2], v207, 2);
    }
    else if (!(v199 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v197 + 16), *(_QWORD *)(*(_QWORD *)(v197 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v197 + 8) + 2448) + 520 * v199, *(_QWORD *)(*(_QWORD *)(v197 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v208 = *a1;
  a4.i64[0] = 0x500000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000005);
  *(_QWORD *)v474 = a3.i64[0];
  v209 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v209;
  v210 = *(_DWORD *)(v208[1] + 1972);
  if (v210 != *(_DWORD *)(*v208 + 272))
  {
    v211 = *(_QWORD *)(v208[2] + 8);
    if ((v210 & 0x10000000) != 0)
      v212 = 0x40000000;
    else
      v212 = 0x80000000;
    if ((v210 & 0x20000000) != 0)
      v213 = v212;
    else
      v213 = v210 & 0xCFFFFFFF;
    if ((v213 & 0x40000000) != 0)
    {
      v214 = *(_QWORD **)v211;
      v215 = *v214;
      v216 = *(_DWORD *)(*v214 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v216);
      a4.f32[1] = (float)(a3.i32[1] / v216);
      a4.f32[2] = (float)(v209 / v216);
      v217 = (const float *)(*v214 + 1656);
      v490 = vld3_f32(v217);
      v218 = *(_QWORD *)(v214[1] + 144);
      v219.i64[0] = 0x3F0000003F000000;
      v219.i64[1] = 0x3F0000003F000000;
      v220 = vaddq_f32(a4, v219);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v220.f32[0]), v490.val[1], *(float32x2_t *)v220.f32, 1), v490.val[2], v220, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v209;
      v221 = vmulq_n_f32(vaddq_f32(a3, v219), *(float *)&v218);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v215 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v490.val[0], v221.f32[0]), v490.val[1], *(float32x2_t *)v221.f32, 1), v490.val[2], v221, 2);
    }
    else if (!(v213 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v211 + 16), *(_QWORD *)(*(_QWORD *)(v211 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v211 + 8) + 2448) + 520 * v213, *(_QWORD *)(*(_QWORD *)(v211 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v222 = *a1;
  a4.i64[0] = 0x500000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000006);
  *(_QWORD *)v474 = a3.i64[0];
  v223 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v223;
  v224 = *(_DWORD *)(v222[1] + 1976);
  if (v224 != *(_DWORD *)(*v222 + 272))
  {
    v225 = *(_QWORD *)(v222[2] + 8);
    if ((v224 & 0x10000000) != 0)
      v226 = 0x40000000;
    else
      v226 = 0x80000000;
    if ((v224 & 0x20000000) != 0)
      v227 = v226;
    else
      v227 = v224 & 0xCFFFFFFF;
    if ((v227 & 0x40000000) != 0)
    {
      v228 = *(_QWORD **)v225;
      v229 = *v228;
      v230 = *(_DWORD *)(*v228 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v230);
      a4.f32[1] = (float)(a3.i32[1] / v230);
      a4.f32[2] = (float)(v223 / v230);
      v231 = (const float *)(*v228 + 1656);
      v491 = vld3_f32(v231);
      v232 = *(_QWORD *)(v228[1] + 144);
      v233.i64[0] = 0x3F0000003F000000;
      v233.i64[1] = 0x3F0000003F000000;
      v234 = vaddq_f32(a4, v233);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v234.f32[0]), v491.val[1], *(float32x2_t *)v234.f32, 1), v491.val[2], v234, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v223;
      v235 = vmulq_n_f32(vaddq_f32(a3, v233), *(float *)&v232);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v229 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v491.val[0], v235.f32[0]), v491.val[1], *(float32x2_t *)v235.f32, 1), v491.val[2], v235, 2);
    }
    else if (!(v227 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v225 + 16), *(_QWORD *)(*(_QWORD *)(v225 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v225 + 8) + 2448) + 520 * v227, *(_QWORD *)(*(_QWORD *)(v225 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v236 = *a1;
  a4.i64[0] = 0x500000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x500000007);
  *(_QWORD *)v474 = a3.i64[0];
  v237 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v237;
  v238 = *(_DWORD *)(v236[1] + 1980);
  if (v238 != *(_DWORD *)(*v236 + 272))
  {
    v239 = *(_QWORD *)(v236[2] + 8);
    if ((v238 & 0x10000000) != 0)
      v240 = 0x40000000;
    else
      v240 = 0x80000000;
    if ((v238 & 0x20000000) != 0)
      v241 = v240;
    else
      v241 = v238 & 0xCFFFFFFF;
    if ((v241 & 0x40000000) != 0)
    {
      v242 = *(_QWORD **)v239;
      v243 = *v242;
      v244 = *(_DWORD *)(*v242 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v244);
      a4.f32[1] = (float)(a3.i32[1] / v244);
      a4.f32[2] = (float)(v237 / v244);
      v245 = (const float *)(*v242 + 1656);
      v492 = vld3_f32(v245);
      v246 = *(_QWORD *)(v242[1] + 144);
      v247.i64[0] = 0x3F0000003F000000;
      v247.i64[1] = 0x3F0000003F000000;
      v248 = vaddq_f32(a4, v247);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v248.f32[0]), v492.val[1], *(float32x2_t *)v248.f32, 1), v492.val[2], v248, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v237;
      v249 = vmulq_n_f32(vaddq_f32(a3, v247), *(float *)&v246);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v243 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v492.val[0], v249.f32[0]), v492.val[1], *(float32x2_t *)v249.f32, 1), v492.val[2], v249, 2);
    }
    else if (!(v241 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v239 + 16), *(_QWORD *)(*(_QWORD *)(v239 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v239 + 8) + 2448) + 520 * v241, *(_QWORD *)(*(_QWORD *)(v239 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v250 = *a1;
  v251 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000006);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v252 = *(_DWORD *)(v250[1] + 1984);
  if (v252 != *(_DWORD *)(*v250 + 272))
  {
    v253 = *(_QWORD *)(v250[2] + 8);
    if ((v252 & 0x10000000) != 0)
      v254 = 0x40000000;
    else
      v254 = 0x80000000;
    if ((v252 & 0x20000000) != 0)
      v255 = v254;
    else
      v255 = v252 & 0xCFFFFFFF;
    if ((v255 & 0x40000000) != 0)
    {
      v256 = *(_QWORD **)v253;
      v257 = *v256;
      v258 = (const float *)(*v256 + 1656);
      v259 = *(_QWORD *)(v256[1] + 144);
      LODWORD(v256) = *(_DWORD *)(*v256 + 8);
      v260 = a3.i32[1];
      a5.f32[0] = (float)(v251 / (int)v256);
      a5.f32[1] = (float)(a3.i32[0] / (int)v256);
      a5.f32[2] = (float)(a3.i32[1] / (int)v256);
      v261.i64[0] = 0x3F0000003F000000;
      v261.i64[1] = 0x3F0000003F000000;
      v509 = vld3_f32(v258);
      v262 = vaddq_f32(a5, v261);
      *(int32x2_t *)v262.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v262.f32[0]), v509.val[1], *(float32x2_t *)v262.f32, 1), v509.val[2], v262, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v262.f32;
      v476 = 0;
      v262.i32[0] = v251;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v262.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v260;
      v263 = vmulq_n_f32(vaddq_f32(a3, v261), *(float *)&v259);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v257 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v509.val[0], v263.f32[0]), v509.val[1], *(float32x2_t *)v263.f32, 1), v509.val[2], v263, 2);
    }
    else if (!(v255 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v253 + 16), *(_QWORD *)(*(_QWORD *)(v253 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v253 + 8) + 2448) + 520 * v255, *(_QWORD *)(*(_QWORD *)(v253 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v264 = *a1;
  a4.i64[0] = 0x600000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000001);
  *(_QWORD *)v474 = a3.i64[0];
  v265 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v265;
  v266 = *(_DWORD *)(v264[1] + 1988);
  if (v266 != *(_DWORD *)(*v264 + 272))
  {
    v267 = *(_QWORD *)(v264[2] + 8);
    if ((v266 & 0x10000000) != 0)
      v268 = 0x40000000;
    else
      v268 = 0x80000000;
    if ((v266 & 0x20000000) != 0)
      v269 = v268;
    else
      v269 = v266 & 0xCFFFFFFF;
    if ((v269 & 0x40000000) != 0)
    {
      v270 = *(_QWORD **)v267;
      v271 = *v270;
      v272 = *(_DWORD *)(*v270 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v272);
      a4.f32[1] = (float)(a3.i32[1] / v272);
      a4.f32[2] = (float)(v265 / v272);
      v273 = (const float *)(*v270 + 1656);
      v493 = vld3_f32(v273);
      v274 = *(_QWORD *)(v270[1] + 144);
      v275.i64[0] = 0x3F0000003F000000;
      v275.i64[1] = 0x3F0000003F000000;
      v276 = vaddq_f32(a4, v275);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v276.f32[0]), v493.val[1], *(float32x2_t *)v276.f32, 1), v493.val[2], v276, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v265;
      v277 = vmulq_n_f32(vaddq_f32(a3, v275), *(float *)&v274);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v271 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v493.val[0], v277.f32[0]), v493.val[1], *(float32x2_t *)v277.f32, 1), v493.val[2], v277, 2);
    }
    else if (!(v269 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v267 + 16), *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v267 + 8) + 2448) + 520 * v269, *(_QWORD *)(*(_QWORD *)(v267 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v278 = *a1;
  a4.i64[0] = 0x600000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000002);
  *(_QWORD *)v474 = a3.i64[0];
  v279 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v279;
  v280 = *(_DWORD *)(v278[1] + 1992);
  if (v280 != *(_DWORD *)(*v278 + 272))
  {
    v281 = *(_QWORD *)(v278[2] + 8);
    if ((v280 & 0x10000000) != 0)
      v282 = 0x40000000;
    else
      v282 = 0x80000000;
    if ((v280 & 0x20000000) != 0)
      v283 = v282;
    else
      v283 = v280 & 0xCFFFFFFF;
    if ((v283 & 0x40000000) != 0)
    {
      v284 = *(_QWORD **)v281;
      v285 = *v284;
      v286 = *(_DWORD *)(*v284 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v286);
      a4.f32[1] = (float)(a3.i32[1] / v286);
      a4.f32[2] = (float)(v279 / v286);
      v287 = (const float *)(*v284 + 1656);
      v494 = vld3_f32(v287);
      v288 = *(_QWORD *)(v284[1] + 144);
      v289.i64[0] = 0x3F0000003F000000;
      v289.i64[1] = 0x3F0000003F000000;
      v290 = vaddq_f32(a4, v289);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v290.f32[0]), v494.val[1], *(float32x2_t *)v290.f32, 1), v494.val[2], v290, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v279;
      v291 = vmulq_n_f32(vaddq_f32(a3, v289), *(float *)&v288);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v285 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v494.val[0], v291.f32[0]), v494.val[1], *(float32x2_t *)v291.f32, 1), v494.val[2], v291, 2);
    }
    else if (!(v283 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v281 + 16), *(_QWORD *)(*(_QWORD *)(v281 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v281 + 8) + 2448) + 520 * v283, *(_QWORD *)(*(_QWORD *)(v281 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v292 = *a1;
  a4.i64[0] = 0x600000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000003);
  *(_QWORD *)v474 = a3.i64[0];
  v293 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v293;
  v294 = *(_DWORD *)(v292[1] + 1996);
  if (v294 != *(_DWORD *)(*v292 + 272))
  {
    v295 = *(_QWORD *)(v292[2] + 8);
    if ((v294 & 0x10000000) != 0)
      v296 = 0x40000000;
    else
      v296 = 0x80000000;
    if ((v294 & 0x20000000) != 0)
      v297 = v296;
    else
      v297 = v294 & 0xCFFFFFFF;
    if ((v297 & 0x40000000) != 0)
    {
      v298 = *(_QWORD **)v295;
      v299 = *v298;
      v300 = *(_DWORD *)(*v298 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v300);
      a4.f32[1] = (float)(a3.i32[1] / v300);
      a4.f32[2] = (float)(v293 / v300);
      v301 = (const float *)(*v298 + 1656);
      v495 = vld3_f32(v301);
      v302 = *(_QWORD *)(v298[1] + 144);
      v303.i64[0] = 0x3F0000003F000000;
      v303.i64[1] = 0x3F0000003F000000;
      v304 = vaddq_f32(a4, v303);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v304.f32[0]), v495.val[1], *(float32x2_t *)v304.f32, 1), v495.val[2], v304, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v293;
      v305 = vmulq_n_f32(vaddq_f32(a3, v303), *(float *)&v302);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v299 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v495.val[0], v305.f32[0]), v495.val[1], *(float32x2_t *)v305.f32, 1), v495.val[2], v305, 2);
    }
    else if (!(v297 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v295 + 16), *(_QWORD *)(*(_QWORD *)(v295 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v295 + 8) + 2448) + 520 * v297, *(_QWORD *)(*(_QWORD *)(v295 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v306 = *a1;
  a4.i64[0] = 0x600000004;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000004);
  *(_QWORD *)v474 = a3.i64[0];
  v307 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v307;
  v308 = *(_DWORD *)(v306[1] + 2000);
  if (v308 != *(_DWORD *)(*v306 + 272))
  {
    v309 = *(_QWORD *)(v306[2] + 8);
    if ((v308 & 0x10000000) != 0)
      v310 = 0x40000000;
    else
      v310 = 0x80000000;
    if ((v308 & 0x20000000) != 0)
      v311 = v310;
    else
      v311 = v308 & 0xCFFFFFFF;
    if ((v311 & 0x40000000) != 0)
    {
      v312 = *(_QWORD **)v309;
      v313 = *v312;
      v314 = *(_DWORD *)(*v312 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v314);
      a4.f32[1] = (float)(a3.i32[1] / v314);
      a4.f32[2] = (float)(v307 / v314);
      v315 = (const float *)(*v312 + 1656);
      v496 = vld3_f32(v315);
      v316 = *(_QWORD *)(v312[1] + 144);
      v317.i64[0] = 0x3F0000003F000000;
      v317.i64[1] = 0x3F0000003F000000;
      v318 = vaddq_f32(a4, v317);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v318.f32[0]), v496.val[1], *(float32x2_t *)v318.f32, 1), v496.val[2], v318, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v307;
      v319 = vmulq_n_f32(vaddq_f32(a3, v317), *(float *)&v316);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v313 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v496.val[0], v319.f32[0]), v496.val[1], *(float32x2_t *)v319.f32, 1), v496.val[2], v319, 2);
    }
    else if (!(v311 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v309 + 16), *(_QWORD *)(*(_QWORD *)(v309 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v309 + 8) + 2448) + 520 * v311, *(_QWORD *)(*(_QWORD *)(v309 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v320 = *a1;
  a4.i64[0] = 0x600000005;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000005);
  *(_QWORD *)v474 = a3.i64[0];
  v321 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v321;
  v322 = *(_DWORD *)(v320[1] + 2004);
  if (v322 != *(_DWORD *)(*v320 + 272))
  {
    v323 = *(_QWORD *)(v320[2] + 8);
    if ((v322 & 0x10000000) != 0)
      v324 = 0x40000000;
    else
      v324 = 0x80000000;
    if ((v322 & 0x20000000) != 0)
      v325 = v324;
    else
      v325 = v322 & 0xCFFFFFFF;
    if ((v325 & 0x40000000) != 0)
    {
      v326 = *(_QWORD **)v323;
      v327 = *v326;
      v328 = *(_DWORD *)(*v326 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v328);
      a4.f32[1] = (float)(a3.i32[1] / v328);
      a4.f32[2] = (float)(v321 / v328);
      v329 = (const float *)(*v326 + 1656);
      v497 = vld3_f32(v329);
      v330 = *(_QWORD *)(v326[1] + 144);
      v331.i64[0] = 0x3F0000003F000000;
      v331.i64[1] = 0x3F0000003F000000;
      v332 = vaddq_f32(a4, v331);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v332.f32[0]), v497.val[1], *(float32x2_t *)v332.f32, 1), v497.val[2], v332, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v321;
      v333 = vmulq_n_f32(vaddq_f32(a3, v331), *(float *)&v330);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v327 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v497.val[0], v333.f32[0]), v497.val[1], *(float32x2_t *)v333.f32, 1), v497.val[2], v333, 2);
    }
    else if (!(v325 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v323 + 16), *(_QWORD *)(*(_QWORD *)(v323 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v323 + 8) + 2448) + 520 * v325, *(_QWORD *)(*(_QWORD *)(v323 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v334 = *a1;
  a4.i64[0] = 0x600000006;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000006);
  *(_QWORD *)v474 = a3.i64[0];
  v335 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v335;
  v336 = *(_DWORD *)(v334[1] + 2008);
  if (v336 != *(_DWORD *)(*v334 + 272))
  {
    v337 = *(_QWORD *)(v334[2] + 8);
    if ((v336 & 0x10000000) != 0)
      v338 = 0x40000000;
    else
      v338 = 0x80000000;
    if ((v336 & 0x20000000) != 0)
      v339 = v338;
    else
      v339 = v336 & 0xCFFFFFFF;
    if ((v339 & 0x40000000) != 0)
    {
      v340 = *(_QWORD **)v337;
      v341 = *v340;
      v342 = *(_DWORD *)(*v340 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v342);
      a4.f32[1] = (float)(a3.i32[1] / v342);
      a4.f32[2] = (float)(v335 / v342);
      v343 = (const float *)(*v340 + 1656);
      v498 = vld3_f32(v343);
      v344 = *(_QWORD *)(v340[1] + 144);
      v345.i64[0] = 0x3F0000003F000000;
      v345.i64[1] = 0x3F0000003F000000;
      v346 = vaddq_f32(a4, v345);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v346.f32[0]), v498.val[1], *(float32x2_t *)v346.f32, 1), v498.val[2], v346, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v335;
      v347 = vmulq_n_f32(vaddq_f32(a3, v345), *(float *)&v344);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v341 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v498.val[0], v347.f32[0]), v498.val[1], *(float32x2_t *)v347.f32, 1), v498.val[2], v347, 2);
    }
    else if (!(v339 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v337 + 16), *(_QWORD *)(*(_QWORD *)(v337 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v337 + 8) + 2448) + 520 * v339, *(_QWORD *)(*(_QWORD *)(v337 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v348 = *a1;
  a4.i64[0] = 0x600000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x600000007);
  *(_QWORD *)v474 = a3.i64[0];
  v349 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v349;
  v350 = *(_DWORD *)(v348[1] + 2012);
  if (v350 != *(_DWORD *)(*v348 + 272))
  {
    v351 = *(_QWORD *)(v348[2] + 8);
    if ((v350 & 0x10000000) != 0)
      v352 = 0x40000000;
    else
      v352 = 0x80000000;
    if ((v350 & 0x20000000) != 0)
      v353 = v352;
    else
      v353 = v350 & 0xCFFFFFFF;
    if ((v353 & 0x40000000) != 0)
    {
      v354 = *(_QWORD **)v351;
      v355 = *v354;
      v356 = *(_DWORD *)(*v354 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v356);
      a4.f32[1] = (float)(a3.i32[1] / v356);
      a4.f32[2] = (float)(v349 / v356);
      v357 = (const float *)(*v354 + 1656);
      v499 = vld3_f32(v357);
      v358 = *(_QWORD *)(v354[1] + 144);
      v359.i64[0] = 0x3F0000003F000000;
      v359.i64[1] = 0x3F0000003F000000;
      v360 = vaddq_f32(a4, v359);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v360.f32[0]), v499.val[1], *(float32x2_t *)v360.f32, 1), v499.val[2], v360, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v349;
      v361 = vmulq_n_f32(vaddq_f32(a3, v359), *(float *)&v358);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v355 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v499.val[0], v361.f32[0]), v499.val[1], *(float32x2_t *)v361.f32, 1), v499.val[2], v361, 2);
    }
    else if (!(v353 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v351 + 16), *(_QWORD *)(*(_QWORD *)(v351 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v351 + 8) + 2448) + 520 * v353, *(_QWORD *)(*(_QWORD *)(v351 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v362 = *a1;
  v363 = *(_DWORD *)a2;
  *(_DWORD *)v474 = *(_DWORD *)a2;
  a4.i64[0] = 0x700000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)(a2 + 4), (int32x2_t)0x700000007);
  *(_QWORD *)&v474[4] = a3.i64[0];
  v364 = *(_DWORD *)(v362[1] + 2016);
  if (v364 != *(_DWORD *)(*v362 + 272))
  {
    v365 = *(_QWORD *)(v362[2] + 8);
    if ((v364 & 0x10000000) != 0)
      v366 = 0x40000000;
    else
      v366 = 0x80000000;
    if ((v364 & 0x20000000) != 0)
      v367 = v366;
    else
      v367 = v364 & 0xCFFFFFFF;
    if ((v367 & 0x40000000) != 0)
    {
      v368 = *(_QWORD **)v365;
      v369 = *v368;
      v370 = (const float *)(*v368 + 1656);
      v371 = *(_QWORD *)(v368[1] + 144);
      LODWORD(v368) = *(_DWORD *)(*v368 + 8);
      v372 = a3.i32[1];
      a5.f32[0] = (float)(v363 / (int)v368);
      a5.f32[1] = (float)(a3.i32[0] / (int)v368);
      a5.f32[2] = (float)(a3.i32[1] / (int)v368);
      v373.i64[0] = 0x3F0000003F000000;
      v373.i64[1] = 0x3F0000003F000000;
      v510 = vld3_f32(v370);
      v374 = vaddq_f32(a5, v373);
      *(int32x2_t *)v374.f32 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v374.f32[0]), v510.val[1], *(float32x2_t *)v374.f32, 1), v510.val[2], v374, 2), (float32x2_t)0xBF000000BF000000));
      v475 = *(int32x2_t *)v374.f32;
      v476 = 0;
      v374.i32[0] = v363;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(vzip1_s32(*(int32x2_t *)v374.f32, *(int32x2_t *)a3.f32));
      a3.f32[2] = (float)v372;
      v375 = vmulq_n_f32(vaddq_f32(a3, v373), *(float *)&v371);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v369 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v510.val[0], v375.f32[0]), v510.val[1], *(float32x2_t *)v375.f32, 1), v510.val[2], v375, 2);
    }
    else if (!(v367 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v365 + 16), *(_QWORD *)(*(_QWORD *)(v365 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v365 + 8) + 2448) + 520 * v367, *(_QWORD *)(*(_QWORD *)(v365 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v376 = *a1;
  a4.i64[0] = 0x700000001;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000001);
  *(_QWORD *)v474 = a3.i64[0];
  v377 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v377;
  v378 = *(_DWORD *)(v376[1] + 2020);
  if (v378 != *(_DWORD *)(*v376 + 272))
  {
    v379 = *(_QWORD *)(v376[2] + 8);
    if ((v378 & 0x10000000) != 0)
      v380 = 0x40000000;
    else
      v380 = 0x80000000;
    if ((v378 & 0x20000000) != 0)
      v381 = v380;
    else
      v381 = v378 & 0xCFFFFFFF;
    if ((v381 & 0x40000000) != 0)
    {
      v382 = *(_QWORD **)v379;
      v383 = *v382;
      v384 = *(_DWORD *)(*v382 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v384);
      a4.f32[1] = (float)(a3.i32[1] / v384);
      a4.f32[2] = (float)(v377 / v384);
      v385 = (const float *)(*v382 + 1656);
      v500 = vld3_f32(v385);
      v386 = *(_QWORD *)(v382[1] + 144);
      v387.i64[0] = 0x3F0000003F000000;
      v387.i64[1] = 0x3F0000003F000000;
      v388 = vaddq_f32(a4, v387);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v388.f32[0]), v500.val[1], *(float32x2_t *)v388.f32, 1), v500.val[2], v388, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v377;
      v389 = vmulq_n_f32(vaddq_f32(a3, v387), *(float *)&v386);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v383 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v500.val[0], v389.f32[0]), v500.val[1], *(float32x2_t *)v389.f32, 1), v500.val[2], v389, 2);
    }
    else if (!(v381 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v379 + 16), *(_QWORD *)(*(_QWORD *)(v379 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v379 + 8) + 2448) + 520 * v381, *(_QWORD *)(*(_QWORD *)(v379 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v390 = *a1;
  a4.i64[0] = 0x700000002;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000002);
  *(_QWORD *)v474 = a3.i64[0];
  v391 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v391;
  v392 = *(_DWORD *)(v390[1] + 2024);
  if (v392 != *(_DWORD *)(*v390 + 272))
  {
    v393 = *(_QWORD *)(v390[2] + 8);
    if ((v392 & 0x10000000) != 0)
      v394 = 0x40000000;
    else
      v394 = 0x80000000;
    if ((v392 & 0x20000000) != 0)
      v395 = v394;
    else
      v395 = v392 & 0xCFFFFFFF;
    if ((v395 & 0x40000000) != 0)
    {
      v396 = *(_QWORD **)v393;
      v397 = *v396;
      v398 = *(_DWORD *)(*v396 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v398);
      a4.f32[1] = (float)(a3.i32[1] / v398);
      a4.f32[2] = (float)(v391 / v398);
      v399 = (const float *)(*v396 + 1656);
      v501 = vld3_f32(v399);
      v400 = *(_QWORD *)(v396[1] + 144);
      v401.i64[0] = 0x3F0000003F000000;
      v401.i64[1] = 0x3F0000003F000000;
      v402 = vaddq_f32(a4, v401);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v402.f32[0]), v501.val[1], *(float32x2_t *)v402.f32, 1), v501.val[2], v402, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v391;
      v403 = vmulq_n_f32(vaddq_f32(a3, v401), *(float *)&v400);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v397 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v501.val[0], v403.f32[0]), v501.val[1], *(float32x2_t *)v403.f32, 1), v501.val[2], v403, 2);
    }
    else if (!(v395 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v393 + 16), *(_QWORD *)(*(_QWORD *)(v393 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v393 + 8) + 2448) + 520 * v395, *(_QWORD *)(*(_QWORD *)(v393 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v404 = *a1;
  a4.i64[0] = 0x700000003;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000003);
  *(_QWORD *)v474 = a3.i64[0];
  v405 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v405;
  v406 = *(_DWORD *)(v404[1] + 2028);
  if (v406 != *(_DWORD *)(*v404 + 272))
  {
    v407 = *(_QWORD *)(v404[2] + 8);
    if ((v406 & 0x10000000) != 0)
      v408 = 0x40000000;
    else
      v408 = 0x80000000;
    if ((v406 & 0x20000000) != 0)
      v409 = v408;
    else
      v409 = v406 & 0xCFFFFFFF;
    if ((v409 & 0x40000000) != 0)
    {
      v410 = *(_QWORD **)v407;
      v411 = *v410;
      v412 = *(_DWORD *)(*v410 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v412);
      a4.f32[1] = (float)(a3.i32[1] / v412);
      a4.f32[2] = (float)(v405 / v412);
      v413 = (const float *)(*v410 + 1656);
      v502 = vld3_f32(v413);
      v414 = *(_QWORD *)(v410[1] + 144);
      v415.i64[0] = 0x3F0000003F000000;
      v415.i64[1] = 0x3F0000003F000000;
      v416 = vaddq_f32(a4, v415);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v416.f32[0]), v502.val[1], *(float32x2_t *)v416.f32, 1), v502.val[2], v416, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v405;
      v417 = vmulq_n_f32(vaddq_f32(a3, v415), *(float *)&v414);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v411 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v502.val[0], v417.f32[0]), v502.val[1], *(float32x2_t *)v417.f32, 1), v502.val[2], v417, 2);
    }
    else if (!(v409 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v407 + 16), *(_QWORD *)(*(_QWORD *)(v407 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v407 + 8) + 2448) + 520 * v409, *(_QWORD *)(*(_QWORD *)(v407 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v418 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000004);
  *(_QWORD *)v474 = a3.i64[0];
  v419 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v419;
  v420 = *(_DWORD *)(v418[1] + 2032);
  if (v420 != *(_DWORD *)(*v418 + 272))
  {
    v421 = *(_QWORD *)(v418[2] + 8);
    if ((v420 & 0x10000000) != 0)
      v422 = 0x40000000;
    else
      v422 = 0x80000000;
    if ((v420 & 0x20000000) != 0)
      v423 = v422;
    else
      v423 = v420 & 0xCFFFFFFF;
    if ((v423 & 0x40000000) != 0)
    {
      v424 = *(_QWORD **)v421;
      v425 = *v424;
      v426 = *(_DWORD *)(*v424 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v426);
      a4.f32[1] = (float)(a3.i32[1] / v426);
      a4.f32[2] = (float)(v419 / v426);
      v427 = (const float *)(*v424 + 1656);
      v503 = vld3_f32(v427);
      v428 = *(_QWORD *)(v424[1] + 144);
      v429.i64[0] = 0x3F0000003F000000;
      v429.i64[1] = 0x3F0000003F000000;
      v430 = vaddq_f32(a4, v429);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v430.f32[0]), v503.val[1], *(float32x2_t *)v430.f32, 1), v503.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v419;
      v431 = vmulq_n_f32(vaddq_f32(a3, v429), *(float *)&v428);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v425 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v503.val[0], v431.f32[0]), v503.val[1], *(float32x2_t *)v431.f32, 1), v503.val[2], v431, 2);
    }
    else if (!(v423 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v421 + 16), *(_QWORD *)(*(_QWORD *)(v421 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v421 + 8) + 2448) + 520 * v423, *(_QWORD *)(*(_QWORD *)(v421 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v432 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000005);
  *(_QWORD *)v474 = a3.i64[0];
  v433 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v433;
  v434 = *(_DWORD *)(v432[1] + 2036);
  if (v434 != *(_DWORD *)(*v432 + 272))
  {
    v435 = *(_QWORD *)(v432[2] + 8);
    if ((v434 & 0x10000000) != 0)
      v436 = 0x40000000;
    else
      v436 = 0x80000000;
    if ((v434 & 0x20000000) != 0)
      v437 = v436;
    else
      v437 = v434 & 0xCFFFFFFF;
    if ((v437 & 0x40000000) != 0)
    {
      v438 = *(_QWORD **)v435;
      v439 = *v438;
      v440 = *(_DWORD *)(*v438 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v440);
      a4.f32[1] = (float)(a3.i32[1] / v440);
      a4.f32[2] = (float)(v433 / v440);
      v441 = (const float *)(*v438 + 1656);
      v504 = vld3_f32(v441);
      v442 = *(_QWORD *)(v438[1] + 144);
      v443.i64[0] = 0x3F0000003F000000;
      v443.i64[1] = 0x3F0000003F000000;
      v444 = vaddq_f32(a4, v443);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v444.f32[0]), v504.val[1], *(float32x2_t *)v444.f32, 1), v504.val[2], v444, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v433;
      v445 = vmulq_n_f32(vaddq_f32(a3, v443), *(float *)&v442);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v439 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v504.val[0], v445.f32[0]), v504.val[1], *(float32x2_t *)v445.f32, 1), v504.val[2], v445, 2);
    }
    else if (!(v437 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v435 + 16), *(_QWORD *)(*(_QWORD *)(v435 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v435 + 8) + 2448) + 520 * v437, *(_QWORD *)(*(_QWORD *)(v435 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v446 = *a1;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000006);
  *(_QWORD *)v474 = a3.i64[0];
  v447 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v447;
  v448 = *(_DWORD *)(v446[1] + 2040);
  if (v448 != *(_DWORD *)(*v446 + 272))
  {
    v449 = *(_QWORD *)(v446[2] + 8);
    if ((v448 & 0x10000000) != 0)
      v450 = 0x40000000;
    else
      v450 = 0x80000000;
    if ((v448 & 0x20000000) != 0)
      v451 = v450;
    else
      v451 = v448 & 0xCFFFFFFF;
    if ((v451 & 0x40000000) != 0)
    {
      v452 = *(_QWORD **)v449;
      v453 = *v452;
      v454 = *(_DWORD *)(*v452 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v454);
      a4.f32[1] = (float)(a3.i32[1] / v454);
      a4.f32[2] = (float)(v447 / v454);
      v455 = (const float *)(*v452 + 1656);
      v505 = vld3_f32(v455);
      v456 = *(_QWORD *)(v452[1] + 144);
      v457.i64[0] = 0x3F0000003F000000;
      v457.i64[1] = 0x3F0000003F000000;
      v458 = vaddq_f32(a4, v457);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v458.f32[0]), v505.val[1], *(float32x2_t *)v458.f32, 1), v505.val[2], v458, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v447;
      v459 = vmulq_n_f32(vaddq_f32(a3, v457), *(float *)&v456);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v453 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v505.val[0], v459.f32[0]), v505.val[1], *(float32x2_t *)v459.f32, 1), v505.val[2], v459, 2);
    }
    else if (!(v451 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v449 + 16), *(_QWORD *)(*(_QWORD *)(v449 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v449 + 8) + 2448) + 520 * v451, *(_QWORD *)(*(_QWORD *)(v449 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
  v460 = *a1;
  a4.i64[0] = 0x700000007;
  *(int32x2_t *)a3.f32 = vadd_s32(*(int32x2_t *)a2, (int32x2_t)0x700000007);
  *(_QWORD *)v474 = a3.i64[0];
  v461 = *(_DWORD *)(a2 + 8) + 7;
  *(_DWORD *)&v474[8] = v461;
  v462 = *(_DWORD *)(v460[1] + 2044);
  if (v462 != *(_DWORD *)(*v460 + 272))
  {
    v463 = *(_QWORD *)(v460[2] + 8);
    if ((v462 & 0x10000000) != 0)
      v464 = 0x40000000;
    else
      v464 = 0x80000000;
    if ((v462 & 0x20000000) != 0)
      v465 = v464;
    else
      v465 = v462 & 0xCFFFFFFF;
    if ((v465 & 0x40000000) != 0)
    {
      v466 = *(_QWORD **)v463;
      v467 = *v466;
      v468 = *(_DWORD *)(*v466 + 8);
      a4.f32[0] = (float)(a3.i32[0] / v468);
      a4.f32[1] = (float)(a3.i32[1] / v468);
      a4.f32[2] = (float)(v461 / v468);
      v469 = (const float *)(*v466 + 1656);
      v506 = vld3_f32(v469);
      v470 = *(_QWORD *)(v466[1] + 144);
      v471.i64[0] = 0x3F0000003F000000;
      v471.i64[1] = 0x3F0000003F000000;
      v472 = vaddq_f32(a4, v471);
      v475 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v472.f32[0]), v506.val[1], *(float32x2_t *)v472.f32, 1), v506.val[2], v472, 2), (float32x2_t)0xBF000000BF000000));
      v476 = 0;
      *(float32x2_t *)a3.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[2] = (float)v461;
      v473 = vmulq_n_f32(vaddq_f32(a3, v471), *(float *)&v470);
      v477 = &v475;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v467 + 64), (int *)&v475, (uint64_t)&unk_2245BA939, (uint64_t **)&v477)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v506.val[0], v473.f32[0]), v506.val[1], *(float32x2_t *)v473.f32, 1), v506.val[2], v473, 2);
    }
    else if (!(v465 >> 30))
    {
      sub_2239B2318(**(_QWORD **)(v463 + 16), *(_QWORD *)(*(_QWORD *)(v463 + 16) + 8), (int32x2_t *)v474, *(_QWORD *)(*(_QWORD *)(v463 + 8) + 2448) + 520 * v465, *(_QWORD *)(*(_QWORD *)(v463 + 16) + 16), *(double *)a3.i64, a4, *(double *)a5.i64, a6, a7, a8, a9, a10);
    }
  }
}

uint64_t sub_2239E1350(uint64_t a1, int a2, int a3, uint64_t a4, double a5, float32x4_t a6, double a7, double a8, double a9, double a10, __n128 a11, __n128 a12)
{
  unsigned int v15;
  uint64_t v16;
  int32x2_t v17;
  uint64_t v18;
  uint64_t result;
  float32x4_t v20;
  double v21;
  double v22;
  double v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  int32x2_t v33;
  _BYTE v34[12];
  double v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  int v46;
  char v47;
  char v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  int v54;
  char v55;
  char v56;
  uint64_t v57;
  int v58;
  char v59;
  char v60;
  uint64_t v61;
  int v62;
  char v63;
  char v64;
  uint64_t v65;
  int v66;
  char v67;
  char v68;
  uint64_t v69;
  int v70;
  char v71;
  char v72;
  uint64_t v73;
  int v74;
  char v75;
  char v76;
  uint64_t v77;
  int v78;
  char v79;
  char v80;
  uint64_t v81;
  int v82;
  char v83;
  char v84;
  uint64_t v85;
  int v86;
  char v87;
  char v88;
  int v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  int v94;
  char v95;
  char v96;
  int v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  int v102;
  char v103;
  char v104;
  int v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  int v110;
  char v111;
  char v112;
  int v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  int v118;
  char v119;
  char v120;
  int v121;
  uint64_t v122;
  char v123;
  char v124;
  uint64_t v125;
  int v126;
  char v127;
  char v128;
  int v129;
  uint64_t v130;
  char v131;
  char v132;
  uint64_t v133;
  int v134;
  char v135;
  char v136;
  int v137;
  uint64_t v138;
  char v139;
  int32x2_t v140;
  int v141;
  uint64_t v142;
  int v143;

  v15 = a3 & 0xCFFFFFFF;
  v16 = *(_QWORD *)(a1 + 184) + 4488 * (a3 & 0xCFFFFFFF);
  v17 = *(int32x2_t *)v16;
  v141 = *(_DWORD *)(v16 + 8);
  v140 = v17;
  v18 = *(_QWORD *)(v16 + 12);
  v143 = *(_DWORD *)(v16 + 20);
  v142 = v18;
  v34[0] = 1;
  *(_QWORD *)&v34[4] = -1;
  LODWORD(v35) = -1;
  BYTE4(v35) = 8;
  LOBYTE(v36) = 1;
  v37 = -1;
  v38 = -1;
  v39 = 8;
  v40 = 1;
  v41 = -1;
  v42 = -1;
  v43 = 8;
  v44 = 1;
  v45 = -1;
  v46 = -1;
  v47 = 8;
  v48 = 1;
  v49 = -1;
  v50 = -1;
  v51 = 8;
  v52 = 1;
  v53 = -1;
  v54 = -1;
  v55 = 8;
  v56 = 1;
  v57 = -1;
  v58 = -1;
  v59 = 8;
  v60 = 1;
  v61 = -1;
  v62 = -1;
  v63 = 8;
  v64 = 1;
  v65 = -1;
  v66 = -1;
  v67 = 8;
  v68 = 1;
  v69 = -1;
  v70 = -1;
  v71 = 8;
  v72 = 1;
  v73 = -1;
  v74 = -1;
  v75 = 8;
  v76 = 1;
  v77 = -1;
  v78 = -1;
  v79 = 8;
  v80 = 1;
  v81 = -1;
  v82 = -1;
  v83 = 8;
  v84 = 1;
  v85 = -1;
  v86 = -1;
  v87 = 8;
  v88 = 1;
  v89 = -1;
  v90 = -1;
  v91 = 8;
  v92 = 1;
  v93 = -1;
  v94 = -1;
  v95 = 8;
  v96 = 1;
  v97 = -1;
  v98 = -1;
  v99 = 8;
  v100 = 1;
  v101 = -1;
  v102 = -1;
  v103 = 8;
  v104 = 1;
  v105 = -1;
  v106 = -1;
  v107 = 8;
  v108 = 1;
  v109 = -1;
  v110 = -1;
  v111 = 8;
  v112 = 1;
  v113 = -1;
  v114 = -1;
  v115 = 8;
  v116 = 1;
  v117 = -1;
  v118 = -1;
  v119 = 8;
  v120 = 1;
  v121 = -1;
  v122 = -1;
  v123 = 8;
  v124 = 1;
  v125 = -1;
  v126 = -1;
  v127 = 8;
  v128 = 1;
  v129 = -1;
  v130 = -1;
  v131 = 8;
  v132 = 1;
  v133 = -1;
  v134 = -1;
  v135 = 8;
  v136 = 1;
  v137 = -1;
  v138 = -1;
  v139 = 8;
  result = sub_2239E1814(a4, a2, 0, (__int32 *)&v140, *(_DWORD *)(v16 + 64), (uint64_t)v34, NAN, a6, a7, a8, a9, a10, a11, a12);
  if (a2 && (_DWORD)result != 3)
  {
    v26 = (a2 - 1);
    if ((_DWORD)v26)
    {
      v27 = *(_QWORD *)(a1 + 184);
      if ((*(_DWORD *)(v27 + 4488 * v15 + 24) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 28) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 32) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 36) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 40) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 44) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 48) & 0x80000000) == 0)
      {
        result = sub_2239E1350(a1, v26);
        v27 = *(_QWORD *)(a1 + 184);
      }
      if ((*(_DWORD *)(v27 + 4488 * v15 + 52) & 0x80000000) == 0)
        return sub_2239E1350(a1, v26);
    }
    else
    {
      for (i = 0; i != 8; ++i)
      {
        v29 = byte_224657EA6[i];
        v30 = *(_QWORD *)(a1 + 184);
        v31 = *(_DWORD *)(v30 + 4488 * v15 + 4 * v29 + 24);
        if ((v31 & 0x80000000) == 0)
        {
          v32 = (v142 - v140.i32[0]) >> 1;
          v33 = vdup_n_s32(v32);
          *(int32x2_t *)v20.f32 = vmla_s32(v140, v33, (int32x2_t)(*(_QWORD *)&vshl_u32((uint32x2_t)vdup_n_s32(v29), (uint32x2_t)-2) & 0xFFFFFF01FFFFFF01));
          *(_QWORD *)v34 = v20.i64[0];
          *(_DWORD *)&v34[8] = v141 + v32 * (v29 & 1);
          v35 = COERCE_DOUBLE(vadd_s32(*(int32x2_t *)v20.f32, v33));
          v36 = *(_DWORD *)&v34[8] + v32;
          result = sub_2239E1814(a4, 0, v31, (__int32 *)v34, v31 >> 30 == 0, v30 + 4488 * v15 + 540 * v29 + 68, v35, v20, *(double *)&v33, v21, v22, v23, v24, v25);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2239E1814(uint64_t a1, int a2, unsigned int a3, __int32 *a4, int a5, uint64_t a6, double a7, float32x4_t a8, double a9, double a10, double a11, double a12, __n128 a13, __n128 a14)
{
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t **v22;
  __int32 v23;
  __int32 v24;
  __int32 v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int32 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[5];
  char v54;
  unint64_t v55;
  __int32 v56;

  if (a5)
  {
    if (a2)
      return 2;
    v17 = *(_QWORD **)(a1 + 8);
    v54 = 1;
    v18 = *v17;
    v19 = a3;
    v20 = *(_QWORD *)(*v17 + 2328);
    if (a3 >= (unint64_t)((*(_QWORD *)(*v17 + 2336) - v20) >> 11))
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v20 = *(_QWORD *)(v18 + 2328);
    }
    v21 = (unsigned int *)(v20 + (v19 << 11));
    v53[0] = v18;
    v53[1] = v21;
    v53[2] = a6;
    v53[3] = &v54;
    v22 = (uint64_t **)v17[1];
    v53[4] = v22;
    v23 = *a4;
    v24 = a4[1];
    LODWORD(v55) = *a4;
    HIDWORD(v55) = v24;
    v25 = a4[2];
    v56 = v25;
    v26 = *v21;
    v27 = *(_DWORD *)(v18 + 272);
    if (v26 >> 30)
      v28 = 1;
    else
      v28 = (_DWORD)v26 == v27;
    if (!v28)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v26 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 1;
    HIDWORD(v55) = v24;
    v56 = v25;
    v29 = v21[1];
    if (v29 >> 30)
      v30 = 1;
    else
      v30 = (_DWORD)v29 == v27;
    if (!v30)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 2;
    HIDWORD(v55) = v24;
    v56 = v25;
    v31 = v21[2];
    if (v31 >> 30)
      v32 = 1;
    else
      v32 = (_DWORD)v31 == v27;
    if (!v32)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 3;
    HIDWORD(v55) = v24;
    v56 = v25;
    v33 = v21[3];
    if (v33 >> 30)
      v34 = 1;
    else
      v34 = (_DWORD)v33 == v27;
    if (!v34)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v33 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 4;
    HIDWORD(v55) = v24;
    v56 = v25;
    v35 = v21[4];
    if (v35 >> 30)
      v36 = 1;
    else
      v36 = (_DWORD)v35 == v27;
    if (!v36)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v35 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 5;
    HIDWORD(v55) = v24;
    v56 = v25;
    v37 = v21[5];
    if (!(v37 >> 30) && (_DWORD)v37 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v37 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 6;
    HIDWORD(v55) = v24;
    v56 = v25;
    v38 = v21[6];
    if (!(v38 >> 30) && (_DWORD)v38 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    LODWORD(v55) = v23 + 7;
    HIDWORD(v55) = v24;
    v56 = v25;
    v39 = v21[7];
    if (!(v39 >> 30) && (_DWORD)v39 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v39 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    v40 = v24 + 1;
    LODWORD(v55) = v23;
    HIDWORD(v55) = v24 + 1;
    v56 = v25;
    v41 = v21[8];
    if (!(v41 >> 30) && (_DWORD)v41 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 1;
    HIDWORD(v55) = v40;
    v56 = v25;
    v42 = v21[9];
    if (!(v42 >> 30) && (_DWORD)v42 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v42 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 2;
    HIDWORD(v55) = v40;
    v56 = v25;
    v43 = v21[10];
    if (!(v43 >> 30) && (_DWORD)v43 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 3;
    HIDWORD(v55) = v40;
    v56 = v25;
    v44 = v21[11];
    if (!(v44 >> 30) && (_DWORD)v44 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v44 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 4;
    HIDWORD(v55) = v40;
    v56 = v25;
    v45 = v21[12];
    if (!(v45 >> 30) && (_DWORD)v45 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 5;
    HIDWORD(v55) = v40;
    v56 = v25;
    v46 = v21[13];
    if (!(v46 >> 30) && (_DWORD)v46 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v46 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 6;
    HIDWORD(v55) = v40;
    v56 = v25;
    v47 = v21[14];
    if (!(v47 >> 30) && (_DWORD)v47 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v40 = v24 + 1;
    }
    LODWORD(v55) = v23 + 7;
    HIDWORD(v55) = v40;
    v56 = v25;
    v48 = v21[15];
    if (!(v48 >> 30) && (_DWORD)v48 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v48 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v24 = a4[1];
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
    }
    v49 = v24 + 2;
    v55 = __PAIR64__(v49, v23);
    v56 = v25;
    v50 = v21[16];
    if (!(v50 >> 30) && (_DWORD)v50 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v49 = a4[1] + 2;
    }
    LODWORD(v55) = v23 + 1;
    HIDWORD(v55) = v49;
    v56 = v25;
    v51 = v21[17];
    if (!(v51 >> 30) && (_DWORD)v51 != v27)
    {
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v51 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
      v23 = *a4;
      v25 = a4[2];
      v27 = *(_DWORD *)(v18 + 272);
      v49 = a4[1] + 2;
    }
    LODWORD(v55) = v23 + 2;
    HIDWORD(v55) = v49;
    v56 = v25;
    v52 = v21[18];
    if (!(v52 >> 30) && (_DWORD)v52 != v27)
      sub_2239B2318(*v22[1], v22[1][1], (int32x2_t *)&v55, (*v22)[306] + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), v22[1][2], a7, a8, a9, a10, a11, a12, a13, a14);
    sub_2239E1F0C(v53, a4, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return 3;
}

void sub_2239E1F0C(_QWORD *a1, __int32 *a2, double a3, float32x4_t a4, double a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  __int32 v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  unsigned int *v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  __int32 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int32 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int32 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int32 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int32 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int32 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int32 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int32 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;

  v12 = *a2;
  v13 = a2[1];
  v14 = v13 + 2;
  LODWORD(v114) = *a2 + 3;
  HIDWORD(v114) = v13 + 2;
  v15 = a2[2];
  v115 = v15;
  v16 = (unsigned int *)a1[1];
  v17 = v16[19];
  v18 = *(_DWORD *)(*a1 + 272);
  if (v17 >> 30)
    v19 = 1;
  else
    v19 = (_DWORD)v17 == v18;
  if (!v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v17 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v14;
  v115 = v15;
  v20 = v16[20];
  if (v20 >> 30)
    v21 = 1;
  else
    v21 = (_DWORD)v20 == v18;
  if (!v21)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v20 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v14;
  v115 = v15;
  v22 = v16[21];
  if (v22 >> 30)
    v23 = 1;
  else
    v23 = (_DWORD)v22 == v18;
  if (!v23)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v22 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v14;
  v115 = v15;
  v24 = v16[22];
  if (!(v24 >> 30) && (_DWORD)v24 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v24 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v14;
  v115 = v15;
  v25 = v16[23];
  if (!(v25 >> 30) && (_DWORD)v25 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v25 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
  }
  v26 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v15;
  v27 = v16[24];
  if (!(v27 >> 30) && (_DWORD)v27 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v26;
  v115 = v15;
  v28 = v16[25];
  if (!(v28 >> 30) && (_DWORD)v28 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v28 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v26;
  v115 = v15;
  v29 = v16[26];
  if (!(v29 >> 30) && (_DWORD)v29 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v26;
  v115 = v15;
  v30 = v16[27];
  if (!(v30 >> 30) && (_DWORD)v30 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v30 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v26;
  v115 = v15;
  v31 = v16[28];
  if (!(v31 >> 30) && (_DWORD)v31 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v26;
  v115 = v15;
  v32 = v16[29];
  if (!(v32 >> 30) && (_DWORD)v32 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v32 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v26;
  v115 = v15;
  v33 = v16[30];
  if (!(v33 >> 30) && (_DWORD)v33 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v33 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v26;
  v115 = v15;
  v34 = v16[31];
  if (!(v34 >> 30) && (_DWORD)v34 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v34 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
  }
  v35 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v15;
  v36 = v16[32];
  if (!(v36 >> 30) && (_DWORD)v36 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v35;
  v115 = v15;
  v37 = v16[33];
  if (!(v37 >> 30) && (_DWORD)v37 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v37 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v35;
  v115 = v15;
  v38 = v16[34];
  if (!(v38 >> 30) && (_DWORD)v38 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v35;
  v115 = v15;
  v39 = v16[35];
  if (!(v39 >> 30) && (_DWORD)v39 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v39 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v35;
  v115 = v15;
  v40 = v16[36];
  if (!(v40 >> 30) && (_DWORD)v40 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v40 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v35;
  v115 = v15;
  v41 = v16[37];
  if (!(v41 >> 30) && (_DWORD)v41 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v35;
  v115 = v15;
  v42 = v16[38];
  if (!(v42 >> 30) && (_DWORD)v42 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v42 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v35;
  v115 = v15;
  v43 = v16[39];
  if (!(v43 >> 30) && (_DWORD)v43 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
  }
  v44 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v15;
  v45 = v16[40];
  if (!(v45 >> 30) && (_DWORD)v45 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v44;
  v115 = v15;
  v46 = v16[41];
  if (!(v46 >> 30) && (_DWORD)v46 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v46 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v44;
  v115 = v15;
  v47 = v16[42];
  if (!(v47 >> 30) && (_DWORD)v47 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v44;
  v115 = v15;
  v48 = v16[43];
  if (!(v48 >> 30) && (_DWORD)v48 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v48 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v44;
  v115 = v15;
  v49 = v16[44];
  if (!(v49 >> 30) && (_DWORD)v49 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v49 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v44;
  v115 = v15;
  v50 = v16[45];
  if (!(v50 >> 30) && (_DWORD)v50 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v44;
  v115 = v15;
  v51 = v16[46];
  if (!(v51 >> 30) && (_DWORD)v51 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v51 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v44;
  v115 = v15;
  v52 = v16[47];
  if (!(v52 >> 30) && (_DWORD)v52 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
  }
  v53 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v15;
  v54 = v16[48];
  if (!(v54 >> 30) && (_DWORD)v54 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v54 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v53;
  v115 = v15;
  v55 = v16[49];
  if (!(v55 >> 30) && (_DWORD)v55 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v55 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v53;
  v115 = v15;
  v56 = v16[50];
  if (!(v56 >> 30) && (_DWORD)v56 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v56 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v53;
  v115 = v15;
  v57 = v16[51];
  if (!(v57 >> 30) && (_DWORD)v57 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v57 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v53;
  v115 = v15;
  v58 = v16[52];
  if (!(v58 >> 30) && (_DWORD)v58 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v58 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v53;
  v115 = v15;
  v59 = v16[53];
  if (!(v59 >> 30) && (_DWORD)v59 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v59 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v53;
  v115 = v15;
  v60 = v16[54];
  if (!(v60 >> 30) && (_DWORD)v60 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v60 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v53;
  v115 = v15;
  v61 = v16[55];
  if (!(v61 >> 30) && (_DWORD)v61 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v61 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
  }
  v62 = v13 + 7;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 7;
  v115 = v15;
  v63 = v16[56];
  if (!(v63 >> 30) && (_DWORD)v63 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v63 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v62;
  v115 = v15;
  v64 = v16[57];
  if (!(v64 >> 30) && (_DWORD)v64 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v64 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v62;
  v115 = v15;
  v65 = v16[58];
  if (!(v65 >> 30) && (_DWORD)v65 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v65 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v62;
  v115 = v15;
  v66 = v16[59];
  if (!(v66 >> 30) && (_DWORD)v66 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v66 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v62;
  v115 = v15;
  v67 = v16[60];
  if (!(v67 >> 30) && (_DWORD)v67 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v67 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v62;
  v115 = v15;
  v68 = v16[61];
  if (!(v68 >> 30) && (_DWORD)v68 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v68 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v62;
  v115 = v15;
  v69 = v16[62];
  if (!(v69 >> 30) && (_DWORD)v69 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v69 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v62 = v13 + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v62;
  v115 = v15;
  v70 = v16[63];
  if (!(v70 >> 30) && (_DWORD)v70 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v70 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v71 = v15 + 1;
  v115 = v71;
  v72 = v16[64];
  if (!(v72 >> 30) && (_DWORD)v72 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v72 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v71;
  v73 = v16[65];
  if (!(v73 >> 30) && (_DWORD)v73 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v73 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v71;
  v74 = v16[66];
  if (!(v74 >> 30) && (_DWORD)v74 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v74 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v71;
  v75 = v16[67];
  if (!(v75 >> 30) && (_DWORD)v75 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v75 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v71;
  v76 = v16[68];
  if (!(v76 >> 30) && (_DWORD)v76 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v76 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v71;
  v77 = v16[69];
  if (!(v77 >> 30) && (_DWORD)v77 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v77 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v71;
  v78 = v16[70];
  if (!(v78 >> 30) && (_DWORD)v78 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v78 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v71;
  v79 = v16[71];
  if (!(v79 >> 30) && (_DWORD)v79 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v79 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  v80 = v13 + 1;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 1;
  v115 = v71;
  v81 = v16[72];
  if (!(v81 >> 30) && (_DWORD)v81 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v81 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v80;
  v115 = v71;
  v82 = v16[73];
  if (!(v82 >> 30) && (_DWORD)v82 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v82 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v80;
  v115 = v71;
  v83 = v16[74];
  if (!(v83 >> 30) && (_DWORD)v83 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v83 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v80;
  v115 = v71;
  v84 = v16[75];
  if (!(v84 >> 30) && (_DWORD)v84 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v84 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v80;
  v115 = v71;
  v85 = v16[76];
  if (!(v85 >> 30) && (_DWORD)v85 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v85 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v80;
  v115 = v71;
  v86 = v16[77];
  if (!(v86 >> 30) && (_DWORD)v86 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v86 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v80;
  v115 = v71;
  v87 = v16[78];
  if (!(v87 >> 30) && (_DWORD)v87 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v87 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 1;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v80;
  v115 = v71;
  v88 = v16[79];
  if (!(v88 >> 30) && (_DWORD)v88 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v88 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  v89 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v71;
  v90 = v16[80];
  if (!(v90 >> 30) && (_DWORD)v90 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v90 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v89;
  v115 = v71;
  v91 = v16[81];
  if (!(v91 >> 30) && (_DWORD)v91 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v91 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v89;
  v115 = v71;
  v92 = v16[82];
  if (!(v92 >> 30) && (_DWORD)v92 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v92 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v89;
  v115 = v71;
  v93 = v16[83];
  if (!(v93 >> 30) && (_DWORD)v93 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v93 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v89;
  v115 = v71;
  v94 = v16[84];
  if (!(v94 >> 30) && (_DWORD)v94 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v94 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v89;
  v115 = v71;
  v95 = v16[85];
  if (!(v95 >> 30) && (_DWORD)v95 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v95 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v89;
  v115 = v71;
  v96 = v16[86];
  if (!(v96 >> 30) && (_DWORD)v96 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v96 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 2;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v89;
  v115 = v71;
  v97 = v16[87];
  if (!(v97 >> 30) && (_DWORD)v97 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v97 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  v98 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v71;
  v99 = v16[88];
  if (!(v99 >> 30) && (_DWORD)v99 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v99 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v98;
  v115 = v71;
  v100 = v16[89];
  if (!(v100 >> 30) && (_DWORD)v100 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v100 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v98;
  v115 = v71;
  v101 = v16[90];
  if (!(v101 >> 30) && (_DWORD)v101 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v101 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v98;
  v115 = v71;
  v102 = v16[91];
  if (!(v102 >> 30) && (_DWORD)v102 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v102 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v98;
  v115 = v71;
  v103 = v16[92];
  if (!(v103 >> 30) && (_DWORD)v103 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v103 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v98;
  v115 = v71;
  v104 = v16[93];
  if (!(v104 >> 30) && (_DWORD)v104 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v104 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v98;
  v115 = v71;
  v105 = v16[94];
  if (!(v105 >> 30) && (_DWORD)v105 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v105 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 3;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v98;
  v115 = v71;
  v106 = v16[95];
  if (!(v106 >> 30) && (_DWORD)v106 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v106 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v71 = a2[2] + 1;
  }
  v107 = v13 + 4;
  v114 = __PAIR64__(v107, v12);
  v115 = v71;
  v108 = v16[96];
  if (!(v108 >> 30) && (_DWORD)v108 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v108 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 4;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v107;
  v115 = v71;
  v109 = v16[97];
  if (!(v109 >> 30) && (_DWORD)v109 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v109 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 4;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v107;
  v115 = v71;
  v110 = v16[98];
  if (!(v110 >> 30) && (_DWORD)v110 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v110 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 4;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v107;
  v115 = v71;
  v111 = v16[99];
  if (!(v111 >> 30) && (_DWORD)v111 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v111 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 4;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v107;
  v115 = v71;
  v112 = v16[100];
  if (!(v112 >> 30) && (_DWORD)v112 != v18)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v112 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v16 = (unsigned int *)a1[1];
    v18 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 4;
    v71 = a2[2] + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v107;
  v115 = v71;
  v113 = v16[101];
  if (!(v113 >> 30) && (_DWORD)v113 != v18)
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v113 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
  sub_2239E3D60(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239E3D60(_QWORD *a1, __int32 *a2, double a3, float32x4_t a4, double a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  __int32 v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  __int32 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int32 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int32 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int32 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int32 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int32 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int32 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int32 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;

  v12 = *a2;
  v13 = a2[1];
  v14 = v13 + 4;
  LODWORD(v114) = *a2 + 6;
  HIDWORD(v114) = v13 + 4;
  v15 = a2[2];
  v16 = v15 + 1;
  v115 = v15 + 1;
  v17 = (unsigned int *)a1[1];
  v18 = v17[102];
  v19 = *(_DWORD *)(*a1 + 272);
  if (v18 >> 30)
    v20 = 1;
  else
    v20 = (_DWORD)v18 == v19;
  if (!v20)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v18 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 4;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v14;
  v115 = v16;
  v21 = v17[103];
  if (v21 >> 30)
    v22 = 1;
  else
    v22 = (_DWORD)v21 == v19;
  if (!v22)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v21 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 1;
  }
  v23 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v16;
  v24 = v17[104];
  if (v24 >> 30)
    v25 = 1;
  else
    v25 = (_DWORD)v24 == v19;
  if (!v25)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v24 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v23;
  v115 = v16;
  v26 = v17[105];
  if (!(v26 >> 30) && (_DWORD)v26 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v26 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v23;
  v115 = v16;
  v27 = v17[106];
  if (!(v27 >> 30) && (_DWORD)v27 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v23;
  v115 = v16;
  v28 = v17[107];
  if (!(v28 >> 30) && (_DWORD)v28 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v28 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v23;
  v115 = v16;
  v29 = v17[108];
  if (!(v29 >> 30) && (_DWORD)v29 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v23;
  v115 = v16;
  v30 = v17[109];
  if (!(v30 >> 30) && (_DWORD)v30 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v30 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v23;
  v115 = v16;
  v31 = v17[110];
  if (!(v31 >> 30) && (_DWORD)v31 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 5;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v23;
  v115 = v16;
  v32 = v17[111];
  if (!(v32 >> 30) && (_DWORD)v32 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v32 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 1;
  }
  v33 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v16;
  v34 = v17[112];
  if (!(v34 >> 30) && (_DWORD)v34 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v34 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v33;
  v115 = v16;
  v35 = v17[113];
  if (!(v35 >> 30) && (_DWORD)v35 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v35 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v33;
  v115 = v16;
  v36 = v17[114];
  if (!(v36 >> 30) && (_DWORD)v36 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v33;
  v115 = v16;
  v37 = v17[115];
  if (!(v37 >> 30) && (_DWORD)v37 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v37 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v33;
  v115 = v16;
  v38 = v17[116];
  if (!(v38 >> 30) && (_DWORD)v38 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v33;
  v115 = v16;
  v39 = v17[117];
  if (!(v39 >> 30) && (_DWORD)v39 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v39 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v33;
  v115 = v16;
  v40 = v17[118];
  if (!(v40 >> 30) && (_DWORD)v40 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v40 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 6;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v33;
  v115 = v16;
  v41 = v17[119];
  if (!(v41 >> 30) && (_DWORD)v41 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 1;
  }
  v42 = v13 + 7;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 7;
  v115 = v16;
  v43 = v17[120];
  if (!(v43 >> 30) && (_DWORD)v43 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v42;
  v115 = v16;
  v44 = v17[121];
  if (!(v44 >> 30) && (_DWORD)v44 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v44 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v42;
  v115 = v16;
  v45 = v17[122];
  if (!(v45 >> 30) && (_DWORD)v45 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v42;
  v115 = v16;
  v46 = v17[123];
  if (!(v46 >> 30) && (_DWORD)v46 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v46 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v42;
  v115 = v16;
  v47 = v17[124];
  if (!(v47 >> 30) && (_DWORD)v47 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v42;
  v115 = v16;
  v48 = v17[125];
  if (!(v48 >> 30) && (_DWORD)v48 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v48 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v42;
  v115 = v16;
  v49 = v17[126];
  if (!(v49 >> 30) && (_DWORD)v49 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v49 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = v13 + 7;
    v16 = v15 + 1;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v42;
  v115 = v16;
  v50 = v17[127];
  if (!(v50 >> 30) && (_DWORD)v50 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v51 = v15 + 2;
  v115 = v51;
  v52 = v17[128];
  if (!(v52 >> 30) && (_DWORD)v52 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v51;
  v53 = v17[129];
  if (!(v53 >> 30) && (_DWORD)v53 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v53 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v51;
  v54 = v17[130];
  if (!(v54 >> 30) && (_DWORD)v54 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v54 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v51;
  v55 = v17[131];
  if (!(v55 >> 30) && (_DWORD)v55 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v55 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v51;
  v56 = v17[132];
  if (!(v56 >> 30) && (_DWORD)v56 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v56 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v51;
  v57 = v17[133];
  if (!(v57 >> 30) && (_DWORD)v57 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v57 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v51;
  v58 = v17[134];
  if (!(v58 >> 30) && (_DWORD)v58 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v58 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v51;
  v59 = v17[135];
  if (!(v59 >> 30) && (_DWORD)v59 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v59 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  v60 = v13 + 1;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 1;
  v115 = v51;
  v61 = v17[136];
  if (!(v61 >> 30) && (_DWORD)v61 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v61 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v60;
  v115 = v51;
  v62 = v17[137];
  if (!(v62 >> 30) && (_DWORD)v62 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v62 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v60;
  v115 = v51;
  v63 = v17[138];
  if (!(v63 >> 30) && (_DWORD)v63 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v63 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v60;
  v115 = v51;
  v64 = v17[139];
  if (!(v64 >> 30) && (_DWORD)v64 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v64 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v60;
  v115 = v51;
  v65 = v17[140];
  if (!(v65 >> 30) && (_DWORD)v65 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v65 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v60;
  v115 = v51;
  v66 = v17[141];
  if (!(v66 >> 30) && (_DWORD)v66 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v66 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v60;
  v115 = v51;
  v67 = v17[142];
  if (!(v67 >> 30) && (_DWORD)v67 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v67 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 1;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v60;
  v115 = v51;
  v68 = v17[143];
  if (!(v68 >> 30) && (_DWORD)v68 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v68 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  v69 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v51;
  v70 = v17[144];
  if (!(v70 >> 30) && (_DWORD)v70 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v70 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v69;
  v115 = v51;
  v71 = v17[145];
  if (!(v71 >> 30) && (_DWORD)v71 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v71 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v69;
  v115 = v51;
  v72 = v17[146];
  if (!(v72 >> 30) && (_DWORD)v72 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v72 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v69;
  v115 = v51;
  v73 = v17[147];
  if (!(v73 >> 30) && (_DWORD)v73 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v73 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v69;
  v115 = v51;
  v74 = v17[148];
  if (!(v74 >> 30) && (_DWORD)v74 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v74 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v69;
  v115 = v51;
  v75 = v17[149];
  if (!(v75 >> 30) && (_DWORD)v75 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v75 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v69;
  v115 = v51;
  v76 = v17[150];
  if (!(v76 >> 30) && (_DWORD)v76 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v76 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 2;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v69;
  v115 = v51;
  v77 = v17[151];
  if (!(v77 >> 30) && (_DWORD)v77 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v77 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  v78 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v51;
  v79 = v17[152];
  if (!(v79 >> 30) && (_DWORD)v79 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v79 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v78;
  v115 = v51;
  v80 = v17[153];
  if (!(v80 >> 30) && (_DWORD)v80 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v80 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v78;
  v115 = v51;
  v81 = v17[154];
  if (!(v81 >> 30) && (_DWORD)v81 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v81 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v78;
  v115 = v51;
  v82 = v17[155];
  if (!(v82 >> 30) && (_DWORD)v82 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v82 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v78;
  v115 = v51;
  v83 = v17[156];
  if (!(v83 >> 30) && (_DWORD)v83 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v83 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v78;
  v115 = v51;
  v84 = v17[157];
  if (!(v84 >> 30) && (_DWORD)v84 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v84 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v78;
  v115 = v51;
  v85 = v17[158];
  if (!(v85 >> 30) && (_DWORD)v85 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v85 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 3;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v78;
  v115 = v51;
  v86 = v17[159];
  if (!(v86 >> 30) && (_DWORD)v86 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v86 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  v87 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v51;
  v88 = v17[160];
  if (!(v88 >> 30) && (_DWORD)v88 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v88 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v87;
  v115 = v51;
  v89 = v17[161];
  if (!(v89 >> 30) && (_DWORD)v89 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v89 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v87;
  v115 = v51;
  v90 = v17[162];
  if (!(v90 >> 30) && (_DWORD)v90 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v90 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v87;
  v115 = v51;
  v91 = v17[163];
  if (!(v91 >> 30) && (_DWORD)v91 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v91 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v87;
  v115 = v51;
  v92 = v17[164];
  if (!(v92 >> 30) && (_DWORD)v92 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v92 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v87;
  v115 = v51;
  v93 = v17[165];
  if (!(v93 >> 30) && (_DWORD)v93 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v93 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v87;
  v115 = v51;
  v94 = v17[166];
  if (!(v94 >> 30) && (_DWORD)v94 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v94 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 4;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v87;
  v115 = v51;
  v95 = v17[167];
  if (!(v95 >> 30) && (_DWORD)v95 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v95 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  v96 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v51;
  v97 = v17[168];
  if (!(v97 >> 30) && (_DWORD)v97 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v97 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v96;
  v115 = v51;
  v98 = v17[169];
  if (!(v98 >> 30) && (_DWORD)v98 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v98 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v96;
  v115 = v51;
  v99 = v17[170];
  if (!(v99 >> 30) && (_DWORD)v99 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v99 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v96;
  v115 = v51;
  v100 = v17[171];
  if (!(v100 >> 30) && (_DWORD)v100 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v100 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v96;
  v115 = v51;
  v101 = v17[172];
  if (!(v101 >> 30) && (_DWORD)v101 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v101 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v96;
  v115 = v51;
  v102 = v17[173];
  if (!(v102 >> 30) && (_DWORD)v102 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v102 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v96;
  v115 = v51;
  v103 = v17[174];
  if (!(v103 >> 30) && (_DWORD)v103 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v103 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 5;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v96;
  v115 = v51;
  v104 = v17[175];
  if (!(v104 >> 30) && (_DWORD)v104 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v104 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = a2[2] + 2;
  }
  v105 = v13 + 6;
  v114 = __PAIR64__(v105, v12);
  v115 = v51;
  v106 = v17[176];
  if (!(v106 >> 30) && (_DWORD)v106 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v106 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v105;
  v115 = v51;
  v107 = v17[177];
  if (!(v107 >> 30) && (_DWORD)v107 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v107 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v105;
  v115 = v51;
  v108 = v17[178];
  if (!(v108 >> 30) && (_DWORD)v108 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v108 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v105;
  v115 = v51;
  v109 = v17[179];
  if (!(v109 >> 30) && (_DWORD)v109 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v109 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v105;
  v115 = v51;
  v110 = v17[180];
  if (!(v110 >> 30) && (_DWORD)v110 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v110 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v105;
  v115 = v51;
  v111 = v17[181];
  if (!(v111 >> 30) && (_DWORD)v111 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v111 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v105;
  v115 = v51;
  v112 = v17[182];
  if (!(v112 >> 30) && (_DWORD)v112 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v112 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 6;
    v51 = a2[2] + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v105;
  v115 = v51;
  v113 = v17[183];
  if (!(v113 >> 30) && (_DWORD)v113 != v19)
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v113 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
  sub_2239E5C08(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239E5C08(_QWORD *a1, __int32 *a2, double a3, float32x4_t a4, double a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  __int32 v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int32 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int32 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int32 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int32 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int32 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int32 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int32 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;

  v12 = *a2;
  v13 = a2[1];
  v14 = v13 + 7;
  LODWORD(v114) = *a2;
  HIDWORD(v114) = v13 + 7;
  v15 = a2[2];
  v16 = v15 + 2;
  v115 = v15 + 2;
  v17 = (unsigned int *)a1[1];
  v18 = v17[184];
  v19 = *(_DWORD *)(*a1 + 272);
  if (v18 >> 30)
    v20 = 1;
  else
    v20 = (_DWORD)v18 == v19;
  if (!v20)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v18 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v14;
  v115 = v16;
  v21 = v17[185];
  if (v21 >> 30)
    v22 = 1;
  else
    v22 = (_DWORD)v21 == v19;
  if (!v22)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v21 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v14;
  v115 = v16;
  v23 = v17[186];
  if (v23 >> 30)
    v24 = 1;
  else
    v24 = (_DWORD)v23 == v19;
  if (!v24)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v23 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v14;
  v115 = v16;
  v25 = v17[187];
  if (!(v25 >> 30) && (_DWORD)v25 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v25 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v14;
  v115 = v16;
  v26 = v17[188];
  if (!(v26 >> 30) && (_DWORD)v26 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v26 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v14;
  v115 = v16;
  v27 = v17[189];
  if (!(v27 >> 30) && (_DWORD)v27 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v14;
  v115 = v16;
  v28 = v17[190];
  if (!(v28 >> 30) && (_DWORD)v28 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v28 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 7;
    v16 = v15 + 2;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v14;
  v115 = v16;
  v29 = v17[191];
  if (!(v29 >> 30) && (_DWORD)v29 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v30 = v15 + 3;
  v115 = v15 + 3;
  v31 = v17[192];
  if (!(v31 >> 30) && (_DWORD)v31 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v30;
  v32 = v17[193];
  if (!(v32 >> 30) && (_DWORD)v32 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v32 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v30;
  v33 = v17[194];
  if (!(v33 >> 30) && (_DWORD)v33 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v33 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v30;
  v34 = v17[195];
  if (!(v34 >> 30) && (_DWORD)v34 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v34 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v30;
  v35 = v17[196];
  if (!(v35 >> 30) && (_DWORD)v35 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v35 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v30;
  v36 = v17[197];
  if (!(v36 >> 30) && (_DWORD)v36 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v30;
  v37 = v17[198];
  if (!(v37 >> 30) && (_DWORD)v37 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v37 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v30;
  v38 = v17[199];
  if (!(v38 >> 30) && (_DWORD)v38 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v39 = v13 + 1;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 1;
  v115 = v30;
  v40 = v17[200];
  if (!(v40 >> 30) && (_DWORD)v40 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v40 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v39;
  v115 = v30;
  v41 = v17[201];
  if (!(v41 >> 30) && (_DWORD)v41 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v39;
  v115 = v30;
  v42 = v17[202];
  if (!(v42 >> 30) && (_DWORD)v42 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v42 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v39;
  v115 = v30;
  v43 = v17[203];
  if (!(v43 >> 30) && (_DWORD)v43 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v39;
  v115 = v30;
  v44 = v17[204];
  if (!(v44 >> 30) && (_DWORD)v44 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v44 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v39;
  v115 = v30;
  v45 = v17[205];
  if (!(v45 >> 30) && (_DWORD)v45 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v39;
  v115 = v30;
  v46 = v17[206];
  if (!(v46 >> 30) && (_DWORD)v46 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v46 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v39 = v13 + 1;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v39;
  v115 = v30;
  v47 = v17[207];
  if (!(v47 >> 30) && (_DWORD)v47 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v48 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v30;
  v49 = v17[208];
  if (!(v49 >> 30) && (_DWORD)v49 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v49 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v48;
  v115 = v30;
  v50 = v17[209];
  if (!(v50 >> 30) && (_DWORD)v50 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v48;
  v115 = v30;
  v51 = v17[210];
  if (!(v51 >> 30) && (_DWORD)v51 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v51 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v48;
  v115 = v30;
  v52 = v17[211];
  if (!(v52 >> 30) && (_DWORD)v52 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v48;
  v115 = v30;
  v53 = v17[212];
  if (!(v53 >> 30) && (_DWORD)v53 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v53 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v48;
  v115 = v30;
  v54 = v17[213];
  if (!(v54 >> 30) && (_DWORD)v54 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v54 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v48;
  v115 = v30;
  v55 = v17[214];
  if (!(v55 >> 30) && (_DWORD)v55 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v55 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v48 = v13 + 2;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v48;
  v115 = v30;
  v56 = v17[215];
  if (!(v56 >> 30) && (_DWORD)v56 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v56 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v57 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v30;
  v58 = v17[216];
  if (!(v58 >> 30) && (_DWORD)v58 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v58 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v57;
  v115 = v30;
  v59 = v17[217];
  if (!(v59 >> 30) && (_DWORD)v59 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v59 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v57;
  v115 = v30;
  v60 = v17[218];
  if (!(v60 >> 30) && (_DWORD)v60 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v60 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v57;
  v115 = v30;
  v61 = v17[219];
  if (!(v61 >> 30) && (_DWORD)v61 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v61 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v57;
  v115 = v30;
  v62 = v17[220];
  if (!(v62 >> 30) && (_DWORD)v62 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v62 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v57;
  v115 = v30;
  v63 = v17[221];
  if (!(v63 >> 30) && (_DWORD)v63 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v63 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v57;
  v115 = v30;
  v64 = v17[222];
  if (!(v64 >> 30) && (_DWORD)v64 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v64 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v57 = v13 + 3;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v57;
  v115 = v30;
  v65 = v17[223];
  if (!(v65 >> 30) && (_DWORD)v65 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v65 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v66 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v30;
  v67 = v17[224];
  if (!(v67 >> 30) && (_DWORD)v67 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v67 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v66;
  v115 = v30;
  v68 = v17[225];
  if (!(v68 >> 30) && (_DWORD)v68 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v68 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v66;
  v115 = v30;
  v69 = v17[226];
  if (!(v69 >> 30) && (_DWORD)v69 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v69 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v66;
  v115 = v30;
  v70 = v17[227];
  if (!(v70 >> 30) && (_DWORD)v70 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v70 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v66;
  v115 = v30;
  v71 = v17[228];
  if (!(v71 >> 30) && (_DWORD)v71 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v71 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v66;
  v115 = v30;
  v72 = v17[229];
  if (!(v72 >> 30) && (_DWORD)v72 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v72 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v66;
  v115 = v30;
  v73 = v17[230];
  if (!(v73 >> 30) && (_DWORD)v73 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v73 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v66 = v13 + 4;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v66;
  v115 = v30;
  v74 = v17[231];
  if (!(v74 >> 30) && (_DWORD)v74 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v74 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v75 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v30;
  v76 = v17[232];
  if (!(v76 >> 30) && (_DWORD)v76 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v76 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v75;
  v115 = v30;
  v77 = v17[233];
  if (!(v77 >> 30) && (_DWORD)v77 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v77 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v75;
  v115 = v30;
  v78 = v17[234];
  if (!(v78 >> 30) && (_DWORD)v78 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v78 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v75;
  v115 = v30;
  v79 = v17[235];
  if (!(v79 >> 30) && (_DWORD)v79 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v79 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v75;
  v115 = v30;
  v80 = v17[236];
  if (!(v80 >> 30) && (_DWORD)v80 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v80 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v75;
  v115 = v30;
  v81 = v17[237];
  if (!(v81 >> 30) && (_DWORD)v81 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v81 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v75;
  v115 = v30;
  v82 = v17[238];
  if (!(v82 >> 30) && (_DWORD)v82 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v82 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v75 = v13 + 5;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v75;
  v115 = v30;
  v83 = v17[239];
  if (!(v83 >> 30) && (_DWORD)v83 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v83 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v84 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v30;
  v85 = v17[240];
  if (!(v85 >> 30) && (_DWORD)v85 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v85 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v84;
  v115 = v30;
  v86 = v17[241];
  if (!(v86 >> 30) && (_DWORD)v86 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v86 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v84;
  v115 = v30;
  v87 = v17[242];
  if (!(v87 >> 30) && (_DWORD)v87 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v87 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v84;
  v115 = v30;
  v88 = v17[243];
  if (!(v88 >> 30) && (_DWORD)v88 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v88 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v84;
  v115 = v30;
  v89 = v17[244];
  if (!(v89 >> 30) && (_DWORD)v89 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v89 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v84;
  v115 = v30;
  v90 = v17[245];
  if (!(v90 >> 30) && (_DWORD)v90 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v90 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v84;
  v115 = v30;
  v91 = v17[246];
  if (!(v91 >> 30) && (_DWORD)v91 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v91 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v84 = v13 + 6;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v84;
  v115 = v30;
  v92 = v17[247];
  if (!(v92 >> 30) && (_DWORD)v92 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v92 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v30 = v15 + 3;
  }
  v93 = v13 + 7;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 7;
  v115 = v30;
  v94 = v17[248];
  if (!(v94 >> 30) && (_DWORD)v94 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v94 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v93;
  v115 = v30;
  v95 = v17[249];
  if (!(v95 >> 30) && (_DWORD)v95 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v95 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v93;
  v115 = v30;
  v96 = v17[250];
  if (!(v96 >> 30) && (_DWORD)v96 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v96 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v93;
  v115 = v30;
  v97 = v17[251];
  if (!(v97 >> 30) && (_DWORD)v97 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v97 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v93;
  v115 = v30;
  v98 = v17[252];
  if (!(v98 >> 30) && (_DWORD)v98 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v98 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v93;
  v115 = v30;
  v99 = v17[253];
  if (!(v99 >> 30) && (_DWORD)v99 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v99 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v93;
  v115 = v30;
  v100 = v17[254];
  if (!(v100 >> 30) && (_DWORD)v100 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v100 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v93 = v13 + 7;
    v30 = v15 + 3;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v93;
  v115 = v30;
  v101 = v17[255];
  if (!(v101 >> 30) && (_DWORD)v101 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v101 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v102 = v15 + 4;
  v115 = v102;
  v103 = v17[256];
  if (!(v103 >> 30) && (_DWORD)v103 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v103 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v102;
  v104 = v17[257];
  if (!(v104 >> 30) && (_DWORD)v104 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v104 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v102;
  v105 = v17[258];
  if (!(v105 >> 30) && (_DWORD)v105 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v105 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v102;
  v106 = v17[259];
  if (!(v106 >> 30) && (_DWORD)v106 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v106 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v102;
  v107 = v17[260];
  if (!(v107 >> 30) && (_DWORD)v107 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v107 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v102;
  v108 = v17[261];
  if (!(v108 >> 30) && (_DWORD)v108 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v108 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v102;
  v109 = v17[262];
  if (!(v109 >> 30) && (_DWORD)v109 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v109 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v102;
  v110 = v17[263];
  if (!(v110 >> 30) && (_DWORD)v110 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v110 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v102 = a2[2] + 4;
  }
  v111 = v13 + 1;
  v114 = __PAIR64__(v111, v12);
  v115 = v102;
  v112 = v17[264];
  if (!(v112 >> 30) && (_DWORD)v112 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v112 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v111 = a2[1] + 1;
    v102 = a2[2] + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v111;
  v115 = v102;
  v113 = v17[265];
  if (!(v113 >> 30) && (_DWORD)v113 != v19)
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v113 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
  sub_2239E7A8C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239E7A8C(_QWORD *a1, __int32 *a2, double a3, float32x4_t a4, double a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  __int32 v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int32 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int32 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int32 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int32 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int32 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int32 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int32 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int32 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;

  v12 = *a2;
  v13 = a2[1];
  v14 = v13 + 1;
  LODWORD(v114) = *a2 + 2;
  HIDWORD(v114) = v13 + 1;
  v15 = a2[2];
  v16 = v15 + 4;
  v115 = v15 + 4;
  v17 = (unsigned int *)a1[1];
  v18 = v17[266];
  v19 = *(_DWORD *)(*a1 + 272);
  if (v18 >> 30)
    v20 = 1;
  else
    v20 = (_DWORD)v18 == v19;
  if (!v20)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v18 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 1;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v14;
  v115 = v16;
  v21 = v17[267];
  if (v21 >> 30)
    v22 = 1;
  else
    v22 = (_DWORD)v21 == v19;
  if (!v22)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v21 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 1;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v14;
  v115 = v16;
  v23 = v17[268];
  if (v23 >> 30)
    v24 = 1;
  else
    v24 = (_DWORD)v23 == v19;
  if (!v24)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v23 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 1;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v14;
  v115 = v16;
  v25 = v17[269];
  if (!(v25 >> 30) && (_DWORD)v25 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v25 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 1;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v14;
  v115 = v16;
  v26 = v17[270];
  if (!(v26 >> 30) && (_DWORD)v26 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v26 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 1;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v14;
  v115 = v16;
  v27 = v17[271];
  if (!(v27 >> 30) && (_DWORD)v27 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 4;
  }
  v28 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v16;
  v29 = v17[272];
  if (!(v29 >> 30) && (_DWORD)v29 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v28;
  v115 = v16;
  v30 = v17[273];
  if (!(v30 >> 30) && (_DWORD)v30 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v30 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v28;
  v115 = v16;
  v31 = v17[274];
  if (!(v31 >> 30) && (_DWORD)v31 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v28;
  v115 = v16;
  v32 = v17[275];
  if (!(v32 >> 30) && (_DWORD)v32 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v32 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v28;
  v115 = v16;
  v33 = v17[276];
  if (!(v33 >> 30) && (_DWORD)v33 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v33 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v28;
  v115 = v16;
  v34 = v17[277];
  if (!(v34 >> 30) && (_DWORD)v34 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v34 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v28;
  v115 = v16;
  v35 = v17[278];
  if (!(v35 >> 30) && (_DWORD)v35 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v35 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v28 = v13 + 2;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v28;
  v115 = v16;
  v36 = v17[279];
  if (!(v36 >> 30) && (_DWORD)v36 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 4;
  }
  v37 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v16;
  v38 = v17[280];
  if (!(v38 >> 30) && (_DWORD)v38 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v37;
  v115 = v16;
  v39 = v17[281];
  if (!(v39 >> 30) && (_DWORD)v39 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v39 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v37;
  v115 = v16;
  v40 = v17[282];
  if (!(v40 >> 30) && (_DWORD)v40 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v40 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v37;
  v115 = v16;
  v41 = v17[283];
  if (!(v41 >> 30) && (_DWORD)v41 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v37;
  v115 = v16;
  v42 = v17[284];
  if (!(v42 >> 30) && (_DWORD)v42 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v42 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v37;
  v115 = v16;
  v43 = v17[285];
  if (!(v43 >> 30) && (_DWORD)v43 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v37;
  v115 = v16;
  v44 = v17[286];
  if (!(v44 >> 30) && (_DWORD)v44 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v44 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v37 = v13 + 3;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v37;
  v115 = v16;
  v45 = v17[287];
  if (!(v45 >> 30) && (_DWORD)v45 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 4;
  }
  v46 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v16;
  v47 = v17[288];
  if (!(v47 >> 30) && (_DWORD)v47 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v46;
  v115 = v16;
  v48 = v17[289];
  if (!(v48 >> 30) && (_DWORD)v48 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v48 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v46;
  v115 = v16;
  v49 = v17[290];
  if (!(v49 >> 30) && (_DWORD)v49 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v49 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v46;
  v115 = v16;
  v50 = v17[291];
  if (!(v50 >> 30) && (_DWORD)v50 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v46;
  v115 = v16;
  v51 = v17[292];
  if (!(v51 >> 30) && (_DWORD)v51 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v51 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v46;
  v115 = v16;
  v52 = v17[293];
  if (!(v52 >> 30) && (_DWORD)v52 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v46;
  v115 = v16;
  v53 = v17[294];
  if (!(v53 >> 30) && (_DWORD)v53 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v53 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v46 = v13 + 4;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v46;
  v115 = v16;
  v54 = v17[295];
  if (!(v54 >> 30) && (_DWORD)v54 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v54 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 4;
  }
  v55 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v16;
  v56 = v17[296];
  if (!(v56 >> 30) && (_DWORD)v56 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v56 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v55;
  v115 = v16;
  v57 = v17[297];
  if (!(v57 >> 30) && (_DWORD)v57 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v57 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v55;
  v115 = v16;
  v58 = v17[298];
  if (!(v58 >> 30) && (_DWORD)v58 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v58 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v55;
  v115 = v16;
  v59 = v17[299];
  if (!(v59 >> 30) && (_DWORD)v59 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v59 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v55;
  v115 = v16;
  v60 = v17[300];
  if (!(v60 >> 30) && (_DWORD)v60 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v60 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v55;
  v115 = v16;
  v61 = v17[301];
  if (!(v61 >> 30) && (_DWORD)v61 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v61 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v55;
  v115 = v16;
  v62 = v17[302];
  if (!(v62 >> 30) && (_DWORD)v62 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v62 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v55 = v13 + 5;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v55;
  v115 = v16;
  v63 = v17[303];
  if (!(v63 >> 30) && (_DWORD)v63 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v63 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 4;
  }
  v64 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v16;
  v65 = v17[304];
  if (!(v65 >> 30) && (_DWORD)v65 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v65 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v64;
  v115 = v16;
  v66 = v17[305];
  if (!(v66 >> 30) && (_DWORD)v66 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v66 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v64;
  v115 = v16;
  v67 = v17[306];
  if (!(v67 >> 30) && (_DWORD)v67 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v67 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v64;
  v115 = v16;
  v68 = v17[307];
  if (!(v68 >> 30) && (_DWORD)v68 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v68 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v64;
  v115 = v16;
  v69 = v17[308];
  if (!(v69 >> 30) && (_DWORD)v69 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v69 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v64;
  v115 = v16;
  v70 = v17[309];
  if (!(v70 >> 30) && (_DWORD)v70 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v70 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v64;
  v115 = v16;
  v71 = v17[310];
  if (!(v71 >> 30) && (_DWORD)v71 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v71 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v64 = v13 + 6;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v64;
  v115 = v16;
  v72 = v17[311];
  if (!(v72 >> 30) && (_DWORD)v72 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v72 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 4;
  }
  v73 = v13 + 7;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 7;
  v115 = v16;
  v74 = v17[312];
  if (!(v74 >> 30) && (_DWORD)v74 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v74 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v73;
  v115 = v16;
  v75 = v17[313];
  if (!(v75 >> 30) && (_DWORD)v75 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v75 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v73;
  v115 = v16;
  v76 = v17[314];
  if (!(v76 >> 30) && (_DWORD)v76 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v76 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v73;
  v115 = v16;
  v77 = v17[315];
  if (!(v77 >> 30) && (_DWORD)v77 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v77 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v73;
  v115 = v16;
  v78 = v17[316];
  if (!(v78 >> 30) && (_DWORD)v78 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v78 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v73;
  v115 = v16;
  v79 = v17[317];
  if (!(v79 >> 30) && (_DWORD)v79 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v79 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v73;
  v115 = v16;
  v80 = v17[318];
  if (!(v80 >> 30) && (_DWORD)v80 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v80 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v73 = v13 + 7;
    v16 = v15 + 4;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v73;
  v115 = v16;
  v81 = v17[319];
  if (!(v81 >> 30) && (_DWORD)v81 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v81 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v82 = v15 + 5;
  v115 = v82;
  v83 = v17[320];
  if (!(v83 >> 30) && (_DWORD)v83 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v83 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v82;
  v84 = v17[321];
  if (!(v84 >> 30) && (_DWORD)v84 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v84 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v82;
  v85 = v17[322];
  if (!(v85 >> 30) && (_DWORD)v85 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v85 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v82;
  v86 = v17[323];
  if (!(v86 >> 30) && (_DWORD)v86 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v86 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v82;
  v87 = v17[324];
  if (!(v87 >> 30) && (_DWORD)v87 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v87 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v82;
  v88 = v17[325];
  if (!(v88 >> 30) && (_DWORD)v88 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v88 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v82;
  v89 = v17[326];
  if (!(v89 >> 30) && (_DWORD)v89 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v89 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v82;
  v90 = v17[327];
  if (!(v90 >> 30) && (_DWORD)v90 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v90 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  v91 = v13 + 1;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 1;
  v115 = v82;
  v92 = v17[328];
  if (!(v92 >> 30) && (_DWORD)v92 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v92 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v91;
  v115 = v82;
  v93 = v17[329];
  if (!(v93 >> 30) && (_DWORD)v93 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v93 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v91;
  v115 = v82;
  v94 = v17[330];
  if (!(v94 >> 30) && (_DWORD)v94 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v94 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v91;
  v115 = v82;
  v95 = v17[331];
  if (!(v95 >> 30) && (_DWORD)v95 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v95 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v91;
  v115 = v82;
  v96 = v17[332];
  if (!(v96 >> 30) && (_DWORD)v96 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v96 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v91;
  v115 = v82;
  v97 = v17[333];
  if (!(v97 >> 30) && (_DWORD)v97 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v97 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v91;
  v115 = v82;
  v98 = v17[334];
  if (!(v98 >> 30) && (_DWORD)v98 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v98 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v91 = v13 + 1;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v91;
  v115 = v82;
  v99 = v17[335];
  if (!(v99 >> 30) && (_DWORD)v99 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v99 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  v100 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v82;
  v101 = v17[336];
  if (!(v101 >> 30) && (_DWORD)v101 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v101 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v100;
  v115 = v82;
  v102 = v17[337];
  if (!(v102 >> 30) && (_DWORD)v102 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v102 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v100;
  v115 = v82;
  v103 = v17[338];
  if (!(v103 >> 30) && (_DWORD)v103 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v103 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v100;
  v115 = v82;
  v104 = v17[339];
  if (!(v104 >> 30) && (_DWORD)v104 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v104 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v100;
  v115 = v82;
  v105 = v17[340];
  if (!(v105 >> 30) && (_DWORD)v105 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v105 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v100;
  v115 = v82;
  v106 = v17[341];
  if (!(v106 >> 30) && (_DWORD)v106 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v106 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v100;
  v115 = v82;
  v107 = v17[342];
  if (!(v107 >> 30) && (_DWORD)v107 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v107 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v100 = v13 + 2;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v100;
  v115 = v82;
  v108 = v17[343];
  if (!(v108 >> 30) && (_DWORD)v108 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v108 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v82 = a2[2] + 5;
  }
  v109 = v13 + 3;
  v114 = __PAIR64__(v109, v12);
  v115 = v82;
  v110 = v17[344];
  if (!(v110 >> 30) && (_DWORD)v110 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v110 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v109 = a2[1] + 3;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v109;
  v115 = v82;
  v111 = v17[345];
  if (!(v111 >> 30) && (_DWORD)v111 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v111 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v109 = a2[1] + 3;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v109;
  v115 = v82;
  v112 = v17[346];
  if (!(v112 >> 30) && (_DWORD)v112 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v112 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v109 = a2[1] + 3;
    v82 = a2[2] + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v109;
  v115 = v82;
  v113 = v17[347];
  if (!(v113 >> 30) && (_DWORD)v113 != v19)
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v113 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
  sub_2239E9934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239E9934(_QWORD *a1, __int32 *a2, double a3, float32x4_t a4, double a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  __int32 v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  __int32 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int32 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int32 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int32 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int32 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int32 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int32 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int32 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;

  v12 = *a2;
  v13 = a2[1];
  v14 = v13 + 3;
  LODWORD(v114) = *a2 + 4;
  HIDWORD(v114) = v13 + 3;
  v15 = a2[2];
  v16 = v15 + 5;
  v115 = v15 + 5;
  v17 = (unsigned int *)a1[1];
  v18 = v17[348];
  v19 = *(_DWORD *)(*a1 + 272);
  if (v18 >> 30)
    v20 = 1;
  else
    v20 = (_DWORD)v18 == v19;
  if (!v20)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v18 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 3;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v14;
  v115 = v16;
  v21 = v17[349];
  if (v21 >> 30)
    v22 = 1;
  else
    v22 = (_DWORD)v21 == v19;
  if (!v22)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v21 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 3;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v14;
  v115 = v16;
  v23 = v17[350];
  if (v23 >> 30)
    v24 = 1;
  else
    v24 = (_DWORD)v23 == v19;
  if (!v24)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v23 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 3;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v14;
  v115 = v16;
  v25 = v17[351];
  if (!(v25 >> 30) && (_DWORD)v25 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v25 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 5;
  }
  v26 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v16;
  v27 = v17[352];
  if (!(v27 >> 30) && (_DWORD)v27 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v26;
  v115 = v16;
  v28 = v17[353];
  if (!(v28 >> 30) && (_DWORD)v28 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v28 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v26;
  v115 = v16;
  v29 = v17[354];
  if (!(v29 >> 30) && (_DWORD)v29 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v26;
  v115 = v16;
  v30 = v17[355];
  if (!(v30 >> 30) && (_DWORD)v30 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v30 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v26;
  v115 = v16;
  v31 = v17[356];
  if (!(v31 >> 30) && (_DWORD)v31 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v26;
  v115 = v16;
  v32 = v17[357];
  if (!(v32 >> 30) && (_DWORD)v32 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v32 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v26;
  v115 = v16;
  v33 = v17[358];
  if (!(v33 >> 30) && (_DWORD)v33 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v33 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v26 = v13 + 4;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v26;
  v115 = v16;
  v34 = v17[359];
  if (!(v34 >> 30) && (_DWORD)v34 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v34 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 5;
  }
  v35 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v16;
  v36 = v17[360];
  if (!(v36 >> 30) && (_DWORD)v36 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v35;
  v115 = v16;
  v37 = v17[361];
  if (!(v37 >> 30) && (_DWORD)v37 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v37 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v35;
  v115 = v16;
  v38 = v17[362];
  if (!(v38 >> 30) && (_DWORD)v38 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v35;
  v115 = v16;
  v39 = v17[363];
  if (!(v39 >> 30) && (_DWORD)v39 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v39 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v35;
  v115 = v16;
  v40 = v17[364];
  if (!(v40 >> 30) && (_DWORD)v40 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v40 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v35;
  v115 = v16;
  v41 = v17[365];
  if (!(v41 >> 30) && (_DWORD)v41 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v35;
  v115 = v16;
  v42 = v17[366];
  if (!(v42 >> 30) && (_DWORD)v42 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v42 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v35 = v13 + 5;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v35;
  v115 = v16;
  v43 = v17[367];
  if (!(v43 >> 30) && (_DWORD)v43 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 5;
  }
  v44 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v16;
  v45 = v17[368];
  if (!(v45 >> 30) && (_DWORD)v45 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v44;
  v115 = v16;
  v46 = v17[369];
  if (!(v46 >> 30) && (_DWORD)v46 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v46 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v44;
  v115 = v16;
  v47 = v17[370];
  if (!(v47 >> 30) && (_DWORD)v47 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v44;
  v115 = v16;
  v48 = v17[371];
  if (!(v48 >> 30) && (_DWORD)v48 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v48 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v44;
  v115 = v16;
  v49 = v17[372];
  if (!(v49 >> 30) && (_DWORD)v49 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v49 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v44;
  v115 = v16;
  v50 = v17[373];
  if (!(v50 >> 30) && (_DWORD)v50 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v44;
  v115 = v16;
  v51 = v17[374];
  if (!(v51 >> 30) && (_DWORD)v51 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v51 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v44 = v13 + 6;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v44;
  v115 = v16;
  v52 = v17[375];
  if (!(v52 >> 30) && (_DWORD)v52 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 5;
  }
  v53 = v13 + 7;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 7;
  v115 = v16;
  v54 = v17[376];
  if (!(v54 >> 30) && (_DWORD)v54 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v54 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v53;
  v115 = v16;
  v55 = v17[377];
  if (!(v55 >> 30) && (_DWORD)v55 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v55 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v53;
  v115 = v16;
  v56 = v17[378];
  if (!(v56 >> 30) && (_DWORD)v56 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v56 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v53;
  v115 = v16;
  v57 = v17[379];
  if (!(v57 >> 30) && (_DWORD)v57 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v57 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v53;
  v115 = v16;
  v58 = v17[380];
  if (!(v58 >> 30) && (_DWORD)v58 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v58 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v53;
  v115 = v16;
  v59 = v17[381];
  if (!(v59 >> 30) && (_DWORD)v59 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v59 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v53;
  v115 = v16;
  v60 = v17[382];
  if (!(v60 >> 30) && (_DWORD)v60 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v60 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v53 = v13 + 7;
    v16 = v15 + 5;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v53;
  v115 = v16;
  v61 = v17[383];
  if (!(v61 >> 30) && (_DWORD)v61 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v61 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v62 = v15 + 6;
  v115 = v62;
  v63 = v17[384];
  if (!(v63 >> 30) && (_DWORD)v63 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v63 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v62;
  v64 = v17[385];
  if (!(v64 >> 30) && (_DWORD)v64 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v64 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v62;
  v65 = v17[386];
  if (!(v65 >> 30) && (_DWORD)v65 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v65 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v62;
  v66 = v17[387];
  if (!(v66 >> 30) && (_DWORD)v66 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v66 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v62;
  v67 = v17[388];
  if (!(v67 >> 30) && (_DWORD)v67 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v67 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v62;
  v68 = v17[389];
  if (!(v68 >> 30) && (_DWORD)v68 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v68 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v62;
  v69 = v17[390];
  if (!(v69 >> 30) && (_DWORD)v69 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v69 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v62;
  v70 = v17[391];
  if (!(v70 >> 30) && (_DWORD)v70 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v70 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  v71 = v13 + 1;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 1;
  v115 = v62;
  v72 = v17[392];
  if (!(v72 >> 30) && (_DWORD)v72 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v72 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v71;
  v115 = v62;
  v73 = v17[393];
  if (!(v73 >> 30) && (_DWORD)v73 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v73 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v71;
  v115 = v62;
  v74 = v17[394];
  if (!(v74 >> 30) && (_DWORD)v74 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v74 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v71;
  v115 = v62;
  v75 = v17[395];
  if (!(v75 >> 30) && (_DWORD)v75 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v75 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v71;
  v115 = v62;
  v76 = v17[396];
  if (!(v76 >> 30) && (_DWORD)v76 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v76 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v71;
  v115 = v62;
  v77 = v17[397];
  if (!(v77 >> 30) && (_DWORD)v77 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v77 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v71;
  v115 = v62;
  v78 = v17[398];
  if (!(v78 >> 30) && (_DWORD)v78 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v78 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v71 = v13 + 1;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v71;
  v115 = v62;
  v79 = v17[399];
  if (!(v79 >> 30) && (_DWORD)v79 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v79 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  v80 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v62;
  v81 = v17[400];
  if (!(v81 >> 30) && (_DWORD)v81 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v81 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v80;
  v115 = v62;
  v82 = v17[401];
  if (!(v82 >> 30) && (_DWORD)v82 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v82 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v80;
  v115 = v62;
  v83 = v17[402];
  if (!(v83 >> 30) && (_DWORD)v83 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v83 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v80;
  v115 = v62;
  v84 = v17[403];
  if (!(v84 >> 30) && (_DWORD)v84 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v84 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v80;
  v115 = v62;
  v85 = v17[404];
  if (!(v85 >> 30) && (_DWORD)v85 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v85 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v80;
  v115 = v62;
  v86 = v17[405];
  if (!(v86 >> 30) && (_DWORD)v86 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v86 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v80;
  v115 = v62;
  v87 = v17[406];
  if (!(v87 >> 30) && (_DWORD)v87 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v87 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v80 = v13 + 2;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v80;
  v115 = v62;
  v88 = v17[407];
  if (!(v88 >> 30) && (_DWORD)v88 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v88 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  v89 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v62;
  v90 = v17[408];
  if (!(v90 >> 30) && (_DWORD)v90 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v90 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v89;
  v115 = v62;
  v91 = v17[409];
  if (!(v91 >> 30) && (_DWORD)v91 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v91 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v89;
  v115 = v62;
  v92 = v17[410];
  if (!(v92 >> 30) && (_DWORD)v92 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v92 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v89;
  v115 = v62;
  v93 = v17[411];
  if (!(v93 >> 30) && (_DWORD)v93 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v93 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v89;
  v115 = v62;
  v94 = v17[412];
  if (!(v94 >> 30) && (_DWORD)v94 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v94 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v89;
  v115 = v62;
  v95 = v17[413];
  if (!(v95 >> 30) && (_DWORD)v95 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v95 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v89;
  v115 = v62;
  v96 = v17[414];
  if (!(v96 >> 30) && (_DWORD)v96 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v96 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v89 = v13 + 3;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v89;
  v115 = v62;
  v97 = v17[415];
  if (!(v97 >> 30) && (_DWORD)v97 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v97 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  v98 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v62;
  v99 = v17[416];
  if (!(v99 >> 30) && (_DWORD)v99 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v99 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v98;
  v115 = v62;
  v100 = v17[417];
  if (!(v100 >> 30) && (_DWORD)v100 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v100 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v98;
  v115 = v62;
  v101 = v17[418];
  if (!(v101 >> 30) && (_DWORD)v101 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v101 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v98;
  v115 = v62;
  v102 = v17[419];
  if (!(v102 >> 30) && (_DWORD)v102 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v102 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v98;
  v115 = v62;
  v103 = v17[420];
  if (!(v103 >> 30) && (_DWORD)v103 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v103 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v98;
  v115 = v62;
  v104 = v17[421];
  if (!(v104 >> 30) && (_DWORD)v104 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v104 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v98;
  v115 = v62;
  v105 = v17[422];
  if (!(v105 >> 30) && (_DWORD)v105 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v105 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v98 = v13 + 4;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v98;
  v115 = v62;
  v106 = v17[423];
  if (!(v106 >> 30) && (_DWORD)v106 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v106 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v62 = a2[2] + 6;
  }
  v107 = v13 + 5;
  v114 = __PAIR64__(v107, v12);
  v115 = v62;
  v108 = v17[424];
  if (!(v108 >> 30) && (_DWORD)v108 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v108 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 5;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v107;
  v115 = v62;
  v109 = v17[425];
  if (!(v109 >> 30) && (_DWORD)v109 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v109 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 5;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v107;
  v115 = v62;
  v110 = v17[426];
  if (!(v110 >> 30) && (_DWORD)v110 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v110 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 5;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v107;
  v115 = v62;
  v111 = v17[427];
  if (!(v111 >> 30) && (_DWORD)v111 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v111 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 5;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v107;
  v115 = v62;
  v112 = v17[428];
  if (!(v112 >> 30) && (_DWORD)v112 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v112 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v107 = a2[1] + 5;
    v62 = a2[2] + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v107;
  v115 = v62;
  v113 = v17[429];
  if (!(v113 >> 30) && (_DWORD)v113 != v19)
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v113 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
  sub_2239EB7DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_2239EB7DC(_QWORD *a1, __int32 *a2, double a3, float32x4_t a4, double a5, double a6, double a7, double a8, __n128 a9, __n128 a10)
{
  __int32 v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  __int32 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int32 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int32 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int32 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int32 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int32 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int32 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int32 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;

  v12 = *a2;
  v13 = a2[1];
  v14 = v13 + 5;
  LODWORD(v114) = *a2 + 6;
  HIDWORD(v114) = v13 + 5;
  v15 = a2[2];
  v16 = v15 + 6;
  v115 = v15 + 6;
  v17 = (unsigned int *)a1[1];
  v18 = v17[430];
  v19 = *(_DWORD *)(*a1 + 272);
  if (v18 >> 30)
    v20 = 1;
  else
    v20 = (_DWORD)v18 == v19;
  if (!v20)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v18 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v14 = v13 + 5;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v14;
  v115 = v16;
  v21 = v17[431];
  if (v21 >> 30)
    v22 = 1;
  else
    v22 = (_DWORD)v21 == v19;
  if (!v22)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v21 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 6;
  }
  v23 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v16;
  v24 = v17[432];
  if (v24 >> 30)
    v25 = 1;
  else
    v25 = (_DWORD)v24 == v19;
  if (!v25)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v24 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v23;
  v115 = v16;
  v26 = v17[433];
  if (!(v26 >> 30) && (_DWORD)v26 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v26 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v23;
  v115 = v16;
  v27 = v17[434];
  if (!(v27 >> 30) && (_DWORD)v27 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v27 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v23;
  v115 = v16;
  v28 = v17[435];
  if (!(v28 >> 30) && (_DWORD)v28 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v28 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v23;
  v115 = v16;
  v29 = v17[436];
  if (!(v29 >> 30) && (_DWORD)v29 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v29 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v23;
  v115 = v16;
  v30 = v17[437];
  if (!(v30 >> 30) && (_DWORD)v30 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v30 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v23;
  v115 = v16;
  v31 = v17[438];
  if (!(v31 >> 30) && (_DWORD)v31 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v31 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v23 = v13 + 6;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v23;
  v115 = v16;
  v32 = v17[439];
  if (!(v32 >> 30) && (_DWORD)v32 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v32 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v16 = v15 + 6;
  }
  v33 = v13 + 7;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 7;
  v115 = v16;
  v34 = v17[440];
  if (!(v34 >> 30) && (_DWORD)v34 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v34 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v33;
  v115 = v16;
  v35 = v17[441];
  if (!(v35 >> 30) && (_DWORD)v35 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v35 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v33;
  v115 = v16;
  v36 = v17[442];
  if (!(v36 >> 30) && (_DWORD)v36 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v36 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v33;
  v115 = v16;
  v37 = v17[443];
  if (!(v37 >> 30) && (_DWORD)v37 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v37 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v33;
  v115 = v16;
  v38 = v17[444];
  if (!(v38 >> 30) && (_DWORD)v38 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v38 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v33;
  v115 = v16;
  v39 = v17[445];
  if (!(v39 >> 30) && (_DWORD)v39 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v39 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v33;
  v115 = v16;
  v40 = v17[446];
  if (!(v40 >> 30) && (_DWORD)v40 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v40 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v33 = v13 + 7;
    v16 = v15 + 6;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v33;
  v115 = v16;
  v41 = v17[447];
  if (!(v41 >> 30) && (_DWORD)v41 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v41 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v15 = a2[2];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
  }
  v114 = __PAIR64__(v13, v12);
  v42 = v15 + 7;
  v115 = v42;
  v43 = v17[448];
  if (!(v43 >> 30) && (_DWORD)v43 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v43 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v13;
  v115 = v42;
  v44 = v17[449];
  if (!(v44 >> 30) && (_DWORD)v44 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v44 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v13;
  v115 = v42;
  v45 = v17[450];
  if (!(v45 >> 30) && (_DWORD)v45 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v45 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v13;
  v115 = v42;
  v46 = v17[451];
  if (!(v46 >> 30) && (_DWORD)v46 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v46 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v13;
  v115 = v42;
  v47 = v17[452];
  if (!(v47 >> 30) && (_DWORD)v47 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v47 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v13;
  v115 = v42;
  v48 = v17[453];
  if (!(v48 >> 30) && (_DWORD)v48 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v48 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v13;
  v115 = v42;
  v49 = v17[454];
  if (!(v49 >> 30) && (_DWORD)v49 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v49 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v13;
  v115 = v42;
  v50 = v17[455];
  if (!(v50 >> 30) && (_DWORD)v50 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v50 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v51 = v13 + 1;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 1;
  v115 = v42;
  v52 = v17[456];
  if (!(v52 >> 30) && (_DWORD)v52 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v52 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v51;
  v115 = v42;
  v53 = v17[457];
  if (!(v53 >> 30) && (_DWORD)v53 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v53 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v51;
  v115 = v42;
  v54 = v17[458];
  if (!(v54 >> 30) && (_DWORD)v54 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v54 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v51;
  v115 = v42;
  v55 = v17[459];
  if (!(v55 >> 30) && (_DWORD)v55 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v55 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v51;
  v115 = v42;
  v56 = v17[460];
  if (!(v56 >> 30) && (_DWORD)v56 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v56 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v51;
  v115 = v42;
  v57 = v17[461];
  if (!(v57 >> 30) && (_DWORD)v57 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v57 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v51;
  v115 = v42;
  v58 = v17[462];
  if (!(v58 >> 30) && (_DWORD)v58 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v58 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v51 = v13 + 1;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v51;
  v115 = v42;
  v59 = v17[463];
  if (!(v59 >> 30) && (_DWORD)v59 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v59 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v60 = v13 + 2;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 2;
  v115 = v42;
  v61 = v17[464];
  if (!(v61 >> 30) && (_DWORD)v61 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v61 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v60;
  v115 = v42;
  v62 = v17[465];
  if (!(v62 >> 30) && (_DWORD)v62 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v62 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v60;
  v115 = v42;
  v63 = v17[466];
  if (!(v63 >> 30) && (_DWORD)v63 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v63 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v60;
  v115 = v42;
  v64 = v17[467];
  if (!(v64 >> 30) && (_DWORD)v64 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v64 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v60;
  v115 = v42;
  v65 = v17[468];
  if (!(v65 >> 30) && (_DWORD)v65 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v65 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v60;
  v115 = v42;
  v66 = v17[469];
  if (!(v66 >> 30) && (_DWORD)v66 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v66 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v60;
  v115 = v42;
  v67 = v17[470];
  if (!(v67 >> 30) && (_DWORD)v67 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v67 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v60 = v13 + 2;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v60;
  v115 = v42;
  v68 = v17[471];
  if (!(v68 >> 30) && (_DWORD)v68 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v68 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v69 = v13 + 3;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 3;
  v115 = v42;
  v70 = v17[472];
  if (!(v70 >> 30) && (_DWORD)v70 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v70 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v69;
  v115 = v42;
  v71 = v17[473];
  if (!(v71 >> 30) && (_DWORD)v71 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v71 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v69;
  v115 = v42;
  v72 = v17[474];
  if (!(v72 >> 30) && (_DWORD)v72 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v72 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v69;
  v115 = v42;
  v73 = v17[475];
  if (!(v73 >> 30) && (_DWORD)v73 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v73 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v69;
  v115 = v42;
  v74 = v17[476];
  if (!(v74 >> 30) && (_DWORD)v74 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v74 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v69;
  v115 = v42;
  v75 = v17[477];
  if (!(v75 >> 30) && (_DWORD)v75 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v75 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v69;
  v115 = v42;
  v76 = v17[478];
  if (!(v76 >> 30) && (_DWORD)v76 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v76 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v69 = v13 + 3;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v69;
  v115 = v42;
  v77 = v17[479];
  if (!(v77 >> 30) && (_DWORD)v77 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v77 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v78 = v13 + 4;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 4;
  v115 = v42;
  v79 = v17[480];
  if (!(v79 >> 30) && (_DWORD)v79 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v79 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v78;
  v115 = v42;
  v80 = v17[481];
  if (!(v80 >> 30) && (_DWORD)v80 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v80 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v78;
  v115 = v42;
  v81 = v17[482];
  if (!(v81 >> 30) && (_DWORD)v81 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v81 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v78;
  v115 = v42;
  v82 = v17[483];
  if (!(v82 >> 30) && (_DWORD)v82 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v82 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v78;
  v115 = v42;
  v83 = v17[484];
  if (!(v83 >> 30) && (_DWORD)v83 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v83 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v78;
  v115 = v42;
  v84 = v17[485];
  if (!(v84 >> 30) && (_DWORD)v84 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v84 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v78;
  v115 = v42;
  v85 = v17[486];
  if (!(v85 >> 30) && (_DWORD)v85 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v85 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v78 = v13 + 4;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v78;
  v115 = v42;
  v86 = v17[487];
  if (!(v86 >> 30) && (_DWORD)v86 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v86 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v87 = v13 + 5;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 5;
  v115 = v42;
  v88 = v17[488];
  if (!(v88 >> 30) && (_DWORD)v88 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v88 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v87;
  v115 = v42;
  v89 = v17[489];
  if (!(v89 >> 30) && (_DWORD)v89 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v89 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v87;
  v115 = v42;
  v90 = v17[490];
  if (!(v90 >> 30) && (_DWORD)v90 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v90 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v87;
  v115 = v42;
  v91 = v17[491];
  if (!(v91 >> 30) && (_DWORD)v91 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v91 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v87;
  v115 = v42;
  v92 = v17[492];
  if (!(v92 >> 30) && (_DWORD)v92 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v92 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v87;
  v115 = v42;
  v93 = v17[493];
  if (!(v93 >> 30) && (_DWORD)v93 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v93 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v87;
  v115 = v42;
  v94 = v17[494];
  if (!(v94 >> 30) && (_DWORD)v94 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v94 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v87 = v13 + 5;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v87;
  v115 = v42;
  v95 = v17[495];
  if (!(v95 >> 30) && (_DWORD)v95 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v95 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v96 = v13 + 6;
  LODWORD(v114) = v12;
  HIDWORD(v114) = v13 + 6;
  v115 = v42;
  v97 = v17[496];
  if (!(v97 >> 30) && (_DWORD)v97 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v97 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v96;
  v115 = v42;
  v98 = v17[497];
  if (!(v98 >> 30) && (_DWORD)v98 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v98 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v96;
  v115 = v42;
  v99 = v17[498];
  if (!(v99 >> 30) && (_DWORD)v99 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v99 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v96;
  v115 = v42;
  v100 = v17[499];
  if (!(v100 >> 30) && (_DWORD)v100 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v100 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v96;
  v115 = v42;
  v101 = v17[500];
  if (!(v101 >> 30) && (_DWORD)v101 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v101 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v96;
  v115 = v42;
  v102 = v17[501];
  if (!(v102 >> 30) && (_DWORD)v102 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v102 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v96;
  v115 = v42;
  v103 = v17[502];
  if (!(v103 >> 30) && (_DWORD)v103 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v103 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v96 = v13 + 6;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v96;
  v115 = v42;
  v104 = v17[503];
  if (!(v104 >> 30) && (_DWORD)v104 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v104 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v13 = a2[1];
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v42 = a2[2] + 7;
  }
  v105 = v13 + 7;
  v114 = __PAIR64__(v105, v12);
  v115 = v42;
  v106 = v17[504];
  if (!(v106 >> 30) && (_DWORD)v106 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v106 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 1;
  HIDWORD(v114) = v105;
  v115 = v42;
  v107 = v17[505];
  if (!(v107 >> 30) && (_DWORD)v107 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v107 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 2;
  HIDWORD(v114) = v105;
  v115 = v42;
  v108 = v17[506];
  if (!(v108 >> 30) && (_DWORD)v108 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v108 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 3;
  HIDWORD(v114) = v105;
  v115 = v42;
  v109 = v17[507];
  if (!(v109 >> 30) && (_DWORD)v109 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v109 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 4;
  HIDWORD(v114) = v105;
  v115 = v42;
  v110 = v17[508];
  if (!(v110 >> 30) && (_DWORD)v110 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v110 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 5;
  HIDWORD(v114) = v105;
  v115 = v42;
  v111 = v17[509];
  if (!(v111 >> 30) && (_DWORD)v111 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v111 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 6;
  HIDWORD(v114) = v105;
  v115 = v42;
  v112 = v17[510];
  if (!(v112 >> 30) && (_DWORD)v112 != v19)
  {
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v112 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
    v12 = *a2;
    v17 = (unsigned int *)a1[1];
    v19 = *(_DWORD *)(*a1 + 272);
    v105 = a2[1] + 7;
    v42 = a2[2] + 7;
  }
  LODWORD(v114) = v12 + 7;
  HIDWORD(v114) = v105;
  v115 = v42;
  v113 = v17[511];
  if (!(v113 >> 30) && (_DWORD)v113 != v19)
    sub_2239B2318(**(_QWORD **)(a1[4] + 8), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 8), (int32x2_t *)&v114, *(_QWORD *)(*(_QWORD *)a1[4] + 2448) + 520 * (v113 & 0xFFFFFFFFCFFFFFFFLL), *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 16), a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t *sub_2239ED67C(uint64_t *result, int a2, int a3, uint64_t a4, double a5, float32x4_t a6, double a7, double a8, double a9, float32x4_t a10, float32x4_t a11)
{
  unsigned int v11;
  uint64_t v12;
  int32x2_t v13;
  uint64_t v14;
  float32x4_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int32x2_t *v20;
  int32x2_t v21;
  int *v22;
  _QWORD **v23;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  int32x2_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD **v42;
  _QWORD *v44;
  uint64_t v45;
  const float *v46;
  uint64_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD **v54;
  char v55;
  uint64_t v56;
  int v57;
  char v58;
  char v59;
  uint64_t v60;
  int v61;
  char v62;
  char v63;
  uint64_t v64;
  int v65;
  char v66;
  char v67;
  uint64_t v68;
  int v69;
  char v70;
  char v71;
  uint64_t v72;
  int v73;
  char v74;
  char v75;
  uint64_t v76;
  int v77;
  char v78;
  char v79;
  uint64_t v80;
  int v81;
  char v82;
  char v83;
  uint64_t v84;
  int v85;
  char v86;
  char v87;
  uint64_t v88;
  int v89;
  char v90;
  char v91;
  uint64_t v92;
  int v93;
  char v94;
  char v95;
  uint64_t v96;
  int v97;
  char v98;
  char v99;
  uint64_t v100;
  int v101;
  char v102;
  char v103;
  int v104;
  uint64_t v105;
  char v106;
  char v107;
  uint64_t v108;
  int v109;
  char v110;
  char v111;
  int v112;
  uint64_t v113;
  char v114;
  char v115;
  uint64_t v116;
  int v117;
  char v118;
  char v119;
  int v120;
  uint64_t v121;
  char v122;
  char v123;
  uint64_t v124;
  int v125;
  char v126;
  char v127;
  int v128;
  uint64_t v129;
  char v130;
  char v131;
  uint64_t v132;
  int v133;
  char v134;
  char v135;
  int v136;
  uint64_t v137;
  char v138;
  char v139;
  uint64_t v140;
  int v141;
  char v142;
  char v143;
  int v144;
  uint64_t v145;
  char v146;
  char v147;
  uint64_t v148;
  int v149;
  char v150;
  char v151;
  int v152;
  uint64_t v153;
  char v154;
  int32x2_t v155;
  int v156;
  uint64_t v157;
  int v158;
  int32x2_t v159;
  __int128 v160;
  char *v161;
  _QWORD **v162;
  char v163;
  int32x2_t v164;
  int v165;
  uint64_t *v166[3];
  float32x2x3_t v167;
  float32x2x3_t v168;

  v11 = a3 & 0xCFFFFFFF;
  v12 = result[23] + 4488 * (a3 & 0xCFFFFFFF);
  v13 = *(int32x2_t *)v12;
  v156 = *(_DWORD *)(v12 + 8);
  v155 = v13;
  v14 = *(_QWORD *)(v12 + 12);
  v158 = *(_DWORD *)(v12 + 20);
  v157 = v14;
  LOBYTE(v51) = 1;
  v15.i64[0] = -1;
  v15.i64[1] = -1;
  *(_QWORD *)((char *)&v51 + 4) = -1;
  HIDWORD(v51) = -1;
  LOBYTE(v52) = 8;
  BYTE4(v52) = 1;
  v53 = -1;
  LODWORD(v54) = -1;
  BYTE4(v54) = 8;
  v55 = 1;
  v56 = -1;
  v57 = -1;
  v58 = 8;
  v59 = 1;
  v60 = -1;
  v61 = -1;
  v62 = 8;
  v63 = 1;
  v64 = -1;
  v65 = -1;
  v66 = 8;
  v67 = 1;
  v68 = -1;
  v69 = -1;
  v70 = 8;
  v71 = 1;
  v72 = -1;
  v73 = -1;
  v74 = 8;
  v75 = 1;
  v76 = -1;
  v77 = -1;
  v78 = 8;
  v79 = 1;
  v80 = -1;
  v81 = -1;
  v82 = 8;
  v83 = 1;
  v84 = -1;
  v85 = -1;
  v86 = 8;
  v87 = 1;
  v88 = -1;
  v89 = -1;
  v90 = 8;
  v91 = 1;
  v92 = -1;
  v93 = -1;
  v94 = 8;
  v95 = 1;
  v96 = -1;
  v97 = -1;
  v98 = 8;
  v99 = 1;
  v100 = -1;
  v101 = -1;
  v102 = 8;
  v103 = 1;
  v104 = -1;
  v105 = -1;
  v106 = 8;
  v107 = 1;
  v108 = -1;
  v109 = -1;
  v110 = 8;
  v111 = 1;
  v112 = -1;
  v113 = -1;
  v114 = 8;
  v115 = 1;
  v116 = -1;
  v117 = -1;
  v118 = 8;
  v119 = 1;
  v120 = -1;
  v121 = -1;
  v122 = 8;
  v123 = 1;
  v124 = -1;
  v125 = -1;
  v126 = 8;
  v127 = 1;
  v128 = -1;
  v129 = -1;
  v130 = 8;
  v131 = 1;
  v132 = -1;
  v133 = -1;
  v134 = 8;
  v135 = 1;
  v136 = -1;
  v137 = -1;
  v138 = 8;
  v139 = 1;
  v140 = -1;
  v141 = -1;
  v142 = 8;
  v143 = 1;
  v144 = -1;
  v145 = -1;
  v146 = 8;
  v147 = 1;
  v148 = -1;
  v149 = -1;
  v150 = 8;
  v151 = 1;
  v152 = -1;
  v153 = -1;
  v154 = 8;
  if (*(_DWORD *)(v12 + 64))
  {
    v16 = a4;
    if (a2)
    {
      v17 = result;
      v18 = (a2 - 1);
      if (a2 == 1)
      {
        v32 = 0;
        while (1)
        {
          v33 = byte_224657EA6[v32];
          v34 = v17[23];
          v35 = *(unsigned int *)(v34 + 4488 * v11 + 4 * v33 + 24);
          if ((v35 & 0x80000000) == 0)
          {
            v36 = (v157 - v155.i32[0]) >> 1;
            v37 = vdup_n_s32(v36);
            *(int32x2_t *)a6.f32 = vmla_s32(v155, v37, (int32x2_t)(*(_QWORD *)&vshl_u32((uint32x2_t)vdup_n_s32(v33), (uint32x2_t)-2) & 0xFFFFFF01FFFFFF01));
            v159 = *(int32x2_t *)a6.f32;
            *(int32x2_t *)v15.f32 = vadd_s32(*(int32x2_t *)a6.f32, v37);
            *(_QWORD *)((char *)&v160 + 4) = v15.i64[0];
            LODWORD(v160) = v156 + v36 * (v33 & 1);
            HIDWORD(v160) = v160 + v36;
            if (!(v35 >> 30))
            {
              v38 = v16;
              v39 = *(_QWORD **)(v16 + 8);
              v163 = 1;
              v40 = *v39;
              v41 = *(_QWORD *)(*v39 + 2328);
              if (v35 >= (*(_QWORD *)(*v39 + 2336) - v41) >> 11)
              {
                if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
                {
                  goto LABEL_41;
                }
                v41 = *(_QWORD *)(v40 + 2328);
              }
              *(_QWORD *)&v51 = v40;
              *((_QWORD *)&v51 + 1) = v41 + (v35 << 11);
              v52 = v34 + 4488 * v11 + 540 * v33 + 68;
              v53 = (uint64_t)&v163;
              v42 = (_QWORD **)v39[1];
              v54 = v42;
              if (**((_DWORD **)&v51 + 1) != *(_DWORD *)(v40 + 272) && (**((_DWORD **)&v51 + 1) & 0x40000000) != 0)
              {
                v44 = *v42;
                v45 = *v44;
                v46 = (const float *)(*v44 + 1656);
                v47 = *(_QWORD *)(v44[1] + 144);
                LODWORD(v44) = *(_DWORD *)(*v44 + 8);
                v167 = vld3_f32(v46);
                v165 = 0;
                *(float32x2_t *)a11.f32 = vcvt_f32_s32(v159);
                a10.f32[0] = (float)(v159.i32[0] / (int)v44);
                a10.f32[1] = (float)(v159.i32[1] / (int)v44);
                a10.f32[2] = (float)((int)v160 / (int)v44);
                v48.i64[0] = 0x3F0000003F000000;
                v48.i64[1] = 0x3F0000003F000000;
                v49 = vaddq_f32(a10, v48);
                v164 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v167.val[0], v49.f32[0]), v167.val[1], *(float32x2_t *)v49.f32, 1), v167.val[2], v49, 2), (float32x2_t)0xBF000000BF000000));
                a11.f32[2] = (float)(int)v160;
                v50 = vmulq_n_f32(vaddq_f32(a11, v48), *(float *)&v47);
                v166[0] = (uint64_t *)&v164;
                *(uint64_t *)((char *)sub_223A17B10((float *)(v45 + 64), (int *)&v164, (uint64_t)&unk_2245BA939, v166) + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v167.val[0], v50.f32[0]), v167.val[1], *(float32x2_t *)v50.f32, 1), v167.val[2], v50, 2);
              }
              result = sub_2239EDDD8((uint64_t *)&v51, &v159, v15, a6);
              v16 = v38;
            }
          }
          if (++v32 == 8)
            return result;
        }
      }
      v19 = result[23];
      if ((*(_DWORD *)(v19 + 4488 * v11 + 24) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(result, (a2 - 1));
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 28) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(v17, v18);
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 32) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(v17, v18);
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 36) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(v17, v18);
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 40) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(v17, v18);
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 44) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(v17, v18);
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 48) & 0x80000000) == 0)
      {
        result = (uint64_t *)sub_2239ED67C(v17, v18);
        v19 = v17[23];
      }
      if ((*(_DWORD *)(v19 + 4488 * v11 + 52) & 0x80000000) == 0)
        return (uint64_t *)sub_2239ED67C(v17, v18);
    }
    else
    {
      v20 = *(int32x2_t **)(a4 + 8);
      v163 = 1;
      v21 = *v20;
      v22 = *(int **)(*(_QWORD *)v20 + 2328);
      if (*(int **)(*(_QWORD *)v20 + 2336) == v22)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.hpp", 640, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
        {
LABEL_41:
          abort();
        }
        v22 = *(int **)(*(_QWORD *)&v21 + 2328);
      }
      v159 = v21;
      *(_QWORD *)&v160 = v22;
      *((_QWORD *)&v160 + 1) = &v51;
      v161 = &v163;
      v23 = (_QWORD **)v20[1];
      v162 = v23;
      v24 = *v22;
      if (v24 != *(_DWORD *)(*(_QWORD *)&v21 + 272) && (v24 & 0x40000000) != 0)
      {
        v25 = *v23;
        v26 = *v25;
        v27 = (const float *)(*v25 + 1656);
        v28 = *(_QWORD *)(v25[1] + 144);
        LODWORD(v25) = *(_DWORD *)(*v25 + 8);
        v168 = vld3_f32(v27);
        *(float32x2_t *)a11.f32 = vcvt_f32_s32(v155);
        a10.f32[0] = (float)(v155.i32[0] / (int)v25);
        a10.f32[1] = (float)(v155.i32[1] / (int)v25);
        v165 = 0;
        a10.f32[2] = (float)(v156 / (int)v25);
        v29.i64[0] = 0x3F0000003F000000;
        v29.i64[1] = 0x3F0000003F000000;
        v30 = vaddq_f32(a10, v29);
        v164 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v168.val[0], v30.f32[0]), v168.val[1], *(float32x2_t *)v30.f32, 1), v168.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
        a11.f32[2] = (float)v156;
        v31 = vmulq_n_f32(vaddq_f32(a11, v29), *(float *)&v28);
        v166[0] = (uint64_t *)&v164;
        *(uint64_t *)((char *)sub_223A17B10((float *)(v26 + 64), (int *)&v164, (uint64_t)&unk_2245BA939, v166) + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v168.val[0], v31.f32[0]), v168.val[1], *(float32x2_t *)v31.f32, 1), v168.val[2], v31, 2);
      }
      return sub_2239EDDD8((uint64_t *)&v159, &v155, v15, a6);
    }
  }
  return result;
}

uint64_t *sub_2239EDDD8(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  __int32 v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  const float *v28;
  int v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x2_t v34;
  uint64_t *v35;
  int v36;
  int v38;
  __int32 v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  const float *v43;
  int v44;
  uint64_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  int v49;
  int v51;
  __int32 v52;
  int v53;
  _QWORD *v54;
  uint64_t v55;
  const float *v56;
  int v57;
  uint64_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  int v62;
  int v64;
  __int32 v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  const float *v69;
  int v70;
  uint64_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  int v75;
  int v77;
  __int32 v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  const float *v82;
  int v83;
  uint64_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  int v88;
  int v90;
  __int32 v91;
  int v92;
  _QWORD *v93;
  uint64_t v94;
  const float *v95;
  int v96;
  uint64_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  int v101;
  int v103;
  __int32 v104;
  int v105;
  _QWORD *v106;
  uint64_t v107;
  const float *v108;
  int v109;
  uint64_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  int v114;
  __int32 v115;
  int v116;
  _QWORD *v117;
  uint64_t v118;
  const float *v119;
  int v120;
  uint64_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  int v125;
  int v126;
  _QWORD *v127;
  uint64_t v128;
  int v129;
  const float *v130;
  uint64_t v131;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  int v135;
  int v136;
  _QWORD *v137;
  uint64_t v138;
  int v139;
  const float *v140;
  uint64_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  int v145;
  int v146;
  _QWORD *v147;
  uint64_t v148;
  int v149;
  const float *v150;
  uint64_t v151;
  float32x4_t v152;
  float32x4_t v153;
  float32x4_t v154;
  int v155;
  int v156;
  _QWORD *v157;
  uint64_t v158;
  int v159;
  const float *v160;
  uint64_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  int v165;
  int v166;
  _QWORD *v167;
  uint64_t v168;
  int v169;
  const float *v170;
  uint64_t v171;
  float32x4_t v172;
  float32x4_t v173;
  float32x4_t v174;
  int v175;
  int v176;
  _QWORD *v177;
  uint64_t v178;
  int v179;
  const float *v180;
  uint64_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  int v185;
  int v186;
  _QWORD *v187;
  uint64_t v188;
  int v189;
  const float *v190;
  uint64_t v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  int v195;
  int v196;
  __int32 v197;
  int v198;
  _QWORD *v199;
  uint64_t v200;
  const float *v201;
  int v202;
  uint64_t v203;
  float32x4_t v204;
  float32x4_t v205;
  float32x4_t v206;
  int v207;
  int v208;
  _QWORD *v209;
  uint64_t v210;
  int v211;
  const float *v212;
  uint64_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  int v217;
  int v218;
  _QWORD *v219;
  uint64_t v220;
  int v221;
  const float *v222;
  uint64_t v223;
  float32x4_t v224;
  float32x4_t v225;
  float32x4_t v226;
  int v227;
  int v228;
  _QWORD *v229;
  uint64_t v230;
  int v231;
  const float *v232;
  uint64_t v233;
  float32x4_t v234;
  float32x4_t v235;
  float32x4_t v236;
  int v237;
  int v238;
  _QWORD *v239;
  uint64_t v240;
  int v241;
  const float *v242;
  uint64_t v243;
  float32x4_t v244;
  float32x4_t v245;
  float32x4_t v246;
  int v247;
  int v248;
  _QWORD *v249;
  uint64_t v250;
  int v251;
  const float *v252;
  uint64_t v253;
  float32x4_t v254;
  float32x4_t v255;
  float32x4_t v256;
  int v257;
  int v258;
  _QWORD *v259;
  uint64_t v260;
  int v261;
  const float *v262;
  uint64_t v263;
  float32x4_t v264;
  float32x4_t v265;
  float32x4_t v266;
  int v267;
  int v268;
  _QWORD *v269;
  uint64_t v270;
  int v271;
  const float *v272;
  uint64_t v273;
  float32x4_t v274;
  float32x4_t v275;
  float32x4_t v276;
  int v277;
  int v278;
  __int32 v279;
  int v280;
  _QWORD *v281;
  uint64_t v282;
  const float *v283;
  int v284;
  uint64_t v285;
  float32x4_t v286;
  float32x4_t v287;
  float32x4_t v288;
  int v289;
  int v290;
  _QWORD *v291;
  uint64_t v292;
  int v293;
  const float *v294;
  uint64_t v295;
  float32x4_t v296;
  float32x4_t v297;
  float32x4_t v298;
  int v299;
  int v300;
  _QWORD *v301;
  uint64_t v302;
  int v303;
  const float *v304;
  uint64_t v305;
  float32x4_t v306;
  float32x4_t v307;
  float32x4_t v308;
  int v309;
  int v310;
  _QWORD *v311;
  uint64_t v312;
  int v313;
  const float *v314;
  uint64_t v315;
  float32x4_t v316;
  float32x4_t v317;
  float32x4_t v318;
  int v319;
  int v320;
  _QWORD *v321;
  uint64_t v322;
  int v323;
  const float *v324;
  uint64_t v325;
  float32x4_t v326;
  float32x4_t v327;
  float32x4_t v328;
  int v329;
  int v330;
  _QWORD *v331;
  uint64_t v332;
  int v333;
  const float *v334;
  uint64_t v335;
  float32x4_t v336;
  float32x4_t v337;
  float32x4_t v338;
  int v339;
  int v340;
  _QWORD *v341;
  uint64_t v342;
  int v343;
  const float *v344;
  uint64_t v345;
  float32x4_t v346;
  float32x4_t v347;
  float32x4_t v348;
  int v349;
  int v350;
  _QWORD *v351;
  uint64_t v352;
  int v353;
  const float *v354;
  uint64_t v355;
  float32x4_t v356;
  float32x4_t v357;
  float32x4_t v358;
  int v359;
  int v360;
  __int32 v361;
  int v362;
  _QWORD *v363;
  uint64_t v364;
  const float *v365;
  int v366;
  uint64_t v367;
  float32x4_t v368;
  float32x4_t v369;
  float32x4_t v370;
  int v371;
  int v372;
  _QWORD *v373;
  uint64_t v374;
  int v375;
  const float *v376;
  uint64_t v377;
  float32x4_t v378;
  float32x4_t v379;
  float32x4_t v380;
  int v381;
  int v382;
  _QWORD *v383;
  uint64_t v384;
  int v385;
  const float *v386;
  uint64_t v387;
  float32x4_t v388;
  float32x4_t v389;
  float32x4_t v390;
  int v391;
  int v392;
  _QWORD *v393;
  uint64_t v394;
  int v395;
  const float *v396;
  uint64_t v397;
  float32x4_t v398;
  float32x4_t v399;
  float32x4_t v400;
  int v401;
  int v402;
  _QWORD *v403;
  uint64_t v404;
  int v405;
  const float *v406;
  uint64_t v407;
  float32x4_t v408;
  float32x4_t v409;
  float32x4_t v410;
  int v411;
  int v412;
  _QWORD *v413;
  uint64_t v414;
  int v415;
  const float *v416;
  uint64_t v417;
  float32x4_t v418;
  float32x4_t v419;
  float32x4_t v420;
  int v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  const float *v426;
  uint64_t v427;
  float32x4_t v428;
  float32x4_t v429;
  float32x4_t v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  int v435;
  const float *v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  int v442;
  __int32 v443;
  int v444;
  _QWORD *v445;
  uint64_t v446;
  const float *v447;
  int v448;
  uint64_t v449;
  float32x4_t v450;
  float32x4_t v451;
  float32x4_t v452;
  int v453;
  int v454;
  _QWORD *v455;
  uint64_t v456;
  int v457;
  const float *v458;
  uint64_t v459;
  float32x4_t v460;
  float32x4_t v461;
  float32x4_t v462;
  int v463;
  int v464;
  _QWORD *v465;
  uint64_t v466;
  int v467;
  const float *v468;
  uint64_t v469;
  float32x4_t v470;
  float32x4_t v471;
  float32x4_t v472;
  int v473;
  int v474;
  _QWORD *v475;
  uint64_t v476;
  int v477;
  const float *v478;
  uint64_t v479;
  float32x4_t v480;
  float32x4_t v481;
  float32x4_t v482;
  int v483;
  int v484;
  _QWORD *v485;
  uint64_t v486;
  int v487;
  const float *v488;
  uint64_t v489;
  float32x4_t v490;
  float32x4_t v491;
  float32x4_t v492;
  int v493;
  int v494;
  _QWORD *v495;
  uint64_t v496;
  int v497;
  const float *v498;
  uint64_t v499;
  float32x4_t v500;
  float32x4_t v501;
  float32x4_t v502;
  int v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  int v507;
  const float *v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  __int32 v525;
  int v526;
  _QWORD *v527;
  uint64_t v528;
  const float *v529;
  int v530;
  uint64_t v531;
  float32x4_t v532;
  float32x4_t v533;
  float32x4_t v534;
  int v535;
  int v536;
  _QWORD *v537;
  uint64_t v538;
  int v539;
  const float *v540;
  uint64_t v541;
  float32x4_t v542;
  float32x4_t v543;
  float32x4_t v544;
  int v545;
  int v546;
  _QWORD *v547;
  uint64_t v548;
  int v549;
  const float *v550;
  uint64_t v551;
  float32x4_t v552;
  float32x4_t v553;
  float32x4_t v554;
  int v555;
  int v556;
  _QWORD *v557;
  uint64_t v558;
  int v559;
  const float *v560;
  uint64_t v561;
  float32x4_t v562;
  float32x4_t v563;
  float32x4_t v564;
  int v565;
  int v566;
  _QWORD *v567;
  uint64_t v568;
  int v569;
  const float *v570;
  uint64_t v571;
  float32x4_t v572;
  float32x4_t v573;
  float32x4_t v574;
  int32x2_t v576;
  int v577;
  int32x2_t *v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;
  float32x2x3_t v618;
  float32x2x3_t v619;
  float32x2x3_t v620;
  float32x2x3_t v621;
  float32x2x3_t v622;
  float32x2x3_t v623;
  float32x2x3_t v624;
  float32x2x3_t v625;
  float32x2x3_t v626;
  float32x2x3_t v627;
  float32x2x3_t v628;
  float32x2x3_t v629;
  float32x2x3_t v630;

  v6 = (_DWORD *)a1[1];
  v7 = v6[1];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[2];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v39 = a2->i32[1];
      v38 = a2[1].i32[0];
      v40 = a2->i32[0] + 2;
      v41 = *(_QWORD **)a1[4];
      v42 = *v41;
      v43 = (const float *)(*v41 + 1656);
      v44 = *(_DWORD *)(*v41 + 8);
      a3.f32[0] = (float)(v40 / v44);
      v45 = *(_QWORD *)(v41[1] + 144);
      a3.f32[1] = (float)(v39 / v44);
      a3.f32[2] = (float)(v38 / v44);
      v46.i64[0] = 0x3F0000003F000000;
      v46.i64[1] = 0x3F0000003F000000;
      v47 = vaddq_f32(a3, v46);
      v580 = vld3_f32(v43);
      v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v47.f32[0]), v580.val[1], *(float32x2_t *)v47.f32, 1), v580.val[2], v47, 2), (float32x2_t)0xBF000000BF000000));
      v577 = 0;
      *(float32x2_t *)v47.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v39, v40));
      v47.f32[2] = (float)v38;
      v48 = vmulq_n_f32(vaddq_f32(v47, v46), *(float *)&v45);
      v578 = &v576;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v42 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v48.f32[0]), v580.val[1], *(float32x2_t *)v48.f32, 1), v580.val[2], v48, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v49 = v6[3];
      if (v49 != v8 && (v49 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v24 = a2->i32[1];
    v23 = a2[1].i32[0];
    v25 = a2->i32[0] + 1;
    v26 = *(_QWORD **)a1[4];
    v27 = *v26;
    v28 = (const float *)(*v26 + 1656);
    v29 = *(_DWORD *)(*v26 + 8);
    a3.f32[0] = (float)(v25 / v29);
    v30 = *(_QWORD *)(v26[1] + 144);
    a3.f32[1] = (float)(v24 / v29);
    a3.f32[2] = (float)(v23 / v29);
    v31.i64[0] = 0x3F0000003F000000;
    v31.i64[1] = 0x3F0000003F000000;
    v32 = vaddq_f32(a3, v31);
    v579 = vld3_f32(v28);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v32.f32[0]), v579.val[1], *(float32x2_t *)v32.f32, 1), v579.val[2], v32, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v32.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v24, v25));
    v32.f32[2] = (float)v23;
    v33 = vmulq_n_f32(vaddq_f32(v32, v31), *(float *)&v30);
    v34 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v33.f32[0]), v579.val[1], *(float32x2_t *)v33.f32, 1), v579.val[2], v33, 2);
    v578 = &v576;
    v35 = sub_223A17B10((float *)(v27 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578);
    *(uint64_t *)((char *)v35 + 28) = (uint64_t)v34;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v36 = v6[2];
    if (v36 != v8 && (v36 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[3];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v52 = a2->i32[1];
    v51 = a2[1].i32[0];
    v53 = a2->i32[0] + 3;
    v54 = *(_QWORD **)a1[4];
    v55 = *v54;
    v56 = (const float *)(*v54 + 1656);
    v57 = *(_DWORD *)(*v54 + 8);
    a3.f32[0] = (float)(v53 / v57);
    v58 = *(_QWORD *)(v54[1] + 144);
    a3.f32[1] = (float)(v52 / v57);
    a3.f32[2] = (float)(v51 / v57);
    v59.i64[0] = 0x3F0000003F000000;
    v59.i64[1] = 0x3F0000003F000000;
    v60 = vaddq_f32(a3, v59);
    v581 = vld3_f32(v56);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v60.f32[0]), v581.val[1], *(float32x2_t *)v60.f32, 1), v581.val[2], v60, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v60.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v52, v53));
    v60.f32[2] = (float)v51;
    v61 = vmulq_n_f32(vaddq_f32(v60, v59), *(float *)&v58);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v55 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v61.f32[0]), v581.val[1], *(float32x2_t *)v61.f32, 1), v581.val[2], v61, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v62 = v6[4];
    if (v62 != v8 && (v62 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[4];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v65 = a2->i32[1];
    v64 = a2[1].i32[0];
    v66 = a2->i32[0] + 4;
    v67 = *(_QWORD **)a1[4];
    v68 = *v67;
    v69 = (const float *)(*v67 + 1656);
    v70 = *(_DWORD *)(*v67 + 8);
    a3.f32[0] = (float)(v66 / v70);
    v71 = *(_QWORD *)(v67[1] + 144);
    a3.f32[1] = (float)(v65 / v70);
    a3.f32[2] = (float)(v64 / v70);
    v72.i64[0] = 0x3F0000003F000000;
    v72.i64[1] = 0x3F0000003F000000;
    v73 = vaddq_f32(a3, v72);
    v582 = vld3_f32(v69);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v73.f32[0]), v582.val[1], *(float32x2_t *)v73.f32, 1), v582.val[2], v73, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v73.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v65, v66));
    v73.f32[2] = (float)v64;
    v74 = vmulq_n_f32(vaddq_f32(v73, v72), *(float *)&v71);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v68 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v74.f32[0]), v582.val[1], *(float32x2_t *)v74.f32, 1), v582.val[2], v74, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v75 = v6[5];
    if (v75 != v8 && (v75 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[5];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v78 = a2->i32[1];
    v77 = a2[1].i32[0];
    v79 = a2->i32[0] + 5;
    v80 = *(_QWORD **)a1[4];
    v81 = *v80;
    v82 = (const float *)(*v80 + 1656);
    v83 = *(_DWORD *)(*v80 + 8);
    a3.f32[0] = (float)(v79 / v83);
    v84 = *(_QWORD *)(v80[1] + 144);
    a3.f32[1] = (float)(v78 / v83);
    a3.f32[2] = (float)(v77 / v83);
    v85.i64[0] = 0x3F0000003F000000;
    v85.i64[1] = 0x3F0000003F000000;
    v86 = vaddq_f32(a3, v85);
    v583 = vld3_f32(v82);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v86.f32[0]), v583.val[1], *(float32x2_t *)v86.f32, 1), v583.val[2], v86, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v86.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v78, v79));
    v86.f32[2] = (float)v77;
    v87 = vmulq_n_f32(vaddq_f32(v86, v85), *(float *)&v84);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v81 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v87.f32[0]), v583.val[1], *(float32x2_t *)v87.f32, 1), v583.val[2], v87, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v88 = v6[6];
    if (v88 != v8 && (v88 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[6];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v91 = a2->i32[1];
    v90 = a2[1].i32[0];
    v92 = a2->i32[0] + 6;
    v93 = *(_QWORD **)a1[4];
    v94 = *v93;
    v95 = (const float *)(*v93 + 1656);
    v96 = *(_DWORD *)(*v93 + 8);
    a3.f32[0] = (float)(v92 / v96);
    v97 = *(_QWORD *)(v93[1] + 144);
    a3.f32[1] = (float)(v91 / v96);
    a3.f32[2] = (float)(v90 / v96);
    v98.i64[0] = 0x3F0000003F000000;
    v98.i64[1] = 0x3F0000003F000000;
    v99 = vaddq_f32(a3, v98);
    v584 = vld3_f32(v95);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v99.f32[0]), v584.val[1], *(float32x2_t *)v99.f32, 1), v584.val[2], v99, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v99.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v91, v92));
    v99.f32[2] = (float)v90;
    v100 = vmulq_n_f32(vaddq_f32(v99, v98), *(float *)&v97);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v94 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v100.f32[0]), v584.val[1], *(float32x2_t *)v100.f32, 1), v584.val[2], v100, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v101 = v6[7];
    if (v101 != v8 && (v101 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[7];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v104 = a2->i32[1];
    v103 = a2[1].i32[0];
    v105 = a2->i32[0] + 7;
    v106 = *(_QWORD **)a1[4];
    v107 = *v106;
    v108 = (const float *)(*v106 + 1656);
    v109 = *(_DWORD *)(*v106 + 8);
    a3.f32[0] = (float)(v105 / v109);
    v110 = *(_QWORD *)(v106[1] + 144);
    a3.f32[1] = (float)(v104 / v109);
    a3.f32[2] = (float)(v103 / v109);
    v111.i64[0] = 0x3F0000003F000000;
    v111.i64[1] = 0x3F0000003F000000;
    v112 = vaddq_f32(a3, v111);
    v585 = vld3_f32(v108);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v112.f32[0]), v585.val[1], *(float32x2_t *)v112.f32, 1), v585.val[2], v112, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v112.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v104, v105));
    v112.f32[2] = (float)v103;
    v113 = vmulq_n_f32(vaddq_f32(v112, v111), *(float *)&v110);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v107 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v113.f32[0]), v585.val[1], *(float32x2_t *)v113.f32, 1), v585.val[2], v113, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[8];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[8];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v114 = a2[1].i32[0];
    v115 = a2->i32[0];
    v116 = a2->i32[1] + 1;
    v117 = *(_QWORD **)a1[4];
    v118 = *v117;
    v119 = (const float *)(*v117 + 1656);
    v120 = *(_DWORD *)(*v117 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v120);
    v121 = *(_QWORD *)(v117[1] + 144);
    a3.f32[1] = (float)(v116 / v120);
    a3.f32[2] = (float)(v114 / v120);
    v122.i64[0] = 0x3F0000003F000000;
    v122.i64[1] = 0x3F0000003F000000;
    v123 = vaddq_f32(a3, v122);
    v586 = vld3_f32(v119);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v123.f32[0]), v586.val[1], *(float32x2_t *)v123.f32, 1), v586.val[2], v123, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v123.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v116, v115));
    v123.f32[2] = (float)v114;
    v124 = vmulq_n_f32(vaddq_f32(v123, v122), *(float *)&v121);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v118 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v124.f32[0]), v586.val[1], *(float32x2_t *)v124.f32, 1), v586.val[2], v124, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v125 = v6[9];
  if (v125 != v8 && (v125 & 0x40000000) != 0)
  {
    v126 = a2[1].i32[0];
    v127 = *(_QWORD **)a1[4];
    v128 = *v127;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v129 = *(_DWORD *)(*v127 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v129);
    v130 = (const float *)(*v127 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v129);
    v131 = *(_QWORD *)(v127[1] + 144);
    v587 = vld3_f32(v130);
    a3.f32[2] = (float)(v126 / v129);
    v132.i64[0] = 0x3F0000003F000000;
    v132.i64[1] = 0x3F0000003F000000;
    v133 = vaddq_f32(a3, v132);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v133.f32[0]), v587.val[1], *(float32x2_t *)v133.f32, 1), v587.val[2], v133, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v126;
    v134 = vmulq_n_f32(vaddq_f32(a4, v132), *(float *)&v131);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v128 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v134.f32[0]), v587.val[1], *(float32x2_t *)v134.f32, 1), v587.val[2], v134, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v135 = v6[10];
  if (v135 != v8 && (v135 & 0x40000000) != 0)
  {
    v136 = a2[1].i32[0];
    v137 = *(_QWORD **)a1[4];
    v138 = *v137;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v139 = *(_DWORD *)(*v137 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v139);
    v140 = (const float *)(*v137 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v139);
    v141 = *(_QWORD *)(v137[1] + 144);
    v588 = vld3_f32(v140);
    a3.f32[2] = (float)(v136 / v139);
    v142.i64[0] = 0x3F0000003F000000;
    v142.i64[1] = 0x3F0000003F000000;
    v143 = vaddq_f32(a3, v142);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v143.f32[0]), v588.val[1], *(float32x2_t *)v143.f32, 1), v588.val[2], v143, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v136;
    v144 = vmulq_n_f32(vaddq_f32(a4, v142), *(float *)&v141);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v138 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v144.f32[0]), v588.val[1], *(float32x2_t *)v144.f32, 1), v588.val[2], v144, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v145 = v6[11];
  if (v145 != v8 && (v145 & 0x40000000) != 0)
  {
    v146 = a2[1].i32[0];
    v147 = *(_QWORD **)a1[4];
    v148 = *v147;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v149 = *(_DWORD *)(*v147 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v149);
    v150 = (const float *)(*v147 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v149);
    v151 = *(_QWORD *)(v147[1] + 144);
    v589 = vld3_f32(v150);
    a3.f32[2] = (float)(v146 / v149);
    v152.i64[0] = 0x3F0000003F000000;
    v152.i64[1] = 0x3F0000003F000000;
    v153 = vaddq_f32(a3, v152);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v153.f32[0]), v589.val[1], *(float32x2_t *)v153.f32, 1), v589.val[2], v153, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v146;
    v154 = vmulq_n_f32(vaddq_f32(a4, v152), *(float *)&v151);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v148 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v154.f32[0]), v589.val[1], *(float32x2_t *)v154.f32, 1), v589.val[2], v154, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v155 = v6[12];
  if (v155 != v8 && (v155 & 0x40000000) != 0)
  {
    v156 = a2[1].i32[0];
    v157 = *(_QWORD **)a1[4];
    v158 = *v157;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v159 = *(_DWORD *)(*v157 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v159);
    v160 = (const float *)(*v157 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v159);
    v161 = *(_QWORD *)(v157[1] + 144);
    v590 = vld3_f32(v160);
    a3.f32[2] = (float)(v156 / v159);
    v162.i64[0] = 0x3F0000003F000000;
    v162.i64[1] = 0x3F0000003F000000;
    v163 = vaddq_f32(a3, v162);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v163.f32[0]), v590.val[1], *(float32x2_t *)v163.f32, 1), v590.val[2], v163, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v156;
    v164 = vmulq_n_f32(vaddq_f32(a4, v162), *(float *)&v161);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v158 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v164.f32[0]), v590.val[1], *(float32x2_t *)v164.f32, 1), v590.val[2], v164, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v165 = v6[13];
  if (v165 != v8 && (v165 & 0x40000000) != 0)
  {
    v166 = a2[1].i32[0];
    v167 = *(_QWORD **)a1[4];
    v168 = *v167;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v169 = *(_DWORD *)(*v167 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v169);
    v170 = (const float *)(*v167 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v169);
    v171 = *(_QWORD *)(v167[1] + 144);
    v591 = vld3_f32(v170);
    a3.f32[2] = (float)(v166 / v169);
    v172.i64[0] = 0x3F0000003F000000;
    v172.i64[1] = 0x3F0000003F000000;
    v173 = vaddq_f32(a3, v172);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v173.f32[0]), v591.val[1], *(float32x2_t *)v173.f32, 1), v591.val[2], v173, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v166;
    v174 = vmulq_n_f32(vaddq_f32(a4, v172), *(float *)&v171);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v168 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v174.f32[0]), v591.val[1], *(float32x2_t *)v174.f32, 1), v591.val[2], v174, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v175 = v6[14];
  if (v175 != v8 && (v175 & 0x40000000) != 0)
  {
    v176 = a2[1].i32[0];
    v177 = *(_QWORD **)a1[4];
    v178 = *v177;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v179 = *(_DWORD *)(*v177 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v179);
    v180 = (const float *)(*v177 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v179);
    v181 = *(_QWORD *)(v177[1] + 144);
    v592 = vld3_f32(v180);
    a3.f32[2] = (float)(v176 / v179);
    v182.i64[0] = 0x3F0000003F000000;
    v182.i64[1] = 0x3F0000003F000000;
    v183 = vaddq_f32(a3, v182);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v183.f32[0]), v592.val[1], *(float32x2_t *)v183.f32, 1), v592.val[2], v183, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v176;
    v184 = vmulq_n_f32(vaddq_f32(a4, v182), *(float *)&v181);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v178 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v184.f32[0]), v592.val[1], *(float32x2_t *)v184.f32, 1), v592.val[2], v184, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v185 = v6[15];
  if (v185 != v8 && (v185 & 0x40000000) != 0)
  {
    v186 = a2[1].i32[0];
    v187 = *(_QWORD **)a1[4];
    v188 = *v187;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v189 = *(_DWORD *)(*v187 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v189);
    v190 = (const float *)(*v187 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v189);
    v191 = *(_QWORD *)(v187[1] + 144);
    v593 = vld3_f32(v190);
    a3.f32[2] = (float)(v186 / v189);
    v192.i64[0] = 0x3F0000003F000000;
    v192.i64[1] = 0x3F0000003F000000;
    v193 = vaddq_f32(a3, v192);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v193.f32[0]), v593.val[1], *(float32x2_t *)v193.f32, 1), v593.val[2], v193, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v186;
    v194 = vmulq_n_f32(vaddq_f32(a4, v192), *(float *)&v191);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v188 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v194.f32[0]), v593.val[1], *(float32x2_t *)v194.f32, 1), v593.val[2], v194, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v195 = v6[16];
  if (v195 != v8 && (v195 & 0x40000000) != 0)
  {
    v196 = a2[1].i32[0];
    v197 = a2->i32[0];
    v198 = a2->i32[1] + 2;
    v199 = *(_QWORD **)a1[4];
    v200 = *v199;
    v201 = (const float *)(*v199 + 1656);
    v202 = *(_DWORD *)(*v199 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v202);
    v203 = *(_QWORD *)(v199[1] + 144);
    a3.f32[1] = (float)(v198 / v202);
    a3.f32[2] = (float)(v196 / v202);
    v204.i64[0] = 0x3F0000003F000000;
    v204.i64[1] = 0x3F0000003F000000;
    v205 = vaddq_f32(a3, v204);
    v594 = vld3_f32(v201);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v205.f32[0]), v594.val[1], *(float32x2_t *)v205.f32, 1), v594.val[2], v205, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v205.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v198, v197));
    v205.f32[2] = (float)v196;
    v206 = vmulq_n_f32(vaddq_f32(v205, v204), *(float *)&v203);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v200 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v206.f32[0]), v594.val[1], *(float32x2_t *)v206.f32, 1), v594.val[2], v206, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v207 = v6[17];
  if (v207 != v8 && (v207 & 0x40000000) != 0)
  {
    v208 = a2[1].i32[0];
    v209 = *(_QWORD **)a1[4];
    v210 = *v209;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v211 = *(_DWORD *)(*v209 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v211);
    v212 = (const float *)(*v209 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v211);
    v213 = *(_QWORD *)(v209[1] + 144);
    v595 = vld3_f32(v212);
    a3.f32[2] = (float)(v208 / v211);
    v214.i64[0] = 0x3F0000003F000000;
    v214.i64[1] = 0x3F0000003F000000;
    v215 = vaddq_f32(a3, v214);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v215.f32[0]), v595.val[1], *(float32x2_t *)v215.f32, 1), v595.val[2], v215, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v208;
    v216 = vmulq_n_f32(vaddq_f32(a4, v214), *(float *)&v213);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v210 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v216.f32[0]), v595.val[1], *(float32x2_t *)v216.f32, 1), v595.val[2], v216, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v217 = v6[18];
  if (v217 != v8 && (v217 & 0x40000000) != 0)
  {
    v218 = a2[1].i32[0];
    v219 = *(_QWORD **)a1[4];
    v220 = *v219;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v221 = *(_DWORD *)(*v219 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v221);
    v222 = (const float *)(*v219 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v221);
    v223 = *(_QWORD *)(v219[1] + 144);
    v596 = vld3_f32(v222);
    a3.f32[2] = (float)(v218 / v221);
    v224.i64[0] = 0x3F0000003F000000;
    v224.i64[1] = 0x3F0000003F000000;
    v225 = vaddq_f32(a3, v224);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v225.f32[0]), v596.val[1], *(float32x2_t *)v225.f32, 1), v596.val[2], v225, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v218;
    v226 = vmulq_n_f32(vaddq_f32(a4, v224), *(float *)&v223);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v220 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v226.f32[0]), v596.val[1], *(float32x2_t *)v226.f32, 1), v596.val[2], v226, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v227 = v6[19];
  if (v227 != v8 && (v227 & 0x40000000) != 0)
  {
    v228 = a2[1].i32[0];
    v229 = *(_QWORD **)a1[4];
    v230 = *v229;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v231 = *(_DWORD *)(*v229 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v231);
    v232 = (const float *)(*v229 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v231);
    v233 = *(_QWORD *)(v229[1] + 144);
    v597 = vld3_f32(v232);
    a3.f32[2] = (float)(v228 / v231);
    v234.i64[0] = 0x3F0000003F000000;
    v234.i64[1] = 0x3F0000003F000000;
    v235 = vaddq_f32(a3, v234);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v235.f32[0]), v597.val[1], *(float32x2_t *)v235.f32, 1), v597.val[2], v235, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v228;
    v236 = vmulq_n_f32(vaddq_f32(a4, v234), *(float *)&v233);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v230 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v236.f32[0]), v597.val[1], *(float32x2_t *)v236.f32, 1), v597.val[2], v236, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v237 = v6[20];
  if (v237 != v8 && (v237 & 0x40000000) != 0)
  {
    v238 = a2[1].i32[0];
    v239 = *(_QWORD **)a1[4];
    v240 = *v239;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v241 = *(_DWORD *)(*v239 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v241);
    v242 = (const float *)(*v239 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v241);
    v243 = *(_QWORD *)(v239[1] + 144);
    v598 = vld3_f32(v242);
    a3.f32[2] = (float)(v238 / v241);
    v244.i64[0] = 0x3F0000003F000000;
    v244.i64[1] = 0x3F0000003F000000;
    v245 = vaddq_f32(a3, v244);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v245.f32[0]), v598.val[1], *(float32x2_t *)v245.f32, 1), v598.val[2], v245, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v238;
    v246 = vmulq_n_f32(vaddq_f32(a4, v244), *(float *)&v243);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v240 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v246.f32[0]), v598.val[1], *(float32x2_t *)v246.f32, 1), v598.val[2], v246, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v247 = v6[21];
  if (v247 != v8 && (v247 & 0x40000000) != 0)
  {
    v248 = a2[1].i32[0];
    v249 = *(_QWORD **)a1[4];
    v250 = *v249;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v251 = *(_DWORD *)(*v249 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v251);
    v252 = (const float *)(*v249 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v251);
    v253 = *(_QWORD *)(v249[1] + 144);
    v599 = vld3_f32(v252);
    a3.f32[2] = (float)(v248 / v251);
    v254.i64[0] = 0x3F0000003F000000;
    v254.i64[1] = 0x3F0000003F000000;
    v255 = vaddq_f32(a3, v254);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v255.f32[0]), v599.val[1], *(float32x2_t *)v255.f32, 1), v599.val[2], v255, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v248;
    v256 = vmulq_n_f32(vaddq_f32(a4, v254), *(float *)&v253);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v250 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v256.f32[0]), v599.val[1], *(float32x2_t *)v256.f32, 1), v599.val[2], v256, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v257 = v6[22];
  if (v257 != v8 && (v257 & 0x40000000) != 0)
  {
    v258 = a2[1].i32[0];
    v259 = *(_QWORD **)a1[4];
    v260 = *v259;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v261 = *(_DWORD *)(*v259 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v261);
    v262 = (const float *)(*v259 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v261);
    v263 = *(_QWORD *)(v259[1] + 144);
    v600 = vld3_f32(v262);
    a3.f32[2] = (float)(v258 / v261);
    v264.i64[0] = 0x3F0000003F000000;
    v264.i64[1] = 0x3F0000003F000000;
    v265 = vaddq_f32(a3, v264);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v265.f32[0]), v600.val[1], *(float32x2_t *)v265.f32, 1), v600.val[2], v265, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v258;
    v266 = vmulq_n_f32(vaddq_f32(a4, v264), *(float *)&v263);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v260 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v266.f32[0]), v600.val[1], *(float32x2_t *)v266.f32, 1), v600.val[2], v266, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v267 = v6[23];
  if (v267 != v8 && (v267 & 0x40000000) != 0)
  {
    v268 = a2[1].i32[0];
    v269 = *(_QWORD **)a1[4];
    v270 = *v269;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v271 = *(_DWORD *)(*v269 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v271);
    v272 = (const float *)(*v269 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v271);
    v273 = *(_QWORD *)(v269[1] + 144);
    v601 = vld3_f32(v272);
    a3.f32[2] = (float)(v268 / v271);
    v274.i64[0] = 0x3F0000003F000000;
    v274.i64[1] = 0x3F0000003F000000;
    v275 = vaddq_f32(a3, v274);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v275.f32[0]), v601.val[1], *(float32x2_t *)v275.f32, 1), v601.val[2], v275, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v268;
    v276 = vmulq_n_f32(vaddq_f32(a4, v274), *(float *)&v273);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v270 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v276.f32[0]), v601.val[1], *(float32x2_t *)v276.f32, 1), v601.val[2], v276, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v277 = v6[24];
  if (v277 != v8 && (v277 & 0x40000000) != 0)
  {
    v278 = a2[1].i32[0];
    v279 = a2->i32[0];
    v280 = a2->i32[1] + 3;
    v281 = *(_QWORD **)a1[4];
    v282 = *v281;
    v283 = (const float *)(*v281 + 1656);
    v284 = *(_DWORD *)(*v281 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v284);
    v285 = *(_QWORD *)(v281[1] + 144);
    a3.f32[1] = (float)(v280 / v284);
    a3.f32[2] = (float)(v278 / v284);
    v286.i64[0] = 0x3F0000003F000000;
    v286.i64[1] = 0x3F0000003F000000;
    v287 = vaddq_f32(a3, v286);
    v602 = vld3_f32(v283);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v287.f32[0]), v602.val[1], *(float32x2_t *)v287.f32, 1), v602.val[2], v287, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v287.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v280, v279));
    v287.f32[2] = (float)v278;
    v288 = vmulq_n_f32(vaddq_f32(v287, v286), *(float *)&v285);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v282 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v288.f32[0]), v602.val[1], *(float32x2_t *)v288.f32, 1), v602.val[2], v288, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v289 = v6[25];
  if (v289 != v8 && (v289 & 0x40000000) != 0)
  {
    v290 = a2[1].i32[0];
    v291 = *(_QWORD **)a1[4];
    v292 = *v291;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v293 = *(_DWORD *)(*v291 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v293);
    v294 = (const float *)(*v291 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v293);
    v295 = *(_QWORD *)(v291[1] + 144);
    v603 = vld3_f32(v294);
    a3.f32[2] = (float)(v290 / v293);
    v296.i64[0] = 0x3F0000003F000000;
    v296.i64[1] = 0x3F0000003F000000;
    v297 = vaddq_f32(a3, v296);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v297.f32[0]), v603.val[1], *(float32x2_t *)v297.f32, 1), v603.val[2], v297, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v290;
    v298 = vmulq_n_f32(vaddq_f32(a4, v296), *(float *)&v295);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v292 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v298.f32[0]), v603.val[1], *(float32x2_t *)v298.f32, 1), v603.val[2], v298, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v299 = v6[26];
  if (v299 != v8 && (v299 & 0x40000000) != 0)
  {
    v300 = a2[1].i32[0];
    v301 = *(_QWORD **)a1[4];
    v302 = *v301;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v303 = *(_DWORD *)(*v301 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v303);
    v304 = (const float *)(*v301 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v303);
    v305 = *(_QWORD *)(v301[1] + 144);
    v604 = vld3_f32(v304);
    a3.f32[2] = (float)(v300 / v303);
    v306.i64[0] = 0x3F0000003F000000;
    v306.i64[1] = 0x3F0000003F000000;
    v307 = vaddq_f32(a3, v306);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v307.f32[0]), v604.val[1], *(float32x2_t *)v307.f32, 1), v604.val[2], v307, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v300;
    v308 = vmulq_n_f32(vaddq_f32(a4, v306), *(float *)&v305);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v302 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v308.f32[0]), v604.val[1], *(float32x2_t *)v308.f32, 1), v604.val[2], v308, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v309 = v6[27];
  if (v309 != v8 && (v309 & 0x40000000) != 0)
  {
    v310 = a2[1].i32[0];
    v311 = *(_QWORD **)a1[4];
    v312 = *v311;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v313 = *(_DWORD *)(*v311 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v313);
    v314 = (const float *)(*v311 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v313);
    v315 = *(_QWORD *)(v311[1] + 144);
    v605 = vld3_f32(v314);
    a3.f32[2] = (float)(v310 / v313);
    v316.i64[0] = 0x3F0000003F000000;
    v316.i64[1] = 0x3F0000003F000000;
    v317 = vaddq_f32(a3, v316);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v317.f32[0]), v605.val[1], *(float32x2_t *)v317.f32, 1), v605.val[2], v317, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v310;
    v318 = vmulq_n_f32(vaddq_f32(a4, v316), *(float *)&v315);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v312 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v318.f32[0]), v605.val[1], *(float32x2_t *)v318.f32, 1), v605.val[2], v318, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v319 = v6[28];
  if (v319 != v8 && (v319 & 0x40000000) != 0)
  {
    v320 = a2[1].i32[0];
    v321 = *(_QWORD **)a1[4];
    v322 = *v321;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v323 = *(_DWORD *)(*v321 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v323);
    v324 = (const float *)(*v321 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v323);
    v325 = *(_QWORD *)(v321[1] + 144);
    v606 = vld3_f32(v324);
    a3.f32[2] = (float)(v320 / v323);
    v326.i64[0] = 0x3F0000003F000000;
    v326.i64[1] = 0x3F0000003F000000;
    v327 = vaddq_f32(a3, v326);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v327.f32[0]), v606.val[1], *(float32x2_t *)v327.f32, 1), v606.val[2], v327, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v320;
    v328 = vmulq_n_f32(vaddq_f32(a4, v326), *(float *)&v325);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v322 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v328.f32[0]), v606.val[1], *(float32x2_t *)v328.f32, 1), v606.val[2], v328, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v329 = v6[29];
  if (v329 != v8 && (v329 & 0x40000000) != 0)
  {
    v330 = a2[1].i32[0];
    v331 = *(_QWORD **)a1[4];
    v332 = *v331;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v333 = *(_DWORD *)(*v331 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v333);
    v334 = (const float *)(*v331 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v333);
    v335 = *(_QWORD *)(v331[1] + 144);
    v607 = vld3_f32(v334);
    a3.f32[2] = (float)(v330 / v333);
    v336.i64[0] = 0x3F0000003F000000;
    v336.i64[1] = 0x3F0000003F000000;
    v337 = vaddq_f32(a3, v336);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v337.f32[0]), v607.val[1], *(float32x2_t *)v337.f32, 1), v607.val[2], v337, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v330;
    v338 = vmulq_n_f32(vaddq_f32(a4, v336), *(float *)&v335);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v332 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v338.f32[0]), v607.val[1], *(float32x2_t *)v338.f32, 1), v607.val[2], v338, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v339 = v6[30];
  if (v339 != v8 && (v339 & 0x40000000) != 0)
  {
    v340 = a2[1].i32[0];
    v341 = *(_QWORD **)a1[4];
    v342 = *v341;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v343 = *(_DWORD *)(*v341 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v343);
    v344 = (const float *)(*v341 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v343);
    v345 = *(_QWORD *)(v341[1] + 144);
    v608 = vld3_f32(v344);
    a3.f32[2] = (float)(v340 / v343);
    v346.i64[0] = 0x3F0000003F000000;
    v346.i64[1] = 0x3F0000003F000000;
    v347 = vaddq_f32(a3, v346);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v347.f32[0]), v608.val[1], *(float32x2_t *)v347.f32, 1), v608.val[2], v347, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v340;
    v348 = vmulq_n_f32(vaddq_f32(a4, v346), *(float *)&v345);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v342 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v348.f32[0]), v608.val[1], *(float32x2_t *)v348.f32, 1), v608.val[2], v348, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v349 = v6[31];
  if (v349 != v8 && (v349 & 0x40000000) != 0)
  {
    v350 = a2[1].i32[0];
    v351 = *(_QWORD **)a1[4];
    v352 = *v351;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v353 = *(_DWORD *)(*v351 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v353);
    v354 = (const float *)(*v351 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v353);
    v355 = *(_QWORD *)(v351[1] + 144);
    v609 = vld3_f32(v354);
    a3.f32[2] = (float)(v350 / v353);
    v356.i64[0] = 0x3F0000003F000000;
    v356.i64[1] = 0x3F0000003F000000;
    v357 = vaddq_f32(a3, v356);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v357.f32[0]), v609.val[1], *(float32x2_t *)v357.f32, 1), v609.val[2], v357, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v350;
    v358 = vmulq_n_f32(vaddq_f32(a4, v356), *(float *)&v355);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v352 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v358.f32[0]), v609.val[1], *(float32x2_t *)v358.f32, 1), v609.val[2], v358, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v359 = v6[32];
  if (v359 != v8 && (v359 & 0x40000000) != 0)
  {
    v360 = a2[1].i32[0];
    v361 = a2->i32[0];
    v362 = a2->i32[1] + 4;
    v363 = *(_QWORD **)a1[4];
    v364 = *v363;
    v365 = (const float *)(*v363 + 1656);
    v366 = *(_DWORD *)(*v363 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v366);
    v367 = *(_QWORD *)(v363[1] + 144);
    a3.f32[1] = (float)(v362 / v366);
    a3.f32[2] = (float)(v360 / v366);
    v368.i64[0] = 0x3F0000003F000000;
    v368.i64[1] = 0x3F0000003F000000;
    v369 = vaddq_f32(a3, v368);
    v610 = vld3_f32(v365);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v369.f32[0]), v610.val[1], *(float32x2_t *)v369.f32, 1), v610.val[2], v369, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v369.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v362, v361));
    v369.f32[2] = (float)v360;
    v370 = vmulq_n_f32(vaddq_f32(v369, v368), *(float *)&v367);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v364 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v370.f32[0]), v610.val[1], *(float32x2_t *)v370.f32, 1), v610.val[2], v370, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v371 = v6[33];
  if (v371 != v8 && (v371 & 0x40000000) != 0)
  {
    v372 = a2[1].i32[0];
    v373 = *(_QWORD **)a1[4];
    v374 = *v373;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v375 = *(_DWORD *)(*v373 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v375);
    v376 = (const float *)(*v373 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v375);
    v377 = *(_QWORD *)(v373[1] + 144);
    v611 = vld3_f32(v376);
    a3.f32[2] = (float)(v372 / v375);
    v378.i64[0] = 0x3F0000003F000000;
    v378.i64[1] = 0x3F0000003F000000;
    v379 = vaddq_f32(a3, v378);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v379.f32[0]), v611.val[1], *(float32x2_t *)v379.f32, 1), v611.val[2], v379, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v372;
    v380 = vmulq_n_f32(vaddq_f32(a4, v378), *(float *)&v377);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v374 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v380.f32[0]), v611.val[1], *(float32x2_t *)v380.f32, 1), v611.val[2], v380, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v381 = v6[34];
  if (v381 != v8 && (v381 & 0x40000000) != 0)
  {
    v382 = a2[1].i32[0];
    v383 = *(_QWORD **)a1[4];
    v384 = *v383;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v385 = *(_DWORD *)(*v383 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v385);
    v386 = (const float *)(*v383 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v385);
    v387 = *(_QWORD *)(v383[1] + 144);
    v612 = vld3_f32(v386);
    a3.f32[2] = (float)(v382 / v385);
    v388.i64[0] = 0x3F0000003F000000;
    v388.i64[1] = 0x3F0000003F000000;
    v389 = vaddq_f32(a3, v388);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v389.f32[0]), v612.val[1], *(float32x2_t *)v389.f32, 1), v612.val[2], v389, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v382;
    v390 = vmulq_n_f32(vaddq_f32(a4, v388), *(float *)&v387);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v384 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v390.f32[0]), v612.val[1], *(float32x2_t *)v390.f32, 1), v612.val[2], v390, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v391 = v6[35];
  if (v391 != v8 && (v391 & 0x40000000) != 0)
  {
    v392 = a2[1].i32[0];
    v393 = *(_QWORD **)a1[4];
    v394 = *v393;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v395 = *(_DWORD *)(*v393 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v395);
    v396 = (const float *)(*v393 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v395);
    v397 = *(_QWORD *)(v393[1] + 144);
    v613 = vld3_f32(v396);
    a3.f32[2] = (float)(v392 / v395);
    v398.i64[0] = 0x3F0000003F000000;
    v398.i64[1] = 0x3F0000003F000000;
    v399 = vaddq_f32(a3, v398);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v399.f32[0]), v613.val[1], *(float32x2_t *)v399.f32, 1), v613.val[2], v399, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v392;
    v400 = vmulq_n_f32(vaddq_f32(a4, v398), *(float *)&v397);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v394 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v400.f32[0]), v613.val[1], *(float32x2_t *)v400.f32, 1), v613.val[2], v400, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v401 = v6[36];
  if (v401 != v8 && (v401 & 0x40000000) != 0)
  {
    v402 = a2[1].i32[0];
    v403 = *(_QWORD **)a1[4];
    v404 = *v403;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v405 = *(_DWORD *)(*v403 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v405);
    v406 = (const float *)(*v403 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v405);
    v407 = *(_QWORD *)(v403[1] + 144);
    v614 = vld3_f32(v406);
    a3.f32[2] = (float)(v402 / v405);
    v408.i64[0] = 0x3F0000003F000000;
    v408.i64[1] = 0x3F0000003F000000;
    v409 = vaddq_f32(a3, v408);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v409.f32[0]), v614.val[1], *(float32x2_t *)v409.f32, 1), v614.val[2], v409, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v402;
    v410 = vmulq_n_f32(vaddq_f32(a4, v408), *(float *)&v407);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v404 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v410.f32[0]), v614.val[1], *(float32x2_t *)v410.f32, 1), v614.val[2], v410, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v411 = v6[37];
  if (v411 != v8 && (v411 & 0x40000000) != 0)
  {
    v412 = a2[1].i32[0];
    v413 = *(_QWORD **)a1[4];
    v414 = *v413;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v415 = *(_DWORD *)(*v413 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v415);
    v416 = (const float *)(*v413 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v415);
    v417 = *(_QWORD *)(v413[1] + 144);
    v615 = vld3_f32(v416);
    a3.f32[2] = (float)(v412 / v415);
    v418.i64[0] = 0x3F0000003F000000;
    v418.i64[1] = 0x3F0000003F000000;
    v419 = vaddq_f32(a3, v418);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v419.f32[0]), v615.val[1], *(float32x2_t *)v419.f32, 1), v615.val[2], v419, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v412;
    v420 = vmulq_n_f32(vaddq_f32(a4, v418), *(float *)&v417);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v414 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v420.f32[0]), v615.val[1], *(float32x2_t *)v420.f32, 1), v615.val[2], v420, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v421 = v6[38];
  if (v421 != v8 && (v421 & 0x40000000) != 0)
  {
    v422 = a2[1].i32[0];
    v423 = *(_QWORD **)a1[4];
    v424 = *v423;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v425 = *(_DWORD *)(*v423 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v425);
    v426 = (const float *)(*v423 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v425);
    v427 = *(_QWORD *)(v423[1] + 144);
    v616 = vld3_f32(v426);
    a3.f32[2] = (float)(v422 / v425);
    v428.i64[0] = 0x3F0000003F000000;
    v428.i64[1] = 0x3F0000003F000000;
    v429 = vaddq_f32(a3, v428);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v429.f32[0]), v616.val[1], *(float32x2_t *)v429.f32, 1), v616.val[2], v429, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v422;
    v430 = vmulq_n_f32(vaddq_f32(a4, v428), *(float *)&v427);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v424 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v430.f32[0]), v616.val[1], *(float32x2_t *)v430.f32, 1), v616.val[2], v430, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v431 = v6[39];
  if (v431 != v8 && (v431 & 0x40000000) != 0)
  {
    v432 = a2[1].i32[0];
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v435 = *(_DWORD *)(*v433 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v435);
    v436 = (const float *)(*v433 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v435);
    v437 = *(_QWORD *)(v433[1] + 144);
    v617 = vld3_f32(v436);
    a3.f32[2] = (float)(v432 / v435);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v439.f32[0]), v617.val[1], *(float32x2_t *)v439.f32, 1), v617.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v432;
    v440 = vmulq_n_f32(vaddq_f32(a4, v438), *(float *)&v437);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v440.f32[0]), v617.val[1], *(float32x2_t *)v440.f32, 1), v617.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[40];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2[1].i32[0];
    v443 = a2->i32[0];
    v444 = a2->i32[1] + 5;
    v445 = *(_QWORD **)a1[4];
    v446 = *v445;
    v447 = (const float *)(*v445 + 1656);
    v448 = *(_DWORD *)(*v445 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v448);
    v449 = *(_QWORD *)(v445[1] + 144);
    a3.f32[1] = (float)(v444 / v448);
    a3.f32[2] = (float)(v442 / v448);
    v450.i64[0] = 0x3F0000003F000000;
    v450.i64[1] = 0x3F0000003F000000;
    v451 = vaddq_f32(a3, v450);
    v618 = vld3_f32(v447);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v451.f32[0]), v618.val[1], *(float32x2_t *)v451.f32, 1), v618.val[2], v451, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v451.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v444, v443));
    v451.f32[2] = (float)v442;
    v452 = vmulq_n_f32(vaddq_f32(v451, v450), *(float *)&v449);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v446 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v452.f32[0]), v618.val[1], *(float32x2_t *)v452.f32, 1), v618.val[2], v452, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v453 = v6[41];
  if (v453 != v8 && (v453 & 0x40000000) != 0)
  {
    v454 = a2[1].i32[0];
    v455 = *(_QWORD **)a1[4];
    v456 = *v455;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v457 = *(_DWORD *)(*v455 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v457);
    v458 = (const float *)(*v455 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v457);
    v459 = *(_QWORD *)(v455[1] + 144);
    v619 = vld3_f32(v458);
    a3.f32[2] = (float)(v454 / v457);
    v460.i64[0] = 0x3F0000003F000000;
    v460.i64[1] = 0x3F0000003F000000;
    v461 = vaddq_f32(a3, v460);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v461.f32[0]), v619.val[1], *(float32x2_t *)v461.f32, 1), v619.val[2], v461, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v454;
    v462 = vmulq_n_f32(vaddq_f32(a4, v460), *(float *)&v459);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v456 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v462.f32[0]), v619.val[1], *(float32x2_t *)v462.f32, 1), v619.val[2], v462, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v463 = v6[42];
  if (v463 != v8 && (v463 & 0x40000000) != 0)
  {
    v464 = a2[1].i32[0];
    v465 = *(_QWORD **)a1[4];
    v466 = *v465;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v467 = *(_DWORD *)(*v465 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v467);
    v468 = (const float *)(*v465 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v467);
    v469 = *(_QWORD *)(v465[1] + 144);
    v620 = vld3_f32(v468);
    a3.f32[2] = (float)(v464 / v467);
    v470.i64[0] = 0x3F0000003F000000;
    v470.i64[1] = 0x3F0000003F000000;
    v471 = vaddq_f32(a3, v470);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v620.val[0], v471.f32[0]), v620.val[1], *(float32x2_t *)v471.f32, 1), v620.val[2], v471, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v464;
    v472 = vmulq_n_f32(vaddq_f32(a4, v470), *(float *)&v469);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v466 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v620.val[0], v472.f32[0]), v620.val[1], *(float32x2_t *)v472.f32, 1), v620.val[2], v472, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v473 = v6[43];
  if (v473 != v8 && (v473 & 0x40000000) != 0)
  {
    v474 = a2[1].i32[0];
    v475 = *(_QWORD **)a1[4];
    v476 = *v475;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v477 = *(_DWORD *)(*v475 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v477);
    v478 = (const float *)(*v475 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v477);
    v479 = *(_QWORD *)(v475[1] + 144);
    v621 = vld3_f32(v478);
    a3.f32[2] = (float)(v474 / v477);
    v480.i64[0] = 0x3F0000003F000000;
    v480.i64[1] = 0x3F0000003F000000;
    v481 = vaddq_f32(a3, v480);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v621.val[0], v481.f32[0]), v621.val[1], *(float32x2_t *)v481.f32, 1), v621.val[2], v481, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v474;
    v482 = vmulq_n_f32(vaddq_f32(a4, v480), *(float *)&v479);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v476 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v621.val[0], v482.f32[0]), v621.val[1], *(float32x2_t *)v482.f32, 1), v621.val[2], v482, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v483 = v6[44];
  if (v483 != v8 && (v483 & 0x40000000) != 0)
  {
    v484 = a2[1].i32[0];
    v485 = *(_QWORD **)a1[4];
    v486 = *v485;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v487 = *(_DWORD *)(*v485 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v487);
    v488 = (const float *)(*v485 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v487);
    v489 = *(_QWORD *)(v485[1] + 144);
    v622 = vld3_f32(v488);
    a3.f32[2] = (float)(v484 / v487);
    v490.i64[0] = 0x3F0000003F000000;
    v490.i64[1] = 0x3F0000003F000000;
    v491 = vaddq_f32(a3, v490);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v622.val[0], v491.f32[0]), v622.val[1], *(float32x2_t *)v491.f32, 1), v622.val[2], v491, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v484;
    v492 = vmulq_n_f32(vaddq_f32(a4, v490), *(float *)&v489);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v486 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v622.val[0], v492.f32[0]), v622.val[1], *(float32x2_t *)v492.f32, 1), v622.val[2], v492, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v493 = v6[45];
  if (v493 != v8 && (v493 & 0x40000000) != 0)
  {
    v494 = a2[1].i32[0];
    v495 = *(_QWORD **)a1[4];
    v496 = *v495;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v497 = *(_DWORD *)(*v495 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v497);
    v498 = (const float *)(*v495 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v497);
    v499 = *(_QWORD *)(v495[1] + 144);
    v623 = vld3_f32(v498);
    a3.f32[2] = (float)(v494 / v497);
    v500.i64[0] = 0x3F0000003F000000;
    v500.i64[1] = 0x3F0000003F000000;
    v501 = vaddq_f32(a3, v500);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v623.val[0], v501.f32[0]), v623.val[1], *(float32x2_t *)v501.f32, 1), v623.val[2], v501, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v494;
    v502 = vmulq_n_f32(vaddq_f32(a4, v500), *(float *)&v499);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v496 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v623.val[0], v502.f32[0]), v623.val[1], *(float32x2_t *)v502.f32, 1), v623.val[2], v502, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v503 = v6[46];
  if (v503 != v8 && (v503 & 0x40000000) != 0)
  {
    v504 = a2[1].i32[0];
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v507 = *(_DWORD *)(*v505 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v507);
    v508 = (const float *)(*v505 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v507);
    v509 = *(_QWORD *)(v505[1] + 144);
    v624 = vld3_f32(v508);
    a3.f32[2] = (float)(v504 / v507);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v624.val[0], v511.f32[0]), v624.val[1], *(float32x2_t *)v511.f32, 1), v624.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v504;
    v512 = vmulq_n_f32(vaddq_f32(a4, v510), *(float *)&v509);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v624.val[0], v512.f32[0]), v624.val[1], *(float32x2_t *)v512.f32, 1), v624.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[47];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0];
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v625 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v625.val[0], v521.f32[0]), v625.val[1], *(float32x2_t *)v521.f32, 1), v625.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v625.val[0], v522.f32[0]), v625.val[1], *(float32x2_t *)v522.f32, 1), v625.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[48];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0];
    v525 = a2->i32[0];
    v526 = a2->i32[1] + 6;
    v527 = *(_QWORD **)a1[4];
    v528 = *v527;
    v529 = (const float *)(*v527 + 1656);
    v530 = *(_DWORD *)(*v527 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v530);
    v531 = *(_QWORD *)(v527[1] + 144);
    a3.f32[1] = (float)(v526 / v530);
    a3.f32[2] = (float)(v524 / v530);
    v532.i64[0] = 0x3F0000003F000000;
    v532.i64[1] = 0x3F0000003F000000;
    v533 = vaddq_f32(a3, v532);
    v626 = vld3_f32(v529);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v626.val[0], v533.f32[0]), v626.val[1], *(float32x2_t *)v533.f32, 1), v626.val[2], v533, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    *(float32x2_t *)v533.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v526, v525));
    v533.f32[2] = (float)v524;
    v534 = vmulq_n_f32(vaddq_f32(v533, v532), *(float *)&v531);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v528 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v626.val[0], v534.f32[0]), v626.val[1], *(float32x2_t *)v534.f32, 1), v626.val[2], v534, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v535 = v6[49];
  if (v535 != v8 && (v535 & 0x40000000) != 0)
  {
    v536 = a2[1].i32[0];
    v537 = *(_QWORD **)a1[4];
    v538 = *v537;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v539 = *(_DWORD *)(*v537 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v539);
    v540 = (const float *)(*v537 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v539);
    v541 = *(_QWORD *)(v537[1] + 144);
    v627 = vld3_f32(v540);
    a3.f32[2] = (float)(v536 / v539);
    v542.i64[0] = 0x3F0000003F000000;
    v542.i64[1] = 0x3F0000003F000000;
    v543 = vaddq_f32(a3, v542);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v627.val[0], v543.f32[0]), v627.val[1], *(float32x2_t *)v543.f32, 1), v627.val[2], v543, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v536;
    v544 = vmulq_n_f32(vaddq_f32(a4, v542), *(float *)&v541);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v538 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v627.val[0], v544.f32[0]), v627.val[1], *(float32x2_t *)v544.f32, 1), v627.val[2], v544, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v545 = v6[50];
  if (v545 != v8 && (v545 & 0x40000000) != 0)
  {
    v546 = a2[1].i32[0];
    v547 = *(_QWORD **)a1[4];
    v548 = *v547;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v549 = *(_DWORD *)(*v547 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v549);
    v550 = (const float *)(*v547 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v549);
    v551 = *(_QWORD *)(v547[1] + 144);
    v628 = vld3_f32(v550);
    a3.f32[2] = (float)(v546 / v549);
    v552.i64[0] = 0x3F0000003F000000;
    v552.i64[1] = 0x3F0000003F000000;
    v553 = vaddq_f32(a3, v552);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v628.val[0], v553.f32[0]), v628.val[1], *(float32x2_t *)v553.f32, 1), v628.val[2], v553, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v546;
    v554 = vmulq_n_f32(vaddq_f32(a4, v552), *(float *)&v551);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v548 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v628.val[0], v554.f32[0]), v628.val[1], *(float32x2_t *)v554.f32, 1), v628.val[2], v554, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v555 = v6[51];
  if (v555 != v8 && (v555 & 0x40000000) != 0)
  {
    v556 = a2[1].i32[0];
    v557 = *(_QWORD **)a1[4];
    v558 = *v557;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v559 = *(_DWORD *)(*v557 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v559);
    v560 = (const float *)(*v557 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v559);
    v561 = *(_QWORD *)(v557[1] + 144);
    v629 = vld3_f32(v560);
    a3.f32[2] = (float)(v556 / v559);
    v562.i64[0] = 0x3F0000003F000000;
    v562.i64[1] = 0x3F0000003F000000;
    v563 = vaddq_f32(a3, v562);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v629.val[0], v563.f32[0]), v629.val[1], *(float32x2_t *)v563.f32, 1), v629.val[2], v563, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v556;
    v564 = vmulq_n_f32(vaddq_f32(a4, v562), *(float *)&v561);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v558 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v629.val[0], v564.f32[0]), v629.val[1], *(float32x2_t *)v564.f32, 1), v629.val[2], v564, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v565 = v6[52];
  if (v565 != v8 && (v565 & 0x40000000) != 0)
  {
    v566 = a2[1].i32[0];
    v567 = *(_QWORD **)a1[4];
    v568 = *v567;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v569 = *(_DWORD *)(*v567 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v569);
    v570 = (const float *)(*v567 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v569);
    v571 = *(_QWORD *)(v567[1] + 144);
    v630 = vld3_f32(v570);
    a3.f32[2] = (float)(v566 / v569);
    v572.i64[0] = 0x3F0000003F000000;
    v572.i64[1] = 0x3F0000003F000000;
    v573 = vaddq_f32(a3, v572);
    v576 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v630.val[0], v573.f32[0]), v630.val[1], *(float32x2_t *)v573.f32, 1), v630.val[2], v573, 2), (float32x2_t)0xBF000000BF000000));
    v577 = 0;
    a4.f32[2] = (float)v566;
    v574 = vmulq_n_f32(vaddq_f32(a4, v572), *(float *)&v571);
    v578 = &v576;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v568 + 64), (int *)&v576, (uint64_t)&unk_2245BA939, (uint64_t **)&v578)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v630.val[0], v574.f32[0]), v630.val[1], *(float32x2_t *)v574.f32, 1), v630.val[2], v574, 2);
  }
  return sub_2239F0BBC(a1, a2, a3, a4);
}

uint64_t *sub_2239F0BBC(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  uint64_t *v33;
  int v34;
  int v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  const float *v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  int v45;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  const float *v51;
  uint64_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  int v56;
  int v58;
  __int32 v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  const float *v63;
  int v64;
  uint64_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  int v69;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  int v74;
  const float *v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  int v80;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  const float *v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  const float *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  const float *v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int v121;
  int v122;
  _QWORD *v123;
  uint64_t v124;
  int v125;
  const float *v126;
  uint64_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  int v131;
  int v132;
  _QWORD *v133;
  uint64_t v134;
  int v135;
  const float *v136;
  uint64_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  int v141;
  int v142;
  _QWORD *v143;
  uint64_t v144;
  int v145;
  const float *v146;
  uint64_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  int v151;
  __int32 v152;
  int v153;
  int v154;
  _QWORD *v155;
  uint64_t v156;
  const float *v157;
  int v158;
  uint64_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x4_t v162;
  int v163;
  __int32 v164;
  int v165;
  int v166;
  _QWORD *v167;
  uint64_t v168;
  const float *v169;
  int v170;
  uint64_t v171;
  float32x4_t v172;
  float32x4_t v173;
  float32x4_t v174;
  int v175;
  __int32 v176;
  int v177;
  int v178;
  _QWORD *v179;
  uint64_t v180;
  const float *v181;
  int v182;
  uint64_t v183;
  float32x4_t v184;
  float32x4_t v185;
  float32x4_t v186;
  int v187;
  __int32 v188;
  int v189;
  int v190;
  _QWORD *v191;
  uint64_t v192;
  const float *v193;
  int v194;
  uint64_t v195;
  float32x4_t v196;
  float32x4_t v197;
  float32x4_t v198;
  int v199;
  __int32 v200;
  int v201;
  int v202;
  _QWORD *v203;
  uint64_t v204;
  const float *v205;
  int v206;
  uint64_t v207;
  float32x4_t v208;
  float32x4_t v209;
  float32x4_t v210;
  int v211;
  __int32 v212;
  int v213;
  int v214;
  _QWORD *v215;
  uint64_t v216;
  const float *v217;
  int v218;
  uint64_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float32x4_t v222;
  int v223;
  __int32 v224;
  int v225;
  int v226;
  _QWORD *v227;
  uint64_t v228;
  const float *v229;
  int v230;
  uint64_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  int v235;
  int v236;
  __int32 v237;
  int v238;
  _QWORD *v239;
  uint64_t v240;
  const float *v241;
  int v242;
  uint64_t v243;
  float32x4_t v244;
  float32x4_t v245;
  float32x4_t v246;
  int v247;
  int v248;
  _QWORD *v249;
  uint64_t v250;
  int v251;
  const float *v252;
  uint64_t v253;
  float32x4_t v254;
  float32x4_t v255;
  float32x4_t v256;
  int v257;
  int v258;
  _QWORD *v259;
  uint64_t v260;
  int v261;
  const float *v262;
  uint64_t v263;
  float32x4_t v264;
  float32x4_t v265;
  float32x4_t v266;
  int v267;
  int v268;
  _QWORD *v269;
  uint64_t v270;
  int v271;
  const float *v272;
  uint64_t v273;
  float32x4_t v274;
  float32x4_t v275;
  float32x4_t v276;
  int v277;
  int v278;
  _QWORD *v279;
  uint64_t v280;
  int v281;
  const float *v282;
  uint64_t v283;
  float32x4_t v284;
  float32x4_t v285;
  float32x4_t v286;
  int v287;
  int v288;
  _QWORD *v289;
  uint64_t v290;
  int v291;
  const float *v292;
  uint64_t v293;
  float32x4_t v294;
  float32x4_t v295;
  float32x4_t v296;
  int v297;
  int v298;
  _QWORD *v299;
  uint64_t v300;
  int v301;
  const float *v302;
  uint64_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  int v307;
  int v308;
  _QWORD *v309;
  uint64_t v310;
  int v311;
  const float *v312;
  uint64_t v313;
  float32x4_t v314;
  float32x4_t v315;
  float32x4_t v316;
  int v317;
  int v318;
  __int32 v319;
  int v320;
  _QWORD *v321;
  uint64_t v322;
  const float *v323;
  int v324;
  uint64_t v325;
  float32x4_t v326;
  float32x4_t v327;
  float32x4_t v328;
  int v329;
  int v330;
  _QWORD *v331;
  uint64_t v332;
  int v333;
  const float *v334;
  uint64_t v335;
  float32x4_t v336;
  float32x4_t v337;
  float32x4_t v338;
  int v339;
  int v340;
  _QWORD *v341;
  uint64_t v342;
  int v343;
  const float *v344;
  uint64_t v345;
  float32x4_t v346;
  float32x4_t v347;
  float32x4_t v348;
  int v349;
  int v350;
  _QWORD *v351;
  uint64_t v352;
  int v353;
  const float *v354;
  uint64_t v355;
  float32x4_t v356;
  float32x4_t v357;
  float32x4_t v358;
  int v359;
  int v360;
  _QWORD *v361;
  uint64_t v362;
  int v363;
  const float *v364;
  uint64_t v365;
  float32x4_t v366;
  float32x4_t v367;
  float32x4_t v368;
  int v369;
  int v370;
  _QWORD *v371;
  uint64_t v372;
  int v373;
  const float *v374;
  uint64_t v375;
  float32x4_t v376;
  float32x4_t v377;
  float32x4_t v378;
  int v379;
  int v380;
  _QWORD *v381;
  uint64_t v382;
  int v383;
  const float *v384;
  uint64_t v385;
  float32x4_t v386;
  float32x4_t v387;
  float32x4_t v388;
  int v389;
  int v390;
  _QWORD *v391;
  uint64_t v392;
  int v393;
  const float *v394;
  uint64_t v395;
  float32x4_t v396;
  float32x4_t v397;
  float32x4_t v398;
  int v399;
  int v400;
  __int32 v401;
  int v402;
  _QWORD *v403;
  uint64_t v404;
  const float *v405;
  int v406;
  uint64_t v407;
  float32x4_t v408;
  float32x4_t v409;
  float32x4_t v410;
  int v411;
  int v412;
  _QWORD *v413;
  uint64_t v414;
  int v415;
  const float *v416;
  uint64_t v417;
  float32x4_t v418;
  float32x4_t v419;
  float32x4_t v420;
  int v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  const float *v426;
  uint64_t v427;
  float32x4_t v428;
  float32x4_t v429;
  float32x4_t v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  int v435;
  const float *v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  int v442;
  _QWORD *v443;
  uint64_t v444;
  int v445;
  const float *v446;
  uint64_t v447;
  float32x4_t v448;
  float32x4_t v449;
  float32x4_t v450;
  int v451;
  int v452;
  _QWORD *v453;
  uint64_t v454;
  int v455;
  const float *v456;
  uint64_t v457;
  float32x4_t v458;
  float32x4_t v459;
  float32x4_t v460;
  int v461;
  int v462;
  _QWORD *v463;
  uint64_t v464;
  int v465;
  const float *v466;
  uint64_t v467;
  float32x4_t v468;
  float32x4_t v469;
  float32x4_t v470;
  int v471;
  int v472;
  _QWORD *v473;
  uint64_t v474;
  int v475;
  const float *v476;
  uint64_t v477;
  float32x4_t v478;
  float32x4_t v479;
  float32x4_t v480;
  int v481;
  int v482;
  __int32 v483;
  int v484;
  _QWORD *v485;
  uint64_t v486;
  const float *v487;
  int v488;
  uint64_t v489;
  float32x4_t v490;
  float32x4_t v491;
  float32x4_t v492;
  int v493;
  int v494;
  _QWORD *v495;
  uint64_t v496;
  int v497;
  const float *v498;
  uint64_t v499;
  float32x4_t v500;
  float32x4_t v501;
  float32x4_t v502;
  int v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  int v507;
  const float *v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  int v533;
  int v534;
  _QWORD *v535;
  uint64_t v536;
  int v537;
  const float *v538;
  uint64_t v539;
  float32x4_t v540;
  float32x4_t v541;
  float32x4_t v542;
  int v543;
  int v544;
  _QWORD *v545;
  uint64_t v546;
  int v547;
  const float *v548;
  uint64_t v549;
  float32x4_t v550;
  float32x4_t v551;
  float32x4_t v552;
  int v553;
  int v554;
  _QWORD *v555;
  uint64_t v556;
  int v557;
  const float *v558;
  uint64_t v559;
  float32x4_t v560;
  float32x4_t v561;
  float32x4_t v562;
  int32x2_t v564;
  int v565;
  int32x2_t *v566;
  float32x2x3_t v567;
  float32x2x3_t v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;

  v6 = (_DWORD *)a1[1];
  v7 = v6[53];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[54];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v36 = a2[1].i32[0];
      v37 = *(_QWORD **)a1[4];
      v38 = *v37;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
      v39 = *(_DWORD *)(*v37 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v39);
      v40 = (const float *)(*v37 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v39);
      v41 = *(_QWORD *)(v37[1] + 144);
      v568 = vld3_f32(v40);
      a3.f32[2] = (float)(v36 / v39);
      v42.i64[0] = 0x3F0000003F000000;
      v42.i64[1] = 0x3F0000003F000000;
      v43 = vaddq_f32(a3, v42);
      v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v43.f32[0]), v568.val[1], *(float32x2_t *)v43.f32, 1), v568.val[2], v43, 2), (float32x2_t)0xBF000000BF000000));
      v565 = 0;
      a4.f32[2] = (float)v36;
      v44 = vmulq_n_f32(vaddq_f32(a4, v42), *(float *)&v41);
      v566 = &v564;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v38 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v44.f32[0]), v568.val[1], *(float32x2_t *)v44.f32, 1), v568.val[2], v44, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v45 = v6[55];
      if (v45 != v8 && (v45 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0];
    v24 = *(_QWORD **)a1[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v567 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v30.f32[0]), v567.val[1], *(float32x2_t *)v30.f32, 1), v567.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v31.f32[0]), v567.val[1], *(float32x2_t *)v31.f32, 1), v567.val[2], v31, 2);
    v566 = &v564;
    v33 = sub_223A17B10((float *)(v25 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566);
    *(uint64_t *)((char *)v33 + 28) = (uint64_t)v32;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v34 = v6[54];
    if (v34 != v8 && (v34 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[55];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v47 = a2[1].i32[0];
    v48 = *(_QWORD **)a1[4];
    v49 = *v48;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v50 = *(_DWORD *)(*v48 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v50);
    v51 = (const float *)(*v48 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v50);
    v52 = *(_QWORD *)(v48[1] + 144);
    v569 = vld3_f32(v51);
    a3.f32[2] = (float)(v47 / v50);
    v53.i64[0] = 0x3F0000003F000000;
    v53.i64[1] = 0x3F0000003F000000;
    v54 = vaddq_f32(a3, v53);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v54.f32[0]), v569.val[1], *(float32x2_t *)v54.f32, 1), v569.val[2], v54, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v47;
    v55 = vmulq_n_f32(vaddq_f32(a4, v53), *(float *)&v52);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v49 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v55.f32[0]), v569.val[1], *(float32x2_t *)v55.f32, 1), v569.val[2], v55, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v56 = v6[56];
    if (v56 != v8 && (v56 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[56];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v58 = a2[1].i32[0];
    v59 = a2->i32[0];
    v60 = a2->i32[1] + 7;
    v61 = *(_QWORD **)a1[4];
    v62 = *v61;
    v63 = (const float *)(*v61 + 1656);
    v64 = *(_DWORD *)(*v61 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v64);
    v65 = *(_QWORD *)(v61[1] + 144);
    a3.f32[1] = (float)(v60 / v64);
    a3.f32[2] = (float)(v58 / v64);
    v66.i64[0] = 0x3F0000003F000000;
    v66.i64[1] = 0x3F0000003F000000;
    v67 = vaddq_f32(a3, v66);
    v570 = vld3_f32(v63);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v67.f32[0]), v570.val[1], *(float32x2_t *)v67.f32, 1), v570.val[2], v67, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v67.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v60, v59));
    v67.f32[2] = (float)v58;
    v68 = vmulq_n_f32(vaddq_f32(v67, v66), *(float *)&v65);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v62 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v68.f32[0]), v570.val[1], *(float32x2_t *)v68.f32, 1), v570.val[2], v68, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v69 = v6[57];
    if (v69 != v8 && (v69 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[57];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v71 = a2[1].i32[0];
    v72 = *(_QWORD **)a1[4];
    v73 = *v72;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v74 = *(_DWORD *)(*v72 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v74);
    v75 = (const float *)(*v72 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v74);
    v76 = *(_QWORD *)(v72[1] + 144);
    v571 = vld3_f32(v75);
    a3.f32[2] = (float)(v71 / v74);
    v77.i64[0] = 0x3F0000003F000000;
    v77.i64[1] = 0x3F0000003F000000;
    v78 = vaddq_f32(a3, v77);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v78.f32[0]), v571.val[1], *(float32x2_t *)v78.f32, 1), v571.val[2], v78, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v71;
    v79 = vmulq_n_f32(vaddq_f32(a4, v77), *(float *)&v76);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v73 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v79.f32[0]), v571.val[1], *(float32x2_t *)v79.f32, 1), v571.val[2], v79, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v80 = v6[58];
    if (v80 != v8 && (v80 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[58];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v82 = a2[1].i32[0];
    v83 = *(_QWORD **)a1[4];
    v84 = *v83;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v85 = *(_DWORD *)(*v83 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v85);
    v86 = (const float *)(*v83 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v85);
    v87 = *(_QWORD *)(v83[1] + 144);
    v572 = vld3_f32(v86);
    a3.f32[2] = (float)(v82 / v85);
    v88.i64[0] = 0x3F0000003F000000;
    v88.i64[1] = 0x3F0000003F000000;
    v89 = vaddq_f32(a3, v88);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v89.f32[0]), v572.val[1], *(float32x2_t *)v89.f32, 1), v572.val[2], v89, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v82;
    v90 = vmulq_n_f32(vaddq_f32(a4, v88), *(float *)&v87);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v84 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v90.f32[0]), v572.val[1], *(float32x2_t *)v90.f32, 1), v572.val[2], v90, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v91 = v6[59];
    if (v91 != v8 && (v91 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[59];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v93 = a2[1].i32[0];
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v96 = *(_DWORD *)(*v94 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v96);
    v97 = (const float *)(*v94 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v96);
    v98 = *(_QWORD *)(v94[1] + 144);
    v573 = vld3_f32(v97);
    a3.f32[2] = (float)(v93 / v96);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v100.f32[0]), v573.val[1], *(float32x2_t *)v100.f32, 1), v573.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v93;
    v101 = vmulq_n_f32(vaddq_f32(a4, v99), *(float *)&v98);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v101.f32[0]), v573.val[1], *(float32x2_t *)v101.f32, 1), v573.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[60];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[60];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0];
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v574 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v109.f32[0]), v574.val[1], *(float32x2_t *)v109.f32, 1), v574.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v110.f32[0]), v574.val[1], *(float32x2_t *)v110.f32, 1), v574.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[61];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0];
    v113 = *(_QWORD **)a1[4];
    v114 = *v113;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v115 = *(_DWORD *)(*v113 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v115);
    v116 = (const float *)(*v113 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v115);
    v117 = *(_QWORD *)(v113[1] + 144);
    v575 = vld3_f32(v116);
    a3.f32[2] = (float)(v112 / v115);
    v118.i64[0] = 0x3F0000003F000000;
    v118.i64[1] = 0x3F0000003F000000;
    v119 = vaddq_f32(a3, v118);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v119.f32[0]), v575.val[1], *(float32x2_t *)v119.f32, 1), v575.val[2], v119, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v112;
    v120 = vmulq_n_f32(vaddq_f32(a4, v118), *(float *)&v117);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v114 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v120.f32[0]), v575.val[1], *(float32x2_t *)v120.f32, 1), v575.val[2], v120, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v121 = v6[62];
  if (v121 != v8 && (v121 & 0x40000000) != 0)
  {
    v122 = a2[1].i32[0];
    v123 = *(_QWORD **)a1[4];
    v124 = *v123;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v125 = *(_DWORD *)(*v123 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v125);
    v126 = (const float *)(*v123 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v125);
    v127 = *(_QWORD *)(v123[1] + 144);
    v576 = vld3_f32(v126);
    a3.f32[2] = (float)(v122 / v125);
    v128.i64[0] = 0x3F0000003F000000;
    v128.i64[1] = 0x3F0000003F000000;
    v129 = vaddq_f32(a3, v128);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v129.f32[0]), v576.val[1], *(float32x2_t *)v129.f32, 1), v576.val[2], v129, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v122;
    v130 = vmulq_n_f32(vaddq_f32(a4, v128), *(float *)&v127);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v124 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v130.f32[0]), v576.val[1], *(float32x2_t *)v130.f32, 1), v576.val[2], v130, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v131 = v6[63];
  if (v131 != v8 && (v131 & 0x40000000) != 0)
  {
    v132 = a2[1].i32[0];
    v133 = *(_QWORD **)a1[4];
    v134 = *v133;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v135 = *(_DWORD *)(*v133 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v135);
    v136 = (const float *)(*v133 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v135);
    v137 = *(_QWORD *)(v133[1] + 144);
    v577 = vld3_f32(v136);
    a3.f32[2] = (float)(v132 / v135);
    v138.i64[0] = 0x3F0000003F000000;
    v138.i64[1] = 0x3F0000003F000000;
    v139 = vaddq_f32(a3, v138);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v139.f32[0]), v577.val[1], *(float32x2_t *)v139.f32, 1), v577.val[2], v139, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v132;
    v140 = vmulq_n_f32(vaddq_f32(a4, v138), *(float *)&v137);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v134 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v140.f32[0]), v577.val[1], *(float32x2_t *)v140.f32, 1), v577.val[2], v140, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v141 = v6[64];
  if (v141 != v8 && (v141 & 0x40000000) != 0)
  {
    v142 = a2[1].i32[0] + 1;
    v143 = *(_QWORD **)a1[4];
    v144 = *v143;
    v145 = *(_DWORD *)(*v143 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v145);
    v146 = (const float *)(*v143 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v145);
    v147 = *(_QWORD *)(v143[1] + 144);
    v578 = vld3_f32(v146);
    a3.f32[2] = (float)(v142 / v145);
    v148.i64[0] = 0x3F0000003F000000;
    v148.i64[1] = 0x3F0000003F000000;
    v149 = vaddq_f32(a3, v148);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v149.f32[0]), v578.val[1], *(float32x2_t *)v149.f32, 1), v578.val[2], v149, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v142;
    v150 = vmulq_n_f32(vaddq_f32(a4, v148), *(float *)&v147);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v144 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v150.f32[0]), v578.val[1], *(float32x2_t *)v150.f32, 1), v578.val[2], v150, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v151 = v6[65];
  if (v151 != v8 && (v151 & 0x40000000) != 0)
  {
    v152 = a2->i32[1];
    v153 = a2[1].i32[0] + 1;
    v154 = a2->i32[0] + 1;
    v155 = *(_QWORD **)a1[4];
    v156 = *v155;
    v157 = (const float *)(*v155 + 1656);
    v158 = *(_DWORD *)(*v155 + 8);
    a3.f32[0] = (float)(v154 / v158);
    v159 = *(_QWORD *)(v155[1] + 144);
    a3.f32[1] = (float)(v152 / v158);
    a3.f32[2] = (float)(v153 / v158);
    v160.i64[0] = 0x3F0000003F000000;
    v160.i64[1] = 0x3F0000003F000000;
    v161 = vaddq_f32(a3, v160);
    v579 = vld3_f32(v157);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v161.f32[0]), v579.val[1], *(float32x2_t *)v161.f32, 1), v579.val[2], v161, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v161.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v152, v154));
    v161.f32[2] = (float)v153;
    v162 = vmulq_n_f32(vaddq_f32(v161, v160), *(float *)&v159);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v156 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v162.f32[0]), v579.val[1], *(float32x2_t *)v162.f32, 1), v579.val[2], v162, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v163 = v6[66];
  if (v163 != v8 && (v163 & 0x40000000) != 0)
  {
    v164 = a2->i32[1];
    v165 = a2[1].i32[0] + 1;
    v166 = a2->i32[0] + 2;
    v167 = *(_QWORD **)a1[4];
    v168 = *v167;
    v169 = (const float *)(*v167 + 1656);
    v170 = *(_DWORD *)(*v167 + 8);
    a3.f32[0] = (float)(v166 / v170);
    v171 = *(_QWORD *)(v167[1] + 144);
    a3.f32[1] = (float)(v164 / v170);
    a3.f32[2] = (float)(v165 / v170);
    v172.i64[0] = 0x3F0000003F000000;
    v172.i64[1] = 0x3F0000003F000000;
    v173 = vaddq_f32(a3, v172);
    v580 = vld3_f32(v169);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v173.f32[0]), v580.val[1], *(float32x2_t *)v173.f32, 1), v580.val[2], v173, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v173.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v164, v166));
    v173.f32[2] = (float)v165;
    v174 = vmulq_n_f32(vaddq_f32(v173, v172), *(float *)&v171);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v168 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v174.f32[0]), v580.val[1], *(float32x2_t *)v174.f32, 1), v580.val[2], v174, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v175 = v6[67];
  if (v175 != v8 && (v175 & 0x40000000) != 0)
  {
    v176 = a2->i32[1];
    v177 = a2[1].i32[0] + 1;
    v178 = a2->i32[0] + 3;
    v179 = *(_QWORD **)a1[4];
    v180 = *v179;
    v181 = (const float *)(*v179 + 1656);
    v182 = *(_DWORD *)(*v179 + 8);
    a3.f32[0] = (float)(v178 / v182);
    v183 = *(_QWORD *)(v179[1] + 144);
    a3.f32[1] = (float)(v176 / v182);
    a3.f32[2] = (float)(v177 / v182);
    v184.i64[0] = 0x3F0000003F000000;
    v184.i64[1] = 0x3F0000003F000000;
    v185 = vaddq_f32(a3, v184);
    v581 = vld3_f32(v181);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v185.f32[0]), v581.val[1], *(float32x2_t *)v185.f32, 1), v581.val[2], v185, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v185.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v176, v178));
    v185.f32[2] = (float)v177;
    v186 = vmulq_n_f32(vaddq_f32(v185, v184), *(float *)&v183);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v180 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v186.f32[0]), v581.val[1], *(float32x2_t *)v186.f32, 1), v581.val[2], v186, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v187 = v6[68];
  if (v187 != v8 && (v187 & 0x40000000) != 0)
  {
    v188 = a2->i32[1];
    v189 = a2[1].i32[0] + 1;
    v190 = a2->i32[0] + 4;
    v191 = *(_QWORD **)a1[4];
    v192 = *v191;
    v193 = (const float *)(*v191 + 1656);
    v194 = *(_DWORD *)(*v191 + 8);
    a3.f32[0] = (float)(v190 / v194);
    v195 = *(_QWORD *)(v191[1] + 144);
    a3.f32[1] = (float)(v188 / v194);
    a3.f32[2] = (float)(v189 / v194);
    v196.i64[0] = 0x3F0000003F000000;
    v196.i64[1] = 0x3F0000003F000000;
    v197 = vaddq_f32(a3, v196);
    v582 = vld3_f32(v193);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v197.f32[0]), v582.val[1], *(float32x2_t *)v197.f32, 1), v582.val[2], v197, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v197.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v188, v190));
    v197.f32[2] = (float)v189;
    v198 = vmulq_n_f32(vaddq_f32(v197, v196), *(float *)&v195);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v192 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v198.f32[0]), v582.val[1], *(float32x2_t *)v198.f32, 1), v582.val[2], v198, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v199 = v6[69];
  if (v199 != v8 && (v199 & 0x40000000) != 0)
  {
    v200 = a2->i32[1];
    v201 = a2[1].i32[0] + 1;
    v202 = a2->i32[0] + 5;
    v203 = *(_QWORD **)a1[4];
    v204 = *v203;
    v205 = (const float *)(*v203 + 1656);
    v206 = *(_DWORD *)(*v203 + 8);
    a3.f32[0] = (float)(v202 / v206);
    v207 = *(_QWORD *)(v203[1] + 144);
    a3.f32[1] = (float)(v200 / v206);
    a3.f32[2] = (float)(v201 / v206);
    v208.i64[0] = 0x3F0000003F000000;
    v208.i64[1] = 0x3F0000003F000000;
    v209 = vaddq_f32(a3, v208);
    v583 = vld3_f32(v205);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v209.f32[0]), v583.val[1], *(float32x2_t *)v209.f32, 1), v583.val[2], v209, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v209.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v200, v202));
    v209.f32[2] = (float)v201;
    v210 = vmulq_n_f32(vaddq_f32(v209, v208), *(float *)&v207);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v204 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v210.f32[0]), v583.val[1], *(float32x2_t *)v210.f32, 1), v583.val[2], v210, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v211 = v6[70];
  if (v211 != v8 && (v211 & 0x40000000) != 0)
  {
    v212 = a2->i32[1];
    v213 = a2[1].i32[0] + 1;
    v214 = a2->i32[0] + 6;
    v215 = *(_QWORD **)a1[4];
    v216 = *v215;
    v217 = (const float *)(*v215 + 1656);
    v218 = *(_DWORD *)(*v215 + 8);
    a3.f32[0] = (float)(v214 / v218);
    v219 = *(_QWORD *)(v215[1] + 144);
    a3.f32[1] = (float)(v212 / v218);
    a3.f32[2] = (float)(v213 / v218);
    v220.i64[0] = 0x3F0000003F000000;
    v220.i64[1] = 0x3F0000003F000000;
    v221 = vaddq_f32(a3, v220);
    v584 = vld3_f32(v217);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v221.f32[0]), v584.val[1], *(float32x2_t *)v221.f32, 1), v584.val[2], v221, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v221.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v212, v214));
    v221.f32[2] = (float)v213;
    v222 = vmulq_n_f32(vaddq_f32(v221, v220), *(float *)&v219);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v216 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v222.f32[0]), v584.val[1], *(float32x2_t *)v222.f32, 1), v584.val[2], v222, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v223 = v6[71];
  if (v223 != v8 && (v223 & 0x40000000) != 0)
  {
    v224 = a2->i32[1];
    v225 = a2[1].i32[0] + 1;
    v226 = a2->i32[0] + 7;
    v227 = *(_QWORD **)a1[4];
    v228 = *v227;
    v229 = (const float *)(*v227 + 1656);
    v230 = *(_DWORD *)(*v227 + 8);
    a3.f32[0] = (float)(v226 / v230);
    v231 = *(_QWORD *)(v227[1] + 144);
    a3.f32[1] = (float)(v224 / v230);
    a3.f32[2] = (float)(v225 / v230);
    v232.i64[0] = 0x3F0000003F000000;
    v232.i64[1] = 0x3F0000003F000000;
    v233 = vaddq_f32(a3, v232);
    v585 = vld3_f32(v229);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v233.f32[0]), v585.val[1], *(float32x2_t *)v233.f32, 1), v585.val[2], v233, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v233.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v226));
    v233.f32[2] = (float)v225;
    v234 = vmulq_n_f32(vaddq_f32(v233, v232), *(float *)&v231);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v228 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v234.f32[0]), v585.val[1], *(float32x2_t *)v234.f32, 1), v585.val[2], v234, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v235 = v6[72];
  if (v235 != v8 && (v235 & 0x40000000) != 0)
  {
    v236 = a2[1].i32[0] + 1;
    v237 = a2->i32[0];
    v238 = a2->i32[1] + 1;
    v239 = *(_QWORD **)a1[4];
    v240 = *v239;
    v241 = (const float *)(*v239 + 1656);
    v242 = *(_DWORD *)(*v239 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v242);
    v243 = *(_QWORD *)(v239[1] + 144);
    a3.f32[1] = (float)(v238 / v242);
    a3.f32[2] = (float)(v236 / v242);
    v244.i64[0] = 0x3F0000003F000000;
    v244.i64[1] = 0x3F0000003F000000;
    v245 = vaddq_f32(a3, v244);
    v586 = vld3_f32(v241);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v245.f32[0]), v586.val[1], *(float32x2_t *)v245.f32, 1), v586.val[2], v245, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v245.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v238, v237));
    v245.f32[2] = (float)v236;
    v246 = vmulq_n_f32(vaddq_f32(v245, v244), *(float *)&v243);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v240 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v246.f32[0]), v586.val[1], *(float32x2_t *)v246.f32, 1), v586.val[2], v246, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v247 = v6[73];
  if (v247 != v8 && (v247 & 0x40000000) != 0)
  {
    v248 = a2[1].i32[0] + 1;
    v249 = *(_QWORD **)a1[4];
    v250 = *v249;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v251 = *(_DWORD *)(*v249 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v251);
    v252 = (const float *)(*v249 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v251);
    v253 = *(_QWORD *)(v249[1] + 144);
    v587 = vld3_f32(v252);
    a3.f32[2] = (float)(v248 / v251);
    v254.i64[0] = 0x3F0000003F000000;
    v254.i64[1] = 0x3F0000003F000000;
    v255 = vaddq_f32(a3, v254);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v255.f32[0]), v587.val[1], *(float32x2_t *)v255.f32, 1), v587.val[2], v255, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v248;
    v256 = vmulq_n_f32(vaddq_f32(a4, v254), *(float *)&v253);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v250 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v256.f32[0]), v587.val[1], *(float32x2_t *)v256.f32, 1), v587.val[2], v256, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v257 = v6[74];
  if (v257 != v8 && (v257 & 0x40000000) != 0)
  {
    v258 = a2[1].i32[0] + 1;
    v259 = *(_QWORD **)a1[4];
    v260 = *v259;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v261 = *(_DWORD *)(*v259 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v261);
    v262 = (const float *)(*v259 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v261);
    v263 = *(_QWORD *)(v259[1] + 144);
    v588 = vld3_f32(v262);
    a3.f32[2] = (float)(v258 / v261);
    v264.i64[0] = 0x3F0000003F000000;
    v264.i64[1] = 0x3F0000003F000000;
    v265 = vaddq_f32(a3, v264);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v265.f32[0]), v588.val[1], *(float32x2_t *)v265.f32, 1), v588.val[2], v265, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v258;
    v266 = vmulq_n_f32(vaddq_f32(a4, v264), *(float *)&v263);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v260 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v266.f32[0]), v588.val[1], *(float32x2_t *)v266.f32, 1), v588.val[2], v266, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v267 = v6[75];
  if (v267 != v8 && (v267 & 0x40000000) != 0)
  {
    v268 = a2[1].i32[0] + 1;
    v269 = *(_QWORD **)a1[4];
    v270 = *v269;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v271 = *(_DWORD *)(*v269 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v271);
    v272 = (const float *)(*v269 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v271);
    v273 = *(_QWORD *)(v269[1] + 144);
    v589 = vld3_f32(v272);
    a3.f32[2] = (float)(v268 / v271);
    v274.i64[0] = 0x3F0000003F000000;
    v274.i64[1] = 0x3F0000003F000000;
    v275 = vaddq_f32(a3, v274);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v275.f32[0]), v589.val[1], *(float32x2_t *)v275.f32, 1), v589.val[2], v275, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v268;
    v276 = vmulq_n_f32(vaddq_f32(a4, v274), *(float *)&v273);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v270 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v276.f32[0]), v589.val[1], *(float32x2_t *)v276.f32, 1), v589.val[2], v276, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v277 = v6[76];
  if (v277 != v8 && (v277 & 0x40000000) != 0)
  {
    v278 = a2[1].i32[0] + 1;
    v279 = *(_QWORD **)a1[4];
    v280 = *v279;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v281 = *(_DWORD *)(*v279 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v281);
    v282 = (const float *)(*v279 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v281);
    v283 = *(_QWORD *)(v279[1] + 144);
    v590 = vld3_f32(v282);
    a3.f32[2] = (float)(v278 / v281);
    v284.i64[0] = 0x3F0000003F000000;
    v284.i64[1] = 0x3F0000003F000000;
    v285 = vaddq_f32(a3, v284);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v285.f32[0]), v590.val[1], *(float32x2_t *)v285.f32, 1), v590.val[2], v285, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v278;
    v286 = vmulq_n_f32(vaddq_f32(a4, v284), *(float *)&v283);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v280 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v286.f32[0]), v590.val[1], *(float32x2_t *)v286.f32, 1), v590.val[2], v286, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v287 = v6[77];
  if (v287 != v8 && (v287 & 0x40000000) != 0)
  {
    v288 = a2[1].i32[0] + 1;
    v289 = *(_QWORD **)a1[4];
    v290 = *v289;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v291 = *(_DWORD *)(*v289 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v291);
    v292 = (const float *)(*v289 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v291);
    v293 = *(_QWORD *)(v289[1] + 144);
    v591 = vld3_f32(v292);
    a3.f32[2] = (float)(v288 / v291);
    v294.i64[0] = 0x3F0000003F000000;
    v294.i64[1] = 0x3F0000003F000000;
    v295 = vaddq_f32(a3, v294);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v295.f32[0]), v591.val[1], *(float32x2_t *)v295.f32, 1), v591.val[2], v295, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v288;
    v296 = vmulq_n_f32(vaddq_f32(a4, v294), *(float *)&v293);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v290 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v296.f32[0]), v591.val[1], *(float32x2_t *)v296.f32, 1), v591.val[2], v296, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v297 = v6[78];
  if (v297 != v8 && (v297 & 0x40000000) != 0)
  {
    v298 = a2[1].i32[0] + 1;
    v299 = *(_QWORD **)a1[4];
    v300 = *v299;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v301 = *(_DWORD *)(*v299 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v301);
    v302 = (const float *)(*v299 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v301);
    v303 = *(_QWORD *)(v299[1] + 144);
    v592 = vld3_f32(v302);
    a3.f32[2] = (float)(v298 / v301);
    v304.i64[0] = 0x3F0000003F000000;
    v304.i64[1] = 0x3F0000003F000000;
    v305 = vaddq_f32(a3, v304);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v305.f32[0]), v592.val[1], *(float32x2_t *)v305.f32, 1), v592.val[2], v305, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v298;
    v306 = vmulq_n_f32(vaddq_f32(a4, v304), *(float *)&v303);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v300 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v306.f32[0]), v592.val[1], *(float32x2_t *)v306.f32, 1), v592.val[2], v306, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v307 = v6[79];
  if (v307 != v8 && (v307 & 0x40000000) != 0)
  {
    v308 = a2[1].i32[0] + 1;
    v309 = *(_QWORD **)a1[4];
    v310 = *v309;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v311 = *(_DWORD *)(*v309 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v311);
    v312 = (const float *)(*v309 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v311);
    v313 = *(_QWORD *)(v309[1] + 144);
    v593 = vld3_f32(v312);
    a3.f32[2] = (float)(v308 / v311);
    v314.i64[0] = 0x3F0000003F000000;
    v314.i64[1] = 0x3F0000003F000000;
    v315 = vaddq_f32(a3, v314);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v315.f32[0]), v593.val[1], *(float32x2_t *)v315.f32, 1), v593.val[2], v315, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v308;
    v316 = vmulq_n_f32(vaddq_f32(a4, v314), *(float *)&v313);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v310 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v316.f32[0]), v593.val[1], *(float32x2_t *)v316.f32, 1), v593.val[2], v316, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v317 = v6[80];
  if (v317 != v8 && (v317 & 0x40000000) != 0)
  {
    v318 = a2[1].i32[0] + 1;
    v319 = a2->i32[0];
    v320 = a2->i32[1] + 2;
    v321 = *(_QWORD **)a1[4];
    v322 = *v321;
    v323 = (const float *)(*v321 + 1656);
    v324 = *(_DWORD *)(*v321 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v324);
    v325 = *(_QWORD *)(v321[1] + 144);
    a3.f32[1] = (float)(v320 / v324);
    a3.f32[2] = (float)(v318 / v324);
    v326.i64[0] = 0x3F0000003F000000;
    v326.i64[1] = 0x3F0000003F000000;
    v327 = vaddq_f32(a3, v326);
    v594 = vld3_f32(v323);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v327.f32[0]), v594.val[1], *(float32x2_t *)v327.f32, 1), v594.val[2], v327, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v327.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v320, v319));
    v327.f32[2] = (float)v318;
    v328 = vmulq_n_f32(vaddq_f32(v327, v326), *(float *)&v325);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v322 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v328.f32[0]), v594.val[1], *(float32x2_t *)v328.f32, 1), v594.val[2], v328, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v329 = v6[81];
  if (v329 != v8 && (v329 & 0x40000000) != 0)
  {
    v330 = a2[1].i32[0] + 1;
    v331 = *(_QWORD **)a1[4];
    v332 = *v331;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v333 = *(_DWORD *)(*v331 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v333);
    v334 = (const float *)(*v331 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v333);
    v335 = *(_QWORD *)(v331[1] + 144);
    v595 = vld3_f32(v334);
    a3.f32[2] = (float)(v330 / v333);
    v336.i64[0] = 0x3F0000003F000000;
    v336.i64[1] = 0x3F0000003F000000;
    v337 = vaddq_f32(a3, v336);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v337.f32[0]), v595.val[1], *(float32x2_t *)v337.f32, 1), v595.val[2], v337, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v330;
    v338 = vmulq_n_f32(vaddq_f32(a4, v336), *(float *)&v335);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v332 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v338.f32[0]), v595.val[1], *(float32x2_t *)v338.f32, 1), v595.val[2], v338, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v339 = v6[82];
  if (v339 != v8 && (v339 & 0x40000000) != 0)
  {
    v340 = a2[1].i32[0] + 1;
    v341 = *(_QWORD **)a1[4];
    v342 = *v341;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v343 = *(_DWORD *)(*v341 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v343);
    v344 = (const float *)(*v341 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v343);
    v345 = *(_QWORD *)(v341[1] + 144);
    v596 = vld3_f32(v344);
    a3.f32[2] = (float)(v340 / v343);
    v346.i64[0] = 0x3F0000003F000000;
    v346.i64[1] = 0x3F0000003F000000;
    v347 = vaddq_f32(a3, v346);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v347.f32[0]), v596.val[1], *(float32x2_t *)v347.f32, 1), v596.val[2], v347, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v340;
    v348 = vmulq_n_f32(vaddq_f32(a4, v346), *(float *)&v345);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v342 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v348.f32[0]), v596.val[1], *(float32x2_t *)v348.f32, 1), v596.val[2], v348, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v349 = v6[83];
  if (v349 != v8 && (v349 & 0x40000000) != 0)
  {
    v350 = a2[1].i32[0] + 1;
    v351 = *(_QWORD **)a1[4];
    v352 = *v351;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v353 = *(_DWORD *)(*v351 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v353);
    v354 = (const float *)(*v351 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v353);
    v355 = *(_QWORD *)(v351[1] + 144);
    v597 = vld3_f32(v354);
    a3.f32[2] = (float)(v350 / v353);
    v356.i64[0] = 0x3F0000003F000000;
    v356.i64[1] = 0x3F0000003F000000;
    v357 = vaddq_f32(a3, v356);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v357.f32[0]), v597.val[1], *(float32x2_t *)v357.f32, 1), v597.val[2], v357, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v350;
    v358 = vmulq_n_f32(vaddq_f32(a4, v356), *(float *)&v355);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v352 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v358.f32[0]), v597.val[1], *(float32x2_t *)v358.f32, 1), v597.val[2], v358, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v359 = v6[84];
  if (v359 != v8 && (v359 & 0x40000000) != 0)
  {
    v360 = a2[1].i32[0] + 1;
    v361 = *(_QWORD **)a1[4];
    v362 = *v361;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v363 = *(_DWORD *)(*v361 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v363);
    v364 = (const float *)(*v361 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v363);
    v365 = *(_QWORD *)(v361[1] + 144);
    v598 = vld3_f32(v364);
    a3.f32[2] = (float)(v360 / v363);
    v366.i64[0] = 0x3F0000003F000000;
    v366.i64[1] = 0x3F0000003F000000;
    v367 = vaddq_f32(a3, v366);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v367.f32[0]), v598.val[1], *(float32x2_t *)v367.f32, 1), v598.val[2], v367, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v360;
    v368 = vmulq_n_f32(vaddq_f32(a4, v366), *(float *)&v365);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v362 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v368.f32[0]), v598.val[1], *(float32x2_t *)v368.f32, 1), v598.val[2], v368, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v369 = v6[85];
  if (v369 != v8 && (v369 & 0x40000000) != 0)
  {
    v370 = a2[1].i32[0] + 1;
    v371 = *(_QWORD **)a1[4];
    v372 = *v371;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v373 = *(_DWORD *)(*v371 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v373);
    v374 = (const float *)(*v371 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v373);
    v375 = *(_QWORD *)(v371[1] + 144);
    v599 = vld3_f32(v374);
    a3.f32[2] = (float)(v370 / v373);
    v376.i64[0] = 0x3F0000003F000000;
    v376.i64[1] = 0x3F0000003F000000;
    v377 = vaddq_f32(a3, v376);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v377.f32[0]), v599.val[1], *(float32x2_t *)v377.f32, 1), v599.val[2], v377, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v370;
    v378 = vmulq_n_f32(vaddq_f32(a4, v376), *(float *)&v375);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v372 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v378.f32[0]), v599.val[1], *(float32x2_t *)v378.f32, 1), v599.val[2], v378, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v379 = v6[86];
  if (v379 != v8 && (v379 & 0x40000000) != 0)
  {
    v380 = a2[1].i32[0] + 1;
    v381 = *(_QWORD **)a1[4];
    v382 = *v381;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v383 = *(_DWORD *)(*v381 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v383);
    v384 = (const float *)(*v381 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v383);
    v385 = *(_QWORD *)(v381[1] + 144);
    v600 = vld3_f32(v384);
    a3.f32[2] = (float)(v380 / v383);
    v386.i64[0] = 0x3F0000003F000000;
    v386.i64[1] = 0x3F0000003F000000;
    v387 = vaddq_f32(a3, v386);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v387.f32[0]), v600.val[1], *(float32x2_t *)v387.f32, 1), v600.val[2], v387, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v380;
    v388 = vmulq_n_f32(vaddq_f32(a4, v386), *(float *)&v385);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v382 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v388.f32[0]), v600.val[1], *(float32x2_t *)v388.f32, 1), v600.val[2], v388, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v389 = v6[87];
  if (v389 != v8 && (v389 & 0x40000000) != 0)
  {
    v390 = a2[1].i32[0] + 1;
    v391 = *(_QWORD **)a1[4];
    v392 = *v391;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v393 = *(_DWORD *)(*v391 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v393);
    v394 = (const float *)(*v391 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v393);
    v395 = *(_QWORD *)(v391[1] + 144);
    v601 = vld3_f32(v394);
    a3.f32[2] = (float)(v390 / v393);
    v396.i64[0] = 0x3F0000003F000000;
    v396.i64[1] = 0x3F0000003F000000;
    v397 = vaddq_f32(a3, v396);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v397.f32[0]), v601.val[1], *(float32x2_t *)v397.f32, 1), v601.val[2], v397, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v390;
    v398 = vmulq_n_f32(vaddq_f32(a4, v396), *(float *)&v395);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v392 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v398.f32[0]), v601.val[1], *(float32x2_t *)v398.f32, 1), v601.val[2], v398, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v399 = v6[88];
  if (v399 != v8 && (v399 & 0x40000000) != 0)
  {
    v400 = a2[1].i32[0] + 1;
    v401 = a2->i32[0];
    v402 = a2->i32[1] + 3;
    v403 = *(_QWORD **)a1[4];
    v404 = *v403;
    v405 = (const float *)(*v403 + 1656);
    v406 = *(_DWORD *)(*v403 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v406);
    v407 = *(_QWORD *)(v403[1] + 144);
    a3.f32[1] = (float)(v402 / v406);
    a3.f32[2] = (float)(v400 / v406);
    v408.i64[0] = 0x3F0000003F000000;
    v408.i64[1] = 0x3F0000003F000000;
    v409 = vaddq_f32(a3, v408);
    v602 = vld3_f32(v405);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v409.f32[0]), v602.val[1], *(float32x2_t *)v409.f32, 1), v602.val[2], v409, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v409.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v402, v401));
    v409.f32[2] = (float)v400;
    v410 = vmulq_n_f32(vaddq_f32(v409, v408), *(float *)&v407);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v404 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v410.f32[0]), v602.val[1], *(float32x2_t *)v410.f32, 1), v602.val[2], v410, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v411 = v6[89];
  if (v411 != v8 && (v411 & 0x40000000) != 0)
  {
    v412 = a2[1].i32[0] + 1;
    v413 = *(_QWORD **)a1[4];
    v414 = *v413;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v415 = *(_DWORD *)(*v413 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v415);
    v416 = (const float *)(*v413 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v415);
    v417 = *(_QWORD *)(v413[1] + 144);
    v603 = vld3_f32(v416);
    a3.f32[2] = (float)(v412 / v415);
    v418.i64[0] = 0x3F0000003F000000;
    v418.i64[1] = 0x3F0000003F000000;
    v419 = vaddq_f32(a3, v418);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v419.f32[0]), v603.val[1], *(float32x2_t *)v419.f32, 1), v603.val[2], v419, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v412;
    v420 = vmulq_n_f32(vaddq_f32(a4, v418), *(float *)&v417);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v414 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v420.f32[0]), v603.val[1], *(float32x2_t *)v420.f32, 1), v603.val[2], v420, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v421 = v6[90];
  if (v421 != v8 && (v421 & 0x40000000) != 0)
  {
    v422 = a2[1].i32[0] + 1;
    v423 = *(_QWORD **)a1[4];
    v424 = *v423;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v425 = *(_DWORD *)(*v423 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v425);
    v426 = (const float *)(*v423 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v425);
    v427 = *(_QWORD *)(v423[1] + 144);
    v604 = vld3_f32(v426);
    a3.f32[2] = (float)(v422 / v425);
    v428.i64[0] = 0x3F0000003F000000;
    v428.i64[1] = 0x3F0000003F000000;
    v429 = vaddq_f32(a3, v428);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v429.f32[0]), v604.val[1], *(float32x2_t *)v429.f32, 1), v604.val[2], v429, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v422;
    v430 = vmulq_n_f32(vaddq_f32(a4, v428), *(float *)&v427);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v424 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v430.f32[0]), v604.val[1], *(float32x2_t *)v430.f32, 1), v604.val[2], v430, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v431 = v6[91];
  if (v431 != v8 && (v431 & 0x40000000) != 0)
  {
    v432 = a2[1].i32[0] + 1;
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v435 = *(_DWORD *)(*v433 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v435);
    v436 = (const float *)(*v433 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v435);
    v437 = *(_QWORD *)(v433[1] + 144);
    v605 = vld3_f32(v436);
    a3.f32[2] = (float)(v432 / v435);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v439.f32[0]), v605.val[1], *(float32x2_t *)v439.f32, 1), v605.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v432;
    v440 = vmulq_n_f32(vaddq_f32(a4, v438), *(float *)&v437);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v440.f32[0]), v605.val[1], *(float32x2_t *)v440.f32, 1), v605.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[92];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2[1].i32[0] + 1;
    v443 = *(_QWORD **)a1[4];
    v444 = *v443;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v445 = *(_DWORD *)(*v443 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v445);
    v446 = (const float *)(*v443 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v445);
    v447 = *(_QWORD *)(v443[1] + 144);
    v606 = vld3_f32(v446);
    a3.f32[2] = (float)(v442 / v445);
    v448.i64[0] = 0x3F0000003F000000;
    v448.i64[1] = 0x3F0000003F000000;
    v449 = vaddq_f32(a3, v448);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v449.f32[0]), v606.val[1], *(float32x2_t *)v449.f32, 1), v606.val[2], v449, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v442;
    v450 = vmulq_n_f32(vaddq_f32(a4, v448), *(float *)&v447);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v444 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v450.f32[0]), v606.val[1], *(float32x2_t *)v450.f32, 1), v606.val[2], v450, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v451 = v6[93];
  if (v451 != v8 && (v451 & 0x40000000) != 0)
  {
    v452 = a2[1].i32[0] + 1;
    v453 = *(_QWORD **)a1[4];
    v454 = *v453;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v455 = *(_DWORD *)(*v453 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v455);
    v456 = (const float *)(*v453 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v455);
    v457 = *(_QWORD *)(v453[1] + 144);
    v607 = vld3_f32(v456);
    a3.f32[2] = (float)(v452 / v455);
    v458.i64[0] = 0x3F0000003F000000;
    v458.i64[1] = 0x3F0000003F000000;
    v459 = vaddq_f32(a3, v458);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v459.f32[0]), v607.val[1], *(float32x2_t *)v459.f32, 1), v607.val[2], v459, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v452;
    v460 = vmulq_n_f32(vaddq_f32(a4, v458), *(float *)&v457);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v454 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v460.f32[0]), v607.val[1], *(float32x2_t *)v460.f32, 1), v607.val[2], v460, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v461 = v6[94];
  if (v461 != v8 && (v461 & 0x40000000) != 0)
  {
    v462 = a2[1].i32[0] + 1;
    v463 = *(_QWORD **)a1[4];
    v464 = *v463;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v465 = *(_DWORD *)(*v463 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v465);
    v466 = (const float *)(*v463 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v465);
    v467 = *(_QWORD *)(v463[1] + 144);
    v608 = vld3_f32(v466);
    a3.f32[2] = (float)(v462 / v465);
    v468.i64[0] = 0x3F0000003F000000;
    v468.i64[1] = 0x3F0000003F000000;
    v469 = vaddq_f32(a3, v468);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v469.f32[0]), v608.val[1], *(float32x2_t *)v469.f32, 1), v608.val[2], v469, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v462;
    v470 = vmulq_n_f32(vaddq_f32(a4, v468), *(float *)&v467);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v464 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v470.f32[0]), v608.val[1], *(float32x2_t *)v470.f32, 1), v608.val[2], v470, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v471 = v6[95];
  if (v471 != v8 && (v471 & 0x40000000) != 0)
  {
    v472 = a2[1].i32[0] + 1;
    v473 = *(_QWORD **)a1[4];
    v474 = *v473;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v475 = *(_DWORD *)(*v473 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v475);
    v476 = (const float *)(*v473 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v475);
    v477 = *(_QWORD *)(v473[1] + 144);
    v609 = vld3_f32(v476);
    a3.f32[2] = (float)(v472 / v475);
    v478.i64[0] = 0x3F0000003F000000;
    v478.i64[1] = 0x3F0000003F000000;
    v479 = vaddq_f32(a3, v478);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v479.f32[0]), v609.val[1], *(float32x2_t *)v479.f32, 1), v609.val[2], v479, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v472;
    v480 = vmulq_n_f32(vaddq_f32(a4, v478), *(float *)&v477);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v474 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v480.f32[0]), v609.val[1], *(float32x2_t *)v480.f32, 1), v609.val[2], v480, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v481 = v6[96];
  if (v481 != v8 && (v481 & 0x40000000) != 0)
  {
    v482 = a2[1].i32[0] + 1;
    v483 = a2->i32[0];
    v484 = a2->i32[1] + 4;
    v485 = *(_QWORD **)a1[4];
    v486 = *v485;
    v487 = (const float *)(*v485 + 1656);
    v488 = *(_DWORD *)(*v485 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v488);
    v489 = *(_QWORD *)(v485[1] + 144);
    a3.f32[1] = (float)(v484 / v488);
    a3.f32[2] = (float)(v482 / v488);
    v490.i64[0] = 0x3F0000003F000000;
    v490.i64[1] = 0x3F0000003F000000;
    v491 = vaddq_f32(a3, v490);
    v610 = vld3_f32(v487);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v491.f32[0]), v610.val[1], *(float32x2_t *)v491.f32, 1), v610.val[2], v491, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v491.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v484, v483));
    v491.f32[2] = (float)v482;
    v492 = vmulq_n_f32(vaddq_f32(v491, v490), *(float *)&v489);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v486 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v492.f32[0]), v610.val[1], *(float32x2_t *)v492.f32, 1), v610.val[2], v492, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v493 = v6[97];
  if (v493 != v8 && (v493 & 0x40000000) != 0)
  {
    v494 = a2[1].i32[0] + 1;
    v495 = *(_QWORD **)a1[4];
    v496 = *v495;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v497 = *(_DWORD *)(*v495 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v497);
    v498 = (const float *)(*v495 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v497);
    v499 = *(_QWORD *)(v495[1] + 144);
    v611 = vld3_f32(v498);
    a3.f32[2] = (float)(v494 / v497);
    v500.i64[0] = 0x3F0000003F000000;
    v500.i64[1] = 0x3F0000003F000000;
    v501 = vaddq_f32(a3, v500);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v501.f32[0]), v611.val[1], *(float32x2_t *)v501.f32, 1), v611.val[2], v501, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v494;
    v502 = vmulq_n_f32(vaddq_f32(a4, v500), *(float *)&v499);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v496 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v502.f32[0]), v611.val[1], *(float32x2_t *)v502.f32, 1), v611.val[2], v502, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v503 = v6[98];
  if (v503 != v8 && (v503 & 0x40000000) != 0)
  {
    v504 = a2[1].i32[0] + 1;
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v507 = *(_DWORD *)(*v505 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v507);
    v508 = (const float *)(*v505 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v507);
    v509 = *(_QWORD *)(v505[1] + 144);
    v612 = vld3_f32(v508);
    a3.f32[2] = (float)(v504 / v507);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v511.f32[0]), v612.val[1], *(float32x2_t *)v511.f32, 1), v612.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v504;
    v512 = vmulq_n_f32(vaddq_f32(a4, v510), *(float *)&v509);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v512.f32[0]), v612.val[1], *(float32x2_t *)v512.f32, 1), v612.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[99];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0] + 1;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v613 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v521.f32[0]), v613.val[1], *(float32x2_t *)v521.f32, 1), v613.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v522.f32[0]), v613.val[1], *(float32x2_t *)v522.f32, 1), v613.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[100];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 1;
    v525 = *(_QWORD **)a1[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v614 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v531.f32[0]), v614.val[1], *(float32x2_t *)v531.f32, 1), v614.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v526 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v532.f32[0]), v614.val[1], *(float32x2_t *)v532.f32, 1), v614.val[2], v532, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v533 = v6[101];
  if (v533 != v8 && (v533 & 0x40000000) != 0)
  {
    v534 = a2[1].i32[0] + 1;
    v535 = *(_QWORD **)a1[4];
    v536 = *v535;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v537 = *(_DWORD *)(*v535 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v537);
    v538 = (const float *)(*v535 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v537);
    v539 = *(_QWORD *)(v535[1] + 144);
    v615 = vld3_f32(v538);
    a3.f32[2] = (float)(v534 / v537);
    v540.i64[0] = 0x3F0000003F000000;
    v540.i64[1] = 0x3F0000003F000000;
    v541 = vaddq_f32(a3, v540);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v541.f32[0]), v615.val[1], *(float32x2_t *)v541.f32, 1), v615.val[2], v541, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v534;
    v542 = vmulq_n_f32(vaddq_f32(a4, v540), *(float *)&v539);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v536 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v542.f32[0]), v615.val[1], *(float32x2_t *)v542.f32, 1), v615.val[2], v542, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v543 = v6[102];
  if (v543 != v8 && (v543 & 0x40000000) != 0)
  {
    v544 = a2[1].i32[0] + 1;
    v545 = *(_QWORD **)a1[4];
    v546 = *v545;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v547 = *(_DWORD *)(*v545 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v547);
    v548 = (const float *)(*v545 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v547);
    v549 = *(_QWORD *)(v545[1] + 144);
    v616 = vld3_f32(v548);
    a3.f32[2] = (float)(v544 / v547);
    v550.i64[0] = 0x3F0000003F000000;
    v550.i64[1] = 0x3F0000003F000000;
    v551 = vaddq_f32(a3, v550);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v551.f32[0]), v616.val[1], *(float32x2_t *)v551.f32, 1), v616.val[2], v551, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v544;
    v552 = vmulq_n_f32(vaddq_f32(a4, v550), *(float *)&v549);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v546 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v552.f32[0]), v616.val[1], *(float32x2_t *)v552.f32, 1), v616.val[2], v552, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v553 = v6[103];
  if (v553 != v8 && (v553 & 0x40000000) != 0)
  {
    v554 = a2[1].i32[0] + 1;
    v555 = *(_QWORD **)a1[4];
    v556 = *v555;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v557 = *(_DWORD *)(*v555 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v557);
    v558 = (const float *)(*v555 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v557);
    v559 = *(_QWORD *)(v555[1] + 144);
    v617 = vld3_f32(v558);
    a3.f32[2] = (float)(v554 / v557);
    v560.i64[0] = 0x3F0000003F000000;
    v560.i64[1] = 0x3F0000003F000000;
    v561 = vaddq_f32(a3, v560);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v561.f32[0]), v617.val[1], *(float32x2_t *)v561.f32, 1), v617.val[2], v561, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v554;
    v562 = vmulq_n_f32(vaddq_f32(a4, v560), *(float *)&v559);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v556 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v562.f32[0]), v617.val[1], *(float32x2_t *)v562.f32, 1), v617.val[2], v562, 2);
  }
  return sub_2239F3958(a1, a2, a3, a4);
}

uint64_t *sub_2239F3958(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  __int32 v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  const float *v28;
  int v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x2_t v34;
  uint64_t *v35;
  int v36;
  int v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  const float *v42;
  uint64_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  int v47;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  int v52;
  const float *v53;
  uint64_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  int v58;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  const float *v64;
  uint64_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  int v69;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  int v74;
  const float *v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  int v80;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  const float *v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  const float *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  __int32 v113;
  int v114;
  _QWORD *v115;
  uint64_t v116;
  const float *v117;
  int v118;
  uint64_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  int v123;
  int v124;
  _QWORD *v125;
  uint64_t v126;
  int v127;
  const float *v128;
  uint64_t v129;
  float32x4_t v130;
  float32x4_t v131;
  float32x4_t v132;
  int v133;
  int v134;
  _QWORD *v135;
  uint64_t v136;
  int v137;
  const float *v138;
  uint64_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  int v143;
  int v144;
  _QWORD *v145;
  uint64_t v146;
  int v147;
  const float *v148;
  uint64_t v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  int v153;
  int v154;
  _QWORD *v155;
  uint64_t v156;
  int v157;
  const float *v158;
  uint64_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x4_t v162;
  int v163;
  int v164;
  _QWORD *v165;
  uint64_t v166;
  int v167;
  const float *v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  int v173;
  int v174;
  _QWORD *v175;
  uint64_t v176;
  int v177;
  const float *v178;
  uint64_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  int v183;
  int v184;
  _QWORD *v185;
  uint64_t v186;
  int v187;
  const float *v188;
  uint64_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  int v193;
  int v194;
  __int32 v195;
  int v196;
  _QWORD *v197;
  uint64_t v198;
  const float *v199;
  int v200;
  uint64_t v201;
  float32x4_t v202;
  float32x4_t v203;
  float32x4_t v204;
  int v205;
  int v206;
  _QWORD *v207;
  uint64_t v208;
  int v209;
  const float *v210;
  uint64_t v211;
  float32x4_t v212;
  float32x4_t v213;
  float32x4_t v214;
  int v215;
  int v216;
  _QWORD *v217;
  uint64_t v218;
  int v219;
  const float *v220;
  uint64_t v221;
  float32x4_t v222;
  float32x4_t v223;
  float32x4_t v224;
  int v225;
  int v226;
  _QWORD *v227;
  uint64_t v228;
  int v229;
  const float *v230;
  uint64_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  int v235;
  int v236;
  _QWORD *v237;
  uint64_t v238;
  int v239;
  const float *v240;
  uint64_t v241;
  float32x4_t v242;
  float32x4_t v243;
  float32x4_t v244;
  int v245;
  int v246;
  _QWORD *v247;
  uint64_t v248;
  int v249;
  const float *v250;
  uint64_t v251;
  float32x4_t v252;
  float32x4_t v253;
  float32x4_t v254;
  int v255;
  int v256;
  _QWORD *v257;
  uint64_t v258;
  int v259;
  const float *v260;
  uint64_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float32x4_t v264;
  int v265;
  int v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  const float *v270;
  uint64_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x4_t v274;
  int v275;
  int v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  const float *v280;
  uint64_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  int v285;
  __int32 v286;
  int v287;
  int v288;
  _QWORD *v289;
  uint64_t v290;
  const float *v291;
  int v292;
  uint64_t v293;
  float32x4_t v294;
  float32x4_t v295;
  float32x4_t v296;
  int v297;
  __int32 v298;
  int v299;
  int v300;
  _QWORD *v301;
  uint64_t v302;
  const float *v303;
  int v304;
  uint64_t v305;
  float32x4_t v306;
  float32x4_t v307;
  float32x4_t v308;
  int v309;
  __int32 v310;
  int v311;
  int v312;
  _QWORD *v313;
  uint64_t v314;
  const float *v315;
  int v316;
  uint64_t v317;
  float32x4_t v318;
  float32x4_t v319;
  float32x4_t v320;
  int v321;
  __int32 v322;
  int v323;
  int v324;
  _QWORD *v325;
  uint64_t v326;
  const float *v327;
  int v328;
  uint64_t v329;
  float32x4_t v330;
  float32x4_t v331;
  float32x4_t v332;
  int v333;
  __int32 v334;
  int v335;
  int v336;
  _QWORD *v337;
  uint64_t v338;
  const float *v339;
  int v340;
  uint64_t v341;
  float32x4_t v342;
  float32x4_t v343;
  float32x4_t v344;
  int v345;
  __int32 v346;
  int v347;
  int v348;
  _QWORD *v349;
  uint64_t v350;
  const float *v351;
  int v352;
  uint64_t v353;
  float32x4_t v354;
  float32x4_t v355;
  float32x4_t v356;
  int v357;
  __int32 v358;
  int v359;
  int v360;
  _QWORD *v361;
  uint64_t v362;
  const float *v363;
  int v364;
  uint64_t v365;
  float32x4_t v366;
  float32x4_t v367;
  float32x4_t v368;
  int v369;
  int v370;
  __int32 v371;
  int v372;
  _QWORD *v373;
  uint64_t v374;
  const float *v375;
  int v376;
  uint64_t v377;
  float32x4_t v378;
  float32x4_t v379;
  float32x4_t v380;
  int v381;
  int v382;
  _QWORD *v383;
  uint64_t v384;
  int v385;
  const float *v386;
  uint64_t v387;
  float32x4_t v388;
  float32x4_t v389;
  float32x4_t v390;
  int v391;
  int v392;
  _QWORD *v393;
  uint64_t v394;
  int v395;
  const float *v396;
  uint64_t v397;
  float32x4_t v398;
  float32x4_t v399;
  float32x4_t v400;
  int v401;
  int v402;
  _QWORD *v403;
  uint64_t v404;
  int v405;
  const float *v406;
  uint64_t v407;
  float32x4_t v408;
  float32x4_t v409;
  float32x4_t v410;
  int v411;
  int v412;
  _QWORD *v413;
  uint64_t v414;
  int v415;
  const float *v416;
  uint64_t v417;
  float32x4_t v418;
  float32x4_t v419;
  float32x4_t v420;
  int v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  const float *v426;
  uint64_t v427;
  float32x4_t v428;
  float32x4_t v429;
  float32x4_t v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  int v435;
  const float *v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  int v442;
  _QWORD *v443;
  uint64_t v444;
  int v445;
  const float *v446;
  uint64_t v447;
  float32x4_t v448;
  float32x4_t v449;
  float32x4_t v450;
  int v451;
  int v452;
  __int32 v453;
  int v454;
  _QWORD *v455;
  uint64_t v456;
  const float *v457;
  int v458;
  uint64_t v459;
  float32x4_t v460;
  float32x4_t v461;
  float32x4_t v462;
  int v463;
  int v464;
  _QWORD *v465;
  uint64_t v466;
  int v467;
  const float *v468;
  uint64_t v469;
  float32x4_t v470;
  float32x4_t v471;
  float32x4_t v472;
  int v473;
  int v474;
  _QWORD *v475;
  uint64_t v476;
  int v477;
  const float *v478;
  uint64_t v479;
  float32x4_t v480;
  float32x4_t v481;
  float32x4_t v482;
  int v483;
  int v484;
  _QWORD *v485;
  uint64_t v486;
  int v487;
  const float *v488;
  uint64_t v489;
  float32x4_t v490;
  float32x4_t v491;
  float32x4_t v492;
  int v493;
  int v494;
  _QWORD *v495;
  uint64_t v496;
  int v497;
  const float *v498;
  uint64_t v499;
  float32x4_t v500;
  float32x4_t v501;
  float32x4_t v502;
  int v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  int v507;
  const float *v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  int v533;
  int v534;
  __int32 v535;
  int v536;
  _QWORD *v537;
  uint64_t v538;
  const float *v539;
  int v540;
  uint64_t v541;
  float32x4_t v542;
  float32x4_t v543;
  float32x4_t v544;
  int v545;
  int v546;
  _QWORD *v547;
  uint64_t v548;
  int v549;
  const float *v550;
  uint64_t v551;
  float32x4_t v552;
  float32x4_t v553;
  float32x4_t v554;
  int v555;
  int v556;
  _QWORD *v557;
  uint64_t v558;
  int v559;
  const float *v560;
  uint64_t v561;
  float32x4_t v562;
  float32x4_t v563;
  float32x4_t v564;
  int32x2_t v566;
  int v567;
  int32x2_t *v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;
  float32x2x3_t v618;
  float32x2x3_t v619;

  v6 = (_DWORD *)a1[1];
  v7 = v6[104];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[105];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v38 = a2[1].i32[0] + 1;
      v39 = *(_QWORD **)a1[4];
      v40 = *v39;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
      v41 = *(_DWORD *)(*v39 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v41);
      v42 = (const float *)(*v39 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v41);
      v43 = *(_QWORD *)(v39[1] + 144);
      v570 = vld3_f32(v42);
      a3.f32[2] = (float)(v38 / v41);
      v44.i64[0] = 0x3F0000003F000000;
      v44.i64[1] = 0x3F0000003F000000;
      v45 = vaddq_f32(a3, v44);
      v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v45.f32[0]), v570.val[1], *(float32x2_t *)v45.f32, 1), v570.val[2], v45, 2), (float32x2_t)0xBF000000BF000000));
      v567 = 0;
      a4.f32[2] = (float)v38;
      v46 = vmulq_n_f32(vaddq_f32(a4, v44), *(float *)&v43);
      v568 = &v566;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v40 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v46.f32[0]), v570.val[1], *(float32x2_t *)v46.f32, 1), v570.val[2], v46, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v47 = v6[106];
      if (v47 != v8 && (v47 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 1;
    v24 = a2->i32[0];
    v25 = a2->i32[1] + 5;
    v26 = *(_QWORD **)a1[4];
    v27 = *v26;
    v28 = (const float *)(*v26 + 1656);
    v29 = *(_DWORD *)(*v26 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v29);
    v30 = *(_QWORD *)(v26[1] + 144);
    a3.f32[1] = (float)(v25 / v29);
    a3.f32[2] = (float)(v23 / v29);
    v31.i64[0] = 0x3F0000003F000000;
    v31.i64[1] = 0x3F0000003F000000;
    v32 = vaddq_f32(a3, v31);
    v569 = vld3_f32(v28);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v32.f32[0]), v569.val[1], *(float32x2_t *)v32.f32, 1), v569.val[2], v32, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v32.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v25, v24));
    v32.f32[2] = (float)v23;
    v33 = vmulq_n_f32(vaddq_f32(v32, v31), *(float *)&v30);
    v34 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v33.f32[0]), v569.val[1], *(float32x2_t *)v33.f32, 1), v569.val[2], v33, 2);
    v568 = &v566;
    v35 = sub_223A17B10((float *)(v27 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568);
    *(uint64_t *)((char *)v35 + 28) = (uint64_t)v34;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v36 = v6[105];
    if (v36 != v8 && (v36 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[106];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v49 = a2[1].i32[0] + 1;
    v50 = *(_QWORD **)a1[4];
    v51 = *v50;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v52 = *(_DWORD *)(*v50 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v52);
    v53 = (const float *)(*v50 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v52);
    v54 = *(_QWORD *)(v50[1] + 144);
    v571 = vld3_f32(v53);
    a3.f32[2] = (float)(v49 / v52);
    v55.i64[0] = 0x3F0000003F000000;
    v55.i64[1] = 0x3F0000003F000000;
    v56 = vaddq_f32(a3, v55);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v56.f32[0]), v571.val[1], *(float32x2_t *)v56.f32, 1), v571.val[2], v56, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v49;
    v57 = vmulq_n_f32(vaddq_f32(a4, v55), *(float *)&v54);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v51 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v57.f32[0]), v571.val[1], *(float32x2_t *)v57.f32, 1), v571.val[2], v57, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v58 = v6[107];
    if (v58 != v8 && (v58 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[107];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v60 = a2[1].i32[0] + 1;
    v61 = *(_QWORD **)a1[4];
    v62 = *v61;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v63 = *(_DWORD *)(*v61 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v63);
    v64 = (const float *)(*v61 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v63);
    v65 = *(_QWORD *)(v61[1] + 144);
    v572 = vld3_f32(v64);
    a3.f32[2] = (float)(v60 / v63);
    v66.i64[0] = 0x3F0000003F000000;
    v66.i64[1] = 0x3F0000003F000000;
    v67 = vaddq_f32(a3, v66);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v67.f32[0]), v572.val[1], *(float32x2_t *)v67.f32, 1), v572.val[2], v67, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v60;
    v68 = vmulq_n_f32(vaddq_f32(a4, v66), *(float *)&v65);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v62 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v68.f32[0]), v572.val[1], *(float32x2_t *)v68.f32, 1), v572.val[2], v68, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v69 = v6[108];
    if (v69 != v8 && (v69 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[108];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v71 = a2[1].i32[0] + 1;
    v72 = *(_QWORD **)a1[4];
    v73 = *v72;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v74 = *(_DWORD *)(*v72 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v74);
    v75 = (const float *)(*v72 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v74);
    v76 = *(_QWORD *)(v72[1] + 144);
    v573 = vld3_f32(v75);
    a3.f32[2] = (float)(v71 / v74);
    v77.i64[0] = 0x3F0000003F000000;
    v77.i64[1] = 0x3F0000003F000000;
    v78 = vaddq_f32(a3, v77);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v78.f32[0]), v573.val[1], *(float32x2_t *)v78.f32, 1), v573.val[2], v78, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v71;
    v79 = vmulq_n_f32(vaddq_f32(a4, v77), *(float *)&v76);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v73 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v79.f32[0]), v573.val[1], *(float32x2_t *)v79.f32, 1), v573.val[2], v79, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v80 = v6[109];
    if (v80 != v8 && (v80 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[109];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v82 = a2[1].i32[0] + 1;
    v83 = *(_QWORD **)a1[4];
    v84 = *v83;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v85 = *(_DWORD *)(*v83 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v85);
    v86 = (const float *)(*v83 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v85);
    v87 = *(_QWORD *)(v83[1] + 144);
    v574 = vld3_f32(v86);
    a3.f32[2] = (float)(v82 / v85);
    v88.i64[0] = 0x3F0000003F000000;
    v88.i64[1] = 0x3F0000003F000000;
    v89 = vaddq_f32(a3, v88);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v89.f32[0]), v574.val[1], *(float32x2_t *)v89.f32, 1), v574.val[2], v89, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v82;
    v90 = vmulq_n_f32(vaddq_f32(a4, v88), *(float *)&v87);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v84 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v90.f32[0]), v574.val[1], *(float32x2_t *)v90.f32, 1), v574.val[2], v90, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v91 = v6[110];
    if (v91 != v8 && (v91 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[110];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v93 = a2[1].i32[0] + 1;
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v96 = *(_DWORD *)(*v94 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v96);
    v97 = (const float *)(*v94 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v96);
    v98 = *(_QWORD *)(v94[1] + 144);
    v575 = vld3_f32(v97);
    a3.f32[2] = (float)(v93 / v96);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v100.f32[0]), v575.val[1], *(float32x2_t *)v100.f32, 1), v575.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v93;
    v101 = vmulq_n_f32(vaddq_f32(a4, v99), *(float *)&v98);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v101.f32[0]), v575.val[1], *(float32x2_t *)v101.f32, 1), v575.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[111];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[111];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0] + 1;
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v576 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v109.f32[0]), v576.val[1], *(float32x2_t *)v109.f32, 1), v576.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v110.f32[0]), v576.val[1], *(float32x2_t *)v110.f32, 1), v576.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[112];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0] + 1;
    v113 = a2->i32[0];
    v114 = a2->i32[1] + 6;
    v115 = *(_QWORD **)a1[4];
    v116 = *v115;
    v117 = (const float *)(*v115 + 1656);
    v118 = *(_DWORD *)(*v115 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v118);
    v119 = *(_QWORD *)(v115[1] + 144);
    a3.f32[1] = (float)(v114 / v118);
    a3.f32[2] = (float)(v112 / v118);
    v120.i64[0] = 0x3F0000003F000000;
    v120.i64[1] = 0x3F0000003F000000;
    v121 = vaddq_f32(a3, v120);
    v577 = vld3_f32(v117);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v121.f32[0]), v577.val[1], *(float32x2_t *)v121.f32, 1), v577.val[2], v121, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v121.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v113));
    v121.f32[2] = (float)v112;
    v122 = vmulq_n_f32(vaddq_f32(v121, v120), *(float *)&v119);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v116 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v122.f32[0]), v577.val[1], *(float32x2_t *)v122.f32, 1), v577.val[2], v122, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v123 = v6[113];
  if (v123 != v8 && (v123 & 0x40000000) != 0)
  {
    v124 = a2[1].i32[0] + 1;
    v125 = *(_QWORD **)a1[4];
    v126 = *v125;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v127 = *(_DWORD *)(*v125 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v127);
    v128 = (const float *)(*v125 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v127);
    v129 = *(_QWORD *)(v125[1] + 144);
    v578 = vld3_f32(v128);
    a3.f32[2] = (float)(v124 / v127);
    v130.i64[0] = 0x3F0000003F000000;
    v130.i64[1] = 0x3F0000003F000000;
    v131 = vaddq_f32(a3, v130);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v131.f32[0]), v578.val[1], *(float32x2_t *)v131.f32, 1), v578.val[2], v131, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v124;
    v132 = vmulq_n_f32(vaddq_f32(a4, v130), *(float *)&v129);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v126 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v132.f32[0]), v578.val[1], *(float32x2_t *)v132.f32, 1), v578.val[2], v132, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v133 = v6[114];
  if (v133 != v8 && (v133 & 0x40000000) != 0)
  {
    v134 = a2[1].i32[0] + 1;
    v135 = *(_QWORD **)a1[4];
    v136 = *v135;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v137 = *(_DWORD *)(*v135 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v137);
    v138 = (const float *)(*v135 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v137);
    v139 = *(_QWORD *)(v135[1] + 144);
    v579 = vld3_f32(v138);
    a3.f32[2] = (float)(v134 / v137);
    v140.i64[0] = 0x3F0000003F000000;
    v140.i64[1] = 0x3F0000003F000000;
    v141 = vaddq_f32(a3, v140);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v141.f32[0]), v579.val[1], *(float32x2_t *)v141.f32, 1), v579.val[2], v141, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v134;
    v142 = vmulq_n_f32(vaddq_f32(a4, v140), *(float *)&v139);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v136 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v142.f32[0]), v579.val[1], *(float32x2_t *)v142.f32, 1), v579.val[2], v142, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v143 = v6[115];
  if (v143 != v8 && (v143 & 0x40000000) != 0)
  {
    v144 = a2[1].i32[0] + 1;
    v145 = *(_QWORD **)a1[4];
    v146 = *v145;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v147 = *(_DWORD *)(*v145 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v147);
    v148 = (const float *)(*v145 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v147);
    v149 = *(_QWORD *)(v145[1] + 144);
    v580 = vld3_f32(v148);
    a3.f32[2] = (float)(v144 / v147);
    v150.i64[0] = 0x3F0000003F000000;
    v150.i64[1] = 0x3F0000003F000000;
    v151 = vaddq_f32(a3, v150);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v151.f32[0]), v580.val[1], *(float32x2_t *)v151.f32, 1), v580.val[2], v151, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v144;
    v152 = vmulq_n_f32(vaddq_f32(a4, v150), *(float *)&v149);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v146 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v152.f32[0]), v580.val[1], *(float32x2_t *)v152.f32, 1), v580.val[2], v152, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v153 = v6[116];
  if (v153 != v8 && (v153 & 0x40000000) != 0)
  {
    v154 = a2[1].i32[0] + 1;
    v155 = *(_QWORD **)a1[4];
    v156 = *v155;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v157 = *(_DWORD *)(*v155 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v157);
    v158 = (const float *)(*v155 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v157);
    v159 = *(_QWORD *)(v155[1] + 144);
    v581 = vld3_f32(v158);
    a3.f32[2] = (float)(v154 / v157);
    v160.i64[0] = 0x3F0000003F000000;
    v160.i64[1] = 0x3F0000003F000000;
    v161 = vaddq_f32(a3, v160);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v161.f32[0]), v581.val[1], *(float32x2_t *)v161.f32, 1), v581.val[2], v161, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v154;
    v162 = vmulq_n_f32(vaddq_f32(a4, v160), *(float *)&v159);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v156 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v162.f32[0]), v581.val[1], *(float32x2_t *)v162.f32, 1), v581.val[2], v162, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v163 = v6[117];
  if (v163 != v8 && (v163 & 0x40000000) != 0)
  {
    v164 = a2[1].i32[0] + 1;
    v165 = *(_QWORD **)a1[4];
    v166 = *v165;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v167 = *(_DWORD *)(*v165 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v167);
    v168 = (const float *)(*v165 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v167);
    v169 = *(_QWORD *)(v165[1] + 144);
    v582 = vld3_f32(v168);
    a3.f32[2] = (float)(v164 / v167);
    v170.i64[0] = 0x3F0000003F000000;
    v170.i64[1] = 0x3F0000003F000000;
    v171 = vaddq_f32(a3, v170);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v171.f32[0]), v582.val[1], *(float32x2_t *)v171.f32, 1), v582.val[2], v171, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v164;
    v172 = vmulq_n_f32(vaddq_f32(a4, v170), *(float *)&v169);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v166 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v172.f32[0]), v582.val[1], *(float32x2_t *)v172.f32, 1), v582.val[2], v172, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v173 = v6[118];
  if (v173 != v8 && (v173 & 0x40000000) != 0)
  {
    v174 = a2[1].i32[0] + 1;
    v175 = *(_QWORD **)a1[4];
    v176 = *v175;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v177 = *(_DWORD *)(*v175 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v177);
    v178 = (const float *)(*v175 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v177);
    v179 = *(_QWORD *)(v175[1] + 144);
    v583 = vld3_f32(v178);
    a3.f32[2] = (float)(v174 / v177);
    v180.i64[0] = 0x3F0000003F000000;
    v180.i64[1] = 0x3F0000003F000000;
    v181 = vaddq_f32(a3, v180);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v181.f32[0]), v583.val[1], *(float32x2_t *)v181.f32, 1), v583.val[2], v181, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v174;
    v182 = vmulq_n_f32(vaddq_f32(a4, v180), *(float *)&v179);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v176 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v182.f32[0]), v583.val[1], *(float32x2_t *)v182.f32, 1), v583.val[2], v182, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v183 = v6[119];
  if (v183 != v8 && (v183 & 0x40000000) != 0)
  {
    v184 = a2[1].i32[0] + 1;
    v185 = *(_QWORD **)a1[4];
    v186 = *v185;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v187 = *(_DWORD *)(*v185 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v187);
    v188 = (const float *)(*v185 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v187);
    v189 = *(_QWORD *)(v185[1] + 144);
    v584 = vld3_f32(v188);
    a3.f32[2] = (float)(v184 / v187);
    v190.i64[0] = 0x3F0000003F000000;
    v190.i64[1] = 0x3F0000003F000000;
    v191 = vaddq_f32(a3, v190);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v191.f32[0]), v584.val[1], *(float32x2_t *)v191.f32, 1), v584.val[2], v191, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v184;
    v192 = vmulq_n_f32(vaddq_f32(a4, v190), *(float *)&v189);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v186 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v192.f32[0]), v584.val[1], *(float32x2_t *)v192.f32, 1), v584.val[2], v192, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v193 = v6[120];
  if (v193 != v8 && (v193 & 0x40000000) != 0)
  {
    v194 = a2[1].i32[0] + 1;
    v195 = a2->i32[0];
    v196 = a2->i32[1] + 7;
    v197 = *(_QWORD **)a1[4];
    v198 = *v197;
    v199 = (const float *)(*v197 + 1656);
    v200 = *(_DWORD *)(*v197 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v200);
    v201 = *(_QWORD *)(v197[1] + 144);
    a3.f32[1] = (float)(v196 / v200);
    a3.f32[2] = (float)(v194 / v200);
    v202.i64[0] = 0x3F0000003F000000;
    v202.i64[1] = 0x3F0000003F000000;
    v203 = vaddq_f32(a3, v202);
    v585 = vld3_f32(v199);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v203.f32[0]), v585.val[1], *(float32x2_t *)v203.f32, 1), v585.val[2], v203, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v203.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v196, v195));
    v203.f32[2] = (float)v194;
    v204 = vmulq_n_f32(vaddq_f32(v203, v202), *(float *)&v201);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v198 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v204.f32[0]), v585.val[1], *(float32x2_t *)v204.f32, 1), v585.val[2], v204, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v205 = v6[121];
  if (v205 != v8 && (v205 & 0x40000000) != 0)
  {
    v206 = a2[1].i32[0] + 1;
    v207 = *(_QWORD **)a1[4];
    v208 = *v207;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v209 = *(_DWORD *)(*v207 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v209);
    v210 = (const float *)(*v207 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v209);
    v211 = *(_QWORD *)(v207[1] + 144);
    v586 = vld3_f32(v210);
    a3.f32[2] = (float)(v206 / v209);
    v212.i64[0] = 0x3F0000003F000000;
    v212.i64[1] = 0x3F0000003F000000;
    v213 = vaddq_f32(a3, v212);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v213.f32[0]), v586.val[1], *(float32x2_t *)v213.f32, 1), v586.val[2], v213, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v206;
    v214 = vmulq_n_f32(vaddq_f32(a4, v212), *(float *)&v211);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v208 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v214.f32[0]), v586.val[1], *(float32x2_t *)v214.f32, 1), v586.val[2], v214, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v215 = v6[122];
  if (v215 != v8 && (v215 & 0x40000000) != 0)
  {
    v216 = a2[1].i32[0] + 1;
    v217 = *(_QWORD **)a1[4];
    v218 = *v217;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v219 = *(_DWORD *)(*v217 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v219);
    v220 = (const float *)(*v217 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v219);
    v221 = *(_QWORD *)(v217[1] + 144);
    v587 = vld3_f32(v220);
    a3.f32[2] = (float)(v216 / v219);
    v222.i64[0] = 0x3F0000003F000000;
    v222.i64[1] = 0x3F0000003F000000;
    v223 = vaddq_f32(a3, v222);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v223.f32[0]), v587.val[1], *(float32x2_t *)v223.f32, 1), v587.val[2], v223, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v216;
    v224 = vmulq_n_f32(vaddq_f32(a4, v222), *(float *)&v221);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v218 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v224.f32[0]), v587.val[1], *(float32x2_t *)v224.f32, 1), v587.val[2], v224, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v225 = v6[123];
  if (v225 != v8 && (v225 & 0x40000000) != 0)
  {
    v226 = a2[1].i32[0] + 1;
    v227 = *(_QWORD **)a1[4];
    v228 = *v227;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v229 = *(_DWORD *)(*v227 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v229);
    v230 = (const float *)(*v227 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v229);
    v231 = *(_QWORD *)(v227[1] + 144);
    v588 = vld3_f32(v230);
    a3.f32[2] = (float)(v226 / v229);
    v232.i64[0] = 0x3F0000003F000000;
    v232.i64[1] = 0x3F0000003F000000;
    v233 = vaddq_f32(a3, v232);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v233.f32[0]), v588.val[1], *(float32x2_t *)v233.f32, 1), v588.val[2], v233, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v226;
    v234 = vmulq_n_f32(vaddq_f32(a4, v232), *(float *)&v231);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v228 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v234.f32[0]), v588.val[1], *(float32x2_t *)v234.f32, 1), v588.val[2], v234, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v235 = v6[124];
  if (v235 != v8 && (v235 & 0x40000000) != 0)
  {
    v236 = a2[1].i32[0] + 1;
    v237 = *(_QWORD **)a1[4];
    v238 = *v237;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v239 = *(_DWORD *)(*v237 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v239);
    v240 = (const float *)(*v237 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v239);
    v241 = *(_QWORD *)(v237[1] + 144);
    v589 = vld3_f32(v240);
    a3.f32[2] = (float)(v236 / v239);
    v242.i64[0] = 0x3F0000003F000000;
    v242.i64[1] = 0x3F0000003F000000;
    v243 = vaddq_f32(a3, v242);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v243.f32[0]), v589.val[1], *(float32x2_t *)v243.f32, 1), v589.val[2], v243, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v236;
    v244 = vmulq_n_f32(vaddq_f32(a4, v242), *(float *)&v241);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v238 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v244.f32[0]), v589.val[1], *(float32x2_t *)v244.f32, 1), v589.val[2], v244, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v245 = v6[125];
  if (v245 != v8 && (v245 & 0x40000000) != 0)
  {
    v246 = a2[1].i32[0] + 1;
    v247 = *(_QWORD **)a1[4];
    v248 = *v247;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v249 = *(_DWORD *)(*v247 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v249);
    v250 = (const float *)(*v247 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v249);
    v251 = *(_QWORD *)(v247[1] + 144);
    v590 = vld3_f32(v250);
    a3.f32[2] = (float)(v246 / v249);
    v252.i64[0] = 0x3F0000003F000000;
    v252.i64[1] = 0x3F0000003F000000;
    v253 = vaddq_f32(a3, v252);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v253.f32[0]), v590.val[1], *(float32x2_t *)v253.f32, 1), v590.val[2], v253, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v246;
    v254 = vmulq_n_f32(vaddq_f32(a4, v252), *(float *)&v251);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v248 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v254.f32[0]), v590.val[1], *(float32x2_t *)v254.f32, 1), v590.val[2], v254, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v255 = v6[126];
  if (v255 != v8 && (v255 & 0x40000000) != 0)
  {
    v256 = a2[1].i32[0] + 1;
    v257 = *(_QWORD **)a1[4];
    v258 = *v257;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v259 = *(_DWORD *)(*v257 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v259);
    v260 = (const float *)(*v257 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v259);
    v261 = *(_QWORD *)(v257[1] + 144);
    v591 = vld3_f32(v260);
    a3.f32[2] = (float)(v256 / v259);
    v262.i64[0] = 0x3F0000003F000000;
    v262.i64[1] = 0x3F0000003F000000;
    v263 = vaddq_f32(a3, v262);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v263.f32[0]), v591.val[1], *(float32x2_t *)v263.f32, 1), v591.val[2], v263, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v256;
    v264 = vmulq_n_f32(vaddq_f32(a4, v262), *(float *)&v261);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v258 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v264.f32[0]), v591.val[1], *(float32x2_t *)v264.f32, 1), v591.val[2], v264, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v265 = v6[127];
  if (v265 != v8 && (v265 & 0x40000000) != 0)
  {
    v266 = a2[1].i32[0] + 1;
    v267 = *(_QWORD **)a1[4];
    v268 = *v267;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v269 = *(_DWORD *)(*v267 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v269);
    v270 = (const float *)(*v267 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v269);
    v271 = *(_QWORD *)(v267[1] + 144);
    v592 = vld3_f32(v270);
    a3.f32[2] = (float)(v266 / v269);
    v272.i64[0] = 0x3F0000003F000000;
    v272.i64[1] = 0x3F0000003F000000;
    v273 = vaddq_f32(a3, v272);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v273.f32[0]), v592.val[1], *(float32x2_t *)v273.f32, 1), v592.val[2], v273, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v266;
    v274 = vmulq_n_f32(vaddq_f32(a4, v272), *(float *)&v271);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v268 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v274.f32[0]), v592.val[1], *(float32x2_t *)v274.f32, 1), v592.val[2], v274, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v275 = v6[128];
  if (v275 != v8 && (v275 & 0x40000000) != 0)
  {
    v276 = a2[1].i32[0] + 2;
    v277 = *(_QWORD **)a1[4];
    v278 = *v277;
    v279 = *(_DWORD *)(*v277 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v279);
    v280 = (const float *)(*v277 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v279);
    v281 = *(_QWORD *)(v277[1] + 144);
    v593 = vld3_f32(v280);
    a3.f32[2] = (float)(v276 / v279);
    v282.i64[0] = 0x3F0000003F000000;
    v282.i64[1] = 0x3F0000003F000000;
    v283 = vaddq_f32(a3, v282);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v283.f32[0]), v593.val[1], *(float32x2_t *)v283.f32, 1), v593.val[2], v283, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v276;
    v284 = vmulq_n_f32(vaddq_f32(a4, v282), *(float *)&v281);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v278 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v284.f32[0]), v593.val[1], *(float32x2_t *)v284.f32, 1), v593.val[2], v284, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v285 = v6[129];
  if (v285 != v8 && (v285 & 0x40000000) != 0)
  {
    v286 = a2->i32[1];
    v287 = a2[1].i32[0] + 2;
    v288 = a2->i32[0] + 1;
    v289 = *(_QWORD **)a1[4];
    v290 = *v289;
    v291 = (const float *)(*v289 + 1656);
    v292 = *(_DWORD *)(*v289 + 8);
    a3.f32[0] = (float)(v288 / v292);
    v293 = *(_QWORD *)(v289[1] + 144);
    a3.f32[1] = (float)(v286 / v292);
    a3.f32[2] = (float)(v287 / v292);
    v294.i64[0] = 0x3F0000003F000000;
    v294.i64[1] = 0x3F0000003F000000;
    v295 = vaddq_f32(a3, v294);
    v594 = vld3_f32(v291);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v295.f32[0]), v594.val[1], *(float32x2_t *)v295.f32, 1), v594.val[2], v295, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v295.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v286, v288));
    v295.f32[2] = (float)v287;
    v296 = vmulq_n_f32(vaddq_f32(v295, v294), *(float *)&v293);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v290 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v296.f32[0]), v594.val[1], *(float32x2_t *)v296.f32, 1), v594.val[2], v296, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v297 = v6[130];
  if (v297 != v8 && (v297 & 0x40000000) != 0)
  {
    v298 = a2->i32[1];
    v299 = a2[1].i32[0] + 2;
    v300 = a2->i32[0] + 2;
    v301 = *(_QWORD **)a1[4];
    v302 = *v301;
    v303 = (const float *)(*v301 + 1656);
    v304 = *(_DWORD *)(*v301 + 8);
    a3.f32[0] = (float)(v300 / v304);
    v305 = *(_QWORD *)(v301[1] + 144);
    a3.f32[1] = (float)(v298 / v304);
    a3.f32[2] = (float)(v299 / v304);
    v306.i64[0] = 0x3F0000003F000000;
    v306.i64[1] = 0x3F0000003F000000;
    v307 = vaddq_f32(a3, v306);
    v595 = vld3_f32(v303);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v307.f32[0]), v595.val[1], *(float32x2_t *)v307.f32, 1), v595.val[2], v307, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v307.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v298, v300));
    v307.f32[2] = (float)v299;
    v308 = vmulq_n_f32(vaddq_f32(v307, v306), *(float *)&v305);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v302 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v308.f32[0]), v595.val[1], *(float32x2_t *)v308.f32, 1), v595.val[2], v308, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v309 = v6[131];
  if (v309 != v8 && (v309 & 0x40000000) != 0)
  {
    v310 = a2->i32[1];
    v311 = a2[1].i32[0] + 2;
    v312 = a2->i32[0] + 3;
    v313 = *(_QWORD **)a1[4];
    v314 = *v313;
    v315 = (const float *)(*v313 + 1656);
    v316 = *(_DWORD *)(*v313 + 8);
    a3.f32[0] = (float)(v312 / v316);
    v317 = *(_QWORD *)(v313[1] + 144);
    a3.f32[1] = (float)(v310 / v316);
    a3.f32[2] = (float)(v311 / v316);
    v318.i64[0] = 0x3F0000003F000000;
    v318.i64[1] = 0x3F0000003F000000;
    v319 = vaddq_f32(a3, v318);
    v596 = vld3_f32(v315);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v319.f32[0]), v596.val[1], *(float32x2_t *)v319.f32, 1), v596.val[2], v319, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v319.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v310, v312));
    v319.f32[2] = (float)v311;
    v320 = vmulq_n_f32(vaddq_f32(v319, v318), *(float *)&v317);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v314 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v320.f32[0]), v596.val[1], *(float32x2_t *)v320.f32, 1), v596.val[2], v320, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v321 = v6[132];
  if (v321 != v8 && (v321 & 0x40000000) != 0)
  {
    v322 = a2->i32[1];
    v323 = a2[1].i32[0] + 2;
    v324 = a2->i32[0] + 4;
    v325 = *(_QWORD **)a1[4];
    v326 = *v325;
    v327 = (const float *)(*v325 + 1656);
    v328 = *(_DWORD *)(*v325 + 8);
    a3.f32[0] = (float)(v324 / v328);
    v329 = *(_QWORD *)(v325[1] + 144);
    a3.f32[1] = (float)(v322 / v328);
    a3.f32[2] = (float)(v323 / v328);
    v330.i64[0] = 0x3F0000003F000000;
    v330.i64[1] = 0x3F0000003F000000;
    v331 = vaddq_f32(a3, v330);
    v597 = vld3_f32(v327);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v331.f32[0]), v597.val[1], *(float32x2_t *)v331.f32, 1), v597.val[2], v331, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v331.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v322, v324));
    v331.f32[2] = (float)v323;
    v332 = vmulq_n_f32(vaddq_f32(v331, v330), *(float *)&v329);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v326 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v332.f32[0]), v597.val[1], *(float32x2_t *)v332.f32, 1), v597.val[2], v332, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v333 = v6[133];
  if (v333 != v8 && (v333 & 0x40000000) != 0)
  {
    v334 = a2->i32[1];
    v335 = a2[1].i32[0] + 2;
    v336 = a2->i32[0] + 5;
    v337 = *(_QWORD **)a1[4];
    v338 = *v337;
    v339 = (const float *)(*v337 + 1656);
    v340 = *(_DWORD *)(*v337 + 8);
    a3.f32[0] = (float)(v336 / v340);
    v341 = *(_QWORD *)(v337[1] + 144);
    a3.f32[1] = (float)(v334 / v340);
    a3.f32[2] = (float)(v335 / v340);
    v342.i64[0] = 0x3F0000003F000000;
    v342.i64[1] = 0x3F0000003F000000;
    v343 = vaddq_f32(a3, v342);
    v598 = vld3_f32(v339);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v343.f32[0]), v598.val[1], *(float32x2_t *)v343.f32, 1), v598.val[2], v343, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v343.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v334, v336));
    v343.f32[2] = (float)v335;
    v344 = vmulq_n_f32(vaddq_f32(v343, v342), *(float *)&v341);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v338 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v344.f32[0]), v598.val[1], *(float32x2_t *)v344.f32, 1), v598.val[2], v344, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v345 = v6[134];
  if (v345 != v8 && (v345 & 0x40000000) != 0)
  {
    v346 = a2->i32[1];
    v347 = a2[1].i32[0] + 2;
    v348 = a2->i32[0] + 6;
    v349 = *(_QWORD **)a1[4];
    v350 = *v349;
    v351 = (const float *)(*v349 + 1656);
    v352 = *(_DWORD *)(*v349 + 8);
    a3.f32[0] = (float)(v348 / v352);
    v353 = *(_QWORD *)(v349[1] + 144);
    a3.f32[1] = (float)(v346 / v352);
    a3.f32[2] = (float)(v347 / v352);
    v354.i64[0] = 0x3F0000003F000000;
    v354.i64[1] = 0x3F0000003F000000;
    v355 = vaddq_f32(a3, v354);
    v599 = vld3_f32(v351);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v355.f32[0]), v599.val[1], *(float32x2_t *)v355.f32, 1), v599.val[2], v355, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v355.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v346, v348));
    v355.f32[2] = (float)v347;
    v356 = vmulq_n_f32(vaddq_f32(v355, v354), *(float *)&v353);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v350 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v356.f32[0]), v599.val[1], *(float32x2_t *)v356.f32, 1), v599.val[2], v356, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v357 = v6[135];
  if (v357 != v8 && (v357 & 0x40000000) != 0)
  {
    v358 = a2->i32[1];
    v359 = a2[1].i32[0] + 2;
    v360 = a2->i32[0] + 7;
    v361 = *(_QWORD **)a1[4];
    v362 = *v361;
    v363 = (const float *)(*v361 + 1656);
    v364 = *(_DWORD *)(*v361 + 8);
    a3.f32[0] = (float)(v360 / v364);
    v365 = *(_QWORD *)(v361[1] + 144);
    a3.f32[1] = (float)(v358 / v364);
    a3.f32[2] = (float)(v359 / v364);
    v366.i64[0] = 0x3F0000003F000000;
    v366.i64[1] = 0x3F0000003F000000;
    v367 = vaddq_f32(a3, v366);
    v600 = vld3_f32(v363);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v367.f32[0]), v600.val[1], *(float32x2_t *)v367.f32, 1), v600.val[2], v367, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v367.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v358, v360));
    v367.f32[2] = (float)v359;
    v368 = vmulq_n_f32(vaddq_f32(v367, v366), *(float *)&v365);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v362 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v368.f32[0]), v600.val[1], *(float32x2_t *)v368.f32, 1), v600.val[2], v368, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v369 = v6[136];
  if (v369 != v8 && (v369 & 0x40000000) != 0)
  {
    v370 = a2[1].i32[0] + 2;
    v371 = a2->i32[0];
    v372 = a2->i32[1] + 1;
    v373 = *(_QWORD **)a1[4];
    v374 = *v373;
    v375 = (const float *)(*v373 + 1656);
    v376 = *(_DWORD *)(*v373 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v376);
    v377 = *(_QWORD *)(v373[1] + 144);
    a3.f32[1] = (float)(v372 / v376);
    a3.f32[2] = (float)(v370 / v376);
    v378.i64[0] = 0x3F0000003F000000;
    v378.i64[1] = 0x3F0000003F000000;
    v379 = vaddq_f32(a3, v378);
    v601 = vld3_f32(v375);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v379.f32[0]), v601.val[1], *(float32x2_t *)v379.f32, 1), v601.val[2], v379, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v379.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v372, v371));
    v379.f32[2] = (float)v370;
    v380 = vmulq_n_f32(vaddq_f32(v379, v378), *(float *)&v377);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v374 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v380.f32[0]), v601.val[1], *(float32x2_t *)v380.f32, 1), v601.val[2], v380, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v381 = v6[137];
  if (v381 != v8 && (v381 & 0x40000000) != 0)
  {
    v382 = a2[1].i32[0] + 2;
    v383 = *(_QWORD **)a1[4];
    v384 = *v383;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v385 = *(_DWORD *)(*v383 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v385);
    v386 = (const float *)(*v383 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v385);
    v387 = *(_QWORD *)(v383[1] + 144);
    v602 = vld3_f32(v386);
    a3.f32[2] = (float)(v382 / v385);
    v388.i64[0] = 0x3F0000003F000000;
    v388.i64[1] = 0x3F0000003F000000;
    v389 = vaddq_f32(a3, v388);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v389.f32[0]), v602.val[1], *(float32x2_t *)v389.f32, 1), v602.val[2], v389, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v382;
    v390 = vmulq_n_f32(vaddq_f32(a4, v388), *(float *)&v387);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v384 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v390.f32[0]), v602.val[1], *(float32x2_t *)v390.f32, 1), v602.val[2], v390, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v391 = v6[138];
  if (v391 != v8 && (v391 & 0x40000000) != 0)
  {
    v392 = a2[1].i32[0] + 2;
    v393 = *(_QWORD **)a1[4];
    v394 = *v393;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v395 = *(_DWORD *)(*v393 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v395);
    v396 = (const float *)(*v393 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v395);
    v397 = *(_QWORD *)(v393[1] + 144);
    v603 = vld3_f32(v396);
    a3.f32[2] = (float)(v392 / v395);
    v398.i64[0] = 0x3F0000003F000000;
    v398.i64[1] = 0x3F0000003F000000;
    v399 = vaddq_f32(a3, v398);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v399.f32[0]), v603.val[1], *(float32x2_t *)v399.f32, 1), v603.val[2], v399, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v392;
    v400 = vmulq_n_f32(vaddq_f32(a4, v398), *(float *)&v397);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v394 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v400.f32[0]), v603.val[1], *(float32x2_t *)v400.f32, 1), v603.val[2], v400, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v401 = v6[139];
  if (v401 != v8 && (v401 & 0x40000000) != 0)
  {
    v402 = a2[1].i32[0] + 2;
    v403 = *(_QWORD **)a1[4];
    v404 = *v403;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v405 = *(_DWORD *)(*v403 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v405);
    v406 = (const float *)(*v403 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v405);
    v407 = *(_QWORD *)(v403[1] + 144);
    v604 = vld3_f32(v406);
    a3.f32[2] = (float)(v402 / v405);
    v408.i64[0] = 0x3F0000003F000000;
    v408.i64[1] = 0x3F0000003F000000;
    v409 = vaddq_f32(a3, v408);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v409.f32[0]), v604.val[1], *(float32x2_t *)v409.f32, 1), v604.val[2], v409, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v402;
    v410 = vmulq_n_f32(vaddq_f32(a4, v408), *(float *)&v407);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v404 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v410.f32[0]), v604.val[1], *(float32x2_t *)v410.f32, 1), v604.val[2], v410, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v411 = v6[140];
  if (v411 != v8 && (v411 & 0x40000000) != 0)
  {
    v412 = a2[1].i32[0] + 2;
    v413 = *(_QWORD **)a1[4];
    v414 = *v413;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v415 = *(_DWORD *)(*v413 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v415);
    v416 = (const float *)(*v413 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v415);
    v417 = *(_QWORD *)(v413[1] + 144);
    v605 = vld3_f32(v416);
    a3.f32[2] = (float)(v412 / v415);
    v418.i64[0] = 0x3F0000003F000000;
    v418.i64[1] = 0x3F0000003F000000;
    v419 = vaddq_f32(a3, v418);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v419.f32[0]), v605.val[1], *(float32x2_t *)v419.f32, 1), v605.val[2], v419, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v412;
    v420 = vmulq_n_f32(vaddq_f32(a4, v418), *(float *)&v417);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v414 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v420.f32[0]), v605.val[1], *(float32x2_t *)v420.f32, 1), v605.val[2], v420, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v421 = v6[141];
  if (v421 != v8 && (v421 & 0x40000000) != 0)
  {
    v422 = a2[1].i32[0] + 2;
    v423 = *(_QWORD **)a1[4];
    v424 = *v423;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v425 = *(_DWORD *)(*v423 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v425);
    v426 = (const float *)(*v423 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v425);
    v427 = *(_QWORD *)(v423[1] + 144);
    v606 = vld3_f32(v426);
    a3.f32[2] = (float)(v422 / v425);
    v428.i64[0] = 0x3F0000003F000000;
    v428.i64[1] = 0x3F0000003F000000;
    v429 = vaddq_f32(a3, v428);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v429.f32[0]), v606.val[1], *(float32x2_t *)v429.f32, 1), v606.val[2], v429, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v422;
    v430 = vmulq_n_f32(vaddq_f32(a4, v428), *(float *)&v427);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v424 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v430.f32[0]), v606.val[1], *(float32x2_t *)v430.f32, 1), v606.val[2], v430, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v431 = v6[142];
  if (v431 != v8 && (v431 & 0x40000000) != 0)
  {
    v432 = a2[1].i32[0] + 2;
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v435 = *(_DWORD *)(*v433 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v435);
    v436 = (const float *)(*v433 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v435);
    v437 = *(_QWORD *)(v433[1] + 144);
    v607 = vld3_f32(v436);
    a3.f32[2] = (float)(v432 / v435);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v439.f32[0]), v607.val[1], *(float32x2_t *)v439.f32, 1), v607.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v432;
    v440 = vmulq_n_f32(vaddq_f32(a4, v438), *(float *)&v437);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v440.f32[0]), v607.val[1], *(float32x2_t *)v440.f32, 1), v607.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[143];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2[1].i32[0] + 2;
    v443 = *(_QWORD **)a1[4];
    v444 = *v443;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v445 = *(_DWORD *)(*v443 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v445);
    v446 = (const float *)(*v443 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v445);
    v447 = *(_QWORD *)(v443[1] + 144);
    v608 = vld3_f32(v446);
    a3.f32[2] = (float)(v442 / v445);
    v448.i64[0] = 0x3F0000003F000000;
    v448.i64[1] = 0x3F0000003F000000;
    v449 = vaddq_f32(a3, v448);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v449.f32[0]), v608.val[1], *(float32x2_t *)v449.f32, 1), v608.val[2], v449, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v442;
    v450 = vmulq_n_f32(vaddq_f32(a4, v448), *(float *)&v447);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v444 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v450.f32[0]), v608.val[1], *(float32x2_t *)v450.f32, 1), v608.val[2], v450, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v451 = v6[144];
  if (v451 != v8 && (v451 & 0x40000000) != 0)
  {
    v452 = a2[1].i32[0] + 2;
    v453 = a2->i32[0];
    v454 = a2->i32[1] + 2;
    v455 = *(_QWORD **)a1[4];
    v456 = *v455;
    v457 = (const float *)(*v455 + 1656);
    v458 = *(_DWORD *)(*v455 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v458);
    v459 = *(_QWORD *)(v455[1] + 144);
    a3.f32[1] = (float)(v454 / v458);
    a3.f32[2] = (float)(v452 / v458);
    v460.i64[0] = 0x3F0000003F000000;
    v460.i64[1] = 0x3F0000003F000000;
    v461 = vaddq_f32(a3, v460);
    v609 = vld3_f32(v457);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v461.f32[0]), v609.val[1], *(float32x2_t *)v461.f32, 1), v609.val[2], v461, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v461.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v454, v453));
    v461.f32[2] = (float)v452;
    v462 = vmulq_n_f32(vaddq_f32(v461, v460), *(float *)&v459);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v456 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v462.f32[0]), v609.val[1], *(float32x2_t *)v462.f32, 1), v609.val[2], v462, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v463 = v6[145];
  if (v463 != v8 && (v463 & 0x40000000) != 0)
  {
    v464 = a2[1].i32[0] + 2;
    v465 = *(_QWORD **)a1[4];
    v466 = *v465;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v467 = *(_DWORD *)(*v465 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v467);
    v468 = (const float *)(*v465 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v467);
    v469 = *(_QWORD *)(v465[1] + 144);
    v610 = vld3_f32(v468);
    a3.f32[2] = (float)(v464 / v467);
    v470.i64[0] = 0x3F0000003F000000;
    v470.i64[1] = 0x3F0000003F000000;
    v471 = vaddq_f32(a3, v470);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v471.f32[0]), v610.val[1], *(float32x2_t *)v471.f32, 1), v610.val[2], v471, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v464;
    v472 = vmulq_n_f32(vaddq_f32(a4, v470), *(float *)&v469);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v466 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v472.f32[0]), v610.val[1], *(float32x2_t *)v472.f32, 1), v610.val[2], v472, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v473 = v6[146];
  if (v473 != v8 && (v473 & 0x40000000) != 0)
  {
    v474 = a2[1].i32[0] + 2;
    v475 = *(_QWORD **)a1[4];
    v476 = *v475;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v477 = *(_DWORD *)(*v475 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v477);
    v478 = (const float *)(*v475 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v477);
    v479 = *(_QWORD *)(v475[1] + 144);
    v611 = vld3_f32(v478);
    a3.f32[2] = (float)(v474 / v477);
    v480.i64[0] = 0x3F0000003F000000;
    v480.i64[1] = 0x3F0000003F000000;
    v481 = vaddq_f32(a3, v480);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v481.f32[0]), v611.val[1], *(float32x2_t *)v481.f32, 1), v611.val[2], v481, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v474;
    v482 = vmulq_n_f32(vaddq_f32(a4, v480), *(float *)&v479);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v476 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v482.f32[0]), v611.val[1], *(float32x2_t *)v482.f32, 1), v611.val[2], v482, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v483 = v6[147];
  if (v483 != v8 && (v483 & 0x40000000) != 0)
  {
    v484 = a2[1].i32[0] + 2;
    v485 = *(_QWORD **)a1[4];
    v486 = *v485;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v487 = *(_DWORD *)(*v485 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v487);
    v488 = (const float *)(*v485 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v487);
    v489 = *(_QWORD *)(v485[1] + 144);
    v612 = vld3_f32(v488);
    a3.f32[2] = (float)(v484 / v487);
    v490.i64[0] = 0x3F0000003F000000;
    v490.i64[1] = 0x3F0000003F000000;
    v491 = vaddq_f32(a3, v490);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v491.f32[0]), v612.val[1], *(float32x2_t *)v491.f32, 1), v612.val[2], v491, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v484;
    v492 = vmulq_n_f32(vaddq_f32(a4, v490), *(float *)&v489);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v486 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v492.f32[0]), v612.val[1], *(float32x2_t *)v492.f32, 1), v612.val[2], v492, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v493 = v6[148];
  if (v493 != v8 && (v493 & 0x40000000) != 0)
  {
    v494 = a2[1].i32[0] + 2;
    v495 = *(_QWORD **)a1[4];
    v496 = *v495;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v497 = *(_DWORD *)(*v495 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v497);
    v498 = (const float *)(*v495 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v497);
    v499 = *(_QWORD *)(v495[1] + 144);
    v613 = vld3_f32(v498);
    a3.f32[2] = (float)(v494 / v497);
    v500.i64[0] = 0x3F0000003F000000;
    v500.i64[1] = 0x3F0000003F000000;
    v501 = vaddq_f32(a3, v500);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v501.f32[0]), v613.val[1], *(float32x2_t *)v501.f32, 1), v613.val[2], v501, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v494;
    v502 = vmulq_n_f32(vaddq_f32(a4, v500), *(float *)&v499);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v496 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v502.f32[0]), v613.val[1], *(float32x2_t *)v502.f32, 1), v613.val[2], v502, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v503 = v6[149];
  if (v503 != v8 && (v503 & 0x40000000) != 0)
  {
    v504 = a2[1].i32[0] + 2;
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v507 = *(_DWORD *)(*v505 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v507);
    v508 = (const float *)(*v505 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v507);
    v509 = *(_QWORD *)(v505[1] + 144);
    v614 = vld3_f32(v508);
    a3.f32[2] = (float)(v504 / v507);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v511.f32[0]), v614.val[1], *(float32x2_t *)v511.f32, 1), v614.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v504;
    v512 = vmulq_n_f32(vaddq_f32(a4, v510), *(float *)&v509);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v512.f32[0]), v614.val[1], *(float32x2_t *)v512.f32, 1), v614.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[150];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0] + 2;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v615 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v521.f32[0]), v615.val[1], *(float32x2_t *)v521.f32, 1), v615.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v522.f32[0]), v615.val[1], *(float32x2_t *)v522.f32, 1), v615.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[151];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 2;
    v525 = *(_QWORD **)a1[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v616 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v531.f32[0]), v616.val[1], *(float32x2_t *)v531.f32, 1), v616.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v526 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v532.f32[0]), v616.val[1], *(float32x2_t *)v532.f32, 1), v616.val[2], v532, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v533 = v6[152];
  if (v533 != v8 && (v533 & 0x40000000) != 0)
  {
    v534 = a2[1].i32[0] + 2;
    v535 = a2->i32[0];
    v536 = a2->i32[1] + 3;
    v537 = *(_QWORD **)a1[4];
    v538 = *v537;
    v539 = (const float *)(*v537 + 1656);
    v540 = *(_DWORD *)(*v537 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v540);
    v541 = *(_QWORD *)(v537[1] + 144);
    a3.f32[1] = (float)(v536 / v540);
    a3.f32[2] = (float)(v534 / v540);
    v542.i64[0] = 0x3F0000003F000000;
    v542.i64[1] = 0x3F0000003F000000;
    v543 = vaddq_f32(a3, v542);
    v617 = vld3_f32(v539);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v543.f32[0]), v617.val[1], *(float32x2_t *)v543.f32, 1), v617.val[2], v543, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v543.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v536, v535));
    v543.f32[2] = (float)v534;
    v544 = vmulq_n_f32(vaddq_f32(v543, v542), *(float *)&v541);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v538 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v544.f32[0]), v617.val[1], *(float32x2_t *)v544.f32, 1), v617.val[2], v544, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v545 = v6[153];
  if (v545 != v8 && (v545 & 0x40000000) != 0)
  {
    v546 = a2[1].i32[0] + 2;
    v547 = *(_QWORD **)a1[4];
    v548 = *v547;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v549 = *(_DWORD *)(*v547 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v549);
    v550 = (const float *)(*v547 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v549);
    v551 = *(_QWORD *)(v547[1] + 144);
    v618 = vld3_f32(v550);
    a3.f32[2] = (float)(v546 / v549);
    v552.i64[0] = 0x3F0000003F000000;
    v552.i64[1] = 0x3F0000003F000000;
    v553 = vaddq_f32(a3, v552);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v553.f32[0]), v618.val[1], *(float32x2_t *)v553.f32, 1), v618.val[2], v553, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v546;
    v554 = vmulq_n_f32(vaddq_f32(a4, v552), *(float *)&v551);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v548 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v554.f32[0]), v618.val[1], *(float32x2_t *)v554.f32, 1), v618.val[2], v554, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v555 = v6[154];
  if (v555 != v8 && (v555 & 0x40000000) != 0)
  {
    v556 = a2[1].i32[0] + 2;
    v557 = *(_QWORD **)a1[4];
    v558 = *v557;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v559 = *(_DWORD *)(*v557 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v559);
    v560 = (const float *)(*v557 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v559);
    v561 = *(_QWORD *)(v557[1] + 144);
    v619 = vld3_f32(v560);
    a3.f32[2] = (float)(v556 / v559);
    v562.i64[0] = 0x3F0000003F000000;
    v562.i64[1] = 0x3F0000003F000000;
    v563 = vaddq_f32(a3, v562);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v563.f32[0]), v619.val[1], *(float32x2_t *)v563.f32, 1), v619.val[2], v563, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v556;
    v564 = vmulq_n_f32(vaddq_f32(a4, v562), *(float *)&v561);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v558 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v564.f32[0]), v619.val[1], *(float32x2_t *)v564.f32, 1), v619.val[2], v564, 2);
  }
  return sub_2239F671C(a1, a2, a3, a4);
}

uint64_t *sub_2239F671C(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  uint64_t *v33;
  int v34;
  int v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  const float *v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  int v45;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  const float *v51;
  uint64_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  int v56;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  const float *v62;
  uint64_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  int v67;
  int v69;
  _QWORD *v70;
  uint64_t v71;
  int v72;
  const float *v73;
  uint64_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  int v78;
  int v80;
  __int32 v81;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  const float *v85;
  int v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  const float *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  const float *v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int v121;
  int v122;
  _QWORD *v123;
  uint64_t v124;
  int v125;
  const float *v126;
  uint64_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  int v131;
  int v132;
  _QWORD *v133;
  uint64_t v134;
  int v135;
  const float *v136;
  uint64_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  int v141;
  int v142;
  _QWORD *v143;
  uint64_t v144;
  int v145;
  const float *v146;
  uint64_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  int v151;
  int v152;
  _QWORD *v153;
  uint64_t v154;
  int v155;
  const float *v156;
  uint64_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float32x4_t v160;
  int v161;
  int v162;
  __int32 v163;
  int v164;
  _QWORD *v165;
  uint64_t v166;
  const float *v167;
  int v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  int v173;
  int v174;
  _QWORD *v175;
  uint64_t v176;
  int v177;
  const float *v178;
  uint64_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  int v183;
  int v184;
  _QWORD *v185;
  uint64_t v186;
  int v187;
  const float *v188;
  uint64_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  int v193;
  int v194;
  _QWORD *v195;
  uint64_t v196;
  int v197;
  const float *v198;
  uint64_t v199;
  float32x4_t v200;
  float32x4_t v201;
  float32x4_t v202;
  int v203;
  int v204;
  _QWORD *v205;
  uint64_t v206;
  int v207;
  const float *v208;
  uint64_t v209;
  float32x4_t v210;
  float32x4_t v211;
  float32x4_t v212;
  int v213;
  int v214;
  _QWORD *v215;
  uint64_t v216;
  int v217;
  const float *v218;
  uint64_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float32x4_t v222;
  int v223;
  int v224;
  _QWORD *v225;
  uint64_t v226;
  int v227;
  const float *v228;
  uint64_t v229;
  float32x4_t v230;
  float32x4_t v231;
  float32x4_t v232;
  int v233;
  int v234;
  _QWORD *v235;
  uint64_t v236;
  int v237;
  const float *v238;
  uint64_t v239;
  float32x4_t v240;
  float32x4_t v241;
  float32x4_t v242;
  int v243;
  int v244;
  __int32 v245;
  int v246;
  _QWORD *v247;
  uint64_t v248;
  const float *v249;
  int v250;
  uint64_t v251;
  float32x4_t v252;
  float32x4_t v253;
  float32x4_t v254;
  int v255;
  int v256;
  _QWORD *v257;
  uint64_t v258;
  int v259;
  const float *v260;
  uint64_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float32x4_t v264;
  int v265;
  int v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  const float *v270;
  uint64_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x4_t v274;
  int v275;
  int v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  const float *v280;
  uint64_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  int v285;
  int v286;
  _QWORD *v287;
  uint64_t v288;
  int v289;
  const float *v290;
  uint64_t v291;
  float32x4_t v292;
  float32x4_t v293;
  float32x4_t v294;
  int v295;
  int v296;
  _QWORD *v297;
  uint64_t v298;
  int v299;
  const float *v300;
  uint64_t v301;
  float32x4_t v302;
  float32x4_t v303;
  float32x4_t v304;
  int v305;
  int v306;
  _QWORD *v307;
  uint64_t v308;
  int v309;
  const float *v310;
  uint64_t v311;
  float32x4_t v312;
  float32x4_t v313;
  float32x4_t v314;
  int v315;
  int v316;
  _QWORD *v317;
  uint64_t v318;
  int v319;
  const float *v320;
  uint64_t v321;
  float32x4_t v322;
  float32x4_t v323;
  float32x4_t v324;
  int v325;
  int v326;
  __int32 v327;
  int v328;
  _QWORD *v329;
  uint64_t v330;
  const float *v331;
  int v332;
  uint64_t v333;
  float32x4_t v334;
  float32x4_t v335;
  float32x4_t v336;
  int v337;
  int v338;
  _QWORD *v339;
  uint64_t v340;
  int v341;
  const float *v342;
  uint64_t v343;
  float32x4_t v344;
  float32x4_t v345;
  float32x4_t v346;
  int v347;
  int v348;
  _QWORD *v349;
  uint64_t v350;
  int v351;
  const float *v352;
  uint64_t v353;
  float32x4_t v354;
  float32x4_t v355;
  float32x4_t v356;
  int v357;
  int v358;
  _QWORD *v359;
  uint64_t v360;
  int v361;
  const float *v362;
  uint64_t v363;
  float32x4_t v364;
  float32x4_t v365;
  float32x4_t v366;
  int v367;
  int v368;
  _QWORD *v369;
  uint64_t v370;
  int v371;
  const float *v372;
  uint64_t v373;
  float32x4_t v374;
  float32x4_t v375;
  float32x4_t v376;
  int v377;
  int v378;
  _QWORD *v379;
  uint64_t v380;
  int v381;
  const float *v382;
  uint64_t v383;
  float32x4_t v384;
  float32x4_t v385;
  float32x4_t v386;
  int v387;
  int v388;
  _QWORD *v389;
  uint64_t v390;
  int v391;
  const float *v392;
  uint64_t v393;
  float32x4_t v394;
  float32x4_t v395;
  float32x4_t v396;
  int v397;
  int v398;
  _QWORD *v399;
  uint64_t v400;
  int v401;
  const float *v402;
  uint64_t v403;
  float32x4_t v404;
  float32x4_t v405;
  float32x4_t v406;
  int v407;
  int v408;
  _QWORD *v409;
  uint64_t v410;
  int v411;
  const float *v412;
  uint64_t v413;
  float32x4_t v414;
  float32x4_t v415;
  float32x4_t v416;
  int v417;
  __int32 v418;
  int v419;
  int v420;
  _QWORD *v421;
  uint64_t v422;
  const float *v423;
  int v424;
  uint64_t v425;
  float32x4_t v426;
  float32x4_t v427;
  float32x4_t v428;
  int v429;
  __int32 v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  const float *v435;
  int v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  __int32 v442;
  int v443;
  int v444;
  _QWORD *v445;
  uint64_t v446;
  const float *v447;
  int v448;
  uint64_t v449;
  float32x4_t v450;
  float32x4_t v451;
  float32x4_t v452;
  int v453;
  __int32 v454;
  int v455;
  int v456;
  _QWORD *v457;
  uint64_t v458;
  const float *v459;
  int v460;
  uint64_t v461;
  float32x4_t v462;
  float32x4_t v463;
  float32x4_t v464;
  int v465;
  __int32 v466;
  int v467;
  int v468;
  _QWORD *v469;
  uint64_t v470;
  const float *v471;
  int v472;
  uint64_t v473;
  float32x4_t v474;
  float32x4_t v475;
  float32x4_t v476;
  int v477;
  __int32 v478;
  int v479;
  int v480;
  _QWORD *v481;
  uint64_t v482;
  const float *v483;
  int v484;
  uint64_t v485;
  float32x4_t v486;
  float32x4_t v487;
  float32x4_t v488;
  int v489;
  __int32 v490;
  int v491;
  int v492;
  _QWORD *v493;
  uint64_t v494;
  const float *v495;
  int v496;
  uint64_t v497;
  float32x4_t v498;
  float32x4_t v499;
  float32x4_t v500;
  int v501;
  int v502;
  __int32 v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  const float *v507;
  int v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  int v533;
  int v534;
  _QWORD *v535;
  uint64_t v536;
  int v537;
  const float *v538;
  uint64_t v539;
  float32x4_t v540;
  float32x4_t v541;
  float32x4_t v542;
  int v543;
  int v544;
  _QWORD *v545;
  uint64_t v546;
  int v547;
  const float *v548;
  uint64_t v549;
  float32x4_t v550;
  float32x4_t v551;
  float32x4_t v552;
  int v553;
  int v554;
  _QWORD *v555;
  uint64_t v556;
  int v557;
  const float *v558;
  uint64_t v559;
  float32x4_t v560;
  float32x4_t v561;
  float32x4_t v562;
  int32x2_t v564;
  int v565;
  int32x2_t *v566;
  float32x2x3_t v567;
  float32x2x3_t v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;

  v6 = (_DWORD *)a1[1];
  v7 = v6[155];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[156];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v36 = a2[1].i32[0] + 2;
      v37 = *(_QWORD **)a1[4];
      v38 = *v37;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
      v39 = *(_DWORD *)(*v37 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v39);
      v40 = (const float *)(*v37 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v39);
      v41 = *(_QWORD *)(v37[1] + 144);
      v568 = vld3_f32(v40);
      a3.f32[2] = (float)(v36 / v39);
      v42.i64[0] = 0x3F0000003F000000;
      v42.i64[1] = 0x3F0000003F000000;
      v43 = vaddq_f32(a3, v42);
      v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v43.f32[0]), v568.val[1], *(float32x2_t *)v43.f32, 1), v568.val[2], v43, 2), (float32x2_t)0xBF000000BF000000));
      v565 = 0;
      a4.f32[2] = (float)v36;
      v44 = vmulq_n_f32(vaddq_f32(a4, v42), *(float *)&v41);
      v566 = &v564;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v38 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v44.f32[0]), v568.val[1], *(float32x2_t *)v44.f32, 1), v568.val[2], v44, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v45 = v6[157];
      if (v45 != v8 && (v45 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 2;
    v24 = *(_QWORD **)a1[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v567 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v30.f32[0]), v567.val[1], *(float32x2_t *)v30.f32, 1), v567.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v31.f32[0]), v567.val[1], *(float32x2_t *)v31.f32, 1), v567.val[2], v31, 2);
    v566 = &v564;
    v33 = sub_223A17B10((float *)(v25 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566);
    *(uint64_t *)((char *)v33 + 28) = (uint64_t)v32;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v34 = v6[156];
    if (v34 != v8 && (v34 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[157];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v47 = a2[1].i32[0] + 2;
    v48 = *(_QWORD **)a1[4];
    v49 = *v48;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v50 = *(_DWORD *)(*v48 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v50);
    v51 = (const float *)(*v48 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v50);
    v52 = *(_QWORD *)(v48[1] + 144);
    v569 = vld3_f32(v51);
    a3.f32[2] = (float)(v47 / v50);
    v53.i64[0] = 0x3F0000003F000000;
    v53.i64[1] = 0x3F0000003F000000;
    v54 = vaddq_f32(a3, v53);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v54.f32[0]), v569.val[1], *(float32x2_t *)v54.f32, 1), v569.val[2], v54, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v47;
    v55 = vmulq_n_f32(vaddq_f32(a4, v53), *(float *)&v52);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v49 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v55.f32[0]), v569.val[1], *(float32x2_t *)v55.f32, 1), v569.val[2], v55, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v56 = v6[158];
    if (v56 != v8 && (v56 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[158];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v58 = a2[1].i32[0] + 2;
    v59 = *(_QWORD **)a1[4];
    v60 = *v59;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v61 = *(_DWORD *)(*v59 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v61);
    v62 = (const float *)(*v59 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v61);
    v63 = *(_QWORD *)(v59[1] + 144);
    v570 = vld3_f32(v62);
    a3.f32[2] = (float)(v58 / v61);
    v64.i64[0] = 0x3F0000003F000000;
    v64.i64[1] = 0x3F0000003F000000;
    v65 = vaddq_f32(a3, v64);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v65.f32[0]), v570.val[1], *(float32x2_t *)v65.f32, 1), v570.val[2], v65, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v58;
    v66 = vmulq_n_f32(vaddq_f32(a4, v64), *(float *)&v63);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v60 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v66.f32[0]), v570.val[1], *(float32x2_t *)v66.f32, 1), v570.val[2], v66, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v67 = v6[159];
    if (v67 != v8 && (v67 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[159];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v69 = a2[1].i32[0] + 2;
    v70 = *(_QWORD **)a1[4];
    v71 = *v70;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v72 = *(_DWORD *)(*v70 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v72);
    v73 = (const float *)(*v70 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v72);
    v74 = *(_QWORD *)(v70[1] + 144);
    v571 = vld3_f32(v73);
    a3.f32[2] = (float)(v69 / v72);
    v75.i64[0] = 0x3F0000003F000000;
    v75.i64[1] = 0x3F0000003F000000;
    v76 = vaddq_f32(a3, v75);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v76.f32[0]), v571.val[1], *(float32x2_t *)v76.f32, 1), v571.val[2], v76, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v69;
    v77 = vmulq_n_f32(vaddq_f32(a4, v75), *(float *)&v74);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v71 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v77.f32[0]), v571.val[1], *(float32x2_t *)v77.f32, 1), v571.val[2], v77, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v78 = v6[160];
    if (v78 != v8 && (v78 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[160];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v80 = a2[1].i32[0] + 2;
    v81 = a2->i32[0];
    v82 = a2->i32[1] + 4;
    v83 = *(_QWORD **)a1[4];
    v84 = *v83;
    v85 = (const float *)(*v83 + 1656);
    v86 = *(_DWORD *)(*v83 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v86);
    v87 = *(_QWORD *)(v83[1] + 144);
    a3.f32[1] = (float)(v82 / v86);
    a3.f32[2] = (float)(v80 / v86);
    v88.i64[0] = 0x3F0000003F000000;
    v88.i64[1] = 0x3F0000003F000000;
    v89 = vaddq_f32(a3, v88);
    v572 = vld3_f32(v85);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v89.f32[0]), v572.val[1], *(float32x2_t *)v89.f32, 1), v572.val[2], v89, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v89.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v82, v81));
    v89.f32[2] = (float)v80;
    v90 = vmulq_n_f32(vaddq_f32(v89, v88), *(float *)&v87);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v84 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v90.f32[0]), v572.val[1], *(float32x2_t *)v90.f32, 1), v572.val[2], v90, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v91 = v6[161];
    if (v91 != v8 && (v91 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[161];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v93 = a2[1].i32[0] + 2;
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v96 = *(_DWORD *)(*v94 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v96);
    v97 = (const float *)(*v94 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v96);
    v98 = *(_QWORD *)(v94[1] + 144);
    v573 = vld3_f32(v97);
    a3.f32[2] = (float)(v93 / v96);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v100.f32[0]), v573.val[1], *(float32x2_t *)v100.f32, 1), v573.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v93;
    v101 = vmulq_n_f32(vaddq_f32(a4, v99), *(float *)&v98);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v101.f32[0]), v573.val[1], *(float32x2_t *)v101.f32, 1), v573.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[162];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[162];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0] + 2;
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v574 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v109.f32[0]), v574.val[1], *(float32x2_t *)v109.f32, 1), v574.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v110.f32[0]), v574.val[1], *(float32x2_t *)v110.f32, 1), v574.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[163];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0] + 2;
    v113 = *(_QWORD **)a1[4];
    v114 = *v113;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v115 = *(_DWORD *)(*v113 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v115);
    v116 = (const float *)(*v113 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v115);
    v117 = *(_QWORD *)(v113[1] + 144);
    v575 = vld3_f32(v116);
    a3.f32[2] = (float)(v112 / v115);
    v118.i64[0] = 0x3F0000003F000000;
    v118.i64[1] = 0x3F0000003F000000;
    v119 = vaddq_f32(a3, v118);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v119.f32[0]), v575.val[1], *(float32x2_t *)v119.f32, 1), v575.val[2], v119, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v112;
    v120 = vmulq_n_f32(vaddq_f32(a4, v118), *(float *)&v117);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v114 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v120.f32[0]), v575.val[1], *(float32x2_t *)v120.f32, 1), v575.val[2], v120, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v121 = v6[164];
  if (v121 != v8 && (v121 & 0x40000000) != 0)
  {
    v122 = a2[1].i32[0] + 2;
    v123 = *(_QWORD **)a1[4];
    v124 = *v123;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v125 = *(_DWORD *)(*v123 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v125);
    v126 = (const float *)(*v123 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v125);
    v127 = *(_QWORD *)(v123[1] + 144);
    v576 = vld3_f32(v126);
    a3.f32[2] = (float)(v122 / v125);
    v128.i64[0] = 0x3F0000003F000000;
    v128.i64[1] = 0x3F0000003F000000;
    v129 = vaddq_f32(a3, v128);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v129.f32[0]), v576.val[1], *(float32x2_t *)v129.f32, 1), v576.val[2], v129, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v122;
    v130 = vmulq_n_f32(vaddq_f32(a4, v128), *(float *)&v127);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v124 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v130.f32[0]), v576.val[1], *(float32x2_t *)v130.f32, 1), v576.val[2], v130, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v131 = v6[165];
  if (v131 != v8 && (v131 & 0x40000000) != 0)
  {
    v132 = a2[1].i32[0] + 2;
    v133 = *(_QWORD **)a1[4];
    v134 = *v133;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v135 = *(_DWORD *)(*v133 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v135);
    v136 = (const float *)(*v133 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v135);
    v137 = *(_QWORD *)(v133[1] + 144);
    v577 = vld3_f32(v136);
    a3.f32[2] = (float)(v132 / v135);
    v138.i64[0] = 0x3F0000003F000000;
    v138.i64[1] = 0x3F0000003F000000;
    v139 = vaddq_f32(a3, v138);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v139.f32[0]), v577.val[1], *(float32x2_t *)v139.f32, 1), v577.val[2], v139, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v132;
    v140 = vmulq_n_f32(vaddq_f32(a4, v138), *(float *)&v137);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v134 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v140.f32[0]), v577.val[1], *(float32x2_t *)v140.f32, 1), v577.val[2], v140, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v141 = v6[166];
  if (v141 != v8 && (v141 & 0x40000000) != 0)
  {
    v142 = a2[1].i32[0] + 2;
    v143 = *(_QWORD **)a1[4];
    v144 = *v143;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v145 = *(_DWORD *)(*v143 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v145);
    v146 = (const float *)(*v143 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v145);
    v147 = *(_QWORD *)(v143[1] + 144);
    v578 = vld3_f32(v146);
    a3.f32[2] = (float)(v142 / v145);
    v148.i64[0] = 0x3F0000003F000000;
    v148.i64[1] = 0x3F0000003F000000;
    v149 = vaddq_f32(a3, v148);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v149.f32[0]), v578.val[1], *(float32x2_t *)v149.f32, 1), v578.val[2], v149, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v142;
    v150 = vmulq_n_f32(vaddq_f32(a4, v148), *(float *)&v147);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v144 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v150.f32[0]), v578.val[1], *(float32x2_t *)v150.f32, 1), v578.val[2], v150, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v151 = v6[167];
  if (v151 != v8 && (v151 & 0x40000000) != 0)
  {
    v152 = a2[1].i32[0] + 2;
    v153 = *(_QWORD **)a1[4];
    v154 = *v153;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v155 = *(_DWORD *)(*v153 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v155);
    v156 = (const float *)(*v153 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v155);
    v157 = *(_QWORD *)(v153[1] + 144);
    v579 = vld3_f32(v156);
    a3.f32[2] = (float)(v152 / v155);
    v158.i64[0] = 0x3F0000003F000000;
    v158.i64[1] = 0x3F0000003F000000;
    v159 = vaddq_f32(a3, v158);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v159.f32[0]), v579.val[1], *(float32x2_t *)v159.f32, 1), v579.val[2], v159, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v152;
    v160 = vmulq_n_f32(vaddq_f32(a4, v158), *(float *)&v157);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v154 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v160.f32[0]), v579.val[1], *(float32x2_t *)v160.f32, 1), v579.val[2], v160, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v161 = v6[168];
  if (v161 != v8 && (v161 & 0x40000000) != 0)
  {
    v162 = a2[1].i32[0] + 2;
    v163 = a2->i32[0];
    v164 = a2->i32[1] + 5;
    v165 = *(_QWORD **)a1[4];
    v166 = *v165;
    v167 = (const float *)(*v165 + 1656);
    v168 = *(_DWORD *)(*v165 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v168);
    v169 = *(_QWORD *)(v165[1] + 144);
    a3.f32[1] = (float)(v164 / v168);
    a3.f32[2] = (float)(v162 / v168);
    v170.i64[0] = 0x3F0000003F000000;
    v170.i64[1] = 0x3F0000003F000000;
    v171 = vaddq_f32(a3, v170);
    v580 = vld3_f32(v167);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v171.f32[0]), v580.val[1], *(float32x2_t *)v171.f32, 1), v580.val[2], v171, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v171.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v164, v163));
    v171.f32[2] = (float)v162;
    v172 = vmulq_n_f32(vaddq_f32(v171, v170), *(float *)&v169);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v166 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v172.f32[0]), v580.val[1], *(float32x2_t *)v172.f32, 1), v580.val[2], v172, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v173 = v6[169];
  if (v173 != v8 && (v173 & 0x40000000) != 0)
  {
    v174 = a2[1].i32[0] + 2;
    v175 = *(_QWORD **)a1[4];
    v176 = *v175;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v177 = *(_DWORD *)(*v175 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v177);
    v178 = (const float *)(*v175 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v177);
    v179 = *(_QWORD *)(v175[1] + 144);
    v581 = vld3_f32(v178);
    a3.f32[2] = (float)(v174 / v177);
    v180.i64[0] = 0x3F0000003F000000;
    v180.i64[1] = 0x3F0000003F000000;
    v181 = vaddq_f32(a3, v180);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v181.f32[0]), v581.val[1], *(float32x2_t *)v181.f32, 1), v581.val[2], v181, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v174;
    v182 = vmulq_n_f32(vaddq_f32(a4, v180), *(float *)&v179);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v176 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v182.f32[0]), v581.val[1], *(float32x2_t *)v182.f32, 1), v581.val[2], v182, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v183 = v6[170];
  if (v183 != v8 && (v183 & 0x40000000) != 0)
  {
    v184 = a2[1].i32[0] + 2;
    v185 = *(_QWORD **)a1[4];
    v186 = *v185;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v187 = *(_DWORD *)(*v185 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v187);
    v188 = (const float *)(*v185 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v187);
    v189 = *(_QWORD *)(v185[1] + 144);
    v582 = vld3_f32(v188);
    a3.f32[2] = (float)(v184 / v187);
    v190.i64[0] = 0x3F0000003F000000;
    v190.i64[1] = 0x3F0000003F000000;
    v191 = vaddq_f32(a3, v190);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v191.f32[0]), v582.val[1], *(float32x2_t *)v191.f32, 1), v582.val[2], v191, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v184;
    v192 = vmulq_n_f32(vaddq_f32(a4, v190), *(float *)&v189);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v186 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v192.f32[0]), v582.val[1], *(float32x2_t *)v192.f32, 1), v582.val[2], v192, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v193 = v6[171];
  if (v193 != v8 && (v193 & 0x40000000) != 0)
  {
    v194 = a2[1].i32[0] + 2;
    v195 = *(_QWORD **)a1[4];
    v196 = *v195;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v197 = *(_DWORD *)(*v195 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v197);
    v198 = (const float *)(*v195 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v197);
    v199 = *(_QWORD *)(v195[1] + 144);
    v583 = vld3_f32(v198);
    a3.f32[2] = (float)(v194 / v197);
    v200.i64[0] = 0x3F0000003F000000;
    v200.i64[1] = 0x3F0000003F000000;
    v201 = vaddq_f32(a3, v200);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v201.f32[0]), v583.val[1], *(float32x2_t *)v201.f32, 1), v583.val[2], v201, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v194;
    v202 = vmulq_n_f32(vaddq_f32(a4, v200), *(float *)&v199);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v196 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v202.f32[0]), v583.val[1], *(float32x2_t *)v202.f32, 1), v583.val[2], v202, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v203 = v6[172];
  if (v203 != v8 && (v203 & 0x40000000) != 0)
  {
    v204 = a2[1].i32[0] + 2;
    v205 = *(_QWORD **)a1[4];
    v206 = *v205;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v207 = *(_DWORD *)(*v205 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v207);
    v208 = (const float *)(*v205 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v207);
    v209 = *(_QWORD *)(v205[1] + 144);
    v584 = vld3_f32(v208);
    a3.f32[2] = (float)(v204 / v207);
    v210.i64[0] = 0x3F0000003F000000;
    v210.i64[1] = 0x3F0000003F000000;
    v211 = vaddq_f32(a3, v210);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v211.f32[0]), v584.val[1], *(float32x2_t *)v211.f32, 1), v584.val[2], v211, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v204;
    v212 = vmulq_n_f32(vaddq_f32(a4, v210), *(float *)&v209);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v206 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v212.f32[0]), v584.val[1], *(float32x2_t *)v212.f32, 1), v584.val[2], v212, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v213 = v6[173];
  if (v213 != v8 && (v213 & 0x40000000) != 0)
  {
    v214 = a2[1].i32[0] + 2;
    v215 = *(_QWORD **)a1[4];
    v216 = *v215;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v217 = *(_DWORD *)(*v215 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v217);
    v218 = (const float *)(*v215 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v217);
    v219 = *(_QWORD *)(v215[1] + 144);
    v585 = vld3_f32(v218);
    a3.f32[2] = (float)(v214 / v217);
    v220.i64[0] = 0x3F0000003F000000;
    v220.i64[1] = 0x3F0000003F000000;
    v221 = vaddq_f32(a3, v220);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v221.f32[0]), v585.val[1], *(float32x2_t *)v221.f32, 1), v585.val[2], v221, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v214;
    v222 = vmulq_n_f32(vaddq_f32(a4, v220), *(float *)&v219);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v216 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v222.f32[0]), v585.val[1], *(float32x2_t *)v222.f32, 1), v585.val[2], v222, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v223 = v6[174];
  if (v223 != v8 && (v223 & 0x40000000) != 0)
  {
    v224 = a2[1].i32[0] + 2;
    v225 = *(_QWORD **)a1[4];
    v226 = *v225;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v227 = *(_DWORD *)(*v225 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v227);
    v228 = (const float *)(*v225 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v227);
    v229 = *(_QWORD *)(v225[1] + 144);
    v586 = vld3_f32(v228);
    a3.f32[2] = (float)(v224 / v227);
    v230.i64[0] = 0x3F0000003F000000;
    v230.i64[1] = 0x3F0000003F000000;
    v231 = vaddq_f32(a3, v230);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v231.f32[0]), v586.val[1], *(float32x2_t *)v231.f32, 1), v586.val[2], v231, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v224;
    v232 = vmulq_n_f32(vaddq_f32(a4, v230), *(float *)&v229);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v226 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v232.f32[0]), v586.val[1], *(float32x2_t *)v232.f32, 1), v586.val[2], v232, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v233 = v6[175];
  if (v233 != v8 && (v233 & 0x40000000) != 0)
  {
    v234 = a2[1].i32[0] + 2;
    v235 = *(_QWORD **)a1[4];
    v236 = *v235;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v237 = *(_DWORD *)(*v235 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v237);
    v238 = (const float *)(*v235 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v237);
    v239 = *(_QWORD *)(v235[1] + 144);
    v587 = vld3_f32(v238);
    a3.f32[2] = (float)(v234 / v237);
    v240.i64[0] = 0x3F0000003F000000;
    v240.i64[1] = 0x3F0000003F000000;
    v241 = vaddq_f32(a3, v240);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v241.f32[0]), v587.val[1], *(float32x2_t *)v241.f32, 1), v587.val[2], v241, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v234;
    v242 = vmulq_n_f32(vaddq_f32(a4, v240), *(float *)&v239);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v236 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v242.f32[0]), v587.val[1], *(float32x2_t *)v242.f32, 1), v587.val[2], v242, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v243 = v6[176];
  if (v243 != v8 && (v243 & 0x40000000) != 0)
  {
    v244 = a2[1].i32[0] + 2;
    v245 = a2->i32[0];
    v246 = a2->i32[1] + 6;
    v247 = *(_QWORD **)a1[4];
    v248 = *v247;
    v249 = (const float *)(*v247 + 1656);
    v250 = *(_DWORD *)(*v247 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v250);
    v251 = *(_QWORD *)(v247[1] + 144);
    a3.f32[1] = (float)(v246 / v250);
    a3.f32[2] = (float)(v244 / v250);
    v252.i64[0] = 0x3F0000003F000000;
    v252.i64[1] = 0x3F0000003F000000;
    v253 = vaddq_f32(a3, v252);
    v588 = vld3_f32(v249);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v253.f32[0]), v588.val[1], *(float32x2_t *)v253.f32, 1), v588.val[2], v253, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v253.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v246, v245));
    v253.f32[2] = (float)v244;
    v254 = vmulq_n_f32(vaddq_f32(v253, v252), *(float *)&v251);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v248 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v254.f32[0]), v588.val[1], *(float32x2_t *)v254.f32, 1), v588.val[2], v254, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v255 = v6[177];
  if (v255 != v8 && (v255 & 0x40000000) != 0)
  {
    v256 = a2[1].i32[0] + 2;
    v257 = *(_QWORD **)a1[4];
    v258 = *v257;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v259 = *(_DWORD *)(*v257 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v259);
    v260 = (const float *)(*v257 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v259);
    v261 = *(_QWORD *)(v257[1] + 144);
    v589 = vld3_f32(v260);
    a3.f32[2] = (float)(v256 / v259);
    v262.i64[0] = 0x3F0000003F000000;
    v262.i64[1] = 0x3F0000003F000000;
    v263 = vaddq_f32(a3, v262);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v263.f32[0]), v589.val[1], *(float32x2_t *)v263.f32, 1), v589.val[2], v263, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v256;
    v264 = vmulq_n_f32(vaddq_f32(a4, v262), *(float *)&v261);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v258 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v264.f32[0]), v589.val[1], *(float32x2_t *)v264.f32, 1), v589.val[2], v264, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v265 = v6[178];
  if (v265 != v8 && (v265 & 0x40000000) != 0)
  {
    v266 = a2[1].i32[0] + 2;
    v267 = *(_QWORD **)a1[4];
    v268 = *v267;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v269 = *(_DWORD *)(*v267 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v269);
    v270 = (const float *)(*v267 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v269);
    v271 = *(_QWORD *)(v267[1] + 144);
    v590 = vld3_f32(v270);
    a3.f32[2] = (float)(v266 / v269);
    v272.i64[0] = 0x3F0000003F000000;
    v272.i64[1] = 0x3F0000003F000000;
    v273 = vaddq_f32(a3, v272);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v273.f32[0]), v590.val[1], *(float32x2_t *)v273.f32, 1), v590.val[2], v273, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v266;
    v274 = vmulq_n_f32(vaddq_f32(a4, v272), *(float *)&v271);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v268 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v274.f32[0]), v590.val[1], *(float32x2_t *)v274.f32, 1), v590.val[2], v274, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v275 = v6[179];
  if (v275 != v8 && (v275 & 0x40000000) != 0)
  {
    v276 = a2[1].i32[0] + 2;
    v277 = *(_QWORD **)a1[4];
    v278 = *v277;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v279 = *(_DWORD *)(*v277 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v279);
    v280 = (const float *)(*v277 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v279);
    v281 = *(_QWORD *)(v277[1] + 144);
    v591 = vld3_f32(v280);
    a3.f32[2] = (float)(v276 / v279);
    v282.i64[0] = 0x3F0000003F000000;
    v282.i64[1] = 0x3F0000003F000000;
    v283 = vaddq_f32(a3, v282);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v283.f32[0]), v591.val[1], *(float32x2_t *)v283.f32, 1), v591.val[2], v283, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v276;
    v284 = vmulq_n_f32(vaddq_f32(a4, v282), *(float *)&v281);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v278 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v284.f32[0]), v591.val[1], *(float32x2_t *)v284.f32, 1), v591.val[2], v284, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v285 = v6[180];
  if (v285 != v8 && (v285 & 0x40000000) != 0)
  {
    v286 = a2[1].i32[0] + 2;
    v287 = *(_QWORD **)a1[4];
    v288 = *v287;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v289 = *(_DWORD *)(*v287 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v289);
    v290 = (const float *)(*v287 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v289);
    v291 = *(_QWORD *)(v287[1] + 144);
    v592 = vld3_f32(v290);
    a3.f32[2] = (float)(v286 / v289);
    v292.i64[0] = 0x3F0000003F000000;
    v292.i64[1] = 0x3F0000003F000000;
    v293 = vaddq_f32(a3, v292);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v293.f32[0]), v592.val[1], *(float32x2_t *)v293.f32, 1), v592.val[2], v293, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v286;
    v294 = vmulq_n_f32(vaddq_f32(a4, v292), *(float *)&v291);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v288 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v294.f32[0]), v592.val[1], *(float32x2_t *)v294.f32, 1), v592.val[2], v294, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v295 = v6[181];
  if (v295 != v8 && (v295 & 0x40000000) != 0)
  {
    v296 = a2[1].i32[0] + 2;
    v297 = *(_QWORD **)a1[4];
    v298 = *v297;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v299 = *(_DWORD *)(*v297 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v299);
    v300 = (const float *)(*v297 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v299);
    v301 = *(_QWORD *)(v297[1] + 144);
    v593 = vld3_f32(v300);
    a3.f32[2] = (float)(v296 / v299);
    v302.i64[0] = 0x3F0000003F000000;
    v302.i64[1] = 0x3F0000003F000000;
    v303 = vaddq_f32(a3, v302);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v303.f32[0]), v593.val[1], *(float32x2_t *)v303.f32, 1), v593.val[2], v303, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v296;
    v304 = vmulq_n_f32(vaddq_f32(a4, v302), *(float *)&v301);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v298 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v304.f32[0]), v593.val[1], *(float32x2_t *)v304.f32, 1), v593.val[2], v304, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v305 = v6[182];
  if (v305 != v8 && (v305 & 0x40000000) != 0)
  {
    v306 = a2[1].i32[0] + 2;
    v307 = *(_QWORD **)a1[4];
    v308 = *v307;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v309 = *(_DWORD *)(*v307 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v309);
    v310 = (const float *)(*v307 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v309);
    v311 = *(_QWORD *)(v307[1] + 144);
    v594 = vld3_f32(v310);
    a3.f32[2] = (float)(v306 / v309);
    v312.i64[0] = 0x3F0000003F000000;
    v312.i64[1] = 0x3F0000003F000000;
    v313 = vaddq_f32(a3, v312);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v313.f32[0]), v594.val[1], *(float32x2_t *)v313.f32, 1), v594.val[2], v313, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v306;
    v314 = vmulq_n_f32(vaddq_f32(a4, v312), *(float *)&v311);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v308 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v314.f32[0]), v594.val[1], *(float32x2_t *)v314.f32, 1), v594.val[2], v314, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v315 = v6[183];
  if (v315 != v8 && (v315 & 0x40000000) != 0)
  {
    v316 = a2[1].i32[0] + 2;
    v317 = *(_QWORD **)a1[4];
    v318 = *v317;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v319 = *(_DWORD *)(*v317 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v319);
    v320 = (const float *)(*v317 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v319);
    v321 = *(_QWORD *)(v317[1] + 144);
    v595 = vld3_f32(v320);
    a3.f32[2] = (float)(v316 / v319);
    v322.i64[0] = 0x3F0000003F000000;
    v322.i64[1] = 0x3F0000003F000000;
    v323 = vaddq_f32(a3, v322);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v323.f32[0]), v595.val[1], *(float32x2_t *)v323.f32, 1), v595.val[2], v323, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v316;
    v324 = vmulq_n_f32(vaddq_f32(a4, v322), *(float *)&v321);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v318 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v324.f32[0]), v595.val[1], *(float32x2_t *)v324.f32, 1), v595.val[2], v324, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v325 = v6[184];
  if (v325 != v8 && (v325 & 0x40000000) != 0)
  {
    v326 = a2[1].i32[0] + 2;
    v327 = a2->i32[0];
    v328 = a2->i32[1] + 7;
    v329 = *(_QWORD **)a1[4];
    v330 = *v329;
    v331 = (const float *)(*v329 + 1656);
    v332 = *(_DWORD *)(*v329 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v332);
    v333 = *(_QWORD *)(v329[1] + 144);
    a3.f32[1] = (float)(v328 / v332);
    a3.f32[2] = (float)(v326 / v332);
    v334.i64[0] = 0x3F0000003F000000;
    v334.i64[1] = 0x3F0000003F000000;
    v335 = vaddq_f32(a3, v334);
    v596 = vld3_f32(v331);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v335.f32[0]), v596.val[1], *(float32x2_t *)v335.f32, 1), v596.val[2], v335, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v335.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v328, v327));
    v335.f32[2] = (float)v326;
    v336 = vmulq_n_f32(vaddq_f32(v335, v334), *(float *)&v333);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v330 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v336.f32[0]), v596.val[1], *(float32x2_t *)v336.f32, 1), v596.val[2], v336, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v337 = v6[185];
  if (v337 != v8 && (v337 & 0x40000000) != 0)
  {
    v338 = a2[1].i32[0] + 2;
    v339 = *(_QWORD **)a1[4];
    v340 = *v339;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v341 = *(_DWORD *)(*v339 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v341);
    v342 = (const float *)(*v339 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v341);
    v343 = *(_QWORD *)(v339[1] + 144);
    v597 = vld3_f32(v342);
    a3.f32[2] = (float)(v338 / v341);
    v344.i64[0] = 0x3F0000003F000000;
    v344.i64[1] = 0x3F0000003F000000;
    v345 = vaddq_f32(a3, v344);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v345.f32[0]), v597.val[1], *(float32x2_t *)v345.f32, 1), v597.val[2], v345, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v338;
    v346 = vmulq_n_f32(vaddq_f32(a4, v344), *(float *)&v343);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v340 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v346.f32[0]), v597.val[1], *(float32x2_t *)v346.f32, 1), v597.val[2], v346, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v347 = v6[186];
  if (v347 != v8 && (v347 & 0x40000000) != 0)
  {
    v348 = a2[1].i32[0] + 2;
    v349 = *(_QWORD **)a1[4];
    v350 = *v349;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v351 = *(_DWORD *)(*v349 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v351);
    v352 = (const float *)(*v349 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v351);
    v353 = *(_QWORD *)(v349[1] + 144);
    v598 = vld3_f32(v352);
    a3.f32[2] = (float)(v348 / v351);
    v354.i64[0] = 0x3F0000003F000000;
    v354.i64[1] = 0x3F0000003F000000;
    v355 = vaddq_f32(a3, v354);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v355.f32[0]), v598.val[1], *(float32x2_t *)v355.f32, 1), v598.val[2], v355, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v348;
    v356 = vmulq_n_f32(vaddq_f32(a4, v354), *(float *)&v353);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v350 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v356.f32[0]), v598.val[1], *(float32x2_t *)v356.f32, 1), v598.val[2], v356, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v357 = v6[187];
  if (v357 != v8 && (v357 & 0x40000000) != 0)
  {
    v358 = a2[1].i32[0] + 2;
    v359 = *(_QWORD **)a1[4];
    v360 = *v359;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v361 = *(_DWORD *)(*v359 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v361);
    v362 = (const float *)(*v359 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v361);
    v363 = *(_QWORD *)(v359[1] + 144);
    v599 = vld3_f32(v362);
    a3.f32[2] = (float)(v358 / v361);
    v364.i64[0] = 0x3F0000003F000000;
    v364.i64[1] = 0x3F0000003F000000;
    v365 = vaddq_f32(a3, v364);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v365.f32[0]), v599.val[1], *(float32x2_t *)v365.f32, 1), v599.val[2], v365, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v358;
    v366 = vmulq_n_f32(vaddq_f32(a4, v364), *(float *)&v363);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v360 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v366.f32[0]), v599.val[1], *(float32x2_t *)v366.f32, 1), v599.val[2], v366, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v367 = v6[188];
  if (v367 != v8 && (v367 & 0x40000000) != 0)
  {
    v368 = a2[1].i32[0] + 2;
    v369 = *(_QWORD **)a1[4];
    v370 = *v369;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v371 = *(_DWORD *)(*v369 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v371);
    v372 = (const float *)(*v369 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v371);
    v373 = *(_QWORD *)(v369[1] + 144);
    v600 = vld3_f32(v372);
    a3.f32[2] = (float)(v368 / v371);
    v374.i64[0] = 0x3F0000003F000000;
    v374.i64[1] = 0x3F0000003F000000;
    v375 = vaddq_f32(a3, v374);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v375.f32[0]), v600.val[1], *(float32x2_t *)v375.f32, 1), v600.val[2], v375, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v368;
    v376 = vmulq_n_f32(vaddq_f32(a4, v374), *(float *)&v373);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v370 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v376.f32[0]), v600.val[1], *(float32x2_t *)v376.f32, 1), v600.val[2], v376, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v377 = v6[189];
  if (v377 != v8 && (v377 & 0x40000000) != 0)
  {
    v378 = a2[1].i32[0] + 2;
    v379 = *(_QWORD **)a1[4];
    v380 = *v379;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v381 = *(_DWORD *)(*v379 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v381);
    v382 = (const float *)(*v379 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v381);
    v383 = *(_QWORD *)(v379[1] + 144);
    v601 = vld3_f32(v382);
    a3.f32[2] = (float)(v378 / v381);
    v384.i64[0] = 0x3F0000003F000000;
    v384.i64[1] = 0x3F0000003F000000;
    v385 = vaddq_f32(a3, v384);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v385.f32[0]), v601.val[1], *(float32x2_t *)v385.f32, 1), v601.val[2], v385, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v378;
    v386 = vmulq_n_f32(vaddq_f32(a4, v384), *(float *)&v383);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v380 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v386.f32[0]), v601.val[1], *(float32x2_t *)v386.f32, 1), v601.val[2], v386, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v387 = v6[190];
  if (v387 != v8 && (v387 & 0x40000000) != 0)
  {
    v388 = a2[1].i32[0] + 2;
    v389 = *(_QWORD **)a1[4];
    v390 = *v389;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v391 = *(_DWORD *)(*v389 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v391);
    v392 = (const float *)(*v389 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v391);
    v393 = *(_QWORD *)(v389[1] + 144);
    v602 = vld3_f32(v392);
    a3.f32[2] = (float)(v388 / v391);
    v394.i64[0] = 0x3F0000003F000000;
    v394.i64[1] = 0x3F0000003F000000;
    v395 = vaddq_f32(a3, v394);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v395.f32[0]), v602.val[1], *(float32x2_t *)v395.f32, 1), v602.val[2], v395, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v388;
    v396 = vmulq_n_f32(vaddq_f32(a4, v394), *(float *)&v393);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v390 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v396.f32[0]), v602.val[1], *(float32x2_t *)v396.f32, 1), v602.val[2], v396, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v397 = v6[191];
  if (v397 != v8 && (v397 & 0x40000000) != 0)
  {
    v398 = a2[1].i32[0] + 2;
    v399 = *(_QWORD **)a1[4];
    v400 = *v399;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v401 = *(_DWORD *)(*v399 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v401);
    v402 = (const float *)(*v399 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v401);
    v403 = *(_QWORD *)(v399[1] + 144);
    v603 = vld3_f32(v402);
    a3.f32[2] = (float)(v398 / v401);
    v404.i64[0] = 0x3F0000003F000000;
    v404.i64[1] = 0x3F0000003F000000;
    v405 = vaddq_f32(a3, v404);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v405.f32[0]), v603.val[1], *(float32x2_t *)v405.f32, 1), v603.val[2], v405, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v398;
    v406 = vmulq_n_f32(vaddq_f32(a4, v404), *(float *)&v403);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v400 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v406.f32[0]), v603.val[1], *(float32x2_t *)v406.f32, 1), v603.val[2], v406, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v407 = v6[192];
  if (v407 != v8 && (v407 & 0x40000000) != 0)
  {
    v408 = a2[1].i32[0] + 3;
    v409 = *(_QWORD **)a1[4];
    v410 = *v409;
    v411 = *(_DWORD *)(*v409 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v411);
    v412 = (const float *)(*v409 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v411);
    v413 = *(_QWORD *)(v409[1] + 144);
    v604 = vld3_f32(v412);
    a3.f32[2] = (float)(v408 / v411);
    v414.i64[0] = 0x3F0000003F000000;
    v414.i64[1] = 0x3F0000003F000000;
    v415 = vaddq_f32(a3, v414);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v415.f32[0]), v604.val[1], *(float32x2_t *)v415.f32, 1), v604.val[2], v415, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v408;
    v416 = vmulq_n_f32(vaddq_f32(a4, v414), *(float *)&v413);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v410 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v416.f32[0]), v604.val[1], *(float32x2_t *)v416.f32, 1), v604.val[2], v416, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v417 = v6[193];
  if (v417 != v8 && (v417 & 0x40000000) != 0)
  {
    v418 = a2->i32[1];
    v419 = a2[1].i32[0] + 3;
    v420 = a2->i32[0] + 1;
    v421 = *(_QWORD **)a1[4];
    v422 = *v421;
    v423 = (const float *)(*v421 + 1656);
    v424 = *(_DWORD *)(*v421 + 8);
    a3.f32[0] = (float)(v420 / v424);
    v425 = *(_QWORD *)(v421[1] + 144);
    a3.f32[1] = (float)(v418 / v424);
    a3.f32[2] = (float)(v419 / v424);
    v426.i64[0] = 0x3F0000003F000000;
    v426.i64[1] = 0x3F0000003F000000;
    v427 = vaddq_f32(a3, v426);
    v605 = vld3_f32(v423);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v427.f32[0]), v605.val[1], *(float32x2_t *)v427.f32, 1), v605.val[2], v427, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v427.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v418, v420));
    v427.f32[2] = (float)v419;
    v428 = vmulq_n_f32(vaddq_f32(v427, v426), *(float *)&v425);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v422 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v428.f32[0]), v605.val[1], *(float32x2_t *)v428.f32, 1), v605.val[2], v428, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v429 = v6[194];
  if (v429 != v8 && (v429 & 0x40000000) != 0)
  {
    v430 = a2->i32[1];
    v431 = a2[1].i32[0] + 3;
    v432 = a2->i32[0] + 2;
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    v435 = (const float *)(*v433 + 1656);
    v436 = *(_DWORD *)(*v433 + 8);
    a3.f32[0] = (float)(v432 / v436);
    v437 = *(_QWORD *)(v433[1] + 144);
    a3.f32[1] = (float)(v430 / v436);
    a3.f32[2] = (float)(v431 / v436);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v606 = vld3_f32(v435);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v439.f32[0]), v606.val[1], *(float32x2_t *)v439.f32, 1), v606.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v439.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v430, v432));
    v439.f32[2] = (float)v431;
    v440 = vmulq_n_f32(vaddq_f32(v439, v438), *(float *)&v437);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v440.f32[0]), v606.val[1], *(float32x2_t *)v440.f32, 1), v606.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[195];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2->i32[1];
    v443 = a2[1].i32[0] + 3;
    v444 = a2->i32[0] + 3;
    v445 = *(_QWORD **)a1[4];
    v446 = *v445;
    v447 = (const float *)(*v445 + 1656);
    v448 = *(_DWORD *)(*v445 + 8);
    a3.f32[0] = (float)(v444 / v448);
    v449 = *(_QWORD *)(v445[1] + 144);
    a3.f32[1] = (float)(v442 / v448);
    a3.f32[2] = (float)(v443 / v448);
    v450.i64[0] = 0x3F0000003F000000;
    v450.i64[1] = 0x3F0000003F000000;
    v451 = vaddq_f32(a3, v450);
    v607 = vld3_f32(v447);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v451.f32[0]), v607.val[1], *(float32x2_t *)v451.f32, 1), v607.val[2], v451, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v451.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v442, v444));
    v451.f32[2] = (float)v443;
    v452 = vmulq_n_f32(vaddq_f32(v451, v450), *(float *)&v449);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v446 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v452.f32[0]), v607.val[1], *(float32x2_t *)v452.f32, 1), v607.val[2], v452, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v453 = v6[196];
  if (v453 != v8 && (v453 & 0x40000000) != 0)
  {
    v454 = a2->i32[1];
    v455 = a2[1].i32[0] + 3;
    v456 = a2->i32[0] + 4;
    v457 = *(_QWORD **)a1[4];
    v458 = *v457;
    v459 = (const float *)(*v457 + 1656);
    v460 = *(_DWORD *)(*v457 + 8);
    a3.f32[0] = (float)(v456 / v460);
    v461 = *(_QWORD *)(v457[1] + 144);
    a3.f32[1] = (float)(v454 / v460);
    a3.f32[2] = (float)(v455 / v460);
    v462.i64[0] = 0x3F0000003F000000;
    v462.i64[1] = 0x3F0000003F000000;
    v463 = vaddq_f32(a3, v462);
    v608 = vld3_f32(v459);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v463.f32[0]), v608.val[1], *(float32x2_t *)v463.f32, 1), v608.val[2], v463, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v463.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v454, v456));
    v463.f32[2] = (float)v455;
    v464 = vmulq_n_f32(vaddq_f32(v463, v462), *(float *)&v461);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v458 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v464.f32[0]), v608.val[1], *(float32x2_t *)v464.f32, 1), v608.val[2], v464, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v465 = v6[197];
  if (v465 != v8 && (v465 & 0x40000000) != 0)
  {
    v466 = a2->i32[1];
    v467 = a2[1].i32[0] + 3;
    v468 = a2->i32[0] + 5;
    v469 = *(_QWORD **)a1[4];
    v470 = *v469;
    v471 = (const float *)(*v469 + 1656);
    v472 = *(_DWORD *)(*v469 + 8);
    a3.f32[0] = (float)(v468 / v472);
    v473 = *(_QWORD *)(v469[1] + 144);
    a3.f32[1] = (float)(v466 / v472);
    a3.f32[2] = (float)(v467 / v472);
    v474.i64[0] = 0x3F0000003F000000;
    v474.i64[1] = 0x3F0000003F000000;
    v475 = vaddq_f32(a3, v474);
    v609 = vld3_f32(v471);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v475.f32[0]), v609.val[1], *(float32x2_t *)v475.f32, 1), v609.val[2], v475, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v475.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v466, v468));
    v475.f32[2] = (float)v467;
    v476 = vmulq_n_f32(vaddq_f32(v475, v474), *(float *)&v473);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v470 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v476.f32[0]), v609.val[1], *(float32x2_t *)v476.f32, 1), v609.val[2], v476, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v477 = v6[198];
  if (v477 != v8 && (v477 & 0x40000000) != 0)
  {
    v478 = a2->i32[1];
    v479 = a2[1].i32[0] + 3;
    v480 = a2->i32[0] + 6;
    v481 = *(_QWORD **)a1[4];
    v482 = *v481;
    v483 = (const float *)(*v481 + 1656);
    v484 = *(_DWORD *)(*v481 + 8);
    a3.f32[0] = (float)(v480 / v484);
    v485 = *(_QWORD *)(v481[1] + 144);
    a3.f32[1] = (float)(v478 / v484);
    a3.f32[2] = (float)(v479 / v484);
    v486.i64[0] = 0x3F0000003F000000;
    v486.i64[1] = 0x3F0000003F000000;
    v487 = vaddq_f32(a3, v486);
    v610 = vld3_f32(v483);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v487.f32[0]), v610.val[1], *(float32x2_t *)v487.f32, 1), v610.val[2], v487, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v487.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v478, v480));
    v487.f32[2] = (float)v479;
    v488 = vmulq_n_f32(vaddq_f32(v487, v486), *(float *)&v485);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v482 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v488.f32[0]), v610.val[1], *(float32x2_t *)v488.f32, 1), v610.val[2], v488, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v489 = v6[199];
  if (v489 != v8 && (v489 & 0x40000000) != 0)
  {
    v490 = a2->i32[1];
    v491 = a2[1].i32[0] + 3;
    v492 = a2->i32[0] + 7;
    v493 = *(_QWORD **)a1[4];
    v494 = *v493;
    v495 = (const float *)(*v493 + 1656);
    v496 = *(_DWORD *)(*v493 + 8);
    a3.f32[0] = (float)(v492 / v496);
    v497 = *(_QWORD *)(v493[1] + 144);
    a3.f32[1] = (float)(v490 / v496);
    a3.f32[2] = (float)(v491 / v496);
    v498.i64[0] = 0x3F0000003F000000;
    v498.i64[1] = 0x3F0000003F000000;
    v499 = vaddq_f32(a3, v498);
    v611 = vld3_f32(v495);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v499.f32[0]), v611.val[1], *(float32x2_t *)v499.f32, 1), v611.val[2], v499, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v499.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v490, v492));
    v499.f32[2] = (float)v491;
    v500 = vmulq_n_f32(vaddq_f32(v499, v498), *(float *)&v497);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v494 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v500.f32[0]), v611.val[1], *(float32x2_t *)v500.f32, 1), v611.val[2], v500, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v501 = v6[200];
  if (v501 != v8 && (v501 & 0x40000000) != 0)
  {
    v502 = a2[1].i32[0] + 3;
    v503 = a2->i32[0];
    v504 = a2->i32[1] + 1;
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    v507 = (const float *)(*v505 + 1656);
    v508 = *(_DWORD *)(*v505 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v508);
    v509 = *(_QWORD *)(v505[1] + 144);
    a3.f32[1] = (float)(v504 / v508);
    a3.f32[2] = (float)(v502 / v508);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v612 = vld3_f32(v507);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v511.f32[0]), v612.val[1], *(float32x2_t *)v511.f32, 1), v612.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v511.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v504, v503));
    v511.f32[2] = (float)v502;
    v512 = vmulq_n_f32(vaddq_f32(v511, v510), *(float *)&v509);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v512.f32[0]), v612.val[1], *(float32x2_t *)v512.f32, 1), v612.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[201];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0] + 3;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v613 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v521.f32[0]), v613.val[1], *(float32x2_t *)v521.f32, 1), v613.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v522.f32[0]), v613.val[1], *(float32x2_t *)v522.f32, 1), v613.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[202];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 3;
    v525 = *(_QWORD **)a1[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v614 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v531.f32[0]), v614.val[1], *(float32x2_t *)v531.f32, 1), v614.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v526 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v532.f32[0]), v614.val[1], *(float32x2_t *)v532.f32, 1), v614.val[2], v532, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v533 = v6[203];
  if (v533 != v8 && (v533 & 0x40000000) != 0)
  {
    v534 = a2[1].i32[0] + 3;
    v535 = *(_QWORD **)a1[4];
    v536 = *v535;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v537 = *(_DWORD *)(*v535 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v537);
    v538 = (const float *)(*v535 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v537);
    v539 = *(_QWORD *)(v535[1] + 144);
    v615 = vld3_f32(v538);
    a3.f32[2] = (float)(v534 / v537);
    v540.i64[0] = 0x3F0000003F000000;
    v540.i64[1] = 0x3F0000003F000000;
    v541 = vaddq_f32(a3, v540);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v541.f32[0]), v615.val[1], *(float32x2_t *)v541.f32, 1), v615.val[2], v541, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v534;
    v542 = vmulq_n_f32(vaddq_f32(a4, v540), *(float *)&v539);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v536 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v542.f32[0]), v615.val[1], *(float32x2_t *)v542.f32, 1), v615.val[2], v542, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v543 = v6[204];
  if (v543 != v8 && (v543 & 0x40000000) != 0)
  {
    v544 = a2[1].i32[0] + 3;
    v545 = *(_QWORD **)a1[4];
    v546 = *v545;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v547 = *(_DWORD *)(*v545 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v547);
    v548 = (const float *)(*v545 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v547);
    v549 = *(_QWORD *)(v545[1] + 144);
    v616 = vld3_f32(v548);
    a3.f32[2] = (float)(v544 / v547);
    v550.i64[0] = 0x3F0000003F000000;
    v550.i64[1] = 0x3F0000003F000000;
    v551 = vaddq_f32(a3, v550);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v551.f32[0]), v616.val[1], *(float32x2_t *)v551.f32, 1), v616.val[2], v551, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v544;
    v552 = vmulq_n_f32(vaddq_f32(a4, v550), *(float *)&v549);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v546 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v552.f32[0]), v616.val[1], *(float32x2_t *)v552.f32, 1), v616.val[2], v552, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v553 = v6[205];
  if (v553 != v8 && (v553 & 0x40000000) != 0)
  {
    v554 = a2[1].i32[0] + 3;
    v555 = *(_QWORD **)a1[4];
    v556 = *v555;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v557 = *(_DWORD *)(*v555 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v557);
    v558 = (const float *)(*v555 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v557);
    v559 = *(_QWORD *)(v555[1] + 144);
    v617 = vld3_f32(v558);
    a3.f32[2] = (float)(v554 / v557);
    v560.i64[0] = 0x3F0000003F000000;
    v560.i64[1] = 0x3F0000003F000000;
    v561 = vaddq_f32(a3, v560);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v561.f32[0]), v617.val[1], *(float32x2_t *)v561.f32, 1), v617.val[2], v561, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v554;
    v562 = vmulq_n_f32(vaddq_f32(a4, v560), *(float *)&v559);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v556 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v562.f32[0]), v617.val[1], *(float32x2_t *)v562.f32, 1), v617.val[2], v562, 2);
  }
  return sub_2239F94E4(a1, a2, a3, a4);
}

uint64_t *sub_2239F94E4(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  uint64_t *v33;
  int v34;
  int v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  const float *v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  int v45;
  int v47;
  __int32 v48;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  const float *v52;
  int v53;
  uint64_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  int v58;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  const float *v64;
  uint64_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  int v69;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  int v74;
  const float *v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  int v80;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  const float *v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  const float *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  const float *v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int v121;
  int v122;
  _QWORD *v123;
  uint64_t v124;
  int v125;
  const float *v126;
  uint64_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  int v131;
  int v132;
  __int32 v133;
  int v134;
  _QWORD *v135;
  uint64_t v136;
  const float *v137;
  int v138;
  uint64_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  int v143;
  int v144;
  _QWORD *v145;
  uint64_t v146;
  int v147;
  const float *v148;
  uint64_t v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  int v153;
  int v154;
  _QWORD *v155;
  uint64_t v156;
  int v157;
  const float *v158;
  uint64_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x4_t v162;
  int v163;
  int v164;
  _QWORD *v165;
  uint64_t v166;
  int v167;
  const float *v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  int v173;
  int v174;
  _QWORD *v175;
  uint64_t v176;
  int v177;
  const float *v178;
  uint64_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  int v183;
  int v184;
  _QWORD *v185;
  uint64_t v186;
  int v187;
  const float *v188;
  uint64_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  int v193;
  int v194;
  _QWORD *v195;
  uint64_t v196;
  int v197;
  const float *v198;
  uint64_t v199;
  float32x4_t v200;
  float32x4_t v201;
  float32x4_t v202;
  int v203;
  int v204;
  _QWORD *v205;
  uint64_t v206;
  int v207;
  const float *v208;
  uint64_t v209;
  float32x4_t v210;
  float32x4_t v211;
  float32x4_t v212;
  int v213;
  int v214;
  __int32 v215;
  int v216;
  _QWORD *v217;
  uint64_t v218;
  const float *v219;
  int v220;
  uint64_t v221;
  float32x4_t v222;
  float32x4_t v223;
  float32x4_t v224;
  int v225;
  int v226;
  _QWORD *v227;
  uint64_t v228;
  int v229;
  const float *v230;
  uint64_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  int v235;
  int v236;
  _QWORD *v237;
  uint64_t v238;
  int v239;
  const float *v240;
  uint64_t v241;
  float32x4_t v242;
  float32x4_t v243;
  float32x4_t v244;
  int v245;
  int v246;
  _QWORD *v247;
  uint64_t v248;
  int v249;
  const float *v250;
  uint64_t v251;
  float32x4_t v252;
  float32x4_t v253;
  float32x4_t v254;
  int v255;
  int v256;
  _QWORD *v257;
  uint64_t v258;
  int v259;
  const float *v260;
  uint64_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float32x4_t v264;
  int v265;
  int v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  const float *v270;
  uint64_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x4_t v274;
  int v275;
  int v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  const float *v280;
  uint64_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  int v285;
  int v286;
  _QWORD *v287;
  uint64_t v288;
  int v289;
  const float *v290;
  uint64_t v291;
  float32x4_t v292;
  float32x4_t v293;
  float32x4_t v294;
  int v295;
  int v296;
  __int32 v297;
  int v298;
  _QWORD *v299;
  uint64_t v300;
  const float *v301;
  int v302;
  uint64_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  int v307;
  int v308;
  _QWORD *v309;
  uint64_t v310;
  int v311;
  const float *v312;
  uint64_t v313;
  float32x4_t v314;
  float32x4_t v315;
  float32x4_t v316;
  int v317;
  int v318;
  _QWORD *v319;
  uint64_t v320;
  int v321;
  const float *v322;
  uint64_t v323;
  float32x4_t v324;
  float32x4_t v325;
  float32x4_t v326;
  int v327;
  int v328;
  _QWORD *v329;
  uint64_t v330;
  int v331;
  const float *v332;
  uint64_t v333;
  float32x4_t v334;
  float32x4_t v335;
  float32x4_t v336;
  int v337;
  int v338;
  _QWORD *v339;
  uint64_t v340;
  int v341;
  const float *v342;
  uint64_t v343;
  float32x4_t v344;
  float32x4_t v345;
  float32x4_t v346;
  int v347;
  int v348;
  _QWORD *v349;
  uint64_t v350;
  int v351;
  const float *v352;
  uint64_t v353;
  float32x4_t v354;
  float32x4_t v355;
  float32x4_t v356;
  int v357;
  int v358;
  _QWORD *v359;
  uint64_t v360;
  int v361;
  const float *v362;
  uint64_t v363;
  float32x4_t v364;
  float32x4_t v365;
  float32x4_t v366;
  int v367;
  int v368;
  _QWORD *v369;
  uint64_t v370;
  int v371;
  const float *v372;
  uint64_t v373;
  float32x4_t v374;
  float32x4_t v375;
  float32x4_t v376;
  int v377;
  int v378;
  __int32 v379;
  int v380;
  _QWORD *v381;
  uint64_t v382;
  const float *v383;
  int v384;
  uint64_t v385;
  float32x4_t v386;
  float32x4_t v387;
  float32x4_t v388;
  int v389;
  int v390;
  _QWORD *v391;
  uint64_t v392;
  int v393;
  const float *v394;
  uint64_t v395;
  float32x4_t v396;
  float32x4_t v397;
  float32x4_t v398;
  int v399;
  int v400;
  _QWORD *v401;
  uint64_t v402;
  int v403;
  const float *v404;
  uint64_t v405;
  float32x4_t v406;
  float32x4_t v407;
  float32x4_t v408;
  int v409;
  int v410;
  _QWORD *v411;
  uint64_t v412;
  int v413;
  const float *v414;
  uint64_t v415;
  float32x4_t v416;
  float32x4_t v417;
  float32x4_t v418;
  int v419;
  int v420;
  _QWORD *v421;
  uint64_t v422;
  int v423;
  const float *v424;
  uint64_t v425;
  float32x4_t v426;
  float32x4_t v427;
  float32x4_t v428;
  int v429;
  int v430;
  _QWORD *v431;
  uint64_t v432;
  int v433;
  const float *v434;
  uint64_t v435;
  float32x4_t v436;
  float32x4_t v437;
  float32x4_t v438;
  int v439;
  int v440;
  _QWORD *v441;
  uint64_t v442;
  int v443;
  const float *v444;
  uint64_t v445;
  float32x4_t v446;
  float32x4_t v447;
  float32x4_t v448;
  int v449;
  int v450;
  _QWORD *v451;
  uint64_t v452;
  int v453;
  const float *v454;
  uint64_t v455;
  float32x4_t v456;
  float32x4_t v457;
  float32x4_t v458;
  int v459;
  int v460;
  __int32 v461;
  int v462;
  _QWORD *v463;
  uint64_t v464;
  const float *v465;
  int v466;
  uint64_t v467;
  float32x4_t v468;
  float32x4_t v469;
  float32x4_t v470;
  int v471;
  int v472;
  _QWORD *v473;
  uint64_t v474;
  int v475;
  const float *v476;
  uint64_t v477;
  float32x4_t v478;
  float32x4_t v479;
  float32x4_t v480;
  int v481;
  int v482;
  _QWORD *v483;
  uint64_t v484;
  int v485;
  const float *v486;
  uint64_t v487;
  float32x4_t v488;
  float32x4_t v489;
  float32x4_t v490;
  int v491;
  int v492;
  _QWORD *v493;
  uint64_t v494;
  int v495;
  const float *v496;
  uint64_t v497;
  float32x4_t v498;
  float32x4_t v499;
  float32x4_t v500;
  int v501;
  int v502;
  _QWORD *v503;
  uint64_t v504;
  int v505;
  const float *v506;
  uint64_t v507;
  float32x4_t v508;
  float32x4_t v509;
  float32x4_t v510;
  int v511;
  int v512;
  _QWORD *v513;
  uint64_t v514;
  int v515;
  const float *v516;
  uint64_t v517;
  float32x4_t v518;
  float32x4_t v519;
  float32x4_t v520;
  int v521;
  int v522;
  _QWORD *v523;
  uint64_t v524;
  int v525;
  const float *v526;
  uint64_t v527;
  float32x4_t v528;
  float32x4_t v529;
  float32x4_t v530;
  int v531;
  int v532;
  _QWORD *v533;
  uint64_t v534;
  int v535;
  const float *v536;
  uint64_t v537;
  float32x4_t v538;
  float32x4_t v539;
  float32x4_t v540;
  int v541;
  int v542;
  _QWORD *v543;
  uint64_t v544;
  int v545;
  const float *v546;
  uint64_t v547;
  float32x4_t v548;
  float32x4_t v549;
  float32x4_t v550;
  int32x2_t v552;
  int v553;
  int32x2_t *v554;
  float32x2x3_t v555;
  float32x2x3_t v556;
  float32x2x3_t v557;
  float32x2x3_t v558;
  float32x2x3_t v559;
  float32x2x3_t v560;
  float32x2x3_t v561;
  float32x2x3_t v562;
  float32x2x3_t v563;
  float32x2x3_t v564;
  float32x2x3_t v565;
  float32x2x3_t v566;
  float32x2x3_t v567;
  float32x2x3_t v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;

  v6 = (_DWORD *)a1[1];
  v7 = v6[206];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[207];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v36 = a2[1].i32[0] + 3;
      v37 = *(_QWORD **)a1[4];
      v38 = *v37;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
      v39 = *(_DWORD *)(*v37 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v39);
      v40 = (const float *)(*v37 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v39);
      v41 = *(_QWORD *)(v37[1] + 144);
      v556 = vld3_f32(v40);
      a3.f32[2] = (float)(v36 / v39);
      v42.i64[0] = 0x3F0000003F000000;
      v42.i64[1] = 0x3F0000003F000000;
      v43 = vaddq_f32(a3, v42);
      v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v556.val[0], v43.f32[0]), v556.val[1], *(float32x2_t *)v43.f32, 1), v556.val[2], v43, 2), (float32x2_t)0xBF000000BF000000));
      v553 = 0;
      a4.f32[2] = (float)v36;
      v44 = vmulq_n_f32(vaddq_f32(a4, v42), *(float *)&v41);
      v554 = &v552;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v38 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v556.val[0], v44.f32[0]), v556.val[1], *(float32x2_t *)v44.f32, 1), v556.val[2], v44, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v45 = v6[208];
      if (v45 != v8 && (v45 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 3;
    v24 = *(_QWORD **)a1[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v555 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v555.val[0], v30.f32[0]), v555.val[1], *(float32x2_t *)v30.f32, 1), v555.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v555.val[0], v31.f32[0]), v555.val[1], *(float32x2_t *)v31.f32, 1), v555.val[2], v31, 2);
    v554 = &v552;
    v33 = sub_223A17B10((float *)(v25 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554);
    *(uint64_t *)((char *)v33 + 28) = (uint64_t)v32;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v34 = v6[207];
    if (v34 != v8 && (v34 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[208];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v47 = a2[1].i32[0] + 3;
    v48 = a2->i32[0];
    v49 = a2->i32[1] + 2;
    v50 = *(_QWORD **)a1[4];
    v51 = *v50;
    v52 = (const float *)(*v50 + 1656);
    v53 = *(_DWORD *)(*v50 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v53);
    v54 = *(_QWORD *)(v50[1] + 144);
    a3.f32[1] = (float)(v49 / v53);
    a3.f32[2] = (float)(v47 / v53);
    v55.i64[0] = 0x3F0000003F000000;
    v55.i64[1] = 0x3F0000003F000000;
    v56 = vaddq_f32(a3, v55);
    v557 = vld3_f32(v52);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v557.val[0], v56.f32[0]), v557.val[1], *(float32x2_t *)v56.f32, 1), v557.val[2], v56, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    *(float32x2_t *)v56.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v49, v48));
    v56.f32[2] = (float)v47;
    v57 = vmulq_n_f32(vaddq_f32(v56, v55), *(float *)&v54);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v51 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v557.val[0], v57.f32[0]), v557.val[1], *(float32x2_t *)v57.f32, 1), v557.val[2], v57, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v58 = v6[209];
    if (v58 != v8 && (v58 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[209];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v60 = a2[1].i32[0] + 3;
    v61 = *(_QWORD **)a1[4];
    v62 = *v61;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v63 = *(_DWORD *)(*v61 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v63);
    v64 = (const float *)(*v61 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v63);
    v65 = *(_QWORD *)(v61[1] + 144);
    v558 = vld3_f32(v64);
    a3.f32[2] = (float)(v60 / v63);
    v66.i64[0] = 0x3F0000003F000000;
    v66.i64[1] = 0x3F0000003F000000;
    v67 = vaddq_f32(a3, v66);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v558.val[0], v67.f32[0]), v558.val[1], *(float32x2_t *)v67.f32, 1), v558.val[2], v67, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v60;
    v68 = vmulq_n_f32(vaddq_f32(a4, v66), *(float *)&v65);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v62 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v558.val[0], v68.f32[0]), v558.val[1], *(float32x2_t *)v68.f32, 1), v558.val[2], v68, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v69 = v6[210];
    if (v69 != v8 && (v69 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[210];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v71 = a2[1].i32[0] + 3;
    v72 = *(_QWORD **)a1[4];
    v73 = *v72;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v74 = *(_DWORD *)(*v72 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v74);
    v75 = (const float *)(*v72 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v74);
    v76 = *(_QWORD *)(v72[1] + 144);
    v559 = vld3_f32(v75);
    a3.f32[2] = (float)(v71 / v74);
    v77.i64[0] = 0x3F0000003F000000;
    v77.i64[1] = 0x3F0000003F000000;
    v78 = vaddq_f32(a3, v77);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v559.val[0], v78.f32[0]), v559.val[1], *(float32x2_t *)v78.f32, 1), v559.val[2], v78, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v71;
    v79 = vmulq_n_f32(vaddq_f32(a4, v77), *(float *)&v76);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v73 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v559.val[0], v79.f32[0]), v559.val[1], *(float32x2_t *)v79.f32, 1), v559.val[2], v79, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v80 = v6[211];
    if (v80 != v8 && (v80 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[211];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v82 = a2[1].i32[0] + 3;
    v83 = *(_QWORD **)a1[4];
    v84 = *v83;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v85 = *(_DWORD *)(*v83 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v85);
    v86 = (const float *)(*v83 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v85);
    v87 = *(_QWORD *)(v83[1] + 144);
    v560 = vld3_f32(v86);
    a3.f32[2] = (float)(v82 / v85);
    v88.i64[0] = 0x3F0000003F000000;
    v88.i64[1] = 0x3F0000003F000000;
    v89 = vaddq_f32(a3, v88);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v560.val[0], v89.f32[0]), v560.val[1], *(float32x2_t *)v89.f32, 1), v560.val[2], v89, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v82;
    v90 = vmulq_n_f32(vaddq_f32(a4, v88), *(float *)&v87);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v84 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v560.val[0], v90.f32[0]), v560.val[1], *(float32x2_t *)v90.f32, 1), v560.val[2], v90, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v91 = v6[212];
    if (v91 != v8 && (v91 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[212];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v93 = a2[1].i32[0] + 3;
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v96 = *(_DWORD *)(*v94 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v96);
    v97 = (const float *)(*v94 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v96);
    v98 = *(_QWORD *)(v94[1] + 144);
    v561 = vld3_f32(v97);
    a3.f32[2] = (float)(v93 / v96);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v561.val[0], v100.f32[0]), v561.val[1], *(float32x2_t *)v100.f32, 1), v561.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v93;
    v101 = vmulq_n_f32(vaddq_f32(a4, v99), *(float *)&v98);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v561.val[0], v101.f32[0]), v561.val[1], *(float32x2_t *)v101.f32, 1), v561.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[213];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[213];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0] + 3;
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v562 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v562.val[0], v109.f32[0]), v562.val[1], *(float32x2_t *)v109.f32, 1), v562.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v562.val[0], v110.f32[0]), v562.val[1], *(float32x2_t *)v110.f32, 1), v562.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[214];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0] + 3;
    v113 = *(_QWORD **)a1[4];
    v114 = *v113;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v115 = *(_DWORD *)(*v113 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v115);
    v116 = (const float *)(*v113 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v115);
    v117 = *(_QWORD *)(v113[1] + 144);
    v563 = vld3_f32(v116);
    a3.f32[2] = (float)(v112 / v115);
    v118.i64[0] = 0x3F0000003F000000;
    v118.i64[1] = 0x3F0000003F000000;
    v119 = vaddq_f32(a3, v118);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v563.val[0], v119.f32[0]), v563.val[1], *(float32x2_t *)v119.f32, 1), v563.val[2], v119, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v112;
    v120 = vmulq_n_f32(vaddq_f32(a4, v118), *(float *)&v117);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v114 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v563.val[0], v120.f32[0]), v563.val[1], *(float32x2_t *)v120.f32, 1), v563.val[2], v120, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v121 = v6[215];
  if (v121 != v8 && (v121 & 0x40000000) != 0)
  {
    v122 = a2[1].i32[0] + 3;
    v123 = *(_QWORD **)a1[4];
    v124 = *v123;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v125 = *(_DWORD *)(*v123 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v125);
    v126 = (const float *)(*v123 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v125);
    v127 = *(_QWORD *)(v123[1] + 144);
    v564 = vld3_f32(v126);
    a3.f32[2] = (float)(v122 / v125);
    v128.i64[0] = 0x3F0000003F000000;
    v128.i64[1] = 0x3F0000003F000000;
    v129 = vaddq_f32(a3, v128);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v564.val[0], v129.f32[0]), v564.val[1], *(float32x2_t *)v129.f32, 1), v564.val[2], v129, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v122;
    v130 = vmulq_n_f32(vaddq_f32(a4, v128), *(float *)&v127);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v124 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v564.val[0], v130.f32[0]), v564.val[1], *(float32x2_t *)v130.f32, 1), v564.val[2], v130, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v131 = v6[216];
  if (v131 != v8 && (v131 & 0x40000000) != 0)
  {
    v132 = a2[1].i32[0] + 3;
    v133 = a2->i32[0];
    v134 = a2->i32[1] + 3;
    v135 = *(_QWORD **)a1[4];
    v136 = *v135;
    v137 = (const float *)(*v135 + 1656);
    v138 = *(_DWORD *)(*v135 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v138);
    v139 = *(_QWORD *)(v135[1] + 144);
    a3.f32[1] = (float)(v134 / v138);
    a3.f32[2] = (float)(v132 / v138);
    v140.i64[0] = 0x3F0000003F000000;
    v140.i64[1] = 0x3F0000003F000000;
    v141 = vaddq_f32(a3, v140);
    v565 = vld3_f32(v137);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v565.val[0], v141.f32[0]), v565.val[1], *(float32x2_t *)v141.f32, 1), v565.val[2], v141, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    *(float32x2_t *)v141.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v134, v133));
    v141.f32[2] = (float)v132;
    v142 = vmulq_n_f32(vaddq_f32(v141, v140), *(float *)&v139);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v136 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v565.val[0], v142.f32[0]), v565.val[1], *(float32x2_t *)v142.f32, 1), v565.val[2], v142, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v143 = v6[217];
  if (v143 != v8 && (v143 & 0x40000000) != 0)
  {
    v144 = a2[1].i32[0] + 3;
    v145 = *(_QWORD **)a1[4];
    v146 = *v145;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v147 = *(_DWORD *)(*v145 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v147);
    v148 = (const float *)(*v145 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v147);
    v149 = *(_QWORD *)(v145[1] + 144);
    v566 = vld3_f32(v148);
    a3.f32[2] = (float)(v144 / v147);
    v150.i64[0] = 0x3F0000003F000000;
    v150.i64[1] = 0x3F0000003F000000;
    v151 = vaddq_f32(a3, v150);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v566.val[0], v151.f32[0]), v566.val[1], *(float32x2_t *)v151.f32, 1), v566.val[2], v151, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v144;
    v152 = vmulq_n_f32(vaddq_f32(a4, v150), *(float *)&v149);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v146 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v566.val[0], v152.f32[0]), v566.val[1], *(float32x2_t *)v152.f32, 1), v566.val[2], v152, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v153 = v6[218];
  if (v153 != v8 && (v153 & 0x40000000) != 0)
  {
    v154 = a2[1].i32[0] + 3;
    v155 = *(_QWORD **)a1[4];
    v156 = *v155;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v157 = *(_DWORD *)(*v155 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v157);
    v158 = (const float *)(*v155 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v157);
    v159 = *(_QWORD *)(v155[1] + 144);
    v567 = vld3_f32(v158);
    a3.f32[2] = (float)(v154 / v157);
    v160.i64[0] = 0x3F0000003F000000;
    v160.i64[1] = 0x3F0000003F000000;
    v161 = vaddq_f32(a3, v160);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v161.f32[0]), v567.val[1], *(float32x2_t *)v161.f32, 1), v567.val[2], v161, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v154;
    v162 = vmulq_n_f32(vaddq_f32(a4, v160), *(float *)&v159);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v156 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v162.f32[0]), v567.val[1], *(float32x2_t *)v162.f32, 1), v567.val[2], v162, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v163 = v6[219];
  if (v163 != v8 && (v163 & 0x40000000) != 0)
  {
    v164 = a2[1].i32[0] + 3;
    v165 = *(_QWORD **)a1[4];
    v166 = *v165;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v167 = *(_DWORD *)(*v165 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v167);
    v168 = (const float *)(*v165 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v167);
    v169 = *(_QWORD *)(v165[1] + 144);
    v568 = vld3_f32(v168);
    a3.f32[2] = (float)(v164 / v167);
    v170.i64[0] = 0x3F0000003F000000;
    v170.i64[1] = 0x3F0000003F000000;
    v171 = vaddq_f32(a3, v170);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v171.f32[0]), v568.val[1], *(float32x2_t *)v171.f32, 1), v568.val[2], v171, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v164;
    v172 = vmulq_n_f32(vaddq_f32(a4, v170), *(float *)&v169);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v166 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v172.f32[0]), v568.val[1], *(float32x2_t *)v172.f32, 1), v568.val[2], v172, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v173 = v6[220];
  if (v173 != v8 && (v173 & 0x40000000) != 0)
  {
    v174 = a2[1].i32[0] + 3;
    v175 = *(_QWORD **)a1[4];
    v176 = *v175;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v177 = *(_DWORD *)(*v175 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v177);
    v178 = (const float *)(*v175 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v177);
    v179 = *(_QWORD *)(v175[1] + 144);
    v569 = vld3_f32(v178);
    a3.f32[2] = (float)(v174 / v177);
    v180.i64[0] = 0x3F0000003F000000;
    v180.i64[1] = 0x3F0000003F000000;
    v181 = vaddq_f32(a3, v180);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v181.f32[0]), v569.val[1], *(float32x2_t *)v181.f32, 1), v569.val[2], v181, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v174;
    v182 = vmulq_n_f32(vaddq_f32(a4, v180), *(float *)&v179);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v176 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v182.f32[0]), v569.val[1], *(float32x2_t *)v182.f32, 1), v569.val[2], v182, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v183 = v6[221];
  if (v183 != v8 && (v183 & 0x40000000) != 0)
  {
    v184 = a2[1].i32[0] + 3;
    v185 = *(_QWORD **)a1[4];
    v186 = *v185;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v187 = *(_DWORD *)(*v185 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v187);
    v188 = (const float *)(*v185 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v187);
    v189 = *(_QWORD *)(v185[1] + 144);
    v570 = vld3_f32(v188);
    a3.f32[2] = (float)(v184 / v187);
    v190.i64[0] = 0x3F0000003F000000;
    v190.i64[1] = 0x3F0000003F000000;
    v191 = vaddq_f32(a3, v190);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v191.f32[0]), v570.val[1], *(float32x2_t *)v191.f32, 1), v570.val[2], v191, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v184;
    v192 = vmulq_n_f32(vaddq_f32(a4, v190), *(float *)&v189);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v186 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v192.f32[0]), v570.val[1], *(float32x2_t *)v192.f32, 1), v570.val[2], v192, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v193 = v6[222];
  if (v193 != v8 && (v193 & 0x40000000) != 0)
  {
    v194 = a2[1].i32[0] + 3;
    v195 = *(_QWORD **)a1[4];
    v196 = *v195;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v197 = *(_DWORD *)(*v195 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v197);
    v198 = (const float *)(*v195 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v197);
    v199 = *(_QWORD *)(v195[1] + 144);
    v571 = vld3_f32(v198);
    a3.f32[2] = (float)(v194 / v197);
    v200.i64[0] = 0x3F0000003F000000;
    v200.i64[1] = 0x3F0000003F000000;
    v201 = vaddq_f32(a3, v200);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v201.f32[0]), v571.val[1], *(float32x2_t *)v201.f32, 1), v571.val[2], v201, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v194;
    v202 = vmulq_n_f32(vaddq_f32(a4, v200), *(float *)&v199);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v196 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v202.f32[0]), v571.val[1], *(float32x2_t *)v202.f32, 1), v571.val[2], v202, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v203 = v6[223];
  if (v203 != v8 && (v203 & 0x40000000) != 0)
  {
    v204 = a2[1].i32[0] + 3;
    v205 = *(_QWORD **)a1[4];
    v206 = *v205;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v207 = *(_DWORD *)(*v205 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v207);
    v208 = (const float *)(*v205 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v207);
    v209 = *(_QWORD *)(v205[1] + 144);
    v572 = vld3_f32(v208);
    a3.f32[2] = (float)(v204 / v207);
    v210.i64[0] = 0x3F0000003F000000;
    v210.i64[1] = 0x3F0000003F000000;
    v211 = vaddq_f32(a3, v210);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v211.f32[0]), v572.val[1], *(float32x2_t *)v211.f32, 1), v572.val[2], v211, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v204;
    v212 = vmulq_n_f32(vaddq_f32(a4, v210), *(float *)&v209);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v206 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v212.f32[0]), v572.val[1], *(float32x2_t *)v212.f32, 1), v572.val[2], v212, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v213 = v6[224];
  if (v213 != v8 && (v213 & 0x40000000) != 0)
  {
    v214 = a2[1].i32[0] + 3;
    v215 = a2->i32[0];
    v216 = a2->i32[1] + 4;
    v217 = *(_QWORD **)a1[4];
    v218 = *v217;
    v219 = (const float *)(*v217 + 1656);
    v220 = *(_DWORD *)(*v217 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v220);
    v221 = *(_QWORD *)(v217[1] + 144);
    a3.f32[1] = (float)(v216 / v220);
    a3.f32[2] = (float)(v214 / v220);
    v222.i64[0] = 0x3F0000003F000000;
    v222.i64[1] = 0x3F0000003F000000;
    v223 = vaddq_f32(a3, v222);
    v573 = vld3_f32(v219);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v223.f32[0]), v573.val[1], *(float32x2_t *)v223.f32, 1), v573.val[2], v223, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    *(float32x2_t *)v223.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v216, v215));
    v223.f32[2] = (float)v214;
    v224 = vmulq_n_f32(vaddq_f32(v223, v222), *(float *)&v221);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v218 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v224.f32[0]), v573.val[1], *(float32x2_t *)v224.f32, 1), v573.val[2], v224, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v225 = v6[225];
  if (v225 != v8 && (v225 & 0x40000000) != 0)
  {
    v226 = a2[1].i32[0] + 3;
    v227 = *(_QWORD **)a1[4];
    v228 = *v227;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v229 = *(_DWORD *)(*v227 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v229);
    v230 = (const float *)(*v227 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v229);
    v231 = *(_QWORD *)(v227[1] + 144);
    v574 = vld3_f32(v230);
    a3.f32[2] = (float)(v226 / v229);
    v232.i64[0] = 0x3F0000003F000000;
    v232.i64[1] = 0x3F0000003F000000;
    v233 = vaddq_f32(a3, v232);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v233.f32[0]), v574.val[1], *(float32x2_t *)v233.f32, 1), v574.val[2], v233, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v226;
    v234 = vmulq_n_f32(vaddq_f32(a4, v232), *(float *)&v231);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v228 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v234.f32[0]), v574.val[1], *(float32x2_t *)v234.f32, 1), v574.val[2], v234, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v235 = v6[226];
  if (v235 != v8 && (v235 & 0x40000000) != 0)
  {
    v236 = a2[1].i32[0] + 3;
    v237 = *(_QWORD **)a1[4];
    v238 = *v237;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v239 = *(_DWORD *)(*v237 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v239);
    v240 = (const float *)(*v237 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v239);
    v241 = *(_QWORD *)(v237[1] + 144);
    v575 = vld3_f32(v240);
    a3.f32[2] = (float)(v236 / v239);
    v242.i64[0] = 0x3F0000003F000000;
    v242.i64[1] = 0x3F0000003F000000;
    v243 = vaddq_f32(a3, v242);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v243.f32[0]), v575.val[1], *(float32x2_t *)v243.f32, 1), v575.val[2], v243, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v236;
    v244 = vmulq_n_f32(vaddq_f32(a4, v242), *(float *)&v241);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v238 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v244.f32[0]), v575.val[1], *(float32x2_t *)v244.f32, 1), v575.val[2], v244, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v245 = v6[227];
  if (v245 != v8 && (v245 & 0x40000000) != 0)
  {
    v246 = a2[1].i32[0] + 3;
    v247 = *(_QWORD **)a1[4];
    v248 = *v247;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v249 = *(_DWORD *)(*v247 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v249);
    v250 = (const float *)(*v247 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v249);
    v251 = *(_QWORD *)(v247[1] + 144);
    v576 = vld3_f32(v250);
    a3.f32[2] = (float)(v246 / v249);
    v252.i64[0] = 0x3F0000003F000000;
    v252.i64[1] = 0x3F0000003F000000;
    v253 = vaddq_f32(a3, v252);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v253.f32[0]), v576.val[1], *(float32x2_t *)v253.f32, 1), v576.val[2], v253, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v246;
    v254 = vmulq_n_f32(vaddq_f32(a4, v252), *(float *)&v251);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v248 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v254.f32[0]), v576.val[1], *(float32x2_t *)v254.f32, 1), v576.val[2], v254, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v255 = v6[228];
  if (v255 != v8 && (v255 & 0x40000000) != 0)
  {
    v256 = a2[1].i32[0] + 3;
    v257 = *(_QWORD **)a1[4];
    v258 = *v257;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v259 = *(_DWORD *)(*v257 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v259);
    v260 = (const float *)(*v257 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v259);
    v261 = *(_QWORD *)(v257[1] + 144);
    v577 = vld3_f32(v260);
    a3.f32[2] = (float)(v256 / v259);
    v262.i64[0] = 0x3F0000003F000000;
    v262.i64[1] = 0x3F0000003F000000;
    v263 = vaddq_f32(a3, v262);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v263.f32[0]), v577.val[1], *(float32x2_t *)v263.f32, 1), v577.val[2], v263, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v256;
    v264 = vmulq_n_f32(vaddq_f32(a4, v262), *(float *)&v261);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v258 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v264.f32[0]), v577.val[1], *(float32x2_t *)v264.f32, 1), v577.val[2], v264, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v265 = v6[229];
  if (v265 != v8 && (v265 & 0x40000000) != 0)
  {
    v266 = a2[1].i32[0] + 3;
    v267 = *(_QWORD **)a1[4];
    v268 = *v267;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v269 = *(_DWORD *)(*v267 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v269);
    v270 = (const float *)(*v267 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v269);
    v271 = *(_QWORD *)(v267[1] + 144);
    v578 = vld3_f32(v270);
    a3.f32[2] = (float)(v266 / v269);
    v272.i64[0] = 0x3F0000003F000000;
    v272.i64[1] = 0x3F0000003F000000;
    v273 = vaddq_f32(a3, v272);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v273.f32[0]), v578.val[1], *(float32x2_t *)v273.f32, 1), v578.val[2], v273, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v266;
    v274 = vmulq_n_f32(vaddq_f32(a4, v272), *(float *)&v271);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v268 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v274.f32[0]), v578.val[1], *(float32x2_t *)v274.f32, 1), v578.val[2], v274, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v275 = v6[230];
  if (v275 != v8 && (v275 & 0x40000000) != 0)
  {
    v276 = a2[1].i32[0] + 3;
    v277 = *(_QWORD **)a1[4];
    v278 = *v277;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v279 = *(_DWORD *)(*v277 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v279);
    v280 = (const float *)(*v277 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v279);
    v281 = *(_QWORD *)(v277[1] + 144);
    v579 = vld3_f32(v280);
    a3.f32[2] = (float)(v276 / v279);
    v282.i64[0] = 0x3F0000003F000000;
    v282.i64[1] = 0x3F0000003F000000;
    v283 = vaddq_f32(a3, v282);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v283.f32[0]), v579.val[1], *(float32x2_t *)v283.f32, 1), v579.val[2], v283, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v276;
    v284 = vmulq_n_f32(vaddq_f32(a4, v282), *(float *)&v281);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v278 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v284.f32[0]), v579.val[1], *(float32x2_t *)v284.f32, 1), v579.val[2], v284, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v285 = v6[231];
  if (v285 != v8 && (v285 & 0x40000000) != 0)
  {
    v286 = a2[1].i32[0] + 3;
    v287 = *(_QWORD **)a1[4];
    v288 = *v287;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v289 = *(_DWORD *)(*v287 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v289);
    v290 = (const float *)(*v287 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v289);
    v291 = *(_QWORD *)(v287[1] + 144);
    v580 = vld3_f32(v290);
    a3.f32[2] = (float)(v286 / v289);
    v292.i64[0] = 0x3F0000003F000000;
    v292.i64[1] = 0x3F0000003F000000;
    v293 = vaddq_f32(a3, v292);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v293.f32[0]), v580.val[1], *(float32x2_t *)v293.f32, 1), v580.val[2], v293, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v286;
    v294 = vmulq_n_f32(vaddq_f32(a4, v292), *(float *)&v291);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v288 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v294.f32[0]), v580.val[1], *(float32x2_t *)v294.f32, 1), v580.val[2], v294, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v295 = v6[232];
  if (v295 != v8 && (v295 & 0x40000000) != 0)
  {
    v296 = a2[1].i32[0] + 3;
    v297 = a2->i32[0];
    v298 = a2->i32[1] + 5;
    v299 = *(_QWORD **)a1[4];
    v300 = *v299;
    v301 = (const float *)(*v299 + 1656);
    v302 = *(_DWORD *)(*v299 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v302);
    v303 = *(_QWORD *)(v299[1] + 144);
    a3.f32[1] = (float)(v298 / v302);
    a3.f32[2] = (float)(v296 / v302);
    v304.i64[0] = 0x3F0000003F000000;
    v304.i64[1] = 0x3F0000003F000000;
    v305 = vaddq_f32(a3, v304);
    v581 = vld3_f32(v301);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v305.f32[0]), v581.val[1], *(float32x2_t *)v305.f32, 1), v581.val[2], v305, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    *(float32x2_t *)v305.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v298, v297));
    v305.f32[2] = (float)v296;
    v306 = vmulq_n_f32(vaddq_f32(v305, v304), *(float *)&v303);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v300 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v306.f32[0]), v581.val[1], *(float32x2_t *)v306.f32, 1), v581.val[2], v306, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v307 = v6[233];
  if (v307 != v8 && (v307 & 0x40000000) != 0)
  {
    v308 = a2[1].i32[0] + 3;
    v309 = *(_QWORD **)a1[4];
    v310 = *v309;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v311 = *(_DWORD *)(*v309 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v311);
    v312 = (const float *)(*v309 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v311);
    v313 = *(_QWORD *)(v309[1] + 144);
    v582 = vld3_f32(v312);
    a3.f32[2] = (float)(v308 / v311);
    v314.i64[0] = 0x3F0000003F000000;
    v314.i64[1] = 0x3F0000003F000000;
    v315 = vaddq_f32(a3, v314);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v315.f32[0]), v582.val[1], *(float32x2_t *)v315.f32, 1), v582.val[2], v315, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v308;
    v316 = vmulq_n_f32(vaddq_f32(a4, v314), *(float *)&v313);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v310 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v316.f32[0]), v582.val[1], *(float32x2_t *)v316.f32, 1), v582.val[2], v316, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v317 = v6[234];
  if (v317 != v8 && (v317 & 0x40000000) != 0)
  {
    v318 = a2[1].i32[0] + 3;
    v319 = *(_QWORD **)a1[4];
    v320 = *v319;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v321 = *(_DWORD *)(*v319 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v321);
    v322 = (const float *)(*v319 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v321);
    v323 = *(_QWORD *)(v319[1] + 144);
    v583 = vld3_f32(v322);
    a3.f32[2] = (float)(v318 / v321);
    v324.i64[0] = 0x3F0000003F000000;
    v324.i64[1] = 0x3F0000003F000000;
    v325 = vaddq_f32(a3, v324);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v325.f32[0]), v583.val[1], *(float32x2_t *)v325.f32, 1), v583.val[2], v325, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v318;
    v326 = vmulq_n_f32(vaddq_f32(a4, v324), *(float *)&v323);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v320 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v326.f32[0]), v583.val[1], *(float32x2_t *)v326.f32, 1), v583.val[2], v326, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v327 = v6[235];
  if (v327 != v8 && (v327 & 0x40000000) != 0)
  {
    v328 = a2[1].i32[0] + 3;
    v329 = *(_QWORD **)a1[4];
    v330 = *v329;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v331 = *(_DWORD *)(*v329 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v331);
    v332 = (const float *)(*v329 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v331);
    v333 = *(_QWORD *)(v329[1] + 144);
    v584 = vld3_f32(v332);
    a3.f32[2] = (float)(v328 / v331);
    v334.i64[0] = 0x3F0000003F000000;
    v334.i64[1] = 0x3F0000003F000000;
    v335 = vaddq_f32(a3, v334);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v335.f32[0]), v584.val[1], *(float32x2_t *)v335.f32, 1), v584.val[2], v335, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v328;
    v336 = vmulq_n_f32(vaddq_f32(a4, v334), *(float *)&v333);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v330 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v336.f32[0]), v584.val[1], *(float32x2_t *)v336.f32, 1), v584.val[2], v336, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v337 = v6[236];
  if (v337 != v8 && (v337 & 0x40000000) != 0)
  {
    v338 = a2[1].i32[0] + 3;
    v339 = *(_QWORD **)a1[4];
    v340 = *v339;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v341 = *(_DWORD *)(*v339 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v341);
    v342 = (const float *)(*v339 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v341);
    v343 = *(_QWORD *)(v339[1] + 144);
    v585 = vld3_f32(v342);
    a3.f32[2] = (float)(v338 / v341);
    v344.i64[0] = 0x3F0000003F000000;
    v344.i64[1] = 0x3F0000003F000000;
    v345 = vaddq_f32(a3, v344);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v345.f32[0]), v585.val[1], *(float32x2_t *)v345.f32, 1), v585.val[2], v345, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v338;
    v346 = vmulq_n_f32(vaddq_f32(a4, v344), *(float *)&v343);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v340 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v346.f32[0]), v585.val[1], *(float32x2_t *)v346.f32, 1), v585.val[2], v346, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v347 = v6[237];
  if (v347 != v8 && (v347 & 0x40000000) != 0)
  {
    v348 = a2[1].i32[0] + 3;
    v349 = *(_QWORD **)a1[4];
    v350 = *v349;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v351 = *(_DWORD *)(*v349 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v351);
    v352 = (const float *)(*v349 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v351);
    v353 = *(_QWORD *)(v349[1] + 144);
    v586 = vld3_f32(v352);
    a3.f32[2] = (float)(v348 / v351);
    v354.i64[0] = 0x3F0000003F000000;
    v354.i64[1] = 0x3F0000003F000000;
    v355 = vaddq_f32(a3, v354);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v355.f32[0]), v586.val[1], *(float32x2_t *)v355.f32, 1), v586.val[2], v355, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v348;
    v356 = vmulq_n_f32(vaddq_f32(a4, v354), *(float *)&v353);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v350 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v356.f32[0]), v586.val[1], *(float32x2_t *)v356.f32, 1), v586.val[2], v356, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v357 = v6[238];
  if (v357 != v8 && (v357 & 0x40000000) != 0)
  {
    v358 = a2[1].i32[0] + 3;
    v359 = *(_QWORD **)a1[4];
    v360 = *v359;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v361 = *(_DWORD *)(*v359 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v361);
    v362 = (const float *)(*v359 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v361);
    v363 = *(_QWORD *)(v359[1] + 144);
    v587 = vld3_f32(v362);
    a3.f32[2] = (float)(v358 / v361);
    v364.i64[0] = 0x3F0000003F000000;
    v364.i64[1] = 0x3F0000003F000000;
    v365 = vaddq_f32(a3, v364);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v365.f32[0]), v587.val[1], *(float32x2_t *)v365.f32, 1), v587.val[2], v365, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v358;
    v366 = vmulq_n_f32(vaddq_f32(a4, v364), *(float *)&v363);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v360 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v366.f32[0]), v587.val[1], *(float32x2_t *)v366.f32, 1), v587.val[2], v366, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v367 = v6[239];
  if (v367 != v8 && (v367 & 0x40000000) != 0)
  {
    v368 = a2[1].i32[0] + 3;
    v369 = *(_QWORD **)a1[4];
    v370 = *v369;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v371 = *(_DWORD *)(*v369 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v371);
    v372 = (const float *)(*v369 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v371);
    v373 = *(_QWORD *)(v369[1] + 144);
    v588 = vld3_f32(v372);
    a3.f32[2] = (float)(v368 / v371);
    v374.i64[0] = 0x3F0000003F000000;
    v374.i64[1] = 0x3F0000003F000000;
    v375 = vaddq_f32(a3, v374);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v375.f32[0]), v588.val[1], *(float32x2_t *)v375.f32, 1), v588.val[2], v375, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v368;
    v376 = vmulq_n_f32(vaddq_f32(a4, v374), *(float *)&v373);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v370 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v376.f32[0]), v588.val[1], *(float32x2_t *)v376.f32, 1), v588.val[2], v376, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v377 = v6[240];
  if (v377 != v8 && (v377 & 0x40000000) != 0)
  {
    v378 = a2[1].i32[0] + 3;
    v379 = a2->i32[0];
    v380 = a2->i32[1] + 6;
    v381 = *(_QWORD **)a1[4];
    v382 = *v381;
    v383 = (const float *)(*v381 + 1656);
    v384 = *(_DWORD *)(*v381 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v384);
    v385 = *(_QWORD *)(v381[1] + 144);
    a3.f32[1] = (float)(v380 / v384);
    a3.f32[2] = (float)(v378 / v384);
    v386.i64[0] = 0x3F0000003F000000;
    v386.i64[1] = 0x3F0000003F000000;
    v387 = vaddq_f32(a3, v386);
    v589 = vld3_f32(v383);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v387.f32[0]), v589.val[1], *(float32x2_t *)v387.f32, 1), v589.val[2], v387, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    *(float32x2_t *)v387.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v380, v379));
    v387.f32[2] = (float)v378;
    v388 = vmulq_n_f32(vaddq_f32(v387, v386), *(float *)&v385);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v382 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v388.f32[0]), v589.val[1], *(float32x2_t *)v388.f32, 1), v589.val[2], v388, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v389 = v6[241];
  if (v389 != v8 && (v389 & 0x40000000) != 0)
  {
    v390 = a2[1].i32[0] + 3;
    v391 = *(_QWORD **)a1[4];
    v392 = *v391;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v393 = *(_DWORD *)(*v391 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v393);
    v394 = (const float *)(*v391 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v393);
    v395 = *(_QWORD *)(v391[1] + 144);
    v590 = vld3_f32(v394);
    a3.f32[2] = (float)(v390 / v393);
    v396.i64[0] = 0x3F0000003F000000;
    v396.i64[1] = 0x3F0000003F000000;
    v397 = vaddq_f32(a3, v396);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v397.f32[0]), v590.val[1], *(float32x2_t *)v397.f32, 1), v590.val[2], v397, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v390;
    v398 = vmulq_n_f32(vaddq_f32(a4, v396), *(float *)&v395);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v392 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v398.f32[0]), v590.val[1], *(float32x2_t *)v398.f32, 1), v590.val[2], v398, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v399 = v6[242];
  if (v399 != v8 && (v399 & 0x40000000) != 0)
  {
    v400 = a2[1].i32[0] + 3;
    v401 = *(_QWORD **)a1[4];
    v402 = *v401;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v403 = *(_DWORD *)(*v401 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v403);
    v404 = (const float *)(*v401 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v403);
    v405 = *(_QWORD *)(v401[1] + 144);
    v591 = vld3_f32(v404);
    a3.f32[2] = (float)(v400 / v403);
    v406.i64[0] = 0x3F0000003F000000;
    v406.i64[1] = 0x3F0000003F000000;
    v407 = vaddq_f32(a3, v406);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v407.f32[0]), v591.val[1], *(float32x2_t *)v407.f32, 1), v591.val[2], v407, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v400;
    v408 = vmulq_n_f32(vaddq_f32(a4, v406), *(float *)&v405);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v402 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v408.f32[0]), v591.val[1], *(float32x2_t *)v408.f32, 1), v591.val[2], v408, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v409 = v6[243];
  if (v409 != v8 && (v409 & 0x40000000) != 0)
  {
    v410 = a2[1].i32[0] + 3;
    v411 = *(_QWORD **)a1[4];
    v412 = *v411;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v413 = *(_DWORD *)(*v411 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v413);
    v414 = (const float *)(*v411 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v413);
    v415 = *(_QWORD *)(v411[1] + 144);
    v592 = vld3_f32(v414);
    a3.f32[2] = (float)(v410 / v413);
    v416.i64[0] = 0x3F0000003F000000;
    v416.i64[1] = 0x3F0000003F000000;
    v417 = vaddq_f32(a3, v416);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v417.f32[0]), v592.val[1], *(float32x2_t *)v417.f32, 1), v592.val[2], v417, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v410;
    v418 = vmulq_n_f32(vaddq_f32(a4, v416), *(float *)&v415);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v412 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v418.f32[0]), v592.val[1], *(float32x2_t *)v418.f32, 1), v592.val[2], v418, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v419 = v6[244];
  if (v419 != v8 && (v419 & 0x40000000) != 0)
  {
    v420 = a2[1].i32[0] + 3;
    v421 = *(_QWORD **)a1[4];
    v422 = *v421;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v423 = *(_DWORD *)(*v421 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v423);
    v424 = (const float *)(*v421 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v423);
    v425 = *(_QWORD *)(v421[1] + 144);
    v593 = vld3_f32(v424);
    a3.f32[2] = (float)(v420 / v423);
    v426.i64[0] = 0x3F0000003F000000;
    v426.i64[1] = 0x3F0000003F000000;
    v427 = vaddq_f32(a3, v426);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v427.f32[0]), v593.val[1], *(float32x2_t *)v427.f32, 1), v593.val[2], v427, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v420;
    v428 = vmulq_n_f32(vaddq_f32(a4, v426), *(float *)&v425);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v422 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v428.f32[0]), v593.val[1], *(float32x2_t *)v428.f32, 1), v593.val[2], v428, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v429 = v6[245];
  if (v429 != v8 && (v429 & 0x40000000) != 0)
  {
    v430 = a2[1].i32[0] + 3;
    v431 = *(_QWORD **)a1[4];
    v432 = *v431;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v433 = *(_DWORD *)(*v431 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v433);
    v434 = (const float *)(*v431 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v433);
    v435 = *(_QWORD *)(v431[1] + 144);
    v594 = vld3_f32(v434);
    a3.f32[2] = (float)(v430 / v433);
    v436.i64[0] = 0x3F0000003F000000;
    v436.i64[1] = 0x3F0000003F000000;
    v437 = vaddq_f32(a3, v436);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v437.f32[0]), v594.val[1], *(float32x2_t *)v437.f32, 1), v594.val[2], v437, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v430;
    v438 = vmulq_n_f32(vaddq_f32(a4, v436), *(float *)&v435);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v432 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v438.f32[0]), v594.val[1], *(float32x2_t *)v438.f32, 1), v594.val[2], v438, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v439 = v6[246];
  if (v439 != v8 && (v439 & 0x40000000) != 0)
  {
    v440 = a2[1].i32[0] + 3;
    v441 = *(_QWORD **)a1[4];
    v442 = *v441;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v443 = *(_DWORD *)(*v441 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v443);
    v444 = (const float *)(*v441 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v443);
    v445 = *(_QWORD *)(v441[1] + 144);
    v595 = vld3_f32(v444);
    a3.f32[2] = (float)(v440 / v443);
    v446.i64[0] = 0x3F0000003F000000;
    v446.i64[1] = 0x3F0000003F000000;
    v447 = vaddq_f32(a3, v446);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v447.f32[0]), v595.val[1], *(float32x2_t *)v447.f32, 1), v595.val[2], v447, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v440;
    v448 = vmulq_n_f32(vaddq_f32(a4, v446), *(float *)&v445);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v442 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v448.f32[0]), v595.val[1], *(float32x2_t *)v448.f32, 1), v595.val[2], v448, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v449 = v6[247];
  if (v449 != v8 && (v449 & 0x40000000) != 0)
  {
    v450 = a2[1].i32[0] + 3;
    v451 = *(_QWORD **)a1[4];
    v452 = *v451;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v453 = *(_DWORD *)(*v451 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v453);
    v454 = (const float *)(*v451 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v453);
    v455 = *(_QWORD *)(v451[1] + 144);
    v596 = vld3_f32(v454);
    a3.f32[2] = (float)(v450 / v453);
    v456.i64[0] = 0x3F0000003F000000;
    v456.i64[1] = 0x3F0000003F000000;
    v457 = vaddq_f32(a3, v456);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v457.f32[0]), v596.val[1], *(float32x2_t *)v457.f32, 1), v596.val[2], v457, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v450;
    v458 = vmulq_n_f32(vaddq_f32(a4, v456), *(float *)&v455);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v452 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v458.f32[0]), v596.val[1], *(float32x2_t *)v458.f32, 1), v596.val[2], v458, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v459 = v6[248];
  if (v459 != v8 && (v459 & 0x40000000) != 0)
  {
    v460 = a2[1].i32[0] + 3;
    v461 = a2->i32[0];
    v462 = a2->i32[1] + 7;
    v463 = *(_QWORD **)a1[4];
    v464 = *v463;
    v465 = (const float *)(*v463 + 1656);
    v466 = *(_DWORD *)(*v463 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v466);
    v467 = *(_QWORD *)(v463[1] + 144);
    a3.f32[1] = (float)(v462 / v466);
    a3.f32[2] = (float)(v460 / v466);
    v468.i64[0] = 0x3F0000003F000000;
    v468.i64[1] = 0x3F0000003F000000;
    v469 = vaddq_f32(a3, v468);
    v597 = vld3_f32(v465);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v469.f32[0]), v597.val[1], *(float32x2_t *)v469.f32, 1), v597.val[2], v469, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    *(float32x2_t *)v469.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v462, v461));
    v469.f32[2] = (float)v460;
    v470 = vmulq_n_f32(vaddq_f32(v469, v468), *(float *)&v467);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v464 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v470.f32[0]), v597.val[1], *(float32x2_t *)v470.f32, 1), v597.val[2], v470, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v471 = v6[249];
  if (v471 != v8 && (v471 & 0x40000000) != 0)
  {
    v472 = a2[1].i32[0] + 3;
    v473 = *(_QWORD **)a1[4];
    v474 = *v473;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v475 = *(_DWORD *)(*v473 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v475);
    v476 = (const float *)(*v473 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v475);
    v477 = *(_QWORD *)(v473[1] + 144);
    v598 = vld3_f32(v476);
    a3.f32[2] = (float)(v472 / v475);
    v478.i64[0] = 0x3F0000003F000000;
    v478.i64[1] = 0x3F0000003F000000;
    v479 = vaddq_f32(a3, v478);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v479.f32[0]), v598.val[1], *(float32x2_t *)v479.f32, 1), v598.val[2], v479, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v472;
    v480 = vmulq_n_f32(vaddq_f32(a4, v478), *(float *)&v477);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v474 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v480.f32[0]), v598.val[1], *(float32x2_t *)v480.f32, 1), v598.val[2], v480, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v481 = v6[250];
  if (v481 != v8 && (v481 & 0x40000000) != 0)
  {
    v482 = a2[1].i32[0] + 3;
    v483 = *(_QWORD **)a1[4];
    v484 = *v483;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v485 = *(_DWORD *)(*v483 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v485);
    v486 = (const float *)(*v483 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v485);
    v487 = *(_QWORD *)(v483[1] + 144);
    v599 = vld3_f32(v486);
    a3.f32[2] = (float)(v482 / v485);
    v488.i64[0] = 0x3F0000003F000000;
    v488.i64[1] = 0x3F0000003F000000;
    v489 = vaddq_f32(a3, v488);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v489.f32[0]), v599.val[1], *(float32x2_t *)v489.f32, 1), v599.val[2], v489, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v482;
    v490 = vmulq_n_f32(vaddq_f32(a4, v488), *(float *)&v487);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v484 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v490.f32[0]), v599.val[1], *(float32x2_t *)v490.f32, 1), v599.val[2], v490, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v491 = v6[251];
  if (v491 != v8 && (v491 & 0x40000000) != 0)
  {
    v492 = a2[1].i32[0] + 3;
    v493 = *(_QWORD **)a1[4];
    v494 = *v493;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v495 = *(_DWORD *)(*v493 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v495);
    v496 = (const float *)(*v493 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v495);
    v497 = *(_QWORD *)(v493[1] + 144);
    v600 = vld3_f32(v496);
    a3.f32[2] = (float)(v492 / v495);
    v498.i64[0] = 0x3F0000003F000000;
    v498.i64[1] = 0x3F0000003F000000;
    v499 = vaddq_f32(a3, v498);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v499.f32[0]), v600.val[1], *(float32x2_t *)v499.f32, 1), v600.val[2], v499, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v492;
    v500 = vmulq_n_f32(vaddq_f32(a4, v498), *(float *)&v497);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v494 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v500.f32[0]), v600.val[1], *(float32x2_t *)v500.f32, 1), v600.val[2], v500, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v501 = v6[252];
  if (v501 != v8 && (v501 & 0x40000000) != 0)
  {
    v502 = a2[1].i32[0] + 3;
    v503 = *(_QWORD **)a1[4];
    v504 = *v503;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v505 = *(_DWORD *)(*v503 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v505);
    v506 = (const float *)(*v503 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v505);
    v507 = *(_QWORD *)(v503[1] + 144);
    v601 = vld3_f32(v506);
    a3.f32[2] = (float)(v502 / v505);
    v508.i64[0] = 0x3F0000003F000000;
    v508.i64[1] = 0x3F0000003F000000;
    v509 = vaddq_f32(a3, v508);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v509.f32[0]), v601.val[1], *(float32x2_t *)v509.f32, 1), v601.val[2], v509, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v502;
    v510 = vmulq_n_f32(vaddq_f32(a4, v508), *(float *)&v507);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v504 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v510.f32[0]), v601.val[1], *(float32x2_t *)v510.f32, 1), v601.val[2], v510, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v511 = v6[253];
  if (v511 != v8 && (v511 & 0x40000000) != 0)
  {
    v512 = a2[1].i32[0] + 3;
    v513 = *(_QWORD **)a1[4];
    v514 = *v513;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v515 = *(_DWORD *)(*v513 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v515);
    v516 = (const float *)(*v513 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v515);
    v517 = *(_QWORD *)(v513[1] + 144);
    v602 = vld3_f32(v516);
    a3.f32[2] = (float)(v512 / v515);
    v518.i64[0] = 0x3F0000003F000000;
    v518.i64[1] = 0x3F0000003F000000;
    v519 = vaddq_f32(a3, v518);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v519.f32[0]), v602.val[1], *(float32x2_t *)v519.f32, 1), v602.val[2], v519, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v512;
    v520 = vmulq_n_f32(vaddq_f32(a4, v518), *(float *)&v517);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v514 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v520.f32[0]), v602.val[1], *(float32x2_t *)v520.f32, 1), v602.val[2], v520, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v521 = v6[254];
  if (v521 != v8 && (v521 & 0x40000000) != 0)
  {
    v522 = a2[1].i32[0] + 3;
    v523 = *(_QWORD **)a1[4];
    v524 = *v523;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v525 = *(_DWORD *)(*v523 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v525);
    v526 = (const float *)(*v523 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v525);
    v527 = *(_QWORD *)(v523[1] + 144);
    v603 = vld3_f32(v526);
    a3.f32[2] = (float)(v522 / v525);
    v528.i64[0] = 0x3F0000003F000000;
    v528.i64[1] = 0x3F0000003F000000;
    v529 = vaddq_f32(a3, v528);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v529.f32[0]), v603.val[1], *(float32x2_t *)v529.f32, 1), v603.val[2], v529, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v522;
    v530 = vmulq_n_f32(vaddq_f32(a4, v528), *(float *)&v527);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v524 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v530.f32[0]), v603.val[1], *(float32x2_t *)v530.f32, 1), v603.val[2], v530, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v531 = v6[255];
  if (v531 != v8 && (v531 & 0x40000000) != 0)
  {
    v532 = a2[1].i32[0] + 3;
    v533 = *(_QWORD **)a1[4];
    v534 = *v533;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v535 = *(_DWORD *)(*v533 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v535);
    v536 = (const float *)(*v533 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v535);
    v537 = *(_QWORD *)(v533[1] + 144);
    v604 = vld3_f32(v536);
    a3.f32[2] = (float)(v532 / v535);
    v538.i64[0] = 0x3F0000003F000000;
    v538.i64[1] = 0x3F0000003F000000;
    v539 = vaddq_f32(a3, v538);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v539.f32[0]), v604.val[1], *(float32x2_t *)v539.f32, 1), v604.val[2], v539, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v532;
    v540 = vmulq_n_f32(vaddq_f32(a4, v538), *(float *)&v537);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v534 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v540.f32[0]), v604.val[1], *(float32x2_t *)v540.f32, 1), v604.val[2], v540, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v541 = v6[256];
  if (v541 != v8 && (v541 & 0x40000000) != 0)
  {
    v542 = a2[1].i32[0] + 4;
    v543 = *(_QWORD **)a1[4];
    v544 = *v543;
    v545 = *(_DWORD *)(*v543 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v545);
    v546 = (const float *)(*v543 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v545);
    v547 = *(_QWORD *)(v543[1] + 144);
    v605 = vld3_f32(v546);
    a3.f32[2] = (float)(v542 / v545);
    v548.i64[0] = 0x3F0000003F000000;
    v548.i64[1] = 0x3F0000003F000000;
    v549 = vaddq_f32(a3, v548);
    v552 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v549.f32[0]), v605.val[1], *(float32x2_t *)v549.f32, 1), v605.val[2], v549, 2), (float32x2_t)0xBF000000BF000000));
    v553 = 0;
    a4.f32[2] = (float)v542;
    v550 = vmulq_n_f32(vaddq_f32(a4, v548), *(float *)&v547);
    v554 = &v552;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v544 + 64), (int *)&v552, (uint64_t)&unk_2245BA939, (uint64_t **)&v554)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v550.f32[0]), v605.val[1], *(float32x2_t *)v550.f32, 1), v605.val[2], v550, 2);
  }
  return sub_2239FC2DC(a1, a2, a3, a4);
}

uint64_t *sub_2239FC2DC(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  __int32 v23;
  int v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  const float *v28;
  int v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x2_t v34;
  uint64_t *v35;
  int v36;
  __int32 v38;
  int v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  const float *v43;
  int v44;
  uint64_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  int v49;
  __int32 v51;
  int v52;
  int v53;
  _QWORD *v54;
  uint64_t v55;
  const float *v56;
  int v57;
  uint64_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  int v62;
  __int32 v64;
  int v65;
  int v66;
  _QWORD *v67;
  uint64_t v68;
  const float *v69;
  int v70;
  uint64_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  int v75;
  __int32 v77;
  int v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  const float *v82;
  int v83;
  uint64_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  int v88;
  __int32 v90;
  int v91;
  int v92;
  _QWORD *v93;
  uint64_t v94;
  const float *v95;
  int v96;
  uint64_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  int v101;
  __int32 v103;
  int v104;
  int v105;
  _QWORD *v106;
  uint64_t v107;
  const float *v108;
  int v109;
  uint64_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  int v114;
  __int32 v115;
  int v116;
  _QWORD *v117;
  uint64_t v118;
  const float *v119;
  int v120;
  uint64_t v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  int v125;
  int v126;
  _QWORD *v127;
  uint64_t v128;
  int v129;
  const float *v130;
  uint64_t v131;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  int v135;
  int v136;
  _QWORD *v137;
  uint64_t v138;
  int v139;
  const float *v140;
  uint64_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  int v145;
  int v146;
  _QWORD *v147;
  uint64_t v148;
  int v149;
  const float *v150;
  uint64_t v151;
  float32x4_t v152;
  float32x4_t v153;
  float32x4_t v154;
  int v155;
  int v156;
  _QWORD *v157;
  uint64_t v158;
  int v159;
  const float *v160;
  uint64_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  int v165;
  int v166;
  _QWORD *v167;
  uint64_t v168;
  int v169;
  const float *v170;
  uint64_t v171;
  float32x4_t v172;
  float32x4_t v173;
  float32x4_t v174;
  int v175;
  int v176;
  _QWORD *v177;
  uint64_t v178;
  int v179;
  const float *v180;
  uint64_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  int v185;
  int v186;
  _QWORD *v187;
  uint64_t v188;
  int v189;
  const float *v190;
  uint64_t v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  int v195;
  int v196;
  __int32 v197;
  int v198;
  _QWORD *v199;
  uint64_t v200;
  const float *v201;
  int v202;
  uint64_t v203;
  float32x4_t v204;
  float32x4_t v205;
  float32x4_t v206;
  int v207;
  int v208;
  _QWORD *v209;
  uint64_t v210;
  int v211;
  const float *v212;
  uint64_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  int v217;
  int v218;
  _QWORD *v219;
  uint64_t v220;
  int v221;
  const float *v222;
  uint64_t v223;
  float32x4_t v224;
  float32x4_t v225;
  float32x4_t v226;
  int v227;
  int v228;
  _QWORD *v229;
  uint64_t v230;
  int v231;
  const float *v232;
  uint64_t v233;
  float32x4_t v234;
  float32x4_t v235;
  float32x4_t v236;
  int v237;
  int v238;
  _QWORD *v239;
  uint64_t v240;
  int v241;
  const float *v242;
  uint64_t v243;
  float32x4_t v244;
  float32x4_t v245;
  float32x4_t v246;
  int v247;
  int v248;
  _QWORD *v249;
  uint64_t v250;
  int v251;
  const float *v252;
  uint64_t v253;
  float32x4_t v254;
  float32x4_t v255;
  float32x4_t v256;
  int v257;
  int v258;
  _QWORD *v259;
  uint64_t v260;
  int v261;
  const float *v262;
  uint64_t v263;
  float32x4_t v264;
  float32x4_t v265;
  float32x4_t v266;
  int v267;
  int v268;
  _QWORD *v269;
  uint64_t v270;
  int v271;
  const float *v272;
  uint64_t v273;
  float32x4_t v274;
  float32x4_t v275;
  float32x4_t v276;
  int v277;
  int v278;
  __int32 v279;
  int v280;
  _QWORD *v281;
  uint64_t v282;
  const float *v283;
  int v284;
  uint64_t v285;
  float32x4_t v286;
  float32x4_t v287;
  float32x4_t v288;
  int v289;
  int v290;
  _QWORD *v291;
  uint64_t v292;
  int v293;
  const float *v294;
  uint64_t v295;
  float32x4_t v296;
  float32x4_t v297;
  float32x4_t v298;
  int v299;
  int v300;
  _QWORD *v301;
  uint64_t v302;
  int v303;
  const float *v304;
  uint64_t v305;
  float32x4_t v306;
  float32x4_t v307;
  float32x4_t v308;
  int v309;
  int v310;
  _QWORD *v311;
  uint64_t v312;
  int v313;
  const float *v314;
  uint64_t v315;
  float32x4_t v316;
  float32x4_t v317;
  float32x4_t v318;
  int v319;
  int v320;
  _QWORD *v321;
  uint64_t v322;
  int v323;
  const float *v324;
  uint64_t v325;
  float32x4_t v326;
  float32x4_t v327;
  float32x4_t v328;
  int v329;
  int v330;
  _QWORD *v331;
  uint64_t v332;
  int v333;
  const float *v334;
  uint64_t v335;
  float32x4_t v336;
  float32x4_t v337;
  float32x4_t v338;
  int v339;
  int v340;
  _QWORD *v341;
  uint64_t v342;
  int v343;
  const float *v344;
  uint64_t v345;
  float32x4_t v346;
  float32x4_t v347;
  float32x4_t v348;
  int v349;
  int v350;
  _QWORD *v351;
  uint64_t v352;
  int v353;
  const float *v354;
  uint64_t v355;
  float32x4_t v356;
  float32x4_t v357;
  float32x4_t v358;
  int v359;
  int v360;
  __int32 v361;
  int v362;
  _QWORD *v363;
  uint64_t v364;
  const float *v365;
  int v366;
  uint64_t v367;
  float32x4_t v368;
  float32x4_t v369;
  float32x4_t v370;
  int v371;
  int v372;
  _QWORD *v373;
  uint64_t v374;
  int v375;
  const float *v376;
  uint64_t v377;
  float32x4_t v378;
  float32x4_t v379;
  float32x4_t v380;
  int v381;
  int v382;
  _QWORD *v383;
  uint64_t v384;
  int v385;
  const float *v386;
  uint64_t v387;
  float32x4_t v388;
  float32x4_t v389;
  float32x4_t v390;
  int v391;
  int v392;
  _QWORD *v393;
  uint64_t v394;
  int v395;
  const float *v396;
  uint64_t v397;
  float32x4_t v398;
  float32x4_t v399;
  float32x4_t v400;
  int v401;
  int v402;
  _QWORD *v403;
  uint64_t v404;
  int v405;
  const float *v406;
  uint64_t v407;
  float32x4_t v408;
  float32x4_t v409;
  float32x4_t v410;
  int v411;
  int v412;
  _QWORD *v413;
  uint64_t v414;
  int v415;
  const float *v416;
  uint64_t v417;
  float32x4_t v418;
  float32x4_t v419;
  float32x4_t v420;
  int v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  const float *v426;
  uint64_t v427;
  float32x4_t v428;
  float32x4_t v429;
  float32x4_t v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  int v435;
  const float *v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  int v442;
  __int32 v443;
  int v444;
  _QWORD *v445;
  uint64_t v446;
  const float *v447;
  int v448;
  uint64_t v449;
  float32x4_t v450;
  float32x4_t v451;
  float32x4_t v452;
  int v453;
  int v454;
  _QWORD *v455;
  uint64_t v456;
  int v457;
  const float *v458;
  uint64_t v459;
  float32x4_t v460;
  float32x4_t v461;
  float32x4_t v462;
  int v463;
  int v464;
  _QWORD *v465;
  uint64_t v466;
  int v467;
  const float *v468;
  uint64_t v469;
  float32x4_t v470;
  float32x4_t v471;
  float32x4_t v472;
  int v473;
  int v474;
  _QWORD *v475;
  uint64_t v476;
  int v477;
  const float *v478;
  uint64_t v479;
  float32x4_t v480;
  float32x4_t v481;
  float32x4_t v482;
  int v483;
  int v484;
  _QWORD *v485;
  uint64_t v486;
  int v487;
  const float *v488;
  uint64_t v489;
  float32x4_t v490;
  float32x4_t v491;
  float32x4_t v492;
  int v493;
  int v494;
  _QWORD *v495;
  uint64_t v496;
  int v497;
  const float *v498;
  uint64_t v499;
  float32x4_t v500;
  float32x4_t v501;
  float32x4_t v502;
  int v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  int v507;
  const float *v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  __int32 v525;
  int v526;
  _QWORD *v527;
  uint64_t v528;
  const float *v529;
  int v530;
  uint64_t v531;
  float32x4_t v532;
  float32x4_t v533;
  float32x4_t v534;
  int v535;
  int v536;
  _QWORD *v537;
  uint64_t v538;
  int v539;
  const float *v540;
  uint64_t v541;
  float32x4_t v542;
  float32x4_t v543;
  float32x4_t v544;
  int v545;
  int v546;
  _QWORD *v547;
  uint64_t v548;
  int v549;
  const float *v550;
  uint64_t v551;
  float32x4_t v552;
  float32x4_t v553;
  float32x4_t v554;
  int v555;
  int v556;
  _QWORD *v557;
  uint64_t v558;
  int v559;
  const float *v560;
  uint64_t v561;
  float32x4_t v562;
  float32x4_t v563;
  float32x4_t v564;
  int32x2_t v566;
  int v567;
  int32x2_t *v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;
  float32x2x3_t v618;
  float32x2x3_t v619;

  v6 = (_DWORD *)a1[1];
  v7 = v6[257];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[258];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v38 = a2->i32[1];
      v39 = a2[1].i32[0] + 4;
      v40 = a2->i32[0] + 2;
      v41 = *(_QWORD **)a1[4];
      v42 = *v41;
      v43 = (const float *)(*v41 + 1656);
      v44 = *(_DWORD *)(*v41 + 8);
      a3.f32[0] = (float)(v40 / v44);
      v45 = *(_QWORD *)(v41[1] + 144);
      a3.f32[1] = (float)(v38 / v44);
      a3.f32[2] = (float)(v39 / v44);
      v46.i64[0] = 0x3F0000003F000000;
      v46.i64[1] = 0x3F0000003F000000;
      v47 = vaddq_f32(a3, v46);
      v570 = vld3_f32(v43);
      v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v47.f32[0]), v570.val[1], *(float32x2_t *)v47.f32, 1), v570.val[2], v47, 2), (float32x2_t)0xBF000000BF000000));
      v567 = 0;
      *(float32x2_t *)v47.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v38, v40));
      v47.f32[2] = (float)v39;
      v48 = vmulq_n_f32(vaddq_f32(v47, v46), *(float *)&v45);
      v568 = &v566;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v42 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v48.f32[0]), v570.val[1], *(float32x2_t *)v48.f32, 1), v570.val[2], v48, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v49 = v6[259];
      if (v49 != v8 && (v49 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2->i32[1];
    v24 = a2[1].i32[0] + 4;
    v25 = a2->i32[0] + 1;
    v26 = *(_QWORD **)a1[4];
    v27 = *v26;
    v28 = (const float *)(*v26 + 1656);
    v29 = *(_DWORD *)(*v26 + 8);
    a3.f32[0] = (float)(v25 / v29);
    v30 = *(_QWORD *)(v26[1] + 144);
    a3.f32[1] = (float)(v23 / v29);
    a3.f32[2] = (float)(v24 / v29);
    v31.i64[0] = 0x3F0000003F000000;
    v31.i64[1] = 0x3F0000003F000000;
    v32 = vaddq_f32(a3, v31);
    v569 = vld3_f32(v28);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v32.f32[0]), v569.val[1], *(float32x2_t *)v32.f32, 1), v569.val[2], v32, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v32.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v23, v25));
    v32.f32[2] = (float)v24;
    v33 = vmulq_n_f32(vaddq_f32(v32, v31), *(float *)&v30);
    v34 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v33.f32[0]), v569.val[1], *(float32x2_t *)v33.f32, 1), v569.val[2], v33, 2);
    v568 = &v566;
    v35 = sub_223A17B10((float *)(v27 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568);
    *(uint64_t *)((char *)v35 + 28) = (uint64_t)v34;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v36 = v6[258];
    if (v36 != v8 && (v36 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[259];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v51 = a2->i32[1];
    v52 = a2[1].i32[0] + 4;
    v53 = a2->i32[0] + 3;
    v54 = *(_QWORD **)a1[4];
    v55 = *v54;
    v56 = (const float *)(*v54 + 1656);
    v57 = *(_DWORD *)(*v54 + 8);
    a3.f32[0] = (float)(v53 / v57);
    v58 = *(_QWORD *)(v54[1] + 144);
    a3.f32[1] = (float)(v51 / v57);
    a3.f32[2] = (float)(v52 / v57);
    v59.i64[0] = 0x3F0000003F000000;
    v59.i64[1] = 0x3F0000003F000000;
    v60 = vaddq_f32(a3, v59);
    v571 = vld3_f32(v56);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v60.f32[0]), v571.val[1], *(float32x2_t *)v60.f32, 1), v571.val[2], v60, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v60.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v51, v53));
    v60.f32[2] = (float)v52;
    v61 = vmulq_n_f32(vaddq_f32(v60, v59), *(float *)&v58);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v55 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v61.f32[0]), v571.val[1], *(float32x2_t *)v61.f32, 1), v571.val[2], v61, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v62 = v6[260];
    if (v62 != v8 && (v62 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[260];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v64 = a2->i32[1];
    v65 = a2[1].i32[0] + 4;
    v66 = a2->i32[0] + 4;
    v67 = *(_QWORD **)a1[4];
    v68 = *v67;
    v69 = (const float *)(*v67 + 1656);
    v70 = *(_DWORD *)(*v67 + 8);
    a3.f32[0] = (float)(v66 / v70);
    v71 = *(_QWORD *)(v67[1] + 144);
    a3.f32[1] = (float)(v64 / v70);
    a3.f32[2] = (float)(v65 / v70);
    v72.i64[0] = 0x3F0000003F000000;
    v72.i64[1] = 0x3F0000003F000000;
    v73 = vaddq_f32(a3, v72);
    v572 = vld3_f32(v69);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v73.f32[0]), v572.val[1], *(float32x2_t *)v73.f32, 1), v572.val[2], v73, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v73.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v64, v66));
    v73.f32[2] = (float)v65;
    v74 = vmulq_n_f32(vaddq_f32(v73, v72), *(float *)&v71);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v68 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v74.f32[0]), v572.val[1], *(float32x2_t *)v74.f32, 1), v572.val[2], v74, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v75 = v6[261];
    if (v75 != v8 && (v75 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[261];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v77 = a2->i32[1];
    v78 = a2[1].i32[0] + 4;
    v79 = a2->i32[0] + 5;
    v80 = *(_QWORD **)a1[4];
    v81 = *v80;
    v82 = (const float *)(*v80 + 1656);
    v83 = *(_DWORD *)(*v80 + 8);
    a3.f32[0] = (float)(v79 / v83);
    v84 = *(_QWORD *)(v80[1] + 144);
    a3.f32[1] = (float)(v77 / v83);
    a3.f32[2] = (float)(v78 / v83);
    v85.i64[0] = 0x3F0000003F000000;
    v85.i64[1] = 0x3F0000003F000000;
    v86 = vaddq_f32(a3, v85);
    v573 = vld3_f32(v82);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v86.f32[0]), v573.val[1], *(float32x2_t *)v86.f32, 1), v573.val[2], v86, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v86.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v77, v79));
    v86.f32[2] = (float)v78;
    v87 = vmulq_n_f32(vaddq_f32(v86, v85), *(float *)&v84);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v81 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v87.f32[0]), v573.val[1], *(float32x2_t *)v87.f32, 1), v573.val[2], v87, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v88 = v6[262];
    if (v88 != v8 && (v88 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[262];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v90 = a2->i32[1];
    v91 = a2[1].i32[0] + 4;
    v92 = a2->i32[0] + 6;
    v93 = *(_QWORD **)a1[4];
    v94 = *v93;
    v95 = (const float *)(*v93 + 1656);
    v96 = *(_DWORD *)(*v93 + 8);
    a3.f32[0] = (float)(v92 / v96);
    v97 = *(_QWORD *)(v93[1] + 144);
    a3.f32[1] = (float)(v90 / v96);
    a3.f32[2] = (float)(v91 / v96);
    v98.i64[0] = 0x3F0000003F000000;
    v98.i64[1] = 0x3F0000003F000000;
    v99 = vaddq_f32(a3, v98);
    v574 = vld3_f32(v95);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v99.f32[0]), v574.val[1], *(float32x2_t *)v99.f32, 1), v574.val[2], v99, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v99.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v90, v92));
    v99.f32[2] = (float)v91;
    v100 = vmulq_n_f32(vaddq_f32(v99, v98), *(float *)&v97);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v94 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v100.f32[0]), v574.val[1], *(float32x2_t *)v100.f32, 1), v574.val[2], v100, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v101 = v6[263];
    if (v101 != v8 && (v101 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[263];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v103 = a2->i32[1];
    v104 = a2[1].i32[0] + 4;
    v105 = a2->i32[0] + 7;
    v106 = *(_QWORD **)a1[4];
    v107 = *v106;
    v108 = (const float *)(*v106 + 1656);
    v109 = *(_DWORD *)(*v106 + 8);
    a3.f32[0] = (float)(v105 / v109);
    v110 = *(_QWORD *)(v106[1] + 144);
    a3.f32[1] = (float)(v103 / v109);
    a3.f32[2] = (float)(v104 / v109);
    v111.i64[0] = 0x3F0000003F000000;
    v111.i64[1] = 0x3F0000003F000000;
    v112 = vaddq_f32(a3, v111);
    v575 = vld3_f32(v108);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v112.f32[0]), v575.val[1], *(float32x2_t *)v112.f32, 1), v575.val[2], v112, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v112.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v103, v105));
    v112.f32[2] = (float)v104;
    v113 = vmulq_n_f32(vaddq_f32(v112, v111), *(float *)&v110);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v107 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v113.f32[0]), v575.val[1], *(float32x2_t *)v113.f32, 1), v575.val[2], v113, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[264];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[264];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v114 = a2[1].i32[0] + 4;
    v115 = a2->i32[0];
    v116 = a2->i32[1] + 1;
    v117 = *(_QWORD **)a1[4];
    v118 = *v117;
    v119 = (const float *)(*v117 + 1656);
    v120 = *(_DWORD *)(*v117 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v120);
    v121 = *(_QWORD *)(v117[1] + 144);
    a3.f32[1] = (float)(v116 / v120);
    a3.f32[2] = (float)(v114 / v120);
    v122.i64[0] = 0x3F0000003F000000;
    v122.i64[1] = 0x3F0000003F000000;
    v123 = vaddq_f32(a3, v122);
    v576 = vld3_f32(v119);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v123.f32[0]), v576.val[1], *(float32x2_t *)v123.f32, 1), v576.val[2], v123, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v123.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v116, v115));
    v123.f32[2] = (float)v114;
    v124 = vmulq_n_f32(vaddq_f32(v123, v122), *(float *)&v121);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v118 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v124.f32[0]), v576.val[1], *(float32x2_t *)v124.f32, 1), v576.val[2], v124, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v125 = v6[265];
  if (v125 != v8 && (v125 & 0x40000000) != 0)
  {
    v126 = a2[1].i32[0] + 4;
    v127 = *(_QWORD **)a1[4];
    v128 = *v127;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v129 = *(_DWORD *)(*v127 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v129);
    v130 = (const float *)(*v127 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v129);
    v131 = *(_QWORD *)(v127[1] + 144);
    v577 = vld3_f32(v130);
    a3.f32[2] = (float)(v126 / v129);
    v132.i64[0] = 0x3F0000003F000000;
    v132.i64[1] = 0x3F0000003F000000;
    v133 = vaddq_f32(a3, v132);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v133.f32[0]), v577.val[1], *(float32x2_t *)v133.f32, 1), v577.val[2], v133, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v126;
    v134 = vmulq_n_f32(vaddq_f32(a4, v132), *(float *)&v131);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v128 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v134.f32[0]), v577.val[1], *(float32x2_t *)v134.f32, 1), v577.val[2], v134, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v135 = v6[266];
  if (v135 != v8 && (v135 & 0x40000000) != 0)
  {
    v136 = a2[1].i32[0] + 4;
    v137 = *(_QWORD **)a1[4];
    v138 = *v137;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v139 = *(_DWORD *)(*v137 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v139);
    v140 = (const float *)(*v137 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v139);
    v141 = *(_QWORD *)(v137[1] + 144);
    v578 = vld3_f32(v140);
    a3.f32[2] = (float)(v136 / v139);
    v142.i64[0] = 0x3F0000003F000000;
    v142.i64[1] = 0x3F0000003F000000;
    v143 = vaddq_f32(a3, v142);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v143.f32[0]), v578.val[1], *(float32x2_t *)v143.f32, 1), v578.val[2], v143, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v136;
    v144 = vmulq_n_f32(vaddq_f32(a4, v142), *(float *)&v141);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v138 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v144.f32[0]), v578.val[1], *(float32x2_t *)v144.f32, 1), v578.val[2], v144, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v145 = v6[267];
  if (v145 != v8 && (v145 & 0x40000000) != 0)
  {
    v146 = a2[1].i32[0] + 4;
    v147 = *(_QWORD **)a1[4];
    v148 = *v147;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v149 = *(_DWORD *)(*v147 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v149);
    v150 = (const float *)(*v147 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v149);
    v151 = *(_QWORD *)(v147[1] + 144);
    v579 = vld3_f32(v150);
    a3.f32[2] = (float)(v146 / v149);
    v152.i64[0] = 0x3F0000003F000000;
    v152.i64[1] = 0x3F0000003F000000;
    v153 = vaddq_f32(a3, v152);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v153.f32[0]), v579.val[1], *(float32x2_t *)v153.f32, 1), v579.val[2], v153, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v146;
    v154 = vmulq_n_f32(vaddq_f32(a4, v152), *(float *)&v151);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v148 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v154.f32[0]), v579.val[1], *(float32x2_t *)v154.f32, 1), v579.val[2], v154, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v155 = v6[268];
  if (v155 != v8 && (v155 & 0x40000000) != 0)
  {
    v156 = a2[1].i32[0] + 4;
    v157 = *(_QWORD **)a1[4];
    v158 = *v157;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v159 = *(_DWORD *)(*v157 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v159);
    v160 = (const float *)(*v157 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v159);
    v161 = *(_QWORD *)(v157[1] + 144);
    v580 = vld3_f32(v160);
    a3.f32[2] = (float)(v156 / v159);
    v162.i64[0] = 0x3F0000003F000000;
    v162.i64[1] = 0x3F0000003F000000;
    v163 = vaddq_f32(a3, v162);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v163.f32[0]), v580.val[1], *(float32x2_t *)v163.f32, 1), v580.val[2], v163, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v156;
    v164 = vmulq_n_f32(vaddq_f32(a4, v162), *(float *)&v161);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v158 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v164.f32[0]), v580.val[1], *(float32x2_t *)v164.f32, 1), v580.val[2], v164, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v165 = v6[269];
  if (v165 != v8 && (v165 & 0x40000000) != 0)
  {
    v166 = a2[1].i32[0] + 4;
    v167 = *(_QWORD **)a1[4];
    v168 = *v167;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v169 = *(_DWORD *)(*v167 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v169);
    v170 = (const float *)(*v167 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v169);
    v171 = *(_QWORD *)(v167[1] + 144);
    v581 = vld3_f32(v170);
    a3.f32[2] = (float)(v166 / v169);
    v172.i64[0] = 0x3F0000003F000000;
    v172.i64[1] = 0x3F0000003F000000;
    v173 = vaddq_f32(a3, v172);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v173.f32[0]), v581.val[1], *(float32x2_t *)v173.f32, 1), v581.val[2], v173, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v166;
    v174 = vmulq_n_f32(vaddq_f32(a4, v172), *(float *)&v171);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v168 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v174.f32[0]), v581.val[1], *(float32x2_t *)v174.f32, 1), v581.val[2], v174, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v175 = v6[270];
  if (v175 != v8 && (v175 & 0x40000000) != 0)
  {
    v176 = a2[1].i32[0] + 4;
    v177 = *(_QWORD **)a1[4];
    v178 = *v177;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v179 = *(_DWORD *)(*v177 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v179);
    v180 = (const float *)(*v177 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v179);
    v181 = *(_QWORD *)(v177[1] + 144);
    v582 = vld3_f32(v180);
    a3.f32[2] = (float)(v176 / v179);
    v182.i64[0] = 0x3F0000003F000000;
    v182.i64[1] = 0x3F0000003F000000;
    v183 = vaddq_f32(a3, v182);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v183.f32[0]), v582.val[1], *(float32x2_t *)v183.f32, 1), v582.val[2], v183, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v176;
    v184 = vmulq_n_f32(vaddq_f32(a4, v182), *(float *)&v181);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v178 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v184.f32[0]), v582.val[1], *(float32x2_t *)v184.f32, 1), v582.val[2], v184, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v185 = v6[271];
  if (v185 != v8 && (v185 & 0x40000000) != 0)
  {
    v186 = a2[1].i32[0] + 4;
    v187 = *(_QWORD **)a1[4];
    v188 = *v187;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v189 = *(_DWORD *)(*v187 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v189);
    v190 = (const float *)(*v187 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v189);
    v191 = *(_QWORD *)(v187[1] + 144);
    v583 = vld3_f32(v190);
    a3.f32[2] = (float)(v186 / v189);
    v192.i64[0] = 0x3F0000003F000000;
    v192.i64[1] = 0x3F0000003F000000;
    v193 = vaddq_f32(a3, v192);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v193.f32[0]), v583.val[1], *(float32x2_t *)v193.f32, 1), v583.val[2], v193, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v186;
    v194 = vmulq_n_f32(vaddq_f32(a4, v192), *(float *)&v191);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v188 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v194.f32[0]), v583.val[1], *(float32x2_t *)v194.f32, 1), v583.val[2], v194, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v195 = v6[272];
  if (v195 != v8 && (v195 & 0x40000000) != 0)
  {
    v196 = a2[1].i32[0] + 4;
    v197 = a2->i32[0];
    v198 = a2->i32[1] + 2;
    v199 = *(_QWORD **)a1[4];
    v200 = *v199;
    v201 = (const float *)(*v199 + 1656);
    v202 = *(_DWORD *)(*v199 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v202);
    v203 = *(_QWORD *)(v199[1] + 144);
    a3.f32[1] = (float)(v198 / v202);
    a3.f32[2] = (float)(v196 / v202);
    v204.i64[0] = 0x3F0000003F000000;
    v204.i64[1] = 0x3F0000003F000000;
    v205 = vaddq_f32(a3, v204);
    v584 = vld3_f32(v201);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v205.f32[0]), v584.val[1], *(float32x2_t *)v205.f32, 1), v584.val[2], v205, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v205.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v198, v197));
    v205.f32[2] = (float)v196;
    v206 = vmulq_n_f32(vaddq_f32(v205, v204), *(float *)&v203);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v200 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v206.f32[0]), v584.val[1], *(float32x2_t *)v206.f32, 1), v584.val[2], v206, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v207 = v6[273];
  if (v207 != v8 && (v207 & 0x40000000) != 0)
  {
    v208 = a2[1].i32[0] + 4;
    v209 = *(_QWORD **)a1[4];
    v210 = *v209;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v211 = *(_DWORD *)(*v209 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v211);
    v212 = (const float *)(*v209 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v211);
    v213 = *(_QWORD *)(v209[1] + 144);
    v585 = vld3_f32(v212);
    a3.f32[2] = (float)(v208 / v211);
    v214.i64[0] = 0x3F0000003F000000;
    v214.i64[1] = 0x3F0000003F000000;
    v215 = vaddq_f32(a3, v214);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v215.f32[0]), v585.val[1], *(float32x2_t *)v215.f32, 1), v585.val[2], v215, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v208;
    v216 = vmulq_n_f32(vaddq_f32(a4, v214), *(float *)&v213);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v210 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v216.f32[0]), v585.val[1], *(float32x2_t *)v216.f32, 1), v585.val[2], v216, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v217 = v6[274];
  if (v217 != v8 && (v217 & 0x40000000) != 0)
  {
    v218 = a2[1].i32[0] + 4;
    v219 = *(_QWORD **)a1[4];
    v220 = *v219;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v221 = *(_DWORD *)(*v219 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v221);
    v222 = (const float *)(*v219 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v221);
    v223 = *(_QWORD *)(v219[1] + 144);
    v586 = vld3_f32(v222);
    a3.f32[2] = (float)(v218 / v221);
    v224.i64[0] = 0x3F0000003F000000;
    v224.i64[1] = 0x3F0000003F000000;
    v225 = vaddq_f32(a3, v224);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v225.f32[0]), v586.val[1], *(float32x2_t *)v225.f32, 1), v586.val[2], v225, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v218;
    v226 = vmulq_n_f32(vaddq_f32(a4, v224), *(float *)&v223);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v220 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v226.f32[0]), v586.val[1], *(float32x2_t *)v226.f32, 1), v586.val[2], v226, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v227 = v6[275];
  if (v227 != v8 && (v227 & 0x40000000) != 0)
  {
    v228 = a2[1].i32[0] + 4;
    v229 = *(_QWORD **)a1[4];
    v230 = *v229;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v231 = *(_DWORD *)(*v229 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v231);
    v232 = (const float *)(*v229 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v231);
    v233 = *(_QWORD *)(v229[1] + 144);
    v587 = vld3_f32(v232);
    a3.f32[2] = (float)(v228 / v231);
    v234.i64[0] = 0x3F0000003F000000;
    v234.i64[1] = 0x3F0000003F000000;
    v235 = vaddq_f32(a3, v234);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v235.f32[0]), v587.val[1], *(float32x2_t *)v235.f32, 1), v587.val[2], v235, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v228;
    v236 = vmulq_n_f32(vaddq_f32(a4, v234), *(float *)&v233);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v230 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v236.f32[0]), v587.val[1], *(float32x2_t *)v236.f32, 1), v587.val[2], v236, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v237 = v6[276];
  if (v237 != v8 && (v237 & 0x40000000) != 0)
  {
    v238 = a2[1].i32[0] + 4;
    v239 = *(_QWORD **)a1[4];
    v240 = *v239;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v241 = *(_DWORD *)(*v239 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v241);
    v242 = (const float *)(*v239 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v241);
    v243 = *(_QWORD *)(v239[1] + 144);
    v588 = vld3_f32(v242);
    a3.f32[2] = (float)(v238 / v241);
    v244.i64[0] = 0x3F0000003F000000;
    v244.i64[1] = 0x3F0000003F000000;
    v245 = vaddq_f32(a3, v244);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v245.f32[0]), v588.val[1], *(float32x2_t *)v245.f32, 1), v588.val[2], v245, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v238;
    v246 = vmulq_n_f32(vaddq_f32(a4, v244), *(float *)&v243);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v240 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v246.f32[0]), v588.val[1], *(float32x2_t *)v246.f32, 1), v588.val[2], v246, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v247 = v6[277];
  if (v247 != v8 && (v247 & 0x40000000) != 0)
  {
    v248 = a2[1].i32[0] + 4;
    v249 = *(_QWORD **)a1[4];
    v250 = *v249;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v251 = *(_DWORD *)(*v249 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v251);
    v252 = (const float *)(*v249 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v251);
    v253 = *(_QWORD *)(v249[1] + 144);
    v589 = vld3_f32(v252);
    a3.f32[2] = (float)(v248 / v251);
    v254.i64[0] = 0x3F0000003F000000;
    v254.i64[1] = 0x3F0000003F000000;
    v255 = vaddq_f32(a3, v254);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v255.f32[0]), v589.val[1], *(float32x2_t *)v255.f32, 1), v589.val[2], v255, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v248;
    v256 = vmulq_n_f32(vaddq_f32(a4, v254), *(float *)&v253);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v250 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v256.f32[0]), v589.val[1], *(float32x2_t *)v256.f32, 1), v589.val[2], v256, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v257 = v6[278];
  if (v257 != v8 && (v257 & 0x40000000) != 0)
  {
    v258 = a2[1].i32[0] + 4;
    v259 = *(_QWORD **)a1[4];
    v260 = *v259;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v261 = *(_DWORD *)(*v259 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v261);
    v262 = (const float *)(*v259 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v261);
    v263 = *(_QWORD *)(v259[1] + 144);
    v590 = vld3_f32(v262);
    a3.f32[2] = (float)(v258 / v261);
    v264.i64[0] = 0x3F0000003F000000;
    v264.i64[1] = 0x3F0000003F000000;
    v265 = vaddq_f32(a3, v264);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v265.f32[0]), v590.val[1], *(float32x2_t *)v265.f32, 1), v590.val[2], v265, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v258;
    v266 = vmulq_n_f32(vaddq_f32(a4, v264), *(float *)&v263);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v260 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v266.f32[0]), v590.val[1], *(float32x2_t *)v266.f32, 1), v590.val[2], v266, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v267 = v6[279];
  if (v267 != v8 && (v267 & 0x40000000) != 0)
  {
    v268 = a2[1].i32[0] + 4;
    v269 = *(_QWORD **)a1[4];
    v270 = *v269;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v271 = *(_DWORD *)(*v269 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v271);
    v272 = (const float *)(*v269 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v271);
    v273 = *(_QWORD *)(v269[1] + 144);
    v591 = vld3_f32(v272);
    a3.f32[2] = (float)(v268 / v271);
    v274.i64[0] = 0x3F0000003F000000;
    v274.i64[1] = 0x3F0000003F000000;
    v275 = vaddq_f32(a3, v274);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v275.f32[0]), v591.val[1], *(float32x2_t *)v275.f32, 1), v591.val[2], v275, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v268;
    v276 = vmulq_n_f32(vaddq_f32(a4, v274), *(float *)&v273);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v270 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v276.f32[0]), v591.val[1], *(float32x2_t *)v276.f32, 1), v591.val[2], v276, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v277 = v6[280];
  if (v277 != v8 && (v277 & 0x40000000) != 0)
  {
    v278 = a2[1].i32[0] + 4;
    v279 = a2->i32[0];
    v280 = a2->i32[1] + 3;
    v281 = *(_QWORD **)a1[4];
    v282 = *v281;
    v283 = (const float *)(*v281 + 1656);
    v284 = *(_DWORD *)(*v281 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v284);
    v285 = *(_QWORD *)(v281[1] + 144);
    a3.f32[1] = (float)(v280 / v284);
    a3.f32[2] = (float)(v278 / v284);
    v286.i64[0] = 0x3F0000003F000000;
    v286.i64[1] = 0x3F0000003F000000;
    v287 = vaddq_f32(a3, v286);
    v592 = vld3_f32(v283);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v287.f32[0]), v592.val[1], *(float32x2_t *)v287.f32, 1), v592.val[2], v287, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v287.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v280, v279));
    v287.f32[2] = (float)v278;
    v288 = vmulq_n_f32(vaddq_f32(v287, v286), *(float *)&v285);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v282 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v288.f32[0]), v592.val[1], *(float32x2_t *)v288.f32, 1), v592.val[2], v288, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v289 = v6[281];
  if (v289 != v8 && (v289 & 0x40000000) != 0)
  {
    v290 = a2[1].i32[0] + 4;
    v291 = *(_QWORD **)a1[4];
    v292 = *v291;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v293 = *(_DWORD *)(*v291 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v293);
    v294 = (const float *)(*v291 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v293);
    v295 = *(_QWORD *)(v291[1] + 144);
    v593 = vld3_f32(v294);
    a3.f32[2] = (float)(v290 / v293);
    v296.i64[0] = 0x3F0000003F000000;
    v296.i64[1] = 0x3F0000003F000000;
    v297 = vaddq_f32(a3, v296);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v297.f32[0]), v593.val[1], *(float32x2_t *)v297.f32, 1), v593.val[2], v297, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v290;
    v298 = vmulq_n_f32(vaddq_f32(a4, v296), *(float *)&v295);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v292 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v298.f32[0]), v593.val[1], *(float32x2_t *)v298.f32, 1), v593.val[2], v298, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v299 = v6[282];
  if (v299 != v8 && (v299 & 0x40000000) != 0)
  {
    v300 = a2[1].i32[0] + 4;
    v301 = *(_QWORD **)a1[4];
    v302 = *v301;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v303 = *(_DWORD *)(*v301 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v303);
    v304 = (const float *)(*v301 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v303);
    v305 = *(_QWORD *)(v301[1] + 144);
    v594 = vld3_f32(v304);
    a3.f32[2] = (float)(v300 / v303);
    v306.i64[0] = 0x3F0000003F000000;
    v306.i64[1] = 0x3F0000003F000000;
    v307 = vaddq_f32(a3, v306);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v307.f32[0]), v594.val[1], *(float32x2_t *)v307.f32, 1), v594.val[2], v307, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v300;
    v308 = vmulq_n_f32(vaddq_f32(a4, v306), *(float *)&v305);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v302 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v308.f32[0]), v594.val[1], *(float32x2_t *)v308.f32, 1), v594.val[2], v308, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v309 = v6[283];
  if (v309 != v8 && (v309 & 0x40000000) != 0)
  {
    v310 = a2[1].i32[0] + 4;
    v311 = *(_QWORD **)a1[4];
    v312 = *v311;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v313 = *(_DWORD *)(*v311 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v313);
    v314 = (const float *)(*v311 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v313);
    v315 = *(_QWORD *)(v311[1] + 144);
    v595 = vld3_f32(v314);
    a3.f32[2] = (float)(v310 / v313);
    v316.i64[0] = 0x3F0000003F000000;
    v316.i64[1] = 0x3F0000003F000000;
    v317 = vaddq_f32(a3, v316);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v317.f32[0]), v595.val[1], *(float32x2_t *)v317.f32, 1), v595.val[2], v317, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v310;
    v318 = vmulq_n_f32(vaddq_f32(a4, v316), *(float *)&v315);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v312 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v318.f32[0]), v595.val[1], *(float32x2_t *)v318.f32, 1), v595.val[2], v318, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v319 = v6[284];
  if (v319 != v8 && (v319 & 0x40000000) != 0)
  {
    v320 = a2[1].i32[0] + 4;
    v321 = *(_QWORD **)a1[4];
    v322 = *v321;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v323 = *(_DWORD *)(*v321 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v323);
    v324 = (const float *)(*v321 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v323);
    v325 = *(_QWORD *)(v321[1] + 144);
    v596 = vld3_f32(v324);
    a3.f32[2] = (float)(v320 / v323);
    v326.i64[0] = 0x3F0000003F000000;
    v326.i64[1] = 0x3F0000003F000000;
    v327 = vaddq_f32(a3, v326);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v327.f32[0]), v596.val[1], *(float32x2_t *)v327.f32, 1), v596.val[2], v327, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v320;
    v328 = vmulq_n_f32(vaddq_f32(a4, v326), *(float *)&v325);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v322 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v328.f32[0]), v596.val[1], *(float32x2_t *)v328.f32, 1), v596.val[2], v328, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v329 = v6[285];
  if (v329 != v8 && (v329 & 0x40000000) != 0)
  {
    v330 = a2[1].i32[0] + 4;
    v331 = *(_QWORD **)a1[4];
    v332 = *v331;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v333 = *(_DWORD *)(*v331 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v333);
    v334 = (const float *)(*v331 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v333);
    v335 = *(_QWORD *)(v331[1] + 144);
    v597 = vld3_f32(v334);
    a3.f32[2] = (float)(v330 / v333);
    v336.i64[0] = 0x3F0000003F000000;
    v336.i64[1] = 0x3F0000003F000000;
    v337 = vaddq_f32(a3, v336);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v337.f32[0]), v597.val[1], *(float32x2_t *)v337.f32, 1), v597.val[2], v337, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v330;
    v338 = vmulq_n_f32(vaddq_f32(a4, v336), *(float *)&v335);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v332 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v338.f32[0]), v597.val[1], *(float32x2_t *)v338.f32, 1), v597.val[2], v338, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v339 = v6[286];
  if (v339 != v8 && (v339 & 0x40000000) != 0)
  {
    v340 = a2[1].i32[0] + 4;
    v341 = *(_QWORD **)a1[4];
    v342 = *v341;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v343 = *(_DWORD *)(*v341 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v343);
    v344 = (const float *)(*v341 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v343);
    v345 = *(_QWORD *)(v341[1] + 144);
    v598 = vld3_f32(v344);
    a3.f32[2] = (float)(v340 / v343);
    v346.i64[0] = 0x3F0000003F000000;
    v346.i64[1] = 0x3F0000003F000000;
    v347 = vaddq_f32(a3, v346);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v347.f32[0]), v598.val[1], *(float32x2_t *)v347.f32, 1), v598.val[2], v347, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v340;
    v348 = vmulq_n_f32(vaddq_f32(a4, v346), *(float *)&v345);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v342 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v348.f32[0]), v598.val[1], *(float32x2_t *)v348.f32, 1), v598.val[2], v348, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v349 = v6[287];
  if (v349 != v8 && (v349 & 0x40000000) != 0)
  {
    v350 = a2[1].i32[0] + 4;
    v351 = *(_QWORD **)a1[4];
    v352 = *v351;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v353 = *(_DWORD *)(*v351 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v353);
    v354 = (const float *)(*v351 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v353);
    v355 = *(_QWORD *)(v351[1] + 144);
    v599 = vld3_f32(v354);
    a3.f32[2] = (float)(v350 / v353);
    v356.i64[0] = 0x3F0000003F000000;
    v356.i64[1] = 0x3F0000003F000000;
    v357 = vaddq_f32(a3, v356);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v357.f32[0]), v599.val[1], *(float32x2_t *)v357.f32, 1), v599.val[2], v357, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v350;
    v358 = vmulq_n_f32(vaddq_f32(a4, v356), *(float *)&v355);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v352 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v358.f32[0]), v599.val[1], *(float32x2_t *)v358.f32, 1), v599.val[2], v358, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v359 = v6[288];
  if (v359 != v8 && (v359 & 0x40000000) != 0)
  {
    v360 = a2[1].i32[0] + 4;
    v361 = a2->i32[0];
    v362 = a2->i32[1] + 4;
    v363 = *(_QWORD **)a1[4];
    v364 = *v363;
    v365 = (const float *)(*v363 + 1656);
    v366 = *(_DWORD *)(*v363 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v366);
    v367 = *(_QWORD *)(v363[1] + 144);
    a3.f32[1] = (float)(v362 / v366);
    a3.f32[2] = (float)(v360 / v366);
    v368.i64[0] = 0x3F0000003F000000;
    v368.i64[1] = 0x3F0000003F000000;
    v369 = vaddq_f32(a3, v368);
    v600 = vld3_f32(v365);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v369.f32[0]), v600.val[1], *(float32x2_t *)v369.f32, 1), v600.val[2], v369, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v369.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v362, v361));
    v369.f32[2] = (float)v360;
    v370 = vmulq_n_f32(vaddq_f32(v369, v368), *(float *)&v367);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v364 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v370.f32[0]), v600.val[1], *(float32x2_t *)v370.f32, 1), v600.val[2], v370, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v371 = v6[289];
  if (v371 != v8 && (v371 & 0x40000000) != 0)
  {
    v372 = a2[1].i32[0] + 4;
    v373 = *(_QWORD **)a1[4];
    v374 = *v373;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v375 = *(_DWORD *)(*v373 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v375);
    v376 = (const float *)(*v373 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v375);
    v377 = *(_QWORD *)(v373[1] + 144);
    v601 = vld3_f32(v376);
    a3.f32[2] = (float)(v372 / v375);
    v378.i64[0] = 0x3F0000003F000000;
    v378.i64[1] = 0x3F0000003F000000;
    v379 = vaddq_f32(a3, v378);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v379.f32[0]), v601.val[1], *(float32x2_t *)v379.f32, 1), v601.val[2], v379, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v372;
    v380 = vmulq_n_f32(vaddq_f32(a4, v378), *(float *)&v377);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v374 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v380.f32[0]), v601.val[1], *(float32x2_t *)v380.f32, 1), v601.val[2], v380, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v381 = v6[290];
  if (v381 != v8 && (v381 & 0x40000000) != 0)
  {
    v382 = a2[1].i32[0] + 4;
    v383 = *(_QWORD **)a1[4];
    v384 = *v383;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v385 = *(_DWORD *)(*v383 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v385);
    v386 = (const float *)(*v383 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v385);
    v387 = *(_QWORD *)(v383[1] + 144);
    v602 = vld3_f32(v386);
    a3.f32[2] = (float)(v382 / v385);
    v388.i64[0] = 0x3F0000003F000000;
    v388.i64[1] = 0x3F0000003F000000;
    v389 = vaddq_f32(a3, v388);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v389.f32[0]), v602.val[1], *(float32x2_t *)v389.f32, 1), v602.val[2], v389, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v382;
    v390 = vmulq_n_f32(vaddq_f32(a4, v388), *(float *)&v387);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v384 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v390.f32[0]), v602.val[1], *(float32x2_t *)v390.f32, 1), v602.val[2], v390, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v391 = v6[291];
  if (v391 != v8 && (v391 & 0x40000000) != 0)
  {
    v392 = a2[1].i32[0] + 4;
    v393 = *(_QWORD **)a1[4];
    v394 = *v393;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v395 = *(_DWORD *)(*v393 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v395);
    v396 = (const float *)(*v393 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v395);
    v397 = *(_QWORD *)(v393[1] + 144);
    v603 = vld3_f32(v396);
    a3.f32[2] = (float)(v392 / v395);
    v398.i64[0] = 0x3F0000003F000000;
    v398.i64[1] = 0x3F0000003F000000;
    v399 = vaddq_f32(a3, v398);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v399.f32[0]), v603.val[1], *(float32x2_t *)v399.f32, 1), v603.val[2], v399, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v392;
    v400 = vmulq_n_f32(vaddq_f32(a4, v398), *(float *)&v397);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v394 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v400.f32[0]), v603.val[1], *(float32x2_t *)v400.f32, 1), v603.val[2], v400, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v401 = v6[292];
  if (v401 != v8 && (v401 & 0x40000000) != 0)
  {
    v402 = a2[1].i32[0] + 4;
    v403 = *(_QWORD **)a1[4];
    v404 = *v403;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v405 = *(_DWORD *)(*v403 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v405);
    v406 = (const float *)(*v403 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v405);
    v407 = *(_QWORD *)(v403[1] + 144);
    v604 = vld3_f32(v406);
    a3.f32[2] = (float)(v402 / v405);
    v408.i64[0] = 0x3F0000003F000000;
    v408.i64[1] = 0x3F0000003F000000;
    v409 = vaddq_f32(a3, v408);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v409.f32[0]), v604.val[1], *(float32x2_t *)v409.f32, 1), v604.val[2], v409, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v402;
    v410 = vmulq_n_f32(vaddq_f32(a4, v408), *(float *)&v407);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v404 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v410.f32[0]), v604.val[1], *(float32x2_t *)v410.f32, 1), v604.val[2], v410, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v411 = v6[293];
  if (v411 != v8 && (v411 & 0x40000000) != 0)
  {
    v412 = a2[1].i32[0] + 4;
    v413 = *(_QWORD **)a1[4];
    v414 = *v413;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v415 = *(_DWORD *)(*v413 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v415);
    v416 = (const float *)(*v413 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v415);
    v417 = *(_QWORD *)(v413[1] + 144);
    v605 = vld3_f32(v416);
    a3.f32[2] = (float)(v412 / v415);
    v418.i64[0] = 0x3F0000003F000000;
    v418.i64[1] = 0x3F0000003F000000;
    v419 = vaddq_f32(a3, v418);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v419.f32[0]), v605.val[1], *(float32x2_t *)v419.f32, 1), v605.val[2], v419, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v412;
    v420 = vmulq_n_f32(vaddq_f32(a4, v418), *(float *)&v417);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v414 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v420.f32[0]), v605.val[1], *(float32x2_t *)v420.f32, 1), v605.val[2], v420, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v421 = v6[294];
  if (v421 != v8 && (v421 & 0x40000000) != 0)
  {
    v422 = a2[1].i32[0] + 4;
    v423 = *(_QWORD **)a1[4];
    v424 = *v423;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v425 = *(_DWORD *)(*v423 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v425);
    v426 = (const float *)(*v423 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v425);
    v427 = *(_QWORD *)(v423[1] + 144);
    v606 = vld3_f32(v426);
    a3.f32[2] = (float)(v422 / v425);
    v428.i64[0] = 0x3F0000003F000000;
    v428.i64[1] = 0x3F0000003F000000;
    v429 = vaddq_f32(a3, v428);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v429.f32[0]), v606.val[1], *(float32x2_t *)v429.f32, 1), v606.val[2], v429, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v422;
    v430 = vmulq_n_f32(vaddq_f32(a4, v428), *(float *)&v427);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v424 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v430.f32[0]), v606.val[1], *(float32x2_t *)v430.f32, 1), v606.val[2], v430, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v431 = v6[295];
  if (v431 != v8 && (v431 & 0x40000000) != 0)
  {
    v432 = a2[1].i32[0] + 4;
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v435 = *(_DWORD *)(*v433 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v435);
    v436 = (const float *)(*v433 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v435);
    v437 = *(_QWORD *)(v433[1] + 144);
    v607 = vld3_f32(v436);
    a3.f32[2] = (float)(v432 / v435);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v439.f32[0]), v607.val[1], *(float32x2_t *)v439.f32, 1), v607.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v432;
    v440 = vmulq_n_f32(vaddq_f32(a4, v438), *(float *)&v437);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v440.f32[0]), v607.val[1], *(float32x2_t *)v440.f32, 1), v607.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[296];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2[1].i32[0] + 4;
    v443 = a2->i32[0];
    v444 = a2->i32[1] + 5;
    v445 = *(_QWORD **)a1[4];
    v446 = *v445;
    v447 = (const float *)(*v445 + 1656);
    v448 = *(_DWORD *)(*v445 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v448);
    v449 = *(_QWORD *)(v445[1] + 144);
    a3.f32[1] = (float)(v444 / v448);
    a3.f32[2] = (float)(v442 / v448);
    v450.i64[0] = 0x3F0000003F000000;
    v450.i64[1] = 0x3F0000003F000000;
    v451 = vaddq_f32(a3, v450);
    v608 = vld3_f32(v447);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v451.f32[0]), v608.val[1], *(float32x2_t *)v451.f32, 1), v608.val[2], v451, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v451.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v444, v443));
    v451.f32[2] = (float)v442;
    v452 = vmulq_n_f32(vaddq_f32(v451, v450), *(float *)&v449);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v446 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v452.f32[0]), v608.val[1], *(float32x2_t *)v452.f32, 1), v608.val[2], v452, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v453 = v6[297];
  if (v453 != v8 && (v453 & 0x40000000) != 0)
  {
    v454 = a2[1].i32[0] + 4;
    v455 = *(_QWORD **)a1[4];
    v456 = *v455;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v457 = *(_DWORD *)(*v455 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v457);
    v458 = (const float *)(*v455 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v457);
    v459 = *(_QWORD *)(v455[1] + 144);
    v609 = vld3_f32(v458);
    a3.f32[2] = (float)(v454 / v457);
    v460.i64[0] = 0x3F0000003F000000;
    v460.i64[1] = 0x3F0000003F000000;
    v461 = vaddq_f32(a3, v460);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v461.f32[0]), v609.val[1], *(float32x2_t *)v461.f32, 1), v609.val[2], v461, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v454;
    v462 = vmulq_n_f32(vaddq_f32(a4, v460), *(float *)&v459);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v456 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v462.f32[0]), v609.val[1], *(float32x2_t *)v462.f32, 1), v609.val[2], v462, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v463 = v6[298];
  if (v463 != v8 && (v463 & 0x40000000) != 0)
  {
    v464 = a2[1].i32[0] + 4;
    v465 = *(_QWORD **)a1[4];
    v466 = *v465;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v467 = *(_DWORD *)(*v465 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v467);
    v468 = (const float *)(*v465 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v467);
    v469 = *(_QWORD *)(v465[1] + 144);
    v610 = vld3_f32(v468);
    a3.f32[2] = (float)(v464 / v467);
    v470.i64[0] = 0x3F0000003F000000;
    v470.i64[1] = 0x3F0000003F000000;
    v471 = vaddq_f32(a3, v470);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v471.f32[0]), v610.val[1], *(float32x2_t *)v471.f32, 1), v610.val[2], v471, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v464;
    v472 = vmulq_n_f32(vaddq_f32(a4, v470), *(float *)&v469);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v466 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v472.f32[0]), v610.val[1], *(float32x2_t *)v472.f32, 1), v610.val[2], v472, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v473 = v6[299];
  if (v473 != v8 && (v473 & 0x40000000) != 0)
  {
    v474 = a2[1].i32[0] + 4;
    v475 = *(_QWORD **)a1[4];
    v476 = *v475;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v477 = *(_DWORD *)(*v475 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v477);
    v478 = (const float *)(*v475 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v477);
    v479 = *(_QWORD *)(v475[1] + 144);
    v611 = vld3_f32(v478);
    a3.f32[2] = (float)(v474 / v477);
    v480.i64[0] = 0x3F0000003F000000;
    v480.i64[1] = 0x3F0000003F000000;
    v481 = vaddq_f32(a3, v480);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v481.f32[0]), v611.val[1], *(float32x2_t *)v481.f32, 1), v611.val[2], v481, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v474;
    v482 = vmulq_n_f32(vaddq_f32(a4, v480), *(float *)&v479);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v476 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v482.f32[0]), v611.val[1], *(float32x2_t *)v482.f32, 1), v611.val[2], v482, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v483 = v6[300];
  if (v483 != v8 && (v483 & 0x40000000) != 0)
  {
    v484 = a2[1].i32[0] + 4;
    v485 = *(_QWORD **)a1[4];
    v486 = *v485;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v487 = *(_DWORD *)(*v485 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v487);
    v488 = (const float *)(*v485 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v487);
    v489 = *(_QWORD *)(v485[1] + 144);
    v612 = vld3_f32(v488);
    a3.f32[2] = (float)(v484 / v487);
    v490.i64[0] = 0x3F0000003F000000;
    v490.i64[1] = 0x3F0000003F000000;
    v491 = vaddq_f32(a3, v490);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v491.f32[0]), v612.val[1], *(float32x2_t *)v491.f32, 1), v612.val[2], v491, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v484;
    v492 = vmulq_n_f32(vaddq_f32(a4, v490), *(float *)&v489);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v486 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v492.f32[0]), v612.val[1], *(float32x2_t *)v492.f32, 1), v612.val[2], v492, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v493 = v6[301];
  if (v493 != v8 && (v493 & 0x40000000) != 0)
  {
    v494 = a2[1].i32[0] + 4;
    v495 = *(_QWORD **)a1[4];
    v496 = *v495;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v497 = *(_DWORD *)(*v495 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v497);
    v498 = (const float *)(*v495 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v497);
    v499 = *(_QWORD *)(v495[1] + 144);
    v613 = vld3_f32(v498);
    a3.f32[2] = (float)(v494 / v497);
    v500.i64[0] = 0x3F0000003F000000;
    v500.i64[1] = 0x3F0000003F000000;
    v501 = vaddq_f32(a3, v500);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v501.f32[0]), v613.val[1], *(float32x2_t *)v501.f32, 1), v613.val[2], v501, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v494;
    v502 = vmulq_n_f32(vaddq_f32(a4, v500), *(float *)&v499);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v496 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v502.f32[0]), v613.val[1], *(float32x2_t *)v502.f32, 1), v613.val[2], v502, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v503 = v6[302];
  if (v503 != v8 && (v503 & 0x40000000) != 0)
  {
    v504 = a2[1].i32[0] + 4;
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v507 = *(_DWORD *)(*v505 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v507);
    v508 = (const float *)(*v505 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v507);
    v509 = *(_QWORD *)(v505[1] + 144);
    v614 = vld3_f32(v508);
    a3.f32[2] = (float)(v504 / v507);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v511.f32[0]), v614.val[1], *(float32x2_t *)v511.f32, 1), v614.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v504;
    v512 = vmulq_n_f32(vaddq_f32(a4, v510), *(float *)&v509);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v512.f32[0]), v614.val[1], *(float32x2_t *)v512.f32, 1), v614.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[303];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0] + 4;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v615 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v521.f32[0]), v615.val[1], *(float32x2_t *)v521.f32, 1), v615.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v522.f32[0]), v615.val[1], *(float32x2_t *)v522.f32, 1), v615.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[304];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 4;
    v525 = a2->i32[0];
    v526 = a2->i32[1] + 6;
    v527 = *(_QWORD **)a1[4];
    v528 = *v527;
    v529 = (const float *)(*v527 + 1656);
    v530 = *(_DWORD *)(*v527 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v530);
    v531 = *(_QWORD *)(v527[1] + 144);
    a3.f32[1] = (float)(v526 / v530);
    a3.f32[2] = (float)(v524 / v530);
    v532.i64[0] = 0x3F0000003F000000;
    v532.i64[1] = 0x3F0000003F000000;
    v533 = vaddq_f32(a3, v532);
    v616 = vld3_f32(v529);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v533.f32[0]), v616.val[1], *(float32x2_t *)v533.f32, 1), v616.val[2], v533, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v533.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v526, v525));
    v533.f32[2] = (float)v524;
    v534 = vmulq_n_f32(vaddq_f32(v533, v532), *(float *)&v531);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v528 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v534.f32[0]), v616.val[1], *(float32x2_t *)v534.f32, 1), v616.val[2], v534, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v535 = v6[305];
  if (v535 != v8 && (v535 & 0x40000000) != 0)
  {
    v536 = a2[1].i32[0] + 4;
    v537 = *(_QWORD **)a1[4];
    v538 = *v537;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v539 = *(_DWORD *)(*v537 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v539);
    v540 = (const float *)(*v537 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v539);
    v541 = *(_QWORD *)(v537[1] + 144);
    v617 = vld3_f32(v540);
    a3.f32[2] = (float)(v536 / v539);
    v542.i64[0] = 0x3F0000003F000000;
    v542.i64[1] = 0x3F0000003F000000;
    v543 = vaddq_f32(a3, v542);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v543.f32[0]), v617.val[1], *(float32x2_t *)v543.f32, 1), v617.val[2], v543, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v536;
    v544 = vmulq_n_f32(vaddq_f32(a4, v542), *(float *)&v541);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v538 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v544.f32[0]), v617.val[1], *(float32x2_t *)v544.f32, 1), v617.val[2], v544, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v545 = v6[306];
  if (v545 != v8 && (v545 & 0x40000000) != 0)
  {
    v546 = a2[1].i32[0] + 4;
    v547 = *(_QWORD **)a1[4];
    v548 = *v547;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v549 = *(_DWORD *)(*v547 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v549);
    v550 = (const float *)(*v547 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v549);
    v551 = *(_QWORD *)(v547[1] + 144);
    v618 = vld3_f32(v550);
    a3.f32[2] = (float)(v546 / v549);
    v552.i64[0] = 0x3F0000003F000000;
    v552.i64[1] = 0x3F0000003F000000;
    v553 = vaddq_f32(a3, v552);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v553.f32[0]), v618.val[1], *(float32x2_t *)v553.f32, 1), v618.val[2], v553, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v546;
    v554 = vmulq_n_f32(vaddq_f32(a4, v552), *(float *)&v551);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v548 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v554.f32[0]), v618.val[1], *(float32x2_t *)v554.f32, 1), v618.val[2], v554, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v555 = v6[307];
  if (v555 != v8 && (v555 & 0x40000000) != 0)
  {
    v556 = a2[1].i32[0] + 4;
    v557 = *(_QWORD **)a1[4];
    v558 = *v557;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v559 = *(_DWORD *)(*v557 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v559);
    v560 = (const float *)(*v557 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v559);
    v561 = *(_QWORD *)(v557[1] + 144);
    v619 = vld3_f32(v560);
    a3.f32[2] = (float)(v556 / v559);
    v562.i64[0] = 0x3F0000003F000000;
    v562.i64[1] = 0x3F0000003F000000;
    v563 = vaddq_f32(a3, v562);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v563.f32[0]), v619.val[1], *(float32x2_t *)v563.f32, 1), v619.val[2], v563, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v556;
    v564 = vmulq_n_f32(vaddq_f32(a4, v562), *(float *)&v561);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v558 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v564.f32[0]), v619.val[1], *(float32x2_t *)v564.f32, 1), v619.val[2], v564, 2);
  }
  return sub_2239FF0AC(a1, a2, a3, a4);
}

uint64_t *sub_2239FF0AC(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  uint64_t *v33;
  int v34;
  int v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  const float *v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  int v45;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  const float *v51;
  uint64_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  int v56;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  const float *v62;
  uint64_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  int v67;
  int v69;
  __int32 v70;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  const float *v74;
  int v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  int v80;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  const float *v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  const float *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  const float *v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int v121;
  int v122;
  _QWORD *v123;
  uint64_t v124;
  int v125;
  const float *v126;
  uint64_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  int v131;
  int v132;
  _QWORD *v133;
  uint64_t v134;
  int v135;
  const float *v136;
  uint64_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  int v141;
  int v142;
  _QWORD *v143;
  uint64_t v144;
  int v145;
  const float *v146;
  uint64_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  int v151;
  int v152;
  _QWORD *v153;
  uint64_t v154;
  int v155;
  const float *v156;
  uint64_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float32x4_t v160;
  int v161;
  __int32 v162;
  int v163;
  int v164;
  _QWORD *v165;
  uint64_t v166;
  const float *v167;
  int v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  int v173;
  __int32 v174;
  int v175;
  int v176;
  _QWORD *v177;
  uint64_t v178;
  const float *v179;
  int v180;
  uint64_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x4_t v184;
  int v185;
  __int32 v186;
  int v187;
  int v188;
  _QWORD *v189;
  uint64_t v190;
  const float *v191;
  int v192;
  uint64_t v193;
  float32x4_t v194;
  float32x4_t v195;
  float32x4_t v196;
  int v197;
  __int32 v198;
  int v199;
  int v200;
  _QWORD *v201;
  uint64_t v202;
  const float *v203;
  int v204;
  uint64_t v205;
  float32x4_t v206;
  float32x4_t v207;
  float32x4_t v208;
  int v209;
  __int32 v210;
  int v211;
  int v212;
  _QWORD *v213;
  uint64_t v214;
  const float *v215;
  int v216;
  uint64_t v217;
  float32x4_t v218;
  float32x4_t v219;
  float32x4_t v220;
  int v221;
  __int32 v222;
  int v223;
  int v224;
  _QWORD *v225;
  uint64_t v226;
  const float *v227;
  int v228;
  uint64_t v229;
  float32x4_t v230;
  float32x4_t v231;
  float32x4_t v232;
  int v233;
  __int32 v234;
  int v235;
  int v236;
  _QWORD *v237;
  uint64_t v238;
  const float *v239;
  int v240;
  uint64_t v241;
  float32x4_t v242;
  float32x4_t v243;
  float32x4_t v244;
  int v245;
  int v246;
  __int32 v247;
  int v248;
  _QWORD *v249;
  uint64_t v250;
  const float *v251;
  int v252;
  uint64_t v253;
  float32x4_t v254;
  float32x4_t v255;
  float32x4_t v256;
  int v257;
  int v258;
  _QWORD *v259;
  uint64_t v260;
  int v261;
  const float *v262;
  uint64_t v263;
  float32x4_t v264;
  float32x4_t v265;
  float32x4_t v266;
  int v267;
  int v268;
  _QWORD *v269;
  uint64_t v270;
  int v271;
  const float *v272;
  uint64_t v273;
  float32x4_t v274;
  float32x4_t v275;
  float32x4_t v276;
  int v277;
  int v278;
  _QWORD *v279;
  uint64_t v280;
  int v281;
  const float *v282;
  uint64_t v283;
  float32x4_t v284;
  float32x4_t v285;
  float32x4_t v286;
  int v287;
  int v288;
  _QWORD *v289;
  uint64_t v290;
  int v291;
  const float *v292;
  uint64_t v293;
  float32x4_t v294;
  float32x4_t v295;
  float32x4_t v296;
  int v297;
  int v298;
  _QWORD *v299;
  uint64_t v300;
  int v301;
  const float *v302;
  uint64_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  int v307;
  int v308;
  _QWORD *v309;
  uint64_t v310;
  int v311;
  const float *v312;
  uint64_t v313;
  float32x4_t v314;
  float32x4_t v315;
  float32x4_t v316;
  int v317;
  int v318;
  _QWORD *v319;
  uint64_t v320;
  int v321;
  const float *v322;
  uint64_t v323;
  float32x4_t v324;
  float32x4_t v325;
  float32x4_t v326;
  int v327;
  int v328;
  __int32 v329;
  int v330;
  _QWORD *v331;
  uint64_t v332;
  const float *v333;
  int v334;
  uint64_t v335;
  float32x4_t v336;
  float32x4_t v337;
  float32x4_t v338;
  int v339;
  int v340;
  _QWORD *v341;
  uint64_t v342;
  int v343;
  const float *v344;
  uint64_t v345;
  float32x4_t v346;
  float32x4_t v347;
  float32x4_t v348;
  int v349;
  int v350;
  _QWORD *v351;
  uint64_t v352;
  int v353;
  const float *v354;
  uint64_t v355;
  float32x4_t v356;
  float32x4_t v357;
  float32x4_t v358;
  int v359;
  int v360;
  _QWORD *v361;
  uint64_t v362;
  int v363;
  const float *v364;
  uint64_t v365;
  float32x4_t v366;
  float32x4_t v367;
  float32x4_t v368;
  int v369;
  int v370;
  _QWORD *v371;
  uint64_t v372;
  int v373;
  const float *v374;
  uint64_t v375;
  float32x4_t v376;
  float32x4_t v377;
  float32x4_t v378;
  int v379;
  int v380;
  _QWORD *v381;
  uint64_t v382;
  int v383;
  const float *v384;
  uint64_t v385;
  float32x4_t v386;
  float32x4_t v387;
  float32x4_t v388;
  int v389;
  int v390;
  _QWORD *v391;
  uint64_t v392;
  int v393;
  const float *v394;
  uint64_t v395;
  float32x4_t v396;
  float32x4_t v397;
  float32x4_t v398;
  int v399;
  int v400;
  _QWORD *v401;
  uint64_t v402;
  int v403;
  const float *v404;
  uint64_t v405;
  float32x4_t v406;
  float32x4_t v407;
  float32x4_t v408;
  int v409;
  int v410;
  __int32 v411;
  int v412;
  _QWORD *v413;
  uint64_t v414;
  const float *v415;
  int v416;
  uint64_t v417;
  float32x4_t v418;
  float32x4_t v419;
  float32x4_t v420;
  int v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  const float *v426;
  uint64_t v427;
  float32x4_t v428;
  float32x4_t v429;
  float32x4_t v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  int v435;
  const float *v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  int v442;
  _QWORD *v443;
  uint64_t v444;
  int v445;
  const float *v446;
  uint64_t v447;
  float32x4_t v448;
  float32x4_t v449;
  float32x4_t v450;
  int v451;
  int v452;
  _QWORD *v453;
  uint64_t v454;
  int v455;
  const float *v456;
  uint64_t v457;
  float32x4_t v458;
  float32x4_t v459;
  float32x4_t v460;
  int v461;
  int v462;
  _QWORD *v463;
  uint64_t v464;
  int v465;
  const float *v466;
  uint64_t v467;
  float32x4_t v468;
  float32x4_t v469;
  float32x4_t v470;
  int v471;
  int v472;
  _QWORD *v473;
  uint64_t v474;
  int v475;
  const float *v476;
  uint64_t v477;
  float32x4_t v478;
  float32x4_t v479;
  float32x4_t v480;
  int v481;
  int v482;
  _QWORD *v483;
  uint64_t v484;
  int v485;
  const float *v486;
  uint64_t v487;
  float32x4_t v488;
  float32x4_t v489;
  float32x4_t v490;
  int v491;
  int v492;
  __int32 v493;
  int v494;
  _QWORD *v495;
  uint64_t v496;
  const float *v497;
  int v498;
  uint64_t v499;
  float32x4_t v500;
  float32x4_t v501;
  float32x4_t v502;
  int v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  int v507;
  const float *v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  int v533;
  int v534;
  _QWORD *v535;
  uint64_t v536;
  int v537;
  const float *v538;
  uint64_t v539;
  float32x4_t v540;
  float32x4_t v541;
  float32x4_t v542;
  int v543;
  int v544;
  _QWORD *v545;
  uint64_t v546;
  int v547;
  const float *v548;
  uint64_t v549;
  float32x4_t v550;
  float32x4_t v551;
  float32x4_t v552;
  int v553;
  int v554;
  _QWORD *v555;
  uint64_t v556;
  int v557;
  const float *v558;
  uint64_t v559;
  float32x4_t v560;
  float32x4_t v561;
  float32x4_t v562;
  int32x2_t v564;
  int v565;
  int32x2_t *v566;
  float32x2x3_t v567;
  float32x2x3_t v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;

  v6 = (_DWORD *)a1[1];
  v7 = v6[308];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[309];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v36 = a2[1].i32[0] + 4;
      v37 = *(_QWORD **)a1[4];
      v38 = *v37;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
      v39 = *(_DWORD *)(*v37 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v39);
      v40 = (const float *)(*v37 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v39);
      v41 = *(_QWORD *)(v37[1] + 144);
      v568 = vld3_f32(v40);
      a3.f32[2] = (float)(v36 / v39);
      v42.i64[0] = 0x3F0000003F000000;
      v42.i64[1] = 0x3F0000003F000000;
      v43 = vaddq_f32(a3, v42);
      v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v43.f32[0]), v568.val[1], *(float32x2_t *)v43.f32, 1), v568.val[2], v43, 2), (float32x2_t)0xBF000000BF000000));
      v565 = 0;
      a4.f32[2] = (float)v36;
      v44 = vmulq_n_f32(vaddq_f32(a4, v42), *(float *)&v41);
      v566 = &v564;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v38 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v44.f32[0]), v568.val[1], *(float32x2_t *)v44.f32, 1), v568.val[2], v44, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v45 = v6[310];
      if (v45 != v8 && (v45 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 4;
    v24 = *(_QWORD **)a1[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v567 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v30.f32[0]), v567.val[1], *(float32x2_t *)v30.f32, 1), v567.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v31.f32[0]), v567.val[1], *(float32x2_t *)v31.f32, 1), v567.val[2], v31, 2);
    v566 = &v564;
    v33 = sub_223A17B10((float *)(v25 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566);
    *(uint64_t *)((char *)v33 + 28) = (uint64_t)v32;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v34 = v6[309];
    if (v34 != v8 && (v34 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[310];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v47 = a2[1].i32[0] + 4;
    v48 = *(_QWORD **)a1[4];
    v49 = *v48;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v50 = *(_DWORD *)(*v48 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v50);
    v51 = (const float *)(*v48 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v50);
    v52 = *(_QWORD *)(v48[1] + 144);
    v569 = vld3_f32(v51);
    a3.f32[2] = (float)(v47 / v50);
    v53.i64[0] = 0x3F0000003F000000;
    v53.i64[1] = 0x3F0000003F000000;
    v54 = vaddq_f32(a3, v53);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v54.f32[0]), v569.val[1], *(float32x2_t *)v54.f32, 1), v569.val[2], v54, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v47;
    v55 = vmulq_n_f32(vaddq_f32(a4, v53), *(float *)&v52);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v49 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v55.f32[0]), v569.val[1], *(float32x2_t *)v55.f32, 1), v569.val[2], v55, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v56 = v6[311];
    if (v56 != v8 && (v56 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[311];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v58 = a2[1].i32[0] + 4;
    v59 = *(_QWORD **)a1[4];
    v60 = *v59;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v61 = *(_DWORD *)(*v59 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v61);
    v62 = (const float *)(*v59 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v61);
    v63 = *(_QWORD *)(v59[1] + 144);
    v570 = vld3_f32(v62);
    a3.f32[2] = (float)(v58 / v61);
    v64.i64[0] = 0x3F0000003F000000;
    v64.i64[1] = 0x3F0000003F000000;
    v65 = vaddq_f32(a3, v64);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v65.f32[0]), v570.val[1], *(float32x2_t *)v65.f32, 1), v570.val[2], v65, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v58;
    v66 = vmulq_n_f32(vaddq_f32(a4, v64), *(float *)&v63);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v60 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v66.f32[0]), v570.val[1], *(float32x2_t *)v66.f32, 1), v570.val[2], v66, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v67 = v6[312];
    if (v67 != v8 && (v67 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[312];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v69 = a2[1].i32[0] + 4;
    v70 = a2->i32[0];
    v71 = a2->i32[1] + 7;
    v72 = *(_QWORD **)a1[4];
    v73 = *v72;
    v74 = (const float *)(*v72 + 1656);
    v75 = *(_DWORD *)(*v72 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v75);
    v76 = *(_QWORD *)(v72[1] + 144);
    a3.f32[1] = (float)(v71 / v75);
    a3.f32[2] = (float)(v69 / v75);
    v77.i64[0] = 0x3F0000003F000000;
    v77.i64[1] = 0x3F0000003F000000;
    v78 = vaddq_f32(a3, v77);
    v571 = vld3_f32(v74);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v78.f32[0]), v571.val[1], *(float32x2_t *)v78.f32, 1), v571.val[2], v78, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v78.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v71, v70));
    v78.f32[2] = (float)v69;
    v79 = vmulq_n_f32(vaddq_f32(v78, v77), *(float *)&v76);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v73 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v79.f32[0]), v571.val[1], *(float32x2_t *)v79.f32, 1), v571.val[2], v79, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v80 = v6[313];
    if (v80 != v8 && (v80 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[313];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v82 = a2[1].i32[0] + 4;
    v83 = *(_QWORD **)a1[4];
    v84 = *v83;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v85 = *(_DWORD *)(*v83 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v85);
    v86 = (const float *)(*v83 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v85);
    v87 = *(_QWORD *)(v83[1] + 144);
    v572 = vld3_f32(v86);
    a3.f32[2] = (float)(v82 / v85);
    v88.i64[0] = 0x3F0000003F000000;
    v88.i64[1] = 0x3F0000003F000000;
    v89 = vaddq_f32(a3, v88);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v89.f32[0]), v572.val[1], *(float32x2_t *)v89.f32, 1), v572.val[2], v89, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v82;
    v90 = vmulq_n_f32(vaddq_f32(a4, v88), *(float *)&v87);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v84 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v90.f32[0]), v572.val[1], *(float32x2_t *)v90.f32, 1), v572.val[2], v90, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v91 = v6[314];
    if (v91 != v8 && (v91 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[314];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v93 = a2[1].i32[0] + 4;
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v96 = *(_DWORD *)(*v94 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v96);
    v97 = (const float *)(*v94 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v96);
    v98 = *(_QWORD *)(v94[1] + 144);
    v573 = vld3_f32(v97);
    a3.f32[2] = (float)(v93 / v96);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v100.f32[0]), v573.val[1], *(float32x2_t *)v100.f32, 1), v573.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v93;
    v101 = vmulq_n_f32(vaddq_f32(a4, v99), *(float *)&v98);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v101.f32[0]), v573.val[1], *(float32x2_t *)v101.f32, 1), v573.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[315];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[315];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0] + 4;
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v574 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v109.f32[0]), v574.val[1], *(float32x2_t *)v109.f32, 1), v574.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v110.f32[0]), v574.val[1], *(float32x2_t *)v110.f32, 1), v574.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[316];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0] + 4;
    v113 = *(_QWORD **)a1[4];
    v114 = *v113;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v115 = *(_DWORD *)(*v113 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v115);
    v116 = (const float *)(*v113 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v115);
    v117 = *(_QWORD *)(v113[1] + 144);
    v575 = vld3_f32(v116);
    a3.f32[2] = (float)(v112 / v115);
    v118.i64[0] = 0x3F0000003F000000;
    v118.i64[1] = 0x3F0000003F000000;
    v119 = vaddq_f32(a3, v118);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v119.f32[0]), v575.val[1], *(float32x2_t *)v119.f32, 1), v575.val[2], v119, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v112;
    v120 = vmulq_n_f32(vaddq_f32(a4, v118), *(float *)&v117);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v114 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v120.f32[0]), v575.val[1], *(float32x2_t *)v120.f32, 1), v575.val[2], v120, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v121 = v6[317];
  if (v121 != v8 && (v121 & 0x40000000) != 0)
  {
    v122 = a2[1].i32[0] + 4;
    v123 = *(_QWORD **)a1[4];
    v124 = *v123;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v125 = *(_DWORD *)(*v123 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v125);
    v126 = (const float *)(*v123 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v125);
    v127 = *(_QWORD *)(v123[1] + 144);
    v576 = vld3_f32(v126);
    a3.f32[2] = (float)(v122 / v125);
    v128.i64[0] = 0x3F0000003F000000;
    v128.i64[1] = 0x3F0000003F000000;
    v129 = vaddq_f32(a3, v128);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v129.f32[0]), v576.val[1], *(float32x2_t *)v129.f32, 1), v576.val[2], v129, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v122;
    v130 = vmulq_n_f32(vaddq_f32(a4, v128), *(float *)&v127);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v124 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v130.f32[0]), v576.val[1], *(float32x2_t *)v130.f32, 1), v576.val[2], v130, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v131 = v6[318];
  if (v131 != v8 && (v131 & 0x40000000) != 0)
  {
    v132 = a2[1].i32[0] + 4;
    v133 = *(_QWORD **)a1[4];
    v134 = *v133;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v135 = *(_DWORD *)(*v133 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v135);
    v136 = (const float *)(*v133 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v135);
    v137 = *(_QWORD *)(v133[1] + 144);
    v577 = vld3_f32(v136);
    a3.f32[2] = (float)(v132 / v135);
    v138.i64[0] = 0x3F0000003F000000;
    v138.i64[1] = 0x3F0000003F000000;
    v139 = vaddq_f32(a3, v138);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v139.f32[0]), v577.val[1], *(float32x2_t *)v139.f32, 1), v577.val[2], v139, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v132;
    v140 = vmulq_n_f32(vaddq_f32(a4, v138), *(float *)&v137);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v134 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v140.f32[0]), v577.val[1], *(float32x2_t *)v140.f32, 1), v577.val[2], v140, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v141 = v6[319];
  if (v141 != v8 && (v141 & 0x40000000) != 0)
  {
    v142 = a2[1].i32[0] + 4;
    v143 = *(_QWORD **)a1[4];
    v144 = *v143;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v145 = *(_DWORD *)(*v143 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v145);
    v146 = (const float *)(*v143 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v145);
    v147 = *(_QWORD *)(v143[1] + 144);
    v578 = vld3_f32(v146);
    a3.f32[2] = (float)(v142 / v145);
    v148.i64[0] = 0x3F0000003F000000;
    v148.i64[1] = 0x3F0000003F000000;
    v149 = vaddq_f32(a3, v148);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v149.f32[0]), v578.val[1], *(float32x2_t *)v149.f32, 1), v578.val[2], v149, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v142;
    v150 = vmulq_n_f32(vaddq_f32(a4, v148), *(float *)&v147);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v144 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v150.f32[0]), v578.val[1], *(float32x2_t *)v150.f32, 1), v578.val[2], v150, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v151 = v6[320];
  if (v151 != v8 && (v151 & 0x40000000) != 0)
  {
    v152 = a2[1].i32[0] + 5;
    v153 = *(_QWORD **)a1[4];
    v154 = *v153;
    v155 = *(_DWORD *)(*v153 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v155);
    v156 = (const float *)(*v153 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v155);
    v157 = *(_QWORD *)(v153[1] + 144);
    v579 = vld3_f32(v156);
    a3.f32[2] = (float)(v152 / v155);
    v158.i64[0] = 0x3F0000003F000000;
    v158.i64[1] = 0x3F0000003F000000;
    v159 = vaddq_f32(a3, v158);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v159.f32[0]), v579.val[1], *(float32x2_t *)v159.f32, 1), v579.val[2], v159, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v152;
    v160 = vmulq_n_f32(vaddq_f32(a4, v158), *(float *)&v157);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v154 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v160.f32[0]), v579.val[1], *(float32x2_t *)v160.f32, 1), v579.val[2], v160, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v161 = v6[321];
  if (v161 != v8 && (v161 & 0x40000000) != 0)
  {
    v162 = a2->i32[1];
    v163 = a2[1].i32[0] + 5;
    v164 = a2->i32[0] + 1;
    v165 = *(_QWORD **)a1[4];
    v166 = *v165;
    v167 = (const float *)(*v165 + 1656);
    v168 = *(_DWORD *)(*v165 + 8);
    a3.f32[0] = (float)(v164 / v168);
    v169 = *(_QWORD *)(v165[1] + 144);
    a3.f32[1] = (float)(v162 / v168);
    a3.f32[2] = (float)(v163 / v168);
    v170.i64[0] = 0x3F0000003F000000;
    v170.i64[1] = 0x3F0000003F000000;
    v171 = vaddq_f32(a3, v170);
    v580 = vld3_f32(v167);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v171.f32[0]), v580.val[1], *(float32x2_t *)v171.f32, 1), v580.val[2], v171, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v171.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v162, v164));
    v171.f32[2] = (float)v163;
    v172 = vmulq_n_f32(vaddq_f32(v171, v170), *(float *)&v169);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v166 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v172.f32[0]), v580.val[1], *(float32x2_t *)v172.f32, 1), v580.val[2], v172, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v173 = v6[322];
  if (v173 != v8 && (v173 & 0x40000000) != 0)
  {
    v174 = a2->i32[1];
    v175 = a2[1].i32[0] + 5;
    v176 = a2->i32[0] + 2;
    v177 = *(_QWORD **)a1[4];
    v178 = *v177;
    v179 = (const float *)(*v177 + 1656);
    v180 = *(_DWORD *)(*v177 + 8);
    a3.f32[0] = (float)(v176 / v180);
    v181 = *(_QWORD *)(v177[1] + 144);
    a3.f32[1] = (float)(v174 / v180);
    a3.f32[2] = (float)(v175 / v180);
    v182.i64[0] = 0x3F0000003F000000;
    v182.i64[1] = 0x3F0000003F000000;
    v183 = vaddq_f32(a3, v182);
    v581 = vld3_f32(v179);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v183.f32[0]), v581.val[1], *(float32x2_t *)v183.f32, 1), v581.val[2], v183, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v183.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v174, v176));
    v183.f32[2] = (float)v175;
    v184 = vmulq_n_f32(vaddq_f32(v183, v182), *(float *)&v181);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v178 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v184.f32[0]), v581.val[1], *(float32x2_t *)v184.f32, 1), v581.val[2], v184, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v185 = v6[323];
  if (v185 != v8 && (v185 & 0x40000000) != 0)
  {
    v186 = a2->i32[1];
    v187 = a2[1].i32[0] + 5;
    v188 = a2->i32[0] + 3;
    v189 = *(_QWORD **)a1[4];
    v190 = *v189;
    v191 = (const float *)(*v189 + 1656);
    v192 = *(_DWORD *)(*v189 + 8);
    a3.f32[0] = (float)(v188 / v192);
    v193 = *(_QWORD *)(v189[1] + 144);
    a3.f32[1] = (float)(v186 / v192);
    a3.f32[2] = (float)(v187 / v192);
    v194.i64[0] = 0x3F0000003F000000;
    v194.i64[1] = 0x3F0000003F000000;
    v195 = vaddq_f32(a3, v194);
    v582 = vld3_f32(v191);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v195.f32[0]), v582.val[1], *(float32x2_t *)v195.f32, 1), v582.val[2], v195, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v195.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v186, v188));
    v195.f32[2] = (float)v187;
    v196 = vmulq_n_f32(vaddq_f32(v195, v194), *(float *)&v193);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v190 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v196.f32[0]), v582.val[1], *(float32x2_t *)v196.f32, 1), v582.val[2], v196, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v197 = v6[324];
  if (v197 != v8 && (v197 & 0x40000000) != 0)
  {
    v198 = a2->i32[1];
    v199 = a2[1].i32[0] + 5;
    v200 = a2->i32[0] + 4;
    v201 = *(_QWORD **)a1[4];
    v202 = *v201;
    v203 = (const float *)(*v201 + 1656);
    v204 = *(_DWORD *)(*v201 + 8);
    a3.f32[0] = (float)(v200 / v204);
    v205 = *(_QWORD *)(v201[1] + 144);
    a3.f32[1] = (float)(v198 / v204);
    a3.f32[2] = (float)(v199 / v204);
    v206.i64[0] = 0x3F0000003F000000;
    v206.i64[1] = 0x3F0000003F000000;
    v207 = vaddq_f32(a3, v206);
    v583 = vld3_f32(v203);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v207.f32[0]), v583.val[1], *(float32x2_t *)v207.f32, 1), v583.val[2], v207, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v207.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v198, v200));
    v207.f32[2] = (float)v199;
    v208 = vmulq_n_f32(vaddq_f32(v207, v206), *(float *)&v205);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v202 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v208.f32[0]), v583.val[1], *(float32x2_t *)v208.f32, 1), v583.val[2], v208, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v209 = v6[325];
  if (v209 != v8 && (v209 & 0x40000000) != 0)
  {
    v210 = a2->i32[1];
    v211 = a2[1].i32[0] + 5;
    v212 = a2->i32[0] + 5;
    v213 = *(_QWORD **)a1[4];
    v214 = *v213;
    v215 = (const float *)(*v213 + 1656);
    v216 = *(_DWORD *)(*v213 + 8);
    a3.f32[0] = (float)(v212 / v216);
    v217 = *(_QWORD *)(v213[1] + 144);
    a3.f32[1] = (float)(v210 / v216);
    a3.f32[2] = (float)(v211 / v216);
    v218.i64[0] = 0x3F0000003F000000;
    v218.i64[1] = 0x3F0000003F000000;
    v219 = vaddq_f32(a3, v218);
    v584 = vld3_f32(v215);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v219.f32[0]), v584.val[1], *(float32x2_t *)v219.f32, 1), v584.val[2], v219, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v219.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v210, v212));
    v219.f32[2] = (float)v211;
    v220 = vmulq_n_f32(vaddq_f32(v219, v218), *(float *)&v217);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v214 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v220.f32[0]), v584.val[1], *(float32x2_t *)v220.f32, 1), v584.val[2], v220, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v221 = v6[326];
  if (v221 != v8 && (v221 & 0x40000000) != 0)
  {
    v222 = a2->i32[1];
    v223 = a2[1].i32[0] + 5;
    v224 = a2->i32[0] + 6;
    v225 = *(_QWORD **)a1[4];
    v226 = *v225;
    v227 = (const float *)(*v225 + 1656);
    v228 = *(_DWORD *)(*v225 + 8);
    a3.f32[0] = (float)(v224 / v228);
    v229 = *(_QWORD *)(v225[1] + 144);
    a3.f32[1] = (float)(v222 / v228);
    a3.f32[2] = (float)(v223 / v228);
    v230.i64[0] = 0x3F0000003F000000;
    v230.i64[1] = 0x3F0000003F000000;
    v231 = vaddq_f32(a3, v230);
    v585 = vld3_f32(v227);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v231.f32[0]), v585.val[1], *(float32x2_t *)v231.f32, 1), v585.val[2], v231, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v231.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v222, v224));
    v231.f32[2] = (float)v223;
    v232 = vmulq_n_f32(vaddq_f32(v231, v230), *(float *)&v229);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v226 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v232.f32[0]), v585.val[1], *(float32x2_t *)v232.f32, 1), v585.val[2], v232, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v233 = v6[327];
  if (v233 != v8 && (v233 & 0x40000000) != 0)
  {
    v234 = a2->i32[1];
    v235 = a2[1].i32[0] + 5;
    v236 = a2->i32[0] + 7;
    v237 = *(_QWORD **)a1[4];
    v238 = *v237;
    v239 = (const float *)(*v237 + 1656);
    v240 = *(_DWORD *)(*v237 + 8);
    a3.f32[0] = (float)(v236 / v240);
    v241 = *(_QWORD *)(v237[1] + 144);
    a3.f32[1] = (float)(v234 / v240);
    a3.f32[2] = (float)(v235 / v240);
    v242.i64[0] = 0x3F0000003F000000;
    v242.i64[1] = 0x3F0000003F000000;
    v243 = vaddq_f32(a3, v242);
    v586 = vld3_f32(v239);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v243.f32[0]), v586.val[1], *(float32x2_t *)v243.f32, 1), v586.val[2], v243, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v243.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v234, v236));
    v243.f32[2] = (float)v235;
    v244 = vmulq_n_f32(vaddq_f32(v243, v242), *(float *)&v241);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v238 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v244.f32[0]), v586.val[1], *(float32x2_t *)v244.f32, 1), v586.val[2], v244, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v245 = v6[328];
  if (v245 != v8 && (v245 & 0x40000000) != 0)
  {
    v246 = a2[1].i32[0] + 5;
    v247 = a2->i32[0];
    v248 = a2->i32[1] + 1;
    v249 = *(_QWORD **)a1[4];
    v250 = *v249;
    v251 = (const float *)(*v249 + 1656);
    v252 = *(_DWORD *)(*v249 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v252);
    v253 = *(_QWORD *)(v249[1] + 144);
    a3.f32[1] = (float)(v248 / v252);
    a3.f32[2] = (float)(v246 / v252);
    v254.i64[0] = 0x3F0000003F000000;
    v254.i64[1] = 0x3F0000003F000000;
    v255 = vaddq_f32(a3, v254);
    v587 = vld3_f32(v251);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v255.f32[0]), v587.val[1], *(float32x2_t *)v255.f32, 1), v587.val[2], v255, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v255.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v248, v247));
    v255.f32[2] = (float)v246;
    v256 = vmulq_n_f32(vaddq_f32(v255, v254), *(float *)&v253);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v250 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v256.f32[0]), v587.val[1], *(float32x2_t *)v256.f32, 1), v587.val[2], v256, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v257 = v6[329];
  if (v257 != v8 && (v257 & 0x40000000) != 0)
  {
    v258 = a2[1].i32[0] + 5;
    v259 = *(_QWORD **)a1[4];
    v260 = *v259;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v261 = *(_DWORD *)(*v259 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v261);
    v262 = (const float *)(*v259 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v261);
    v263 = *(_QWORD *)(v259[1] + 144);
    v588 = vld3_f32(v262);
    a3.f32[2] = (float)(v258 / v261);
    v264.i64[0] = 0x3F0000003F000000;
    v264.i64[1] = 0x3F0000003F000000;
    v265 = vaddq_f32(a3, v264);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v265.f32[0]), v588.val[1], *(float32x2_t *)v265.f32, 1), v588.val[2], v265, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v258;
    v266 = vmulq_n_f32(vaddq_f32(a4, v264), *(float *)&v263);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v260 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v266.f32[0]), v588.val[1], *(float32x2_t *)v266.f32, 1), v588.val[2], v266, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v267 = v6[330];
  if (v267 != v8 && (v267 & 0x40000000) != 0)
  {
    v268 = a2[1].i32[0] + 5;
    v269 = *(_QWORD **)a1[4];
    v270 = *v269;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v271 = *(_DWORD *)(*v269 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v271);
    v272 = (const float *)(*v269 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v271);
    v273 = *(_QWORD *)(v269[1] + 144);
    v589 = vld3_f32(v272);
    a3.f32[2] = (float)(v268 / v271);
    v274.i64[0] = 0x3F0000003F000000;
    v274.i64[1] = 0x3F0000003F000000;
    v275 = vaddq_f32(a3, v274);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v275.f32[0]), v589.val[1], *(float32x2_t *)v275.f32, 1), v589.val[2], v275, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v268;
    v276 = vmulq_n_f32(vaddq_f32(a4, v274), *(float *)&v273);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v270 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v276.f32[0]), v589.val[1], *(float32x2_t *)v276.f32, 1), v589.val[2], v276, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v277 = v6[331];
  if (v277 != v8 && (v277 & 0x40000000) != 0)
  {
    v278 = a2[1].i32[0] + 5;
    v279 = *(_QWORD **)a1[4];
    v280 = *v279;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v281 = *(_DWORD *)(*v279 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v281);
    v282 = (const float *)(*v279 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v281);
    v283 = *(_QWORD *)(v279[1] + 144);
    v590 = vld3_f32(v282);
    a3.f32[2] = (float)(v278 / v281);
    v284.i64[0] = 0x3F0000003F000000;
    v284.i64[1] = 0x3F0000003F000000;
    v285 = vaddq_f32(a3, v284);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v285.f32[0]), v590.val[1], *(float32x2_t *)v285.f32, 1), v590.val[2], v285, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v278;
    v286 = vmulq_n_f32(vaddq_f32(a4, v284), *(float *)&v283);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v280 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v286.f32[0]), v590.val[1], *(float32x2_t *)v286.f32, 1), v590.val[2], v286, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v287 = v6[332];
  if (v287 != v8 && (v287 & 0x40000000) != 0)
  {
    v288 = a2[1].i32[0] + 5;
    v289 = *(_QWORD **)a1[4];
    v290 = *v289;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v291 = *(_DWORD *)(*v289 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v291);
    v292 = (const float *)(*v289 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v291);
    v293 = *(_QWORD *)(v289[1] + 144);
    v591 = vld3_f32(v292);
    a3.f32[2] = (float)(v288 / v291);
    v294.i64[0] = 0x3F0000003F000000;
    v294.i64[1] = 0x3F0000003F000000;
    v295 = vaddq_f32(a3, v294);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v295.f32[0]), v591.val[1], *(float32x2_t *)v295.f32, 1), v591.val[2], v295, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v288;
    v296 = vmulq_n_f32(vaddq_f32(a4, v294), *(float *)&v293);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v290 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v296.f32[0]), v591.val[1], *(float32x2_t *)v296.f32, 1), v591.val[2], v296, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v297 = v6[333];
  if (v297 != v8 && (v297 & 0x40000000) != 0)
  {
    v298 = a2[1].i32[0] + 5;
    v299 = *(_QWORD **)a1[4];
    v300 = *v299;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v301 = *(_DWORD *)(*v299 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v301);
    v302 = (const float *)(*v299 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v301);
    v303 = *(_QWORD *)(v299[1] + 144);
    v592 = vld3_f32(v302);
    a3.f32[2] = (float)(v298 / v301);
    v304.i64[0] = 0x3F0000003F000000;
    v304.i64[1] = 0x3F0000003F000000;
    v305 = vaddq_f32(a3, v304);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v305.f32[0]), v592.val[1], *(float32x2_t *)v305.f32, 1), v592.val[2], v305, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v298;
    v306 = vmulq_n_f32(vaddq_f32(a4, v304), *(float *)&v303);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v300 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v306.f32[0]), v592.val[1], *(float32x2_t *)v306.f32, 1), v592.val[2], v306, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v307 = v6[334];
  if (v307 != v8 && (v307 & 0x40000000) != 0)
  {
    v308 = a2[1].i32[0] + 5;
    v309 = *(_QWORD **)a1[4];
    v310 = *v309;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v311 = *(_DWORD *)(*v309 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v311);
    v312 = (const float *)(*v309 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v311);
    v313 = *(_QWORD *)(v309[1] + 144);
    v593 = vld3_f32(v312);
    a3.f32[2] = (float)(v308 / v311);
    v314.i64[0] = 0x3F0000003F000000;
    v314.i64[1] = 0x3F0000003F000000;
    v315 = vaddq_f32(a3, v314);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v315.f32[0]), v593.val[1], *(float32x2_t *)v315.f32, 1), v593.val[2], v315, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v308;
    v316 = vmulq_n_f32(vaddq_f32(a4, v314), *(float *)&v313);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v310 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v316.f32[0]), v593.val[1], *(float32x2_t *)v316.f32, 1), v593.val[2], v316, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v317 = v6[335];
  if (v317 != v8 && (v317 & 0x40000000) != 0)
  {
    v318 = a2[1].i32[0] + 5;
    v319 = *(_QWORD **)a1[4];
    v320 = *v319;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v321 = *(_DWORD *)(*v319 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v321);
    v322 = (const float *)(*v319 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v321);
    v323 = *(_QWORD *)(v319[1] + 144);
    v594 = vld3_f32(v322);
    a3.f32[2] = (float)(v318 / v321);
    v324.i64[0] = 0x3F0000003F000000;
    v324.i64[1] = 0x3F0000003F000000;
    v325 = vaddq_f32(a3, v324);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v325.f32[0]), v594.val[1], *(float32x2_t *)v325.f32, 1), v594.val[2], v325, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v318;
    v326 = vmulq_n_f32(vaddq_f32(a4, v324), *(float *)&v323);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v320 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v326.f32[0]), v594.val[1], *(float32x2_t *)v326.f32, 1), v594.val[2], v326, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v327 = v6[336];
  if (v327 != v8 && (v327 & 0x40000000) != 0)
  {
    v328 = a2[1].i32[0] + 5;
    v329 = a2->i32[0];
    v330 = a2->i32[1] + 2;
    v331 = *(_QWORD **)a1[4];
    v332 = *v331;
    v333 = (const float *)(*v331 + 1656);
    v334 = *(_DWORD *)(*v331 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v334);
    v335 = *(_QWORD *)(v331[1] + 144);
    a3.f32[1] = (float)(v330 / v334);
    a3.f32[2] = (float)(v328 / v334);
    v336.i64[0] = 0x3F0000003F000000;
    v336.i64[1] = 0x3F0000003F000000;
    v337 = vaddq_f32(a3, v336);
    v595 = vld3_f32(v333);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v337.f32[0]), v595.val[1], *(float32x2_t *)v337.f32, 1), v595.val[2], v337, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v337.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v330, v329));
    v337.f32[2] = (float)v328;
    v338 = vmulq_n_f32(vaddq_f32(v337, v336), *(float *)&v335);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v332 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v338.f32[0]), v595.val[1], *(float32x2_t *)v338.f32, 1), v595.val[2], v338, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v339 = v6[337];
  if (v339 != v8 && (v339 & 0x40000000) != 0)
  {
    v340 = a2[1].i32[0] + 5;
    v341 = *(_QWORD **)a1[4];
    v342 = *v341;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v343 = *(_DWORD *)(*v341 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v343);
    v344 = (const float *)(*v341 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v343);
    v345 = *(_QWORD *)(v341[1] + 144);
    v596 = vld3_f32(v344);
    a3.f32[2] = (float)(v340 / v343);
    v346.i64[0] = 0x3F0000003F000000;
    v346.i64[1] = 0x3F0000003F000000;
    v347 = vaddq_f32(a3, v346);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v347.f32[0]), v596.val[1], *(float32x2_t *)v347.f32, 1), v596.val[2], v347, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v340;
    v348 = vmulq_n_f32(vaddq_f32(a4, v346), *(float *)&v345);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v342 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v348.f32[0]), v596.val[1], *(float32x2_t *)v348.f32, 1), v596.val[2], v348, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v349 = v6[338];
  if (v349 != v8 && (v349 & 0x40000000) != 0)
  {
    v350 = a2[1].i32[0] + 5;
    v351 = *(_QWORD **)a1[4];
    v352 = *v351;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v353 = *(_DWORD *)(*v351 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v353);
    v354 = (const float *)(*v351 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v353);
    v355 = *(_QWORD *)(v351[1] + 144);
    v597 = vld3_f32(v354);
    a3.f32[2] = (float)(v350 / v353);
    v356.i64[0] = 0x3F0000003F000000;
    v356.i64[1] = 0x3F0000003F000000;
    v357 = vaddq_f32(a3, v356);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v357.f32[0]), v597.val[1], *(float32x2_t *)v357.f32, 1), v597.val[2], v357, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v350;
    v358 = vmulq_n_f32(vaddq_f32(a4, v356), *(float *)&v355);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v352 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v358.f32[0]), v597.val[1], *(float32x2_t *)v358.f32, 1), v597.val[2], v358, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v359 = v6[339];
  if (v359 != v8 && (v359 & 0x40000000) != 0)
  {
    v360 = a2[1].i32[0] + 5;
    v361 = *(_QWORD **)a1[4];
    v362 = *v361;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v363 = *(_DWORD *)(*v361 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v363);
    v364 = (const float *)(*v361 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v363);
    v365 = *(_QWORD *)(v361[1] + 144);
    v598 = vld3_f32(v364);
    a3.f32[2] = (float)(v360 / v363);
    v366.i64[0] = 0x3F0000003F000000;
    v366.i64[1] = 0x3F0000003F000000;
    v367 = vaddq_f32(a3, v366);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v367.f32[0]), v598.val[1], *(float32x2_t *)v367.f32, 1), v598.val[2], v367, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v360;
    v368 = vmulq_n_f32(vaddq_f32(a4, v366), *(float *)&v365);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v362 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v368.f32[0]), v598.val[1], *(float32x2_t *)v368.f32, 1), v598.val[2], v368, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v369 = v6[340];
  if (v369 != v8 && (v369 & 0x40000000) != 0)
  {
    v370 = a2[1].i32[0] + 5;
    v371 = *(_QWORD **)a1[4];
    v372 = *v371;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v373 = *(_DWORD *)(*v371 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v373);
    v374 = (const float *)(*v371 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v373);
    v375 = *(_QWORD *)(v371[1] + 144);
    v599 = vld3_f32(v374);
    a3.f32[2] = (float)(v370 / v373);
    v376.i64[0] = 0x3F0000003F000000;
    v376.i64[1] = 0x3F0000003F000000;
    v377 = vaddq_f32(a3, v376);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v377.f32[0]), v599.val[1], *(float32x2_t *)v377.f32, 1), v599.val[2], v377, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v370;
    v378 = vmulq_n_f32(vaddq_f32(a4, v376), *(float *)&v375);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v372 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v378.f32[0]), v599.val[1], *(float32x2_t *)v378.f32, 1), v599.val[2], v378, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v379 = v6[341];
  if (v379 != v8 && (v379 & 0x40000000) != 0)
  {
    v380 = a2[1].i32[0] + 5;
    v381 = *(_QWORD **)a1[4];
    v382 = *v381;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v383 = *(_DWORD *)(*v381 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v383);
    v384 = (const float *)(*v381 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v383);
    v385 = *(_QWORD *)(v381[1] + 144);
    v600 = vld3_f32(v384);
    a3.f32[2] = (float)(v380 / v383);
    v386.i64[0] = 0x3F0000003F000000;
    v386.i64[1] = 0x3F0000003F000000;
    v387 = vaddq_f32(a3, v386);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v387.f32[0]), v600.val[1], *(float32x2_t *)v387.f32, 1), v600.val[2], v387, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v380;
    v388 = vmulq_n_f32(vaddq_f32(a4, v386), *(float *)&v385);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v382 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v388.f32[0]), v600.val[1], *(float32x2_t *)v388.f32, 1), v600.val[2], v388, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v389 = v6[342];
  if (v389 != v8 && (v389 & 0x40000000) != 0)
  {
    v390 = a2[1].i32[0] + 5;
    v391 = *(_QWORD **)a1[4];
    v392 = *v391;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v393 = *(_DWORD *)(*v391 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v393);
    v394 = (const float *)(*v391 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v393);
    v395 = *(_QWORD *)(v391[1] + 144);
    v601 = vld3_f32(v394);
    a3.f32[2] = (float)(v390 / v393);
    v396.i64[0] = 0x3F0000003F000000;
    v396.i64[1] = 0x3F0000003F000000;
    v397 = vaddq_f32(a3, v396);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v397.f32[0]), v601.val[1], *(float32x2_t *)v397.f32, 1), v601.val[2], v397, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v390;
    v398 = vmulq_n_f32(vaddq_f32(a4, v396), *(float *)&v395);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v392 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v398.f32[0]), v601.val[1], *(float32x2_t *)v398.f32, 1), v601.val[2], v398, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v399 = v6[343];
  if (v399 != v8 && (v399 & 0x40000000) != 0)
  {
    v400 = a2[1].i32[0] + 5;
    v401 = *(_QWORD **)a1[4];
    v402 = *v401;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v403 = *(_DWORD *)(*v401 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v403);
    v404 = (const float *)(*v401 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v403);
    v405 = *(_QWORD *)(v401[1] + 144);
    v602 = vld3_f32(v404);
    a3.f32[2] = (float)(v400 / v403);
    v406.i64[0] = 0x3F0000003F000000;
    v406.i64[1] = 0x3F0000003F000000;
    v407 = vaddq_f32(a3, v406);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v407.f32[0]), v602.val[1], *(float32x2_t *)v407.f32, 1), v602.val[2], v407, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v400;
    v408 = vmulq_n_f32(vaddq_f32(a4, v406), *(float *)&v405);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v402 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v408.f32[0]), v602.val[1], *(float32x2_t *)v408.f32, 1), v602.val[2], v408, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v409 = v6[344];
  if (v409 != v8 && (v409 & 0x40000000) != 0)
  {
    v410 = a2[1].i32[0] + 5;
    v411 = a2->i32[0];
    v412 = a2->i32[1] + 3;
    v413 = *(_QWORD **)a1[4];
    v414 = *v413;
    v415 = (const float *)(*v413 + 1656);
    v416 = *(_DWORD *)(*v413 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v416);
    v417 = *(_QWORD *)(v413[1] + 144);
    a3.f32[1] = (float)(v412 / v416);
    a3.f32[2] = (float)(v410 / v416);
    v418.i64[0] = 0x3F0000003F000000;
    v418.i64[1] = 0x3F0000003F000000;
    v419 = vaddq_f32(a3, v418);
    v603 = vld3_f32(v415);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v419.f32[0]), v603.val[1], *(float32x2_t *)v419.f32, 1), v603.val[2], v419, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v419.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v412, v411));
    v419.f32[2] = (float)v410;
    v420 = vmulq_n_f32(vaddq_f32(v419, v418), *(float *)&v417);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v414 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v420.f32[0]), v603.val[1], *(float32x2_t *)v420.f32, 1), v603.val[2], v420, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v421 = v6[345];
  if (v421 != v8 && (v421 & 0x40000000) != 0)
  {
    v422 = a2[1].i32[0] + 5;
    v423 = *(_QWORD **)a1[4];
    v424 = *v423;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v425 = *(_DWORD *)(*v423 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v425);
    v426 = (const float *)(*v423 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v425);
    v427 = *(_QWORD *)(v423[1] + 144);
    v604 = vld3_f32(v426);
    a3.f32[2] = (float)(v422 / v425);
    v428.i64[0] = 0x3F0000003F000000;
    v428.i64[1] = 0x3F0000003F000000;
    v429 = vaddq_f32(a3, v428);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v429.f32[0]), v604.val[1], *(float32x2_t *)v429.f32, 1), v604.val[2], v429, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v422;
    v430 = vmulq_n_f32(vaddq_f32(a4, v428), *(float *)&v427);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v424 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v430.f32[0]), v604.val[1], *(float32x2_t *)v430.f32, 1), v604.val[2], v430, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v431 = v6[346];
  if (v431 != v8 && (v431 & 0x40000000) != 0)
  {
    v432 = a2[1].i32[0] + 5;
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v435 = *(_DWORD *)(*v433 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v435);
    v436 = (const float *)(*v433 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v435);
    v437 = *(_QWORD *)(v433[1] + 144);
    v605 = vld3_f32(v436);
    a3.f32[2] = (float)(v432 / v435);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v439.f32[0]), v605.val[1], *(float32x2_t *)v439.f32, 1), v605.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v432;
    v440 = vmulq_n_f32(vaddq_f32(a4, v438), *(float *)&v437);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v440.f32[0]), v605.val[1], *(float32x2_t *)v440.f32, 1), v605.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[347];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2[1].i32[0] + 5;
    v443 = *(_QWORD **)a1[4];
    v444 = *v443;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v445 = *(_DWORD *)(*v443 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v445);
    v446 = (const float *)(*v443 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v445);
    v447 = *(_QWORD *)(v443[1] + 144);
    v606 = vld3_f32(v446);
    a3.f32[2] = (float)(v442 / v445);
    v448.i64[0] = 0x3F0000003F000000;
    v448.i64[1] = 0x3F0000003F000000;
    v449 = vaddq_f32(a3, v448);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v449.f32[0]), v606.val[1], *(float32x2_t *)v449.f32, 1), v606.val[2], v449, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v442;
    v450 = vmulq_n_f32(vaddq_f32(a4, v448), *(float *)&v447);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v444 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v450.f32[0]), v606.val[1], *(float32x2_t *)v450.f32, 1), v606.val[2], v450, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v451 = v6[348];
  if (v451 != v8 && (v451 & 0x40000000) != 0)
  {
    v452 = a2[1].i32[0] + 5;
    v453 = *(_QWORD **)a1[4];
    v454 = *v453;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v455 = *(_DWORD *)(*v453 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v455);
    v456 = (const float *)(*v453 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v455);
    v457 = *(_QWORD *)(v453[1] + 144);
    v607 = vld3_f32(v456);
    a3.f32[2] = (float)(v452 / v455);
    v458.i64[0] = 0x3F0000003F000000;
    v458.i64[1] = 0x3F0000003F000000;
    v459 = vaddq_f32(a3, v458);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v459.f32[0]), v607.val[1], *(float32x2_t *)v459.f32, 1), v607.val[2], v459, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v452;
    v460 = vmulq_n_f32(vaddq_f32(a4, v458), *(float *)&v457);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v454 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v460.f32[0]), v607.val[1], *(float32x2_t *)v460.f32, 1), v607.val[2], v460, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v461 = v6[349];
  if (v461 != v8 && (v461 & 0x40000000) != 0)
  {
    v462 = a2[1].i32[0] + 5;
    v463 = *(_QWORD **)a1[4];
    v464 = *v463;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v465 = *(_DWORD *)(*v463 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v465);
    v466 = (const float *)(*v463 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v465);
    v467 = *(_QWORD *)(v463[1] + 144);
    v608 = vld3_f32(v466);
    a3.f32[2] = (float)(v462 / v465);
    v468.i64[0] = 0x3F0000003F000000;
    v468.i64[1] = 0x3F0000003F000000;
    v469 = vaddq_f32(a3, v468);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v469.f32[0]), v608.val[1], *(float32x2_t *)v469.f32, 1), v608.val[2], v469, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v462;
    v470 = vmulq_n_f32(vaddq_f32(a4, v468), *(float *)&v467);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v464 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v470.f32[0]), v608.val[1], *(float32x2_t *)v470.f32, 1), v608.val[2], v470, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v471 = v6[350];
  if (v471 != v8 && (v471 & 0x40000000) != 0)
  {
    v472 = a2[1].i32[0] + 5;
    v473 = *(_QWORD **)a1[4];
    v474 = *v473;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v475 = *(_DWORD *)(*v473 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v475);
    v476 = (const float *)(*v473 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v475);
    v477 = *(_QWORD *)(v473[1] + 144);
    v609 = vld3_f32(v476);
    a3.f32[2] = (float)(v472 / v475);
    v478.i64[0] = 0x3F0000003F000000;
    v478.i64[1] = 0x3F0000003F000000;
    v479 = vaddq_f32(a3, v478);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v479.f32[0]), v609.val[1], *(float32x2_t *)v479.f32, 1), v609.val[2], v479, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v472;
    v480 = vmulq_n_f32(vaddq_f32(a4, v478), *(float *)&v477);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v474 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v480.f32[0]), v609.val[1], *(float32x2_t *)v480.f32, 1), v609.val[2], v480, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v481 = v6[351];
  if (v481 != v8 && (v481 & 0x40000000) != 0)
  {
    v482 = a2[1].i32[0] + 5;
    v483 = *(_QWORD **)a1[4];
    v484 = *v483;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v485 = *(_DWORD *)(*v483 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v485);
    v486 = (const float *)(*v483 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v485);
    v487 = *(_QWORD *)(v483[1] + 144);
    v610 = vld3_f32(v486);
    a3.f32[2] = (float)(v482 / v485);
    v488.i64[0] = 0x3F0000003F000000;
    v488.i64[1] = 0x3F0000003F000000;
    v489 = vaddq_f32(a3, v488);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v489.f32[0]), v610.val[1], *(float32x2_t *)v489.f32, 1), v610.val[2], v489, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v482;
    v490 = vmulq_n_f32(vaddq_f32(a4, v488), *(float *)&v487);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v484 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v490.f32[0]), v610.val[1], *(float32x2_t *)v490.f32, 1), v610.val[2], v490, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v491 = v6[352];
  if (v491 != v8 && (v491 & 0x40000000) != 0)
  {
    v492 = a2[1].i32[0] + 5;
    v493 = a2->i32[0];
    v494 = a2->i32[1] + 4;
    v495 = *(_QWORD **)a1[4];
    v496 = *v495;
    v497 = (const float *)(*v495 + 1656);
    v498 = *(_DWORD *)(*v495 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v498);
    v499 = *(_QWORD *)(v495[1] + 144);
    a3.f32[1] = (float)(v494 / v498);
    a3.f32[2] = (float)(v492 / v498);
    v500.i64[0] = 0x3F0000003F000000;
    v500.i64[1] = 0x3F0000003F000000;
    v501 = vaddq_f32(a3, v500);
    v611 = vld3_f32(v497);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v501.f32[0]), v611.val[1], *(float32x2_t *)v501.f32, 1), v611.val[2], v501, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v501.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v494, v493));
    v501.f32[2] = (float)v492;
    v502 = vmulq_n_f32(vaddq_f32(v501, v500), *(float *)&v499);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v496 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v502.f32[0]), v611.val[1], *(float32x2_t *)v502.f32, 1), v611.val[2], v502, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v503 = v6[353];
  if (v503 != v8 && (v503 & 0x40000000) != 0)
  {
    v504 = a2[1].i32[0] + 5;
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v507 = *(_DWORD *)(*v505 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v507);
    v508 = (const float *)(*v505 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v507);
    v509 = *(_QWORD *)(v505[1] + 144);
    v612 = vld3_f32(v508);
    a3.f32[2] = (float)(v504 / v507);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v511.f32[0]), v612.val[1], *(float32x2_t *)v511.f32, 1), v612.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v504;
    v512 = vmulq_n_f32(vaddq_f32(a4, v510), *(float *)&v509);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v512.f32[0]), v612.val[1], *(float32x2_t *)v512.f32, 1), v612.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[354];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0] + 5;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v613 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v521.f32[0]), v613.val[1], *(float32x2_t *)v521.f32, 1), v613.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v522.f32[0]), v613.val[1], *(float32x2_t *)v522.f32, 1), v613.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[355];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 5;
    v525 = *(_QWORD **)a1[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v614 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v531.f32[0]), v614.val[1], *(float32x2_t *)v531.f32, 1), v614.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v526 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v532.f32[0]), v614.val[1], *(float32x2_t *)v532.f32, 1), v614.val[2], v532, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v533 = v6[356];
  if (v533 != v8 && (v533 & 0x40000000) != 0)
  {
    v534 = a2[1].i32[0] + 5;
    v535 = *(_QWORD **)a1[4];
    v536 = *v535;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v537 = *(_DWORD *)(*v535 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v537);
    v538 = (const float *)(*v535 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v537);
    v539 = *(_QWORD *)(v535[1] + 144);
    v615 = vld3_f32(v538);
    a3.f32[2] = (float)(v534 / v537);
    v540.i64[0] = 0x3F0000003F000000;
    v540.i64[1] = 0x3F0000003F000000;
    v541 = vaddq_f32(a3, v540);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v541.f32[0]), v615.val[1], *(float32x2_t *)v541.f32, 1), v615.val[2], v541, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v534;
    v542 = vmulq_n_f32(vaddq_f32(a4, v540), *(float *)&v539);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v536 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v542.f32[0]), v615.val[1], *(float32x2_t *)v542.f32, 1), v615.val[2], v542, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v543 = v6[357];
  if (v543 != v8 && (v543 & 0x40000000) != 0)
  {
    v544 = a2[1].i32[0] + 5;
    v545 = *(_QWORD **)a1[4];
    v546 = *v545;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v547 = *(_DWORD *)(*v545 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v547);
    v548 = (const float *)(*v545 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v547);
    v549 = *(_QWORD *)(v545[1] + 144);
    v616 = vld3_f32(v548);
    a3.f32[2] = (float)(v544 / v547);
    v550.i64[0] = 0x3F0000003F000000;
    v550.i64[1] = 0x3F0000003F000000;
    v551 = vaddq_f32(a3, v550);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v551.f32[0]), v616.val[1], *(float32x2_t *)v551.f32, 1), v616.val[2], v551, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v544;
    v552 = vmulq_n_f32(vaddq_f32(a4, v550), *(float *)&v549);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v546 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v552.f32[0]), v616.val[1], *(float32x2_t *)v552.f32, 1), v616.val[2], v552, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v553 = v6[358];
  if (v553 != v8 && (v553 & 0x40000000) != 0)
  {
    v554 = a2[1].i32[0] + 5;
    v555 = *(_QWORD **)a1[4];
    v556 = *v555;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v557 = *(_DWORD *)(*v555 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v557);
    v558 = (const float *)(*v555 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v557);
    v559 = *(_QWORD *)(v555[1] + 144);
    v617 = vld3_f32(v558);
    a3.f32[2] = (float)(v554 / v557);
    v560.i64[0] = 0x3F0000003F000000;
    v560.i64[1] = 0x3F0000003F000000;
    v561 = vaddq_f32(a3, v560);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v561.f32[0]), v617.val[1], *(float32x2_t *)v561.f32, 1), v617.val[2], v561, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v554;
    v562 = vmulq_n_f32(vaddq_f32(a4, v560), *(float *)&v559);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v556 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v562.f32[0]), v617.val[1], *(float32x2_t *)v562.f32, 1), v617.val[2], v562, 2);
  }
  return sub_223A01E74(a1, a2, a3, a4);
}

uint64_t *sub_223A01E74(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  uint64_t *v33;
  int v34;
  int v36;
  __int32 v37;
  int v38;
  _QWORD *v39;
  uint64_t v40;
  const float *v41;
  int v42;
  uint64_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  int v47;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  int v52;
  const float *v53;
  uint64_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  int v58;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  const float *v64;
  uint64_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  int v69;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  int v74;
  const float *v75;
  uint64_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  int v80;
  int v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  const float *v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  int v91;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  const float *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  const float *v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int v121;
  int v122;
  __int32 v123;
  int v124;
  _QWORD *v125;
  uint64_t v126;
  const float *v127;
  int v128;
  uint64_t v129;
  float32x4_t v130;
  float32x4_t v131;
  float32x4_t v132;
  int v133;
  int v134;
  _QWORD *v135;
  uint64_t v136;
  int v137;
  const float *v138;
  uint64_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  int v143;
  int v144;
  _QWORD *v145;
  uint64_t v146;
  int v147;
  const float *v148;
  uint64_t v149;
  float32x4_t v150;
  float32x4_t v151;
  float32x4_t v152;
  int v153;
  int v154;
  _QWORD *v155;
  uint64_t v156;
  int v157;
  const float *v158;
  uint64_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x4_t v162;
  int v163;
  int v164;
  _QWORD *v165;
  uint64_t v166;
  int v167;
  const float *v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  int v173;
  int v174;
  _QWORD *v175;
  uint64_t v176;
  int v177;
  const float *v178;
  uint64_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  int v183;
  int v184;
  _QWORD *v185;
  uint64_t v186;
  int v187;
  const float *v188;
  uint64_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  int v193;
  int v194;
  _QWORD *v195;
  uint64_t v196;
  int v197;
  const float *v198;
  uint64_t v199;
  float32x4_t v200;
  float32x4_t v201;
  float32x4_t v202;
  int v203;
  int v204;
  __int32 v205;
  int v206;
  _QWORD *v207;
  uint64_t v208;
  const float *v209;
  int v210;
  uint64_t v211;
  float32x4_t v212;
  float32x4_t v213;
  float32x4_t v214;
  int v215;
  int v216;
  _QWORD *v217;
  uint64_t v218;
  int v219;
  const float *v220;
  uint64_t v221;
  float32x4_t v222;
  float32x4_t v223;
  float32x4_t v224;
  int v225;
  int v226;
  _QWORD *v227;
  uint64_t v228;
  int v229;
  const float *v230;
  uint64_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  int v235;
  int v236;
  _QWORD *v237;
  uint64_t v238;
  int v239;
  const float *v240;
  uint64_t v241;
  float32x4_t v242;
  float32x4_t v243;
  float32x4_t v244;
  int v245;
  int v246;
  _QWORD *v247;
  uint64_t v248;
  int v249;
  const float *v250;
  uint64_t v251;
  float32x4_t v252;
  float32x4_t v253;
  float32x4_t v254;
  int v255;
  int v256;
  _QWORD *v257;
  uint64_t v258;
  int v259;
  const float *v260;
  uint64_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float32x4_t v264;
  int v265;
  int v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  const float *v270;
  uint64_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x4_t v274;
  int v275;
  int v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  const float *v280;
  uint64_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  int v285;
  int v286;
  _QWORD *v287;
  uint64_t v288;
  int v289;
  const float *v290;
  uint64_t v291;
  float32x4_t v292;
  float32x4_t v293;
  float32x4_t v294;
  int v295;
  __int32 v296;
  int v297;
  int v298;
  _QWORD *v299;
  uint64_t v300;
  const float *v301;
  int v302;
  uint64_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  int v307;
  __int32 v308;
  int v309;
  int v310;
  _QWORD *v311;
  uint64_t v312;
  const float *v313;
  int v314;
  uint64_t v315;
  float32x4_t v316;
  float32x4_t v317;
  float32x4_t v318;
  int v319;
  __int32 v320;
  int v321;
  int v322;
  _QWORD *v323;
  uint64_t v324;
  const float *v325;
  int v326;
  uint64_t v327;
  float32x4_t v328;
  float32x4_t v329;
  float32x4_t v330;
  int v331;
  __int32 v332;
  int v333;
  int v334;
  _QWORD *v335;
  uint64_t v336;
  const float *v337;
  int v338;
  uint64_t v339;
  float32x4_t v340;
  float32x4_t v341;
  float32x4_t v342;
  int v343;
  __int32 v344;
  int v345;
  int v346;
  _QWORD *v347;
  uint64_t v348;
  const float *v349;
  int v350;
  uint64_t v351;
  float32x4_t v352;
  float32x4_t v353;
  float32x4_t v354;
  int v355;
  __int32 v356;
  int v357;
  int v358;
  _QWORD *v359;
  uint64_t v360;
  const float *v361;
  int v362;
  uint64_t v363;
  float32x4_t v364;
  float32x4_t v365;
  float32x4_t v366;
  int v367;
  __int32 v368;
  int v369;
  int v370;
  _QWORD *v371;
  uint64_t v372;
  const float *v373;
  int v374;
  uint64_t v375;
  float32x4_t v376;
  float32x4_t v377;
  float32x4_t v378;
  int v379;
  int v380;
  __int32 v381;
  int v382;
  _QWORD *v383;
  uint64_t v384;
  const float *v385;
  int v386;
  uint64_t v387;
  float32x4_t v388;
  float32x4_t v389;
  float32x4_t v390;
  int v391;
  int v392;
  _QWORD *v393;
  uint64_t v394;
  int v395;
  const float *v396;
  uint64_t v397;
  float32x4_t v398;
  float32x4_t v399;
  float32x4_t v400;
  int v401;
  int v402;
  _QWORD *v403;
  uint64_t v404;
  int v405;
  const float *v406;
  uint64_t v407;
  float32x4_t v408;
  float32x4_t v409;
  float32x4_t v410;
  int v411;
  int v412;
  _QWORD *v413;
  uint64_t v414;
  int v415;
  const float *v416;
  uint64_t v417;
  float32x4_t v418;
  float32x4_t v419;
  float32x4_t v420;
  int v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  const float *v426;
  uint64_t v427;
  float32x4_t v428;
  float32x4_t v429;
  float32x4_t v430;
  int v431;
  int v432;
  _QWORD *v433;
  uint64_t v434;
  int v435;
  const float *v436;
  uint64_t v437;
  float32x4_t v438;
  float32x4_t v439;
  float32x4_t v440;
  int v441;
  int v442;
  _QWORD *v443;
  uint64_t v444;
  int v445;
  const float *v446;
  uint64_t v447;
  float32x4_t v448;
  float32x4_t v449;
  float32x4_t v450;
  int v451;
  int v452;
  _QWORD *v453;
  uint64_t v454;
  int v455;
  const float *v456;
  uint64_t v457;
  float32x4_t v458;
  float32x4_t v459;
  float32x4_t v460;
  int v461;
  int v462;
  __int32 v463;
  int v464;
  _QWORD *v465;
  uint64_t v466;
  const float *v467;
  int v468;
  uint64_t v469;
  float32x4_t v470;
  float32x4_t v471;
  float32x4_t v472;
  int v473;
  int v474;
  _QWORD *v475;
  uint64_t v476;
  int v477;
  const float *v478;
  uint64_t v479;
  float32x4_t v480;
  float32x4_t v481;
  float32x4_t v482;
  int v483;
  int v484;
  _QWORD *v485;
  uint64_t v486;
  int v487;
  const float *v488;
  uint64_t v489;
  float32x4_t v490;
  float32x4_t v491;
  float32x4_t v492;
  int v493;
  int v494;
  _QWORD *v495;
  uint64_t v496;
  int v497;
  const float *v498;
  uint64_t v499;
  float32x4_t v500;
  float32x4_t v501;
  float32x4_t v502;
  int v503;
  int v504;
  _QWORD *v505;
  uint64_t v506;
  int v507;
  const float *v508;
  uint64_t v509;
  float32x4_t v510;
  float32x4_t v511;
  float32x4_t v512;
  int v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  int v517;
  const float *v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  int v533;
  int v534;
  _QWORD *v535;
  uint64_t v536;
  int v537;
  const float *v538;
  uint64_t v539;
  float32x4_t v540;
  float32x4_t v541;
  float32x4_t v542;
  int v543;
  int v544;
  __int32 v545;
  int v546;
  _QWORD *v547;
  uint64_t v548;
  const float *v549;
  int v550;
  uint64_t v551;
  float32x4_t v552;
  float32x4_t v553;
  float32x4_t v554;
  int v555;
  int v556;
  _QWORD *v557;
  uint64_t v558;
  int v559;
  const float *v560;
  uint64_t v561;
  float32x4_t v562;
  float32x4_t v563;
  float32x4_t v564;
  int32x2_t v566;
  int v567;
  int32x2_t *v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;
  float32x2x3_t v618;
  float32x2x3_t v619;

  v6 = (_DWORD *)a1[1];
  v7 = v6[359];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[360];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v36 = a2[1].i32[0] + 5;
      v37 = a2->i32[0];
      v38 = a2->i32[1] + 5;
      v39 = *(_QWORD **)a1[4];
      v40 = *v39;
      v41 = (const float *)(*v39 + 1656);
      v42 = *(_DWORD *)(*v39 + 8);
      a3.f32[0] = (float)(a2->i32[0] / v42);
      v43 = *(_QWORD *)(v39[1] + 144);
      a3.f32[1] = (float)(v38 / v42);
      a3.f32[2] = (float)(v36 / v42);
      v44.i64[0] = 0x3F0000003F000000;
      v44.i64[1] = 0x3F0000003F000000;
      v45 = vaddq_f32(a3, v44);
      v570 = vld3_f32(v41);
      v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v45.f32[0]), v570.val[1], *(float32x2_t *)v45.f32, 1), v570.val[2], v45, 2), (float32x2_t)0xBF000000BF000000));
      v567 = 0;
      *(float32x2_t *)v45.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v38, v37));
      v45.f32[2] = (float)v36;
      v46 = vmulq_n_f32(vaddq_f32(v45, v44), *(float *)&v43);
      v568 = &v566;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v40 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v46.f32[0]), v570.val[1], *(float32x2_t *)v46.f32, 1), v570.val[2], v46, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v47 = v6[361];
      if (v47 != v8 && (v47 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 5;
    v24 = *(_QWORD **)a1[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v569 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v30.f32[0]), v569.val[1], *(float32x2_t *)v30.f32, 1), v569.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v31.f32[0]), v569.val[1], *(float32x2_t *)v31.f32, 1), v569.val[2], v31, 2);
    v568 = &v566;
    v33 = sub_223A17B10((float *)(v25 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568);
    *(uint64_t *)((char *)v33 + 28) = (uint64_t)v32;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v34 = v6[360];
    if (v34 != v8 && (v34 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[361];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v49 = a2[1].i32[0] + 5;
    v50 = *(_QWORD **)a1[4];
    v51 = *v50;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v52 = *(_DWORD *)(*v50 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v52);
    v53 = (const float *)(*v50 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v52);
    v54 = *(_QWORD *)(v50[1] + 144);
    v571 = vld3_f32(v53);
    a3.f32[2] = (float)(v49 / v52);
    v55.i64[0] = 0x3F0000003F000000;
    v55.i64[1] = 0x3F0000003F000000;
    v56 = vaddq_f32(a3, v55);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v56.f32[0]), v571.val[1], *(float32x2_t *)v56.f32, 1), v571.val[2], v56, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v49;
    v57 = vmulq_n_f32(vaddq_f32(a4, v55), *(float *)&v54);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v51 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v57.f32[0]), v571.val[1], *(float32x2_t *)v57.f32, 1), v571.val[2], v57, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v58 = v6[362];
    if (v58 != v8 && (v58 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[362];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v60 = a2[1].i32[0] + 5;
    v61 = *(_QWORD **)a1[4];
    v62 = *v61;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v63 = *(_DWORD *)(*v61 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v63);
    v64 = (const float *)(*v61 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v63);
    v65 = *(_QWORD *)(v61[1] + 144);
    v572 = vld3_f32(v64);
    a3.f32[2] = (float)(v60 / v63);
    v66.i64[0] = 0x3F0000003F000000;
    v66.i64[1] = 0x3F0000003F000000;
    v67 = vaddq_f32(a3, v66);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v67.f32[0]), v572.val[1], *(float32x2_t *)v67.f32, 1), v572.val[2], v67, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v60;
    v68 = vmulq_n_f32(vaddq_f32(a4, v66), *(float *)&v65);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v62 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v68.f32[0]), v572.val[1], *(float32x2_t *)v68.f32, 1), v572.val[2], v68, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v69 = v6[363];
    if (v69 != v8 && (v69 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[363];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v71 = a2[1].i32[0] + 5;
    v72 = *(_QWORD **)a1[4];
    v73 = *v72;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v74 = *(_DWORD *)(*v72 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v74);
    v75 = (const float *)(*v72 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v74);
    v76 = *(_QWORD *)(v72[1] + 144);
    v573 = vld3_f32(v75);
    a3.f32[2] = (float)(v71 / v74);
    v77.i64[0] = 0x3F0000003F000000;
    v77.i64[1] = 0x3F0000003F000000;
    v78 = vaddq_f32(a3, v77);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v78.f32[0]), v573.val[1], *(float32x2_t *)v78.f32, 1), v573.val[2], v78, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v71;
    v79 = vmulq_n_f32(vaddq_f32(a4, v77), *(float *)&v76);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v73 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v79.f32[0]), v573.val[1], *(float32x2_t *)v79.f32, 1), v573.val[2], v79, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v80 = v6[364];
    if (v80 != v8 && (v80 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[364];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v82 = a2[1].i32[0] + 5;
    v83 = *(_QWORD **)a1[4];
    v84 = *v83;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v85 = *(_DWORD *)(*v83 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v85);
    v86 = (const float *)(*v83 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v85);
    v87 = *(_QWORD *)(v83[1] + 144);
    v574 = vld3_f32(v86);
    a3.f32[2] = (float)(v82 / v85);
    v88.i64[0] = 0x3F0000003F000000;
    v88.i64[1] = 0x3F0000003F000000;
    v89 = vaddq_f32(a3, v88);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v89.f32[0]), v574.val[1], *(float32x2_t *)v89.f32, 1), v574.val[2], v89, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v82;
    v90 = vmulq_n_f32(vaddq_f32(a4, v88), *(float *)&v87);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v84 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v90.f32[0]), v574.val[1], *(float32x2_t *)v90.f32, 1), v574.val[2], v90, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v91 = v6[365];
    if (v91 != v8 && (v91 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[365];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v93 = a2[1].i32[0] + 5;
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v96 = *(_DWORD *)(*v94 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v96);
    v97 = (const float *)(*v94 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v96);
    v98 = *(_QWORD *)(v94[1] + 144);
    v575 = vld3_f32(v97);
    a3.f32[2] = (float)(v93 / v96);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v100.f32[0]), v575.val[1], *(float32x2_t *)v100.f32, 1), v575.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v93;
    v101 = vmulq_n_f32(vaddq_f32(a4, v99), *(float *)&v98);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v101.f32[0]), v575.val[1], *(float32x2_t *)v101.f32, 1), v575.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[366];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[366];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0] + 5;
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v576 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v109.f32[0]), v576.val[1], *(float32x2_t *)v109.f32, 1), v576.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v110.f32[0]), v576.val[1], *(float32x2_t *)v110.f32, 1), v576.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[367];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0] + 5;
    v113 = *(_QWORD **)a1[4];
    v114 = *v113;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v115 = *(_DWORD *)(*v113 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v115);
    v116 = (const float *)(*v113 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v115);
    v117 = *(_QWORD *)(v113[1] + 144);
    v577 = vld3_f32(v116);
    a3.f32[2] = (float)(v112 / v115);
    v118.i64[0] = 0x3F0000003F000000;
    v118.i64[1] = 0x3F0000003F000000;
    v119 = vaddq_f32(a3, v118);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v119.f32[0]), v577.val[1], *(float32x2_t *)v119.f32, 1), v577.val[2], v119, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v112;
    v120 = vmulq_n_f32(vaddq_f32(a4, v118), *(float *)&v117);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v114 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v120.f32[0]), v577.val[1], *(float32x2_t *)v120.f32, 1), v577.val[2], v120, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v121 = v6[368];
  if (v121 != v8 && (v121 & 0x40000000) != 0)
  {
    v122 = a2[1].i32[0] + 5;
    v123 = a2->i32[0];
    v124 = a2->i32[1] + 6;
    v125 = *(_QWORD **)a1[4];
    v126 = *v125;
    v127 = (const float *)(*v125 + 1656);
    v128 = *(_DWORD *)(*v125 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v128);
    v129 = *(_QWORD *)(v125[1] + 144);
    a3.f32[1] = (float)(v124 / v128);
    a3.f32[2] = (float)(v122 / v128);
    v130.i64[0] = 0x3F0000003F000000;
    v130.i64[1] = 0x3F0000003F000000;
    v131 = vaddq_f32(a3, v130);
    v578 = vld3_f32(v127);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v131.f32[0]), v578.val[1], *(float32x2_t *)v131.f32, 1), v578.val[2], v131, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v131.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v124, v123));
    v131.f32[2] = (float)v122;
    v132 = vmulq_n_f32(vaddq_f32(v131, v130), *(float *)&v129);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v126 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v132.f32[0]), v578.val[1], *(float32x2_t *)v132.f32, 1), v578.val[2], v132, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v133 = v6[369];
  if (v133 != v8 && (v133 & 0x40000000) != 0)
  {
    v134 = a2[1].i32[0] + 5;
    v135 = *(_QWORD **)a1[4];
    v136 = *v135;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v137 = *(_DWORD *)(*v135 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v137);
    v138 = (const float *)(*v135 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v137);
    v139 = *(_QWORD *)(v135[1] + 144);
    v579 = vld3_f32(v138);
    a3.f32[2] = (float)(v134 / v137);
    v140.i64[0] = 0x3F0000003F000000;
    v140.i64[1] = 0x3F0000003F000000;
    v141 = vaddq_f32(a3, v140);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v141.f32[0]), v579.val[1], *(float32x2_t *)v141.f32, 1), v579.val[2], v141, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v134;
    v142 = vmulq_n_f32(vaddq_f32(a4, v140), *(float *)&v139);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v136 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v142.f32[0]), v579.val[1], *(float32x2_t *)v142.f32, 1), v579.val[2], v142, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v143 = v6[370];
  if (v143 != v8 && (v143 & 0x40000000) != 0)
  {
    v144 = a2[1].i32[0] + 5;
    v145 = *(_QWORD **)a1[4];
    v146 = *v145;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v147 = *(_DWORD *)(*v145 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v147);
    v148 = (const float *)(*v145 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v147);
    v149 = *(_QWORD *)(v145[1] + 144);
    v580 = vld3_f32(v148);
    a3.f32[2] = (float)(v144 / v147);
    v150.i64[0] = 0x3F0000003F000000;
    v150.i64[1] = 0x3F0000003F000000;
    v151 = vaddq_f32(a3, v150);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v151.f32[0]), v580.val[1], *(float32x2_t *)v151.f32, 1), v580.val[2], v151, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v144;
    v152 = vmulq_n_f32(vaddq_f32(a4, v150), *(float *)&v149);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v146 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v152.f32[0]), v580.val[1], *(float32x2_t *)v152.f32, 1), v580.val[2], v152, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v153 = v6[371];
  if (v153 != v8 && (v153 & 0x40000000) != 0)
  {
    v154 = a2[1].i32[0] + 5;
    v155 = *(_QWORD **)a1[4];
    v156 = *v155;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v157 = *(_DWORD *)(*v155 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v157);
    v158 = (const float *)(*v155 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v157);
    v159 = *(_QWORD *)(v155[1] + 144);
    v581 = vld3_f32(v158);
    a3.f32[2] = (float)(v154 / v157);
    v160.i64[0] = 0x3F0000003F000000;
    v160.i64[1] = 0x3F0000003F000000;
    v161 = vaddq_f32(a3, v160);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v161.f32[0]), v581.val[1], *(float32x2_t *)v161.f32, 1), v581.val[2], v161, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v154;
    v162 = vmulq_n_f32(vaddq_f32(a4, v160), *(float *)&v159);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v156 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v162.f32[0]), v581.val[1], *(float32x2_t *)v162.f32, 1), v581.val[2], v162, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v163 = v6[372];
  if (v163 != v8 && (v163 & 0x40000000) != 0)
  {
    v164 = a2[1].i32[0] + 5;
    v165 = *(_QWORD **)a1[4];
    v166 = *v165;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v167 = *(_DWORD *)(*v165 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v167);
    v168 = (const float *)(*v165 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v167);
    v169 = *(_QWORD *)(v165[1] + 144);
    v582 = vld3_f32(v168);
    a3.f32[2] = (float)(v164 / v167);
    v170.i64[0] = 0x3F0000003F000000;
    v170.i64[1] = 0x3F0000003F000000;
    v171 = vaddq_f32(a3, v170);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v171.f32[0]), v582.val[1], *(float32x2_t *)v171.f32, 1), v582.val[2], v171, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v164;
    v172 = vmulq_n_f32(vaddq_f32(a4, v170), *(float *)&v169);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v166 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v172.f32[0]), v582.val[1], *(float32x2_t *)v172.f32, 1), v582.val[2], v172, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v173 = v6[373];
  if (v173 != v8 && (v173 & 0x40000000) != 0)
  {
    v174 = a2[1].i32[0] + 5;
    v175 = *(_QWORD **)a1[4];
    v176 = *v175;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v177 = *(_DWORD *)(*v175 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v177);
    v178 = (const float *)(*v175 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v177);
    v179 = *(_QWORD *)(v175[1] + 144);
    v583 = vld3_f32(v178);
    a3.f32[2] = (float)(v174 / v177);
    v180.i64[0] = 0x3F0000003F000000;
    v180.i64[1] = 0x3F0000003F000000;
    v181 = vaddq_f32(a3, v180);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v181.f32[0]), v583.val[1], *(float32x2_t *)v181.f32, 1), v583.val[2], v181, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v174;
    v182 = vmulq_n_f32(vaddq_f32(a4, v180), *(float *)&v179);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v176 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v182.f32[0]), v583.val[1], *(float32x2_t *)v182.f32, 1), v583.val[2], v182, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v183 = v6[374];
  if (v183 != v8 && (v183 & 0x40000000) != 0)
  {
    v184 = a2[1].i32[0] + 5;
    v185 = *(_QWORD **)a1[4];
    v186 = *v185;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v187 = *(_DWORD *)(*v185 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v187);
    v188 = (const float *)(*v185 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v187);
    v189 = *(_QWORD *)(v185[1] + 144);
    v584 = vld3_f32(v188);
    a3.f32[2] = (float)(v184 / v187);
    v190.i64[0] = 0x3F0000003F000000;
    v190.i64[1] = 0x3F0000003F000000;
    v191 = vaddq_f32(a3, v190);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v191.f32[0]), v584.val[1], *(float32x2_t *)v191.f32, 1), v584.val[2], v191, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v184;
    v192 = vmulq_n_f32(vaddq_f32(a4, v190), *(float *)&v189);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v186 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v192.f32[0]), v584.val[1], *(float32x2_t *)v192.f32, 1), v584.val[2], v192, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v193 = v6[375];
  if (v193 != v8 && (v193 & 0x40000000) != 0)
  {
    v194 = a2[1].i32[0] + 5;
    v195 = *(_QWORD **)a1[4];
    v196 = *v195;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v197 = *(_DWORD *)(*v195 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v197);
    v198 = (const float *)(*v195 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v197);
    v199 = *(_QWORD *)(v195[1] + 144);
    v585 = vld3_f32(v198);
    a3.f32[2] = (float)(v194 / v197);
    v200.i64[0] = 0x3F0000003F000000;
    v200.i64[1] = 0x3F0000003F000000;
    v201 = vaddq_f32(a3, v200);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v201.f32[0]), v585.val[1], *(float32x2_t *)v201.f32, 1), v585.val[2], v201, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v194;
    v202 = vmulq_n_f32(vaddq_f32(a4, v200), *(float *)&v199);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v196 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v202.f32[0]), v585.val[1], *(float32x2_t *)v202.f32, 1), v585.val[2], v202, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v203 = v6[376];
  if (v203 != v8 && (v203 & 0x40000000) != 0)
  {
    v204 = a2[1].i32[0] + 5;
    v205 = a2->i32[0];
    v206 = a2->i32[1] + 7;
    v207 = *(_QWORD **)a1[4];
    v208 = *v207;
    v209 = (const float *)(*v207 + 1656);
    v210 = *(_DWORD *)(*v207 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v210);
    v211 = *(_QWORD *)(v207[1] + 144);
    a3.f32[1] = (float)(v206 / v210);
    a3.f32[2] = (float)(v204 / v210);
    v212.i64[0] = 0x3F0000003F000000;
    v212.i64[1] = 0x3F0000003F000000;
    v213 = vaddq_f32(a3, v212);
    v586 = vld3_f32(v209);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v213.f32[0]), v586.val[1], *(float32x2_t *)v213.f32, 1), v586.val[2], v213, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v213.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v206, v205));
    v213.f32[2] = (float)v204;
    v214 = vmulq_n_f32(vaddq_f32(v213, v212), *(float *)&v211);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v208 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v214.f32[0]), v586.val[1], *(float32x2_t *)v214.f32, 1), v586.val[2], v214, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v215 = v6[377];
  if (v215 != v8 && (v215 & 0x40000000) != 0)
  {
    v216 = a2[1].i32[0] + 5;
    v217 = *(_QWORD **)a1[4];
    v218 = *v217;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v219 = *(_DWORD *)(*v217 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v219);
    v220 = (const float *)(*v217 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v219);
    v221 = *(_QWORD *)(v217[1] + 144);
    v587 = vld3_f32(v220);
    a3.f32[2] = (float)(v216 / v219);
    v222.i64[0] = 0x3F0000003F000000;
    v222.i64[1] = 0x3F0000003F000000;
    v223 = vaddq_f32(a3, v222);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v223.f32[0]), v587.val[1], *(float32x2_t *)v223.f32, 1), v587.val[2], v223, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v216;
    v224 = vmulq_n_f32(vaddq_f32(a4, v222), *(float *)&v221);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v218 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v224.f32[0]), v587.val[1], *(float32x2_t *)v224.f32, 1), v587.val[2], v224, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v225 = v6[378];
  if (v225 != v8 && (v225 & 0x40000000) != 0)
  {
    v226 = a2[1].i32[0] + 5;
    v227 = *(_QWORD **)a1[4];
    v228 = *v227;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v229 = *(_DWORD *)(*v227 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v229);
    v230 = (const float *)(*v227 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v229);
    v231 = *(_QWORD *)(v227[1] + 144);
    v588 = vld3_f32(v230);
    a3.f32[2] = (float)(v226 / v229);
    v232.i64[0] = 0x3F0000003F000000;
    v232.i64[1] = 0x3F0000003F000000;
    v233 = vaddq_f32(a3, v232);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v233.f32[0]), v588.val[1], *(float32x2_t *)v233.f32, 1), v588.val[2], v233, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v226;
    v234 = vmulq_n_f32(vaddq_f32(a4, v232), *(float *)&v231);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v228 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v234.f32[0]), v588.val[1], *(float32x2_t *)v234.f32, 1), v588.val[2], v234, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v235 = v6[379];
  if (v235 != v8 && (v235 & 0x40000000) != 0)
  {
    v236 = a2[1].i32[0] + 5;
    v237 = *(_QWORD **)a1[4];
    v238 = *v237;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v239 = *(_DWORD *)(*v237 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v239);
    v240 = (const float *)(*v237 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v239);
    v241 = *(_QWORD *)(v237[1] + 144);
    v589 = vld3_f32(v240);
    a3.f32[2] = (float)(v236 / v239);
    v242.i64[0] = 0x3F0000003F000000;
    v242.i64[1] = 0x3F0000003F000000;
    v243 = vaddq_f32(a3, v242);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v243.f32[0]), v589.val[1], *(float32x2_t *)v243.f32, 1), v589.val[2], v243, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v236;
    v244 = vmulq_n_f32(vaddq_f32(a4, v242), *(float *)&v241);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v238 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v244.f32[0]), v589.val[1], *(float32x2_t *)v244.f32, 1), v589.val[2], v244, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v245 = v6[380];
  if (v245 != v8 && (v245 & 0x40000000) != 0)
  {
    v246 = a2[1].i32[0] + 5;
    v247 = *(_QWORD **)a1[4];
    v248 = *v247;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v249 = *(_DWORD *)(*v247 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v249);
    v250 = (const float *)(*v247 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v249);
    v251 = *(_QWORD *)(v247[1] + 144);
    v590 = vld3_f32(v250);
    a3.f32[2] = (float)(v246 / v249);
    v252.i64[0] = 0x3F0000003F000000;
    v252.i64[1] = 0x3F0000003F000000;
    v253 = vaddq_f32(a3, v252);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v253.f32[0]), v590.val[1], *(float32x2_t *)v253.f32, 1), v590.val[2], v253, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v246;
    v254 = vmulq_n_f32(vaddq_f32(a4, v252), *(float *)&v251);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v248 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v254.f32[0]), v590.val[1], *(float32x2_t *)v254.f32, 1), v590.val[2], v254, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v255 = v6[381];
  if (v255 != v8 && (v255 & 0x40000000) != 0)
  {
    v256 = a2[1].i32[0] + 5;
    v257 = *(_QWORD **)a1[4];
    v258 = *v257;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v259 = *(_DWORD *)(*v257 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v259);
    v260 = (const float *)(*v257 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v259);
    v261 = *(_QWORD *)(v257[1] + 144);
    v591 = vld3_f32(v260);
    a3.f32[2] = (float)(v256 / v259);
    v262.i64[0] = 0x3F0000003F000000;
    v262.i64[1] = 0x3F0000003F000000;
    v263 = vaddq_f32(a3, v262);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v263.f32[0]), v591.val[1], *(float32x2_t *)v263.f32, 1), v591.val[2], v263, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v256;
    v264 = vmulq_n_f32(vaddq_f32(a4, v262), *(float *)&v261);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v258 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v264.f32[0]), v591.val[1], *(float32x2_t *)v264.f32, 1), v591.val[2], v264, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v265 = v6[382];
  if (v265 != v8 && (v265 & 0x40000000) != 0)
  {
    v266 = a2[1].i32[0] + 5;
    v267 = *(_QWORD **)a1[4];
    v268 = *v267;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v269 = *(_DWORD *)(*v267 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v269);
    v270 = (const float *)(*v267 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v269);
    v271 = *(_QWORD *)(v267[1] + 144);
    v592 = vld3_f32(v270);
    a3.f32[2] = (float)(v266 / v269);
    v272.i64[0] = 0x3F0000003F000000;
    v272.i64[1] = 0x3F0000003F000000;
    v273 = vaddq_f32(a3, v272);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v273.f32[0]), v592.val[1], *(float32x2_t *)v273.f32, 1), v592.val[2], v273, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v266;
    v274 = vmulq_n_f32(vaddq_f32(a4, v272), *(float *)&v271);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v268 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v274.f32[0]), v592.val[1], *(float32x2_t *)v274.f32, 1), v592.val[2], v274, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v275 = v6[383];
  if (v275 != v8 && (v275 & 0x40000000) != 0)
  {
    v276 = a2[1].i32[0] + 5;
    v277 = *(_QWORD **)a1[4];
    v278 = *v277;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v279 = *(_DWORD *)(*v277 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v279);
    v280 = (const float *)(*v277 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v279);
    v281 = *(_QWORD *)(v277[1] + 144);
    v593 = vld3_f32(v280);
    a3.f32[2] = (float)(v276 / v279);
    v282.i64[0] = 0x3F0000003F000000;
    v282.i64[1] = 0x3F0000003F000000;
    v283 = vaddq_f32(a3, v282);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v283.f32[0]), v593.val[1], *(float32x2_t *)v283.f32, 1), v593.val[2], v283, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v276;
    v284 = vmulq_n_f32(vaddq_f32(a4, v282), *(float *)&v281);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v278 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v284.f32[0]), v593.val[1], *(float32x2_t *)v284.f32, 1), v593.val[2], v284, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v285 = v6[384];
  if (v285 != v8 && (v285 & 0x40000000) != 0)
  {
    v286 = a2[1].i32[0] + 6;
    v287 = *(_QWORD **)a1[4];
    v288 = *v287;
    v289 = *(_DWORD *)(*v287 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v289);
    v290 = (const float *)(*v287 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v289);
    v291 = *(_QWORD *)(v287[1] + 144);
    v594 = vld3_f32(v290);
    a3.f32[2] = (float)(v286 / v289);
    v292.i64[0] = 0x3F0000003F000000;
    v292.i64[1] = 0x3F0000003F000000;
    v293 = vaddq_f32(a3, v292);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v293.f32[0]), v594.val[1], *(float32x2_t *)v293.f32, 1), v594.val[2], v293, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v286;
    v294 = vmulq_n_f32(vaddq_f32(a4, v292), *(float *)&v291);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v288 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v294.f32[0]), v594.val[1], *(float32x2_t *)v294.f32, 1), v594.val[2], v294, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v295 = v6[385];
  if (v295 != v8 && (v295 & 0x40000000) != 0)
  {
    v296 = a2->i32[1];
    v297 = a2[1].i32[0] + 6;
    v298 = a2->i32[0] + 1;
    v299 = *(_QWORD **)a1[4];
    v300 = *v299;
    v301 = (const float *)(*v299 + 1656);
    v302 = *(_DWORD *)(*v299 + 8);
    a3.f32[0] = (float)(v298 / v302);
    v303 = *(_QWORD *)(v299[1] + 144);
    a3.f32[1] = (float)(v296 / v302);
    a3.f32[2] = (float)(v297 / v302);
    v304.i64[0] = 0x3F0000003F000000;
    v304.i64[1] = 0x3F0000003F000000;
    v305 = vaddq_f32(a3, v304);
    v595 = vld3_f32(v301);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v305.f32[0]), v595.val[1], *(float32x2_t *)v305.f32, 1), v595.val[2], v305, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v305.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v296, v298));
    v305.f32[2] = (float)v297;
    v306 = vmulq_n_f32(vaddq_f32(v305, v304), *(float *)&v303);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v300 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v306.f32[0]), v595.val[1], *(float32x2_t *)v306.f32, 1), v595.val[2], v306, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v307 = v6[386];
  if (v307 != v8 && (v307 & 0x40000000) != 0)
  {
    v308 = a2->i32[1];
    v309 = a2[1].i32[0] + 6;
    v310 = a2->i32[0] + 2;
    v311 = *(_QWORD **)a1[4];
    v312 = *v311;
    v313 = (const float *)(*v311 + 1656);
    v314 = *(_DWORD *)(*v311 + 8);
    a3.f32[0] = (float)(v310 / v314);
    v315 = *(_QWORD *)(v311[1] + 144);
    a3.f32[1] = (float)(v308 / v314);
    a3.f32[2] = (float)(v309 / v314);
    v316.i64[0] = 0x3F0000003F000000;
    v316.i64[1] = 0x3F0000003F000000;
    v317 = vaddq_f32(a3, v316);
    v596 = vld3_f32(v313);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v317.f32[0]), v596.val[1], *(float32x2_t *)v317.f32, 1), v596.val[2], v317, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v317.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v308, v310));
    v317.f32[2] = (float)v309;
    v318 = vmulq_n_f32(vaddq_f32(v317, v316), *(float *)&v315);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v312 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v318.f32[0]), v596.val[1], *(float32x2_t *)v318.f32, 1), v596.val[2], v318, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v319 = v6[387];
  if (v319 != v8 && (v319 & 0x40000000) != 0)
  {
    v320 = a2->i32[1];
    v321 = a2[1].i32[0] + 6;
    v322 = a2->i32[0] + 3;
    v323 = *(_QWORD **)a1[4];
    v324 = *v323;
    v325 = (const float *)(*v323 + 1656);
    v326 = *(_DWORD *)(*v323 + 8);
    a3.f32[0] = (float)(v322 / v326);
    v327 = *(_QWORD *)(v323[1] + 144);
    a3.f32[1] = (float)(v320 / v326);
    a3.f32[2] = (float)(v321 / v326);
    v328.i64[0] = 0x3F0000003F000000;
    v328.i64[1] = 0x3F0000003F000000;
    v329 = vaddq_f32(a3, v328);
    v597 = vld3_f32(v325);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v329.f32[0]), v597.val[1], *(float32x2_t *)v329.f32, 1), v597.val[2], v329, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v329.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v320, v322));
    v329.f32[2] = (float)v321;
    v330 = vmulq_n_f32(vaddq_f32(v329, v328), *(float *)&v327);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v324 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v330.f32[0]), v597.val[1], *(float32x2_t *)v330.f32, 1), v597.val[2], v330, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v331 = v6[388];
  if (v331 != v8 && (v331 & 0x40000000) != 0)
  {
    v332 = a2->i32[1];
    v333 = a2[1].i32[0] + 6;
    v334 = a2->i32[0] + 4;
    v335 = *(_QWORD **)a1[4];
    v336 = *v335;
    v337 = (const float *)(*v335 + 1656);
    v338 = *(_DWORD *)(*v335 + 8);
    a3.f32[0] = (float)(v334 / v338);
    v339 = *(_QWORD *)(v335[1] + 144);
    a3.f32[1] = (float)(v332 / v338);
    a3.f32[2] = (float)(v333 / v338);
    v340.i64[0] = 0x3F0000003F000000;
    v340.i64[1] = 0x3F0000003F000000;
    v341 = vaddq_f32(a3, v340);
    v598 = vld3_f32(v337);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v341.f32[0]), v598.val[1], *(float32x2_t *)v341.f32, 1), v598.val[2], v341, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v341.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v332, v334));
    v341.f32[2] = (float)v333;
    v342 = vmulq_n_f32(vaddq_f32(v341, v340), *(float *)&v339);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v336 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v342.f32[0]), v598.val[1], *(float32x2_t *)v342.f32, 1), v598.val[2], v342, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v343 = v6[389];
  if (v343 != v8 && (v343 & 0x40000000) != 0)
  {
    v344 = a2->i32[1];
    v345 = a2[1].i32[0] + 6;
    v346 = a2->i32[0] + 5;
    v347 = *(_QWORD **)a1[4];
    v348 = *v347;
    v349 = (const float *)(*v347 + 1656);
    v350 = *(_DWORD *)(*v347 + 8);
    a3.f32[0] = (float)(v346 / v350);
    v351 = *(_QWORD *)(v347[1] + 144);
    a3.f32[1] = (float)(v344 / v350);
    a3.f32[2] = (float)(v345 / v350);
    v352.i64[0] = 0x3F0000003F000000;
    v352.i64[1] = 0x3F0000003F000000;
    v353 = vaddq_f32(a3, v352);
    v599 = vld3_f32(v349);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v353.f32[0]), v599.val[1], *(float32x2_t *)v353.f32, 1), v599.val[2], v353, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v353.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v344, v346));
    v353.f32[2] = (float)v345;
    v354 = vmulq_n_f32(vaddq_f32(v353, v352), *(float *)&v351);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v348 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v354.f32[0]), v599.val[1], *(float32x2_t *)v354.f32, 1), v599.val[2], v354, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v355 = v6[390];
  if (v355 != v8 && (v355 & 0x40000000) != 0)
  {
    v356 = a2->i32[1];
    v357 = a2[1].i32[0] + 6;
    v358 = a2->i32[0] + 6;
    v359 = *(_QWORD **)a1[4];
    v360 = *v359;
    v361 = (const float *)(*v359 + 1656);
    v362 = *(_DWORD *)(*v359 + 8);
    a3.f32[0] = (float)(v358 / v362);
    v363 = *(_QWORD *)(v359[1] + 144);
    a3.f32[1] = (float)(v356 / v362);
    a3.f32[2] = (float)(v357 / v362);
    v364.i64[0] = 0x3F0000003F000000;
    v364.i64[1] = 0x3F0000003F000000;
    v365 = vaddq_f32(a3, v364);
    v600 = vld3_f32(v361);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v365.f32[0]), v600.val[1], *(float32x2_t *)v365.f32, 1), v600.val[2], v365, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v365.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v356, v358));
    v365.f32[2] = (float)v357;
    v366 = vmulq_n_f32(vaddq_f32(v365, v364), *(float *)&v363);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v360 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v366.f32[0]), v600.val[1], *(float32x2_t *)v366.f32, 1), v600.val[2], v366, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v367 = v6[391];
  if (v367 != v8 && (v367 & 0x40000000) != 0)
  {
    v368 = a2->i32[1];
    v369 = a2[1].i32[0] + 6;
    v370 = a2->i32[0] + 7;
    v371 = *(_QWORD **)a1[4];
    v372 = *v371;
    v373 = (const float *)(*v371 + 1656);
    v374 = *(_DWORD *)(*v371 + 8);
    a3.f32[0] = (float)(v370 / v374);
    v375 = *(_QWORD *)(v371[1] + 144);
    a3.f32[1] = (float)(v368 / v374);
    a3.f32[2] = (float)(v369 / v374);
    v376.i64[0] = 0x3F0000003F000000;
    v376.i64[1] = 0x3F0000003F000000;
    v377 = vaddq_f32(a3, v376);
    v601 = vld3_f32(v373);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v377.f32[0]), v601.val[1], *(float32x2_t *)v377.f32, 1), v601.val[2], v377, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v377.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v368, v370));
    v377.f32[2] = (float)v369;
    v378 = vmulq_n_f32(vaddq_f32(v377, v376), *(float *)&v375);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v372 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v378.f32[0]), v601.val[1], *(float32x2_t *)v378.f32, 1), v601.val[2], v378, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v379 = v6[392];
  if (v379 != v8 && (v379 & 0x40000000) != 0)
  {
    v380 = a2[1].i32[0] + 6;
    v381 = a2->i32[0];
    v382 = a2->i32[1] + 1;
    v383 = *(_QWORD **)a1[4];
    v384 = *v383;
    v385 = (const float *)(*v383 + 1656);
    v386 = *(_DWORD *)(*v383 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v386);
    v387 = *(_QWORD *)(v383[1] + 144);
    a3.f32[1] = (float)(v382 / v386);
    a3.f32[2] = (float)(v380 / v386);
    v388.i64[0] = 0x3F0000003F000000;
    v388.i64[1] = 0x3F0000003F000000;
    v389 = vaddq_f32(a3, v388);
    v602 = vld3_f32(v385);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v389.f32[0]), v602.val[1], *(float32x2_t *)v389.f32, 1), v602.val[2], v389, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v389.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v382, v381));
    v389.f32[2] = (float)v380;
    v390 = vmulq_n_f32(vaddq_f32(v389, v388), *(float *)&v387);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v384 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v390.f32[0]), v602.val[1], *(float32x2_t *)v390.f32, 1), v602.val[2], v390, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v391 = v6[393];
  if (v391 != v8 && (v391 & 0x40000000) != 0)
  {
    v392 = a2[1].i32[0] + 6;
    v393 = *(_QWORD **)a1[4];
    v394 = *v393;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v395 = *(_DWORD *)(*v393 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v395);
    v396 = (const float *)(*v393 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v395);
    v397 = *(_QWORD *)(v393[1] + 144);
    v603 = vld3_f32(v396);
    a3.f32[2] = (float)(v392 / v395);
    v398.i64[0] = 0x3F0000003F000000;
    v398.i64[1] = 0x3F0000003F000000;
    v399 = vaddq_f32(a3, v398);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v399.f32[0]), v603.val[1], *(float32x2_t *)v399.f32, 1), v603.val[2], v399, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v392;
    v400 = vmulq_n_f32(vaddq_f32(a4, v398), *(float *)&v397);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v394 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v400.f32[0]), v603.val[1], *(float32x2_t *)v400.f32, 1), v603.val[2], v400, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v401 = v6[394];
  if (v401 != v8 && (v401 & 0x40000000) != 0)
  {
    v402 = a2[1].i32[0] + 6;
    v403 = *(_QWORD **)a1[4];
    v404 = *v403;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v405 = *(_DWORD *)(*v403 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v405);
    v406 = (const float *)(*v403 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v405);
    v407 = *(_QWORD *)(v403[1] + 144);
    v604 = vld3_f32(v406);
    a3.f32[2] = (float)(v402 / v405);
    v408.i64[0] = 0x3F0000003F000000;
    v408.i64[1] = 0x3F0000003F000000;
    v409 = vaddq_f32(a3, v408);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v409.f32[0]), v604.val[1], *(float32x2_t *)v409.f32, 1), v604.val[2], v409, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v402;
    v410 = vmulq_n_f32(vaddq_f32(a4, v408), *(float *)&v407);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v404 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v410.f32[0]), v604.val[1], *(float32x2_t *)v410.f32, 1), v604.val[2], v410, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v411 = v6[395];
  if (v411 != v8 && (v411 & 0x40000000) != 0)
  {
    v412 = a2[1].i32[0] + 6;
    v413 = *(_QWORD **)a1[4];
    v414 = *v413;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v415 = *(_DWORD *)(*v413 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v415);
    v416 = (const float *)(*v413 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v415);
    v417 = *(_QWORD *)(v413[1] + 144);
    v605 = vld3_f32(v416);
    a3.f32[2] = (float)(v412 / v415);
    v418.i64[0] = 0x3F0000003F000000;
    v418.i64[1] = 0x3F0000003F000000;
    v419 = vaddq_f32(a3, v418);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v419.f32[0]), v605.val[1], *(float32x2_t *)v419.f32, 1), v605.val[2], v419, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v412;
    v420 = vmulq_n_f32(vaddq_f32(a4, v418), *(float *)&v417);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v414 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v420.f32[0]), v605.val[1], *(float32x2_t *)v420.f32, 1), v605.val[2], v420, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v421 = v6[396];
  if (v421 != v8 && (v421 & 0x40000000) != 0)
  {
    v422 = a2[1].i32[0] + 6;
    v423 = *(_QWORD **)a1[4];
    v424 = *v423;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v425 = *(_DWORD *)(*v423 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v425);
    v426 = (const float *)(*v423 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v425);
    v427 = *(_QWORD *)(v423[1] + 144);
    v606 = vld3_f32(v426);
    a3.f32[2] = (float)(v422 / v425);
    v428.i64[0] = 0x3F0000003F000000;
    v428.i64[1] = 0x3F0000003F000000;
    v429 = vaddq_f32(a3, v428);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v429.f32[0]), v606.val[1], *(float32x2_t *)v429.f32, 1), v606.val[2], v429, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v422;
    v430 = vmulq_n_f32(vaddq_f32(a4, v428), *(float *)&v427);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v424 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v430.f32[0]), v606.val[1], *(float32x2_t *)v430.f32, 1), v606.val[2], v430, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v431 = v6[397];
  if (v431 != v8 && (v431 & 0x40000000) != 0)
  {
    v432 = a2[1].i32[0] + 6;
    v433 = *(_QWORD **)a1[4];
    v434 = *v433;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v435 = *(_DWORD *)(*v433 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v435);
    v436 = (const float *)(*v433 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v435);
    v437 = *(_QWORD *)(v433[1] + 144);
    v607 = vld3_f32(v436);
    a3.f32[2] = (float)(v432 / v435);
    v438.i64[0] = 0x3F0000003F000000;
    v438.i64[1] = 0x3F0000003F000000;
    v439 = vaddq_f32(a3, v438);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v439.f32[0]), v607.val[1], *(float32x2_t *)v439.f32, 1), v607.val[2], v439, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v432;
    v440 = vmulq_n_f32(vaddq_f32(a4, v438), *(float *)&v437);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v434 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v440.f32[0]), v607.val[1], *(float32x2_t *)v440.f32, 1), v607.val[2], v440, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v441 = v6[398];
  if (v441 != v8 && (v441 & 0x40000000) != 0)
  {
    v442 = a2[1].i32[0] + 6;
    v443 = *(_QWORD **)a1[4];
    v444 = *v443;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
    v445 = *(_DWORD *)(*v443 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v445);
    v446 = (const float *)(*v443 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v445);
    v447 = *(_QWORD *)(v443[1] + 144);
    v608 = vld3_f32(v446);
    a3.f32[2] = (float)(v442 / v445);
    v448.i64[0] = 0x3F0000003F000000;
    v448.i64[1] = 0x3F0000003F000000;
    v449 = vaddq_f32(a3, v448);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v449.f32[0]), v608.val[1], *(float32x2_t *)v449.f32, 1), v608.val[2], v449, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v442;
    v450 = vmulq_n_f32(vaddq_f32(a4, v448), *(float *)&v447);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v444 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v450.f32[0]), v608.val[1], *(float32x2_t *)v450.f32, 1), v608.val[2], v450, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v451 = v6[399];
  if (v451 != v8 && (v451 & 0x40000000) != 0)
  {
    v452 = a2[1].i32[0] + 6;
    v453 = *(_QWORD **)a1[4];
    v454 = *v453;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v455 = *(_DWORD *)(*v453 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v455);
    v456 = (const float *)(*v453 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v455);
    v457 = *(_QWORD *)(v453[1] + 144);
    v609 = vld3_f32(v456);
    a3.f32[2] = (float)(v452 / v455);
    v458.i64[0] = 0x3F0000003F000000;
    v458.i64[1] = 0x3F0000003F000000;
    v459 = vaddq_f32(a3, v458);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v459.f32[0]), v609.val[1], *(float32x2_t *)v459.f32, 1), v609.val[2], v459, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v452;
    v460 = vmulq_n_f32(vaddq_f32(a4, v458), *(float *)&v457);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v454 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v460.f32[0]), v609.val[1], *(float32x2_t *)v460.f32, 1), v609.val[2], v460, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v461 = v6[400];
  if (v461 != v8 && (v461 & 0x40000000) != 0)
  {
    v462 = a2[1].i32[0] + 6;
    v463 = a2->i32[0];
    v464 = a2->i32[1] + 2;
    v465 = *(_QWORD **)a1[4];
    v466 = *v465;
    v467 = (const float *)(*v465 + 1656);
    v468 = *(_DWORD *)(*v465 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v468);
    v469 = *(_QWORD *)(v465[1] + 144);
    a3.f32[1] = (float)(v464 / v468);
    a3.f32[2] = (float)(v462 / v468);
    v470.i64[0] = 0x3F0000003F000000;
    v470.i64[1] = 0x3F0000003F000000;
    v471 = vaddq_f32(a3, v470);
    v610 = vld3_f32(v467);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v471.f32[0]), v610.val[1], *(float32x2_t *)v471.f32, 1), v610.val[2], v471, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v471.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v464, v463));
    v471.f32[2] = (float)v462;
    v472 = vmulq_n_f32(vaddq_f32(v471, v470), *(float *)&v469);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v466 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v472.f32[0]), v610.val[1], *(float32x2_t *)v472.f32, 1), v610.val[2], v472, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v473 = v6[401];
  if (v473 != v8 && (v473 & 0x40000000) != 0)
  {
    v474 = a2[1].i32[0] + 6;
    v475 = *(_QWORD **)a1[4];
    v476 = *v475;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v477 = *(_DWORD *)(*v475 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v477);
    v478 = (const float *)(*v475 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v477);
    v479 = *(_QWORD *)(v475[1] + 144);
    v611 = vld3_f32(v478);
    a3.f32[2] = (float)(v474 / v477);
    v480.i64[0] = 0x3F0000003F000000;
    v480.i64[1] = 0x3F0000003F000000;
    v481 = vaddq_f32(a3, v480);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v481.f32[0]), v611.val[1], *(float32x2_t *)v481.f32, 1), v611.val[2], v481, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v474;
    v482 = vmulq_n_f32(vaddq_f32(a4, v480), *(float *)&v479);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v476 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v482.f32[0]), v611.val[1], *(float32x2_t *)v482.f32, 1), v611.val[2], v482, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v483 = v6[402];
  if (v483 != v8 && (v483 & 0x40000000) != 0)
  {
    v484 = a2[1].i32[0] + 6;
    v485 = *(_QWORD **)a1[4];
    v486 = *v485;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v487 = *(_DWORD *)(*v485 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v487);
    v488 = (const float *)(*v485 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v487);
    v489 = *(_QWORD *)(v485[1] + 144);
    v612 = vld3_f32(v488);
    a3.f32[2] = (float)(v484 / v487);
    v490.i64[0] = 0x3F0000003F000000;
    v490.i64[1] = 0x3F0000003F000000;
    v491 = vaddq_f32(a3, v490);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v491.f32[0]), v612.val[1], *(float32x2_t *)v491.f32, 1), v612.val[2], v491, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v484;
    v492 = vmulq_n_f32(vaddq_f32(a4, v490), *(float *)&v489);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v486 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v492.f32[0]), v612.val[1], *(float32x2_t *)v492.f32, 1), v612.val[2], v492, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v493 = v6[403];
  if (v493 != v8 && (v493 & 0x40000000) != 0)
  {
    v494 = a2[1].i32[0] + 6;
    v495 = *(_QWORD **)a1[4];
    v496 = *v495;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v497 = *(_DWORD *)(*v495 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v497);
    v498 = (const float *)(*v495 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v497);
    v499 = *(_QWORD *)(v495[1] + 144);
    v613 = vld3_f32(v498);
    a3.f32[2] = (float)(v494 / v497);
    v500.i64[0] = 0x3F0000003F000000;
    v500.i64[1] = 0x3F0000003F000000;
    v501 = vaddq_f32(a3, v500);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v501.f32[0]), v613.val[1], *(float32x2_t *)v501.f32, 1), v613.val[2], v501, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v494;
    v502 = vmulq_n_f32(vaddq_f32(a4, v500), *(float *)&v499);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v496 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v502.f32[0]), v613.val[1], *(float32x2_t *)v502.f32, 1), v613.val[2], v502, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v503 = v6[404];
  if (v503 != v8 && (v503 & 0x40000000) != 0)
  {
    v504 = a2[1].i32[0] + 6;
    v505 = *(_QWORD **)a1[4];
    v506 = *v505;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v507 = *(_DWORD *)(*v505 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v507);
    v508 = (const float *)(*v505 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v507);
    v509 = *(_QWORD *)(v505[1] + 144);
    v614 = vld3_f32(v508);
    a3.f32[2] = (float)(v504 / v507);
    v510.i64[0] = 0x3F0000003F000000;
    v510.i64[1] = 0x3F0000003F000000;
    v511 = vaddq_f32(a3, v510);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v511.f32[0]), v614.val[1], *(float32x2_t *)v511.f32, 1), v614.val[2], v511, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v504;
    v512 = vmulq_n_f32(vaddq_f32(a4, v510), *(float *)&v509);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v506 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v512.f32[0]), v614.val[1], *(float32x2_t *)v512.f32, 1), v614.val[2], v512, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v513 = v6[405];
  if (v513 != v8 && (v513 & 0x40000000) != 0)
  {
    v514 = a2[1].i32[0] + 6;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v517 = *(_DWORD *)(*v515 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v517);
    v518 = (const float *)(*v515 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v517);
    v519 = *(_QWORD *)(v515[1] + 144);
    v615 = vld3_f32(v518);
    a3.f32[2] = (float)(v514 / v517);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v521.f32[0]), v615.val[1], *(float32x2_t *)v521.f32, 1), v615.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v514;
    v522 = vmulq_n_f32(vaddq_f32(a4, v520), *(float *)&v519);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v522.f32[0]), v615.val[1], *(float32x2_t *)v522.f32, 1), v615.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[406];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 6;
    v525 = *(_QWORD **)a1[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v616 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v531.f32[0]), v616.val[1], *(float32x2_t *)v531.f32, 1), v616.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v526 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v532.f32[0]), v616.val[1], *(float32x2_t *)v532.f32, 1), v616.val[2], v532, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v533 = v6[407];
  if (v533 != v8 && (v533 & 0x40000000) != 0)
  {
    v534 = a2[1].i32[0] + 6;
    v535 = *(_QWORD **)a1[4];
    v536 = *v535;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v537 = *(_DWORD *)(*v535 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v537);
    v538 = (const float *)(*v535 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v537);
    v539 = *(_QWORD *)(v535[1] + 144);
    v617 = vld3_f32(v538);
    a3.f32[2] = (float)(v534 / v537);
    v540.i64[0] = 0x3F0000003F000000;
    v540.i64[1] = 0x3F0000003F000000;
    v541 = vaddq_f32(a3, v540);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v541.f32[0]), v617.val[1], *(float32x2_t *)v541.f32, 1), v617.val[2], v541, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v534;
    v542 = vmulq_n_f32(vaddq_f32(a4, v540), *(float *)&v539);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v536 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v542.f32[0]), v617.val[1], *(float32x2_t *)v542.f32, 1), v617.val[2], v542, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v543 = v6[408];
  if (v543 != v8 && (v543 & 0x40000000) != 0)
  {
    v544 = a2[1].i32[0] + 6;
    v545 = a2->i32[0];
    v546 = a2->i32[1] + 3;
    v547 = *(_QWORD **)a1[4];
    v548 = *v547;
    v549 = (const float *)(*v547 + 1656);
    v550 = *(_DWORD *)(*v547 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v550);
    v551 = *(_QWORD *)(v547[1] + 144);
    a3.f32[1] = (float)(v546 / v550);
    a3.f32[2] = (float)(v544 / v550);
    v552.i64[0] = 0x3F0000003F000000;
    v552.i64[1] = 0x3F0000003F000000;
    v553 = vaddq_f32(a3, v552);
    v618 = vld3_f32(v549);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v553.f32[0]), v618.val[1], *(float32x2_t *)v553.f32, 1), v618.val[2], v553, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    *(float32x2_t *)v553.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v546, v545));
    v553.f32[2] = (float)v544;
    v554 = vmulq_n_f32(vaddq_f32(v553, v552), *(float *)&v551);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v548 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v554.f32[0]), v618.val[1], *(float32x2_t *)v554.f32, 1), v618.val[2], v554, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v555 = v6[409];
  if (v555 != v8 && (v555 & 0x40000000) != 0)
  {
    v556 = a2[1].i32[0] + 6;
    v557 = *(_QWORD **)a1[4];
    v558 = *v557;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v559 = *(_DWORD *)(*v557 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v559);
    v560 = (const float *)(*v557 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v559);
    v561 = *(_QWORD *)(v557[1] + 144);
    v619 = vld3_f32(v560);
    a3.f32[2] = (float)(v556 / v559);
    v562.i64[0] = 0x3F0000003F000000;
    v562.i64[1] = 0x3F0000003F000000;
    v563 = vaddq_f32(a3, v562);
    v566 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v563.f32[0]), v619.val[1], *(float32x2_t *)v563.f32, 1), v619.val[2], v563, 2), (float32x2_t)0xBF000000BF000000));
    v567 = 0;
    a4.f32[2] = (float)v556;
    v564 = vmulq_n_f32(vaddq_f32(a4, v562), *(float *)&v561);
    v568 = &v566;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v558 + 64), (int *)&v566, (uint64_t)&unk_2245BA939, (uint64_t **)&v568)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v564.f32[0]), v619.val[1], *(float32x2_t *)v564.f32, 1), v619.val[2], v564, 2);
  }
  return sub_223A04C38(a1, a2, a3, a4);
}

uint64_t *sub_223A04C38(uint64_t *a1, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  uint64_t *v33;
  int v34;
  int v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  const float *v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  int v45;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  const float *v51;
  uint64_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  int v56;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  const float *v62;
  uint64_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  int v67;
  int v69;
  _QWORD *v70;
  uint64_t v71;
  int v72;
  const float *v73;
  uint64_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  int v78;
  int v80;
  _QWORD *v81;
  uint64_t v82;
  int v83;
  const float *v84;
  uint64_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  int v89;
  int v91;
  __int32 v92;
  int v93;
  _QWORD *v94;
  uint64_t v95;
  const float *v96;
  int v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int v102;
  _QWORD *v103;
  uint64_t v104;
  int v105;
  const float *v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  int v111;
  int v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  const float *v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  int v121;
  int v122;
  _QWORD *v123;
  uint64_t v124;
  int v125;
  const float *v126;
  uint64_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  int v131;
  int v132;
  _QWORD *v133;
  uint64_t v134;
  int v135;
  const float *v136;
  uint64_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  int v141;
  int v142;
  _QWORD *v143;
  uint64_t v144;
  int v145;
  const float *v146;
  uint64_t v147;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  int v151;
  int v152;
  _QWORD *v153;
  uint64_t v154;
  int v155;
  const float *v156;
  uint64_t v157;
  float32x4_t v158;
  float32x4_t v159;
  float32x4_t v160;
  int v161;
  int v162;
  _QWORD *v163;
  uint64_t v164;
  int v165;
  const float *v166;
  uint64_t v167;
  float32x4_t v168;
  float32x4_t v169;
  float32x4_t v170;
  int v171;
  int v172;
  __int32 v173;
  int v174;
  _QWORD *v175;
  uint64_t v176;
  const float *v177;
  int v178;
  uint64_t v179;
  float32x4_t v180;
  float32x4_t v181;
  float32x4_t v182;
  int v183;
  int v184;
  _QWORD *v185;
  uint64_t v186;
  int v187;
  const float *v188;
  uint64_t v189;
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  int v193;
  int v194;
  _QWORD *v195;
  uint64_t v196;
  int v197;
  const float *v198;
  uint64_t v199;
  float32x4_t v200;
  float32x4_t v201;
  float32x4_t v202;
  int v203;
  int v204;
  _QWORD *v205;
  uint64_t v206;
  int v207;
  const float *v208;
  uint64_t v209;
  float32x4_t v210;
  float32x4_t v211;
  float32x4_t v212;
  int v213;
  int v214;
  _QWORD *v215;
  uint64_t v216;
  int v217;
  const float *v218;
  uint64_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float32x4_t v222;
  int v223;
  int v224;
  _QWORD *v225;
  uint64_t v226;
  int v227;
  const float *v228;
  uint64_t v229;
  float32x4_t v230;
  float32x4_t v231;
  float32x4_t v232;
  int v233;
  int v234;
  _QWORD *v235;
  uint64_t v236;
  int v237;
  const float *v238;
  uint64_t v239;
  float32x4_t v240;
  float32x4_t v241;
  float32x4_t v242;
  int v243;
  int v244;
  _QWORD *v245;
  uint64_t v246;
  int v247;
  const float *v248;
  uint64_t v249;
  float32x4_t v250;
  float32x4_t v251;
  float32x4_t v252;
  int v253;
  int v254;
  __int32 v255;
  int v256;
  _QWORD *v257;
  uint64_t v258;
  const float *v259;
  int v260;
  uint64_t v261;
  float32x4_t v262;
  float32x4_t v263;
  float32x4_t v264;
  int v265;
  int v266;
  _QWORD *v267;
  uint64_t v268;
  int v269;
  const float *v270;
  uint64_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x4_t v274;
  int v275;
  int v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  const float *v280;
  uint64_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  int v285;
  int v286;
  _QWORD *v287;
  uint64_t v288;
  int v289;
  const float *v290;
  uint64_t v291;
  float32x4_t v292;
  float32x4_t v293;
  float32x4_t v294;
  int v295;
  int v296;
  _QWORD *v297;
  uint64_t v298;
  int v299;
  const float *v300;
  uint64_t v301;
  float32x4_t v302;
  float32x4_t v303;
  float32x4_t v304;
  int v305;
  int v306;
  _QWORD *v307;
  uint64_t v308;
  int v309;
  const float *v310;
  uint64_t v311;
  float32x4_t v312;
  float32x4_t v313;
  float32x4_t v314;
  int v315;
  int v316;
  _QWORD *v317;
  uint64_t v318;
  int v319;
  const float *v320;
  uint64_t v321;
  float32x4_t v322;
  float32x4_t v323;
  float32x4_t v324;
  int v325;
  int v326;
  _QWORD *v327;
  uint64_t v328;
  int v329;
  const float *v330;
  uint64_t v331;
  float32x4_t v332;
  float32x4_t v333;
  float32x4_t v334;
  int v335;
  int v336;
  __int32 v337;
  int v338;
  _QWORD *v339;
  uint64_t v340;
  const float *v341;
  int v342;
  uint64_t v343;
  float32x4_t v344;
  float32x4_t v345;
  float32x4_t v346;
  int v347;
  int v348;
  _QWORD *v349;
  uint64_t v350;
  int v351;
  const float *v352;
  uint64_t v353;
  float32x4_t v354;
  float32x4_t v355;
  float32x4_t v356;
  int v357;
  int v358;
  _QWORD *v359;
  uint64_t v360;
  int v361;
  const float *v362;
  uint64_t v363;
  float32x4_t v364;
  float32x4_t v365;
  float32x4_t v366;
  int v367;
  int v368;
  _QWORD *v369;
  uint64_t v370;
  int v371;
  const float *v372;
  uint64_t v373;
  float32x4_t v374;
  float32x4_t v375;
  float32x4_t v376;
  int v377;
  int v378;
  _QWORD *v379;
  uint64_t v380;
  int v381;
  const float *v382;
  uint64_t v383;
  float32x4_t v384;
  float32x4_t v385;
  float32x4_t v386;
  int v387;
  int v388;
  _QWORD *v389;
  uint64_t v390;
  int v391;
  const float *v392;
  uint64_t v393;
  float32x4_t v394;
  float32x4_t v395;
  float32x4_t v396;
  int v397;
  int v398;
  _QWORD *v399;
  uint64_t v400;
  int v401;
  const float *v402;
  uint64_t v403;
  float32x4_t v404;
  float32x4_t v405;
  float32x4_t v406;
  int v407;
  int v408;
  _QWORD *v409;
  uint64_t v410;
  int v411;
  const float *v412;
  uint64_t v413;
  float32x4_t v414;
  float32x4_t v415;
  float32x4_t v416;
  int v417;
  int v418;
  _QWORD *v419;
  uint64_t v420;
  int v421;
  const float *v422;
  uint64_t v423;
  float32x4_t v424;
  float32x4_t v425;
  float32x4_t v426;
  int v427;
  __int32 v428;
  int v429;
  int v430;
  _QWORD *v431;
  uint64_t v432;
  const float *v433;
  int v434;
  uint64_t v435;
  float32x4_t v436;
  float32x4_t v437;
  float32x4_t v438;
  int v439;
  __int32 v440;
  int v441;
  int v442;
  _QWORD *v443;
  uint64_t v444;
  const float *v445;
  int v446;
  uint64_t v447;
  float32x4_t v448;
  float32x4_t v449;
  float32x4_t v450;
  int v451;
  __int32 v452;
  int v453;
  int v454;
  _QWORD *v455;
  uint64_t v456;
  const float *v457;
  int v458;
  uint64_t v459;
  float32x4_t v460;
  float32x4_t v461;
  float32x4_t v462;
  int v463;
  __int32 v464;
  int v465;
  int v466;
  _QWORD *v467;
  uint64_t v468;
  const float *v469;
  int v470;
  uint64_t v471;
  float32x4_t v472;
  float32x4_t v473;
  float32x4_t v474;
  int v475;
  __int32 v476;
  int v477;
  int v478;
  _QWORD *v479;
  uint64_t v480;
  const float *v481;
  int v482;
  uint64_t v483;
  float32x4_t v484;
  float32x4_t v485;
  float32x4_t v486;
  int v487;
  __int32 v488;
  int v489;
  int v490;
  _QWORD *v491;
  uint64_t v492;
  const float *v493;
  int v494;
  uint64_t v495;
  float32x4_t v496;
  float32x4_t v497;
  float32x4_t v498;
  int v499;
  __int32 v500;
  int v501;
  int v502;
  _QWORD *v503;
  uint64_t v504;
  const float *v505;
  int v506;
  uint64_t v507;
  float32x4_t v508;
  float32x4_t v509;
  float32x4_t v510;
  int v511;
  int v512;
  __int32 v513;
  int v514;
  _QWORD *v515;
  uint64_t v516;
  const float *v517;
  int v518;
  uint64_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x4_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  int v533;
  int v534;
  _QWORD *v535;
  uint64_t v536;
  int v537;
  const float *v538;
  uint64_t v539;
  float32x4_t v540;
  float32x4_t v541;
  float32x4_t v542;
  int v543;
  int v544;
  _QWORD *v545;
  uint64_t v546;
  int v547;
  const float *v548;
  uint64_t v549;
  float32x4_t v550;
  float32x4_t v551;
  float32x4_t v552;
  int v553;
  int v554;
  _QWORD *v555;
  uint64_t v556;
  int v557;
  const float *v558;
  uint64_t v559;
  float32x4_t v560;
  float32x4_t v561;
  float32x4_t v562;
  int32x2_t v564;
  int v565;
  int32x2_t *v566;
  float32x2x3_t v567;
  float32x2x3_t v568;
  float32x2x3_t v569;
  float32x2x3_t v570;
  float32x2x3_t v571;
  float32x2x3_t v572;
  float32x2x3_t v573;
  float32x2x3_t v574;
  float32x2x3_t v575;
  float32x2x3_t v576;
  float32x2x3_t v577;
  float32x2x3_t v578;
  float32x2x3_t v579;
  float32x2x3_t v580;
  float32x2x3_t v581;
  float32x2x3_t v582;
  float32x2x3_t v583;
  float32x2x3_t v584;
  float32x2x3_t v585;
  float32x2x3_t v586;
  float32x2x3_t v587;
  float32x2x3_t v588;
  float32x2x3_t v589;
  float32x2x3_t v590;
  float32x2x3_t v591;
  float32x2x3_t v592;
  float32x2x3_t v593;
  float32x2x3_t v594;
  float32x2x3_t v595;
  float32x2x3_t v596;
  float32x2x3_t v597;
  float32x2x3_t v598;
  float32x2x3_t v599;
  float32x2x3_t v600;
  float32x2x3_t v601;
  float32x2x3_t v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;

  v6 = (_DWORD *)a1[1];
  v7 = v6[410];
  v8 = *(_DWORD *)(*a1 + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[411];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v36 = a2[1].i32[0] + 6;
      v37 = *(_QWORD **)a1[4];
      v38 = *v37;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
      v39 = *(_DWORD *)(*v37 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v39);
      v40 = (const float *)(*v37 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v39);
      v41 = *(_QWORD *)(v37[1] + 144);
      v568 = vld3_f32(v40);
      a3.f32[2] = (float)(v36 / v39);
      v42.i64[0] = 0x3F0000003F000000;
      v42.i64[1] = 0x3F0000003F000000;
      v43 = vaddq_f32(a3, v42);
      v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v43.f32[0]), v568.val[1], *(float32x2_t *)v43.f32, 1), v568.val[2], v43, 2), (float32x2_t)0xBF000000BF000000));
      v565 = 0;
      a4.f32[2] = (float)v36;
      v44 = vmulq_n_f32(vaddq_f32(a4, v42), *(float *)&v41);
      v566 = &v564;
      *(uint64_t *)((char *)sub_223A17B10((float *)(v38 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
                 + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v568.val[0], v44.f32[0]), v568.val[1], *(float32x2_t *)v44.f32, 1), v568.val[2], v44, 2);
      v6 = (_DWORD *)a1[1];
      v8 = *(_DWORD *)(*a1 + 272);
      v45 = v6[412];
      if (v45 != v8 && (v45 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 6;
    v24 = *(_QWORD **)a1[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v567 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v30.f32[0]), v567.val[1], *(float32x2_t *)v30.f32, 1), v567.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v567.val[0], v31.f32[0]), v567.val[1], *(float32x2_t *)v31.f32, 1), v567.val[2], v31, 2);
    v566 = &v564;
    v33 = sub_223A17B10((float *)(v25 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566);
    *(uint64_t *)((char *)v33 + 28) = (uint64_t)v32;
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v34 = v6[411];
    if (v34 != v8 && (v34 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[412];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v47 = a2[1].i32[0] + 6;
    v48 = *(_QWORD **)a1[4];
    v49 = *v48;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v50 = *(_DWORD *)(*v48 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v50);
    v51 = (const float *)(*v48 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v50);
    v52 = *(_QWORD *)(v48[1] + 144);
    v569 = vld3_f32(v51);
    a3.f32[2] = (float)(v47 / v50);
    v53.i64[0] = 0x3F0000003F000000;
    v53.i64[1] = 0x3F0000003F000000;
    v54 = vaddq_f32(a3, v53);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v54.f32[0]), v569.val[1], *(float32x2_t *)v54.f32, 1), v569.val[2], v54, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v47;
    v55 = vmulq_n_f32(vaddq_f32(a4, v53), *(float *)&v52);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v49 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v569.val[0], v55.f32[0]), v569.val[1], *(float32x2_t *)v55.f32, 1), v569.val[2], v55, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v56 = v6[413];
    if (v56 != v8 && (v56 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[413];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v58 = a2[1].i32[0] + 6;
    v59 = *(_QWORD **)a1[4];
    v60 = *v59;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v61 = *(_DWORD *)(*v59 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v61);
    v62 = (const float *)(*v59 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v61);
    v63 = *(_QWORD *)(v59[1] + 144);
    v570 = vld3_f32(v62);
    a3.f32[2] = (float)(v58 / v61);
    v64.i64[0] = 0x3F0000003F000000;
    v64.i64[1] = 0x3F0000003F000000;
    v65 = vaddq_f32(a3, v64);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v65.f32[0]), v570.val[1], *(float32x2_t *)v65.f32, 1), v570.val[2], v65, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v58;
    v66 = vmulq_n_f32(vaddq_f32(a4, v64), *(float *)&v63);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v60 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v570.val[0], v66.f32[0]), v570.val[1], *(float32x2_t *)v66.f32, 1), v570.val[2], v66, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v67 = v6[414];
    if (v67 != v8 && (v67 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[414];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v69 = a2[1].i32[0] + 6;
    v70 = *(_QWORD **)a1[4];
    v71 = *v70;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v72 = *(_DWORD *)(*v70 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v72);
    v73 = (const float *)(*v70 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v72);
    v74 = *(_QWORD *)(v70[1] + 144);
    v571 = vld3_f32(v73);
    a3.f32[2] = (float)(v69 / v72);
    v75.i64[0] = 0x3F0000003F000000;
    v75.i64[1] = 0x3F0000003F000000;
    v76 = vaddq_f32(a3, v75);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v76.f32[0]), v571.val[1], *(float32x2_t *)v76.f32, 1), v571.val[2], v76, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v69;
    v77 = vmulq_n_f32(vaddq_f32(a4, v75), *(float *)&v74);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v71 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v571.val[0], v77.f32[0]), v571.val[1], *(float32x2_t *)v77.f32, 1), v571.val[2], v77, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v78 = v6[415];
    if (v78 != v8 && (v78 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[415];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v80 = a2[1].i32[0] + 6;
    v81 = *(_QWORD **)a1[4];
    v82 = *v81;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v83 = *(_DWORD *)(*v81 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v83);
    v84 = (const float *)(*v81 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v83);
    v85 = *(_QWORD *)(v81[1] + 144);
    v572 = vld3_f32(v84);
    a3.f32[2] = (float)(v80 / v83);
    v86.i64[0] = 0x3F0000003F000000;
    v86.i64[1] = 0x3F0000003F000000;
    v87 = vaddq_f32(a3, v86);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v87.f32[0]), v572.val[1], *(float32x2_t *)v87.f32, 1), v572.val[2], v87, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v80;
    v88 = vmulq_n_f32(vaddq_f32(a4, v86), *(float *)&v85);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v82 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v572.val[0], v88.f32[0]), v572.val[1], *(float32x2_t *)v88.f32, 1), v572.val[2], v88, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v89 = v6[416];
    if (v89 != v8 && (v89 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[416];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v91 = a2[1].i32[0] + 6;
    v92 = a2->i32[0];
    v93 = a2->i32[1] + 4;
    v94 = *(_QWORD **)a1[4];
    v95 = *v94;
    v96 = (const float *)(*v94 + 1656);
    v97 = *(_DWORD *)(*v94 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v97);
    v98 = *(_QWORD *)(v94[1] + 144);
    a3.f32[1] = (float)(v93 / v97);
    a3.f32[2] = (float)(v91 / v97);
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    v100 = vaddq_f32(a3, v99);
    v573 = vld3_f32(v96);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v100.f32[0]), v573.val[1], *(float32x2_t *)v100.f32, 1), v573.val[2], v100, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v100.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v93, v92));
    v100.f32[2] = (float)v91;
    v101 = vmulq_n_f32(vaddq_f32(v100, v99), *(float *)&v98);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v95 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v573.val[0], v101.f32[0]), v573.val[1], *(float32x2_t *)v101.f32, 1), v573.val[2], v101, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
    v22 = v6[417];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[417];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v102 = a2[1].i32[0] + 6;
    v103 = *(_QWORD **)a1[4];
    v104 = *v103;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v105 = *(_DWORD *)(*v103 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v105);
    v106 = (const float *)(*v103 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v105);
    v107 = *(_QWORD *)(v103[1] + 144);
    v574 = vld3_f32(v106);
    a3.f32[2] = (float)(v102 / v105);
    v108.i64[0] = 0x3F0000003F000000;
    v108.i64[1] = 0x3F0000003F000000;
    v109 = vaddq_f32(a3, v108);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v109.f32[0]), v574.val[1], *(float32x2_t *)v109.f32, 1), v574.val[2], v109, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v102;
    v110 = vmulq_n_f32(vaddq_f32(a4, v108), *(float *)&v107);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v104 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v574.val[0], v110.f32[0]), v574.val[1], *(float32x2_t *)v110.f32, 1), v574.val[2], v110, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
LABEL_65:
  v111 = v6[418];
  if (v111 != v8 && (v111 & 0x40000000) != 0)
  {
    v112 = a2[1].i32[0] + 6;
    v113 = *(_QWORD **)a1[4];
    v114 = *v113;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v115 = *(_DWORD *)(*v113 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v115);
    v116 = (const float *)(*v113 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v115);
    v117 = *(_QWORD *)(v113[1] + 144);
    v575 = vld3_f32(v116);
    a3.f32[2] = (float)(v112 / v115);
    v118.i64[0] = 0x3F0000003F000000;
    v118.i64[1] = 0x3F0000003F000000;
    v119 = vaddq_f32(a3, v118);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v119.f32[0]), v575.val[1], *(float32x2_t *)v119.f32, 1), v575.val[2], v119, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v112;
    v120 = vmulq_n_f32(vaddq_f32(a4, v118), *(float *)&v117);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v114 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v575.val[0], v120.f32[0]), v575.val[1], *(float32x2_t *)v120.f32, 1), v575.val[2], v120, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v121 = v6[419];
  if (v121 != v8 && (v121 & 0x40000000) != 0)
  {
    v122 = a2[1].i32[0] + 6;
    v123 = *(_QWORD **)a1[4];
    v124 = *v123;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v125 = *(_DWORD *)(*v123 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v125);
    v126 = (const float *)(*v123 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v125);
    v127 = *(_QWORD *)(v123[1] + 144);
    v576 = vld3_f32(v126);
    a3.f32[2] = (float)(v122 / v125);
    v128.i64[0] = 0x3F0000003F000000;
    v128.i64[1] = 0x3F0000003F000000;
    v129 = vaddq_f32(a3, v128);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v129.f32[0]), v576.val[1], *(float32x2_t *)v129.f32, 1), v576.val[2], v129, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v122;
    v130 = vmulq_n_f32(vaddq_f32(a4, v128), *(float *)&v127);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v124 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v576.val[0], v130.f32[0]), v576.val[1], *(float32x2_t *)v130.f32, 1), v576.val[2], v130, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v131 = v6[420];
  if (v131 != v8 && (v131 & 0x40000000) != 0)
  {
    v132 = a2[1].i32[0] + 6;
    v133 = *(_QWORD **)a1[4];
    v134 = *v133;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v135 = *(_DWORD *)(*v133 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v135);
    v136 = (const float *)(*v133 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v135);
    v137 = *(_QWORD *)(v133[1] + 144);
    v577 = vld3_f32(v136);
    a3.f32[2] = (float)(v132 / v135);
    v138.i64[0] = 0x3F0000003F000000;
    v138.i64[1] = 0x3F0000003F000000;
    v139 = vaddq_f32(a3, v138);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v139.f32[0]), v577.val[1], *(float32x2_t *)v139.f32, 1), v577.val[2], v139, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v132;
    v140 = vmulq_n_f32(vaddq_f32(a4, v138), *(float *)&v137);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v134 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v577.val[0], v140.f32[0]), v577.val[1], *(float32x2_t *)v140.f32, 1), v577.val[2], v140, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v141 = v6[421];
  if (v141 != v8 && (v141 & 0x40000000) != 0)
  {
    v142 = a2[1].i32[0] + 6;
    v143 = *(_QWORD **)a1[4];
    v144 = *v143;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v145 = *(_DWORD *)(*v143 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v145);
    v146 = (const float *)(*v143 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v145);
    v147 = *(_QWORD *)(v143[1] + 144);
    v578 = vld3_f32(v146);
    a3.f32[2] = (float)(v142 / v145);
    v148.i64[0] = 0x3F0000003F000000;
    v148.i64[1] = 0x3F0000003F000000;
    v149 = vaddq_f32(a3, v148);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v149.f32[0]), v578.val[1], *(float32x2_t *)v149.f32, 1), v578.val[2], v149, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v142;
    v150 = vmulq_n_f32(vaddq_f32(a4, v148), *(float *)&v147);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v144 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v578.val[0], v150.f32[0]), v578.val[1], *(float32x2_t *)v150.f32, 1), v578.val[2], v150, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v151 = v6[422];
  if (v151 != v8 && (v151 & 0x40000000) != 0)
  {
    v152 = a2[1].i32[0] + 6;
    v153 = *(_QWORD **)a1[4];
    v154 = *v153;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v155 = *(_DWORD *)(*v153 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v155);
    v156 = (const float *)(*v153 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v155);
    v157 = *(_QWORD *)(v153[1] + 144);
    v579 = vld3_f32(v156);
    a3.f32[2] = (float)(v152 / v155);
    v158.i64[0] = 0x3F0000003F000000;
    v158.i64[1] = 0x3F0000003F000000;
    v159 = vaddq_f32(a3, v158);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v159.f32[0]), v579.val[1], *(float32x2_t *)v159.f32, 1), v579.val[2], v159, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v152;
    v160 = vmulq_n_f32(vaddq_f32(a4, v158), *(float *)&v157);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v154 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v579.val[0], v160.f32[0]), v579.val[1], *(float32x2_t *)v160.f32, 1), v579.val[2], v160, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v161 = v6[423];
  if (v161 != v8 && (v161 & 0x40000000) != 0)
  {
    v162 = a2[1].i32[0] + 6;
    v163 = *(_QWORD **)a1[4];
    v164 = *v163;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v165 = *(_DWORD *)(*v163 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v165);
    v166 = (const float *)(*v163 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v165);
    v167 = *(_QWORD *)(v163[1] + 144);
    v580 = vld3_f32(v166);
    a3.f32[2] = (float)(v162 / v165);
    v168.i64[0] = 0x3F0000003F000000;
    v168.i64[1] = 0x3F0000003F000000;
    v169 = vaddq_f32(a3, v168);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v169.f32[0]), v580.val[1], *(float32x2_t *)v169.f32, 1), v580.val[2], v169, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v162;
    v170 = vmulq_n_f32(vaddq_f32(a4, v168), *(float *)&v167);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v164 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v580.val[0], v170.f32[0]), v580.val[1], *(float32x2_t *)v170.f32, 1), v580.val[2], v170, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v171 = v6[424];
  if (v171 != v8 && (v171 & 0x40000000) != 0)
  {
    v172 = a2[1].i32[0] + 6;
    v173 = a2->i32[0];
    v174 = a2->i32[1] + 5;
    v175 = *(_QWORD **)a1[4];
    v176 = *v175;
    v177 = (const float *)(*v175 + 1656);
    v178 = *(_DWORD *)(*v175 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v178);
    v179 = *(_QWORD *)(v175[1] + 144);
    a3.f32[1] = (float)(v174 / v178);
    a3.f32[2] = (float)(v172 / v178);
    v180.i64[0] = 0x3F0000003F000000;
    v180.i64[1] = 0x3F0000003F000000;
    v181 = vaddq_f32(a3, v180);
    v581 = vld3_f32(v177);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v181.f32[0]), v581.val[1], *(float32x2_t *)v181.f32, 1), v581.val[2], v181, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v181.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v174, v173));
    v181.f32[2] = (float)v172;
    v182 = vmulq_n_f32(vaddq_f32(v181, v180), *(float *)&v179);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v176 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v581.val[0], v182.f32[0]), v581.val[1], *(float32x2_t *)v182.f32, 1), v581.val[2], v182, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v183 = v6[425];
  if (v183 != v8 && (v183 & 0x40000000) != 0)
  {
    v184 = a2[1].i32[0] + 6;
    v185 = *(_QWORD **)a1[4];
    v186 = *v185;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v187 = *(_DWORD *)(*v185 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v187);
    v188 = (const float *)(*v185 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v187);
    v189 = *(_QWORD *)(v185[1] + 144);
    v582 = vld3_f32(v188);
    a3.f32[2] = (float)(v184 / v187);
    v190.i64[0] = 0x3F0000003F000000;
    v190.i64[1] = 0x3F0000003F000000;
    v191 = vaddq_f32(a3, v190);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v191.f32[0]), v582.val[1], *(float32x2_t *)v191.f32, 1), v582.val[2], v191, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v184;
    v192 = vmulq_n_f32(vaddq_f32(a4, v190), *(float *)&v189);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v186 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v582.val[0], v192.f32[0]), v582.val[1], *(float32x2_t *)v192.f32, 1), v582.val[2], v192, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v193 = v6[426];
  if (v193 != v8 && (v193 & 0x40000000) != 0)
  {
    v194 = a2[1].i32[0] + 6;
    v195 = *(_QWORD **)a1[4];
    v196 = *v195;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v197 = *(_DWORD *)(*v195 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v197);
    v198 = (const float *)(*v195 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v197);
    v199 = *(_QWORD *)(v195[1] + 144);
    v583 = vld3_f32(v198);
    a3.f32[2] = (float)(v194 / v197);
    v200.i64[0] = 0x3F0000003F000000;
    v200.i64[1] = 0x3F0000003F000000;
    v201 = vaddq_f32(a3, v200);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v201.f32[0]), v583.val[1], *(float32x2_t *)v201.f32, 1), v583.val[2], v201, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v194;
    v202 = vmulq_n_f32(vaddq_f32(a4, v200), *(float *)&v199);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v196 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v583.val[0], v202.f32[0]), v583.val[1], *(float32x2_t *)v202.f32, 1), v583.val[2], v202, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v203 = v6[427];
  if (v203 != v8 && (v203 & 0x40000000) != 0)
  {
    v204 = a2[1].i32[0] + 6;
    v205 = *(_QWORD **)a1[4];
    v206 = *v205;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v207 = *(_DWORD *)(*v205 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v207);
    v208 = (const float *)(*v205 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v207);
    v209 = *(_QWORD *)(v205[1] + 144);
    v584 = vld3_f32(v208);
    a3.f32[2] = (float)(v204 / v207);
    v210.i64[0] = 0x3F0000003F000000;
    v210.i64[1] = 0x3F0000003F000000;
    v211 = vaddq_f32(a3, v210);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v211.f32[0]), v584.val[1], *(float32x2_t *)v211.f32, 1), v584.val[2], v211, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v204;
    v212 = vmulq_n_f32(vaddq_f32(a4, v210), *(float *)&v209);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v206 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v584.val[0], v212.f32[0]), v584.val[1], *(float32x2_t *)v212.f32, 1), v584.val[2], v212, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v213 = v6[428];
  if (v213 != v8 && (v213 & 0x40000000) != 0)
  {
    v214 = a2[1].i32[0] + 6;
    v215 = *(_QWORD **)a1[4];
    v216 = *v215;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v217 = *(_DWORD *)(*v215 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v217);
    v218 = (const float *)(*v215 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v217);
    v219 = *(_QWORD *)(v215[1] + 144);
    v585 = vld3_f32(v218);
    a3.f32[2] = (float)(v214 / v217);
    v220.i64[0] = 0x3F0000003F000000;
    v220.i64[1] = 0x3F0000003F000000;
    v221 = vaddq_f32(a3, v220);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v221.f32[0]), v585.val[1], *(float32x2_t *)v221.f32, 1), v585.val[2], v221, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v214;
    v222 = vmulq_n_f32(vaddq_f32(a4, v220), *(float *)&v219);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v216 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v585.val[0], v222.f32[0]), v585.val[1], *(float32x2_t *)v222.f32, 1), v585.val[2], v222, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v223 = v6[429];
  if (v223 != v8 && (v223 & 0x40000000) != 0)
  {
    v224 = a2[1].i32[0] + 6;
    v225 = *(_QWORD **)a1[4];
    v226 = *v225;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v227 = *(_DWORD *)(*v225 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v227);
    v228 = (const float *)(*v225 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v227);
    v229 = *(_QWORD *)(v225[1] + 144);
    v586 = vld3_f32(v228);
    a3.f32[2] = (float)(v224 / v227);
    v230.i64[0] = 0x3F0000003F000000;
    v230.i64[1] = 0x3F0000003F000000;
    v231 = vaddq_f32(a3, v230);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v231.f32[0]), v586.val[1], *(float32x2_t *)v231.f32, 1), v586.val[2], v231, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v224;
    v232 = vmulq_n_f32(vaddq_f32(a4, v230), *(float *)&v229);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v226 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v586.val[0], v232.f32[0]), v586.val[1], *(float32x2_t *)v232.f32, 1), v586.val[2], v232, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v233 = v6[430];
  if (v233 != v8 && (v233 & 0x40000000) != 0)
  {
    v234 = a2[1].i32[0] + 6;
    v235 = *(_QWORD **)a1[4];
    v236 = *v235;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v237 = *(_DWORD *)(*v235 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v237);
    v238 = (const float *)(*v235 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v237);
    v239 = *(_QWORD *)(v235[1] + 144);
    v587 = vld3_f32(v238);
    a3.f32[2] = (float)(v234 / v237);
    v240.i64[0] = 0x3F0000003F000000;
    v240.i64[1] = 0x3F0000003F000000;
    v241 = vaddq_f32(a3, v240);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v241.f32[0]), v587.val[1], *(float32x2_t *)v241.f32, 1), v587.val[2], v241, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v234;
    v242 = vmulq_n_f32(vaddq_f32(a4, v240), *(float *)&v239);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v236 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v587.val[0], v242.f32[0]), v587.val[1], *(float32x2_t *)v242.f32, 1), v587.val[2], v242, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v243 = v6[431];
  if (v243 != v8 && (v243 & 0x40000000) != 0)
  {
    v244 = a2[1].i32[0] + 6;
    v245 = *(_QWORD **)a1[4];
    v246 = *v245;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v247 = *(_DWORD *)(*v245 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v247);
    v248 = (const float *)(*v245 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v247);
    v249 = *(_QWORD *)(v245[1] + 144);
    v588 = vld3_f32(v248);
    a3.f32[2] = (float)(v244 / v247);
    v250.i64[0] = 0x3F0000003F000000;
    v250.i64[1] = 0x3F0000003F000000;
    v251 = vaddq_f32(a3, v250);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v251.f32[0]), v588.val[1], *(float32x2_t *)v251.f32, 1), v588.val[2], v251, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v244;
    v252 = vmulq_n_f32(vaddq_f32(a4, v250), *(float *)&v249);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v246 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v588.val[0], v252.f32[0]), v588.val[1], *(float32x2_t *)v252.f32, 1), v588.val[2], v252, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v253 = v6[432];
  if (v253 != v8 && (v253 & 0x40000000) != 0)
  {
    v254 = a2[1].i32[0] + 6;
    v255 = a2->i32[0];
    v256 = a2->i32[1] + 6;
    v257 = *(_QWORD **)a1[4];
    v258 = *v257;
    v259 = (const float *)(*v257 + 1656);
    v260 = *(_DWORD *)(*v257 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v260);
    v261 = *(_QWORD *)(v257[1] + 144);
    a3.f32[1] = (float)(v256 / v260);
    a3.f32[2] = (float)(v254 / v260);
    v262.i64[0] = 0x3F0000003F000000;
    v262.i64[1] = 0x3F0000003F000000;
    v263 = vaddq_f32(a3, v262);
    v589 = vld3_f32(v259);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v263.f32[0]), v589.val[1], *(float32x2_t *)v263.f32, 1), v589.val[2], v263, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v263.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v256, v255));
    v263.f32[2] = (float)v254;
    v264 = vmulq_n_f32(vaddq_f32(v263, v262), *(float *)&v261);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v258 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v589.val[0], v264.f32[0]), v589.val[1], *(float32x2_t *)v264.f32, 1), v589.val[2], v264, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v265 = v6[433];
  if (v265 != v8 && (v265 & 0x40000000) != 0)
  {
    v266 = a2[1].i32[0] + 6;
    v267 = *(_QWORD **)a1[4];
    v268 = *v267;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v269 = *(_DWORD *)(*v267 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v269);
    v270 = (const float *)(*v267 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v269);
    v271 = *(_QWORD *)(v267[1] + 144);
    v590 = vld3_f32(v270);
    a3.f32[2] = (float)(v266 / v269);
    v272.i64[0] = 0x3F0000003F000000;
    v272.i64[1] = 0x3F0000003F000000;
    v273 = vaddq_f32(a3, v272);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v273.f32[0]), v590.val[1], *(float32x2_t *)v273.f32, 1), v590.val[2], v273, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v266;
    v274 = vmulq_n_f32(vaddq_f32(a4, v272), *(float *)&v271);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v268 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v590.val[0], v274.f32[0]), v590.val[1], *(float32x2_t *)v274.f32, 1), v590.val[2], v274, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v275 = v6[434];
  if (v275 != v8 && (v275 & 0x40000000) != 0)
  {
    v276 = a2[1].i32[0] + 6;
    v277 = *(_QWORD **)a1[4];
    v278 = *v277;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v279 = *(_DWORD *)(*v277 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v279);
    v280 = (const float *)(*v277 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v279);
    v281 = *(_QWORD *)(v277[1] + 144);
    v591 = vld3_f32(v280);
    a3.f32[2] = (float)(v276 / v279);
    v282.i64[0] = 0x3F0000003F000000;
    v282.i64[1] = 0x3F0000003F000000;
    v283 = vaddq_f32(a3, v282);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v283.f32[0]), v591.val[1], *(float32x2_t *)v283.f32, 1), v591.val[2], v283, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v276;
    v284 = vmulq_n_f32(vaddq_f32(a4, v282), *(float *)&v281);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v278 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v591.val[0], v284.f32[0]), v591.val[1], *(float32x2_t *)v284.f32, 1), v591.val[2], v284, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v285 = v6[435];
  if (v285 != v8 && (v285 & 0x40000000) != 0)
  {
    v286 = a2[1].i32[0] + 6;
    v287 = *(_QWORD **)a1[4];
    v288 = *v287;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v289 = *(_DWORD *)(*v287 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v289);
    v290 = (const float *)(*v287 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v289);
    v291 = *(_QWORD *)(v287[1] + 144);
    v592 = vld3_f32(v290);
    a3.f32[2] = (float)(v286 / v289);
    v292.i64[0] = 0x3F0000003F000000;
    v292.i64[1] = 0x3F0000003F000000;
    v293 = vaddq_f32(a3, v292);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v293.f32[0]), v592.val[1], *(float32x2_t *)v293.f32, 1), v592.val[2], v293, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v286;
    v294 = vmulq_n_f32(vaddq_f32(a4, v292), *(float *)&v291);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v288 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v592.val[0], v294.f32[0]), v592.val[1], *(float32x2_t *)v294.f32, 1), v592.val[2], v294, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v295 = v6[436];
  if (v295 != v8 && (v295 & 0x40000000) != 0)
  {
    v296 = a2[1].i32[0] + 6;
    v297 = *(_QWORD **)a1[4];
    v298 = *v297;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v299 = *(_DWORD *)(*v297 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v299);
    v300 = (const float *)(*v297 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v299);
    v301 = *(_QWORD *)(v297[1] + 144);
    v593 = vld3_f32(v300);
    a3.f32[2] = (float)(v296 / v299);
    v302.i64[0] = 0x3F0000003F000000;
    v302.i64[1] = 0x3F0000003F000000;
    v303 = vaddq_f32(a3, v302);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v303.f32[0]), v593.val[1], *(float32x2_t *)v303.f32, 1), v593.val[2], v303, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v296;
    v304 = vmulq_n_f32(vaddq_f32(a4, v302), *(float *)&v301);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v298 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v593.val[0], v304.f32[0]), v593.val[1], *(float32x2_t *)v304.f32, 1), v593.val[2], v304, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v305 = v6[437];
  if (v305 != v8 && (v305 & 0x40000000) != 0)
  {
    v306 = a2[1].i32[0] + 6;
    v307 = *(_QWORD **)a1[4];
    v308 = *v307;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v309 = *(_DWORD *)(*v307 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v309);
    v310 = (const float *)(*v307 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v309);
    v311 = *(_QWORD *)(v307[1] + 144);
    v594 = vld3_f32(v310);
    a3.f32[2] = (float)(v306 / v309);
    v312.i64[0] = 0x3F0000003F000000;
    v312.i64[1] = 0x3F0000003F000000;
    v313 = vaddq_f32(a3, v312);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v313.f32[0]), v594.val[1], *(float32x2_t *)v313.f32, 1), v594.val[2], v313, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v306;
    v314 = vmulq_n_f32(vaddq_f32(a4, v312), *(float *)&v311);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v308 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v594.val[0], v314.f32[0]), v594.val[1], *(float32x2_t *)v314.f32, 1), v594.val[2], v314, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v315 = v6[438];
  if (v315 != v8 && (v315 & 0x40000000) != 0)
  {
    v316 = a2[1].i32[0] + 6;
    v317 = *(_QWORD **)a1[4];
    v318 = *v317;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v319 = *(_DWORD *)(*v317 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v319);
    v320 = (const float *)(*v317 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v319);
    v321 = *(_QWORD *)(v317[1] + 144);
    v595 = vld3_f32(v320);
    a3.f32[2] = (float)(v316 / v319);
    v322.i64[0] = 0x3F0000003F000000;
    v322.i64[1] = 0x3F0000003F000000;
    v323 = vaddq_f32(a3, v322);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v323.f32[0]), v595.val[1], *(float32x2_t *)v323.f32, 1), v595.val[2], v323, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v316;
    v324 = vmulq_n_f32(vaddq_f32(a4, v322), *(float *)&v321);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v318 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v595.val[0], v324.f32[0]), v595.val[1], *(float32x2_t *)v324.f32, 1), v595.val[2], v324, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v325 = v6[439];
  if (v325 != v8 && (v325 & 0x40000000) != 0)
  {
    v326 = a2[1].i32[0] + 6;
    v327 = *(_QWORD **)a1[4];
    v328 = *v327;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v329 = *(_DWORD *)(*v327 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v329);
    v330 = (const float *)(*v327 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v329);
    v331 = *(_QWORD *)(v327[1] + 144);
    v596 = vld3_f32(v330);
    a3.f32[2] = (float)(v326 / v329);
    v332.i64[0] = 0x3F0000003F000000;
    v332.i64[1] = 0x3F0000003F000000;
    v333 = vaddq_f32(a3, v332);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v333.f32[0]), v596.val[1], *(float32x2_t *)v333.f32, 1), v596.val[2], v333, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v326;
    v334 = vmulq_n_f32(vaddq_f32(a4, v332), *(float *)&v331);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v328 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v596.val[0], v334.f32[0]), v596.val[1], *(float32x2_t *)v334.f32, 1), v596.val[2], v334, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v335 = v6[440];
  if (v335 != v8 && (v335 & 0x40000000) != 0)
  {
    v336 = a2[1].i32[0] + 6;
    v337 = a2->i32[0];
    v338 = a2->i32[1] + 7;
    v339 = *(_QWORD **)a1[4];
    v340 = *v339;
    v341 = (const float *)(*v339 + 1656);
    v342 = *(_DWORD *)(*v339 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v342);
    v343 = *(_QWORD *)(v339[1] + 144);
    a3.f32[1] = (float)(v338 / v342);
    a3.f32[2] = (float)(v336 / v342);
    v344.i64[0] = 0x3F0000003F000000;
    v344.i64[1] = 0x3F0000003F000000;
    v345 = vaddq_f32(a3, v344);
    v597 = vld3_f32(v341);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v345.f32[0]), v597.val[1], *(float32x2_t *)v345.f32, 1), v597.val[2], v345, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v345.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v338, v337));
    v345.f32[2] = (float)v336;
    v346 = vmulq_n_f32(vaddq_f32(v345, v344), *(float *)&v343);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v340 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v597.val[0], v346.f32[0]), v597.val[1], *(float32x2_t *)v346.f32, 1), v597.val[2], v346, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v347 = v6[441];
  if (v347 != v8 && (v347 & 0x40000000) != 0)
  {
    v348 = a2[1].i32[0] + 6;
    v349 = *(_QWORD **)a1[4];
    v350 = *v349;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v351 = *(_DWORD *)(*v349 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v351);
    v352 = (const float *)(*v349 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v351);
    v353 = *(_QWORD *)(v349[1] + 144);
    v598 = vld3_f32(v352);
    a3.f32[2] = (float)(v348 / v351);
    v354.i64[0] = 0x3F0000003F000000;
    v354.i64[1] = 0x3F0000003F000000;
    v355 = vaddq_f32(a3, v354);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v355.f32[0]), v598.val[1], *(float32x2_t *)v355.f32, 1), v598.val[2], v355, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v348;
    v356 = vmulq_n_f32(vaddq_f32(a4, v354), *(float *)&v353);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v350 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v598.val[0], v356.f32[0]), v598.val[1], *(float32x2_t *)v356.f32, 1), v598.val[2], v356, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v357 = v6[442];
  if (v357 != v8 && (v357 & 0x40000000) != 0)
  {
    v358 = a2[1].i32[0] + 6;
    v359 = *(_QWORD **)a1[4];
    v360 = *v359;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v361 = *(_DWORD *)(*v359 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v361);
    v362 = (const float *)(*v359 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v361);
    v363 = *(_QWORD *)(v359[1] + 144);
    v599 = vld3_f32(v362);
    a3.f32[2] = (float)(v358 / v361);
    v364.i64[0] = 0x3F0000003F000000;
    v364.i64[1] = 0x3F0000003F000000;
    v365 = vaddq_f32(a3, v364);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v365.f32[0]), v599.val[1], *(float32x2_t *)v365.f32, 1), v599.val[2], v365, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v358;
    v366 = vmulq_n_f32(vaddq_f32(a4, v364), *(float *)&v363);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v360 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v599.val[0], v366.f32[0]), v599.val[1], *(float32x2_t *)v366.f32, 1), v599.val[2], v366, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v367 = v6[443];
  if (v367 != v8 && (v367 & 0x40000000) != 0)
  {
    v368 = a2[1].i32[0] + 6;
    v369 = *(_QWORD **)a1[4];
    v370 = *v369;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v371 = *(_DWORD *)(*v369 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v371);
    v372 = (const float *)(*v369 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v371);
    v373 = *(_QWORD *)(v369[1] + 144);
    v600 = vld3_f32(v372);
    a3.f32[2] = (float)(v368 / v371);
    v374.i64[0] = 0x3F0000003F000000;
    v374.i64[1] = 0x3F0000003F000000;
    v375 = vaddq_f32(a3, v374);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v375.f32[0]), v600.val[1], *(float32x2_t *)v375.f32, 1), v600.val[2], v375, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v368;
    v376 = vmulq_n_f32(vaddq_f32(a4, v374), *(float *)&v373);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v370 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v600.val[0], v376.f32[0]), v600.val[1], *(float32x2_t *)v376.f32, 1), v600.val[2], v376, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v377 = v6[444];
  if (v377 != v8 && (v377 & 0x40000000) != 0)
  {
    v378 = a2[1].i32[0] + 6;
    v379 = *(_QWORD **)a1[4];
    v380 = *v379;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v381 = *(_DWORD *)(*v379 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v381);
    v382 = (const float *)(*v379 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v381);
    v383 = *(_QWORD *)(v379[1] + 144);
    v601 = vld3_f32(v382);
    a3.f32[2] = (float)(v378 / v381);
    v384.i64[0] = 0x3F0000003F000000;
    v384.i64[1] = 0x3F0000003F000000;
    v385 = vaddq_f32(a3, v384);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v385.f32[0]), v601.val[1], *(float32x2_t *)v385.f32, 1), v601.val[2], v385, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v378;
    v386 = vmulq_n_f32(vaddq_f32(a4, v384), *(float *)&v383);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v380 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v601.val[0], v386.f32[0]), v601.val[1], *(float32x2_t *)v386.f32, 1), v601.val[2], v386, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v387 = v6[445];
  if (v387 != v8 && (v387 & 0x40000000) != 0)
  {
    v388 = a2[1].i32[0] + 6;
    v389 = *(_QWORD **)a1[4];
    v390 = *v389;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v391 = *(_DWORD *)(*v389 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v391);
    v392 = (const float *)(*v389 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v391);
    v393 = *(_QWORD *)(v389[1] + 144);
    v602 = vld3_f32(v392);
    a3.f32[2] = (float)(v388 / v391);
    v394.i64[0] = 0x3F0000003F000000;
    v394.i64[1] = 0x3F0000003F000000;
    v395 = vaddq_f32(a3, v394);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v395.f32[0]), v602.val[1], *(float32x2_t *)v395.f32, 1), v602.val[2], v395, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v388;
    v396 = vmulq_n_f32(vaddq_f32(a4, v394), *(float *)&v393);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v390 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v602.val[0], v396.f32[0]), v602.val[1], *(float32x2_t *)v396.f32, 1), v602.val[2], v396, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v397 = v6[446];
  if (v397 != v8 && (v397 & 0x40000000) != 0)
  {
    v398 = a2[1].i32[0] + 6;
    v399 = *(_QWORD **)a1[4];
    v400 = *v399;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v401 = *(_DWORD *)(*v399 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v401);
    v402 = (const float *)(*v399 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v401);
    v403 = *(_QWORD *)(v399[1] + 144);
    v603 = vld3_f32(v402);
    a3.f32[2] = (float)(v398 / v401);
    v404.i64[0] = 0x3F0000003F000000;
    v404.i64[1] = 0x3F0000003F000000;
    v405 = vaddq_f32(a3, v404);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v405.f32[0]), v603.val[1], *(float32x2_t *)v405.f32, 1), v603.val[2], v405, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v398;
    v406 = vmulq_n_f32(vaddq_f32(a4, v404), *(float *)&v403);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v400 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v406.f32[0]), v603.val[1], *(float32x2_t *)v406.f32, 1), v603.val[2], v406, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v407 = v6[447];
  if (v407 != v8 && (v407 & 0x40000000) != 0)
  {
    v408 = a2[1].i32[0] + 6;
    v409 = *(_QWORD **)a1[4];
    v410 = *v409;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v411 = *(_DWORD *)(*v409 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v411);
    v412 = (const float *)(*v409 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v411);
    v413 = *(_QWORD *)(v409[1] + 144);
    v604 = vld3_f32(v412);
    a3.f32[2] = (float)(v408 / v411);
    v414.i64[0] = 0x3F0000003F000000;
    v414.i64[1] = 0x3F0000003F000000;
    v415 = vaddq_f32(a3, v414);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v415.f32[0]), v604.val[1], *(float32x2_t *)v415.f32, 1), v604.val[2], v415, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v408;
    v416 = vmulq_n_f32(vaddq_f32(a4, v414), *(float *)&v413);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v410 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v416.f32[0]), v604.val[1], *(float32x2_t *)v416.f32, 1), v604.val[2], v416, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v417 = v6[448];
  if (v417 != v8 && (v417 & 0x40000000) != 0)
  {
    v418 = a2[1].i32[0] + 7;
    v419 = *(_QWORD **)a1[4];
    v420 = *v419;
    v421 = *(_DWORD *)(*v419 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*a2);
    a3.f32[0] = (float)(a2->i32[0] / v421);
    v422 = (const float *)(*v419 + 1656);
    a3.f32[1] = (float)((int)HIDWORD(*(unint64_t *)a2) / v421);
    v423 = *(_QWORD *)(v419[1] + 144);
    v605 = vld3_f32(v422);
    a3.f32[2] = (float)(v418 / v421);
    v424.i64[0] = 0x3F0000003F000000;
    v424.i64[1] = 0x3F0000003F000000;
    v425 = vaddq_f32(a3, v424);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v425.f32[0]), v605.val[1], *(float32x2_t *)v425.f32, 1), v605.val[2], v425, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v418;
    v426 = vmulq_n_f32(vaddq_f32(a4, v424), *(float *)&v423);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v420 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v426.f32[0]), v605.val[1], *(float32x2_t *)v426.f32, 1), v605.val[2], v426, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v427 = v6[449];
  if (v427 != v8 && (v427 & 0x40000000) != 0)
  {
    v428 = a2->i32[1];
    v429 = a2[1].i32[0] + 7;
    v430 = a2->i32[0] + 1;
    v431 = *(_QWORD **)a1[4];
    v432 = *v431;
    v433 = (const float *)(*v431 + 1656);
    v434 = *(_DWORD *)(*v431 + 8);
    a3.f32[0] = (float)(v430 / v434);
    v435 = *(_QWORD *)(v431[1] + 144);
    a3.f32[1] = (float)(v428 / v434);
    a3.f32[2] = (float)(v429 / v434);
    v436.i64[0] = 0x3F0000003F000000;
    v436.i64[1] = 0x3F0000003F000000;
    v437 = vaddq_f32(a3, v436);
    v606 = vld3_f32(v433);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v437.f32[0]), v606.val[1], *(float32x2_t *)v437.f32, 1), v606.val[2], v437, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v437.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v428, v430));
    v437.f32[2] = (float)v429;
    v438 = vmulq_n_f32(vaddq_f32(v437, v436), *(float *)&v435);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v432 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v438.f32[0]), v606.val[1], *(float32x2_t *)v438.f32, 1), v606.val[2], v438, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v439 = v6[450];
  if (v439 != v8 && (v439 & 0x40000000) != 0)
  {
    v440 = a2->i32[1];
    v441 = a2[1].i32[0] + 7;
    v442 = a2->i32[0] + 2;
    v443 = *(_QWORD **)a1[4];
    v444 = *v443;
    v445 = (const float *)(*v443 + 1656);
    v446 = *(_DWORD *)(*v443 + 8);
    a3.f32[0] = (float)(v442 / v446);
    v447 = *(_QWORD *)(v443[1] + 144);
    a3.f32[1] = (float)(v440 / v446);
    a3.f32[2] = (float)(v441 / v446);
    v448.i64[0] = 0x3F0000003F000000;
    v448.i64[1] = 0x3F0000003F000000;
    v449 = vaddq_f32(a3, v448);
    v607 = vld3_f32(v445);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v449.f32[0]), v607.val[1], *(float32x2_t *)v449.f32, 1), v607.val[2], v449, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v449.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v440, v442));
    v449.f32[2] = (float)v441;
    v450 = vmulq_n_f32(vaddq_f32(v449, v448), *(float *)&v447);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v444 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v450.f32[0]), v607.val[1], *(float32x2_t *)v450.f32, 1), v607.val[2], v450, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v451 = v6[451];
  if (v451 != v8 && (v451 & 0x40000000) != 0)
  {
    v452 = a2->i32[1];
    v453 = a2[1].i32[0] + 7;
    v454 = a2->i32[0] + 3;
    v455 = *(_QWORD **)a1[4];
    v456 = *v455;
    v457 = (const float *)(*v455 + 1656);
    v458 = *(_DWORD *)(*v455 + 8);
    a3.f32[0] = (float)(v454 / v458);
    v459 = *(_QWORD *)(v455[1] + 144);
    a3.f32[1] = (float)(v452 / v458);
    a3.f32[2] = (float)(v453 / v458);
    v460.i64[0] = 0x3F0000003F000000;
    v460.i64[1] = 0x3F0000003F000000;
    v461 = vaddq_f32(a3, v460);
    v608 = vld3_f32(v457);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v461.f32[0]), v608.val[1], *(float32x2_t *)v461.f32, 1), v608.val[2], v461, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v461.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v452, v454));
    v461.f32[2] = (float)v453;
    v462 = vmulq_n_f32(vaddq_f32(v461, v460), *(float *)&v459);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v456 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v462.f32[0]), v608.val[1], *(float32x2_t *)v462.f32, 1), v608.val[2], v462, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v463 = v6[452];
  if (v463 != v8 && (v463 & 0x40000000) != 0)
  {
    v464 = a2->i32[1];
    v465 = a2[1].i32[0] + 7;
    v466 = a2->i32[0] + 4;
    v467 = *(_QWORD **)a1[4];
    v468 = *v467;
    v469 = (const float *)(*v467 + 1656);
    v470 = *(_DWORD *)(*v467 + 8);
    a3.f32[0] = (float)(v466 / v470);
    v471 = *(_QWORD *)(v467[1] + 144);
    a3.f32[1] = (float)(v464 / v470);
    a3.f32[2] = (float)(v465 / v470);
    v472.i64[0] = 0x3F0000003F000000;
    v472.i64[1] = 0x3F0000003F000000;
    v473 = vaddq_f32(a3, v472);
    v609 = vld3_f32(v469);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v473.f32[0]), v609.val[1], *(float32x2_t *)v473.f32, 1), v609.val[2], v473, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v473.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v464, v466));
    v473.f32[2] = (float)v465;
    v474 = vmulq_n_f32(vaddq_f32(v473, v472), *(float *)&v471);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v468 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v474.f32[0]), v609.val[1], *(float32x2_t *)v474.f32, 1), v609.val[2], v474, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v475 = v6[453];
  if (v475 != v8 && (v475 & 0x40000000) != 0)
  {
    v476 = a2->i32[1];
    v477 = a2[1].i32[0] + 7;
    v478 = a2->i32[0] + 5;
    v479 = *(_QWORD **)a1[4];
    v480 = *v479;
    v481 = (const float *)(*v479 + 1656);
    v482 = *(_DWORD *)(*v479 + 8);
    a3.f32[0] = (float)(v478 / v482);
    v483 = *(_QWORD *)(v479[1] + 144);
    a3.f32[1] = (float)(v476 / v482);
    a3.f32[2] = (float)(v477 / v482);
    v484.i64[0] = 0x3F0000003F000000;
    v484.i64[1] = 0x3F0000003F000000;
    v485 = vaddq_f32(a3, v484);
    v610 = vld3_f32(v481);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v485.f32[0]), v610.val[1], *(float32x2_t *)v485.f32, 1), v610.val[2], v485, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v485.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v476, v478));
    v485.f32[2] = (float)v477;
    v486 = vmulq_n_f32(vaddq_f32(v485, v484), *(float *)&v483);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v480 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v486.f32[0]), v610.val[1], *(float32x2_t *)v486.f32, 1), v610.val[2], v486, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v487 = v6[454];
  if (v487 != v8 && (v487 & 0x40000000) != 0)
  {
    v488 = a2->i32[1];
    v489 = a2[1].i32[0] + 7;
    v490 = a2->i32[0] + 6;
    v491 = *(_QWORD **)a1[4];
    v492 = *v491;
    v493 = (const float *)(*v491 + 1656);
    v494 = *(_DWORD *)(*v491 + 8);
    a3.f32[0] = (float)(v490 / v494);
    v495 = *(_QWORD *)(v491[1] + 144);
    a3.f32[1] = (float)(v488 / v494);
    a3.f32[2] = (float)(v489 / v494);
    v496.i64[0] = 0x3F0000003F000000;
    v496.i64[1] = 0x3F0000003F000000;
    v497 = vaddq_f32(a3, v496);
    v611 = vld3_f32(v493);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v497.f32[0]), v611.val[1], *(float32x2_t *)v497.f32, 1), v611.val[2], v497, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v497.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v488, v490));
    v497.f32[2] = (float)v489;
    v498 = vmulq_n_f32(vaddq_f32(v497, v496), *(float *)&v495);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v492 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v498.f32[0]), v611.val[1], *(float32x2_t *)v498.f32, 1), v611.val[2], v498, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v499 = v6[455];
  if (v499 != v8 && (v499 & 0x40000000) != 0)
  {
    v500 = a2->i32[1];
    v501 = a2[1].i32[0] + 7;
    v502 = a2->i32[0] + 7;
    v503 = *(_QWORD **)a1[4];
    v504 = *v503;
    v505 = (const float *)(*v503 + 1656);
    v506 = *(_DWORD *)(*v503 + 8);
    a3.f32[0] = (float)(v502 / v506);
    v507 = *(_QWORD *)(v503[1] + 144);
    a3.f32[1] = (float)(v500 / v506);
    a3.f32[2] = (float)(v501 / v506);
    v508.i64[0] = 0x3F0000003F000000;
    v508.i64[1] = 0x3F0000003F000000;
    v509 = vaddq_f32(a3, v508);
    v612 = vld3_f32(v505);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v509.f32[0]), v612.val[1], *(float32x2_t *)v509.f32, 1), v612.val[2], v509, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v509.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v500, v502));
    v509.f32[2] = (float)v501;
    v510 = vmulq_n_f32(vaddq_f32(v509, v508), *(float *)&v507);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v504 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v510.f32[0]), v612.val[1], *(float32x2_t *)v510.f32, 1), v612.val[2], v510, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v511 = v6[456];
  if (v511 != v8 && (v511 & 0x40000000) != 0)
  {
    v512 = a2[1].i32[0] + 7;
    v513 = a2->i32[0];
    v514 = a2->i32[1] + 1;
    v515 = *(_QWORD **)a1[4];
    v516 = *v515;
    v517 = (const float *)(*v515 + 1656);
    v518 = *(_DWORD *)(*v515 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v518);
    v519 = *(_QWORD *)(v515[1] + 144);
    a3.f32[1] = (float)(v514 / v518);
    a3.f32[2] = (float)(v512 / v518);
    v520.i64[0] = 0x3F0000003F000000;
    v520.i64[1] = 0x3F0000003F000000;
    v521 = vaddq_f32(a3, v520);
    v613 = vld3_f32(v517);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v521.f32[0]), v613.val[1], *(float32x2_t *)v521.f32, 1), v613.val[2], v521, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    *(float32x2_t *)v521.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v514, v513));
    v521.f32[2] = (float)v512;
    v522 = vmulq_n_f32(vaddq_f32(v521, v520), *(float *)&v519);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v516 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v522.f32[0]), v613.val[1], *(float32x2_t *)v522.f32, 1), v613.val[2], v522, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v523 = v6[457];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 7;
    v525 = *(_QWORD **)a1[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000001);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v614 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v531.f32[0]), v614.val[1], *(float32x2_t *)v531.f32, 1), v614.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v526 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v532.f32[0]), v614.val[1], *(float32x2_t *)v532.f32, 1), v614.val[2], v532, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v533 = v6[458];
  if (v533 != v8 && (v533 & 0x40000000) != 0)
  {
    v534 = a2[1].i32[0] + 7;
    v535 = *(_QWORD **)a1[4];
    v536 = *v535;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000002);
    v537 = *(_DWORD *)(*v535 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v537);
    v538 = (const float *)(*v535 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v537);
    v539 = *(_QWORD *)(v535[1] + 144);
    v615 = vld3_f32(v538);
    a3.f32[2] = (float)(v534 / v537);
    v540.i64[0] = 0x3F0000003F000000;
    v540.i64[1] = 0x3F0000003F000000;
    v541 = vaddq_f32(a3, v540);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v541.f32[0]), v615.val[1], *(float32x2_t *)v541.f32, 1), v615.val[2], v541, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v534;
    v542 = vmulq_n_f32(vaddq_f32(a4, v540), *(float *)&v539);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v536 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v542.f32[0]), v615.val[1], *(float32x2_t *)v542.f32, 1), v615.val[2], v542, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v543 = v6[459];
  if (v543 != v8 && (v543 & 0x40000000) != 0)
  {
    v544 = a2[1].i32[0] + 7;
    v545 = *(_QWORD **)a1[4];
    v546 = *v545;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
    v547 = *(_DWORD *)(*v545 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v547);
    v548 = (const float *)(*v545 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v547);
    v549 = *(_QWORD *)(v545[1] + 144);
    v616 = vld3_f32(v548);
    a3.f32[2] = (float)(v544 / v547);
    v550.i64[0] = 0x3F0000003F000000;
    v550.i64[1] = 0x3F0000003F000000;
    v551 = vaddq_f32(a3, v550);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v551.f32[0]), v616.val[1], *(float32x2_t *)v551.f32, 1), v616.val[2], v551, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v544;
    v552 = vmulq_n_f32(vaddq_f32(a4, v550), *(float *)&v549);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v546 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v552.f32[0]), v616.val[1], *(float32x2_t *)v552.f32, 1), v616.val[2], v552, 2);
    v6 = (_DWORD *)a1[1];
    v8 = *(_DWORD *)(*a1 + 272);
  }
  v553 = v6[460];
  if (v553 != v8 && (v553 & 0x40000000) != 0)
  {
    v554 = a2[1].i32[0] + 7;
    v555 = *(_QWORD **)a1[4];
    v556 = *v555;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
    v557 = *(_DWORD *)(*v555 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v557);
    v558 = (const float *)(*v555 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v557);
    v559 = *(_QWORD *)(v555[1] + 144);
    v617 = vld3_f32(v558);
    a3.f32[2] = (float)(v554 / v557);
    v560.i64[0] = 0x3F0000003F000000;
    v560.i64[1] = 0x3F0000003F000000;
    v561 = vaddq_f32(a3, v560);
    v564 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v561.f32[0]), v617.val[1], *(float32x2_t *)v561.f32, 1), v617.val[2], v561, 2), (float32x2_t)0xBF000000BF000000));
    v565 = 0;
    a4.f32[2] = (float)v554;
    v562 = vmulq_n_f32(vaddq_f32(a4, v560), *(float *)&v559);
    v566 = &v564;
    *(uint64_t *)((char *)sub_223A17B10((float *)(v556 + 64), (int *)&v564, (uint64_t)&unk_2245BA939, (uint64_t **)&v566)
               + 28) = (uint64_t)vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v562.f32[0]), v617.val[1], *(float32x2_t *)v562.f32, 1), v617.val[2], v562, 2);
  }
  return sub_223A07A00(a1, a2, a3, a4);
}

uint64_t *sub_223A07A00(uint64_t *result, int32x2_t *a2, float32x4_t a3, float32x4_t a4)
{
  uint64_t *v5;
  _DWORD *v6;
  int v7;
  int v8;
  int v10;
  int v12;
  int v14;
  int v16;
  int v18;
  int v20;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  const float *v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x2_t v32;
  int v33;
  int v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  const float *v39;
  uint64_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x2_t v44;
  int v45;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  const float *v51;
  uint64_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x2_t v56;
  int v57;
  int v59;
  __int32 v60;
  int v61;
  _QWORD *v62;
  uint64_t v63;
  const float *v64;
  int v65;
  uint64_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x2_t v70;
  int v71;
  int v73;
  _QWORD *v74;
  uint64_t v75;
  int v76;
  const float *v77;
  uint64_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x2_t v82;
  int v83;
  int v85;
  _QWORD *v86;
  uint64_t v87;
  int v88;
  const float *v89;
  uint64_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x2_t v94;
  int v95;
  int v97;
  _QWORD *v98;
  uint64_t v99;
  int v100;
  const float *v101;
  uint64_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x2_t v106;
  int v107;
  _QWORD *v108;
  uint64_t v109;
  int v110;
  const float *v111;
  uint64_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x2_t v116;
  int v117;
  int v118;
  _QWORD *v119;
  uint64_t v120;
  int v121;
  const float *v122;
  uint64_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  float32x2_t v127;
  int v128;
  int v129;
  _QWORD *v130;
  uint64_t v131;
  int v132;
  const float *v133;
  uint64_t v134;
  float32x4_t v135;
  float32x4_t v136;
  float32x4_t v137;
  float32x2_t v138;
  int v139;
  int v140;
  _QWORD *v141;
  uint64_t v142;
  int v143;
  const float *v144;
  uint64_t v145;
  float32x4_t v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x2_t v149;
  int v150;
  int v151;
  __int32 v152;
  int v153;
  _QWORD *v154;
  uint64_t v155;
  const float *v156;
  int v157;
  uint64_t v158;
  float32x4_t v159;
  float32x4_t v160;
  float32x4_t v161;
  float32x2_t v162;
  int v163;
  int v164;
  _QWORD *v165;
  uint64_t v166;
  int v167;
  const float *v168;
  uint64_t v169;
  float32x4_t v170;
  float32x4_t v171;
  float32x4_t v172;
  float32x2_t v173;
  int v174;
  int v175;
  _QWORD *v176;
  uint64_t v177;
  int v178;
  const float *v179;
  uint64_t v180;
  float32x4_t v181;
  float32x4_t v182;
  float32x4_t v183;
  float32x2_t v184;
  int v185;
  int v186;
  _QWORD *v187;
  uint64_t v188;
  int v189;
  const float *v190;
  uint64_t v191;
  float32x4_t v192;
  float32x4_t v193;
  float32x4_t v194;
  float32x2_t v195;
  int v196;
  int v197;
  _QWORD *v198;
  uint64_t v199;
  int v200;
  const float *v201;
  uint64_t v202;
  float32x4_t v203;
  float32x4_t v204;
  float32x4_t v205;
  float32x2_t v206;
  int v207;
  int v208;
  _QWORD *v209;
  uint64_t v210;
  int v211;
  const float *v212;
  uint64_t v213;
  float32x4_t v214;
  float32x4_t v215;
  float32x4_t v216;
  float32x2_t v217;
  int v218;
  int v219;
  _QWORD *v220;
  uint64_t v221;
  int v222;
  const float *v223;
  uint64_t v224;
  float32x4_t v225;
  float32x4_t v226;
  float32x4_t v227;
  float32x2_t v228;
  int v229;
  int v230;
  _QWORD *v231;
  uint64_t v232;
  int v233;
  const float *v234;
  uint64_t v235;
  float32x4_t v236;
  float32x4_t v237;
  float32x4_t v238;
  float32x2_t v239;
  int v240;
  int v241;
  __int32 v242;
  int v243;
  _QWORD *v244;
  uint64_t v245;
  const float *v246;
  int v247;
  uint64_t v248;
  float32x4_t v249;
  float32x4_t v250;
  float32x4_t v251;
  float32x2_t v252;
  int v253;
  int v254;
  _QWORD *v255;
  uint64_t v256;
  int v257;
  const float *v258;
  uint64_t v259;
  float32x4_t v260;
  float32x4_t v261;
  float32x4_t v262;
  float32x2_t v263;
  int v264;
  int v265;
  _QWORD *v266;
  uint64_t v267;
  int v268;
  const float *v269;
  uint64_t v270;
  float32x4_t v271;
  float32x4_t v272;
  float32x4_t v273;
  float32x2_t v274;
  int v275;
  int v276;
  _QWORD *v277;
  uint64_t v278;
  int v279;
  const float *v280;
  uint64_t v281;
  float32x4_t v282;
  float32x4_t v283;
  float32x4_t v284;
  float32x2_t v285;
  int v286;
  int v287;
  _QWORD *v288;
  uint64_t v289;
  int v290;
  const float *v291;
  uint64_t v292;
  float32x4_t v293;
  float32x4_t v294;
  float32x4_t v295;
  float32x2_t v296;
  int v297;
  int v298;
  _QWORD *v299;
  uint64_t v300;
  int v301;
  const float *v302;
  uint64_t v303;
  float32x4_t v304;
  float32x4_t v305;
  float32x4_t v306;
  float32x2_t v307;
  int v308;
  int v309;
  _QWORD *v310;
  uint64_t v311;
  int v312;
  const float *v313;
  uint64_t v314;
  float32x4_t v315;
  float32x4_t v316;
  float32x4_t v317;
  float32x2_t v318;
  int v319;
  int v320;
  _QWORD *v321;
  uint64_t v322;
  int v323;
  const float *v324;
  uint64_t v325;
  float32x4_t v326;
  float32x4_t v327;
  float32x4_t v328;
  float32x2_t v329;
  int v330;
  int v331;
  __int32 v332;
  int v333;
  _QWORD *v334;
  uint64_t v335;
  const float *v336;
  int v337;
  uint64_t v338;
  float32x4_t v339;
  float32x4_t v340;
  float32x4_t v341;
  float32x2_t v342;
  int v343;
  int v344;
  _QWORD *v345;
  uint64_t v346;
  int v347;
  const float *v348;
  uint64_t v349;
  float32x4_t v350;
  float32x4_t v351;
  float32x4_t v352;
  float32x2_t v353;
  int v354;
  int v355;
  _QWORD *v356;
  uint64_t v357;
  int v358;
  const float *v359;
  uint64_t v360;
  float32x4_t v361;
  float32x4_t v362;
  float32x4_t v363;
  float32x2_t v364;
  int v365;
  int v366;
  _QWORD *v367;
  uint64_t v368;
  int v369;
  const float *v370;
  uint64_t v371;
  float32x4_t v372;
  float32x4_t v373;
  float32x4_t v374;
  float32x2_t v375;
  int v376;
  int v377;
  _QWORD *v378;
  uint64_t v379;
  int v380;
  const float *v381;
  uint64_t v382;
  float32x4_t v383;
  float32x4_t v384;
  float32x4_t v385;
  float32x2_t v386;
  int v387;
  int v388;
  _QWORD *v389;
  uint64_t v390;
  int v391;
  const float *v392;
  uint64_t v393;
  float32x4_t v394;
  float32x4_t v395;
  float32x4_t v396;
  float32x2_t v397;
  int v398;
  int v399;
  _QWORD *v400;
  uint64_t v401;
  int v402;
  const float *v403;
  uint64_t v404;
  float32x4_t v405;
  float32x4_t v406;
  float32x4_t v407;
  float32x2_t v408;
  int v409;
  int v410;
  _QWORD *v411;
  uint64_t v412;
  int v413;
  const float *v414;
  uint64_t v415;
  float32x4_t v416;
  float32x4_t v417;
  float32x4_t v418;
  float32x2_t v419;
  int v420;
  int v421;
  __int32 v422;
  int v423;
  _QWORD *v424;
  uint64_t v425;
  const float *v426;
  int v427;
  uint64_t v428;
  float32x4_t v429;
  float32x4_t v430;
  float32x4_t v431;
  float32x2_t v432;
  int v433;
  int v434;
  _QWORD *v435;
  uint64_t v436;
  int v437;
  const float *v438;
  uint64_t v439;
  float32x4_t v440;
  float32x4_t v441;
  float32x4_t v442;
  float32x2_t v443;
  int v444;
  int v445;
  _QWORD *v446;
  uint64_t v447;
  int v448;
  const float *v449;
  uint64_t v450;
  float32x4_t v451;
  float32x4_t v452;
  float32x4_t v453;
  float32x2_t v454;
  int v455;
  int v456;
  _QWORD *v457;
  uint64_t v458;
  int v459;
  const float *v460;
  uint64_t v461;
  float32x4_t v462;
  float32x4_t v463;
  float32x4_t v464;
  float32x2_t v465;
  int v466;
  int v467;
  _QWORD *v468;
  uint64_t v469;
  int v470;
  const float *v471;
  uint64_t v472;
  float32x4_t v473;
  float32x4_t v474;
  float32x4_t v475;
  float32x2_t v476;
  int v477;
  int v478;
  _QWORD *v479;
  uint64_t v480;
  int v481;
  const float *v482;
  uint64_t v483;
  float32x4_t v484;
  float32x4_t v485;
  float32x4_t v486;
  float32x2_t v487;
  int v488;
  int v489;
  _QWORD *v490;
  uint64_t v491;
  int v492;
  const float *v493;
  uint64_t v494;
  float32x4_t v495;
  float32x4_t v496;
  float32x4_t v497;
  float32x2_t v498;
  int v499;
  int v500;
  _QWORD *v501;
  uint64_t v502;
  int v503;
  const float *v504;
  uint64_t v505;
  float32x4_t v506;
  float32x4_t v507;
  float32x4_t v508;
  float32x2_t v509;
  int v510;
  int v511;
  __int32 v512;
  int v513;
  _QWORD *v514;
  uint64_t v515;
  const float *v516;
  int v517;
  uint64_t v518;
  float32x4_t v519;
  float32x4_t v520;
  float32x4_t v521;
  float32x2_t v522;
  int v523;
  int v524;
  _QWORD *v525;
  uint64_t v526;
  int v527;
  const float *v528;
  uint64_t v529;
  float32x4_t v530;
  float32x4_t v531;
  float32x4_t v532;
  float32x2_t v533;
  int v534;
  int v535;
  _QWORD *v536;
  uint64_t v537;
  int v538;
  const float *v539;
  uint64_t v540;
  float32x4_t v541;
  float32x4_t v542;
  float32x4_t v543;
  float32x2_t v544;
  int v545;
  int v546;
  _QWORD *v547;
  uint64_t v548;
  int v549;
  const float *v550;
  uint64_t v551;
  float32x4_t v552;
  float32x4_t v553;
  float32x4_t v554;
  float32x2_t v555;
  int v556;
  int v557;
  _QWORD *v558;
  uint64_t v559;
  int v560;
  const float *v561;
  uint64_t v562;
  float32x4_t v563;
  float32x4_t v564;
  float32x4_t v565;
  float32x2_t v566;
  int v567;
  int v568;
  _QWORD *v569;
  uint64_t v570;
  int v571;
  const float *v572;
  uint64_t v573;
  float32x4_t v574;
  float32x4_t v575;
  float32x4_t v576;
  float32x2_t v577;
  int v578;
  int v579;
  _QWORD *v580;
  uint64_t v581;
  int v582;
  const float *v583;
  uint64_t v584;
  float32x4_t v585;
  float32x4_t v586;
  float32x4_t v587;
  float32x2_t v588;
  int v589;
  int v590;
  _QWORD *v591;
  uint64_t v592;
  int v593;
  const float *v594;
  uint64_t v595;
  float32x4_t v596;
  float32x4_t v597;
  float32x4_t v598;
  float32x2_t v599;
  int32x2_t v600;
  int v601;
  int32x2_t *v602;
  float32x2x3_t v603;
  float32x2x3_t v604;
  float32x2x3_t v605;
  float32x2x3_t v606;
  float32x2x3_t v607;
  float32x2x3_t v608;
  float32x2x3_t v609;
  float32x2x3_t v610;
  float32x2x3_t v611;
  float32x2x3_t v612;
  float32x2x3_t v613;
  float32x2x3_t v614;
  float32x2x3_t v615;
  float32x2x3_t v616;
  float32x2x3_t v617;
  float32x2x3_t v618;
  float32x2x3_t v619;
  float32x2x3_t v620;
  float32x2x3_t v621;
  float32x2x3_t v622;
  float32x2x3_t v623;
  float32x2x3_t v624;
  float32x2x3_t v625;
  float32x2x3_t v626;
  float32x2x3_t v627;
  float32x2x3_t v628;
  float32x2x3_t v629;
  float32x2x3_t v630;
  float32x2x3_t v631;
  float32x2x3_t v632;
  float32x2x3_t v633;
  float32x2x3_t v634;
  float32x2x3_t v635;
  float32x2x3_t v636;
  float32x2x3_t v637;
  float32x2x3_t v638;
  float32x2x3_t v639;
  float32x2x3_t v640;
  float32x2x3_t v641;
  float32x2x3_t v642;
  float32x2x3_t v643;
  float32x2x3_t v644;
  float32x2x3_t v645;
  float32x2x3_t v646;
  float32x2x3_t v647;
  float32x2x3_t v648;
  float32x2x3_t v649;
  float32x2x3_t v650;
  float32x2x3_t v651;
  float32x2x3_t v652;
  float32x2x3_t v653;

  v5 = result;
  v6 = (_DWORD *)result[1];
  v7 = v6[461];
  v8 = *(_DWORD *)(*result + 272);
  if (v7 == v8 || (v7 & 0x40000000) == 0)
  {
    v10 = v6[462];
    if (v10 != v8 && (v10 & 0x40000000) != 0)
    {
LABEL_42:
      v35 = a2[1].i32[0] + 7;
      v36 = *(_QWORD **)v5[4];
      v37 = *v36;
      *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000006);
      v38 = *(_DWORD *)(*v36 + 8);
      *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
      a3.f32[0] = (float)(a3.i32[0] / v38);
      v39 = (const float *)(*v36 + 1656);
      a3.f32[1] = (float)(a3.i32[1] / v38);
      v40 = *(_QWORD *)(v36[1] + 144);
      v604 = vld3_f32(v39);
      a3.f32[2] = (float)(v35 / v38);
      v41.i64[0] = 0x3F0000003F000000;
      v41.i64[1] = 0x3F0000003F000000;
      v42 = vaddq_f32(a3, v41);
      v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v42.f32[0]), v604.val[1], *(float32x2_t *)v42.f32, 1), v604.val[2], v42, 2), (float32x2_t)0xBF000000BF000000));
      v601 = 0;
      a4.f32[2] = (float)v35;
      v43 = vmulq_n_f32(vaddq_f32(a4, v41), *(float *)&v40);
      v44 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v604.val[0], v43.f32[0]), v604.val[1], *(float32x2_t *)v43.f32, 1), v604.val[2], v43, 2);
      v602 = &v600;
      result = sub_223A17B10((float *)(v37 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
      *(uint64_t *)((char *)result + 28) = (uint64_t)v44;
      v6 = (_DWORD *)v5[1];
      v8 = *(_DWORD *)(*v5 + 272);
      v45 = v6[463];
      if (v45 != v8 && (v45 & 0x40000000) != 0)
        goto LABEL_46;
      goto LABEL_16;
    }
  }
  else
  {
    v23 = a2[1].i32[0] + 7;
    v24 = *(_QWORD **)result[4];
    v25 = *v24;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000005);
    v26 = *(_DWORD *)(*v24 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v26);
    v27 = (const float *)(*v24 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v26);
    v28 = *(_QWORD *)(v24[1] + 144);
    v603 = vld3_f32(v27);
    a3.f32[2] = (float)(v23 / v26);
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(a3, v29);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v30.f32[0]), v603.val[1], *(float32x2_t *)v30.f32, 1), v603.val[2], v30, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v23;
    v31 = vmulq_n_f32(vaddq_f32(a4, v29), *(float *)&v28);
    v32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v603.val[0], v31.f32[0]), v603.val[1], *(float32x2_t *)v31.f32, 1), v603.val[2], v31, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v25 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v32;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
    v33 = v6[462];
    if (v33 != v8 && (v33 & 0x40000000) != 0)
      goto LABEL_42;
  }
  v12 = v6[463];
  if (v12 != v8 && (v12 & 0x40000000) != 0)
  {
LABEL_46:
    v47 = a2[1].i32[0] + 7;
    v48 = *(_QWORD **)v5[4];
    v49 = *v48;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x100000007);
    v50 = *(_DWORD *)(*v48 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v50);
    v51 = (const float *)(*v48 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v50);
    v52 = *(_QWORD *)(v48[1] + 144);
    v605 = vld3_f32(v51);
    a3.f32[2] = (float)(v47 / v50);
    v53.i64[0] = 0x3F0000003F000000;
    v53.i64[1] = 0x3F0000003F000000;
    v54 = vaddq_f32(a3, v53);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v54.f32[0]), v605.val[1], *(float32x2_t *)v54.f32, 1), v605.val[2], v54, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v47;
    v55 = vmulq_n_f32(vaddq_f32(a4, v53), *(float *)&v52);
    v56 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v605.val[0], v55.f32[0]), v605.val[1], *(float32x2_t *)v55.f32, 1), v605.val[2], v55, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v49 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v56;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
    v57 = v6[464];
    if (v57 != v8 && (v57 & 0x40000000) != 0)
      goto LABEL_50;
    goto LABEL_21;
  }
LABEL_16:
  v14 = v6[464];
  if (v14 != v8 && (v14 & 0x40000000) != 0)
  {
LABEL_50:
    v59 = a2[1].i32[0] + 7;
    v60 = a2->i32[0];
    v61 = a2->i32[1] + 2;
    v62 = *(_QWORD **)v5[4];
    v63 = *v62;
    v64 = (const float *)(*v62 + 1656);
    v65 = *(_DWORD *)(*v62 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v65);
    v66 = *(_QWORD *)(v62[1] + 144);
    a3.f32[1] = (float)(v61 / v65);
    a3.f32[2] = (float)(v59 / v65);
    v67.i64[0] = 0x3F0000003F000000;
    v67.i64[1] = 0x3F0000003F000000;
    v68 = vaddq_f32(a3, v67);
    v606 = vld3_f32(v64);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v68.f32[0]), v606.val[1], *(float32x2_t *)v68.f32, 1), v606.val[2], v68, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    *(float32x2_t *)v68.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v61, v60));
    v68.f32[2] = (float)v59;
    v69 = vmulq_n_f32(vaddq_f32(v68, v67), *(float *)&v66);
    v70 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v606.val[0], v69.f32[0]), v606.val[1], *(float32x2_t *)v69.f32, 1), v606.val[2], v69, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v63 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v70;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
    v71 = v6[465];
    if (v71 != v8 && (v71 & 0x40000000) != 0)
      goto LABEL_54;
    goto LABEL_26;
  }
LABEL_21:
  v16 = v6[465];
  if (v16 != v8 && (v16 & 0x40000000) != 0)
  {
LABEL_54:
    v73 = a2[1].i32[0] + 7;
    v74 = *(_QWORD **)v5[4];
    v75 = *v74;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
    v76 = *(_DWORD *)(*v74 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v76);
    v77 = (const float *)(*v74 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v76);
    v78 = *(_QWORD *)(v74[1] + 144);
    v607 = vld3_f32(v77);
    a3.f32[2] = (float)(v73 / v76);
    v79.i64[0] = 0x3F0000003F000000;
    v79.i64[1] = 0x3F0000003F000000;
    v80 = vaddq_f32(a3, v79);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v80.f32[0]), v607.val[1], *(float32x2_t *)v80.f32, 1), v607.val[2], v80, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v73;
    v81 = vmulq_n_f32(vaddq_f32(a4, v79), *(float *)&v78);
    v82 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v607.val[0], v81.f32[0]), v607.val[1], *(float32x2_t *)v81.f32, 1), v607.val[2], v81, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v75 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v82;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
    v83 = v6[466];
    if (v83 != v8 && (v83 & 0x40000000) != 0)
      goto LABEL_58;
    goto LABEL_31;
  }
LABEL_26:
  v18 = v6[466];
  if (v18 != v8 && (v18 & 0x40000000) != 0)
  {
LABEL_58:
    v85 = a2[1].i32[0] + 7;
    v86 = *(_QWORD **)v5[4];
    v87 = *v86;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000002);
    v88 = *(_DWORD *)(*v86 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v88);
    v89 = (const float *)(*v86 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v88);
    v90 = *(_QWORD *)(v86[1] + 144);
    v608 = vld3_f32(v89);
    a3.f32[2] = (float)(v85 / v88);
    v91.i64[0] = 0x3F0000003F000000;
    v91.i64[1] = 0x3F0000003F000000;
    v92 = vaddq_f32(a3, v91);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v92.f32[0]), v608.val[1], *(float32x2_t *)v92.f32, 1), v608.val[2], v92, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v85;
    v93 = vmulq_n_f32(vaddq_f32(a4, v91), *(float *)&v90);
    v94 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v608.val[0], v93.f32[0]), v608.val[1], *(float32x2_t *)v93.f32, 1), v608.val[2], v93, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v87 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v94;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
    v95 = v6[467];
    if (v95 != v8 && (v95 & 0x40000000) != 0)
      goto LABEL_62;
    goto LABEL_36;
  }
LABEL_31:
  v20 = v6[467];
  if (v20 != v8 && (v20 & 0x40000000) != 0)
  {
LABEL_62:
    v97 = a2[1].i32[0] + 7;
    v98 = *(_QWORD **)v5[4];
    v99 = *v98;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000003);
    v100 = *(_DWORD *)(*v98 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v100);
    v101 = (const float *)(*v98 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v100);
    v102 = *(_QWORD *)(v98[1] + 144);
    v609 = vld3_f32(v101);
    a3.f32[2] = (float)(v97 / v100);
    v103.i64[0] = 0x3F0000003F000000;
    v103.i64[1] = 0x3F0000003F000000;
    v104 = vaddq_f32(a3, v103);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v104.f32[0]), v609.val[1], *(float32x2_t *)v104.f32, 1), v609.val[2], v104, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v97;
    v105 = vmulq_n_f32(vaddq_f32(a4, v103), *(float *)&v102);
    v106 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v609.val[0], v105.f32[0]), v609.val[1], *(float32x2_t *)v105.f32, 1), v609.val[2], v105, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v99 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v106;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
    v22 = v6[468];
    if (v22 == v8)
      goto LABEL_65;
    goto LABEL_63;
  }
LABEL_36:
  v22 = v6[468];
  if (v22 == v8)
    goto LABEL_65;
LABEL_63:
  if ((v22 & 0x40000000) != 0)
  {
    v107 = a2[1].i32[0] + 7;
    v108 = *(_QWORD **)v5[4];
    v109 = *v108;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000004);
    v110 = *(_DWORD *)(*v108 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v110);
    v111 = (const float *)(*v108 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v110);
    v112 = *(_QWORD *)(v108[1] + 144);
    v610 = vld3_f32(v111);
    a3.f32[2] = (float)(v107 / v110);
    v113.i64[0] = 0x3F0000003F000000;
    v113.i64[1] = 0x3F0000003F000000;
    v114 = vaddq_f32(a3, v113);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v114.f32[0]), v610.val[1], *(float32x2_t *)v114.f32, 1), v610.val[2], v114, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v107;
    v115 = vmulq_n_f32(vaddq_f32(a4, v113), *(float *)&v112);
    v116 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v610.val[0], v115.f32[0]), v610.val[1], *(float32x2_t *)v115.f32, 1), v610.val[2], v115, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v109 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v116;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
LABEL_65:
  v117 = v6[469];
  if (v117 != v8 && (v117 & 0x40000000) != 0)
  {
    v118 = a2[1].i32[0] + 7;
    v119 = *(_QWORD **)v5[4];
    v120 = *v119;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000005);
    v121 = *(_DWORD *)(*v119 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v121);
    v122 = (const float *)(*v119 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v121);
    v123 = *(_QWORD *)(v119[1] + 144);
    v611 = vld3_f32(v122);
    a3.f32[2] = (float)(v118 / v121);
    v124.i64[0] = 0x3F0000003F000000;
    v124.i64[1] = 0x3F0000003F000000;
    v125 = vaddq_f32(a3, v124);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v125.f32[0]), v611.val[1], *(float32x2_t *)v125.f32, 1), v611.val[2], v125, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v118;
    v126 = vmulq_n_f32(vaddq_f32(a4, v124), *(float *)&v123);
    v127 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v611.val[0], v126.f32[0]), v611.val[1], *(float32x2_t *)v126.f32, 1), v611.val[2], v126, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v120 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v127;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v128 = v6[470];
  if (v128 != v8 && (v128 & 0x40000000) != 0)
  {
    v129 = a2[1].i32[0] + 7;
    v130 = *(_QWORD **)v5[4];
    v131 = *v130;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000006);
    v132 = *(_DWORD *)(*v130 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v132);
    v133 = (const float *)(*v130 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v132);
    v134 = *(_QWORD *)(v130[1] + 144);
    v612 = vld3_f32(v133);
    a3.f32[2] = (float)(v129 / v132);
    v135.i64[0] = 0x3F0000003F000000;
    v135.i64[1] = 0x3F0000003F000000;
    v136 = vaddq_f32(a3, v135);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v136.f32[0]), v612.val[1], *(float32x2_t *)v136.f32, 1), v612.val[2], v136, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v129;
    v137 = vmulq_n_f32(vaddq_f32(a4, v135), *(float *)&v134);
    v138 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v612.val[0], v137.f32[0]), v612.val[1], *(float32x2_t *)v137.f32, 1), v612.val[2], v137, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v131 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v138;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v139 = v6[471];
  if (v139 != v8 && (v139 & 0x40000000) != 0)
  {
    v140 = a2[1].i32[0] + 7;
    v141 = *(_QWORD **)v5[4];
    v142 = *v141;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x200000007);
    v143 = *(_DWORD *)(*v141 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v143);
    v144 = (const float *)(*v141 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v143);
    v145 = *(_QWORD *)(v141[1] + 144);
    v613 = vld3_f32(v144);
    a3.f32[2] = (float)(v140 / v143);
    v146.i64[0] = 0x3F0000003F000000;
    v146.i64[1] = 0x3F0000003F000000;
    v147 = vaddq_f32(a3, v146);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v147.f32[0]), v613.val[1], *(float32x2_t *)v147.f32, 1), v613.val[2], v147, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v140;
    v148 = vmulq_n_f32(vaddq_f32(a4, v146), *(float *)&v145);
    v149 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v613.val[0], v148.f32[0]), v613.val[1], *(float32x2_t *)v148.f32, 1), v613.val[2], v148, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v142 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v149;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v150 = v6[472];
  if (v150 != v8 && (v150 & 0x40000000) != 0)
  {
    v151 = a2[1].i32[0] + 7;
    v152 = a2->i32[0];
    v153 = a2->i32[1] + 3;
    v154 = *(_QWORD **)v5[4];
    v155 = *v154;
    v156 = (const float *)(*v154 + 1656);
    v157 = *(_DWORD *)(*v154 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v157);
    v158 = *(_QWORD *)(v154[1] + 144);
    a3.f32[1] = (float)(v153 / v157);
    a3.f32[2] = (float)(v151 / v157);
    v159.i64[0] = 0x3F0000003F000000;
    v159.i64[1] = 0x3F0000003F000000;
    v160 = vaddq_f32(a3, v159);
    v614 = vld3_f32(v156);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v160.f32[0]), v614.val[1], *(float32x2_t *)v160.f32, 1), v614.val[2], v160, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    *(float32x2_t *)v160.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v153, v152));
    v160.f32[2] = (float)v151;
    v161 = vmulq_n_f32(vaddq_f32(v160, v159), *(float *)&v158);
    v162 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v614.val[0], v161.f32[0]), v614.val[1], *(float32x2_t *)v161.f32, 1), v614.val[2], v161, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v155 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v162;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v163 = v6[473];
  if (v163 != v8 && (v163 & 0x40000000) != 0)
  {
    v164 = a2[1].i32[0] + 7;
    v165 = *(_QWORD **)v5[4];
    v166 = *v165;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000001);
    v167 = *(_DWORD *)(*v165 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v167);
    v168 = (const float *)(*v165 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v167);
    v169 = *(_QWORD *)(v165[1] + 144);
    v615 = vld3_f32(v168);
    a3.f32[2] = (float)(v164 / v167);
    v170.i64[0] = 0x3F0000003F000000;
    v170.i64[1] = 0x3F0000003F000000;
    v171 = vaddq_f32(a3, v170);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v171.f32[0]), v615.val[1], *(float32x2_t *)v171.f32, 1), v615.val[2], v171, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v164;
    v172 = vmulq_n_f32(vaddq_f32(a4, v170), *(float *)&v169);
    v173 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v615.val[0], v172.f32[0]), v615.val[1], *(float32x2_t *)v172.f32, 1), v615.val[2], v172, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v166 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v173;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v174 = v6[474];
  if (v174 != v8 && (v174 & 0x40000000) != 0)
  {
    v175 = a2[1].i32[0] + 7;
    v176 = *(_QWORD **)v5[4];
    v177 = *v176;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000002);
    v178 = *(_DWORD *)(*v176 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v178);
    v179 = (const float *)(*v176 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v178);
    v180 = *(_QWORD *)(v176[1] + 144);
    v616 = vld3_f32(v179);
    a3.f32[2] = (float)(v175 / v178);
    v181.i64[0] = 0x3F0000003F000000;
    v181.i64[1] = 0x3F0000003F000000;
    v182 = vaddq_f32(a3, v181);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v182.f32[0]), v616.val[1], *(float32x2_t *)v182.f32, 1), v616.val[2], v182, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v175;
    v183 = vmulq_n_f32(vaddq_f32(a4, v181), *(float *)&v180);
    v184 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v616.val[0], v183.f32[0]), v616.val[1], *(float32x2_t *)v183.f32, 1), v616.val[2], v183, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v177 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v184;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v185 = v6[475];
  if (v185 != v8 && (v185 & 0x40000000) != 0)
  {
    v186 = a2[1].i32[0] + 7;
    v187 = *(_QWORD **)v5[4];
    v188 = *v187;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000003);
    v189 = *(_DWORD *)(*v187 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v189);
    v190 = (const float *)(*v187 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v189);
    v191 = *(_QWORD *)(v187[1] + 144);
    v617 = vld3_f32(v190);
    a3.f32[2] = (float)(v186 / v189);
    v192.i64[0] = 0x3F0000003F000000;
    v192.i64[1] = 0x3F0000003F000000;
    v193 = vaddq_f32(a3, v192);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v193.f32[0]), v617.val[1], *(float32x2_t *)v193.f32, 1), v617.val[2], v193, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v186;
    v194 = vmulq_n_f32(vaddq_f32(a4, v192), *(float *)&v191);
    v195 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v617.val[0], v194.f32[0]), v617.val[1], *(float32x2_t *)v194.f32, 1), v617.val[2], v194, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v188 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v195;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v196 = v6[476];
  if (v196 != v8 && (v196 & 0x40000000) != 0)
  {
    v197 = a2[1].i32[0] + 7;
    v198 = *(_QWORD **)v5[4];
    v199 = *v198;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000004);
    v200 = *(_DWORD *)(*v198 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v200);
    v201 = (const float *)(*v198 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v200);
    v202 = *(_QWORD *)(v198[1] + 144);
    v618 = vld3_f32(v201);
    a3.f32[2] = (float)(v197 / v200);
    v203.i64[0] = 0x3F0000003F000000;
    v203.i64[1] = 0x3F0000003F000000;
    v204 = vaddq_f32(a3, v203);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v204.f32[0]), v618.val[1], *(float32x2_t *)v204.f32, 1), v618.val[2], v204, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v197;
    v205 = vmulq_n_f32(vaddq_f32(a4, v203), *(float *)&v202);
    v206 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v618.val[0], v205.f32[0]), v618.val[1], *(float32x2_t *)v205.f32, 1), v618.val[2], v205, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v199 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v206;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v207 = v6[477];
  if (v207 != v8 && (v207 & 0x40000000) != 0)
  {
    v208 = a2[1].i32[0] + 7;
    v209 = *(_QWORD **)v5[4];
    v210 = *v209;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000005);
    v211 = *(_DWORD *)(*v209 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v211);
    v212 = (const float *)(*v209 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v211);
    v213 = *(_QWORD *)(v209[1] + 144);
    v619 = vld3_f32(v212);
    a3.f32[2] = (float)(v208 / v211);
    v214.i64[0] = 0x3F0000003F000000;
    v214.i64[1] = 0x3F0000003F000000;
    v215 = vaddq_f32(a3, v214);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v215.f32[0]), v619.val[1], *(float32x2_t *)v215.f32, 1), v619.val[2], v215, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v208;
    v216 = vmulq_n_f32(vaddq_f32(a4, v214), *(float *)&v213);
    v217 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v619.val[0], v216.f32[0]), v619.val[1], *(float32x2_t *)v216.f32, 1), v619.val[2], v216, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v210 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v217;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v218 = v6[478];
  if (v218 != v8 && (v218 & 0x40000000) != 0)
  {
    v219 = a2[1].i32[0] + 7;
    v220 = *(_QWORD **)v5[4];
    v221 = *v220;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000006);
    v222 = *(_DWORD *)(*v220 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v222);
    v223 = (const float *)(*v220 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v222);
    v224 = *(_QWORD *)(v220[1] + 144);
    v620 = vld3_f32(v223);
    a3.f32[2] = (float)(v219 / v222);
    v225.i64[0] = 0x3F0000003F000000;
    v225.i64[1] = 0x3F0000003F000000;
    v226 = vaddq_f32(a3, v225);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v620.val[0], v226.f32[0]), v620.val[1], *(float32x2_t *)v226.f32, 1), v620.val[2], v226, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v219;
    v227 = vmulq_n_f32(vaddq_f32(a4, v225), *(float *)&v224);
    v228 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v620.val[0], v227.f32[0]), v620.val[1], *(float32x2_t *)v227.f32, 1), v620.val[2], v227, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v221 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v228;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v229 = v6[479];
  if (v229 != v8 && (v229 & 0x40000000) != 0)
  {
    v230 = a2[1].i32[0] + 7;
    v231 = *(_QWORD **)v5[4];
    v232 = *v231;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x300000007);
    v233 = *(_DWORD *)(*v231 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v233);
    v234 = (const float *)(*v231 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v233);
    v235 = *(_QWORD *)(v231[1] + 144);
    v621 = vld3_f32(v234);
    a3.f32[2] = (float)(v230 / v233);
    v236.i64[0] = 0x3F0000003F000000;
    v236.i64[1] = 0x3F0000003F000000;
    v237 = vaddq_f32(a3, v236);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v621.val[0], v237.f32[0]), v621.val[1], *(float32x2_t *)v237.f32, 1), v621.val[2], v237, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v230;
    v238 = vmulq_n_f32(vaddq_f32(a4, v236), *(float *)&v235);
    v239 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v621.val[0], v238.f32[0]), v621.val[1], *(float32x2_t *)v238.f32, 1), v621.val[2], v238, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v232 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v239;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v240 = v6[480];
  if (v240 != v8 && (v240 & 0x40000000) != 0)
  {
    v241 = a2[1].i32[0] + 7;
    v242 = a2->i32[0];
    v243 = a2->i32[1] + 4;
    v244 = *(_QWORD **)v5[4];
    v245 = *v244;
    v246 = (const float *)(*v244 + 1656);
    v247 = *(_DWORD *)(*v244 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v247);
    v248 = *(_QWORD *)(v244[1] + 144);
    a3.f32[1] = (float)(v243 / v247);
    a3.f32[2] = (float)(v241 / v247);
    v249.i64[0] = 0x3F0000003F000000;
    v249.i64[1] = 0x3F0000003F000000;
    v250 = vaddq_f32(a3, v249);
    v622 = vld3_f32(v246);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v622.val[0], v250.f32[0]), v622.val[1], *(float32x2_t *)v250.f32, 1), v622.val[2], v250, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    *(float32x2_t *)v250.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v243, v242));
    v250.f32[2] = (float)v241;
    v251 = vmulq_n_f32(vaddq_f32(v250, v249), *(float *)&v248);
    v252 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v622.val[0], v251.f32[0]), v622.val[1], *(float32x2_t *)v251.f32, 1), v622.val[2], v251, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v245 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v252;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v253 = v6[481];
  if (v253 != v8 && (v253 & 0x40000000) != 0)
  {
    v254 = a2[1].i32[0] + 7;
    v255 = *(_QWORD **)v5[4];
    v256 = *v255;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000001);
    v257 = *(_DWORD *)(*v255 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v257);
    v258 = (const float *)(*v255 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v257);
    v259 = *(_QWORD *)(v255[1] + 144);
    v623 = vld3_f32(v258);
    a3.f32[2] = (float)(v254 / v257);
    v260.i64[0] = 0x3F0000003F000000;
    v260.i64[1] = 0x3F0000003F000000;
    v261 = vaddq_f32(a3, v260);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v623.val[0], v261.f32[0]), v623.val[1], *(float32x2_t *)v261.f32, 1), v623.val[2], v261, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v254;
    v262 = vmulq_n_f32(vaddq_f32(a4, v260), *(float *)&v259);
    v263 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v623.val[0], v262.f32[0]), v623.val[1], *(float32x2_t *)v262.f32, 1), v623.val[2], v262, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v256 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v263;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v264 = v6[482];
  if (v264 != v8 && (v264 & 0x40000000) != 0)
  {
    v265 = a2[1].i32[0] + 7;
    v266 = *(_QWORD **)v5[4];
    v267 = *v266;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000002);
    v268 = *(_DWORD *)(*v266 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v268);
    v269 = (const float *)(*v266 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v268);
    v270 = *(_QWORD *)(v266[1] + 144);
    v624 = vld3_f32(v269);
    a3.f32[2] = (float)(v265 / v268);
    v271.i64[0] = 0x3F0000003F000000;
    v271.i64[1] = 0x3F0000003F000000;
    v272 = vaddq_f32(a3, v271);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v624.val[0], v272.f32[0]), v624.val[1], *(float32x2_t *)v272.f32, 1), v624.val[2], v272, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v265;
    v273 = vmulq_n_f32(vaddq_f32(a4, v271), *(float *)&v270);
    v274 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v624.val[0], v273.f32[0]), v624.val[1], *(float32x2_t *)v273.f32, 1), v624.val[2], v273, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v267 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v274;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v275 = v6[483];
  if (v275 != v8 && (v275 & 0x40000000) != 0)
  {
    v276 = a2[1].i32[0] + 7;
    v277 = *(_QWORD **)v5[4];
    v278 = *v277;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000003);
    v279 = *(_DWORD *)(*v277 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v279);
    v280 = (const float *)(*v277 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v279);
    v281 = *(_QWORD *)(v277[1] + 144);
    v625 = vld3_f32(v280);
    a3.f32[2] = (float)(v276 / v279);
    v282.i64[0] = 0x3F0000003F000000;
    v282.i64[1] = 0x3F0000003F000000;
    v283 = vaddq_f32(a3, v282);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v625.val[0], v283.f32[0]), v625.val[1], *(float32x2_t *)v283.f32, 1), v625.val[2], v283, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v276;
    v284 = vmulq_n_f32(vaddq_f32(a4, v282), *(float *)&v281);
    v285 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v625.val[0], v284.f32[0]), v625.val[1], *(float32x2_t *)v284.f32, 1), v625.val[2], v284, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v278 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v285;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v286 = v6[484];
  if (v286 != v8 && (v286 & 0x40000000) != 0)
  {
    v287 = a2[1].i32[0] + 7;
    v288 = *(_QWORD **)v5[4];
    v289 = *v288;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000004);
    v290 = *(_DWORD *)(*v288 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v290);
    v291 = (const float *)(*v288 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v290);
    v292 = *(_QWORD *)(v288[1] + 144);
    v626 = vld3_f32(v291);
    a3.f32[2] = (float)(v287 / v290);
    v293.i64[0] = 0x3F0000003F000000;
    v293.i64[1] = 0x3F0000003F000000;
    v294 = vaddq_f32(a3, v293);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v626.val[0], v294.f32[0]), v626.val[1], *(float32x2_t *)v294.f32, 1), v626.val[2], v294, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v287;
    v295 = vmulq_n_f32(vaddq_f32(a4, v293), *(float *)&v292);
    v296 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v626.val[0], v295.f32[0]), v626.val[1], *(float32x2_t *)v295.f32, 1), v626.val[2], v295, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v289 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v296;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v297 = v6[485];
  if (v297 != v8 && (v297 & 0x40000000) != 0)
  {
    v298 = a2[1].i32[0] + 7;
    v299 = *(_QWORD **)v5[4];
    v300 = *v299;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000005);
    v301 = *(_DWORD *)(*v299 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v301);
    v302 = (const float *)(*v299 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v301);
    v303 = *(_QWORD *)(v299[1] + 144);
    v627 = vld3_f32(v302);
    a3.f32[2] = (float)(v298 / v301);
    v304.i64[0] = 0x3F0000003F000000;
    v304.i64[1] = 0x3F0000003F000000;
    v305 = vaddq_f32(a3, v304);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v627.val[0], v305.f32[0]), v627.val[1], *(float32x2_t *)v305.f32, 1), v627.val[2], v305, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v298;
    v306 = vmulq_n_f32(vaddq_f32(a4, v304), *(float *)&v303);
    v307 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v627.val[0], v306.f32[0]), v627.val[1], *(float32x2_t *)v306.f32, 1), v627.val[2], v306, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v300 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v307;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v308 = v6[486];
  if (v308 != v8 && (v308 & 0x40000000) != 0)
  {
    v309 = a2[1].i32[0] + 7;
    v310 = *(_QWORD **)v5[4];
    v311 = *v310;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000006);
    v312 = *(_DWORD *)(*v310 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v312);
    v313 = (const float *)(*v310 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v312);
    v314 = *(_QWORD *)(v310[1] + 144);
    v628 = vld3_f32(v313);
    a3.f32[2] = (float)(v309 / v312);
    v315.i64[0] = 0x3F0000003F000000;
    v315.i64[1] = 0x3F0000003F000000;
    v316 = vaddq_f32(a3, v315);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v628.val[0], v316.f32[0]), v628.val[1], *(float32x2_t *)v316.f32, 1), v628.val[2], v316, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v309;
    v317 = vmulq_n_f32(vaddq_f32(a4, v315), *(float *)&v314);
    v318 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v628.val[0], v317.f32[0]), v628.val[1], *(float32x2_t *)v317.f32, 1), v628.val[2], v317, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v311 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v318;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v319 = v6[487];
  if (v319 != v8 && (v319 & 0x40000000) != 0)
  {
    v320 = a2[1].i32[0] + 7;
    v321 = *(_QWORD **)v5[4];
    v322 = *v321;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x400000007);
    v323 = *(_DWORD *)(*v321 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v323);
    v324 = (const float *)(*v321 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v323);
    v325 = *(_QWORD *)(v321[1] + 144);
    v629 = vld3_f32(v324);
    a3.f32[2] = (float)(v320 / v323);
    v326.i64[0] = 0x3F0000003F000000;
    v326.i64[1] = 0x3F0000003F000000;
    v327 = vaddq_f32(a3, v326);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v629.val[0], v327.f32[0]), v629.val[1], *(float32x2_t *)v327.f32, 1), v629.val[2], v327, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v320;
    v328 = vmulq_n_f32(vaddq_f32(a4, v326), *(float *)&v325);
    v329 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v629.val[0], v328.f32[0]), v629.val[1], *(float32x2_t *)v328.f32, 1), v629.val[2], v328, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v322 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v329;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v330 = v6[488];
  if (v330 != v8 && (v330 & 0x40000000) != 0)
  {
    v331 = a2[1].i32[0] + 7;
    v332 = a2->i32[0];
    v333 = a2->i32[1] + 5;
    v334 = *(_QWORD **)v5[4];
    v335 = *v334;
    v336 = (const float *)(*v334 + 1656);
    v337 = *(_DWORD *)(*v334 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v337);
    v338 = *(_QWORD *)(v334[1] + 144);
    a3.f32[1] = (float)(v333 / v337);
    a3.f32[2] = (float)(v331 / v337);
    v339.i64[0] = 0x3F0000003F000000;
    v339.i64[1] = 0x3F0000003F000000;
    v340 = vaddq_f32(a3, v339);
    v630 = vld3_f32(v336);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v630.val[0], v340.f32[0]), v630.val[1], *(float32x2_t *)v340.f32, 1), v630.val[2], v340, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    *(float32x2_t *)v340.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v332));
    v340.f32[2] = (float)v331;
    v341 = vmulq_n_f32(vaddq_f32(v340, v339), *(float *)&v338);
    v342 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v630.val[0], v341.f32[0]), v630.val[1], *(float32x2_t *)v341.f32, 1), v630.val[2], v341, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v335 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v342;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v343 = v6[489];
  if (v343 != v8 && (v343 & 0x40000000) != 0)
  {
    v344 = a2[1].i32[0] + 7;
    v345 = *(_QWORD **)v5[4];
    v346 = *v345;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000001);
    v347 = *(_DWORD *)(*v345 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v347);
    v348 = (const float *)(*v345 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v347);
    v349 = *(_QWORD *)(v345[1] + 144);
    v631 = vld3_f32(v348);
    a3.f32[2] = (float)(v344 / v347);
    v350.i64[0] = 0x3F0000003F000000;
    v350.i64[1] = 0x3F0000003F000000;
    v351 = vaddq_f32(a3, v350);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v631.val[0], v351.f32[0]), v631.val[1], *(float32x2_t *)v351.f32, 1), v631.val[2], v351, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v344;
    v352 = vmulq_n_f32(vaddq_f32(a4, v350), *(float *)&v349);
    v353 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v631.val[0], v352.f32[0]), v631.val[1], *(float32x2_t *)v352.f32, 1), v631.val[2], v352, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v346 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v353;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v354 = v6[490];
  if (v354 != v8 && (v354 & 0x40000000) != 0)
  {
    v355 = a2[1].i32[0] + 7;
    v356 = *(_QWORD **)v5[4];
    v357 = *v356;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000002);
    v358 = *(_DWORD *)(*v356 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v358);
    v359 = (const float *)(*v356 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v358);
    v360 = *(_QWORD *)(v356[1] + 144);
    v632 = vld3_f32(v359);
    a3.f32[2] = (float)(v355 / v358);
    v361.i64[0] = 0x3F0000003F000000;
    v361.i64[1] = 0x3F0000003F000000;
    v362 = vaddq_f32(a3, v361);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v632.val[0], v362.f32[0]), v632.val[1], *(float32x2_t *)v362.f32, 1), v632.val[2], v362, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v355;
    v363 = vmulq_n_f32(vaddq_f32(a4, v361), *(float *)&v360);
    v364 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v632.val[0], v363.f32[0]), v632.val[1], *(float32x2_t *)v363.f32, 1), v632.val[2], v363, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v357 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v364;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v365 = v6[491];
  if (v365 != v8 && (v365 & 0x40000000) != 0)
  {
    v366 = a2[1].i32[0] + 7;
    v367 = *(_QWORD **)v5[4];
    v368 = *v367;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000003);
    v369 = *(_DWORD *)(*v367 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v369);
    v370 = (const float *)(*v367 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v369);
    v371 = *(_QWORD *)(v367[1] + 144);
    v633 = vld3_f32(v370);
    a3.f32[2] = (float)(v366 / v369);
    v372.i64[0] = 0x3F0000003F000000;
    v372.i64[1] = 0x3F0000003F000000;
    v373 = vaddq_f32(a3, v372);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v633.val[0], v373.f32[0]), v633.val[1], *(float32x2_t *)v373.f32, 1), v633.val[2], v373, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v366;
    v374 = vmulq_n_f32(vaddq_f32(a4, v372), *(float *)&v371);
    v375 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v633.val[0], v374.f32[0]), v633.val[1], *(float32x2_t *)v374.f32, 1), v633.val[2], v374, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v368 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v375;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v376 = v6[492];
  if (v376 != v8 && (v376 & 0x40000000) != 0)
  {
    v377 = a2[1].i32[0] + 7;
    v378 = *(_QWORD **)v5[4];
    v379 = *v378;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000004);
    v380 = *(_DWORD *)(*v378 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v380);
    v381 = (const float *)(*v378 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v380);
    v382 = *(_QWORD *)(v378[1] + 144);
    v634 = vld3_f32(v381);
    a3.f32[2] = (float)(v377 / v380);
    v383.i64[0] = 0x3F0000003F000000;
    v383.i64[1] = 0x3F0000003F000000;
    v384 = vaddq_f32(a3, v383);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v634.val[0], v384.f32[0]), v634.val[1], *(float32x2_t *)v384.f32, 1), v634.val[2], v384, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v377;
    v385 = vmulq_n_f32(vaddq_f32(a4, v383), *(float *)&v382);
    v386 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v634.val[0], v385.f32[0]), v634.val[1], *(float32x2_t *)v385.f32, 1), v634.val[2], v385, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v379 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v386;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v387 = v6[493];
  if (v387 != v8 && (v387 & 0x40000000) != 0)
  {
    v388 = a2[1].i32[0] + 7;
    v389 = *(_QWORD **)v5[4];
    v390 = *v389;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000005);
    v391 = *(_DWORD *)(*v389 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v391);
    v392 = (const float *)(*v389 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v391);
    v393 = *(_QWORD *)(v389[1] + 144);
    v635 = vld3_f32(v392);
    a3.f32[2] = (float)(v388 / v391);
    v394.i64[0] = 0x3F0000003F000000;
    v394.i64[1] = 0x3F0000003F000000;
    v395 = vaddq_f32(a3, v394);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v635.val[0], v395.f32[0]), v635.val[1], *(float32x2_t *)v395.f32, 1), v635.val[2], v395, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v388;
    v396 = vmulq_n_f32(vaddq_f32(a4, v394), *(float *)&v393);
    v397 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v635.val[0], v396.f32[0]), v635.val[1], *(float32x2_t *)v396.f32, 1), v635.val[2], v396, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v390 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v397;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v398 = v6[494];
  if (v398 != v8 && (v398 & 0x40000000) != 0)
  {
    v399 = a2[1].i32[0] + 7;
    v400 = *(_QWORD **)v5[4];
    v401 = *v400;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000006);
    v402 = *(_DWORD *)(*v400 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v402);
    v403 = (const float *)(*v400 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v402);
    v404 = *(_QWORD *)(v400[1] + 144);
    v636 = vld3_f32(v403);
    a3.f32[2] = (float)(v399 / v402);
    v405.i64[0] = 0x3F0000003F000000;
    v405.i64[1] = 0x3F0000003F000000;
    v406 = vaddq_f32(a3, v405);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v636.val[0], v406.f32[0]), v636.val[1], *(float32x2_t *)v406.f32, 1), v636.val[2], v406, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v399;
    v407 = vmulq_n_f32(vaddq_f32(a4, v405), *(float *)&v404);
    v408 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v636.val[0], v407.f32[0]), v636.val[1], *(float32x2_t *)v407.f32, 1), v636.val[2], v407, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v401 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v408;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v409 = v6[495];
  if (v409 != v8 && (v409 & 0x40000000) != 0)
  {
    v410 = a2[1].i32[0] + 7;
    v411 = *(_QWORD **)v5[4];
    v412 = *v411;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x500000007);
    v413 = *(_DWORD *)(*v411 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v413);
    v414 = (const float *)(*v411 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v413);
    v415 = *(_QWORD *)(v411[1] + 144);
    v637 = vld3_f32(v414);
    a3.f32[2] = (float)(v410 / v413);
    v416.i64[0] = 0x3F0000003F000000;
    v416.i64[1] = 0x3F0000003F000000;
    v417 = vaddq_f32(a3, v416);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v637.val[0], v417.f32[0]), v637.val[1], *(float32x2_t *)v417.f32, 1), v637.val[2], v417, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v410;
    v418 = vmulq_n_f32(vaddq_f32(a4, v416), *(float *)&v415);
    v419 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v637.val[0], v418.f32[0]), v637.val[1], *(float32x2_t *)v418.f32, 1), v637.val[2], v418, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v412 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v419;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v420 = v6[496];
  if (v420 != v8 && (v420 & 0x40000000) != 0)
  {
    v421 = a2[1].i32[0] + 7;
    v422 = a2->i32[0];
    v423 = a2->i32[1] + 6;
    v424 = *(_QWORD **)v5[4];
    v425 = *v424;
    v426 = (const float *)(*v424 + 1656);
    v427 = *(_DWORD *)(*v424 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v427);
    v428 = *(_QWORD *)(v424[1] + 144);
    a3.f32[1] = (float)(v423 / v427);
    a3.f32[2] = (float)(v421 / v427);
    v429.i64[0] = 0x3F0000003F000000;
    v429.i64[1] = 0x3F0000003F000000;
    v430 = vaddq_f32(a3, v429);
    v638 = vld3_f32(v426);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v638.val[0], v430.f32[0]), v638.val[1], *(float32x2_t *)v430.f32, 1), v638.val[2], v430, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    *(float32x2_t *)v430.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v423, v422));
    v430.f32[2] = (float)v421;
    v431 = vmulq_n_f32(vaddq_f32(v430, v429), *(float *)&v428);
    v432 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v638.val[0], v431.f32[0]), v638.val[1], *(float32x2_t *)v431.f32, 1), v638.val[2], v431, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v425 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v432;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v433 = v6[497];
  if (v433 != v8 && (v433 & 0x40000000) != 0)
  {
    v434 = a2[1].i32[0] + 7;
    v435 = *(_QWORD **)v5[4];
    v436 = *v435;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000001);
    v437 = *(_DWORD *)(*v435 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v437);
    v438 = (const float *)(*v435 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v437);
    v439 = *(_QWORD *)(v435[1] + 144);
    v639 = vld3_f32(v438);
    a3.f32[2] = (float)(v434 / v437);
    v440.i64[0] = 0x3F0000003F000000;
    v440.i64[1] = 0x3F0000003F000000;
    v441 = vaddq_f32(a3, v440);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v639.val[0], v441.f32[0]), v639.val[1], *(float32x2_t *)v441.f32, 1), v639.val[2], v441, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v434;
    v442 = vmulq_n_f32(vaddq_f32(a4, v440), *(float *)&v439);
    v443 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v639.val[0], v442.f32[0]), v639.val[1], *(float32x2_t *)v442.f32, 1), v639.val[2], v442, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v436 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v443;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v444 = v6[498];
  if (v444 != v8 && (v444 & 0x40000000) != 0)
  {
    v445 = a2[1].i32[0] + 7;
    v446 = *(_QWORD **)v5[4];
    v447 = *v446;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
    v448 = *(_DWORD *)(*v446 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v448);
    v449 = (const float *)(*v446 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v448);
    v450 = *(_QWORD *)(v446[1] + 144);
    v640 = vld3_f32(v449);
    a3.f32[2] = (float)(v445 / v448);
    v451.i64[0] = 0x3F0000003F000000;
    v451.i64[1] = 0x3F0000003F000000;
    v452 = vaddq_f32(a3, v451);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v640.val[0], v452.f32[0]), v640.val[1], *(float32x2_t *)v452.f32, 1), v640.val[2], v452, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v445;
    v453 = vmulq_n_f32(vaddq_f32(a4, v451), *(float *)&v450);
    v454 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v640.val[0], v453.f32[0]), v640.val[1], *(float32x2_t *)v453.f32, 1), v640.val[2], v453, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v447 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v454;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v455 = v6[499];
  if (v455 != v8 && (v455 & 0x40000000) != 0)
  {
    v456 = a2[1].i32[0] + 7;
    v457 = *(_QWORD **)v5[4];
    v458 = *v457;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000003);
    v459 = *(_DWORD *)(*v457 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v459);
    v460 = (const float *)(*v457 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v459);
    v461 = *(_QWORD *)(v457[1] + 144);
    v641 = vld3_f32(v460);
    a3.f32[2] = (float)(v456 / v459);
    v462.i64[0] = 0x3F0000003F000000;
    v462.i64[1] = 0x3F0000003F000000;
    v463 = vaddq_f32(a3, v462);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v641.val[0], v463.f32[0]), v641.val[1], *(float32x2_t *)v463.f32, 1), v641.val[2], v463, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v456;
    v464 = vmulq_n_f32(vaddq_f32(a4, v462), *(float *)&v461);
    v465 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v641.val[0], v464.f32[0]), v641.val[1], *(float32x2_t *)v464.f32, 1), v641.val[2], v464, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v458 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v465;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v466 = v6[500];
  if (v466 != v8 && (v466 & 0x40000000) != 0)
  {
    v467 = a2[1].i32[0] + 7;
    v468 = *(_QWORD **)v5[4];
    v469 = *v468;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000004);
    v470 = *(_DWORD *)(*v468 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v470);
    v471 = (const float *)(*v468 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v470);
    v472 = *(_QWORD *)(v468[1] + 144);
    v642 = vld3_f32(v471);
    a3.f32[2] = (float)(v467 / v470);
    v473.i64[0] = 0x3F0000003F000000;
    v473.i64[1] = 0x3F0000003F000000;
    v474 = vaddq_f32(a3, v473);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v642.val[0], v474.f32[0]), v642.val[1], *(float32x2_t *)v474.f32, 1), v642.val[2], v474, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v467;
    v475 = vmulq_n_f32(vaddq_f32(a4, v473), *(float *)&v472);
    v476 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v642.val[0], v475.f32[0]), v642.val[1], *(float32x2_t *)v475.f32, 1), v642.val[2], v475, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v469 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v476;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v477 = v6[501];
  if (v477 != v8 && (v477 & 0x40000000) != 0)
  {
    v478 = a2[1].i32[0] + 7;
    v479 = *(_QWORD **)v5[4];
    v480 = *v479;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000005);
    v481 = *(_DWORD *)(*v479 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v481);
    v482 = (const float *)(*v479 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v481);
    v483 = *(_QWORD *)(v479[1] + 144);
    v643 = vld3_f32(v482);
    a3.f32[2] = (float)(v478 / v481);
    v484.i64[0] = 0x3F0000003F000000;
    v484.i64[1] = 0x3F0000003F000000;
    v485 = vaddq_f32(a3, v484);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v643.val[0], v485.f32[0]), v643.val[1], *(float32x2_t *)v485.f32, 1), v643.val[2], v485, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v478;
    v486 = vmulq_n_f32(vaddq_f32(a4, v484), *(float *)&v483);
    v487 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v643.val[0], v486.f32[0]), v643.val[1], *(float32x2_t *)v486.f32, 1), v643.val[2], v486, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v480 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v487;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v488 = v6[502];
  if (v488 != v8 && (v488 & 0x40000000) != 0)
  {
    v489 = a2[1].i32[0] + 7;
    v490 = *(_QWORD **)v5[4];
    v491 = *v490;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000006);
    v492 = *(_DWORD *)(*v490 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v492);
    v493 = (const float *)(*v490 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v492);
    v494 = *(_QWORD *)(v490[1] + 144);
    v644 = vld3_f32(v493);
    a3.f32[2] = (float)(v489 / v492);
    v495.i64[0] = 0x3F0000003F000000;
    v495.i64[1] = 0x3F0000003F000000;
    v496 = vaddq_f32(a3, v495);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v644.val[0], v496.f32[0]), v644.val[1], *(float32x2_t *)v496.f32, 1), v644.val[2], v496, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v489;
    v497 = vmulq_n_f32(vaddq_f32(a4, v495), *(float *)&v494);
    v498 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v644.val[0], v497.f32[0]), v644.val[1], *(float32x2_t *)v497.f32, 1), v644.val[2], v497, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v491 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v498;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v499 = v6[503];
  if (v499 != v8 && (v499 & 0x40000000) != 0)
  {
    v500 = a2[1].i32[0] + 7;
    v501 = *(_QWORD **)v5[4];
    v502 = *v501;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x600000007);
    v503 = *(_DWORD *)(*v501 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v503);
    v504 = (const float *)(*v501 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v503);
    v505 = *(_QWORD *)(v501[1] + 144);
    v645 = vld3_f32(v504);
    a3.f32[2] = (float)(v500 / v503);
    v506.i64[0] = 0x3F0000003F000000;
    v506.i64[1] = 0x3F0000003F000000;
    v507 = vaddq_f32(a3, v506);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v645.val[0], v507.f32[0]), v645.val[1], *(float32x2_t *)v507.f32, 1), v645.val[2], v507, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v500;
    v508 = vmulq_n_f32(vaddq_f32(a4, v506), *(float *)&v505);
    v509 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v645.val[0], v508.f32[0]), v645.val[1], *(float32x2_t *)v508.f32, 1), v645.val[2], v508, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v502 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v509;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v510 = v6[504];
  if (v510 != v8 && (v510 & 0x40000000) != 0)
  {
    v511 = a2[1].i32[0] + 7;
    v512 = a2->i32[0];
    v513 = a2->i32[1] + 7;
    v514 = *(_QWORD **)v5[4];
    v515 = *v514;
    v516 = (const float *)(*v514 + 1656);
    v517 = *(_DWORD *)(*v514 + 8);
    a3.f32[0] = (float)(a2->i32[0] / v517);
    v518 = *(_QWORD *)(v514[1] + 144);
    a3.f32[1] = (float)(v513 / v517);
    a3.f32[2] = (float)(v511 / v517);
    v519.i64[0] = 0x3F0000003F000000;
    v519.i64[1] = 0x3F0000003F000000;
    v520 = vaddq_f32(a3, v519);
    v646 = vld3_f32(v516);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v646.val[0], v520.f32[0]), v646.val[1], *(float32x2_t *)v520.f32, 1), v646.val[2], v520, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    *(float32x2_t *)v520.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v513, v512));
    v520.f32[2] = (float)v511;
    v521 = vmulq_n_f32(vaddq_f32(v520, v519), *(float *)&v518);
    v522 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v646.val[0], v521.f32[0]), v646.val[1], *(float32x2_t *)v521.f32, 1), v646.val[2], v521, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v515 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v522;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v523 = v6[505];
  if (v523 != v8 && (v523 & 0x40000000) != 0)
  {
    v524 = a2[1].i32[0] + 7;
    v525 = *(_QWORD **)v5[4];
    v526 = *v525;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000001);
    v527 = *(_DWORD *)(*v525 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v527);
    v528 = (const float *)(*v525 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v527);
    v529 = *(_QWORD *)(v525[1] + 144);
    v647 = vld3_f32(v528);
    a3.f32[2] = (float)(v524 / v527);
    v530.i64[0] = 0x3F0000003F000000;
    v530.i64[1] = 0x3F0000003F000000;
    v531 = vaddq_f32(a3, v530);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v647.val[0], v531.f32[0]), v647.val[1], *(float32x2_t *)v531.f32, 1), v647.val[2], v531, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v524;
    v532 = vmulq_n_f32(vaddq_f32(a4, v530), *(float *)&v529);
    v533 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v647.val[0], v532.f32[0]), v647.val[1], *(float32x2_t *)v532.f32, 1), v647.val[2], v532, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v526 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v533;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v534 = v6[506];
  if (v534 != v8 && (v534 & 0x40000000) != 0)
  {
    v535 = a2[1].i32[0] + 7;
    v536 = *(_QWORD **)v5[4];
    v537 = *v536;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000002);
    v538 = *(_DWORD *)(*v536 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v538);
    v539 = (const float *)(*v536 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v538);
    v540 = *(_QWORD *)(v536[1] + 144);
    v648 = vld3_f32(v539);
    a3.f32[2] = (float)(v535 / v538);
    v541.i64[0] = 0x3F0000003F000000;
    v541.i64[1] = 0x3F0000003F000000;
    v542 = vaddq_f32(a3, v541);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v648.val[0], v542.f32[0]), v648.val[1], *(float32x2_t *)v542.f32, 1), v648.val[2], v542, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v535;
    v543 = vmulq_n_f32(vaddq_f32(a4, v541), *(float *)&v540);
    v544 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v648.val[0], v543.f32[0]), v648.val[1], *(float32x2_t *)v543.f32, 1), v648.val[2], v543, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v537 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v544;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v545 = v6[507];
  if (v545 != v8 && (v545 & 0x40000000) != 0)
  {
    v546 = a2[1].i32[0] + 7;
    v547 = *(_QWORD **)v5[4];
    v548 = *v547;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000003);
    v549 = *(_DWORD *)(*v547 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v549);
    v550 = (const float *)(*v547 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v549);
    v551 = *(_QWORD *)(v547[1] + 144);
    v649 = vld3_f32(v550);
    a3.f32[2] = (float)(v546 / v549);
    v552.i64[0] = 0x3F0000003F000000;
    v552.i64[1] = 0x3F0000003F000000;
    v553 = vaddq_f32(a3, v552);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v649.val[0], v553.f32[0]), v649.val[1], *(float32x2_t *)v553.f32, 1), v649.val[2], v553, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v546;
    v554 = vmulq_n_f32(vaddq_f32(a4, v552), *(float *)&v551);
    v555 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v649.val[0], v554.f32[0]), v649.val[1], *(float32x2_t *)v554.f32, 1), v649.val[2], v554, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v548 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v555;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v556 = v6[508];
  if (v556 != v8 && (v556 & 0x40000000) != 0)
  {
    v557 = a2[1].i32[0] + 7;
    v558 = *(_QWORD **)v5[4];
    v559 = *v558;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000004);
    v560 = *(_DWORD *)(*v558 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v560);
    v561 = (const float *)(*v558 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v560);
    v562 = *(_QWORD *)(v558[1] + 144);
    v650 = vld3_f32(v561);
    a3.f32[2] = (float)(v557 / v560);
    v563.i64[0] = 0x3F0000003F000000;
    v563.i64[1] = 0x3F0000003F000000;
    v564 = vaddq_f32(a3, v563);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v650.val[0], v564.f32[0]), v650.val[1], *(float32x2_t *)v564.f32, 1), v650.val[2], v564, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v557;
    v565 = vmulq_n_f32(vaddq_f32(a4, v563), *(float *)&v562);
    v566 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v650.val[0], v565.f32[0]), v650.val[1], *(float32x2_t *)v565.f32, 1), v650.val[2], v565, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v559 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v566;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v567 = v6[509];
  if (v567 != v8 && (v567 & 0x40000000) != 0)
  {
    v568 = a2[1].i32[0] + 7;
    v569 = *(_QWORD **)v5[4];
    v570 = *v569;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000005);
    v571 = *(_DWORD *)(*v569 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v571);
    v572 = (const float *)(*v569 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v571);
    v573 = *(_QWORD *)(v569[1] + 144);
    v651 = vld3_f32(v572);
    a3.f32[2] = (float)(v568 / v571);
    v574.i64[0] = 0x3F0000003F000000;
    v574.i64[1] = 0x3F0000003F000000;
    v575 = vaddq_f32(a3, v574);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v651.val[0], v575.f32[0]), v651.val[1], *(float32x2_t *)v575.f32, 1), v651.val[2], v575, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v568;
    v576 = vmulq_n_f32(vaddq_f32(a4, v574), *(float *)&v573);
    v577 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v651.val[0], v576.f32[0]), v651.val[1], *(float32x2_t *)v576.f32, 1), v651.val[2], v576, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v570 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v577;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v578 = v6[510];
  if (v578 != v8 && (v578 & 0x40000000) != 0)
  {
    v579 = a2[1].i32[0] + 7;
    v580 = *(_QWORD **)v5[4];
    v581 = *v580;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000006);
    v582 = *(_DWORD *)(*v580 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v582);
    v583 = (const float *)(*v580 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v582);
    v584 = *(_QWORD *)(v580[1] + 144);
    v652 = vld3_f32(v583);
    a3.f32[2] = (float)(v579 / v582);
    v585.i64[0] = 0x3F0000003F000000;
    v585.i64[1] = 0x3F0000003F000000;
    v586 = vaddq_f32(a3, v585);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v652.val[0], v586.f32[0]), v652.val[1], *(float32x2_t *)v586.f32, 1), v652.val[2], v586, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v579;
    v587 = vmulq_n_f32(vaddq_f32(a4, v585), *(float *)&v584);
    v588 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v652.val[0], v587.f32[0]), v652.val[1], *(float32x2_t *)v587.f32, 1), v652.val[2], v587, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v581 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v588;
    v6 = (_DWORD *)v5[1];
    v8 = *(_DWORD *)(*v5 + 272);
  }
  v589 = v6[511];
  if (v589 != v8 && (v589 & 0x40000000) != 0)
  {
    v590 = a2[1].i32[0] + 7;
    v591 = *(_QWORD **)v5[4];
    v592 = *v591;
    *(int32x2_t *)a3.f32 = vadd_s32(*a2, (int32x2_t)0x700000007);
    v593 = *(_DWORD *)(*v591 + 8);
    *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a3.f32);
    a3.f32[0] = (float)(a3.i32[0] / v593);
    v594 = (const float *)(*v591 + 1656);
    a3.f32[1] = (float)(a3.i32[1] / v593);
    v595 = *(_QWORD *)(v591[1] + 144);
    v653 = vld3_f32(v594);
    a3.f32[2] = (float)(v590 / v593);
    v596.i64[0] = 0x3F0000003F000000;
    v596.i64[1] = 0x3F0000003F000000;
    v597 = vaddq_f32(a3, v596);
    v600 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v653.val[0], v597.f32[0]), v653.val[1], *(float32x2_t *)v597.f32, 1), v653.val[2], v597, 2), (float32x2_t)0xBF000000BF000000));
    v601 = 0;
    a4.f32[2] = (float)v590;
    v598 = vmulq_n_f32(vaddq_f32(a4, v596), *(float *)&v595);
    v599 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v653.val[0], v598.f32[0]), v653.val[1], *(float32x2_t *)v598.f32, 1), v653.val[2], v598, 2);
    v602 = &v600;
    result = sub_223A17B10((float *)(v592 + 64), (int *)&v600, (uint64_t)&unk_2245BA939, (uint64_t **)&v602);
    *(uint64_t *)((char *)result + 28) = (uint64_t)v599;
  }
  return result;
}

uint64_t sub_223A0A7F8(uint64_t a1)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 72) = 1065353216;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_QWORD *)(a1 + 176) = 0;
  *(_DWORD *)(a1 + 184) = 1065353216;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_DWORD *)(a1 + 224) = 1065353216;
  *(_DWORD *)(a1 + 232) = 0;
  sub_22351A5C4(a1 + 240, 1216451635);
  return a1;
}

void sub_223A0A888(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  void *v7;
  void *v8;

  v5 = v3;
  sub_22322E828(v5);
  sub_223919E54(v1 + 152);
  sub_2239AAA98((void **)(v1 + 128));
  v7 = *(void **)(v1 + 104);
  if (v7)
  {
    *(_QWORD *)(v1 + 112) = v7;
    operator delete(v7);
    v8 = *v4;
    if (!*v4)
    {
LABEL_3:
      sub_22322E828(v2);
      sub_22322E828(v1);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v8 = *v4;
    if (!*v4)
      goto LABEL_3;
  }
  *(_QWORD *)(v1 + 88) = v8;
  operator delete(v8);
  sub_22322E828(v2);
  sub_22322E828(v1);
  _Unwind_Resume(a1);
}

void sub_223A0A908(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t i;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t j;
  _QWORD *k;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t m;
  _QWORD *v15;
  void *v16;

  if (a1[3])
  {
    v2 = (_QWORD *)a1[2];
    if (v2)
    {
      do
      {
        v3 = (_QWORD *)*v2;
        operator delete(v2);
        v2 = v3;
      }
      while (v3);
    }
    a1[2] = 0;
    v4 = a1[1];
    if (v4)
    {
      for (i = 0; i != v4; ++i)
        *(_QWORD *)(*a1 + 8 * i) = 0;
    }
    a1[3] = 0;
  }
  if (a1[8])
  {
    v6 = (_QWORD *)a1[7];
    if (v6)
    {
      do
      {
        v7 = (_QWORD *)*v6;
        operator delete(v6);
        v6 = v7;
      }
      while (v7);
    }
    a1[7] = 0;
    v8 = a1[6];
    if (v8)
    {
      for (j = 0; j != v8; ++j)
        *(_QWORD *)(a1[5] + 8 * j) = 0;
    }
    a1[8] = 0;
  }
  a1[11] = a1[10];
  a1[14] = a1[13];
  v11 = (_QWORD *)a1[16];
  for (k = (_QWORD *)a1[17]; k != v11; k = sub_22391679C(k - 18))
    ;
  a1[17] = v11;
  if (a1[22])
  {
    v12 = (_QWORD *)a1[21];
    if (v12)
    {
      do
      {
        v15 = (_QWORD *)*v12;
        v16 = (void *)v12[4];
        if (v16)
        {
          v12[5] = v16;
          operator delete(v16);
        }
        operator delete(v12);
        v12 = v15;
      }
      while (v15);
    }
    a1[21] = 0;
    v13 = a1[20];
    if (v13)
    {
      for (m = 0; m != v13; ++m)
        *(_QWORD *)(a1[19] + 8 * m) = 0;
    }
    a1[22] = 0;
  }
}

void sub_223A0AA4C(uint64_t a1, char a2, int *a3, float32x2_t *a4, float32x2_t *a5, int a6, float a7)
{
  float v12;
  char *v13;
  float v14;
  int32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  int v18;
  float32x2_t v19;
  char *v20;
  float v21;
  void *__p[3];
  _BYTE v23[12];
  int v24;
  __int128 v25;
  __int128 v26;

  if ((a2 & 1) != 0)
  {
    if (a7 >= 0.000001)
      v12 = a7;
    else
      v12 = 0.000001;
    v21 = 1.0 / v12;
    if (sub_2239942A0((_QWORD *)a1, a3))
    {
      *(_QWORD *)v23 = a3;
      v13 = sub_2239A5D2C(a1, a3, (uint64_t)&unk_2245BA939, (uint64_t **)v23);
      v14 = *((float *)v13 + 16);
      *(float *)v15.i32 = v21 + v14;
      v16 = (float32x2_t)vdup_lane_s32(v15, 0);
      *(float32x2_t *)(v13 + 44) = vdiv_f32(vadd_f32(vmul_n_f32(*(float32x2_t *)(v13 + 44), v14), vmul_n_f32(*a4, v21)), v16);
      v17 = vdiv_f32(vadd_f32(vmul_n_f32(*(float32x2_t *)(v13 + 52), v14), vmul_n_f32(*a5, v21)), v16);
      *(float32x2_t *)(v13 + 52) = vmul_n_f32(v17, 1.0/ sqrtf(vmla_lane_f32(vmul_f32(v17, v17), (float32x2_t)vdup_lane_s32((int32x2_t)v17, 1), v17, 1).f32[0]));
      *((_DWORD *)v13 + 16) = v15.i32[0];
      v18 = *((_DWORD *)v13 + 18) + a6;
      ++*((_DWORD *)v13 + 17);
      *((_DWORD *)v13 + 18) = v18;
    }
    else
    {
      *(_WORD *)v23 = 257;
      *(_QWORD *)&v23[4] = *(_QWORD *)a3;
      v24 = a3[2];
      v19 = *a5;
      *(float32x2_t *)&v25 = *a4;
      *((float32x2_t *)&v25 + 1) = v19;
      *(float *)&v26 = v12;
      *((float *)&v26 + 1) = 1.0 / v12;
      DWORD2(v26) = 1;
      HIDWORD(v26) = a6;
      __p[0] = &v23[4];
      v20 = sub_2239A5D2C(a1, (int *)&v23[4], (uint64_t)&unk_2245BA939, (uint64_t **)__p);
      *((_WORD *)v20 + 14) = *(_WORD *)v23;
      if (v20 + 28 != v23)
      {
        *((_QWORD *)v20 + 4) = *(_QWORD *)&v23[4];
        *((_DWORD *)v20 + 10) = v24;
      }
      *(_OWORD *)(v20 + 44) = v25;
      *(_OWORD *)(v20 + 60) = v26;
      memset(__p, 0, sizeof(__p));
      sub_223A17780(a1 + 152, (int *)&v23[4], (uint64_t)&v23[4], (uint64_t)__p);
      if (__p[0])
        operator delete(__p[0]);
    }
  }
  else
  {
    *(_QWORD *)v23 = a3;
    *(uint64_t *)((char *)sub_223A17B10((float *)(a1 + 40), a3, (uint64_t)&unk_2245BA939, (uint64_t **)v23) + 28) = (uint64_t)*a4;
  }
}

void sub_223A0AC54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223A0AC6C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  int8x8_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  int8x8_t v22;
  uint8x8_t v23;
  unint64_t v24;
  uint64_t **v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  void *__p[3];
  __int16 v32;
  uint64_t v33;
  int v34;
  __int128 v35;
  __int128 v36;

  v1 = (uint64_t *)a1[7];
  if (v1)
  {
    v3 = (uint64_t)(a1 + 19);
    do
    {
      if (!sub_2239942A0(a1, (int *)v1 + 4))
      {
        v4 = 0;
        v5 = 0;
        v6 = *((int *)v1 + 5);
        v7 = *((_DWORD *)v1 + 6);
        v8 = (int8x8_t)a1[6];
        v9 = (uint8x8_t)vcnt_s8(v8);
        v9.i16[0] = vaddlv_u8(v9);
        v10 = v9.u32[0];
        v11 = *(_QWORD *)&v8 - 1;
        do
        {
          v12 = (int *)((char *)&unk_224657F5C + 8 * v4);
          v13 = v12[1];
          v14 = *v12 + (uint64_t)*((int *)v1 + 4);
          v15 = v13 + v6;
          v16 = (73856093 * v14) ^ (83492791 * v7) ^ (19349669 * (v13 + v6));
          if (v8)
          {
            if (v10 > 1)
            {
              v17 = v16;
              if (v16 >= *(_QWORD *)&v8)
                v17 = v16 % *(_QWORD *)&v8;
            }
            else
            {
              v17 = v16 & v11;
            }
            v18 = *(uint64_t ***)(a1[5] + 8 * v17);
            if (v18)
            {
              v19 = *v18;
              if (v19)
              {
                if (v10 < 2)
                {
                  while (1)
                  {
                    v20 = v19[1];
                    if (v16 == v20)
                    {
                      if (*((_DWORD *)v19 + 4) == (_DWORD)v14
                        && *((_DWORD *)v19 + 5) == v15
                        && *((_DWORD *)v19 + 6) == v7)
                      {
                        goto LABEL_6;
                      }
                    }
                    else if ((v20 & v11) != v17)
                    {
                      goto LABEL_33;
                    }
                    v19 = (uint64_t *)*v19;
                    if (!v19)
                      goto LABEL_33;
                  }
                }
                do
                {
                  v21 = v19[1];
                  if (v16 == v21)
                  {
                    if (*((_DWORD *)v19 + 4) == (_DWORD)v14
                      && *((_DWORD *)v19 + 5) == v15
                      && *((_DWORD *)v19 + 6) == v7)
                    {
LABEL_6:
                      ++v5;
                      goto LABEL_7;
                    }
                  }
                  else
                  {
                    if (v21 >= *(_QWORD *)&v8)
                      v21 %= *(_QWORD *)&v8;
                    if (v21 != v17)
                      break;
                  }
                  v19 = (uint64_t *)*v19;
                }
                while (v19);
              }
            }
          }
LABEL_33:
          v22 = (int8x8_t)a1[1];
          if (v22)
          {
            v23 = (uint8x8_t)vcnt_s8(v22);
            v23.i16[0] = vaddlv_u8(v23);
            if (v23.u32[0] > 1uLL)
            {
              v24 = v16;
              if (v16 >= *(_QWORD *)&v22)
                v24 = v16 % *(_QWORD *)&v22;
            }
            else
            {
              v24 = (*(_QWORD *)&v22 - 1) & v16;
            }
            v25 = *(uint64_t ***)(*a1 + 8 * v24);
            if (v25)
            {
              v26 = *v25;
              if (v26)
              {
                if (v23.u32[0] < 2uLL)
                {
                  v27 = *(_QWORD *)&v22 - 1;
                  while (1)
                  {
                    v29 = v26[1];
                    if (v16 == v29)
                    {
                      if (*((_DWORD *)v26 + 4) == (_DWORD)v14
                        && *((_DWORD *)v26 + 5) == v15
                        && *((_DWORD *)v26 + 6) == v7)
                      {
                        goto LABEL_6;
                      }
                    }
                    else if ((v29 & v27) != v24)
                    {
                      goto LABEL_7;
                    }
                    v26 = (uint64_t *)*v26;
                    if (!v26)
                      goto LABEL_7;
                  }
                }
                do
                {
                  v28 = v26[1];
                  if (v16 == v28)
                  {
                    if (*((_DWORD *)v26 + 4) == (_DWORD)v14
                      && *((_DWORD *)v26 + 5) == v15
                      && *((_DWORD *)v26 + 6) == v7)
                    {
                      goto LABEL_6;
                    }
                  }
                  else
                  {
                    if (v28 >= *(_QWORD *)&v22)
                      v28 %= *(_QWORD *)&v22;
                    if (v28 != v24)
                      break;
                  }
                  v26 = (uint64_t *)*v26;
                }
                while (v26);
              }
            }
          }
LABEL_7:
          ++v4;
        }
        while (v4 != 8);
        if (v5 < 8)
        {
          v32 = 1;
          v33 = v1[2];
          v34 = *((_DWORD *)v1 + 6);
          v35 = *(unint64_t *)((char *)v1 + 28);
          *(_QWORD *)&v36 = 0;
          *((_QWORD *)&v36 + 1) = 1;
          __p[0] = &v33;
          v30 = sub_2239A5D2C((uint64_t)a1, (int *)&v33, (uint64_t)&unk_2245BA939, (uint64_t **)__p);
          *((_WORD *)v30 + 14) = v32;
          if (v30 + 28 != (char *)&v32)
          {
            *((_QWORD *)v30 + 4) = v33;
            *((_DWORD *)v30 + 10) = v34;
          }
          *(_OWORD *)(v30 + 44) = v35;
          *(_OWORD *)(v30 + 60) = v36;
          memset(__p, 0, sizeof(__p));
          sub_223A17780(v3, (int *)&v33, (uint64_t)&v33, (uint64_t)__p);
          if (__p[0])
            operator delete(__p[0]);
        }
      }
      v1 = (uint64_t *)*v1;
    }
    while (v1);
  }
}

void sub_223A0B01C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223A0B034(_QWORD *a1)
{
  float32x2_t v2;
  uint64_t *v3;
  uint64_t v4;
  float32x2_t *v5;
  uint64_t v6;
  int8x8_t v7;
  unsigned int v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t v14;
  uint64_t **v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t **v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint8x8_t v25;
  uint64_t v26;
  uint64_t **v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  float32x2_t *v32;
  float v33;
  float v34;
  float32x2_t *v35;
  float32x2_t v36;
  float32x2_t v37;
  float32x2_t v38;
  BOOL v39;
  char v40;
  unsigned int v41;
  float v42;
  unsigned int v43;
  float v44;
  float32x2_t v45;
  float32x2_t v46;
  float v47;
  float v48;
  float32x2_t v49;
  char *v50;
  _BYTE *v51;
  unint64_t v52;
  float32x2_t v53;
  float32x2_t v54;
  float32x2_t v55;
  float v56;
  float v57;
  float v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  __int128 v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  int v71;
  __int16 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  _BYTE *v86;
  _DWORD *v87;
  int64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _OWORD *v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  int v97;
  _QWORD *v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _BYTE *v107;
  _DWORD *v108;
  int64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  _OWORD *v114;
  char *v115;
  uint64_t v116;
  __int128 v117;
  int v118;
  _QWORD *v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  _BYTE *v127;
  _DWORD *v128;
  int64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _OWORD *v134;
  char *v135;
  uint64_t v136;
  __int128 v137;
  int v138;
  uint64_t *i;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v143;
  _QWORD *v144;
  void **v146;
  float32x2_t *v147;
  uint64_t v148;
  int v149;
  __int16 v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  int v154;
  unint64_t v155;
  float v156;
  float32x2_t v157;
  float32x2_t v158;
  float32x2_t v159;
  _BYTE v160[27];
  uint64_t *v161[2];

  kdebug_trace();
  v3 = (uint64_t *)a1[2];
  if (!v3)
    goto LABEL_198;
  if (!a1[1])
  {
    do
      v3 = (uint64_t *)*v3;
    while (v3);
    goto LABEL_198;
  }
  v146 = (void **)(a1 + 13);
  v148 = (uint64_t)(a1 + 19);
  while (2)
  {
    if (!a1[1])
      goto LABEL_4;
    v4 = 0;
    v5 = (float32x2_t *)((char *)v3 + 28);
    while (2)
    {
      v7 = (int8x8_t)a1[1];
      if (!*(_QWORD *)&v7)
        goto LABEL_9;
      v8 = *((_DWORD *)v3 + 6);
      v9 = (int *)((char *)&unk_224657F5C + 8 * v4);
      v10 = *v9 + (uint64_t)*((int *)v3 + 4);
      v11 = v9[1] + (uint64_t)*((int *)v3 + 5);
      v12 = (73856093 * v10) ^ (83492791 * (int)v8) ^ (19349669 * v11);
      v13 = (uint8x8_t)vcnt_s8(v7);
      v13.i16[0] = vaddlv_u8(v13);
      if (v13.u32[0] > 1uLL)
      {
        v14 = (73856093 * v10) ^ (83492791 * (int)v8) ^ (19349669 * v11);
        if (v12 >= *(_QWORD *)&v7)
          v14 = v12 % *(_QWORD *)&v7;
      }
      else
      {
        v14 = v12 & (*(_QWORD *)&v7 - 1);
      }
      v15 = *(uint64_t ***)(*a1 + 8 * v14);
      if (!v15)
        goto LABEL_9;
      v16 = *v15;
      if (!*v15)
        goto LABEL_9;
      v17 = *(_QWORD *)&v7 - 1;
      if (v13.u32[0] < 2uLL)
      {
        while (1)
        {
          v18 = v16[1];
          if (v12 == v18)
          {
            if (*((_DWORD *)v16 + 4) == (_DWORD)v10 && *(uint64_t *)((char *)v16 + 20) == __PAIR64__(v8, v11))
              goto LABEL_24;
          }
          else if ((v18 & v17) != v14)
          {
            goto LABEL_9;
          }
          v16 = (uint64_t *)*v16;
          if (!v16)
            goto LABEL_9;
        }
      }
      while (1)
      {
        v20 = v16[1];
        if (v12 == v20)
          break;
        if (v20 >= *(_QWORD *)&v7)
          v20 %= *(_QWORD *)&v7;
        if (v20 != v14)
          goto LABEL_9;
LABEL_27:
        v16 = (uint64_t *)*v16;
        if (!v16)
          goto LABEL_9;
      }
      if (*((_DWORD *)v16 + 4) != (_DWORD)v10 || *(uint64_t *)((char *)v16 + 20) != __PAIR64__(v8, v11))
        goto LABEL_27;
LABEL_24:
      if (v13.u32[0] > 1uLL)
      {
        v19 = (73856093 * v10) ^ (83492791 * (int)v8) ^ (19349669 * v11);
        if (v12 >= *(_QWORD *)&v7)
          v19 = v12 % *(_QWORD *)&v7;
      }
      else
      {
        v19 = v12 & v17;
      }
      v21 = *(uint64_t ***)(*a1 + 8 * v19);
      if (v21)
      {
        v22 = *v21;
        if (v22)
        {
          if (v13.u32[0] < 2uLL)
          {
            while (1)
            {
              v23 = v22[1];
              if (v12 == v23)
              {
                if (*((_DWORD *)v22 + 4) == (_DWORD)v10
                  && *((_DWORD *)v22 + 5) == (_DWORD)v11
                  && *((_DWORD *)v22 + 6) == v8)
                {
                  goto LABEL_58;
                }
              }
              else if ((v23 & v17) != v19)
              {
                goto LABEL_56;
              }
              v22 = (uint64_t *)*v22;
              if (!v22)
                goto LABEL_56;
            }
          }
          do
          {
            v24 = v22[1];
            if (v12 == v24)
            {
              if (*((_DWORD *)v22 + 4) == (_DWORD)v10
                && *((_DWORD *)v22 + 5) == (_DWORD)v11
                && *((_DWORD *)v22 + 6) == v8)
              {
                goto LABEL_58;
              }
            }
            else
            {
              if (v24 >= *(_QWORD *)&v7)
                v24 %= *(_QWORD *)&v7;
              if (v24 != v19)
                break;
            }
            v22 = (uint64_t *)*v22;
          }
          while (v22);
        }
      }
LABEL_56:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 200, (uint64_t)"nodes_.count(neighbor_position) == 1", 36, (uint64_t)"Neighbor node not found", 23, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (int8x8_t)a1[1];
LABEL_58:
      if (!*(_QWORD *)&v7)
        goto LABEL_210;
      v25 = (uint8x8_t)vcnt_s8(v7);
      v25.i16[0] = vaddlv_u8(v25);
      if (v25.u32[0] > 1uLL)
      {
        v26 = (73856093 * v10) ^ (83492791 * (int)v8) ^ (19349669 * v11);
        if (v12 >= *(_QWORD *)&v7)
          v26 = v12 % *(_QWORD *)&v7;
      }
      else
      {
        v26 = (*(_QWORD *)&v7 - 1) & v12;
      }
      v27 = *(uint64_t ***)(*a1 + 8 * v26);
      if (!v27 || (v28 = *v27) == 0)
LABEL_210:
        sub_223198218("unordered_map::at: key not found");
      if (v25.u32[0] < 2uLL)
      {
        v29 = *(_QWORD *)&v7 - 1;
        while (1)
        {
          v31 = v28[1];
          if (v31 == v12)
          {
            if (*((_DWORD *)v28 + 4) == (_DWORD)v10
              && *((_DWORD *)v28 + 5) == (_DWORD)v11
              && *((_DWORD *)v28 + 6) == v8)
            {
              goto LABEL_82;
            }
          }
          else if ((v31 & v29) != v26)
          {
            goto LABEL_210;
          }
          v28 = (uint64_t *)*v28;
          if (!v28)
            goto LABEL_210;
        }
      }
      while (2)
      {
        v30 = v28[1];
        if (v30 != v12)
        {
          if (v30 >= *(_QWORD *)&v7)
            v30 %= *(_QWORD *)&v7;
          if (v30 != v26)
            goto LABEL_210;
          goto LABEL_68;
        }
        if (*((_DWORD *)v28 + 4) != (_DWORD)v10 || *((_DWORD *)v28 + 5) != (_DWORD)v11 || *((_DWORD *)v28 + 6) != v8)
        {
LABEL_68:
          v28 = (uint64_t *)*v28;
          if (!v28)
            goto LABEL_210;
          continue;
        }
        break;
      }
LABEL_82:
      v32 = (float32x2_t *)((char *)v28 + 28);
      v33 = *((float *)v28 + 16);
      v34 = *((float *)v3 + 16);
      if (v33 >= v34)
        v35 = (float32x2_t *)((char *)v28 + 28);
      else
        v35 = v5;
      if (v33 >= v34)
        v32 = v5;
      v36 = v32[2];
      v37 = vsub_f32(v36, v35[2]);
      if ((float)(vmuls_lane_f32(v35[3].f32[0], v37, 1) - (float)(v35[3].f32[1] * v37.f32[0])) >= 0.0)
        v2.f32[0] = 1.0;
      else
        v2.f32[0] = -1.0;
      v36.f32[0] = vmuls_lane_f32(v2.f32[0], v37, 1);
      v37.f32[0] = 0.0 - (float)(v2.f32[0] * v37.f32[0]);
      v2.f32[0] = v36.f32[0] * v36.f32[0];
      v38 = vmla_f32(v2, v37, v37);
      v38.f32[0] = 1.0 / sqrtf(v38.f32[0]);
      if (*((_BYTE *)v3 + 29))
        v39 = *((_BYTE *)v28 + 29) == 0;
      else
        v39 = 1;
      v40 = !v39;
      v147 = v5;
      if (v39)
      {
        v48 = 0.01;
      }
      else
      {
        v41 = *((_DWORD *)v28 + 17);
        if (v41 >= *((_DWORD *)v3 + 17))
          v41 = *((_DWORD *)v3 + 17);
        v42 = 1.0;
        if (v41 <= 5)
          v42 = flt_224657EE8[v41];
        v43 = *((_DWORD *)v28 + 18);
        if (v43 >= *((_DWORD *)v3 + 18))
          v43 = *((_DWORD *)v3 + 18);
        v44 = 1.0;
        if (v43 <= 0x13)
          v44 = flt_224657F00[v43];
        v45 = vmul_f32(v36, v38);
        v46 = vmul_f32(v37, v38);
        v47 = vmla_lane_f32(vmul_f32(v45, *(float32x2_t *)((char *)v3 + 52)), v46, *(float32x2_t *)((char *)v3 + 52), 1).f32[0];
        v45.f32[0] = vmla_lane_f32(vmul_f32(v45, *(float32x2_t *)((char *)v28 + 52)), v46, *(float32x2_t *)((char *)v28 + 52), 1).f32[0];
        v48 = (float)((float)((float)((float)((float)(v47 + 1.0) * 0.5) * (float)((float)(v45.f32[0] + 1.0) * 0.5))
                            * (float)((float)((float)(v47 + 1.0) * 0.5) * (float)((float)(v45.f32[0] + 1.0) * 0.5)))
                    * v42)
            * v44;
        if (v48 < 0.01)
          v48 = 0.01;
      }
      v36.i32[1] = v37.i32[0];
      v49 = vmul_n_f32(v36, v38.f32[0]);
      v51 = (_BYTE *)a1[10];
      v50 = (char *)a1[11];
      v52 = 0xAAAAAAAAAAAAAAABLL * ((v50 - v51) >> 5);
      v149 = -1431655765 * ((v50 - v51) >> 5);
      LOBYTE(v150) = 1;
      HIBYTE(v150) = v40;
      v151 = v3[4];
      v152 = *((_DWORD *)v3 + 10);
      v153 = v28[4];
      v154 = *((_DWORD *)v28 + 10);
      v157 = v49;
      v53 = *(float32x2_t *)((char *)v3 + 44);
      v158 = v53;
      v54 = *(float32x2_t *)((char *)v28 + 44);
      v159 = v54;
      *(_WORD *)&v160[12] = 0;
      *(_QWORD *)&v160[16] = -1;
      *(_WORD *)&v160[24] = 0;
      v160[26] = 0;
      v55 = vsub_f32(v54, v53);
      v155 = __PAIR64__(LODWORD(v48), COERCE_UNSIGNED_INT(sqrtf(vmla_lane_f32(vmul_f32(v55, v55), (float32x2_t)vdup_lane_s32((int32x2_t)v55, 1), v55, 1).f32[0])));
      v156 = *(float *)&v155 / v48;
      v56 = v54.f32[0];
      if (v54.f32[0] >= v53.f32[0])
        v57 = v53.f32[0];
      else
        v57 = v54.f32[0];
      if (v53.f32[0] >= v54.f32[0])
        v56 = v53.f32[0];
      *(float *)v160 = v57;
      *(float *)&v160[4] = v56;
      v58 = (float)(atan2f(v55.f32[1], v55.f32[0]) * -57.296) + 90.0;
      if (v58 < 0.0)
        v58 = v58 + 360.0;
      *(float *)&v160[8] = v58;
      v59 = a1[12];
      if ((unint64_t)v50 < v59)
      {
        *((_WORD *)v50 + 2) = v150;
        *(_DWORD *)v50 = v149;
        v60 = v151;
        *((_DWORD *)v50 + 4) = v152;
        *((_QWORD *)v50 + 1) = v60;
        v61 = v153;
        *((_DWORD *)v50 + 7) = v154;
        *(_QWORD *)(v50 + 20) = v61;
        v62 = v155;
        *((float *)v50 + 10) = v156;
        *((_QWORD *)v50 + 4) = v62;
        *(float32x2_t *)(v50 + 44) = v157;
        *(float32x2_t *)(v50 + 52) = v158;
        *(float32x2_t *)(v50 + 60) = v159;
        v63 = *(_OWORD *)v160;
        *(_OWORD *)(v50 + 79) = *(_OWORD *)&v160[11];
        *(_OWORD *)(v50 + 68) = v63;
        v64 = v50 + 96;
        goto LABEL_133;
      }
      v65 = v52 + 1;
      if (v52 + 1 > 0x2AAAAAAAAAAAAAALL)
        sub_22316E078();
      v66 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v59 - (_QWORD)v51) >> 5);
      if (2 * v66 > v65)
        v65 = 2 * v66;
      if (v66 >= 0x155555555555555)
        v67 = 0x2AAAAAAAAAAAAAALL;
      else
        v67 = v65;
      if (!v67)
      {
        v68 = 0;
        goto LABEL_128;
      }
      if (v67 > 0x2AAAAAAAAAAAAAALL)
        goto LABEL_211;
      v68 = (char *)operator new(96 * v67);
LABEL_128:
      v69 = &v68[32 * ((v50 - v51) >> 5)];
      *(_DWORD *)v69 = v149;
      *((_WORD *)v69 + 2) = v150;
      *((_QWORD *)v69 + 1) = v151;
      *((_DWORD *)v69 + 4) = v152;
      *(_QWORD *)(v69 + 20) = v153;
      *((_DWORD *)v69 + 7) = v154;
      *((float *)v69 + 10) = v156;
      *((_QWORD *)v69 + 4) = v155;
      *(float32x2_t *)(v69 + 44) = v49;
      *(float32x2_t *)(v69 + 52) = v53;
      *(float32x2_t *)(v69 + 60) = v54;
      *(_OWORD *)(v69 + 79) = *(_OWORD *)&v160[11];
      *(_OWORD *)(v69 + 68) = *(_OWORD *)v160;
      v70 = v69;
      if (v50 != v51)
      {
        do
        {
          v71 = *((_DWORD *)v50 - 24);
          v50 -= 96;
          v72 = *((_WORD *)v50 + 2);
          *((_DWORD *)v70 - 24) = v71;
          v70 -= 96;
          *((_WORD *)v70 + 2) = v72;
          v73 = *((_QWORD *)v50 + 1);
          *((_DWORD *)v70 + 4) = *((_DWORD *)v50 + 4);
          *((_QWORD *)v70 + 1) = v73;
          v74 = *(_QWORD *)(v50 + 20);
          *((_DWORD *)v70 + 7) = *((_DWORD *)v50 + 7);
          *(_QWORD *)(v70 + 20) = v74;
          v75 = *((_QWORD *)v50 + 4);
          *((_DWORD *)v70 + 10) = *((_DWORD *)v50 + 10);
          *((_QWORD *)v70 + 4) = v75;
          *(_QWORD *)(v70 + 44) = *(_QWORD *)(v50 + 44);
          *(_QWORD *)(v70 + 52) = *(_QWORD *)(v50 + 52);
          *(_QWORD *)(v70 + 60) = *(_QWORD *)(v50 + 60);
          v76 = *(_OWORD *)(v50 + 68);
          *(_OWORD *)(v70 + 79) = *(_OWORD *)(v50 + 79);
          *(_OWORD *)(v70 + 68) = v76;
        }
        while (v50 != v51);
        v50 = (char *)a1[10];
      }
      v64 = v69 + 96;
      a1[10] = v70;
      a1[11] = v69 + 96;
      a1[12] = &v68[96 * v67];
      if (v50)
        operator delete(v50);
LABEL_133:
      a1[11] = v64;
      v78 = (char *)a1[14];
      v77 = a1[15];
      if ((unint64_t)v78 < v77)
      {
        *(_DWORD *)v78 = v149;
        v79 = (uint64_t)(v78 + 4);
        goto LABEL_155;
      }
      v80 = (char *)*v146;
      v81 = v78 - (_BYTE *)*v146;
      v82 = v81 >> 2;
      v83 = (v81 >> 2) + 1;
      if (v83 >> 62)
        goto LABEL_214;
      v84 = v77 - (_QWORD)v80;
      if (v84 >> 1 > v83)
        v83 = v84 >> 1;
      if ((unint64_t)v84 >= 0x7FFFFFFFFFFFFFFCLL)
        v85 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v85 = v83;
      if (v85)
      {
        if (!(v85 >> 62))
        {
          v86 = operator new(4 * v85);
          v87 = &v86[4 * v82];
          *v87 = v149;
          v79 = (uint64_t)(v87 + 1);
          v88 = v78 - v80;
          if (v78 != v80)
            goto LABEL_144;
          goto LABEL_153;
        }
LABEL_211:
        sub_223174E94();
      }
      v86 = 0;
      v87 = (_DWORD *)(4 * v82);
      *(_DWORD *)(4 * v82) = v149;
      v79 = 4 * v82 + 4;
      v88 = v78 - v80;
      if (v78 != v80)
      {
LABEL_144:
        v89 = v88 - 4;
        if (v89 < 0x2C)
          goto LABEL_217;
        if ((unint64_t)(v78 - v86 - v81) < 0x20)
          goto LABEL_217;
        v90 = (v89 >> 2) + 1;
        v91 = 4 * (v90 & 0x7FFFFFFFFFFFFFF8);
        v92 = &v78[-v91];
        v87 = (_DWORD *)((char *)v87 - v91);
        v93 = &v86[4 * v82 - 16];
        v94 = v78 - 16;
        v95 = v90 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v96 = *(_OWORD *)v94;
          *(v93 - 1) = *((_OWORD *)v94 - 1);
          *v93 = v96;
          v93 -= 2;
          v94 -= 32;
          v95 -= 8;
        }
        while (v95);
        v78 = v92;
        if (v90 != (v90 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_217:
          do
          {
            v97 = *((_DWORD *)v78 - 1);
            v78 -= 4;
            *--v87 = v97;
          }
          while (v78 != v80);
        }
      }
LABEL_153:
      a1[13] = v87;
      a1[14] = v79;
      a1[15] = &v86[4 * v85];
      if (v80)
        operator delete(v80);
LABEL_155:
      a1[14] = v79;
      v161[0] = &v151;
      v98 = sub_223A18580(v148, (int *)&v151, (uint64_t)&unk_2245BA939, v161);
      v100 = (char *)v98[5];
      v99 = v98[6];
      if ((unint64_t)v100 < v99)
      {
        *(_DWORD *)v100 = v149;
        v101 = (uint64_t)(v100 + 4);
        goto LABEL_176;
      }
      v102 = (char *)v98[4];
      v103 = (v100 - v102) >> 2;
      v104 = v103 + 1;
      if ((unint64_t)(v103 + 1) >> 62)
        goto LABEL_214;
      v105 = v99 - (_QWORD)v102;
      if (v105 >> 1 > v104)
        v104 = v105 >> 1;
      if ((unint64_t)v105 >= 0x7FFFFFFFFFFFFFFCLL)
        v106 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v106 = v104;
      if (v106)
      {
        if (v106 >> 62)
          goto LABEL_211;
        v107 = operator new(4 * v106);
        v108 = &v107[4 * v103];
        *v108 = v149;
        v101 = (uint64_t)(v108 + 1);
        v109 = v100 - v102;
        if (v100 == v102)
          goto LABEL_174;
LABEL_168:
        v110 = v109 - 4;
        if (v110 < 0x2C)
          goto LABEL_218;
        if ((unint64_t)(v102 - v107) < 0x20)
          goto LABEL_218;
        v111 = (v110 >> 2) + 1;
        v112 = 4 * (v111 & 0x7FFFFFFFFFFFFFF8);
        v113 = &v100[-v112];
        v108 = (_DWORD *)((char *)v108 - v112);
        v114 = &v107[4 * v103 - 16];
        v115 = v100 - 16;
        v116 = v111 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v117 = *(_OWORD *)v115;
          *(v114 - 1) = *((_OWORD *)v115 - 1);
          *v114 = v117;
          v114 -= 2;
          v115 -= 32;
          v116 -= 8;
        }
        while (v116);
        v100 = v113;
        if (v111 != (v111 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_218:
          do
          {
            v118 = *((_DWORD *)v100 - 1);
            v100 -= 4;
            *--v108 = v118;
          }
          while (v100 != v102);
        }
      }
      else
      {
        v107 = 0;
        v108 = (_DWORD *)(4 * v103);
        *(_DWORD *)(4 * v103) = v149;
        v101 = 4 * v103 + 4;
        v109 = v100 - v102;
        if (v100 != v102)
          goto LABEL_168;
      }
LABEL_174:
      v98[4] = v108;
      v98[5] = v101;
      v98[6] = &v107[4 * v106];
      if (v102)
        operator delete(v102);
LABEL_176:
      v98[5] = v101;
      v161[0] = &v153;
      v119 = sub_223A18580(v148, (int *)&v153, (uint64_t)&unk_2245BA939, v161);
      v121 = (char *)v119[5];
      v120 = v119[6];
      if ((unint64_t)v121 < v120)
      {
        *(_DWORD *)v121 = v149;
        v6 = (uint64_t)(v121 + 4);
        goto LABEL_8;
      }
      v122 = (char *)v119[4];
      v123 = (v121 - v122) >> 2;
      v124 = v123 + 1;
      if ((unint64_t)(v123 + 1) >> 62)
LABEL_214:
        sub_22316E078();
      v125 = v120 - (_QWORD)v122;
      if (v125 >> 1 > v124)
        v124 = v125 >> 1;
      if ((unint64_t)v125 >= 0x7FFFFFFFFFFFFFFCLL)
        v126 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v126 = v124;
      if (v126)
      {
        if (v126 >> 62)
          goto LABEL_211;
        v127 = operator new(4 * v126);
        v128 = &v127[4 * v123];
        *v128 = v149;
        v6 = (uint64_t)(v128 + 1);
        v129 = v121 - v122;
        if (v121 != v122)
        {
LABEL_186:
          v130 = v129 - 4;
          if (v130 < 0x2C)
            goto LABEL_219;
          if ((unint64_t)(v122 - v127) < 0x20)
            goto LABEL_219;
          v131 = (v130 >> 2) + 1;
          v132 = 4 * (v131 & 0x7FFFFFFFFFFFFFF8);
          v133 = &v121[-v132];
          v128 = (_DWORD *)((char *)v128 - v132);
          v134 = &v127[4 * v123 - 16];
          v135 = v121 - 16;
          v136 = v131 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v137 = *(_OWORD *)v135;
            *(v134 - 1) = *((_OWORD *)v135 - 1);
            *v134 = v137;
            v134 -= 2;
            v135 -= 32;
            v136 -= 8;
          }
          while (v136);
          v121 = v133;
          if (v131 != (v131 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_219:
            do
            {
              v138 = *((_DWORD *)v121 - 1);
              v121 -= 4;
              *--v128 = v138;
            }
            while (v121 != v122);
          }
        }
      }
      else
      {
        v127 = 0;
        v128 = (_DWORD *)(4 * v123);
        *(_DWORD *)(4 * v123) = v149;
        v6 = 4 * v123 + 4;
        v129 = v121 - v122;
        if (v121 != v122)
          goto LABEL_186;
      }
      v119[4] = v128;
      v119[5] = v6;
      v119[6] = &v127[4 * v126];
      if (v122)
        operator delete(v122);
LABEL_8:
      v119[5] = v6;
      v5 = v147;
LABEL_9:
      if (++v4 != 4)
        continue;
      break;
    }
LABEL_4:
    v3 = (uint64_t *)*v3;
    if (v3)
      continue;
    break;
  }
LABEL_198:
  v140 = a1[10];
  v141 = a1[11];
  for (i = a1 + 10; v140 != v141; v140 += 96)
  {
    if (*(float *)(v140 + 32) < 0.01 && *(_BYTE *)(v140 + 4) != 0)
      sub_223A1D320(v140, a1, a1 + 10, a1 + 19);
  }
  v143 = (uint64_t *)a1[2];
  if (v143)
  {
    v144 = a1 + 19;
    do
    {
      sub_223A1DC20((float32x2_t *)((char *)v143 + 28), v144, i, 0.0001);
      v143 = (uint64_t *)*v143;
    }
    while (v143);
  }
  return kdebug_trace();
}

void sub_223A0BDE4(_Unwind_Exception *a1)
{
  kdebug_trace();
  _Unwind_Resume(a1);
}

uint64_t sub_223A0BE28(_QWORD *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int i;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _BYTE *v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  _BYTE *v30;
  int v31;
  _DWORD *v32;
  int v33;
  int v34;
  float *v36;
  _BYTE *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE *v41;
  _DWORD *v42;
  _DWORD *v43;
  float32x2_t *v44;
  uint64_t v45;
  _DWORD *v46;
  _BYTE *v47;
  _QWORD *v48;

  kdebug_trace();
  v2 = a1[13];
  v3 = (unsigned int *)a1[14];
  v4 = 126 - 2 * __clz(((uint64_t)v3 - v2) >> 2);
  v48 = a1;
  if (v3 == (unsigned int *)v2)
    v5 = 0;
  else
    v5 = v4;
  sub_223A14654(v2, v3, (uint64_t *)&v48, v5, 1);
  v6 = a1[14] - a1[13];
  if (v6)
  {
    v7 = 0;
    v38 = v6 >> 2;
    v39 = a1;
    for (i = 1; ; ++i)
    {
      v45 = v7;
      v9 = *(_DWORD *)(a1[13] + 4 * v7);
      v10 = a1[10];
      v40 = v10 + 96 * v9;
      v47 = (_BYTE *)(v40 + 4);
      if (*(_BYTE *)(v40 + 4))
        break;
LABEL_6:
      v7 = v45 + 1;
      if (v45 + 1 == v38)
        return kdebug_trace();
    }
    v11 = v10 + 96 * v9;
    v12 = (float *)(v11 + 72);
    v13 = (_DWORD *)(v11 + 8);
    v14 = (_DWORD *)(v11 + 12);
    v15 = (_DWORD *)(v11 + 16);
    v16 = (_DWORD *)(v11 + 20);
    v17 = (_DWORD *)(v11 + 24);
    v46 = (_DWORD *)(v11 + 28);
    v18 = (_BYTE *)(v11 + 94);
    v43 = (_DWORD *)(v11 + 16);
    v44 = (float32x2_t *)(v11 + 52);
    v36 = (float *)(v11 + 36);
    v37 = (_BYTE *)(v11 + 5);
    v19 = 1;
    v20 = i;
    v41 = v18;
    v42 = v17;
    while (1)
    {
      v22 = v20;
      v23 = a1[13];
      if (v22 >= (a1[14] - v23) >> 2)
        goto LABEL_6;
      v24 = *(_DWORD *)(v23 + 4 * v22);
      v25 = a1[10];
      if (*(float *)(v25 + 96 * v24 + 68) > *v12)
        goto LABEL_6;
      if (*(_BYTE *)(v25 + 96 * v24 + 4))
      {
        v26 = *(_DWORD *)(v25 + 96 * v24 + 8);
        if (*v13 != v26 || *v14 != *(_DWORD *)(v25 + 96 * v24 + 12) || *v15 != *(_DWORD *)(v25 + 96 * v24 + 16))
        {
          v27 = *(_DWORD *)(v25 + 96 * v24 + 20);
          if ((*v13 != v27 || *v14 != *(_DWORD *)(v25 + 96 * v24 + 24) || *v15 != *(_DWORD *)(v25 + 96 * v24 + 28))
            && (*v16 != v26 || *v17 != *(_DWORD *)(v25 + 96 * v24 + 12) || *v46 != *(_DWORD *)(v25 + 96 * v24 + 16))
            && (*v16 != v27 || *v17 != *(_DWORD *)(v25 + 96 * v24 + 24) || *v46 != *(_DWORD *)(v25 + 96 * v24 + 28)))
          {
            v28 = v25 + 96 * v24;
            v31 = *(unsigned __int8 *)(v28 + 94);
            v30 = (_BYTE *)(v28 + 94);
            v29 = v31;
            if (!*v18 || !v29)
              break;
          }
        }
      }
LABEL_13:
      v20 = v22 + 1;
      if (!v19)
        goto LABEL_6;
    }
    v32 = v16;
    v33 = sub_22369F3FC(v44, (float32x2_t *)(v25 + 96 * v24 + 52), (float32x2_t *)&v48, 0);
    v16 = v32;
    a1 = v39;
    v18 = v41;
    v17 = v42;
    if (!v33)
    {
LABEL_12:
      v19 = *v47;
      v15 = v43;
      goto LABEL_13;
    }
    if (!*v41)
    {
      v21 = v40;
      if (*v30)
        goto LABEL_11;
      v34 = *(unsigned __int8 *)(v25 + 96 * v24 + 5);
      if (*v37 && *(_BYTE *)(v25 + 96 * v24 + 5))
      {
        v21 = v40;
        if (*v36 > *(float *)(v25 + 96 * v24 + 36))
          v21 = v25 + 96 * v24;
        goto LABEL_11;
      }
      if (!*v37)
      {
        *v47 = 0;
        v21 = v25 + 96 * v24;
        if (v34)
          goto LABEL_12;
        goto LABEL_11;
      }
    }
    v21 = v25 + 96 * v24;
LABEL_11:
    *(_BYTE *)(v21 + 4) = 0;
    goto LABEL_12;
  }
  return kdebug_trace();
}

void sub_223A0C17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223A0C194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_2231874DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223A0C1A8(_QWORD *a1)
{
  int *v2;
  _QWORD *v3;
  uint64_t *v4;
  unsigned int *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v10[3];
  char v11;

  kdebug_trace();
  v2 = (int *)a1[2];
  if (v2)
  {
    v3 = a1 + 19;
    do
    {
      if (!sub_2239942A0(v3, v2 + 4)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 424, (uint64_t)"edges_from_node_.count(node_position) == 1", 42, (uint64_t)"edges from node not found", 25, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = sub_22393835C(v3, v2 + 4);
      if (!v4)
        sub_223198218("unordered_map::at: key not found");
      v6 = v4[4];
      v5 = (unsigned int *)v4[5];
      v7 = 126 - 2 * __clz((uint64_t)((uint64_t)v5 - v6) >> 2);
      v10[0] = a1 + 10;
      v10[1] = (uint64_t *)(v2 + 4);
      v10[2] = (uint64_t *)&v11;
      if (v5 == (unsigned int *)v6)
        v8 = 0;
      else
        v8 = v7;
      sub_223A1DF24(v6, v5, v10, v8, 1);
      v2 = *(int **)v2;
    }
    while (v2);
  }
  return kdebug_trace();
}

void sub_223A0C314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_223A0C328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223A0C33C(int8x8_t *a1)
{
  _QWORD *v2;
  _QWORD *i;
  int8x8_t v4;
  int8x8_t v5;
  unint64_t v6;
  int8x8_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  int8x8_t v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  int8x8_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int32 v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  _DWORD *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  int8x8_t v40;
  uint8x8_t v41;
  uint64_t v42;
  uint64_t **v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  int8x8_t *v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  uint8x8_t v50;
  unint64_t v51;
  uint64_t **v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t j;
  uint64_t v64;
  unsigned int v65;
  unint64_t v67;
  uint64_t v68;
  unsigned int *v69;
  unsigned int *v70;
  int8x8_t v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  _DWORD *v75;
  int v76;
  uint64_t v77;
  _DWORD *v78;
  int v79;
  uint64_t v80;
  int v81;
  int8x8_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  uint64_t *v88;
  int8x8_t *v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int *v92;
  int v93;
  unsigned int *v94;
  int8x8_t *v95;
  int8x8_t *v96;
  _DWORD *v97;
  _BYTE v98[40];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  float v102[8];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106[3];
  unint64_t v107;
  int v108;
  int v109[4];

  kdebug_trace();
  v2 = (_QWORD *)a1[16];
  a1[29].i32[0] = 0;
  v88 = (uint64_t *)&a1[16];
  for (i = (_QWORD *)a1[17]; i != v2; i = sub_22391679C(i - 18))
    ;
  a1[17] = (int8x8_t)v2;
  kdebug_trace();
  v5 = a1[10];
  v4 = a1[11];
  if (*(_QWORD *)&v5 != *(_QWORD *)&v4)
  {
    v6 = *(_QWORD *)&v4 - *(_QWORD *)&v5 - 96;
    v7 = a1[10];
    if (v6 < 0x60)
      goto LABEL_132;
    v8 = v6 / 0x60 + 1;
    v7 = (int8x8_t)(*(_QWORD *)&v5 + 96 * (v8 & 0x7FFFFFFFFFFFFFELL));
    v9 = (char *)(*(_QWORD *)&v5 + 100);
    v10 = v8 & 0x7FFFFFFFFFFFFFELL;
    do
    {
      v11 = *v9;
      *(v9 - 8) = *(v9 - 96);
      v9[88] = v11;
      *((_WORD *)v9 - 10) = 0;
      *((_WORD *)v9 + 38) = 0;
      *((_QWORD *)v9 - 2) = -1;
      *((_QWORD *)v9 + 10) = -1;
      v9 += 192;
      v10 -= 2;
    }
    while (v10);
    if (v8 != (v8 & 0x7FFFFFFFFFFFFFELL))
    {
LABEL_132:
      do
      {
        *(_BYTE *)(*(_QWORD *)&v7 + 92) = *(_BYTE *)(*(_QWORD *)&v7 + 4);
        *(_WORD *)(*(_QWORD *)&v7 + 80) = 0;
        *(_QWORD *)(*(_QWORD *)&v7 + 84) = -1;
        *(_QWORD *)&v7 += 96;
      }
      while (*(_QWORD *)&v7 != *(_QWORD *)&v4);
    }
  }
  v95 = a1 + 10;
  v96 = a1 + 19;
  v12 = a1[21];
  if (v12)
  {
    while (1)
    {
      v14 = *(unsigned int **)(*(_QWORD *)&v12 + 32);
      v13 = *(unsigned int **)(*(_QWORD *)&v12 + 40);
      v89 = (int8x8_t *)v12;
      if (v14 != v13)
        break;
LABEL_11:
      v12 = *v89;
      if (!*(_QWORD *)v89)
        goto LABEL_120;
    }
    v15 = *(_DWORD *)(*(_QWORD *)&v12 + 16);
    v16 = *(unsigned int *)(*(_QWORD *)&v12 + 20);
    v93 = *(_DWORD *)(*(_QWORD *)&v12 + 24);
    v92 = *(unsigned int **)(*(_QWORD *)&v12 + 40);
    v90 = *(_DWORD *)(*(_QWORD *)&v12 + 20);
    v91 = v15;
    while (1)
    {
      v17 = *v14;
      v18 = *v95;
      if (*(_BYTE *)(*(_QWORD *)v95 + 96 * *v14 + 92))
      {
        v19 = *(_QWORD *)&v18 + 96 * v17;
        v21 = *(_DWORD *)(v19 + 8);
        v20 = v19 + 8;
        if (v21 == v15 && *(_DWORD *)(v20 + 4) == (_DWORD)v16 && *(_DWORD *)(v20 + 8) == v93)
        {
          if (!*(_BYTE *)(*(_QWORD *)&v18 + 96 * v17 + 80))
          {
LABEL_21:
            v94 = v14;
            v22 = a1[29].i32[0];
            a1[29].i32[0] = v22 + 1;
            *(_DWORD *)v98 = v22;
            v102[6] = 0.0;
            v104 = 0;
            v105 = 0;
            v103 = 0;
            memset(&v98[8], 0, 32);
            v99 = 0u;
            v100 = 0u;
            v101 = 0u;
            memset(v102, 0, 21);
            v23 = v93;
LABEL_23:
            v24 = v15;
            v25 = v16;
            v26 = v23;
            v27 = v17;
LABEL_24:
            v28 = *(_QWORD *)&v18 + 96 * v27;
            v30 = *(_DWORD *)(v28 + 8);
            v29 = v28 + 8;
            v15 = v30;
            v97 = (_DWORD *)(*(_QWORD *)&v18 + 96 * v27);
            if (v30 == v24)
            {
              v16 = *(unsigned int *)(v29 + 4);
              if ((_DWORD)v16 == (_DWORD)v25)
              {
                v16 = v25;
                if (*(_DWORD *)(v29 + 8) == v26)
                {
                  v31 = *(_QWORD *)&v18 + 96 * v27;
                  v33 = *(_DWORD *)(v31 + 84);
                  v32 = (_DWORD *)(v31 + 84);
                  if (v33 == *(_DWORD *)v98)
                    goto LABEL_103;
                  v34 = *(_QWORD *)&v18 + 96 * v27;
                  v16 = *(unsigned int *)(v34 + 24);
                  v23 = *(_DWORD *)(v34 + 28);
                  v15 = *(_DWORD *)(v34 + 20);
                  *v32 = *(_DWORD *)v98;
                  *(_BYTE *)(v34 + 80) = 1;
                  goto LABEL_32;
                }
              }
            }
            else
            {
              v16 = *(unsigned int *)(v29 + 4);
            }
            v35 = *(_QWORD *)&v18 + 96 * v27;
            v37 = *(_DWORD *)(v35 + 88);
            v36 = (_DWORD *)(v35 + 88);
            if (v37 != *(_DWORD *)v98)
            {
              v23 = *(_DWORD *)(v29 + 8);
              *v36 = *(_DWORD *)v98;
              *(_BYTE *)(*(_QWORD *)&v18 + 96 * v27 + 81) = 1;
LABEL_32:
              v107 = __PAIR64__(v25, v24);
              v108 = v26;
              sub_223999954((uint64_t)v98, (uint64_t *)&v107, v27);
              v38 = (19349669 * (int)v16) ^ (83492791 * v23);
              v39 = v38 ^ (73856093 * (int)v15);
              v40 = a1[20];
              if (v40)
              {
                v41 = (uint8x8_t)vcnt_s8(v40);
                v41.i16[0] = vaddlv_u8(v41);
                if (v41.u32[0] > 1uLL)
                {
                  v42 = v38 ^ (73856093 * (int)v15);
                  if (v39 >= *(_QWORD *)&v40)
                    v42 = v39 % *(_QWORD *)&v40;
                }
                else
                {
                  v42 = (*(_QWORD *)&v40 - 1) & v39;
                }
                v43 = *(uint64_t ***)(*(_QWORD *)v96 + 8 * v42);
                if (v43)
                {
                  v44 = *v43;
                  if (v44)
                  {
                    if (v41.u32[0] < 2uLL)
                    {
                      while (1)
                      {
                        v46 = v44[1];
                        if (v39 == v46)
                        {
                          if (*((_DWORD *)v44 + 4) == v15
                            && *((_DWORD *)v44 + 5) == (_DWORD)v16
                            && *((_DWORD *)v44 + 6) == v23)
                          {
                            goto LABEL_63;
                          }
                        }
                        else if ((v46 & (*(_QWORD *)&v40 - 1)) != v42)
                        {
                          goto LABEL_57;
                        }
                        v44 = (uint64_t *)*v44;
                        if (!v44)
                          goto LABEL_57;
                      }
                    }
                    do
                    {
                      v45 = v44[1];
                      if (v39 == v45)
                      {
                        if (*((_DWORD *)v44 + 4) == v15
                          && *((_DWORD *)v44 + 5) == (_DWORD)v16
                          && *((_DWORD *)v44 + 6) == v23)
                        {
                          goto LABEL_63;
                        }
                      }
                      else
                      {
                        if (v45 >= *(_QWORD *)&v40)
                          v45 %= *(_QWORD *)&v40;
                        if (v45 != v42)
                          break;
                      }
                      v44 = (uint64_t *)*v44;
                    }
                    while (v44);
                  }
                }
              }
LABEL_57:
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/SpatialSubdivisionGraphAlgorithms.hpp", 119, (uint64_t)"edges_from_node.count(current_position) == 1", 44, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
              v47 = a1;
              v48 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v48 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v62 = qword_255795648;
                for (j = qword_255795650; v62 != j; v62 += 16)
                  (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v62)(*(_QWORD *)(v62 + 8), "edges_from_node.count(current_position) == 1", 44, "", 0);
              }
              v49 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v49 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                abort();
              a1 = v47;
              qword_255795660(*(_QWORD *)algn_255795668, "edges_from_node.count(current_position) == 1", 44, "", 0);
              v40 = v47[20];
LABEL_63:
              if (!*(_QWORD *)&v40)
                goto LABEL_127;
              v50 = (uint8x8_t)vcnt_s8(v40);
              v50.i16[0] = vaddlv_u8(v50);
              if (v50.u32[0] > 1uLL)
              {
                v51 = v39;
                if (v39 >= *(_QWORD *)&v40)
                  v51 = v39 % *(_QWORD *)&v40;
              }
              else
              {
                v51 = (*(_QWORD *)&v40 - 1) & v39;
              }
              v52 = *(uint64_t ***)(*(_QWORD *)v96 + 8 * v51);
              if (!v52 || (v53 = *v52) == 0)
LABEL_127:
                sub_223198218("unordered_map::at: key not found");
              if (v50.u32[0] < 2uLL)
              {
                v54 = *(_QWORD *)&v40 - 1;
                while (1)
                {
                  v56 = v53[1];
                  if (v39 == v56)
                  {
                    if (*((_DWORD *)v53 + 4) == v15
                      && *((_DWORD *)v53 + 5) == (_DWORD)v16
                      && *((_DWORD *)v53 + 6) == v23)
                    {
                      goto LABEL_87;
                    }
                  }
                  else if ((v56 & v54) != v51)
                  {
                    goto LABEL_127;
                  }
                  v53 = (uint64_t *)*v53;
                  if (!v53)
                    goto LABEL_127;
                }
              }
              while (1)
              {
                v55 = v53[1];
                if (v39 == v55)
                {
                  if (*((_DWORD *)v53 + 4) == v15 && *((_DWORD *)v53 + 5) == (_DWORD)v16 && *((_DWORD *)v53 + 6) == v23)
                  {
LABEL_87:
                    v57 = v53[4];
                    v58 = v53[5];
                    v18 = *v95;
                    v24 = v15;
                    v25 = v16;
                    v26 = v23;
                    v59 = v58 - v57;
                    if (v59)
                    {
                      v60 = 0;
                      v61 = v59 >> 2;
                      while (*(_DWORD *)(*(_QWORD *)&v18 + 96 * *(unsigned int *)(v57 + 4 * v60)) != *v97)
                      {
                        if (v61 == ++v60)
                        {
LABEL_98:
                          v24 = v15;
                          v25 = v16;
                          v26 = v23;
                          goto LABEL_24;
                        }
                      }
                      v64 = 0;
                      while (1)
                      {
                        v65 = *(_DWORD *)(v57 + 4 * ((v60 + v64 + 1) % v61));
                        if (*(_BYTE *)(*(_QWORD *)&v18 + 96 * v65 + 92))
                          break;
                        if (v61 == ++v64)
                          goto LABEL_98;
                      }
                      v17 = *(_DWORD *)(*(_QWORD *)&v18 + 96 * v65);
                      goto LABEL_23;
                    }
                    goto LABEL_24;
                  }
                }
                else
                {
                  if (v55 >= *(_QWORD *)&v40)
                    v55 %= *(_QWORD *)&v40;
                  if (v55 != v51)
                    goto LABEL_127;
                }
                v53 = (uint64_t *)*v53;
                if (!v53)
                  goto LABEL_127;
              }
            }
LABEL_103:
            sub_22399A4DC((uint64_t)v98, a1);
            if (v102[4] < 0.0 || v102[4] > 1.0)
            {
              v67 = (unint64_t)a1[17];
              if (v67 >= *(_QWORD *)&a1[18])
              {
                v68 = sub_2239A5298(v88, (int *)v98);
              }
              else
              {
                sub_2239A54E0(*(_QWORD *)&a1[17], (int *)v98);
                v68 = v67 + 144;
                a1[17] = (int8x8_t)(v67 + 144);
              }
              v14 = v94;
              a1[17] = (int8x8_t)v68;
              goto LABEL_119;
            }
            v69 = *(unsigned int **)&v98[32];
            v70 = (unsigned int *)v99;
            v14 = v94;
            if (*(_QWORD *)&v98[32] == (_QWORD)v99)
            {
LABEL_119:
              sub_22391679C(v98);
              v13 = v92;
              v16 = v90;
              v15 = v91;
              goto LABEL_15;
            }
            v71 = *v95;
            v72 = *(_DWORD *)v98;
            while (2)
            {
              v73 = *v69;
              v74 = *(_QWORD *)&v71 + 96 * *v69;
              v76 = *(_DWORD *)(v74 + 84);
              v75 = (_DWORD *)(v74 + 84);
              if (v76 == v72)
              {
                *v75 = -1;
                v80 = *(_QWORD *)&v71 + 96 * v73;
                v81 = *(_DWORD *)(v80 + 88);
                v78 = (_DWORD *)(v80 + 88);
                if (v81 == v72)
                  goto LABEL_116;
              }
              else
              {
                v77 = *(_QWORD *)&v71 + 96 * v73;
                v79 = *(_DWORD *)(v77 + 88);
                v78 = (_DWORD *)(v77 + 88);
                if (v79 == v72)
LABEL_116:
                  *v78 = -1;
              }
              if (++v69 == v70)
                goto LABEL_119;
              continue;
            }
          }
        }
        else if (!*(_BYTE *)(*(_QWORD *)&v18 + 96 * v17 + 81))
        {
          goto LABEL_21;
        }
      }
LABEL_15:
      if (++v14 == v13)
        goto LABEL_11;
    }
  }
LABEL_120:
  kdebug_trace();
  memset(v98, 0, 32);
  *(_DWORD *)&v98[32] = 728306240;
  kdebug_trace();
  v82 = a1[16];
  if (*(_QWORD *)&a1[17] != *(_QWORD *)&v82)
  {
    v83 = 0;
    v84 = 0;
    do
    {
      v85 = *(_QWORD *)&v82 + 144 * v83;
      *(_QWORD *)v109 = 0;
      if (*(float *)(v85 + 104) >= 8.0
        && sub_22399B844(*(_QWORD *)&v82 + 144 * v83, &v109[1], v109, (uint64_t)&v107, (uint64_t)v106, a1, v95, v96))
      {
        v86 = a1[29].i32[0];
        a1[29].i32[0] = v86 + 1;
        sub_223A1CB08(a1, (uint64_t)v95, (uint64_t)v96, v88, (_DWORD *)v85, v86, 1, v109[1], 1.0, v109[0], (int *)&v107, v106);
      }
      else
      {
        ++v84;
      }
      v83 = v84;
      v82 = a1[16];
    }
    while (0x8E38E38E38E38E39 * ((uint64_t)(*(_QWORD *)&a1[17] - *(_QWORD *)&v82) >> 4) > v84);
  }
  kdebug_trace();
  return kdebug_trace();
}

void sub_223A0CCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);
  *(_QWORD *)(v16 + 136) = v15;
  sub_22391679C((uint64_t *)va);
  kdebug_trace();
  kdebug_trace();
  _Unwind_Resume(a1);
}

void sub_223A0CD64(int8x8_t *a1, _QWORD *a2, float a3)
{
  int8x8_t v5;
  int8x8_t v6;
  char v7;
  int8x8_t v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int *v13;
  unsigned int *v14;
  int8x8_t v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  _DWORD *v19;
  int v20;
  uint64_t v21;
  _DWORD *v22;
  int v23;
  uint64_t v24;
  int v25;
  int8x8_t v27;
  _OWORD v28[8];
  int v29;

  sub_223A0AC6C(a1);
  sub_223A0B034(a1);
  sub_223A0BE28(a1);
  sub_223A0C1A8(a1);
  sub_223A0C33C(a1);
  sub_223A0CF64((uint64_t)a1, a3);
  sub_223A0D058(a1);
  sub_223A0D990(a1);
  v6 = a1[16];
  v5 = a1[17];
  if (*(_QWORD *)&v6 != *(_QWORD *)&v5)
  {
    v27 = a1[17];
    do
    {
      v7 = 0;
      v29 = 0;
      memset(v28, 0, sizeof(v28));
      if (*(float *)(*(_QWORD *)&v6 + 104) > 0.0)
      {
        v8 = a1[26];
        if (!*(_QWORD *)&v8)
        {
          v7 = 0;
          *(_DWORD *)(*(_QWORD *)&v6 + 112) = 0;
          v13 = *(unsigned int **)(*(_QWORD *)&v6 + 32);
          v14 = *(unsigned int **)(*(_QWORD *)&v6 + 40);
          if (v13 == v14)
            goto LABEL_4;
LABEL_17:
          v15 = a1[10];
          v16 = **(_DWORD **)&v6;
          while (2)
          {
            v17 = *v13;
            v18 = *(_QWORD *)&v15 + 96 * *v13;
            v20 = *(_DWORD *)(v18 + 84);
            v19 = (_DWORD *)(v18 + 84);
            if (v20 == v16)
            {
              *v19 = -1;
              v24 = *(_QWORD *)&v15 + 96 * v17;
              v25 = *(_DWORD *)(v24 + 88);
              v22 = (_DWORD *)(v24 + 88);
              if (v25 == v16)
                goto LABEL_23;
            }
            else
            {
              v21 = *(_QWORD *)&v15 + 96 * v17;
              v23 = *(_DWORD *)(v21 + 88);
              v22 = (_DWORD *)(v21 + 88);
              if (v23 == v16)
LABEL_23:
                *v22 = -1;
            }
            if (++v13 == v14)
              goto LABEL_4;
            continue;
          }
        }
        v9 = 0;
        v10 = 0;
        v7 = 0;
        do
        {
          if ((sub_223EA98C0((float *)(*(_QWORD *)&v8 + 28), (float **)(*(_QWORD *)&v6 + 56)) & 0x80000000) == 0)
          {
            v11 = *(unsigned __int8 *)(*(_QWORD *)&v8 + 36);
            if ((v11 & 0xFFFFFFDF) != 0)
            {
              v12 = *((_DWORD *)v28 + v11);
              *((_DWORD *)v28 + v11) = v12 + 1;
              if (v12 + 1 > v10)
              {
                v7 = v11;
                v10 = v12 + 1;
              }
            }
            v9 = 1;
          }
          v8 = **(int8x8_t **)&v8;
        }
        while (v8);
        if ((v9 & 1) != 0)
        {
          *(_DWORD *)(*(_QWORD *)&v6 + 112) = 1065353216;
          v5 = v27;
          goto LABEL_4;
        }
        v5 = v27;
      }
      *(_DWORD *)(*(_QWORD *)&v6 + 112) = 0;
      v13 = *(unsigned int **)(*(_QWORD *)&v6 + 32);
      v14 = *(unsigned int **)(*(_QWORD *)&v6 + 40);
      if (v13 != v14)
        goto LABEL_17;
LABEL_4:
      *(_BYTE *)(*(_QWORD *)&v6 + 4) = v7;
      *(_QWORD *)&v6 += 144;
    }
    while (*(_QWORD *)&v6 != *(_QWORD *)&v5);
  }
  sub_223A0E038(a1, a3);
  sub_223A0E770((uint64_t)a1, a2);
}

uint64_t sub_223A0CF64(uint64_t a1, float a2)
{
  __n128 v4;
  uint64_t v5;
  uint64_t i;

  kdebug_trace();
  v5 = *(_QWORD *)(a1 + 128);
  for (i = *(_QWORD *)(a1 + 136); v5 != i; v5 += 144)
  {
    if (*(float *)(v5 + 104) >= 0.0)
    {
      v4.n128_f32[0] = a2;
      sub_223A0F6BC(v5, (_QWORD *)a1, (int **)(a1 + 80), (_QWORD *)(a1 + 152), v4);
    }
  }
  return kdebug_trace();
}

void sub_223A0D044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2231874DC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223A0D058(int8x8_t *a1)
{
  int8x8_t *v1;
  int *v2;
  int *v3;
  unsigned int *v4;
  int8x8_t v5;
  unint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int *v13;
  int8x8_t v14;
  int8x8_t v15;
  unint64_t v16;
  int8x8_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  int8x8_t v22;
  unsigned int *v23;
  unsigned int *v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  int8x8_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  __int32 v32;
  uint64_t v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  _DWORD *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  int8x8_t v51;
  uint8x8_t v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  int8x8_t *v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  uint8x8_t v61;
  unint64_t v62;
  uint64_t **v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t i;
  uint64_t v75;
  unsigned int v76;
  unsigned int *v77;
  unsigned int *v78;
  int8x8_t v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  _DWORD *v83;
  int v84;
  uint64_t v85;
  _DWORD *v86;
  int v87;
  uint64_t v88;
  int v89;
  int8x8_t v90;
  uint64_t v91;
  uint64_t *v93;
  int8x8_t *v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int *v97;
  int v98;
  unsigned int *v99;
  _DWORD *v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  float v109[8];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v1 = a1;
  v2 = (int *)a1[16];
  v93 = (uint64_t *)&a1[16];
  v3 = (int *)a1[17];
  if (v2 != v3)
  {
    do
    {
      sub_2239A54E0((uint64_t)&v103, v2);
      v4 = (unsigned int *)v106;
      if (*((_QWORD *)&v105 + 1) != (_QWORD)v106)
      {
        v5 = v1[10];
        v6 = v106 - *((_QWORD *)&v105 + 1) - 4;
        v7 = (unsigned int *)*((_QWORD *)&v105 + 1);
        if (v6 < 4)
          goto LABEL_134;
        v8 = (v6 >> 2) + 1;
        v7 = (unsigned int *)(*((_QWORD *)&v105 + 1) + 4 * (v8 & 0x7FFFFFFFFFFFFFFELL));
        v9 = (unsigned int *)(*((_QWORD *)&v105 + 1) + 4);
        v10 = v8 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v11 = *(_QWORD *)&v5 + 96 * *v9;
          *(_BYTE *)(*(_QWORD *)&v5 + 96 * *(v9 - 1) + 93) = 1;
          *(_BYTE *)(v11 + 93) = 1;
          v9 += 2;
          v10 -= 2;
        }
        while (v10);
        if (v8 != (v8 & 0x7FFFFFFFFFFFFFFELL))
        {
LABEL_134:
          do
          {
            v12 = *v7++;
            *(_BYTE *)(*(_QWORD *)&v5 + 96 * v12 + 93) = 1;
          }
          while (v7 != v4);
        }
      }
      sub_22391679C(&v103);
      v2 += 36;
    }
    while (v2 != v3);
    v13 = (int *)v1[16];
    v2 = (int *)v1[17];
    if (v2 != v13)
    {
      do
      {
        v2 -= 36;
        sub_22391679C(v2);
      }
      while (v2 != v13);
      v2 = v13;
    }
  }
  v1[17] = (int8x8_t)v2;
  kdebug_trace();
  v15 = v1[10];
  v14 = v1[11];
  if (*(_QWORD *)&v15 != *(_QWORD *)&v14)
  {
    v16 = *(_QWORD *)&v14 - *(_QWORD *)&v15 - 96;
    v17 = v1[10];
    if (v16 < 0x60)
      goto LABEL_135;
    v18 = v16 / 0x60 + 1;
    v17 = (int8x8_t)(*(_QWORD *)&v15 + 96 * (v18 & 0x7FFFFFFFFFFFFFELL));
    v19 = (char *)(*(_QWORD *)&v15 + 189);
    v20 = v18 & 0x7FFFFFFFFFFFFFELL;
    do
    {
      v21 = *v19;
      *(v19 - 97) = *(v19 - 96);
      *(v19 - 1) = v21;
      *(_WORD *)(v19 - 109) = 0;
      *(_WORD *)(v19 - 13) = 0;
      *(_QWORD *)(v19 - 105) = -1;
      *(_QWORD *)(v19 - 9) = -1;
      v19 += 192;
      v20 -= 2;
    }
    while (v20);
    if (v18 != (v18 & 0x7FFFFFFFFFFFFFELL))
    {
LABEL_135:
      do
      {
        *(_BYTE *)(*(_QWORD *)&v17 + 92) = *(_BYTE *)(*(_QWORD *)&v17 + 93);
        *(_WORD *)(*(_QWORD *)&v17 + 80) = 0;
        *(_QWORD *)(*(_QWORD *)&v17 + 84) = -1;
        *(_QWORD *)&v17 += 96;
      }
      while (*(_QWORD *)&v17 != *(_QWORD *)&v14);
    }
  }
  v22 = v1[21];
  if (v22)
  {
    while (1)
    {
      v23 = *(unsigned int **)(*(_QWORD *)&v22 + 32);
      v24 = *(unsigned int **)(*(_QWORD *)&v22 + 40);
      v94 = (int8x8_t *)v22;
      if (v23 != v24)
        break;
LABEL_22:
      v22 = *v94;
      if (!*(_QWORD *)v94)
        return kdebug_trace();
    }
    v26 = *(_DWORD *)(*(_QWORD *)&v22 + 16);
    v25 = *(unsigned int *)(*(_QWORD *)&v22 + 20);
    v98 = *(_DWORD *)(*(_QWORD *)&v22 + 24);
    v97 = *(unsigned int **)(*(_QWORD *)&v22 + 40);
    v95 = *(_DWORD *)(*(_QWORD *)&v22 + 20);
    v96 = v26;
    while (1)
    {
      v27 = *v23;
      v28 = v1[10];
      if (!*(_BYTE *)(*(_QWORD *)&v28 + 96 * *v23 + 92))
        goto LABEL_26;
      v29 = *(_QWORD *)&v28 + 96 * v27;
      v31 = *(_DWORD *)(v29 + 8);
      v30 = v29 + 8;
      if (v31 == v26 && *(_DWORD *)(v30 + 4) == (_DWORD)v25 && *(_DWORD *)(v30 + 8) == v98)
      {
        if (*(_BYTE *)(*(_QWORD *)&v28 + 96 * v27 + 80))
          goto LABEL_26;
      }
      else if (*(_BYTE *)(*(_QWORD *)&v28 + 96 * v27 + 81))
      {
        goto LABEL_26;
      }
      v99 = v23;
      v32 = v1[29].i32[0];
      v1[29].i32[0] = v32 + 1;
      LODWORD(v103) = v32;
      v109[6] = 0.0;
      v111 = 0;
      v112 = 0;
      v110 = 0;
      v104 = 0u;
      v105 = 0u;
      v106 = 0u;
      v107 = 0u;
      v108 = 0u;
      memset(v109, 0, 21);
      v33 = v25;
      v34 = v98;
LABEL_34:
      v35 = v26;
      v36 = v33;
      v37 = v34;
      v38 = v27;
LABEL_35:
      v39 = *(_QWORD *)&v28 + 96 * v38;
      v41 = *(_DWORD *)(v39 + 8);
      v40 = v39 + 8;
      v26 = v41;
      v100 = (_DWORD *)(*(_QWORD *)&v28 + 96 * v38);
      if (v41 == v35)
      {
        v33 = *(unsigned int *)(v40 + 4);
        if ((_DWORD)v33 == (_DWORD)v36)
        {
          v33 = v36;
          if (*(_DWORD *)(v40 + 8) == v37)
          {
            v42 = *(_QWORD *)&v28 + 96 * v38;
            v44 = *(_DWORD *)(v42 + 84);
            v43 = (_DWORD *)(v42 + 84);
            if (v44 == (_DWORD)v103)
              goto LABEL_114;
            v45 = *(_QWORD *)&v28 + 96 * v38;
            v33 = *(unsigned int *)(v45 + 24);
            v34 = *(_DWORD *)(v45 + 28);
            v26 = *(_DWORD *)(v45 + 20);
            *v43 = v103;
            *(_BYTE *)(v45 + 80) = 1;
            goto LABEL_43;
          }
        }
      }
      else
      {
        v33 = *(unsigned int *)(v40 + 4);
      }
      v46 = *(_QWORD *)&v28 + 96 * v38;
      v48 = *(_DWORD *)(v46 + 88);
      v47 = (_DWORD *)(v46 + 88);
      if (v48 != (_DWORD)v103)
      {
        v34 = *(_DWORD *)(v40 + 8);
        *v47 = v103;
        *(_BYTE *)(*(_QWORD *)&v28 + 96 * v38 + 81) = 1;
LABEL_43:
        v101 = __PAIR64__(v36, v35);
        v102 = v37;
        sub_223999954((uint64_t)&v103, (uint64_t *)&v101, v38);
        v49 = (19349669 * (int)v33) ^ (83492791 * v34);
        v50 = v49 ^ (73856093 * (int)v26);
        v51 = v1[20];
        if (v51)
        {
          v52 = (uint8x8_t)vcnt_s8(v51);
          v52.i16[0] = vaddlv_u8(v52);
          if (v52.u32[0] > 1uLL)
          {
            v53 = v49 ^ (73856093 * (int)v26);
            if (v50 >= *(_QWORD *)&v51)
              v53 = v50 % *(_QWORD *)&v51;
          }
          else
          {
            v53 = (*(_QWORD *)&v51 - 1) & v50;
          }
          v54 = *(uint64_t ***)(*(_QWORD *)&v1[19] + 8 * v53);
          if (v54)
          {
            v55 = *v54;
            if (v55)
            {
              if (v52.u32[0] < 2uLL)
              {
                while (1)
                {
                  v57 = v55[1];
                  if (v50 == v57)
                  {
                    if (*((_DWORD *)v55 + 4) == v26
                      && *((_DWORD *)v55 + 5) == (_DWORD)v33
                      && *((_DWORD *)v55 + 6) == v34)
                    {
                      goto LABEL_74;
                    }
                  }
                  else if ((v57 & (*(_QWORD *)&v51 - 1)) != v53)
                  {
                    goto LABEL_68;
                  }
                  v55 = (uint64_t *)*v55;
                  if (!v55)
                    goto LABEL_68;
                }
              }
              do
              {
                v56 = v55[1];
                if (v50 == v56)
                {
                  if (*((_DWORD *)v55 + 4) == v26 && *((_DWORD *)v55 + 5) == (_DWORD)v33 && *((_DWORD *)v55 + 6) == v34)
                    goto LABEL_74;
                }
                else
                {
                  if (v56 >= *(_QWORD *)&v51)
                    v56 %= *(_QWORD *)&v51;
                  if (v56 != v53)
                    break;
                }
                v55 = (uint64_t *)*v55;
              }
              while (v55);
            }
          }
        }
LABEL_68:
        sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/SpatialSubdivisionGraphAlgorithms.hpp", 119, (uint64_t)"edges_from_node.count(current_position) == 1", 44, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v58 = v1;
        v59 = atomic_load((unsigned __int8 *)&qword_255795680);
        if ((v59 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release(&qword_255795680);
        }
        if (!byte_255795670 || byte_255795678)
        {
          v73 = qword_255795648;
          for (i = qword_255795650; v73 != i; v73 += 16)
            (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v73)(*(_QWORD *)(v73 + 8), "edges_from_node.count(current_position) == 1", 44, "", 0);
        }
        v60 = atomic_load((unsigned __int8 *)&qword_255795680);
        if ((v60 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release(&qword_255795680);
        }
        if (!byte_255795670)
          abort();
        v1 = v58;
        qword_255795660(*(_QWORD *)algn_255795668, "edges_from_node.count(current_position) == 1", 44, "", 0);
        v51 = v58[20];
LABEL_74:
        if (!*(_QWORD *)&v51)
          goto LABEL_130;
        v61 = (uint8x8_t)vcnt_s8(v51);
        v61.i16[0] = vaddlv_u8(v61);
        if (v61.u32[0] > 1uLL)
        {
          v62 = v50;
          if (v50 >= *(_QWORD *)&v51)
            v62 = v50 % *(_QWORD *)&v51;
        }
        else
        {
          v62 = (*(_QWORD *)&v51 - 1) & v50;
        }
        v63 = *(uint64_t ***)(*(_QWORD *)&v1[19] + 8 * v62);
        if (!v63 || (v64 = *v63) == 0)
LABEL_130:
          sub_223198218("unordered_map::at: key not found");
        if (v61.u32[0] < 2uLL)
        {
          v65 = *(_QWORD *)&v51 - 1;
          while (1)
          {
            v67 = v64[1];
            if (v50 == v67)
            {
              if (*((_DWORD *)v64 + 4) == v26 && *((_DWORD *)v64 + 5) == (_DWORD)v33 && *((_DWORD *)v64 + 6) == v34)
                goto LABEL_98;
            }
            else if ((v67 & v65) != v62)
            {
              goto LABEL_130;
            }
            v64 = (uint64_t *)*v64;
            if (!v64)
              goto LABEL_130;
          }
        }
        while (1)
        {
          v66 = v64[1];
          if (v50 == v66)
          {
            if (*((_DWORD *)v64 + 4) == v26 && *((_DWORD *)v64 + 5) == (_DWORD)v33 && *((_DWORD *)v64 + 6) == v34)
            {
LABEL_98:
              v68 = v64[4];
              v69 = v64[5];
              v28 = v1[10];
              v35 = v26;
              v36 = v33;
              v37 = v34;
              v70 = v69 - v68;
              if (v70)
              {
                v71 = 0;
                v72 = v70 >> 2;
                while (*(_DWORD *)(*(_QWORD *)&v28 + 96 * *(unsigned int *)(v68 + 4 * v71)) != *v100)
                {
                  if (v72 == ++v71)
                  {
LABEL_109:
                    v35 = v26;
                    v36 = v33;
                    v37 = v34;
                    goto LABEL_35;
                  }
                }
                v75 = 0;
                while (1)
                {
                  v76 = *(_DWORD *)(v68 + 4 * ((v71 + v75 + 1) % v72));
                  if (*(_BYTE *)(*(_QWORD *)&v28 + 96 * v76 + 92))
                    break;
                  if (v72 == ++v75)
                    goto LABEL_109;
                }
                v27 = *(_DWORD *)(*(_QWORD *)&v28 + 96 * v76);
                goto LABEL_34;
              }
              goto LABEL_35;
            }
          }
          else
          {
            if (v66 >= *(_QWORD *)&v51)
              v66 %= *(_QWORD *)&v51;
            if (v66 != v62)
              goto LABEL_130;
          }
          v64 = (uint64_t *)*v64;
          if (!v64)
            goto LABEL_130;
        }
      }
LABEL_114:
      sub_22399A4DC((uint64_t)&v103, v1);
      if (v109[4] < -1.0 || v109[4] > 0.0)
      {
        v90 = v1[17];
        if (*(_QWORD *)&v90 >= *(_QWORD *)&v1[18])
        {
          v91 = sub_2239A5298(v93, (int *)&v103);
        }
        else
        {
          sub_2239A54E0(*(_QWORD *)&v1[17], (int *)&v103);
          v91 = *(_QWORD *)&v90 + 144;
          v1[17] = (int8x8_t)(*(_QWORD *)&v90 + 144);
        }
        v23 = v99;
        v24 = v97;
        v25 = v95;
        v26 = v96;
        v1[17] = (int8x8_t)v91;
      }
      else
      {
        v77 = (unsigned int *)*((_QWORD *)&v105 + 1);
        v78 = (unsigned int *)v106;
        v23 = v99;
        v24 = v97;
        v25 = v95;
        v26 = v96;
        if (*((_QWORD *)&v105 + 1) != (_QWORD)v106)
        {
          v79 = v1[10];
          v80 = v103;
          do
          {
            v81 = *v77;
            v82 = *(_QWORD *)&v79 + 96 * *v77;
            v84 = *(_DWORD *)(v82 + 84);
            v83 = (_DWORD *)(v82 + 84);
            if (v84 == v80)
            {
              *v83 = -1;
              v88 = *(_QWORD *)&v79 + 96 * v81;
              v89 = *(_DWORD *)(v88 + 88);
              v86 = (_DWORD *)(v88 + 88);
              if (v89 == v80)
LABEL_123:
                *v86 = -1;
            }
            else
            {
              v85 = *(_QWORD *)&v79 + 96 * v81;
              v87 = *(_DWORD *)(v85 + 88);
              v86 = (_DWORD *)(v85 + 88);
              if (v87 == v80)
                goto LABEL_123;
            }
            ++v77;
          }
          while (v77 != v78);
        }
      }
      sub_22391679C(&v103);
LABEL_26:
      if (++v23 == v24)
        goto LABEL_22;
    }
  }
  return kdebug_trace();
}

void sub_223A0D940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v13;
  va_list va;

  va_start(va, a12);
  *(_QWORD *)(v12 + 136) = v13;
  sub_22391679C((uint64_t *)va);
  kdebug_trace();
  _Unwind_Resume(a1);
}

uint64_t sub_223A0D990(_QWORD *a1)
{
  unsigned int *v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  unsigned int *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unsigned int *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  unsigned int *v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  int *v33;
  float **v34;
  int8x8_t v35;
  int v36;
  int v37;
  int v38;
  unint64_t v39;
  uint8x8_t v40;
  uint64_t v41;
  uint64_t **v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint8x8_t v46;
  unint64_t v47;
  uint64_t **v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _DWORD *v53;
  _DWORD *v54;
  unint64_t v56;
  unsigned int *__p;
  unsigned int *v58;
  _QWORD *v59;

  kdebug_trace();
  v58 = 0;
  v2 = 0;
  v3 = a1[17] - a1[16];
  if (v3)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0x8E38E38E38E38E39 * (v3 >> 4);
    v56 = v7;
    while (1)
    {
      while (v2 < v4)
      {
        *v2++ = v5;
        if (++v5 == v7)
          goto LABEL_31;
      }
      v8 = v2 - v6;
      v9 = v8 + 1;
      if ((unint64_t)(v8 + 1) >> 62)
        sub_22316E078();
      if (((char *)v4 - (char *)v6) >> 1 > v9)
        v9 = ((char *)v4 - (char *)v6) >> 1;
      v10 = (unint64_t)((char *)v4 - (char *)v6) >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v9;
      if (v10)
      {
        if (v10 >> 62)
          sub_223174E94();
        v11 = operator new(4 * v10);
        v12 = (unsigned int *)&v11[4 * v8];
        *v12 = v5;
        v13 = (uint64_t)(v12 + 1);
        v14 = (char *)v2 - (char *)v6;
        if (v2 == v6)
        {
LABEL_22:
          v4 = (unsigned int *)&v11[4 * v10];
          if (!v6)
            goto LABEL_19;
LABEL_18:
          operator delete(v6);
          goto LABEL_19;
        }
      }
      else
      {
        v11 = 0;
        v12 = (unsigned int *)(4 * v8);
        *(_DWORD *)(4 * v8) = v5;
        v13 = 4 * v8 + 4;
        v14 = (char *)v2 - (char *)v6;
        if (v2 == v6)
          goto LABEL_22;
      }
      v15 = v14 - 4;
      if (v15 < 0xBC)
        break;
      v18 = ((char *)(v2 - 1) - (char *)v6) & 0xFFFFFFFFFFFFFFFCLL;
      if (&v11[(char *)v2 - (char *)v6 - 4 - v18] > &v11[(char *)v2 - (char *)v6 - 4]
        || (unsigned int *)((char *)v2 - v18 - 4) > v2 - 1
        || (unint64_t)((char *)v6 - v11) < 0x20)
      {
        break;
      }
      v19 = (v15 >> 2) + 1;
      v20 = 4 * (v19 & 0x7FFFFFFFFFFFFFF8);
      v16 = &v2[v20 / 0xFFFFFFFFFFFFFFFCLL];
      v12 = (unsigned int *)((char *)v12 - v20);
      v21 = &v11[4 * v8 - 16];
      v22 = v2 - 4;
      v23 = v19 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *v21 = v24;
        v21 -= 2;
        v22 -= 8;
        v23 -= 8;
      }
      while (v23);
      if (v19 != (v19 & 0x7FFFFFFFFFFFFFF8))
        goto LABEL_16;
LABEL_17:
      v4 = (unsigned int *)&v11[4 * v10];
      if (v6)
        goto LABEL_18;
LABEL_19:
      v6 = v12;
      v2 = (unsigned int *)v13;
      v7 = v56;
      if (++v5 == v56)
      {
LABEL_31:
        v58 = v2;
        goto LABEL_33;
      }
    }
    v16 = v2;
    do
    {
LABEL_16:
      v17 = *--v16;
      *--v12 = v17;
    }
    while (v16 != v6);
    goto LABEL_17;
  }
  v6 = 0;
LABEL_33:
  v25 = 126 - 2 * __clz(v2 - v6);
  __p = v6;
  v59 = a1;
  if (v2 == v6)
    v26 = 0;
  else
    v26 = v25;
  sub_223A166B4(v6, v2, (uint64_t)&v59, v26, 1);
  v27 = a1[16];
  v28 = a1[17];
  if (v27 != v28)
  {
    while (*(float *)(v27 + 104) >= 0.0)
    {
LABEL_39:
      v27 += 144;
      if (v27 == v28)
        goto LABEL_107;
    }
    v29 = __p;
LABEL_43:
    if (v29 == v58)
      goto LABEL_39;
    v30 = a1[16];
    v31 = v30 + 144 * *v29;
    if (*(float *)(v31 + 104) < (float)-*(float *)(v27 + 104))
      goto LABEL_42;
    v32 = *(int **)(v27 + 8);
    v33 = *(int **)(v27 + 16);
    if (v32 == v33)
      goto LABEL_42;
    v34 = (float **)(v30 + 144 * *v29 + 56);
LABEL_47:
    v35 = (int8x8_t)a1[1];
    if (v35)
    {
      v36 = *v32;
      v37 = v32[1];
      v38 = v32[2];
      v39 = (19349669 * v37) ^ (73856093 * *v32) ^ (83492791 * v38);
      v40 = (uint8x8_t)vcnt_s8(v35);
      v40.i16[0] = vaddlv_u8(v40);
      if (v40.u32[0] > 1uLL)
      {
        v41 = (19349669 * v37) ^ (73856093 * v36) ^ (83492791 * v38);
        if (v39 >= *(_QWORD *)&v35)
          v41 = v39 % *(_QWORD *)&v35;
      }
      else
      {
        v41 = v39 & (*(_QWORD *)&v35 - 1);
      }
      v42 = *(uint64_t ***)(*a1 + 8 * v41);
      if (v42)
      {
        v43 = *v42;
        if (v43)
        {
          if (v40.u32[0] < 2uLL)
          {
            while (1)
            {
              v45 = v43[1];
              if (v39 == v45)
              {
                if (*((_DWORD *)v43 + 4) == v36 && *((_DWORD *)v43 + 5) == v37 && *((_DWORD *)v43 + 6) == v38)
                  goto LABEL_74;
              }
              else if ((v45 & (*(_QWORD *)&v35 - 1)) != v41)
              {
                goto LABEL_72;
              }
              v43 = (uint64_t *)*v43;
              if (!v43)
                goto LABEL_72;
            }
          }
          do
          {
            v44 = v43[1];
            if (v39 == v44)
            {
              if (*((_DWORD *)v43 + 4) == v36 && *((_DWORD *)v43 + 5) == v37 && *((_DWORD *)v43 + 6) == v38)
                goto LABEL_74;
            }
            else
            {
              if (v44 >= *(_QWORD *)&v35)
                v44 %= *(_QWORD *)&v35;
              if (v44 != v41)
                break;
            }
            v43 = (uint64_t *)*v43;
          }
          while (v43);
        }
      }
    }
LABEL_72:
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 538, (uint64_t)"nodes_.count(node_position) == 1", 32, (uint64_t)"Node not found", 14, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v36 = *v32;
    v37 = v32[1];
    v38 = v32[2];
    v35 = (int8x8_t)a1[1];
    v39 = (19349669 * v37) ^ (73856093 * *v32) ^ (83492791 * v38);
LABEL_74:
    if (!*(_QWORD *)&v35)
      goto LABEL_110;
    v46 = (uint8x8_t)vcnt_s8(v35);
    v46.i16[0] = vaddlv_u8(v46);
    if (v46.u32[0] > 1uLL)
    {
      v47 = v39;
      if (v39 >= *(_QWORD *)&v35)
        v47 = v39 % *(_QWORD *)&v35;
    }
    else
    {
      v47 = (*(_QWORD *)&v35 - 1) & v39;
    }
    v48 = *(uint64_t ***)(*a1 + 8 * v47);
    if (!v48 || (v49 = *v48) == 0)
LABEL_110:
      sub_223198218("unordered_map::at: key not found");
    if (v46.u32[0] < 2uLL)
    {
      v50 = *(_QWORD *)&v35 - 1;
      while (1)
      {
        v52 = v49[1];
        if (v52 == v39)
        {
          if (*((_DWORD *)v49 + 4) == v36 && *((_DWORD *)v49 + 5) == v37 && *((_DWORD *)v49 + 6) == v38)
            goto LABEL_98;
        }
        else if ((v52 & v50) != v47)
        {
          goto LABEL_110;
        }
        v49 = (uint64_t *)*v49;
        if (!v49)
          goto LABEL_110;
      }
    }
    while (1)
    {
      v51 = v49[1];
      if (v51 == v39)
      {
        if (*((_DWORD *)v49 + 4) == v36 && *((_DWORD *)v49 + 5) == v37 && *((_DWORD *)v49 + 6) == v38)
        {
LABEL_98:
          if ((sub_223EA98C0((float *)v49 + 11, v34) & 0x80000000) != 0)
            goto LABEL_42;
          v53 = *(_DWORD **)(v31 + 8);
          v54 = *(_DWORD **)(v31 + 16);
          if (v53 == v54)
          {
LABEL_38:
            sub_2239A03FC(v31, v27);
            goto LABEL_39;
          }
          while (*v32 != *v53 || v32[1] != v53[1] || v32[2] != v53[2])
          {
            v53 += 3;
            if (v53 == v54)
              goto LABEL_38;
          }
          v32 += 3;
          if (v32 == v33)
          {
LABEL_42:
            ++v29;
            goto LABEL_43;
          }
          goto LABEL_47;
        }
      }
      else
      {
        if (v51 >= *(_QWORD *)&v35)
          v51 %= *(_QWORD *)&v35;
        if (v51 != v47)
          goto LABEL_110;
      }
      v49 = (uint64_t *)*v49;
      if (!v49)
        goto LABEL_110;
    }
  }
LABEL_107:
  if (__p)
    operator delete(__p);
  return kdebug_trace();
}

void sub_223A0DFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, char a13)
{
  if (__p)
    operator delete(__p);
  sub_2231874DC((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_223A0E038(_QWORD *a1, float a2)
{
  __n128 v4;
  char **v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  uint64_t v10;
  int *v11;
  float v12;
  float v13;
  unsigned int *v15;
  unsigned int *v16;
  char *v17;
  float v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  void **v41;
  _QWORD *v42;
  char **v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50[3];
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[6];
  _BYTE v57[56];
  int v58;
  void *v59[3];
  char *v60;
  char *v61;
  unint64_t v62;
  _QWORD v63[2];
  __int128 v64;
  __int128 v65;
  int v66;

  v64 = 0u;
  v65 = 0u;
  v66 = 728306264;
  kdebug_trace();
  v5 = (char **)(a1 + 10);
  v63[0] = a1;
  v63[1] = a1 + 10;
  v6 = (void **)(a1 + 16);
  v7 = a1[16];
  v8 = a1[17];
  if (v7 == v8)
  {
    v37 = 0;
    v60 = 0;
    v61 = 0;
    v62 = 0;
    if (v6 == (void **)&v60)
      goto LABEL_61;
    goto LABEL_60;
  }
  v41 = (void **)(a1 + 16);
  v9 = 0.0;
  v10 = a1[16];
  do
  {
    if (v9 < *(float *)(v10 + 104))
      v9 = *(float *)(v10 + 104);
    v10 += 144;
  }
  while (v10 != v8);
  v11 = (int *)(a1 + 29);
  v60 = 0;
  v61 = 0;
  v62 = 0;
  v42 = a1;
  v43 = (char **)(a1 + 10);
  do
  {
    v12 = *(float *)(v7 + 104);
    if (v12 >= 0.0)
    {
      v13 = vabds_f32(v12, v9);
      if (v12 >= 1.0 || v13 < 0.001)
      {
        v4.n128_u32[0] = *(_DWORD *)(v7 + 112);
        if (v4.n128_f32[0] >= 0.5)
        {
          v15 = *(unsigned int **)(v7 + 32);
          v16 = *(unsigned int **)(v7 + 40);
          if (v15 == v16)
          {
            v18 = 0.0;
          }
          else
          {
            v17 = *v5;
            v18 = 0.0;
            do
            {
              if (!v17[96 * *v15 + 94])
              {
                v19 = &v17[96 * *v15];
                v4.n128_u32[0] = *((_DWORD *)v19 + 9);
                if (v18 < v4.n128_f32[0])
                  v18 = *((float *)v19 + 9);
              }
              ++v15;
            }
            while (v15 != v16);
          }
          v20 = *v11;
          v21 = *v11 + 1;
          *v11 = v21;
          LODWORD(v55) = v20;
          v58 = 0;
          memset(v59, 0, sizeof(v59));
          memset(v56, 0, sizeof(v56));
          memset(v57, 0, 53);
          if (v18 > 0.5)
          {
            *v11 = v20 + 2;
            LODWORD(v44) = v21;
            v51 = 0;
            v53 = 0;
            v54 = 0;
            v52 = 0;
            v45 = 0uLL;
            v46 = 0uLL;
            v47 = 0uLL;
            v48 = 0uLL;
            v49 = 0uLL;
            memset(v50, 0, 21);
            if (sub_2239A8EFC(v63, v7, (uint64_t)&v44, -1.0, v18 * 0.9))
            {
              if ((sub_2239A8EFC(v63, v7, (uint64_t)&v55, 12.0, v18 * 0.9) & 1) == 0)
              {
                LODWORD(v55) = v44;
                BYTE4(v55) = BYTE4(v44);
                sub_2239A506C(v56, (char *)v45, *((char **)&v45 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v45 + 1) - v45) >> 2));
                sub_22342D7E8(&v56[3], *((char **)&v46 + 1), (char *)v47, (uint64_t)(v47 - *((_QWORD *)&v46 + 1)) >> 2);
                sub_2233320C8(v57, (char *)v48, *((char **)&v48 + 1), (uint64_t)(*((_QWORD *)&v48 + 1) - v48) >> 3);
                sub_22362017C((uint64_t)&v57[24], *((char ***)&v49 + 1), v50[0], 0xAAAAAAAAAAAAAAABLL * ((v50[0] - *((_QWORD *)&v49 + 1)) >> 3));
                *(_QWORD *)&v57[48] = v50[2];
                v58 = v51;
                sub_2239AEF20(v59, v52, v53, 0x8E38E38E38E38E39 * ((v53 - v52) >> 4));
              }
              sub_22391679C(&v44);
              goto LABEL_32;
            }
            sub_22391679C(&v44);
          }
          if (v18 >= 0.75 || (sub_2239A60D4((uint64_t)v63, v7, (uint64_t)&v55, v4) & 1) == 0)
            sub_2239AA9B8((uint64_t)&v55, (int *)v7);
LABEL_32:
          v22 = (*v11)++;
          v23 = v61;
          if ((unint64_t)v61 >= v62)
          {
            v25 = v60;
            v26 = 0x8E38E38E38E38E39 * ((v61 - v60) >> 4) + 1;
            if (v26 > 0x1C71C71C71C71C7)
              sub_22316E078();
            if (0x1C71C71C71C71C72 * ((uint64_t)(v62 - (_QWORD)v60) >> 4) > v26)
              v26 = 0x1C71C71C71C71C72 * ((uint64_t)(v62 - (_QWORD)v60) >> 4);
            if (0x8E38E38E38E38E39 * ((uint64_t)(v62 - (_QWORD)v60) >> 4) >= 0xE38E38E38E38E3)
              v27 = 0x1C71C71C71C71C7;
            else
              v27 = v26;
            if (v27)
            {
              if (v27 > 0x1C71C71C71C71C7)
                sub_223174E94();
              v28 = (char *)operator new(144 * v27);
            }
            else
            {
              v28 = 0;
            }
            v29 = &v28[16 * ((v23 - v25) >> 4)];
            *(_DWORD *)v29 = v22;
            *((_DWORD *)v29 + 28) = 0;
            *((_QWORD *)v29 + 16) = 0;
            *((_QWORD *)v29 + 17) = 0;
            v30 = &v28[144 * v27];
            *((_QWORD *)v29 + 15) = 0;
            *(_OWORD *)(v29 + 8) = 0u;
            *(_OWORD *)(v29 + 24) = 0u;
            *(_OWORD *)(v29 + 40) = 0u;
            *(_OWORD *)(v29 + 56) = 0u;
            *(_OWORD *)(v29 + 72) = 0u;
            *(_OWORD *)(v29 + 88) = 0u;
            *(_QWORD *)(v29 + 101) = 0;
            v24 = v29 + 144;
            if (v23 == v25)
            {
              v60 = &v28[16 * ((v23 - v25) >> 4)];
              v61 = v29 + 144;
              v62 = (unint64_t)&v28[144 * v27];
              a1 = v42;
              v5 = v43;
              if (!v23)
                goto LABEL_56;
            }
            else
            {
              v31 = 0;
              do
              {
                v32 = &v23[v31];
                v33 = *(_DWORD *)&v23[v31 - 144];
                v34 = &v29[v31];
                *(v34 - 140) = v23[v31 - 140];
                *((_DWORD *)v34 - 36) = v33;
                *((_QWORD *)v34 - 16) = 0;
                *((_QWORD *)v34 - 15) = 0;
                *(_OWORD *)(v34 - 136) = *(_OWORD *)&v23[v31 - 136];
                *((_QWORD *)v34 - 15) = *(_QWORD *)&v23[v31 - 120];
                *((_QWORD *)v32 - 17) = 0;
                *((_QWORD *)v32 - 16) = 0;
                *((_QWORD *)v32 - 15) = 0;
                *((_QWORD *)v34 - 13) = 0;
                *((_QWORD *)v34 - 12) = 0;
                *((_OWORD *)v34 - 7) = *(_OWORD *)&v23[v31 - 112];
                *((_QWORD *)v34 - 12) = *(_QWORD *)&v23[v31 - 96];
                *((_QWORD *)v32 - 14) = 0;
                *((_QWORD *)v32 - 13) = 0;
                *((_QWORD *)v32 - 12) = 0;
                *((_QWORD *)v34 - 10) = 0;
                *((_QWORD *)v34 - 9) = 0;
                *(_OWORD *)(v34 - 88) = *(_OWORD *)&v23[v31 - 88];
                *((_QWORD *)v34 - 9) = *(_QWORD *)&v23[v31 - 72];
                *((_QWORD *)v32 - 11) = 0;
                *((_QWORD *)v32 - 10) = 0;
                *((_QWORD *)v32 - 9) = 0;
                *((_QWORD *)v34 - 7) = 0;
                *((_QWORD *)v34 - 6) = 0;
                *((_OWORD *)v34 - 4) = *(_OWORD *)&v23[v31 - 64];
                *((_QWORD *)v34 - 6) = *(_QWORD *)&v23[v31 - 48];
                *((_QWORD *)v32 - 8) = 0;
                *((_QWORD *)v32 - 7) = 0;
                *((_QWORD *)v32 - 6) = 0;
                v35 = *(_QWORD *)&v23[v31 - 40];
                *((_DWORD *)v34 - 8) = *(_DWORD *)&v23[v31 - 32];
                *((_QWORD *)v34 - 5) = v35;
                *((_QWORD *)v34 - 2) = 0;
                *((_QWORD *)v34 - 1) = 0;
                *(_OWORD *)(v34 - 24) = *(_OWORD *)&v23[v31 - 24];
                *((_QWORD *)v34 - 1) = *(_QWORD *)&v23[v31 - 8];
                *((_QWORD *)v32 - 3) = 0;
                *((_QWORD *)v32 - 2) = 0;
                *((_QWORD *)v32 - 1) = 0;
                v31 -= 144;
              }
              while (&v23[v31] != v25);
              v23 = v60;
              v36 = v61;
              v60 = &v29[v31];
              v61 = v29 + 144;
              v62 = (unint64_t)v30;
              if (v36 == v23)
              {
                a1 = v42;
              }
              else
              {
                a1 = v42;
                do
                  v36 = (char *)sub_22391679C((_QWORD *)v36 - 18);
                while (v36 != v23);
              }
              v5 = v43;
              if (!v23)
                goto LABEL_56;
            }
            operator delete(v23);
          }
          else
          {
            *(_DWORD *)v61 = v22;
            *((_DWORD *)v23 + 28) = 0;
            *((_QWORD *)v23 + 16) = 0;
            *((_QWORD *)v23 + 17) = 0;
            *((_QWORD *)v23 + 15) = 0;
            *(_OWORD *)(v23 + 8) = 0u;
            *(_OWORD *)(v23 + 24) = 0u;
            *(_OWORD *)(v23 + 40) = 0u;
            *(_OWORD *)(v23 + 56) = 0u;
            *(_OWORD *)(v23 + 72) = 0u;
            *(_OWORD *)(v23 + 88) = 0u;
            v24 = v23 + 144;
            *(_QWORD *)(v23 + 101) = 0;
          }
LABEL_56:
          v61 = v24;
          sub_2239A0CE8(&v55, a1, v5, v11, (uint64_t)(v24 - 144), 0.9, a2);
          sub_22391679C(&v55);
        }
      }
    }
    v7 += 144;
  }
  while (v7 != v8);
  v37 = (uint64_t)v60;
  v6 = v41;
  if (v41 != (void **)&v60)
  {
LABEL_60:
    sub_2239AEF20(v6, v37, (uint64_t)v61, 0x8E38E38E38E38E39 * ((uint64_t)&v61[-v37] >> 4));
    v37 = (uint64_t)v60;
  }
LABEL_61:
  if (v37)
  {
    v38 = v61;
    v39 = (void *)v37;
    if (v61 != (char *)v37)
    {
      do
        v38 = sub_22391679C(v38 - 18);
      while (v38 != (_QWORD *)v37);
      v39 = v60;
    }
    v61 = (char *)v37;
    operator delete(v39);
  }
  return kdebug_trace();
}

void sub_223A0E708(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2239AAA98((void **)(v1 - 248));
  sub_2231874DC(v1 - 208);
  _Unwind_Resume(a1);
}

void sub_223A0E724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;

  sub_22391679C(&a38);
  sub_2239AAA98((void **)(v38 - 248));
  sub_2231874DC(v38 - 208);
  _Unwind_Resume(a1);
}

void sub_223A0E770(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *i;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  float v12;
  unsigned __int8 v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  const char *v19;
  size_t v20;
  unint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  float v30;
  float v31;
  unsigned __int8 v32;
  const char *v33;
  size_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  _QWORD *v44;
  unint64_t *v45;
  char *v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  void *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  _OWORD *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char **v64;
  char *v65;
  uint64_t j;
  uint64_t v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  uint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *p_shared_owners;
  unint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  _QWORD *v103;
  const char *v104;
  unint64_t v105;
  uint64_t *v108[3];
  int v109;
  const char *v110;
  int v111;
  const char *v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE object[24];
  __int128 v118;
  void *__p[2];
  unint64_t v120;
  char v121;
  _BYTE v122[24];
  double v123;
  char *v124;
  uint64_t v125;

  v125 = *MEMORY[0x24BDAC8D0];
  v2 = (_QWORD *)a2[5];
  v103 = a2 + 5;
  for (i = (_QWORD *)a2[6]; i != v2; i = sub_2232959C0(i - 20))
    ;
  a2[6] = v2;
  v4 = *(_QWORD *)(a1 + 136) - *(_QWORD *)(a1 + 128);
  if (v4)
  {
    v5 = 0;
    v6 = 0x8E38E38E38E38E39 * (v4 >> 4);
    v105 = v6;
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 128);
      v8 = v7 + 144 * v5;
      v9 = (_DWORD *)(v8 + 104);
      if (*(float *)(v8 + 104) >= 0.0)
      {
        v10 = v7 + 144 * v5;
        v12 = *(float *)(v10 + 112);
        v11 = (_DWORD *)(v10 + 112);
        if (v12 >= 0.5)
        {
          v22 = (_OWORD *)a2[6];
          v21 = a2[7];
          if ((unint64_t)v22 >= v21)
          {
            v24 = (_OWORD *)*v103;
            v25 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v22 - *v103) >> 5);
            v26 = v25 + 1;
            if (v25 + 1 > 0x199999999999999)
              sub_22329A3C4();
            v27 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v21 - (_QWORD)v24) >> 5);
            if (2 * v27 > v26)
              v26 = 2 * v27;
            if (v27 >= 0xCCCCCCCCCCCCCCLL)
              v28 = 0x199999999999999;
            else
              v28 = v26;
            if (v28)
            {
              if (v28 > 0x199999999999999)
                sub_223174E94();
              v29 = (char *)operator new(160 * v28);
            }
            else
            {
              v29 = 0;
            }
            v54 = &v29[160 * v25];
            *((_OWORD *)v54 + 8) = 0u;
            *((_OWORD *)v54 + 9) = 0u;
            *((_OWORD *)v54 + 6) = 0u;
            *((_OWORD *)v54 + 7) = 0u;
            v55 = &v29[160 * v28];
            *((_OWORD *)v54 + 4) = 0u;
            *((_OWORD *)v54 + 5) = 0u;
            *((_OWORD *)v54 + 2) = 0u;
            *((_OWORD *)v54 + 3) = 0u;
            *(_OWORD *)v54 = 0u;
            *((_OWORD *)v54 + 1) = 0u;
            v23 = v54 + 160;
            if (v22 == v24)
            {
              a2[5] = v54;
              a2[6] = v23;
              a2[7] = v55;
              if (!v22)
                goto LABEL_80;
            }
            else
            {
              v56 = 0;
              do
              {
                v57 = &v54[v56 * 16];
                v58 = &v22[v56];
                v59 = v22[v56 - 10];
                *((_QWORD *)v57 - 18) = 0;
                *((_QWORD *)v57 - 17) = 0;
                *((_DWORD *)v57 - 40) = v59;
                *(_OWORD *)(v57 - 152) = *(_OWORD *)((char *)&v22[v56 - 9] - 8);
                *((_QWORD *)v57 - 17) = *((_QWORD *)&v22[v56 - 8] - 1);
                *((_QWORD *)v58 - 19) = 0;
                *((_QWORD *)v58 - 18) = 0;
                *((_QWORD *)v58 - 17) = 0;
                *((_QWORD *)v57 - 15) = 0;
                *((_QWORD *)v57 - 14) = 0;
                *((_OWORD *)v57 - 8) = v22[v56 - 8];
                *((_QWORD *)v57 - 14) = *(_QWORD *)&v22[v56 - 7];
                *((_QWORD *)v58 - 16) = 0;
                *((_QWORD *)v58 - 15) = 0;
                *((_QWORD *)v58 - 14) = 0;
                *((_QWORD *)v57 - 12) = 0;
                *((_QWORD *)v57 - 11) = 0;
                *(_OWORD *)(v57 - 104) = *(_OWORD *)((char *)&v22[v56 - 6] - 8);
                *((_QWORD *)v57 - 11) = *((_QWORD *)&v22[v56 - 5] - 1);
                *((_QWORD *)v58 - 13) = 0;
                *((_QWORD *)v58 - 12) = 0;
                *((_QWORD *)v58 - 11) = 0;
                *((_QWORD *)v57 - 9) = 0;
                *((_QWORD *)v57 - 8) = 0;
                *((_OWORD *)v57 - 5) = v22[v56 - 5];
                *((_QWORD *)v57 - 8) = *(_QWORD *)&v22[v56 - 4];
                *((_QWORD *)v58 - 10) = 0;
                *((_QWORD *)v58 - 9) = 0;
                v60 = *((_QWORD *)&v22[v56 - 3] - 1);
                v61 = *(_QWORD *)((char *)&v22[v56 - 3] - 3);
                *((_QWORD *)v58 - 8) = 0;
                *(_QWORD *)(v57 - 51) = v61;
                *((_QWORD *)v57 - 7) = v60;
                *((_QWORD *)v57 - 4) = 0;
                *((_QWORD *)v57 - 3) = 0;
                *(_OWORD *)(v57 - 40) = *(_OWORD *)((char *)&v22[v56 - 2] - 8);
                *((_QWORD *)v57 - 3) = *((_QWORD *)&v22[v56 - 1] - 1);
                *((_QWORD *)v58 - 5) = 0;
                *((_QWORD *)v58 - 4) = 0;
                *((_QWORD *)v58 - 3) = 0;
                v62 = *(_QWORD *)&v22[v56 - 1];
                *(_QWORD *)(v57 - 11) = *(_QWORD *)((char *)&v22[v56 - 1] + 5);
                *((_QWORD *)v57 - 2) = v62;
                v56 -= 10;
              }
              while (&v22[v56] != v24);
              v22 = (_OWORD *)a2[5];
              v63 = (_QWORD *)a2[6];
              a2[5] = &v54[v56 * 16];
              a2[6] = v23;
              for (a2[7] = v55; v63 != (_QWORD *)v22; v63 = sub_2232959C0(v63 - 20))
                ;
              if (!v22)
                goto LABEL_80;
            }
            operator delete(v22);
          }
          else
          {
            v22[8] = 0u;
            v22[9] = 0u;
            v22[6] = 0u;
            v22[7] = 0u;
            v22[4] = 0u;
            v22[5] = 0u;
            v22[2] = 0u;
            v22[3] = 0u;
            v23 = v22 + 10;
            *v22 = 0u;
            v22[1] = 0u;
          }
LABEL_80:
          a2[6] = v23;
          v64 = (char **)(v7 + 144 * v5 + 56);
          if ((char **)((char *)v23 - 152) != v64)
          {
            v65 = *(char **)(v7 + 144 * v5 + 64);
            sub_2233320C8((_QWORD *)v23 - 19, *v64, v65, (v65 - *v64) >> 3);
            sub_22362017C((uint64_t)(v23 - 8), *(char ***)(v7 + 144 * v5 + 80), *(_QWORD *)(v7 + 144 * v5 + 88), 0xAAAAAAAAAAAAAAABLL* ((uint64_t)(*(_QWORD *)(v7 + 144 * v5 + 88)- *(_QWORD *)(v7 + 144 * v5 + 80)) >> 3));
          }
          *((_DWORD *)v23 - 40) = 0;
          *v11 = 1065353216;
          *((_DWORD *)v23 - 12) = *v9;
          *((_DWORD *)v23 - 14) = 1065353216;
          *((_BYTE *)v23 - 44) = *(_BYTE *)(v7 + 144 * v5 + 4);
          LODWORD(v108[0]) = 0;
          *(_DWORD *)v122 = 0;
          *(_QWORD *)object = a1;
          *(_QWORD *)&object[8] = v23 - 10;
          *(_QWORD *)&object[16] = v108;
          *(_QWORD *)&v118 = v122;
          sub_223A134D0(object, *(unsigned int **)(v8 + 32), *(unsigned int **)(v8 + 40));
          v67 = *(_QWORD *)(v8 + 120);
          for (j = *(_QWORD *)(v8 + 128); v67 != j; v67 += 144)
            sub_223A134D0(object, *(unsigned int **)(v67 + 32), *(unsigned int **)(v67 + 40));
          *((float *)v23 - 13) = *(float *)v108 / *(float *)v122;
          v6 = v105;
          goto LABEL_6;
        }
      }
      v13 = atomic_load((unsigned __int8 *)&qword_2540CCB18);
      if ((v13 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCB18))
      {
        sub_22455F53C(v108);
        sub_223174DE4(object, "cv3dapi.recon3d");
        sub_2232300E0(v108, (uint64_t)object, &qword_2540CCB10);
        if ((object[23] & 0x80000000) != 0)
          operator delete(*(void **)object);
        __cxa_guard_release(&qword_2540CCB18);
        v6 = v105;
      }
      v115 = qword_2540CCB10;
      if (**(int **)(qword_2540CCB10 + 56) <= 4)
      {
        v14 = *(unsigned __int8 *)(qword_2540CCB10 + 72);
        v15 = sub_22322F254(qword_2540CCB10, "OSLogSurrogateAppender", 1, 0);
        v16 = v15;
        if (v14 || v15 != 0)
          break;
      }
LABEL_6:
      if (++v5 == v6)
        return;
    }
    v108[0] = &v115;
    v108[1] = (uint64_t *)std::chrono::steady_clock::now().__d_.__rep_;
    v108[2] = (uint64_t *)std::chrono::system_clock::now().__d_.__rep_;
    v109 = 4;
    v110 = "unknown file";
    v111 = 767;
    v112 = "unknown function";
    v113 = 0;
    v114 = 0;
    v18 = *v108[0];
    v19 = (const char *)(*v108[0] + 16);
    v104 = v19;
    if (*(char *)(*v108[0] + 39) < 0)
    {
      v19 = *(const char **)(v18 + 16);
      v20 = *(_QWORD *)(v18 + 24);
    }
    else
    {
      v20 = *(unsigned __int8 *)(*v108[0] + 39);
    }
    v30 = *(float *)v9;
    v31 = *(float *)(v7 + 144 * v5 + 112);
    v32 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v32 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)v122);
      sub_223199C58("com.apple.cv3d", (unint64_t)v122, &xmmword_255788F40);
      if (LOBYTE(v123) && (v122[23] & 0x80000000) != 0)
        operator delete(*(void **)v122);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
    if (byte_255788F57 >= 0)
      v33 = (const char *)&xmmword_255788F40;
    else
      v33 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v34 = byte_255788F57;
    else
      v34 = *((_QWORD *)&xmmword_255788F40 + 1);
    *(_QWORD *)object = os_log_create(v33, v19);
    if (v34 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v34 >= 0x17)
    {
      v36 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v34 | 7) != 0x17)
        v36 = v34 | 7;
      v37 = v36 + 1;
      v35 = operator new(v36 + 1);
      *(_QWORD *)&object[16] = v34;
      *(_QWORD *)&v118 = v37 | 0x8000000000000000;
      *(_QWORD *)&object[8] = v35;
    }
    else
    {
      BYTE7(v118) = v34;
      v35 = &object[8];
      if (!v34)
      {
LABEL_44:
        v35[v34] = 0;
        BYTE8(v118) = 1;
        if (v20 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v20 >= 0x17)
        {
          v40 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v20 | 7) != 0x17)
            v40 = v20 | 7;
          v41 = v40 + 1;
          v38 = operator new(v40 + 1);
          __p[1] = (void *)v20;
          v120 = v41 | 0x8000000000000000;
          __p[0] = v38;
        }
        else
        {
          HIBYTE(v120) = v20;
          v38 = __p;
          if (!v20)
          {
            LOBYTE(__p[0]) = 0;
            v121 = 1;
            v39 = *(NSObject **)object;
            if ((SHIBYTE(v120) & 0x80000000) == 0)
              goto LABEL_48;
            goto LABEL_54;
          }
        }
        memmove(v38, v19, v20);
        *((_BYTE *)v38 + v20) = 0;
        v121 = 1;
        v39 = *(NSObject **)object;
        if ((SHIBYTE(v120) & 0x80000000) == 0)
        {
LABEL_48:
          if (!BYTE8(v118))
            goto LABEL_57;
          goto LABEL_55;
        }
LABEL_54:
        operator delete(__p[0]);
        if (!BYTE8(v118))
          goto LABEL_57;
LABEL_55:
        if (SBYTE7(v118) < 0)
          operator delete(*(void **)&object[8]);
LABEL_57:
        if (*(_QWORD *)object)
          os_release(*(void **)object);
        if (!v16 || !*(_QWORD *)(v16 + 24))
        {
          os_log_type_enabled(v39, OS_LOG_TYPE_ERROR);
          if (!v14)
          {
            *(_DWORD *)object = 136381187;
            *(_QWORD *)&object[4] = "simplification";
            *(_WORD *)&object[12] = 2048;
            *(double *)&object[14] = v30;
            *(_WORD *)&object[22] = 2048;
            *(double *)&v118 = v31;
            LODWORD(v102) = 32;
            v101 = object;
            v53 = (void *)_os_log_send_and_compose_impl();
            if (!v53)
            {
LABEL_139:
              sub_223182C08((uint64_t)v108);
              v98 = v114;
              v6 = v105;
              if (v114)
              {
                p_shared_owners = (unint64_t *)&v114->__shared_owners_;
                do
                  v100 = __ldaxr(p_shared_owners);
                while (__stlxr(v100 - 1, p_shared_owners));
                if (!v100)
                {
                  ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                  std::__shared_weak_count::__release_weak(v98);
                }
              }
              goto LABEL_6;
            }
LABEL_138:
            free(v53);
            goto LABEL_139;
          }
          *(_DWORD *)object = 136381187;
          *(_QWORD *)&object[4] = "simplification";
          *(_WORD *)&object[12] = 2048;
          *(double *)&object[14] = v30;
          *(_WORD *)&object[22] = 2048;
          *(double *)&v118 = v31;
          LODWORD(v102) = 32;
          v53 = (void *)_os_log_send_and_compose_impl();
          sub_22322C138((uint64_t)v108, (char *)v53, object, v102);
          goto LABEL_136;
        }
        v42 = _os_log_pack_size();
        v43 = operator new(v42, (std::align_val_t)8uLL);
        v44 = (_QWORD *)operator new();
        v44[1] = 0;
        v45 = v44 + 1;
        *v44 = &off_24EC1F7F0;
        v44[2] = 0;
        v44[3] = v43;
        *(_QWORD *)v122 = v43;
        *(_QWORD *)&v122[8] = v43;
        *(_QWORD *)&v122[16] = v44;
        v123 = 0.0;
        v124 = 0;
        v46 = (char *)operator new(0x40uLL);
        v47 = (std::__shared_weak_count *)v46;
        *((_QWORD *)v46 + 1) = 0;
        v48 = (unint64_t *)(v46 + 8);
        *((_QWORD *)v46 + 2) = 0;
        *((_QWORD *)v46 + 3) = off_24EC1F890;
        *(_QWORD *)v46 = &off_24EC1F840;
        strcpy(v46 + 32, "simplification");
        *(_QWORD *)(v46 + 47) = 0;
        v46[55] = 14;
        *(_QWORD *)&v123 = v46 + 24;
        v124 = v46;
        *(_QWORD *)object = v43;
        *(_QWORD *)&object[8] = v43;
        *(_QWORD *)&object[16] = v44;
        do
          v49 = __ldxr(v45);
        while (__stxr(v49 + 1, v45));
        *(_QWORD *)&v118 = v46 + 24;
        *((_QWORD *)&v118 + 1) = v46;
        do
          v50 = __ldxr(v48);
        while (__stxr(v50 + 1, v48));
        __p[0] = v46 + 24;
        do
          v51 = __ldaxr(v48);
        while (__stlxr(v51 - 1, v48));
        if (v51)
        {
          v52 = *(std::__shared_weak_count **)&v122[16];
          if (!*(_QWORD *)&v122[16])
            goto LABEL_94;
        }
        else
        {
          (*(void (**)(char *))(*(_QWORD *)v46 + 16))(v46);
          std::__shared_weak_count::__release_weak(v47);
          v52 = *(std::__shared_weak_count **)&v122[16];
          if (!*(_QWORD *)&v122[16])
            goto LABEL_94;
        }
        v68 = (unint64_t *)&v52->__shared_owners_;
        do
          v69 = __ldaxr(v68);
        while (__stlxr(v69 - 1, v68));
        if (!v69)
        {
          ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
          std::__shared_weak_count::__release_weak(v52);
        }
LABEL_94:
        v70 = *(_QWORD *)object;
        if (*((char *)__p[0] + 31) >= 0)
          v71 = (char *)__p[0] + 8;
        else
          v71 = (char *)*((_QWORD *)__p[0] + 1);
        v72 = _os_log_pack_fill();
        v73 = v30;
        *(_DWORD *)v72 = 136381187;
        v74 = v31;
        *(_QWORD *)(v72 + 4) = v71;
        *(_WORD *)(v72 + 12) = 2048;
        *(double *)(v72 + 14) = v73;
        *(_WORD *)(v72 + 22) = 2048;
        *(double *)(v72 + 24) = v74;
        v75 = operator new();
        v76 = *(unsigned __int8 *)(v18 + 39);
        v77 = v104;
        if ((v76 & 0x80u) != 0)
        {
          v77 = *(const char **)(v18 + 16);
          v76 = *(_QWORD *)(v18 + 24);
        }
        *(_QWORD *)v75 = v70;
        *(_OWORD *)(v75 + 8) = *(_OWORD *)&object[8];
        *(_QWORD *)&object[8] = 0;
        *(_QWORD *)&object[16] = 0;
        *(_OWORD *)(v75 + 24) = v118;
        v118 = 0uLL;
        *(_QWORD *)(v75 + 40) = v77;
        *(_QWORD *)(v75 + 48) = v76;
        *(_BYTE *)(v75 + 56) = 16;
        v116 = 0;
        *(_QWORD *)v122 = v75;
        (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v16 + 24) + 40))(*(_QWORD *)(v16 + 24), v122);
        v78 = *(_QWORD *)v122;
        *(_QWORD *)v122 = 0;
        if (v78)
        {
          v79 = *(std::__shared_weak_count **)(v78 + 32);
          if (v79)
          {
            v80 = (unint64_t *)&v79->__shared_owners_;
            do
              v81 = __ldaxr(v80);
            while (__stlxr(v81 - 1, v80));
            if (!v81)
            {
              ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
              std::__shared_weak_count::__release_weak(v79);
            }
          }
          v82 = *(std::__shared_weak_count **)(v78 + 16);
          if (v82)
          {
            v83 = (unint64_t *)&v82->__shared_owners_;
            do
              v84 = __ldaxr(v83);
            while (__stlxr(v84 - 1, v83));
            if (!v84)
            {
              ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
              std::__shared_weak_count::__release_weak(v82);
            }
          }
          MEMORY[0x227684CE8](v78, 0x10F0C40B62ED6C6);
          v85 = v116;
          v116 = 0;
          if (v85)
          {
            v86 = *(std::__shared_weak_count **)(v85 + 32);
            if (v86)
            {
              v87 = (unint64_t *)&v86->__shared_owners_;
              do
                v88 = __ldaxr(v87);
              while (__stlxr(v88 - 1, v87));
              if (!v88)
              {
                ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                std::__shared_weak_count::__release_weak(v86);
              }
            }
            v89 = *(std::__shared_weak_count **)(v85 + 16);
            if (v89)
            {
              v90 = (unint64_t *)&v89->__shared_owners_;
              do
                v91 = __ldaxr(v90);
              while (__stlxr(v91 - 1, v90));
              if (!v91)
              {
                ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
                std::__shared_weak_count::__release_weak(v89);
              }
            }
            MEMORY[0x227684CE8](v85, 0x10F0C40B62ED6C6);
          }
        }
        if (v14)
        {
          *(_DWORD *)v122 = 136381187;
          *(_QWORD *)&v122[4] = "simplification";
          *(_WORD *)&v122[12] = 2048;
          *(double *)&v122[14] = v73;
          *(_WORD *)&v122[22] = 2048;
          v123 = v74;
          LODWORD(v102) = 32;
          v101 = v122;
          v53 = (void *)_os_log_send_and_compose_impl();
          v92 = (std::__shared_weak_count *)*((_QWORD *)&v118 + 1);
          if (!*((_QWORD *)&v118 + 1))
          {
LABEL_130:
            v95 = *(std::__shared_weak_count **)&object[16];
            if (!*(_QWORD *)&object[16])
              goto LABEL_134;
            v96 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
            do
              v97 = __ldaxr(v96);
            while (__stlxr(v97 - 1, v96));
            if (!v97)
            {
              ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
              std::__shared_weak_count::__release_weak(v95);
              if (!v14)
              {
LABEL_137:
                if (!v53)
                  goto LABEL_139;
                goto LABEL_138;
              }
            }
            else
            {
LABEL_134:
              if (!v14)
                goto LABEL_137;
            }
            sub_22322C138((uint64_t)v108, (char *)v53, v101, v102);
LABEL_136:
            sub_223182C08((uint64_t)v108);
            goto LABEL_137;
          }
        }
        else
        {
          v53 = 0;
          v92 = (std::__shared_weak_count *)*((_QWORD *)&v118 + 1);
          if (!*((_QWORD *)&v118 + 1))
            goto LABEL_130;
        }
        v93 = (unint64_t *)&v92->__shared_owners_;
        do
          v94 = __ldaxr(v93);
        while (__stlxr(v94 - 1, v93));
        if (!v94)
        {
          ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
          std::__shared_weak_count::__release_weak(v92);
        }
        goto LABEL_130;
      }
    }
    memmove(v35, v33, v34);
    goto LABEL_44;
  }
}

void sub_223A0F4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  if (*(_BYTE *)(v16 - 152))
  {
    if (*(char *)(v16 - 153) < 0)
      operator delete(*(void **)(v16 - 176));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223A0F53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CCB18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CCB18);
  _Unwind_Resume(a1);
}

void sub_223A0F594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  sub_22319A054((uint64_t *)(v35 - 176));
  sub_22319A054(&a34);
  sub_223199DE8((uint64_t)&a35);
  sub_223182DAC((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_223A0F5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  sub_223199DE8(v16 - 176);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223A0F5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  MEMORY[0x227684CE8](v16, 0x10D0C40B950D02ALL);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223A0F610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223A0F624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *object,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,char a42)
{
  if (a41 < 0)
    operator delete(__p);
  if (object)
    os_release(object);
  sub_223182DAC((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void sub_223A0F6AC()
{
  JUMPOUT(0x223A0F6B4);
}

void sub_223A0F6BC(uint64_t a1, _QWORD *a2, int **a3, _QWORD *a4, __n128 a5)
{
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  _QWORD *v14;
  _QWORD *v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  int *v38;
  int v39;
  unsigned int *v40;
  unsigned int *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int *v66;
  unint64_t v67;
  uint64_t v68;
  unsigned int *v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  int64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  float v104;
  _QWORD *v105;
  int v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  uint8x8_t v112;
  unint64_t v113;
  uint64_t **v114;
  uint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  int v118;
  _QWORD *v119;
  unsigned int v120;
  int8x8_t v121;
  int v122;
  unint64_t v123;
  uint8x8_t v124;
  uint64_t v125;
  uint64_t **v126;
  uint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  unsigned __int8 v130;
  uint64_t v131;
  uint64_t i;
  unsigned __int8 v133;
  uint8x8_t v134;
  unint64_t v135;
  uint64_t **v136;
  uint64_t *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  float *v141;
  unsigned int *v142;
  unsigned int *v143;
  float v144;
  uint64_t v145;
  unsigned int v146;
  int *v147;
  int *v148;
  int v149;
  int v150;
  int v151;
  int *v154;
  unint64_t v155;
  uint8x8_t v156;
  unint64_t v157;
  uint64_t **v158;
  uint64_t *v159;
  unint64_t v160;
  uint64_t v161;
  float v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  char *v166;
  char *v167;
  char *j;
  uint64_t v169;
  int v170;
  unint64_t v171;
  float *v172;
  float v173;
  float *v174;
  uint64_t v175;
  int v176;
  float *v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  char *v181;
  uint64_t *v182;
  unint64_t v183;
  unint64_t v184;
  char *v185;
  char *v186;
  uint64_t *v187;
  char *v188;
  char v189;
  uint64_t v190;
  _QWORD *v191;
  int v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  unint64_t v199;
  _BYTE *v200;
  char *v201;
  int64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  _OWORD *v207;
  char *v208;
  uint64_t v209;
  __int128 v210;
  int v211;
  int *v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  unsigned int *v219;
  unint64_t v220;
  unint64_t v221;
  char *v222;
  char *v223;
  unsigned int *v224;
  uint64_t v225;
  unsigned int v226;
  char *v227;
  _QWORD *v228;
  _QWORD *v229;
  void *v230;
  _QWORD *v231;
  _QWORD *v232;
  void *v233;
  _QWORD *v234;
  _QWORD *v235;
  void *v236;
  unsigned int *v237;
  unsigned int *v238;
  char *v239;
  uint64_t v240;
  int v241;
  uint64_t v242;
  _BYTE *v243;
  int v244;
  char *v245;
  char *v246;
  int64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  unint64_t v251;
  char *v252;
  char *v253;
  int64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  char *v260;
  uint64_t v261;
  __int128 v262;
  int v263;
  char *v264;
  char *v265;
  int *v266;
  unint64_t v267;
  char *v268;
  uint64_t v269;
  unsigned int *v270;
  uint64_t v271;
  int *v272;
  int v273;
  unsigned int *v274;
  unsigned int *v275;
  unsigned int v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  int v280;
  int *v281;
  int *v282;
  _QWORD *v283;
  int v284;
  int *v285;
  unint64_t v286;
  unint64_t v287;
  char *v288;
  int *v289;
  int *v290;
  int v291;
  uint64_t v292;
  int *v293;
  _BYTE *v294;
  int v295;
  char *v296;
  uint64_t v297;
  char *v298;
  int64_t v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  unint64_t v303;
  char *v304;
  char *v305;
  int64_t v306;
  unint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char *v312;
  char *v313;
  uint64_t v314;
  __int128 v315;
  int v316;
  unint64_t v317;
  char *v318;
  char *v319;
  char *v320;
  int v321;
  uint64_t v322;
  uint64_t v323;
  int v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  unint64_t v332;
  unint64_t v333;
  uint64_t v334;
  char *v335;
  unint64_t v336;
  char *v337;
  uint64_t v338;
  unsigned int *v339;
  unsigned int *v340;
  uint64_t v341;
  int v342;
  uint64_t v343;
  _BYTE *v344;
  int v345;
  char *v346;
  char *v347;
  int64_t v348;
  uint64_t v349;
  unint64_t v350;
  uint64_t v351;
  unint64_t v352;
  char *v353;
  char *v354;
  int64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  char *v360;
  char *v361;
  uint64_t v362;
  __int128 v363;
  int v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  unsigned int *v371;
  unint64_t v372;
  uint64_t v373;
  unsigned int *v374;
  uint64_t *v375;
  uint64_t *v376;
  uint64_t v377;
  uint64_t *v378;
  uint64_t *v379;
  unint64_t v380;
  unint64_t v381;
  unint64_t v382;
  char *v383;
  char *v384;
  char *v385;
  uint64_t v386;
  int v387;
  unsigned int v388;
  uint64_t *v389;
  char *v390;
  char *v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  int64_t v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  _QWORD *v399;
  _QWORD *v400;
  uint64_t v401;
  int64_t v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unint64_t v407;
  char *v408;
  float v409;
  _QWORD *v410;
  int v411;
  _QWORD *v412;
  uint64_t v413;
  _QWORD *v414;
  uint64_t v415;
  unint64_t v416;
  uint8x8_t v417;
  unint64_t v418;
  uint64_t **v419;
  uint64_t *v420;
  unint64_t v421;
  uint64_t v422;
  int v423;
  _QWORD *v424;
  unsigned int v425;
  int8x8_t v426;
  int v427;
  unint64_t v428;
  uint8x8_t v429;
  uint64_t v430;
  uint64_t **v431;
  uint64_t *v432;
  unint64_t v433;
  uint64_t v434;
  unsigned __int8 v435;
  uint64_t v436;
  uint64_t k;
  unsigned __int8 v438;
  uint8x8_t v439;
  unint64_t v440;
  uint64_t **v441;
  uint64_t *v442;
  uint64_t v443;
  unint64_t v444;
  uint64_t v445;
  float *v446;
  unsigned int *v447;
  unsigned int *v448;
  float v449;
  uint64_t v450;
  unsigned int v451;
  int *v452;
  int *v453;
  int v454;
  int v455;
  int v456;
  int *v459;
  unint64_t v460;
  uint8x8_t v461;
  unint64_t v462;
  uint64_t **v463;
  uint64_t *v464;
  unint64_t v465;
  uint64_t v466;
  float v467;
  unint64_t v468;
  unint64_t v469;
  unint64_t v470;
  char *v471;
  char *v472;
  char *m;
  uint64_t v474;
  int v475;
  unint64_t v476;
  float *v477;
  float v478;
  float *v479;
  uint64_t v480;
  int v481;
  float *v482;
  uint64_t v483;
  uint64_t *v484;
  uint64_t v485;
  uint64_t *v486;
  unint64_t v487;
  unint64_t v488;
  char *v489;
  uint64_t *v490;
  char *v491;
  char v492;
  uint64_t v493;
  _QWORD *v494;
  int v495;
  char *v496;
  uint64_t v497;
  char *v498;
  uint64_t v499;
  unint64_t v500;
  uint64_t v501;
  unint64_t v502;
  _BYTE *v503;
  char *v504;
  int64_t v505;
  unint64_t v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  _OWORD *v510;
  char *v511;
  uint64_t v512;
  __int128 v513;
  int v514;
  int *v515;
  uint64_t v516;
  uint64_t v517;
  int v518;
  uint64_t v519;
  uint64_t v520;
  _QWORD *v521;
  unsigned int *v522;
  unint64_t v523;
  unint64_t v524;
  char *v525;
  char *v526;
  unsigned int *v527;
  uint64_t v528;
  unsigned int v529;
  char *v530;
  _QWORD *v531;
  _QWORD *v532;
  void *v533;
  _QWORD *v534;
  _QWORD *v535;
  void *v536;
  _QWORD *v537;
  _QWORD *v538;
  void *v539;
  char *v540;
  char *v541;
  int *v542;
  unint64_t v543;
  uint64_t v544;
  char *v545;
  unsigned int *v546;
  uint64_t v547;
  int *v548;
  int v549;
  unsigned int *v550;
  unsigned int *v551;
  unint64_t v552;
  uint64_t v553;
  unsigned int *v554;
  unsigned int v555;
  int *v556;
  unint64_t v557;
  uint64_t v558;
  char *v559;
  unsigned int *v560;
  uint64_t v561;
  int *v562;
  int v563;
  _QWORD *v564;
  void *v565;
  char *v567;
  char *v568;
  void *v569;
  unsigned int *v570;
  char *__p;
  uint64_t *v572;
  unsigned int v573;
  uint64_t *v574;
  _QWORD *v575;
  char *v576;
  unsigned int v577;
  char *v578;
  char *v580;
  char *v581;
  char *v582;
  unsigned int *v583;
  unsigned int *v584;
  char *v585;
  char *v586;
  char *v587;
  char *v588;
  char *v589;
  void *v590;
  unsigned int *v591;
  uint64_t v592;
  void *v593;
  unsigned int *v594;
  uint64_t v595;
  void *v596;
  char *v597;
  char *v598;
  _BYTE v599[12];
  uint64_t v600;
  uint64_t *v601;
  uint64_t *v602;
  unint64_t v603;
  void *v604[2];
  void *v605[2];
  int v606;
  __int128 v607;
  __int128 v608;
  int v609;
  __int128 v610;
  __int128 v611;
  int v612;
  uint64_t v613;
  int v614;
  _QWORD *v615;
  unsigned int v616;

  v596 = 0;
  v597 = 0;
  v598 = 0;
  v593 = 0;
  v594 = 0;
  v595 = 0;
  v590 = 0;
  v591 = 0;
  v592 = 0;
  if (!sub_22399FA20(a1, a3, (uint64_t)&v593, (uint64_t)&v590, (uint64_t)&v596, a5))
  {
    v31 = v597;
    if (v596 != v597)
    {
      v32 = *a3;
      v33 = v597 - (_BYTE *)v596 - 4;
      v34 = (char *)v596;
      if (v33 < 4)
        goto LABEL_921;
      v35 = (v33 >> 2) + 1;
      v34 = (char *)v596 + 4 * (v35 & 0x7FFFFFFFFFFFFFFELL);
      v36 = (unsigned int *)((char *)v596 + 4);
      v37 = v35 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v38 = &v32[24 * *v36];
        LOBYTE(v32[24 * *(v36 - 1) + 1]) = 1;
        *((_BYTE *)v38 + 4) = 1;
        v36 += 2;
        v37 -= 2;
      }
      while (v37);
      if (v35 != (v35 & 0x7FFFFFFFFFFFFFFELL))
      {
LABEL_921:
        do
        {
          v39 = *(_DWORD *)v34;
          v34 += 4;
          LOBYTE(v32[24 * v39 + 1]) = 1;
        }
        while (v34 != v31);
      }
    }
    goto LABEL_866;
  }
  v575 = a4;
  v564 = a2;
  v7 = (unsigned int *)v593;
  v8 = v594;
  if (v593 != v594)
  {
    v9 = 0;
    v10 = 0;
    __p = 0;
    while (1)
    {
      v13 = &(*a3)[24 * *v7];
      v14 = v13 + 2;
      v15 = v13 + 5;
      if (v13[3] <= v13[6])
      {
        v16 = *v13;
        *(_QWORD *)&v610 = *v14;
        DWORD2(v610) = v13[4];
        *(_QWORD *)&v607 = *v15;
        DWORD2(v607) = v13[7];
        if (v10 < v9)
        {
LABEL_4:
          *(_DWORD *)v10 = v16;
          v11 = v610;
          *((_DWORD *)v10 + 3) = DWORD2(v610);
          *(_QWORD *)(v10 + 4) = v11;
          *((_QWORD *)v10 + 2) = v607;
          *((_DWORD *)v10 + 6) = DWORD2(v607);
          v12 = v10 + 28;
          goto LABEL_5;
        }
        v20 = 0x6DB6DB6DB6DB6DB7 * ((v10 - __p) >> 2) + 1;
        if (v20 > 0x924924924924924)
          sub_22316E078();
        if (0xDB6DB6DB6DB6DB6ELL * ((v9 - __p) >> 2) > v20)
          v20 = 0xDB6DB6DB6DB6DB6ELL * ((v9 - __p) >> 2);
        if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v9 - __p) >> 2)) >= 0x492492492492492)
          v18 = 0x924924924924924;
        else
          v18 = v20;
        if (v18)
        {
          if (v18 > 0x924924924924924)
            sub_223174E94();
          v19 = (char *)operator new(28 * v18);
        }
        else
        {
          v19 = 0;
        }
        v21 = &v19[4 * ((v10 - __p) >> 2)];
        *(_DWORD *)v21 = v16;
        *(_QWORD *)(v21 + 4) = v610;
        *((_DWORD *)v21 + 3) = DWORD2(v610);
        *((_QWORD *)v21 + 2) = v607;
        *((_DWORD *)v21 + 6) = DWORD2(v607);
        if (v10 != __p)
        {
          v22 = &v19[4 * ((v10 - __p) >> 2)];
          v23 = __p;
          do
          {
            v27 = *((_DWORD *)v10 - 7);
            v10 -= 28;
            *((_DWORD *)v22 - 7) = v27;
            v22 -= 28;
            v28 = *(_QWORD *)(v10 + 4);
            *((_DWORD *)v22 + 3) = *((_DWORD *)v10 + 3);
            *(_QWORD *)(v22 + 4) = v28;
            v29 = *((_QWORD *)v10 + 2);
            *((_DWORD *)v22 + 6) = *((_DWORD *)v10 + 6);
            *((_QWORD *)v22 + 2) = v29;
          }
          while (v10 != __p);
LABEL_36:
          v10 = v23;
          __p = v22;
          v9 = &v19[28 * v18];
          v12 = v21 + 28;
          if (!v23)
            goto LABEL_5;
LABEL_39:
          v30 = v9;
          operator delete(v10);
          v9 = v30;
          goto LABEL_5;
        }
      }
      else
      {
        v16 = *v13;
        *(_QWORD *)&v610 = *v15;
        DWORD2(v610) = v13[7];
        *(_QWORD *)&v607 = *v14;
        DWORD2(v607) = v13[4];
        if (v10 < v9)
          goto LABEL_4;
        v17 = 0x6DB6DB6DB6DB6DB7 * ((v10 - __p) >> 2) + 1;
        if (v17 > 0x924924924924924)
          sub_22316E078();
        if (0xDB6DB6DB6DB6DB6ELL * ((v9 - __p) >> 2) > v17)
          v17 = 0xDB6DB6DB6DB6DB6ELL * ((v9 - __p) >> 2);
        if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v9 - __p) >> 2)) >= 0x492492492492492)
          v18 = 0x924924924924924;
        else
          v18 = v17;
        if (v18)
        {
          if (v18 > 0x924924924924924)
            sub_223174E94();
          v19 = (char *)operator new(28 * v18);
        }
        else
        {
          v19 = 0;
        }
        v21 = &v19[4 * ((v10 - __p) >> 2)];
        *(_DWORD *)v21 = v16;
        *(_QWORD *)(v21 + 4) = v610;
        *((_DWORD *)v21 + 3) = DWORD2(v610);
        *((_QWORD *)v21 + 2) = v607;
        *((_DWORD *)v21 + 6) = DWORD2(v607);
        if (v10 != __p)
        {
          v22 = &v19[4 * ((v10 - __p) >> 2)];
          v23 = __p;
          do
          {
            v24 = *((_DWORD *)v10 - 7);
            v10 -= 28;
            *((_DWORD *)v22 - 7) = v24;
            v22 -= 28;
            v25 = *(_QWORD *)(v10 + 4);
            *((_DWORD *)v22 + 3) = *((_DWORD *)v10 + 3);
            *(_QWORD *)(v22 + 4) = v25;
            v26 = *((_QWORD *)v10 + 2);
            *((_DWORD *)v22 + 6) = *((_DWORD *)v10 + 6);
            *((_QWORD *)v22 + 2) = v26;
          }
          while (v10 != __p);
          goto LABEL_36;
        }
      }
      __p = v21;
      v9 = &v19[28 * v18];
      v12 = v21 + 28;
      if (v10)
        goto LABEL_39;
LABEL_5:
      ++v7;
      v10 = v12;
      if (v7 == v8)
        goto LABEL_48;
    }
  }
  v9 = 0;
  v12 = 0;
  __p = 0;
LABEL_48:
  v567 = v9;
  v586 = 0;
  v587 = 0;
  v589 = 0;
  v40 = (unsigned int *)v590;
  v41 = v591;
  if (v590 != v591)
  {
    v42 = 0;
    do
    {
      while (1)
      {
        v44 = (uint64_t)&(*a3)[24 * *v40];
        if (*(_DWORD *)(v44 + 12) > *(_DWORD *)(v44 + 24))
          break;
        v45 = v44 + 20;
        if (v42 >= v589)
        {
          v49 = 0xAAAAAAAAAAAAAAABLL * ((v42 - v586) >> 2) + 1;
          if (v49 > 0x1555555555555555)
LABEL_883:
            sub_22316E078();
          if (0x5555555555555556 * ((v589 - v586) >> 2) > v49)
            v49 = 0x5555555555555556 * ((v589 - v586) >> 2);
          if (0xAAAAAAAAAAAAAAABLL * ((v589 - v586) >> 2) >= 0xAAAAAAAAAAAAAAALL)
            v47 = 0x1555555555555555;
          else
            v47 = v49;
          if (v47)
          {
            if (v47 > 0x1555555555555555)
LABEL_885:
              sub_223174E94();
            v48 = (char *)operator new(12 * v47);
          }
          else
          {
            v48 = 0;
          }
          v55 = *(_QWORD *)v45;
          v51 = &v48[4 * ((v42 - v586) >> 2)];
          *((_DWORD *)v51 + 2) = *(_DWORD *)(v45 + 8);
          *(_QWORD *)v51 = v55;
          v52 = v51;
          if (v42 == v586)
            goto LABEL_80;
          do
          {
            v56 = *(_QWORD *)(v42 - 12);
            v42 -= 12;
            v57 = *((_DWORD *)v42 + 2);
            *(_QWORD *)(v52 - 12) = v56;
            v52 -= 12;
            *((_DWORD *)v52 + 2) = v57;
          }
          while (v42 != v586);
          goto LABEL_79;
        }
LABEL_50:
        v43 = *(_QWORD *)v45;
        *((_DWORD *)v42 + 2) = *(_DWORD *)(v45 + 8);
        *(_QWORD *)v42 = v43;
        v587 = v42 + 12;
        ++v40;
        v42 += 12;
        if (v40 == v41)
          goto LABEL_83;
      }
      v45 = v44 + 8;
      if (v42 < v589)
        goto LABEL_50;
      v46 = 0xAAAAAAAAAAAAAAABLL * ((v42 - v586) >> 2) + 1;
      if (v46 > 0x1555555555555555)
        goto LABEL_883;
      if (0x5555555555555556 * ((v589 - v586) >> 2) > v46)
        v46 = 0x5555555555555556 * ((v589 - v586) >> 2);
      if (0xAAAAAAAAAAAAAAABLL * ((v589 - v586) >> 2) >= 0xAAAAAAAAAAAAAAALL)
        v47 = 0x1555555555555555;
      else
        v47 = v46;
      if (v47)
      {
        if (v47 > 0x1555555555555555)
          goto LABEL_885;
        v48 = (char *)operator new(12 * v47);
      }
      else
      {
        v48 = 0;
      }
      v50 = *(_QWORD *)v45;
      v51 = &v48[4 * ((v42 - v586) >> 2)];
      *((_DWORD *)v51 + 2) = *(_DWORD *)(v45 + 8);
      *(_QWORD *)v51 = v50;
      v52 = v51;
      if (v42 == v586)
        goto LABEL_80;
      do
      {
        v53 = *(_QWORD *)(v42 - 12);
        v42 -= 12;
        v54 = *((_DWORD *)v42 + 2);
        *(_QWORD *)(v52 - 12) = v53;
        v52 -= 12;
        *((_DWORD *)v52 + 2) = v54;
      }
      while (v42 != v586);
LABEL_79:
      v42 = v586;
LABEL_80:
      v58 = v51 + 12;
      v586 = v52;
      v589 = &v48[12 * v47];
      if (v42)
        operator delete(v42);
      v587 = v58;
      ++v40;
      v42 = v58;
    }
    while (v40 != v41);
  }
LABEL_83:
  v583 = 0;
  v584 = 0;
  v585 = 0;
  v580 = 0;
  v581 = 0;
  v582 = 0;
  v59 = v12 - __p;
  if (v12 == __p)
  {
    v66 = 0;
    v60 = v575;
  }
  else
  {
    v60 = v575;
    if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (v59 >> 2)) > 0x924924924924924)
      sub_22316E078();
    v59 = (uint64_t)operator new(v59);
    v61 = 0;
    do
    {
      v62 = &__p[v61];
      v63 = v59 + v61;
      *(_DWORD *)v63 = *(_DWORD *)&__p[v61];
      v64 = *(_QWORD *)&__p[v61 + 4];
      *(_DWORD *)(v63 + 12) = *(_DWORD *)&__p[v61 + 12];
      *(_QWORD *)(v63 + 4) = v64;
      v65 = *(_QWORD *)&__p[v61 + 16];
      *(_DWORD *)(v63 + 24) = *(_DWORD *)&__p[v61 + 24];
      *(_QWORD *)(v63 + 16) = v65;
      v61 += 28;
    }
    while (v62 + 28 != v12);
    v66 = (unsigned int *)(v59 + v61);
  }
  v610 = 0u;
  v611 = 0u;
  v67 = 126 - 2 * __clz(0x6DB6DB6DB6DB6DB7 * (((uint64_t)v66 - v59) >> 2));
  v612 = 1065353216;
  v607 = 0u;
  v608 = 0u;
  v609 = 1065353216;
  *(_OWORD *)v604 = 0u;
  *(_OWORD *)v605 = 0u;
  v606 = 1065353216;
  v601 = (uint64_t *)a3;
  if (v66 == (unsigned int *)v59)
    v68 = 0;
  else
    v68 = v67;
  v69 = (unsigned int *)v59;
  v565 = (void *)v59;
  sub_223A1891C(v59, v66, &v601, v68, 1);
  v601 = 0;
  v602 = 0;
  v603 = 0;
  if (v66 == v69)
  {
    v84 = 0;
    v572 = 0;
  }
  else
  {
    do
    {
      *((_DWORD *)sub_223A1A5B0((uint64_t)v604, (int *)v69 + 1, (uint64_t)(v69 + 1)) + 7) = 0;
      v70 = (uint64_t *)(v69 + 4);
      if (!sub_223A1A90C((uint64_t)v604[0], (unint64_t)v604[1], (int *)v69 + 4))
      {
        v71 = v602;
        if ((unint64_t)v602 >= v603)
        {
          v74 = v601;
          v75 = 0xAAAAAAAAAAAAAAABLL * (((char *)v602 - (char *)v601) >> 2);
          v76 = v75 + 1;
          if (v75 + 1 > 0x1555555555555555)
            sub_22316E078();
          if (0x5555555555555556 * ((uint64_t)(v603 - (_QWORD)v601) >> 2) > v76)
            v76 = 0x5555555555555556 * ((uint64_t)(v603 - (_QWORD)v601) >> 2);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v603 - (_QWORD)v601) >> 2) >= 0xAAAAAAAAAAAAAAALL)
            v77 = 0x1555555555555555;
          else
            v77 = v76;
          if (v77)
          {
            if (v77 > 0x1555555555555555)
              sub_223174E94();
            v78 = (char *)operator new(12 * v77);
          }
          else
          {
            v78 = 0;
          }
          v79 = &v78[12 * v75];
          *(_QWORD *)v79 = *v70;
          *((_DWORD *)v79 + 2) = v69[6];
          v80 = v79;
          if (v71 != v74)
          {
            do
            {
              v81 = *(uint64_t *)((char *)v71 - 12);
              v71 = (uint64_t *)((char *)v71 - 12);
              v82 = *((_DWORD *)v71 + 2);
              *(_QWORD *)(v80 - 12) = v81;
              v80 -= 12;
              *((_DWORD *)v80 + 2) = v82;
            }
            while (v71 != v74);
            v71 = v601;
          }
          v73 = (uint64_t *)(v79 + 12);
          v601 = (uint64_t *)v80;
          v603 = (unint64_t)&v78[12 * v77];
          if (v71)
            operator delete(v71);
        }
        else
        {
          v72 = *v70;
          *((_DWORD *)v602 + 2) = v69[6];
          *v71 = v72;
          v73 = (uint64_t *)((char *)v71 + 12);
        }
        v602 = v73;
      }
      *((_DWORD *)sub_223A1A5B0((uint64_t)v604, (int *)v69 + 4, (uint64_t)(v69 + 4)) + 7) = 0;
      sub_223A1AA44((uint64_t)&v610, v69, v69);
      v83 = *v69;
      *(_QWORD *)v599 = v69 + 4;
      *((_DWORD *)sub_223A1AD44((uint64_t)&v607, (int *)v69 + 4, (uint64_t)&unk_2245BA939, (_QWORD **)v599) + 7) = v83;
      v69 += 7;
    }
    while (v69 != v66);
    v84 = v602;
    v572 = v601;
    v60 = v575;
  }
  v576 = 0;
  v85 = 0;
  v86 = 0;
  while (2)
  {
    if (v572 == v84)
      goto LABEL_119;
    while (2)
    {
      while (2)
      {
        v119 = *(_QWORD **)((char *)v84 - 12);
        v84 = (uint64_t *)((char *)v84 - 12);
        v118 = (int)v119;
        v120 = *((_DWORD *)v84 + 2);
        v615 = v119;
        v616 = v120;
        v602 = v84;
        v121 = (int8x8_t)v60[1];
        if (v121)
        {
          v122 = HIDWORD(v615);
          v123 = (19349669 * SHIDWORD(v615)) ^ (73856093 * v118) ^ (83492791 * (int)v120);
          v124 = (uint8x8_t)vcnt_s8(v121);
          v124.i16[0] = vaddlv_u8(v124);
          if (v124.u32[0] > 1uLL)
          {
            v125 = (19349669 * SHIDWORD(v615)) ^ (73856093 * v118) ^ (83492791 * (int)v120);
            if (v123 >= *(_QWORD *)&v121)
              v125 = v123 % *(_QWORD *)&v121;
          }
          else
          {
            v125 = v123 & (*(_QWORD *)&v121 - 1);
          }
          v126 = *(uint64_t ***)(*v60 + 8 * v125);
          if (v126)
          {
            v127 = *v126;
            if (v127)
            {
              if (v124.u32[0] < 2uLL)
              {
                while (1)
                {
                  v129 = v127[1];
                  if (v123 == v129)
                  {
                    if (*((_DWORD *)v127 + 4) == v118
                      && *(uint64_t *)((char *)v127 + 20) == __PAIR64__(v120, HIDWORD(v615)))
                    {
                      goto LABEL_193;
                    }
                  }
                  else if ((v129 & (*(_QWORD *)&v121 - 1)) != v125)
                  {
                    goto LABEL_185;
                  }
                  v127 = (uint64_t *)*v127;
                  if (!v127)
                    goto LABEL_185;
                }
              }
              do
              {
                v128 = v127[1];
                if (v123 == v128)
                {
                  if (*((_DWORD *)v127 + 4) == v118
                    && *(uint64_t *)((char *)v127 + 20) == __PAIR64__(v120, HIDWORD(v615)))
                  {
                    goto LABEL_193;
                  }
                }
                else
                {
                  if (v128 >= *(_QWORD *)&v121)
                    v128 %= *(_QWORD *)&v121;
                  if (v128 != v125)
                    break;
                }
                v127 = (uint64_t *)*v127;
              }
              while (v127);
            }
          }
        }
LABEL_185:
        sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/SpatialSubdivisionGraphAlgorithms.hpp", 266, (uint64_t)"edges_from_node.count(current_position) == 1", 44, (uint64_t)"Edges from node not found", 25, (void (*)(void **))sub_22457406C);
        v130 = atomic_load((unsigned __int8 *)&qword_255795680);
        if ((v130 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release(&qword_255795680);
        }
        if (!byte_255795670 || byte_255795678)
        {
          v131 = qword_255795648;
          for (i = qword_255795650; v131 != i; v131 += 16)
            (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v131)(*(_QWORD *)(v131 + 8), "edges_from_node.count(current_position) == 1", 44, "Edges from node not found", 25);
        }
        v133 = atomic_load((unsigned __int8 *)&qword_255795680);
        if ((v133 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release(&qword_255795680);
        }
        if (!byte_255795670)
          abort();
        qword_255795660(*(_QWORD *)algn_255795668, "edges_from_node.count(current_position) == 1", 44, "Edges from node not found", 25);
        v118 = (int)v615;
        v122 = HIDWORD(v615);
        v120 = v616;
        v121 = (int8x8_t)v60[1];
        v123 = (19349669 * SHIDWORD(v615)) ^ (73856093 * (int)v615) ^ (83492791 * (int)v616);
LABEL_193:
        if (!*(_QWORD *)&v121)
          goto LABEL_873;
        v134 = (uint8x8_t)vcnt_s8(v121);
        v134.i16[0] = vaddlv_u8(v134);
        if (v134.u32[0] > 1uLL)
        {
          v135 = v123;
          if (v123 >= *(_QWORD *)&v121)
            v135 = v123 % *(_QWORD *)&v121;
        }
        else
        {
          v135 = (*(_QWORD *)&v121 - 1) & v123;
        }
        v136 = *(uint64_t ***)(*v60 + 8 * v135);
        if (!v136 || (v137 = *v136) == 0)
LABEL_873:
          sub_223198218("unordered_map::at: key not found");
        if (v134.u32[0] < 2uLL)
        {
          v138 = *(_QWORD *)&v121 - 1;
          while (1)
          {
            v140 = v137[1];
            if (v123 == v140)
            {
              if (*((_DWORD *)v137 + 4) == v118 && *((_DWORD *)v137 + 5) == v122 && *((_DWORD *)v137 + 6) == v120)
                goto LABEL_217;
            }
            else if ((v140 & v138) != v135)
            {
              goto LABEL_873;
            }
            v137 = (uint64_t *)*v137;
            if (!v137)
              goto LABEL_873;
          }
        }
        while (1)
        {
          v139 = v137[1];
          if (v123 == v139)
            break;
          if (v139 >= *(_QWORD *)&v121)
            v139 %= *(_QWORD *)&v121;
          if (v139 != v135)
            goto LABEL_873;
LABEL_203:
          v137 = (uint64_t *)*v137;
          if (!v137)
            goto LABEL_873;
        }
        if (*((_DWORD *)v137 + 4) != v118 || *((_DWORD *)v137 + 5) != v122 || *((_DWORD *)v137 + 6) != v120)
          goto LABEL_203;
LABEL_217:
        v141 = (float *)sub_223A1A5B0((uint64_t)v604, (int *)&v615, (uint64_t)&v615);
        v142 = (unsigned int *)v137[4];
        v143 = (unsigned int *)v137[5];
        if (v142 == v143)
        {
          v60 = v575;
          if (v572 != v84)
            continue;
          goto LABEL_119;
        }
        break;
      }
      v144 = v141[7];
      while (2)
      {
        v146 = *v142;
        v147 = *a3;
        if (LOBYTE((*a3)[24 * *v142 + 1]))
        {
          v148 = &v147[24 * v146];
          v149 = v148[2];
          v150 = v148[3];
          v151 = v148[4];
          if (v149 == (_DWORD)v615 && v150 == HIDWORD(v615) && v151 == v616)
          {
            v154 = &v147[24 * v146];
            v149 = v154[5];
            v150 = v154[6];
            v151 = v154[7];
          }
          if (v604[1])
          {
            v155 = (19349669 * v150) ^ (83492791 * v151) ^ (73856093 * v149);
            v156 = (uint8x8_t)vcnt_s8((int8x8_t)v604[1]);
            v156.i16[0] = vaddlv_u8(v156);
            if (v156.u32[0] > 1uLL)
            {
              v157 = (19349669 * v150) ^ (83492791 * v151) ^ (73856093 * v149);
              if ((void *)v155 >= v604[1])
                v157 = v155 % (unint64_t)v604[1];
            }
            else
            {
              v157 = v155 & ((unint64_t)v604[1] - 1);
            }
            v158 = (uint64_t **)*((_QWORD *)v604[0] + v157);
            if (v158)
            {
              v159 = *v158;
              if (v159)
              {
                if (v156.u32[0] < 2uLL)
                {
                  while (1)
                  {
                    v161 = v159[1];
                    if (v155 == v161)
                    {
                      if (*((_DWORD *)v159 + 4) == v149
                        && *((_DWORD *)v159 + 5) == v150
                        && *((_DWORD *)v159 + 6) == v151)
                      {
                        goto LABEL_220;
                      }
                    }
                    else if ((v161 & ((uint64_t)v604[1] - 1)) != v157)
                    {
                      goto LABEL_256;
                    }
                    v159 = (uint64_t *)*v159;
                    if (!v159)
                      goto LABEL_256;
                  }
                }
                do
                {
                  v160 = v159[1];
                  if (v155 == v160)
                  {
                    if (*((_DWORD *)v159 + 4) == v149 && *((_DWORD *)v159 + 5) == v150 && *((_DWORD *)v159 + 6) == v151)
                      goto LABEL_220;
                  }
                  else
                  {
                    if ((void *)v160 >= v604[1])
                      v160 %= (unint64_t)v604[1];
                    if (v160 != v157)
                      break;
                  }
                  v159 = (uint64_t *)*v159;
                }
                while (v159);
              }
            }
          }
LABEL_256:
          v162 = v144 + *(float *)&v147[24 * v146 + 10];
          if (v85 >= v576)
          {
            v164 = 0xCCCCCCCCCCCCCCCDLL * ((v85 - v86) >> 2) + 1;
            if (v164 > 0xCCCCCCCCCCCCCCCLL)
              sub_22316E078();
            if (0x999999999999999ALL * ((v576 - v86) >> 2) > v164)
              v164 = 0x999999999999999ALL * ((v576 - v86) >> 2);
            if (0xCCCCCCCCCCCCCCCDLL * ((v576 - v86) >> 2) >= 0x666666666666666)
              v165 = 0xCCCCCCCCCCCCCCCLL;
            else
              v165 = v164;
            if (v165 > 0xCCCCCCCCCCCCCCCLL)
              sub_223174E94();
            v166 = (char *)operator new(20 * v165);
            v167 = &v166[4 * ((v85 - v86) >> 2)];
            *(_DWORD *)v167 = v149;
            *((_DWORD *)v167 + 1) = v150;
            *((_DWORD *)v167 + 2) = v151;
            *((float *)v167 + 3) = v162;
            *((_DWORD *)v167 + 4) = v146;
            for (j = v167; v85 != v86; *(_QWORD *)(j + 12) = *(_QWORD *)(v85 + 12))
            {
              v169 = *(_QWORD *)(v85 - 20);
              v85 -= 20;
              v170 = *((_DWORD *)v85 + 2);
              *(_QWORD *)(j - 20) = v169;
              j -= 20;
              *((_DWORD *)j + 2) = v170;
            }
            v576 = &v166[20 * v165];
            v85 = v167 + 20;
            if (v86)
              operator delete(v86);
            v86 = j;
            v163 = v85 - j;
            if (v85 - j >= 21)
            {
LABEL_271:
              v171 = (v163 / 0x14 - 2) >> 1;
              v172 = (float *)&v86[20 * v171];
              v173 = *((float *)v85 - 2);
              if (v172[3] > v173)
              {
                v174 = (float *)(v85 - 20);
                v175 = *(_QWORD *)(v85 - 20);
                *(_DWORD *)&v599[8] = *((_DWORD *)v85 - 3);
                *(_QWORD *)v599 = v175;
                v176 = *((_DWORD *)v85 - 1);
                do
                {
                  v177 = v174;
                  v174 = v172;
                  v178 = *(_QWORD *)v172;
                  v177[2] = v174[2];
                  *(_QWORD *)v177 = v178;
                  *(_QWORD *)(v177 + 3) = *(_QWORD *)(v174 + 3);
                  if (!v171)
                    break;
                  v171 = (v171 - 1) >> 1;
                  v172 = (float *)&v86[20 * v171];
                }
                while (v172[3] > v173);
                v145 = *(_QWORD *)v599;
                v174[2] = *(float *)&v599[8];
                *(_QWORD *)v174 = v145;
                v174[3] = v173;
                *((_DWORD *)v174 + 4) = v176;
              }
            }
          }
          else
          {
            *(_DWORD *)v85 = v149;
            *((_DWORD *)v85 + 1) = v150;
            *((_DWORD *)v85 + 2) = v151;
            *((float *)v85 + 3) = v162;
            *((_DWORD *)v85 + 4) = v146;
            v85 += 20;
            v163 = v85 - v86;
            if (v85 - v86 >= 21)
              goto LABEL_271;
          }
        }
LABEL_220:
        if (++v142 != v143)
          continue;
        break;
      }
      v84 = v602;
      v572 = v601;
      v60 = v575;
      if (v601 != v602)
        continue;
      break;
    }
LABEL_119:
    if (v86 == v85)
    {
      v86 = v85;
      goto LABEL_301;
    }
LABEL_120:
    if (v599 != v86)
    {
      v88 = *(_QWORD *)v86;
      *(_DWORD *)&v599[8] = *((_DWORD *)v86 + 2);
      *(_QWORD *)v599 = v88;
    }
    v600 = *(_QWORD *)(v86 + 12);
    if (v85 - v86 >= 21)
    {
      v89 = 0;
      v90 = 0xCCCCCCCCCCCCCCCDLL * ((v85 - v86) >> 2);
      v91 = *(_QWORD *)v86;
      v614 = *((_DWORD *)v86 + 2);
      v613 = v91;
      v92 = *(_QWORD *)(v86 + 12);
      v93 = v86;
      do
      {
        v95 = v93;
        v93 += 20 * v89 + 20;
        v96 = 2 * v89;
        v89 = (2 * v89) | 1;
        v97 = v96 + 2;
        if (v97 < v90 && *((float *)v93 + 3) > *((float *)v93 + 8))
        {
          v93 += 20;
          v89 = v97;
        }
        v94 = *(_QWORD **)v93;
        *((_DWORD *)v95 + 2) = *((_DWORD *)v93 + 2);
        *v95 = v94;
        *(_QWORD *)((char *)v95 + 12) = *(_QWORD *)(v93 + 12);
      }
      while (v89 <= (uint64_t)((unint64_t)(v90 - 2) >> 1));
      v98 = v85 - 20;
      if (v93 == v85 - 20)
      {
        v110 = v613;
        *((_DWORD *)v93 + 2) = v614;
        *(_QWORD *)v93 = v110;
        *(_QWORD *)(v93 + 12) = v92;
      }
      else
      {
        v99 = *(_QWORD *)v98;
        *((_DWORD *)v93 + 2) = *((_DWORD *)v85 - 3);
        *(_QWORD *)v93 = v99;
        *(_QWORD *)(v93 + 12) = *((_QWORD *)v85 - 1);
        v100 = v613;
        *((_DWORD *)v85 - 3) = v614;
        *(_QWORD *)v98 = v100;
        *((_QWORD *)v85 - 1) = v92;
        v101 = v93 - v86 + 20;
        if (v101 >= 21)
        {
          v102 = (v101 / 0x14uLL - 2) >> 1;
          v103 = &v86[20 * v102];
          v104 = *((float *)v93 + 3);
          if (*((float *)v103 + 3) > v104)
          {
            v105 = *(_QWORD **)v93;
            v616 = *((_DWORD *)v93 + 2);
            v615 = v105;
            v106 = *((_DWORD *)v93 + 4);
            do
            {
              v107 = v93;
              v93 = v103;
              v108 = *(_QWORD *)v103;
              *((_DWORD *)v107 + 2) = *((_DWORD *)v93 + 2);
              *v107 = v108;
              *(_QWORD *)((char *)v107 + 12) = *(_QWORD *)(v93 + 12);
              if (!v102)
                break;
              v102 = (v102 - 1) >> 1;
              v103 = &v86[20 * v102];
            }
            while (*((float *)v103 + 3) > v104);
            v109 = v615;
            *((_DWORD *)v93 + 2) = v616;
            *(_QWORD *)v93 = v109;
            *((float *)v93 + 3) = v104;
            *((_DWORD *)v93 + 4) = v106;
          }
        }
      }
    }
    v85 -= 20;
    if (v604[1])
    {
      v111 = (19349669 * *(int *)&v599[4]) ^ (73856093 * *(int *)v599) ^ (83492791 * *(int *)&v599[8]);
      v112 = (uint8x8_t)vcnt_s8((int8x8_t)v604[1]);
      v112.i16[0] = vaddlv_u8(v112);
      if (v112.u32[0] > 1uLL)
      {
        v113 = (19349669 * *(int *)&v599[4]) ^ (73856093 * *(int *)v599) ^ (83492791 * *(int *)&v599[8]);
        if ((void *)v111 >= v604[1])
          v113 = v111 % (unint64_t)v604[1];
      }
      else
      {
        v113 = v111 & ((unint64_t)v604[1] - 1);
      }
      v114 = (uint64_t **)*((_QWORD *)v604[0] + v113);
      if (v114)
      {
        v115 = *v114;
        if (v115)
        {
          if (v112.u32[0] < 2uLL)
          {
            while (1)
            {
              v117 = v115[1];
              if (v111 == v117)
              {
                if (*((_DWORD *)v115 + 4) == *(_DWORD *)v599
                  && *((_DWORD *)v115 + 5) == *(_DWORD *)&v599[4]
                  && *((_DWORD *)v115 + 6) == *(_DWORD *)&v599[8])
                {
                  goto LABEL_159;
                }
              }
              else if ((v117 & ((uint64_t)v604[1] - 1)) != v113)
              {
                goto LABEL_282;
              }
              v115 = (uint64_t *)*v115;
              if (!v115)
                goto LABEL_282;
            }
          }
          do
          {
            v116 = v115[1];
            if (v111 == v116)
            {
              if (*((_DWORD *)v115 + 4) == *(_DWORD *)v599 && *(uint64_t *)((char *)v115 + 20) == *(_QWORD *)&v599[4])
              {
LABEL_159:
                if (v86 == v85)
                {
LABEL_301:
                  v187 = v601;
                  v84 = v602;
                  if (v601 != v602)
                    goto LABEL_302;
LABEL_310:
                  v189 = 0;
                  if (v84)
                    goto LABEL_367;
                  goto LABEL_368;
                }
                goto LABEL_120;
              }
            }
            else
            {
              if ((void *)v116 >= v604[1])
                v116 %= (unint64_t)v604[1];
              if (v116 != v113)
                break;
            }
            v115 = (uint64_t *)*v115;
          }
          while (v115);
        }
      }
    }
LABEL_282:
    sub_223A1AA44((uint64_t)&v610, (unsigned int *)&v600 + 1, (_DWORD *)&v600 + 1);
    sub_223A1B0D0((uint64_t)v604, (int *)v599, (uint64_t)v599, *(float *)&v600);
    sub_223A1B438((uint64_t)&v607, (int *)v599, (uint64_t)v599, SHIDWORD(v600));
    v179 = v601;
    if ((unint64_t)v601 >= v603)
    {
      v182 = v601;
      v183 = 0x5555555555555556 * ((uint64_t)(v603 - (_QWORD)v601) >> 2);
      if (v183 <= 1)
        v183 = 1;
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v603 - (_QWORD)v601) >> 2) >= 0xAAAAAAAAAAAAAAALL)
        v184 = 0x1555555555555555;
      else
        v184 = v183;
      if (v184 > 0x1555555555555555)
        sub_223174E94();
      v185 = (char *)operator new(12 * v184);
      v186 = &v185[12 * v184];
      *(_QWORD *)v185 = *(_QWORD *)v599;
      *((_DWORD *)v185 + 2) = *(_DWORD *)&v599[8];
      v84 = (uint64_t *)(v185 + 12);
      v601 = (uint64_t *)v185;
      v603 = (unint64_t)v186;
      if (v182)
        operator delete(v182);
      v572 = (uint64_t *)v185;
      v602 = (uint64_t *)(v185 + 12);
      v87 = v586;
      v181 = v587;
      if (v586 != v587)
      {
LABEL_296:
        while (*(_DWORD *)v87 != *(_DWORD *)v572
             || *((_DWORD *)v87 + 1) != *((_DWORD *)v572 + 1)
             || *((_DWORD *)v87 + 2) != *((_DWORD *)v572 + 2))
        {
          v87 += 12;
          if (v87 == v181)
          {
            v87 = v181;
            break;
          }
        }
      }
    }
    else
    {
      v180 = *(_QWORD *)v599;
      *((_DWORD *)v601 + 2) = *(_DWORD *)&v599[8];
      *v179 = v180;
      v572 = v179;
      v84 = (uint64_t *)((char *)v179 + 12);
      v602 = (uint64_t *)((char *)v179 + 12);
      v87 = v586;
      v181 = v587;
      if (v586 != v587)
        goto LABEL_296;
    }
    if (v87 == v181)
      continue;
    break;
  }
  v187 = v572;
  if (v572 == v84)
    goto LABEL_310;
LABEL_302:
  v188 = v586;
  if (v586 != v587)
  {
    while (*(_DWORD *)v188 != *(_DWORD *)v187
         || *((_DWORD *)v188 + 1) != *((_DWORD *)v187 + 1)
         || *((_DWORD *)v188 + 2) != *((_DWORD *)v187 + 2))
    {
      v188 += 12;
      if (v188 == v587)
      {
        v188 = v587;
        break;
      }
    }
  }
  if (v188 != v587)
  {
    v190 = *v187;
    *(_DWORD *)&v599[8] = *((_DWORD *)v187 + 2);
    *(_QWORD *)v599 = v190;
    while (1)
    {
      if (!sub_2239942A0(&v607, (int *)v599))
      {
        v189 = 1;
        v84 = v601;
        if (v601)
          goto LABEL_367;
        goto LABEL_368;
      }
      if (!sub_2239942A0(&v607, (int *)v599)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/SpatialSubdivisionGraphAlgorithms.hpp", 348, (uint64_t)"block_incoming_edges.count(target) == 1", 39, (uint64_t)"More than 1 incoming edge to a node on shortest path", 52, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v615 = v599;
      v192 = *((_DWORD *)sub_223A1AD44((uint64_t)&v607, (int *)v599, (uint64_t)&unk_2245BA939, &v615) + 7);
      v193 = v581;
      if (v581 < v582)
      {
        *(_DWORD *)v581 = v192;
        v194 = (uint64_t)(v581 + 4);
        goto LABEL_341;
      }
      v195 = v580;
      v196 = (v581 - v580) >> 2;
      v197 = v196 + 1;
      if ((unint64_t)(v196 + 1) >> 62)
        sub_22316E078();
      v198 = v582 - v580;
      if ((v582 - v580) >> 1 > v197)
        v197 = v198 >> 1;
      v199 = (unint64_t)v198 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v197;
      if (v199)
        break;
      v200 = 0;
      v201 = (char *)(4 * v196);
      *(_DWORD *)(4 * v196) = v192;
      v194 = 4 * v196 + 4;
      v202 = v581 - v580;
      if (v581 != v580)
        goto LABEL_330;
LABEL_339:
      v580 = v201;
      v582 = &v200[4 * v199];
      if (v195)
        operator delete(v195);
LABEL_341:
      v581 = (char *)v194;
      v212 = *a3;
      v213 = (uint64_t)&(*a3)[24 * v192];
      v215 = *(_DWORD *)(v213 + 8);
      v214 = v213 + 8;
      if (v215 == *(_DWORD *)v599
        && *(_DWORD *)(v214 + 4) == *(_DWORD *)&v599[4]
        && *(_DWORD *)(v214 + 8) == *(_DWORD *)&v599[8])
      {
        v216 = (uint64_t)&v212[24 * v192 + 5];
        v60 = v575;
        if (v599 != (_BYTE *)v216)
        {
          v217 = *(_QWORD *)v216;
          *(_DWORD *)&v599[8] = *(_DWORD *)(v216 + 8);
          *(_QWORD *)v599 = v217;
        }
      }
      else
      {
        v60 = v575;
        if (v599 != (_BYTE *)v214)
        {
          v218 = *(_QWORD **)v214;
          *(_DWORD *)&v599[8] = *(_DWORD *)(v214 + 8);
          *(_QWORD *)v599 = v218;
        }
        v214 = (uint64_t)&v212[24 * v192 + 5];
      }
      v615 = *(_QWORD **)v214;
      v616 = *(_DWORD *)(v214 + 8);
      v219 = v584;
      if (v584 < (unsigned int *)v585)
      {
        v191 = *(_QWORD **)v214;
        v584[2] = *(_DWORD *)(v214 + 8);
        *(_QWORD *)v584 = v191;
        v584 += 3;
      }
      else
      {
        v220 = 0xAAAAAAAAAAAAAAABLL * (v584 - v583) + 1;
        if (v220 > 0x1555555555555555)
          sub_22316E078();
        if (0x5555555555555556 * ((v585 - (char *)v583) >> 2) > v220)
          v220 = 0x5555555555555556 * ((v585 - (char *)v583) >> 2);
        if (0xAAAAAAAAAAAAAAABLL * ((v585 - (char *)v583) >> 2) >= 0xAAAAAAAAAAAAAAALL)
          v221 = 0x1555555555555555;
        else
          v221 = v220;
        if (v221)
        {
          if (v221 > 0x1555555555555555)
            sub_223174E94();
          v222 = (char *)operator new(12 * v221);
        }
        else
        {
          v222 = 0;
        }
        v223 = &v222[4 * (v584 - v583)];
        *(_QWORD *)v223 = v615;
        *((_DWORD *)v223 + 2) = v616;
        v224 = (unsigned int *)v223;
        if (v584 != v583)
        {
          do
          {
            v225 = *(_QWORD *)(v219 - 3);
            v219 -= 3;
            v226 = v219[2];
            *(_QWORD *)(v224 - 3) = v225;
            v224 -= 3;
            v224[2] = v226;
          }
          while (v219 != v583);
          v219 = v583;
        }
        v227 = v223 + 12;
        v583 = v224;
        v585 = &v222[12 * v221];
        if (v219)
          operator delete(v219);
        v584 = (unsigned int *)v227;
      }
    }
    if (v199 >> 62)
      sub_223174E94();
    v200 = operator new(4 * v199);
    v201 = &v200[4 * v196];
    *(_DWORD *)v201 = v192;
    v194 = (uint64_t)(v201 + 4);
    v202 = v581 - v580;
    if (v581 == v580)
      goto LABEL_339;
LABEL_330:
    v203 = v202 - 4;
    if (v203 < 0x2C)
      goto LABEL_922;
    if ((unint64_t)(v580 - v200) < 0x20)
      goto LABEL_922;
    v204 = (v203 >> 2) + 1;
    v205 = 4 * (v204 & 0x7FFFFFFFFFFFFFF8);
    v206 = &v581[-v205];
    v201 -= v205;
    v207 = &v200[4 * v196 - 16];
    v208 = v581 - 16;
    v209 = v204 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v210 = *(_OWORD *)v208;
      *(v207 - 1) = *((_OWORD *)v208 - 1);
      *v207 = v210;
      v207 -= 2;
      v208 -= 32;
      v209 -= 8;
    }
    while (v209);
    v193 = v206;
    if (v204 != (v204 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_922:
      do
      {
        v211 = *((_DWORD *)v193 - 1);
        v193 -= 4;
        *((_DWORD *)v201 - 1) = v211;
        v201 -= 4;
      }
      while (v193 != v580);
    }
    goto LABEL_339;
  }
  v189 = 0;
  v84 = v187;
  if (v187)
  {
LABEL_367:
    v602 = v84;
    operator delete(v84);
  }
LABEL_368:
  if (v86)
    operator delete(v86);
  v228 = v605[0];
  if (v605[0])
  {
    do
    {
      v229 = (_QWORD *)*v228;
      operator delete(v228);
      v228 = v229;
    }
    while (v229);
  }
  v230 = v604[0];
  v604[0] = 0;
  if (v230)
    operator delete(v230);
  v231 = (_QWORD *)v608;
  if ((_QWORD)v608)
  {
    do
    {
      v232 = (_QWORD *)*v231;
      operator delete(v231);
      v231 = v232;
    }
    while (v232);
  }
  v233 = (void *)v607;
  *(_QWORD *)&v607 = 0;
  if (v233)
    operator delete(v233);
  v234 = (_QWORD *)v611;
  if ((_QWORD)v611)
  {
    do
    {
      v235 = (_QWORD *)*v234;
      operator delete(v234);
      v234 = v235;
    }
    while (v235);
  }
  v236 = (void *)v610;
  *(_QWORD *)&v610 = 0;
  if (v236)
    operator delete(v236);
  if (v565)
    operator delete(v565);
  if ((v189 & 1) == 0)
  {
    v264 = v597;
    v265 = __p;
    if (v596 != v597)
    {
      v266 = *a3;
      v267 = v597 - (_BYTE *)v596 - 4;
      v268 = (char *)v596;
      if (v267 < 4)
        goto LABEL_923;
      v269 = (v267 >> 2) + 1;
      v268 = (char *)v596 + 4 * (v269 & 0x7FFFFFFFFFFFFFFELL);
      v270 = (unsigned int *)((char *)v596 + 4);
      v271 = v269 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v272 = &v266[24 * *v270];
        LOBYTE(v266[24 * *(v270 - 1) + 1]) = 1;
        *((_BYTE *)v272 + 4) = 1;
        v270 += 2;
        v271 -= 2;
      }
      while (v271);
      if (v269 != (v269 & 0x7FFFFFFFFFFFFFFELL))
      {
LABEL_923:
        do
        {
          v273 = *(_DWORD *)v268;
          v268 += 4;
          LOBYTE(v266[24 * v273 + 1]) = 1;
        }
        while (v268 != v264);
      }
    }
    goto LABEL_858;
  }
  v237 = (unsigned int *)v593;
  v238 = v594;
  v239 = v567;
  if (v593 != v594)
  {
    while (2)
    {
      v241 = *v237;
      v242 = (uint64_t)&(*a3)[24 * *v237];
      v244 = *(unsigned __int8 *)(v242 + 4);
      v243 = (_BYTE *)(v242 + 4);
      if (!v244)
        goto LABEL_389;
      *v243 = 0;
      v245 = v597;
      if (v597 >= v598)
      {
        v246 = (char *)v596;
        v247 = v597 - (_BYTE *)v596;
        v248 = (v597 - (_BYTE *)v596) >> 2;
        v249 = v248 + 1;
        if ((unint64_t)(v248 + 1) >> 62)
          sub_22316E078();
        v250 = v598 - (_BYTE *)v596;
        if ((v598 - (_BYTE *)v596) >> 1 > v249)
          v249 = v250 >> 1;
        if ((unint64_t)v250 >= 0x7FFFFFFFFFFFFFFCLL)
          v251 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v251 = v249;
        if (v251)
        {
          if (v251 >> 62)
            sub_223174E94();
          v252 = (char *)operator new(4 * v251);
          v253 = &v252[4 * v248];
          *(_DWORD *)v253 = v241;
          v240 = (uint64_t)(v253 + 4);
          v254 = v245 - v246;
          if (v245 == v246)
          {
LABEL_409:
            v596 = v253;
            v597 = (char *)v240;
            v598 = &v252[4 * v251];
            if (v246)
              operator delete(v246);
            v60 = v575;
            v239 = v567;
LABEL_388:
            v597 = (char *)v240;
LABEL_389:
            if (++v237 == v238)
              goto LABEL_419;
            continue;
          }
        }
        else
        {
          v252 = 0;
          v253 = (char *)(4 * v248);
          *(_DWORD *)(4 * v248) = v241;
          v240 = 4 * v248 + 4;
          v254 = v245 - v246;
          if (v245 == v246)
            goto LABEL_409;
        }
        v255 = v254 - 4;
        if (v255 < 0x2C)
          goto LABEL_924;
        if ((unint64_t)(v245 - v252 - v247) < 0x20)
          goto LABEL_924;
        v256 = (v255 >> 2) + 1;
        v257 = 4 * (v256 & 0x7FFFFFFFFFFFFFF8);
        v258 = &v245[-v257];
        v253 -= v257;
        v259 = &v252[4 * v248 - 16];
        v260 = v245 - 16;
        v261 = v256 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v262 = *(_OWORD *)v260;
          *((_OWORD *)v259 - 1) = *((_OWORD *)v260 - 1);
          *(_OWORD *)v259 = v262;
          v259 -= 32;
          v260 -= 32;
          v261 -= 8;
        }
        while (v261);
        v245 = v258;
        if (v256 != (v256 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_924:
          do
          {
            v263 = *((_DWORD *)v245 - 1);
            v245 -= 4;
            *((_DWORD *)v253 - 1) = v263;
            v253 -= 4;
          }
          while (v245 != v246);
        }
        goto LABEL_409;
      }
      break;
    }
    *(_DWORD *)v597 = v241;
    v240 = (uint64_t)(v245 + 4);
    v60 = v575;
    goto LABEL_388;
  }
LABEL_419:
  v274 = (unsigned int *)v590;
  v275 = v591;
  if (v590 != v591)
  {
    v277 = *v583;
    v276 = v583[1];
    v577 = v583[2];
    v278 = __p;
    v573 = v276;
    v570 = v591;
    while (1)
    {
      v280 = *v274;
      v281 = *a3;
      v282 = &(*a3)[24 * *v274];
      v283 = v282 + 2;
      if (v282[2] == (_DWORD)v277 && v282[3] == v276 && v282[4] == v577)
      {
        v284 = *v282;
        *(_QWORD *)&v610 = *v283;
        DWORD2(v610) = v282[4];
        v285 = &v281[24 * v280];
        *(_QWORD *)&v607 = *(_QWORD *)(v285 + 5);
        DWORD2(v607) = v285[7];
        if (v278 >= v239)
        {
          v286 = 0x6DB6DB6DB6DB6DB7 * ((v278 - __p) >> 2) + 1;
          if (v286 > 0x924924924924924)
            sub_22316E078();
          if (0xDB6DB6DB6DB6DB6ELL * ((v239 - __p) >> 2) > v286)
            v286 = 0xDB6DB6DB6DB6DB6ELL * ((v239 - __p) >> 2);
          if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v239 - __p) >> 2)) >= 0x492492492492492)
            v287 = 0x924924924924924;
          else
            v287 = v286;
          if (v287)
          {
            if (v287 > 0x924924924924924)
              sub_223174E94();
            v288 = (char *)operator new(28 * v287);
          }
          else
          {
            v288 = 0;
          }
          v318 = &v288[4 * ((v278 - __p) >> 2)];
          *(_DWORD *)v318 = v284;
          *(_QWORD *)(v318 + 4) = v610;
          *((_DWORD *)v318 + 3) = DWORD2(v610);
          *((_QWORD *)v318 + 2) = v607;
          *((_DWORD *)v318 + 6) = DWORD2(v607);
          if (v278 != __p)
          {
            v319 = &v288[4 * ((v278 - __p) >> 2)];
            v320 = __p;
            do
            {
              v321 = *((_DWORD *)v278 - 7);
              v278 -= 28;
              *((_DWORD *)v319 - 7) = v321;
              v319 -= 28;
              v322 = *(_QWORD *)(v278 + 4);
              *((_DWORD *)v319 + 3) = *((_DWORD *)v278 + 3);
              *(_QWORD *)(v319 + 4) = v322;
              v323 = *((_QWORD *)v278 + 2);
              *((_DWORD *)v319 + 6) = *((_DWORD *)v278 + 6);
              *((_QWORD *)v319 + 2) = v323;
            }
            while (v278 != __p);
            goto LABEL_483;
          }
          goto LABEL_486;
        }
LABEL_441:
        *(_DWORD *)v278 = v284;
        v292 = v610;
        *((_DWORD *)v278 + 3) = DWORD2(v610);
        *(_QWORD *)(v278 + 4) = v292;
        *((_QWORD *)v278 + 2) = v607;
        *((_DWORD *)v278 + 6) = DWORD2(v607);
        v278 += 28;
        goto LABEL_423;
      }
      v289 = &v281[24 * v280];
      v291 = v289[5];
      v290 = v289 + 5;
      if (v291 == (_DWORD)v277 && v290[1] == v276 && v290[2] == v577)
      {
        v284 = *v282;
        *(_QWORD *)&v610 = *(_QWORD *)v290;
        DWORD2(v610) = v290[2];
        *(_QWORD *)&v607 = *v283;
        DWORD2(v607) = v282[4];
        if (v278 >= v239)
        {
          v317 = 0x6DB6DB6DB6DB6DB7 * ((v278 - __p) >> 2) + 1;
          if (v317 > 0x924924924924924)
            sub_22316E078();
          if (0xDB6DB6DB6DB6DB6ELL * ((v239 - __p) >> 2) > v317)
            v317 = 0xDB6DB6DB6DB6DB6ELL * ((v239 - __p) >> 2);
          if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v239 - __p) >> 2)) >= 0x492492492492492)
            v287 = 0x924924924924924;
          else
            v287 = v317;
          if (v287)
          {
            if (v287 > 0x924924924924924)
              sub_223174E94();
            v288 = (char *)operator new(28 * v287);
          }
          else
          {
            v288 = 0;
          }
          v318 = &v288[4 * ((v278 - __p) >> 2)];
          *(_DWORD *)v318 = v284;
          *(_QWORD *)(v318 + 4) = v610;
          *((_DWORD *)v318 + 3) = DWORD2(v610);
          *((_QWORD *)v318 + 2) = v607;
          *((_DWORD *)v318 + 6) = DWORD2(v607);
          if (v278 != __p)
          {
            v319 = &v288[4 * ((v278 - __p) >> 2)];
            v320 = __p;
            do
            {
              v324 = *((_DWORD *)v278 - 7);
              v278 -= 28;
              *((_DWORD *)v319 - 7) = v324;
              v319 -= 28;
              v325 = *(_QWORD *)(v278 + 4);
              *((_DWORD *)v319 + 3) = *((_DWORD *)v278 + 3);
              *(_QWORD *)(v319 + 4) = v325;
              v326 = *((_QWORD *)v278 + 2);
              *((_DWORD *)v319 + 6) = *((_DWORD *)v278 + 6);
              *((_QWORD *)v319 + 2) = v326;
            }
            while (v278 != __p);
LABEL_483:
            v278 = v320;
            __p = v319;
            v239 = &v288[28 * v287];
            v327 = v318 + 28;
            if (v320)
            {
LABEL_484:
              v328 = v239;
              operator delete(v278);
              v239 = v328;
            }
LABEL_485:
            v276 = v573;
            v278 = v327;
            goto LABEL_423;
          }
LABEL_486:
          __p = v318;
          v239 = &v288[28 * v287];
          v327 = v318 + 28;
          if (v278)
            goto LABEL_484;
          goto LABEL_485;
        }
        goto LABEL_441;
      }
      v293 = &v281[24 * v280];
      v295 = *((unsigned __int8 *)v293 + 4);
      v294 = v293 + 1;
      if (!v295)
        goto LABEL_423;
      *v294 = 0;
      v296 = v597;
      if (v597 >= v598)
        break;
      *(_DWORD *)v597 = v280;
      v279 = (uint64_t)(v296 + 4);
      v60 = v575;
LABEL_422:
      v597 = (char *)v279;
LABEL_423:
      if (++v274 == v275)
        goto LABEL_491;
    }
    v297 = v277;
    v298 = (char *)v596;
    v299 = v597 - (_BYTE *)v596;
    v300 = (v597 - (_BYTE *)v596) >> 2;
    v301 = v300 + 1;
    if ((unint64_t)(v300 + 1) >> 62)
      sub_22316E078();
    v302 = v598 - (_BYTE *)v596;
    if ((v598 - (_BYTE *)v596) >> 1 > v301)
      v301 = v302 >> 1;
    if ((unint64_t)v302 >= 0x7FFFFFFFFFFFFFFCLL)
      v303 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v303 = v301;
    v568 = v239;
    if (v303)
    {
      if (v303 >> 62)
        sub_223174E94();
      v304 = (char *)operator new(4 * v303);
      v305 = &v304[4 * v300];
      *(_DWORD *)v305 = v280;
      v279 = (uint64_t)(v305 + 4);
      v306 = v296 - v298;
      if (v296 != v298)
      {
LABEL_453:
        v307 = v306 - 4;
        if (v307 < 0x2C)
        {
          v277 = v297;
          goto LABEL_461;
        }
        v308 = v296 - &v304[v299];
        v277 = v297;
        if (v308 < 0x20)
          goto LABEL_925;
        v309 = (v307 >> 2) + 1;
        v310 = 4 * (v309 & 0x7FFFFFFFFFFFFFF8);
        v311 = &v296[-v310];
        v305 -= v310;
        v312 = &v304[4 * v300 - 16];
        v313 = v296 - 16;
        v314 = v309 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v315 = *(_OWORD *)v313;
          *((_OWORD *)v312 - 1) = *((_OWORD *)v313 - 1);
          *(_OWORD *)v312 = v315;
          v312 -= 32;
          v313 -= 32;
          v314 -= 8;
        }
        while (v314);
        v296 = v311;
        if (v309 != (v309 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_925:
          do
          {
LABEL_461:
            v316 = *((_DWORD *)v296 - 1);
            v296 -= 4;
            *((_DWORD *)v305 - 1) = v316;
            v305 -= 4;
          }
          while (v296 != v298);
        }
LABEL_462:
        v596 = v305;
        v597 = (char *)v279;
        v598 = &v304[4 * v303];
        if (v298)
          operator delete(v298);
        v60 = v575;
        v239 = v568;
        v275 = v570;
        v276 = v573;
        goto LABEL_422;
      }
    }
    else
    {
      v304 = 0;
      v305 = (char *)(4 * v300);
      *(_DWORD *)(4 * v300) = v280;
      v279 = 4 * v300 + 4;
      v306 = v296 - v298;
      if (v296 != v298)
        goto LABEL_453;
    }
    v277 = v297;
    goto LABEL_462;
  }
  v278 = __p;
LABEL_491:
  v329 = (uint64_t)&(*a3)[24 * *((unsigned int *)v581 - 1)];
  v330 = v586;
  if (*(_DWORD *)(v329 + 12) <= *(_DWORD *)(v329 + 24))
  {
    v331 = v329 + 8;
    if (v586 < v589)
      goto LABEL_501;
    v336 = 0x5555555555555556 * ((v589 - v586) >> 2);
    if (v336 <= 1)
      v336 = 1;
    if (0xAAAAAAAAAAAAAAABLL * ((v589 - v586) >> 2) >= 0xAAAAAAAAAAAAAAALL)
      v333 = 0x1555555555555555;
    else
      v333 = v336;
    if (v333 > 0x1555555555555555)
      goto LABEL_917;
LABEL_508:
    v337 = (char *)operator new(12 * v333);
    v338 = *(_QWORD *)v331;
    *((_DWORD *)v337 + 2) = *(_DWORD *)(v331 + 8);
    *(_QWORD *)v337 = v338;
    v335 = v337 + 12;
    v586 = v337;
    if (v330)
      operator delete(v330);
  }
  else
  {
    v331 = v329 + 20;
    if (v586 >= v589)
    {
      v332 = 0x5555555555555556 * ((v589 - v586) >> 2);
      if (v332 <= 1)
        v332 = 1;
      if (0xAAAAAAAAAAAAAAABLL * ((v589 - v586) >> 2) >= 0xAAAAAAAAAAAAAAALL)
        v333 = 0x1555555555555555;
      else
        v333 = v332;
      if (v333 <= 0x1555555555555555)
        goto LABEL_508;
LABEL_917:
      sub_223174E94();
    }
LABEL_501:
    v334 = *(_QWORD *)v331;
    *((_DWORD *)v586 + 2) = *(_DWORD *)(v331 + 8);
    *(_QWORD *)v586 = v334;
    v335 = v586 + 12;
  }
  v588 = v335;
  v339 = (unsigned int *)v593;
  v340 = v594;
  if (v593 != v594)
  {
    while (2)
    {
      v342 = *v339;
      v343 = (uint64_t)&(*a3)[24 * *v339];
      v345 = *(unsigned __int8 *)(v343 + 4);
      v344 = (_BYTE *)(v343 + 4);
      if (!v345)
        goto LABEL_514;
      *v344 = 0;
      v346 = v597;
      if (v597 < v598)
      {
        *(_DWORD *)v597 = v342;
        v341 = (uint64_t)(v346 + 4);
        goto LABEL_513;
      }
      v347 = (char *)v596;
      v348 = v597 - (_BYTE *)v596;
      v349 = (v597 - (_BYTE *)v596) >> 2;
      v350 = v349 + 1;
      if ((unint64_t)(v349 + 1) >> 62)
        sub_22316E078();
      v351 = v598 - (_BYTE *)v596;
      if ((v598 - (_BYTE *)v596) >> 1 > v350)
        v350 = v351 >> 1;
      if ((unint64_t)v351 >= 0x7FFFFFFFFFFFFFFCLL)
        v352 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v352 = v350;
      if (v352)
      {
        if (v352 >> 62)
          sub_223174E94();
        v353 = (char *)operator new(4 * v352);
        v354 = &v353[4 * v349];
        *(_DWORD *)v354 = v342;
        v341 = (uint64_t)(v354 + 4);
        v355 = v346 - v347;
        if (v346 == v347)
        {
LABEL_534:
          v596 = v354;
          v597 = (char *)v341;
          v598 = &v353[4 * v352];
          if (v347)
            operator delete(v347);
          v60 = v575;
LABEL_513:
          v597 = (char *)v341;
LABEL_514:
          if (++v339 == v340)
            goto LABEL_537;
          continue;
        }
      }
      else
      {
        v353 = 0;
        v354 = (char *)(4 * v349);
        *(_DWORD *)(4 * v349) = v342;
        v341 = 4 * v349 + 4;
        v355 = v346 - v347;
        if (v346 == v347)
          goto LABEL_534;
      }
      break;
    }
    v356 = v355 - 4;
    if (v356 < 0x2C)
      goto LABEL_926;
    if ((unint64_t)(v346 - v353 - v348) < 0x20)
      goto LABEL_926;
    v357 = (v356 >> 2) + 1;
    v358 = 4 * (v357 & 0x7FFFFFFFFFFFFFF8);
    v359 = &v346[-v358];
    v354 -= v358;
    v360 = &v353[4 * v349 - 16];
    v361 = v346 - 16;
    v362 = v357 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v363 = *(_OWORD *)v361;
      *((_OWORD *)v360 - 1) = *((_OWORD *)v361 - 1);
      *(_OWORD *)v360 = v363;
      v360 -= 32;
      v361 -= 32;
      v362 -= 8;
    }
    while (v362);
    v346 = v359;
    if (v357 != (v357 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_926:
      do
      {
        v364 = *((_DWORD *)v346 - 1);
        v346 -= 4;
        *((_DWORD *)v354 - 1) = v364;
        v354 -= 4;
      }
      while (v346 != v347);
    }
    goto LABEL_534;
  }
LABEL_537:
  v365 = v278 - __p;
  if (v278 == __p)
  {
    v371 = 0;
  }
  else
  {
    if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (v365 >> 2)) > 0x924924924924924)
      sub_22316E078();
    v365 = (uint64_t)operator new(v365);
    v366 = 0;
    do
    {
      v367 = &__p[v366];
      v368 = v365 + v366;
      *(_DWORD *)v368 = *(_DWORD *)&__p[v366];
      v369 = *(_QWORD *)&__p[v366 + 4];
      *(_DWORD *)(v368 + 12) = *(_DWORD *)&__p[v366 + 12];
      *(_QWORD *)(v368 + 4) = v369;
      v370 = *(_QWORD *)&__p[v366 + 16];
      *(_DWORD *)(v368 + 24) = *(_DWORD *)&__p[v366 + 24];
      *(_QWORD *)(v368 + 16) = v370;
      v366 += 28;
    }
    while (v367 + 28 != v278);
    v371 = (unsigned int *)(v365 + v366);
  }
  v610 = 0u;
  v611 = 0u;
  v372 = 126 - 2 * __clz(0x6DB6DB6DB6DB6DB7 * (((uint64_t)v371 - v365) >> 2));
  v612 = 1065353216;
  v607 = 0u;
  v608 = 0u;
  v609 = 1065353216;
  *(_OWORD *)v604 = 0u;
  *(_OWORD *)v605 = 0u;
  v606 = 1065353216;
  v601 = (uint64_t *)a3;
  if (v371 == (unsigned int *)v365)
    v373 = 0;
  else
    v373 = v372;
  v374 = (unsigned int *)v365;
  v569 = (void *)v365;
  sub_223A1B79C(v365, v371, &v601, v373, 1);
  v601 = 0;
  v602 = 0;
  v603 = 0;
  if (v371 == v374)
  {
    v389 = 0;
    v574 = 0;
  }
  else
  {
    do
    {
      *((_DWORD *)sub_223A1A5B0((uint64_t)v604, (int *)v374 + 1, (uint64_t)(v374 + 1)) + 7) = 0;
      v375 = (uint64_t *)(v374 + 4);
      if (!sub_223A1A90C((uint64_t)v604[0], (unint64_t)v604[1], (int *)v374 + 4))
      {
        v376 = v602;
        if ((unint64_t)v602 >= v603)
        {
          v379 = v601;
          v380 = 0xAAAAAAAAAAAAAAABLL * (((char *)v602 - (char *)v601) >> 2);
          v381 = v380 + 1;
          if (v380 + 1 > 0x1555555555555555)
            sub_22316E078();
          if (0x5555555555555556 * ((uint64_t)(v603 - (_QWORD)v601) >> 2) > v381)
            v381 = 0x5555555555555556 * ((uint64_t)(v603 - (_QWORD)v601) >> 2);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v603 - (_QWORD)v601) >> 2) >= 0xAAAAAAAAAAAAAAALL)
            v382 = 0x1555555555555555;
          else
            v382 = v381;
          if (v382)
          {
            if (v382 > 0x1555555555555555)
              sub_223174E94();
            v383 = (char *)operator new(12 * v382);
          }
          else
          {
            v383 = 0;
          }
          v384 = &v383[12 * v380];
          *(_QWORD *)v384 = *v375;
          *((_DWORD *)v384 + 2) = v374[6];
          v385 = v384;
          if (v376 != v379)
          {
            do
            {
              v386 = *(uint64_t *)((char *)v376 - 12);
              v376 = (uint64_t *)((char *)v376 - 12);
              v387 = *((_DWORD *)v376 + 2);
              *(_QWORD *)(v385 - 12) = v386;
              v385 -= 12;
              *((_DWORD *)v385 + 2) = v387;
            }
            while (v376 != v379);
            v376 = v601;
          }
          v378 = (uint64_t *)(v384 + 12);
          v601 = (uint64_t *)v385;
          v603 = (unint64_t)&v383[12 * v382];
          if (v376)
            operator delete(v376);
        }
        else
        {
          v377 = *v375;
          *((_DWORD *)v602 + 2) = v374[6];
          *v376 = v377;
          v378 = (uint64_t *)((char *)v376 + 12);
        }
        v602 = v378;
      }
      *((_DWORD *)sub_223A1A5B0((uint64_t)v604, (int *)v374 + 4, (uint64_t)(v374 + 4)) + 7) = 0;
      sub_223A1AA44((uint64_t)&v610, v374, v374);
      v388 = *v374;
      *(_QWORD *)v599 = v374 + 4;
      *((_DWORD *)sub_223A1AD44((uint64_t)&v607, (int *)v374 + 4, (uint64_t)&unk_2245BA939, (_QWORD **)v599) + 7) = v388;
      v374 += 7;
    }
    while (v374 != v371);
    v389 = v602;
    v574 = v601;
    v60 = v575;
  }
  v578 = 0;
  v390 = 0;
  v391 = 0;
  while (2)
  {
    if (v574 == v389)
      goto LABEL_573;
    while (2)
    {
      while (2)
      {
        v424 = *(_QWORD **)((char *)v389 - 12);
        v389 = (uint64_t *)((char *)v389 - 12);
        v423 = (int)v424;
        v425 = *((_DWORD *)v389 + 2);
        v615 = v424;
        v616 = v425;
        v602 = v389;
        v426 = (int8x8_t)v60[1];
        if (v426)
        {
          v427 = HIDWORD(v615);
          v428 = (19349669 * SHIDWORD(v615)) ^ (73856093 * v423) ^ (83492791 * (int)v425);
          v429 = (uint8x8_t)vcnt_s8(v426);
          v429.i16[0] = vaddlv_u8(v429);
          if (v429.u32[0] > 1uLL)
          {
            v430 = (19349669 * SHIDWORD(v615)) ^ (73856093 * v423) ^ (83492791 * (int)v425);
            if (v428 >= *(_QWORD *)&v426)
              v430 = v428 % *(_QWORD *)&v426;
          }
          else
          {
            v430 = v428 & (*(_QWORD *)&v426 - 1);
          }
          v431 = *(uint64_t ***)(*v60 + 8 * v430);
          if (v431)
          {
            v432 = *v431;
            if (v432)
            {
              if (v429.u32[0] < 2uLL)
              {
                while (1)
                {
                  v434 = v432[1];
                  if (v428 == v434)
                  {
                    if (*((_DWORD *)v432 + 4) == v423
                      && *(uint64_t *)((char *)v432 + 20) == __PAIR64__(v425, HIDWORD(v615)))
                    {
                      goto LABEL_648;
                    }
                  }
                  else if ((v434 & (*(_QWORD *)&v426 - 1)) != v430)
                  {
                    goto LABEL_640;
                  }
                  v432 = (uint64_t *)*v432;
                  if (!v432)
                    goto LABEL_640;
                }
              }
              do
              {
                v433 = v432[1];
                if (v428 == v433)
                {
                  if (*((_DWORD *)v432 + 4) == v423
                    && *(uint64_t *)((char *)v432 + 20) == __PAIR64__(v425, HIDWORD(v615)))
                  {
                    goto LABEL_648;
                  }
                }
                else
                {
                  if (v433 >= *(_QWORD *)&v426)
                    v433 %= *(_QWORD *)&v426;
                  if (v433 != v430)
                    break;
                }
                v432 = (uint64_t *)*v432;
              }
              while (v432);
            }
          }
        }
LABEL_640:
        sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/SpatialSubdivisionGraphAlgorithms.hpp", 266, (uint64_t)"edges_from_node.count(current_position) == 1", 44, (uint64_t)"Edges from node not found", 25, (void (*)(void **))sub_22457406C);
        v435 = atomic_load((unsigned __int8 *)&qword_255795680);
        if ((v435 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release(&qword_255795680);
        }
        if (!byte_255795670 || byte_255795678)
        {
          v436 = qword_255795648;
          for (k = qword_255795650; v436 != k; v436 += 16)
            (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v436)(*(_QWORD *)(v436 + 8), "edges_from_node.count(current_position) == 1", 44, "Edges from node not found", 25);
        }
        v438 = atomic_load((unsigned __int8 *)&qword_255795680);
        if ((v438 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
        {
          __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
          __cxa_guard_release(&qword_255795680);
        }
        if (!byte_255795670)
          abort();
        qword_255795660(*(_QWORD *)algn_255795668, "edges_from_node.count(current_position) == 1", 44, "Edges from node not found", 25);
        v423 = (int)v615;
        v427 = HIDWORD(v615);
        v425 = v616;
        v426 = (int8x8_t)v60[1];
        v428 = (19349669 * SHIDWORD(v615)) ^ (73856093 * (int)v615) ^ (83492791 * (int)v616);
LABEL_648:
        if (!*(_QWORD *)&v426)
          goto LABEL_876;
        v439 = (uint8x8_t)vcnt_s8(v426);
        v439.i16[0] = vaddlv_u8(v439);
        if (v439.u32[0] > 1uLL)
        {
          v440 = v428;
          if (v428 >= *(_QWORD *)&v426)
            v440 = v428 % *(_QWORD *)&v426;
        }
        else
        {
          v440 = (*(_QWORD *)&v426 - 1) & v428;
        }
        v441 = *(uint64_t ***)(*v60 + 8 * v440);
        if (!v441 || (v442 = *v441) == 0)
LABEL_876:
          sub_223198218("unordered_map::at: key not found");
        if (v439.u32[0] < 2uLL)
        {
          v443 = *(_QWORD *)&v426 - 1;
          while (1)
          {
            v445 = v442[1];
            if (v428 == v445)
            {
              if (*((_DWORD *)v442 + 4) == v423 && *((_DWORD *)v442 + 5) == v427 && *((_DWORD *)v442 + 6) == v425)
                goto LABEL_672;
            }
            else if ((v445 & v443) != v440)
            {
              goto LABEL_876;
            }
            v442 = (uint64_t *)*v442;
            if (!v442)
              goto LABEL_876;
          }
        }
        while (2)
        {
          v444 = v442[1];
          if (v428 != v444)
          {
            if (v444 >= *(_QWORD *)&v426)
              v444 %= *(_QWORD *)&v426;
            if (v444 != v440)
              goto LABEL_876;
            goto LABEL_658;
          }
          if (*((_DWORD *)v442 + 4) != v423 || *((_DWORD *)v442 + 5) != v427 || *((_DWORD *)v442 + 6) != v425)
          {
LABEL_658:
            v442 = (uint64_t *)*v442;
            if (!v442)
              goto LABEL_876;
            continue;
          }
          break;
        }
LABEL_672:
        v446 = (float *)sub_223A1A5B0((uint64_t)v604, (int *)&v615, (uint64_t)&v615);
        v447 = (unsigned int *)v442[4];
        v448 = (unsigned int *)v442[5];
        if (v447 == v448)
        {
          v60 = v575;
          if (v574 != v389)
            continue;
          goto LABEL_573;
        }
        break;
      }
      v449 = v446[7];
      while (2)
      {
        v451 = *v447;
        v452 = *a3;
        if (LOBYTE((*a3)[24 * *v447 + 1]))
        {
          v453 = &v452[24 * v451];
          v454 = v453[2];
          v455 = v453[3];
          v456 = v453[4];
          if (v454 == (_DWORD)v615 && v455 == HIDWORD(v615) && v456 == v616)
          {
            v459 = &v452[24 * v451];
            v454 = v459[5];
            v455 = v459[6];
            v456 = v459[7];
          }
          if (v604[1])
          {
            v460 = (19349669 * v455) ^ (83492791 * v456) ^ (73856093 * v454);
            v461 = (uint8x8_t)vcnt_s8((int8x8_t)v604[1]);
            v461.i16[0] = vaddlv_u8(v461);
            if (v461.u32[0] > 1uLL)
            {
              v462 = (19349669 * v455) ^ (83492791 * v456) ^ (73856093 * v454);
              if ((void *)v460 >= v604[1])
                v462 = v460 % (unint64_t)v604[1];
            }
            else
            {
              v462 = v460 & ((unint64_t)v604[1] - 1);
            }
            v463 = (uint64_t **)*((_QWORD *)v604[0] + v462);
            if (v463)
            {
              v464 = *v463;
              if (v464)
              {
                if (v461.u32[0] < 2uLL)
                {
                  while (1)
                  {
                    v466 = v464[1];
                    if (v460 == v466)
                    {
                      if (*((_DWORD *)v464 + 4) == v454
                        && *((_DWORD *)v464 + 5) == v455
                        && *((_DWORD *)v464 + 6) == v456)
                      {
                        goto LABEL_675;
                      }
                    }
                    else if ((v466 & ((uint64_t)v604[1] - 1)) != v462)
                    {
                      goto LABEL_711;
                    }
                    v464 = (uint64_t *)*v464;
                    if (!v464)
                      goto LABEL_711;
                  }
                }
                do
                {
                  v465 = v464[1];
                  if (v460 == v465)
                  {
                    if (*((_DWORD *)v464 + 4) == v454 && *((_DWORD *)v464 + 5) == v455 && *((_DWORD *)v464 + 6) == v456)
                      goto LABEL_675;
                  }
                  else
                  {
                    if ((void *)v465 >= v604[1])
                      v465 %= (unint64_t)v604[1];
                    if (v465 != v462)
                      break;
                  }
                  v464 = (uint64_t *)*v464;
                }
                while (v464);
              }
            }
          }
LABEL_711:
          v467 = v449 + *(float *)&v452[24 * v451 + 10];
          if (v390 >= v578)
          {
            v469 = 0xCCCCCCCCCCCCCCCDLL * ((v390 - v391) >> 2) + 1;
            if (v469 > 0xCCCCCCCCCCCCCCCLL)
              sub_22316E078();
            if (0x999999999999999ALL * ((v578 - v391) >> 2) > v469)
              v469 = 0x999999999999999ALL * ((v578 - v391) >> 2);
            if (0xCCCCCCCCCCCCCCCDLL * ((v578 - v391) >> 2) >= 0x666666666666666)
              v470 = 0xCCCCCCCCCCCCCCCLL;
            else
              v470 = v469;
            if (v470 > 0xCCCCCCCCCCCCCCCLL)
              sub_223174E94();
            v471 = (char *)operator new(20 * v470);
            v472 = &v471[4 * ((v390 - v391) >> 2)];
            *(_DWORD *)v472 = v454;
            *((_DWORD *)v472 + 1) = v455;
            *((_DWORD *)v472 + 2) = v456;
            *((float *)v472 + 3) = v467;
            *((_DWORD *)v472 + 4) = v451;
            for (m = v472; v390 != v391; *(_QWORD *)(m + 12) = *(_QWORD *)(v390 + 12))
            {
              v474 = *(_QWORD *)(v390 - 20);
              v390 -= 20;
              v475 = *((_DWORD *)v390 + 2);
              *(_QWORD *)(m - 20) = v474;
              m -= 20;
              *((_DWORD *)m + 2) = v475;
            }
            v578 = &v471[20 * v470];
            v390 = v472 + 20;
            if (v391)
              operator delete(v391);
            v391 = m;
            v468 = v390 - m;
            if (v390 - m >= 21)
            {
LABEL_726:
              v476 = (v468 / 0x14 - 2) >> 1;
              v477 = (float *)&v391[20 * v476];
              v478 = *((float *)v390 - 2);
              if (v477[3] > v478)
              {
                v479 = (float *)(v390 - 20);
                v480 = *(_QWORD *)(v390 - 20);
                *(_DWORD *)&v599[8] = *((_DWORD *)v390 - 3);
                *(_QWORD *)v599 = v480;
                v481 = *((_DWORD *)v390 - 1);
                do
                {
                  v482 = v479;
                  v479 = v477;
                  v483 = *(_QWORD *)v477;
                  v482[2] = v479[2];
                  *(_QWORD *)v482 = v483;
                  *(_QWORD *)(v482 + 3) = *(_QWORD *)(v479 + 3);
                  if (!v476)
                    break;
                  v476 = (v476 - 1) >> 1;
                  v477 = (float *)&v391[20 * v476];
                }
                while (v477[3] > v478);
                v450 = *(_QWORD *)v599;
                v479[2] = *(float *)&v599[8];
                *(_QWORD *)v479 = v450;
                v479[3] = v478;
                *((_DWORD *)v479 + 4) = v481;
              }
            }
          }
          else
          {
            *(_DWORD *)v390 = v454;
            *((_DWORD *)v390 + 1) = v455;
            *((_DWORD *)v390 + 2) = v456;
            *((float *)v390 + 3) = v467;
            *((_DWORD *)v390 + 4) = v451;
            v390 += 20;
            v468 = v390 - v391;
            if (v390 - v391 >= 21)
              goto LABEL_726;
          }
        }
LABEL_675:
        if (++v447 != v448)
          continue;
        break;
      }
      v389 = v602;
      v574 = v601;
      v60 = v575;
      if (v601 != v602)
        continue;
      break;
    }
LABEL_573:
    if (v391 == v390)
    {
      v391 = v390;
      goto LABEL_756;
    }
LABEL_574:
    if (v599 != v391)
    {
      v393 = *(_QWORD *)v391;
      *(_DWORD *)&v599[8] = *((_DWORD *)v391 + 2);
      *(_QWORD *)v599 = v393;
    }
    v600 = *(_QWORD *)(v391 + 12);
    if (v390 - v391 >= 21)
    {
      v394 = 0;
      v395 = 0xCCCCCCCCCCCCCCCDLL * ((v390 - v391) >> 2);
      v396 = *(_QWORD *)v391;
      v614 = *((_DWORD *)v391 + 2);
      v613 = v396;
      v397 = *(_QWORD *)(v391 + 12);
      v398 = v391;
      do
      {
        v400 = v398;
        v398 += 20 * v394 + 20;
        v401 = 2 * v394;
        v394 = (2 * v394) | 1;
        v402 = v401 + 2;
        if (v402 < v395 && *((float *)v398 + 3) > *((float *)v398 + 8))
        {
          v398 += 20;
          v394 = v402;
        }
        v399 = *(_QWORD **)v398;
        *((_DWORD *)v400 + 2) = *((_DWORD *)v398 + 2);
        *v400 = v399;
        *(_QWORD *)((char *)v400 + 12) = *(_QWORD *)(v398 + 12);
      }
      while (v394 <= (uint64_t)((unint64_t)(v395 - 2) >> 1));
      v403 = v390 - 20;
      if (v398 == v390 - 20)
      {
        v415 = v613;
        *((_DWORD *)v398 + 2) = v614;
        *(_QWORD *)v398 = v415;
        *(_QWORD *)(v398 + 12) = v397;
      }
      else
      {
        v404 = *(_QWORD *)v403;
        *((_DWORD *)v398 + 2) = *((_DWORD *)v390 - 3);
        *(_QWORD *)v398 = v404;
        *(_QWORD *)(v398 + 12) = *((_QWORD *)v390 - 1);
        v405 = v613;
        *((_DWORD *)v390 - 3) = v614;
        *(_QWORD *)v403 = v405;
        *((_QWORD *)v390 - 1) = v397;
        v406 = v398 - v391 + 20;
        if (v406 >= 21)
        {
          v407 = (v406 / 0x14uLL - 2) >> 1;
          v408 = &v391[20 * v407];
          v409 = *((float *)v398 + 3);
          if (*((float *)v408 + 3) > v409)
          {
            v410 = *(_QWORD **)v398;
            v616 = *((_DWORD *)v398 + 2);
            v615 = v410;
            v411 = *((_DWORD *)v398 + 4);
            do
            {
              v412 = v398;
              v398 = v408;
              v413 = *(_QWORD *)v408;
              *((_DWORD *)v412 + 2) = *((_DWORD *)v398 + 2);
              *v412 = v413;
              *(_QWORD *)((char *)v412 + 12) = *(_QWORD *)(v398 + 12);
              if (!v407)
                break;
              v407 = (v407 - 1) >> 1;
              v408 = &v391[20 * v407];
            }
            while (*((float *)v408 + 3) > v409);
            v414 = v615;
            *((_DWORD *)v398 + 2) = v616;
            *(_QWORD *)v398 = v414;
            *((float *)v398 + 3) = v409;
            *((_DWORD *)v398 + 4) = v411;
          }
        }
      }
    }
    v390 -= 20;
    if (v604[1])
    {
      v416 = (19349669 * *(int *)&v599[4]) ^ (73856093 * *(int *)v599) ^ (83492791 * *(int *)&v599[8]);
      v417 = (uint8x8_t)vcnt_s8((int8x8_t)v604[1]);
      v417.i16[0] = vaddlv_u8(v417);
      if (v417.u32[0] > 1uLL)
      {
        v418 = (19349669 * *(int *)&v599[4]) ^ (73856093 * *(int *)v599) ^ (83492791 * *(int *)&v599[8]);
        if ((void *)v416 >= v604[1])
          v418 = v416 % (unint64_t)v604[1];
      }
      else
      {
        v418 = v416 & ((unint64_t)v604[1] - 1);
      }
      v419 = (uint64_t **)*((_QWORD *)v604[0] + v418);
      if (v419)
      {
        v420 = *v419;
        if (v420)
        {
          if (v417.u32[0] < 2uLL)
          {
            while (1)
            {
              v422 = v420[1];
              if (v416 == v422)
              {
                if (*((_DWORD *)v420 + 4) == *(_DWORD *)v599
                  && *((_DWORD *)v420 + 5) == *(_DWORD *)&v599[4]
                  && *((_DWORD *)v420 + 6) == *(_DWORD *)&v599[8])
                {
                  goto LABEL_614;
                }
              }
              else if ((v422 & ((uint64_t)v604[1] - 1)) != v418)
              {
                goto LABEL_737;
              }
              v420 = (uint64_t *)*v420;
              if (!v420)
                goto LABEL_737;
            }
          }
          do
          {
            v421 = v420[1];
            if (v416 == v421)
            {
              if (*((_DWORD *)v420 + 4) == *(_DWORD *)v599
                && *((_DWORD *)v420 + 5) == *(_DWORD *)&v599[4]
                && *((_DWORD *)v420 + 6) == *(_DWORD *)&v599[8])
              {
LABEL_614:
                if (v391 == v390)
                {
LABEL_756:
                  v490 = v601;
                  v389 = v602;
                  if (v601 != v602)
                    goto LABEL_757;
LABEL_765:
                  v492 = 0;
                  if (v389)
                    goto LABEL_821;
                  goto LABEL_822;
                }
                goto LABEL_574;
              }
            }
            else
            {
              if ((void *)v421 >= v604[1])
                v421 %= (unint64_t)v604[1];
              if (v421 != v418)
                break;
            }
            v420 = (uint64_t *)*v420;
          }
          while (v420);
        }
      }
    }
LABEL_737:
    sub_223A1AA44((uint64_t)&v610, (unsigned int *)&v600 + 1, (_DWORD *)&v600 + 1);
    sub_223A1B0D0((uint64_t)v604, (int *)v599, (uint64_t)v599, *(float *)&v600);
    sub_223A1B438((uint64_t)&v607, (int *)v599, (uint64_t)v599, SHIDWORD(v600));
    v484 = v601;
    if ((unint64_t)v601 >= v603)
    {
      v486 = v601;
      v487 = 0x5555555555555556 * ((uint64_t)(v603 - (_QWORD)v601) >> 2);
      if (v487 <= 1)
        v487 = 1;
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v603 - (_QWORD)v601) >> 2) >= 0xAAAAAAAAAAAAAAALL)
        v488 = 0x1555555555555555;
      else
        v488 = v487;
      if (v488 > 0x1555555555555555)
        sub_223174E94();
      v489 = (char *)operator new(12 * v488);
      *(_QWORD *)v489 = *(_QWORD *)v599;
      *((_DWORD *)v489 + 2) = *(_DWORD *)&v599[8];
      v389 = (uint64_t *)(v489 + 12);
      v601 = (uint64_t *)v489;
      v603 = (unint64_t)&v489[12 * v488];
      if (v486)
        operator delete(v486);
      v574 = (uint64_t *)v489;
    }
    else
    {
      v485 = *(_QWORD *)v599;
      *((_DWORD *)v601 + 2) = *(_DWORD *)&v599[8];
      *v484 = v485;
      v574 = v484;
      v389 = (uint64_t *)((char *)v484 + 12);
    }
    v602 = v389;
    v392 = v586;
    if (v586 != v588)
    {
      while (*(_DWORD *)v392 != *(_DWORD *)v574
           || *((_DWORD *)v392 + 1) != *((_DWORD *)v574 + 1)
           || *((_DWORD *)v392 + 2) != *((_DWORD *)v574 + 2))
      {
        v392 += 12;
        if (v392 == v588)
        {
          v392 = v588;
          break;
        }
      }
    }
    if (v392 == v588)
      continue;
    break;
  }
  v490 = v574;
  if (v574 == v389)
    goto LABEL_765;
LABEL_757:
  v491 = v586;
  if (v586 != v588)
  {
    while (*(_DWORD *)v491 != *(_DWORD *)v490
         || *((_DWORD *)v491 + 1) != *((_DWORD *)v490 + 1)
         || *((_DWORD *)v491 + 2) != *((_DWORD *)v490 + 2))
    {
      v491 += 12;
      if (v491 == v588)
      {
        v491 = v588;
        break;
      }
    }
  }
  if (v491 != v588)
  {
    v493 = *v490;
    *(_DWORD *)&v599[8] = *((_DWORD *)v490 + 2);
    *(_QWORD *)v599 = v493;
    while (1)
    {
      if (!sub_2239942A0(&v607, (int *)v599))
      {
        v492 = 1;
        v389 = v601;
        if (v601)
          goto LABEL_821;
        goto LABEL_822;
      }
      if (!sub_2239942A0(&v607, (int *)v599)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/SpatialSubdivisionGraphAlgorithms.hpp", 348, (uint64_t)"block_incoming_edges.count(target) == 1", 39, (uint64_t)"More than 1 incoming edge to a node on shortest path", 52, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v615 = v599;
      v495 = *((_DWORD *)sub_223A1AD44((uint64_t)&v607, (int *)v599, (uint64_t)&unk_2245BA939, &v615) + 7);
      v496 = v581;
      if (v581 < v582)
      {
        *(_DWORD *)v581 = v495;
        v497 = (uint64_t)(v581 + 4);
        goto LABEL_795;
      }
      v498 = v580;
      v499 = (v581 - v580) >> 2;
      v500 = v499 + 1;
      if ((unint64_t)(v499 + 1) >> 62)
        sub_22316E078();
      v501 = v582 - v580;
      if ((v582 - v580) >> 1 > v500)
        v500 = v501 >> 1;
      v502 = (unint64_t)v501 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v500;
      if (v502)
        break;
      v503 = 0;
      v504 = (char *)(4 * v499);
      *(_DWORD *)(4 * v499) = v495;
      v497 = 4 * v499 + 4;
      v505 = v581 - v580;
      if (v581 != v580)
        goto LABEL_787;
LABEL_793:
      v580 = v504;
      v582 = &v503[4 * v502];
      if (v498)
        operator delete(v498);
LABEL_795:
      v581 = (char *)v497;
      v515 = *a3;
      v516 = (uint64_t)&(*a3)[24 * v495];
      v518 = *(_DWORD *)(v516 + 8);
      v517 = v516 + 8;
      if (v518 == *(_DWORD *)v599
        && *(_DWORD *)(v517 + 4) == *(_DWORD *)&v599[4]
        && *(_DWORD *)(v517 + 8) == *(_DWORD *)&v599[8])
      {
        v519 = (uint64_t)&v515[24 * v495 + 5];
        if (v599 != (_BYTE *)v519)
        {
          v520 = *(_QWORD *)v519;
          *(_DWORD *)&v599[8] = *(_DWORD *)(v519 + 8);
          *(_QWORD *)v599 = v520;
        }
      }
      else
      {
        if (v599 != (_BYTE *)v517)
        {
          v521 = *(_QWORD **)v517;
          *(_DWORD *)&v599[8] = *(_DWORD *)(v517 + 8);
          *(_QWORD *)v599 = v521;
        }
        v517 = (uint64_t)&v515[24 * v495 + 5];
      }
      v615 = *(_QWORD **)v517;
      v616 = *(_DWORD *)(v517 + 8);
      v522 = v584;
      if (v584 < (unsigned int *)v585)
      {
        v494 = *(_QWORD **)v517;
        v584[2] = *(_DWORD *)(v517 + 8);
        *(_QWORD *)v584 = v494;
        v584 += 3;
      }
      else
      {
        v523 = 0xAAAAAAAAAAAAAAABLL * (v584 - v583) + 1;
        if (v523 > 0x1555555555555555)
          sub_22316E078();
        if (0x5555555555555556 * ((v585 - (char *)v583) >> 2) > v523)
          v523 = 0x5555555555555556 * ((v585 - (char *)v583) >> 2);
        if (0xAAAAAAAAAAAAAAABLL * ((v585 - (char *)v583) >> 2) >= 0xAAAAAAAAAAAAAAALL)
          v524 = 0x1555555555555555;
        else
          v524 = v523;
        if (v524)
        {
          if (v524 > 0x1555555555555555)
            sub_223174E94();
          v525 = (char *)operator new(12 * v524);
        }
        else
        {
          v525 = 0;
        }
        v526 = &v525[4 * (v584 - v583)];
        *(_QWORD *)v526 = v615;
        *((_DWORD *)v526 + 2) = v616;
        v527 = (unsigned int *)v526;
        if (v584 != v583)
        {
          do
          {
            v528 = *(_QWORD *)(v522 - 3);
            v522 -= 3;
            v529 = v522[2];
            *(_QWORD *)(v527 - 3) = v528;
            v527 -= 3;
            v527[2] = v529;
          }
          while (v522 != v583);
          v522 = v583;
        }
        v530 = v526 + 12;
        v583 = v527;
        v585 = &v525[12 * v524];
        if (v522)
          operator delete(v522);
        v584 = (unsigned int *)v530;
      }
    }
    if (v502 >> 62)
      sub_223174E94();
    v503 = operator new(4 * v502);
    v504 = &v503[4 * v499];
    *(_DWORD *)v504 = v495;
    v497 = (uint64_t)(v504 + 4);
    v505 = v581 - v580;
    if (v581 == v580)
      goto LABEL_793;
LABEL_787:
    v506 = v505 - 4;
    if (v506 < 0x2C)
      goto LABEL_927;
    if ((unint64_t)(v580 - v503) < 0x20)
      goto LABEL_927;
    v507 = (v506 >> 2) + 1;
    v508 = 4 * (v507 & 0x7FFFFFFFFFFFFFF8);
    v509 = &v581[-v508];
    v504 -= v508;
    v510 = &v503[4 * v499 - 16];
    v511 = v581 - 16;
    v512 = v507 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v513 = *(_OWORD *)v511;
      *(v510 - 1) = *((_OWORD *)v511 - 1);
      *v510 = v513;
      v510 -= 2;
      v511 -= 32;
      v512 -= 8;
    }
    while (v512);
    v496 = v509;
    if (v507 != (v507 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_927:
      do
      {
        v514 = *((_DWORD *)v496 - 1);
        v496 -= 4;
        *((_DWORD *)v504 - 1) = v514;
        v504 -= 4;
      }
      while (v496 != v580);
    }
    goto LABEL_793;
  }
  v492 = 0;
  v389 = v490;
  if (v490)
  {
LABEL_821:
    v602 = v389;
    operator delete(v389);
  }
LABEL_822:
  if (v391)
    operator delete(v391);
  v531 = v605[0];
  if (v605[0])
  {
    do
    {
      v532 = (_QWORD *)*v531;
      operator delete(v531);
      v531 = v532;
    }
    while (v532);
  }
  v533 = v604[0];
  v604[0] = 0;
  if (v533)
    operator delete(v533);
  v534 = (_QWORD *)v608;
  if ((_QWORD)v608)
  {
    do
    {
      v535 = (_QWORD *)*v534;
      operator delete(v534);
      v534 = v535;
    }
    while (v535);
  }
  v536 = (void *)v607;
  *(_QWORD *)&v607 = 0;
  if (v536)
    operator delete(v536);
  v537 = (_QWORD *)v611;
  if ((_QWORD)v611)
  {
    do
    {
      v538 = (_QWORD *)*v537;
      operator delete(v537);
      v537 = v538;
    }
    while (v538);
  }
  v539 = (void *)v610;
  *(_QWORD *)&v610 = 0;
  if (v539)
    operator delete(v539);
  v265 = __p;
  if (v569)
    operator delete(v569);
  v541 = (char *)v596;
  v540 = v597;
  if ((v492 & 1) != 0)
  {
    if (v596 != v597)
    {
      v542 = *a3;
      v543 = v597 - (_BYTE *)v596 - 4;
      if (v543 < 4)
        goto LABEL_928;
      v544 = (v543 >> 2) + 1;
      v545 = (char *)v596 + 4 * (v544 & 0x7FFFFFFFFFFFFFFELL);
      v546 = (unsigned int *)((char *)v596 + 4);
      v547 = v544 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v548 = &v542[24 * *v546];
        LOBYTE(v542[24 * *(v546 - 1) + 1]) = 1;
        *((_BYTE *)v548 + 4) = 1;
        v546 += 2;
        v547 -= 2;
      }
      while (v547);
      v541 = v545;
      if (v544 != (v544 & 0x7FFFFFFFFFFFFFFELL))
      {
LABEL_928:
        do
        {
          v549 = *(_DWORD *)v541;
          v541 += 4;
          LOBYTE(v542[24 * v549 + 1]) = 1;
        }
        while (v541 != v540);
      }
    }
    *(_BYTE *)(a1 + 108) = 0;
    v550 = v583;
    v551 = v584;
    v552 = 0xAAAAAAAAAAAAAAABLL * (v584 - v583);
    if (v552 != (v581 - v580) >> 2)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialBoundary.cpp", 214, (uint64_t)"nodes.size() == edge_indices.size()", 35, (uint64_t)"Edge and node counts do not match", 33, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v550 = v583;
      v551 = v584;
      v552 = 0xAAAAAAAAAAAAAAABLL * (v584 - v583);
    }
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a1 + 32);
    if (v551 != v550)
    {
      v553 = 0;
      do
      {
        v554 = &v583[3 * v553];
        v555 = v554[2];
        *(_QWORD *)&v610 = *(_QWORD *)v554;
        DWORD2(v610) = v555;
        sub_223999954(a1, (uint64_t *)&v610, *(_DWORD *)&v580[4 * v553++]);
      }
      while (v552 != v553);
    }
    sub_22399A4DC(a1, v564);
    v265 = __p;
  }
  else if (v596 != v597)
  {
    v556 = *a3;
    v557 = v597 - (_BYTE *)v596 - 4;
    if (v557 < 4)
      goto LABEL_929;
    v558 = (v557 >> 2) + 1;
    v559 = (char *)v596 + 4 * (v558 & 0x7FFFFFFFFFFFFFFELL);
    v560 = (unsigned int *)((char *)v596 + 4);
    v561 = v558 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v562 = &v556[24 * *v560];
      LOBYTE(v556[24 * *(v560 - 1) + 1]) = 1;
      *((_BYTE *)v562 + 4) = 1;
      v560 += 2;
      v561 -= 2;
    }
    while (v561);
    v541 = v559;
    if (v558 != (v558 & 0x7FFFFFFFFFFFFFFELL))
    {
LABEL_929:
      do
      {
        v563 = *(_DWORD *)v541;
        v541 += 4;
        LOBYTE(v556[24 * v563 + 1]) = 1;
      }
      while (v541 != v540);
    }
  }
LABEL_858:
  if (v580)
    operator delete(v580);
  if (v583)
    operator delete(v583);
  if (v586)
    operator delete(v586);
  if (v265)
    operator delete(v265);
LABEL_866:
  if (v590)
  {
    v591 = (unsigned int *)v590;
    operator delete(v590);
  }
  if (v593)
  {
    v594 = (unsigned int *)v593;
    operator delete(v593);
  }
  if (v596)
  {
    v597 = (char *)v596;
    operator delete(v596);
  }
}

void sub_223A13188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,void *a45)
{
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;

  if (a19)
  {
    operator delete(a19);
    v46 = a22;
    if (!a22)
    {
LABEL_3:
      v47 = __p;
      if (!__p)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else
  {
    v46 = a22;
    if (!a22)
      goto LABEL_3;
  }
  operator delete(v46);
  v47 = __p;
  if (!__p)
  {
LABEL_5:
    if (a14)
    {
      operator delete(a14);
      v48 = a28;
      if (!a28)
      {
LABEL_7:
        v49 = a31;
        if (!a31)
          goto LABEL_8;
        goto LABEL_12;
      }
    }
    else
    {
      v48 = a28;
      if (!a28)
        goto LABEL_7;
    }
    operator delete(v48);
    v49 = a31;
    if (!a31)
    {
LABEL_8:
      v50 = a34;
      if (!a34)
        goto LABEL_9;
      goto LABEL_13;
    }
LABEL_12:
    operator delete(v49);
    v50 = a34;
    if (!a34)
LABEL_9:
      _Unwind_Resume(exception_object);
LABEL_13:
    operator delete(v50);
    _Unwind_Resume(exception_object);
  }
LABEL_4:
  operator delete(v47);
  goto LABEL_5;
}

void sub_223A134D0(_QWORD *a1, unsigned int *a2, unsigned int *a3)
{
  unsigned int *v3;
  unsigned int *v4;
  _QWORD *v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _DWORD *v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  float v19;
  char v20;
  unint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  unint64_t *v28;
  uint64_t v29;
  float v30;
  _QWORD *v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  size_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  __int128 v45;
  char *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char v51;
  void **v52;
  float *v53;
  unint64_t **v54;
  unsigned int *v55;
  float *v56;
  _QWORD *v57;
  uint64_t v58;
  int v59[3];

  if (a2 != a3)
  {
    v3 = a3;
    v4 = a2;
    v5 = (_QWORD *)a1[1];
    v58 = *a1;
    v56 = (float *)a1[3];
    v57 = (_QWORD *)(*a1 + 240);
    v53 = (float *)a1[2];
    v54 = (unint64_t **)(v5 + 10);
    v52 = (void **)(v5 + 7);
    while (1)
    {
      v7 = *v4;
      v8 = *(_QWORD *)(v58 + 80);
      v9 = (_DWORD *)(v8 + 96 * *v4);
      v10 = (19349669 * v9[3]) ^ (73856093 * v9[2]) ^ (83492791 * v9[4]);
      v11 = (19349669 * v9[6]) ^ (73856093 * v9[5]) ^ (83492791 * v9[7]);
      if (v11 >= v10)
        v12 = v10;
      else
        v12 = v11;
      if (v10 > v11)
        v11 = v10;
      v59[0] = v12;
      v59[1] = v11;
      v59[2] = 0;
      v13 = sub_223919C2C(v57, v59);
      v15 = v13;
      v16 = v14;
      v18 = (unint64_t *)v5[11];
      v17 = v5[12];
      if ((unint64_t)v18 < v17)
      {
        *v18 = v13;
        v18[1] = v14;
        v5[11] = v18 + 2;
        if (*(_BYTE *)(v8 + 96 * v7 + 5))
          goto LABEL_12;
        goto LABEL_32;
      }
      v55 = v4;
      v21 = *v54;
      v22 = ((char *)v18 - (char *)*v54) >> 4;
      v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 60)
        sub_22316E078();
      v24 = v3;
      v25 = v17 - (_QWORD)v21;
      if (v25 >> 3 > v23)
        v23 = v25 >> 3;
      v26 = (unint64_t)v25 >= 0x7FFFFFFFFFFFFFF0 ? 0xFFFFFFFFFFFFFFFLL : v23;
      if (!v26)
        break;
      if (v26 >> 60)
        sub_223174E94();
      v27 = (char *)operator new(16 * v26);
      v28 = (unint64_t *)&v27[16 * v22];
      *v28 = v15;
      v28[1] = v16;
      v29 = (uint64_t)v28;
      if (v18 != v21)
        goto LABEL_27;
LABEL_29:
      v31 = v28 + 2;
      v5[10] = v29;
      v5[11] = v28 + 2;
      v5[12] = &v27[16 * v26];
      if (v18)
        operator delete(v18);
      v3 = v24;
      v4 = v55;
      v5[11] = v31;
      if (*(_BYTE *)(v8 + 96 * v7 + 5))
      {
LABEL_12:
        v19 = *(float *)(v8 + 96 * v7 + 36);
        if (v19 < 0.5)
        {
          v20 = 2;
          goto LABEL_37;
        }
        v30 = *(float *)(v8 + 96 * v7 + 32);
        if (v19 >= 0.9)
        {
          v20 = 4;
        }
        else
        {
          v30 = v30 * 0.5;
          v20 = 3;
        }
        goto LABEL_35;
      }
LABEL_32:
      if (*(_BYTE *)(v8 + 96 * v7 + 94))
      {
        v30 = *(float *)(v8 + 96 * v7 + 32);
        v20 = 1;
LABEL_35:
        *v53 = v30 + *v53;
        goto LABEL_37;
      }
      v20 = 0;
LABEL_37:
      *v56 = *(float *)(v8 + 96 * v7 + 32) + *v56;
      v33 = (char *)v5[8];
      v32 = v5[9];
      if ((unint64_t)v33 >= v32)
      {
        v34 = (char *)*v52;
        v35 = v33 - (_BYTE *)*v52;
        v36 = v35 + 1;
        if ((uint64_t)(v35 + 1) < 0)
          sub_22329A3C4();
        v37 = v32 - (_QWORD)v34;
        if (2 * v37 > v36)
          v36 = 2 * v37;
        if (v37 >= 0x3FFFFFFFFFFFFFFFLL)
          v38 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v38 = v36;
        if (v38)
        {
          v39 = (char *)operator new(v38);
          v40 = &v39[v35];
          v39[v35] = v20;
          v6 = (uint64_t)&v39[v35 + 1];
          if (v33 == v34)
          {
LABEL_64:
            v5[7] = v40;
            v5[8] = v6;
            v5[9] = &v39[v38];
            if (v34)
              operator delete(v34);
            goto LABEL_4;
          }
        }
        else
        {
          v39 = 0;
          v40 = (char *)(v33 - (_BYTE *)*v52);
          *(_BYTE *)v35 = v20;
          v6 = v35 + 1;
          if (v33 == v34)
            goto LABEL_64;
        }
        if (v35 >= 8 && (unint64_t)(v34 - v39) >= 0x20)
        {
          if (v35 >= 0x20)
          {
            v41 = v35 & 0xFFFFFFFFFFFFFFE0;
            v42 = &v39[v35 - 16];
            v43 = v33 - 16;
            v44 = v35 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v45 = *(_OWORD *)v43;
              *((_OWORD *)v42 - 1) = *((_OWORD *)v43 - 1);
              *(_OWORD *)v42 = v45;
              v42 -= 32;
              v43 -= 32;
              v44 -= 32;
            }
            while (v44);
            if (v35 == v41)
              goto LABEL_63;
            if ((v35 & 0x18) != 0)
              goto LABEL_56;
            v40 -= v41;
            v33 -= v41;
          }
          else
          {
            v41 = 0;
LABEL_56:
            v40 -= v35 & 0xFFFFFFFFFFFFFFF8;
            v46 = &v39[&v33[-v41] - v34 - 8];
            v47 = &v33[-v41 - 8];
            v48 = v41 - (v35 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v49 = *(_QWORD *)v47;
              v47 -= 8;
              *(_QWORD *)v46 = v49;
              v46 -= 8;
              v48 += 8;
            }
            while (v48);
            v33 -= v35 & 0xFFFFFFFFFFFFFFF8;
            if (v35 == (v35 & 0xFFFFFFFFFFFFFFF8))
            {
LABEL_63:
              v40 = v39;
              goto LABEL_64;
            }
          }
        }
        v50 = v40 - 1;
        do
        {
          v51 = *--v33;
          *v50-- = v51;
        }
        while (v33 != v34);
        goto LABEL_63;
      }
      *v33 = v20;
      v6 = (uint64_t)(v33 + 1);
LABEL_4:
      v5[8] = v6;
      if (++v4 == v3)
        return;
    }
    v27 = 0;
    v28 = (unint64_t *)(16 * v22);
    *v28 = v15;
    v28[1] = v14;
    v29 = 16 * v22;
    if (v18 == v21)
      goto LABEL_29;
    do
    {
LABEL_27:
      *(_OWORD *)(v29 - 16) = *((_OWORD *)v18 - 1);
      v29 -= 16;
      v18 -= 2;
    }
    while (v18 != v21);
    v18 = *v54;
    goto LABEL_29;
  }
}

uint64_t sub_223A13904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  uint64_t *i;
  uint64_t v6;
  uint64_t j;
  int v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t result;
  float32x4_t v12;
  float v13;
  float v14;
  uint64_t *k;
  uint64_t *v16;
  float32x2_t v22;
  float32x2_t v23;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  float32x2_t v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x4_t v35;
  float32x2_t v36;
  unint64_t v37;
  float32x2_t v38;
  unint64_t v39;
  float32x2_t *v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  float32x2_t *v48;
  uint64_t v49;
  unint64_t v50;
  float32x2_t *v51;
  float32x2_t v52;
  __int32 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  float v72;
  float v73;
  float v74;
  unsigned int v75;
  int v76;
  float32x2_t v77;
  float32x2_t v78;
  float32x2_t v79;
  _DWORD *v80;
  float32x2_t v81;
  unint64_t v82;
  float32x2_t *v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  float32x2_t *v91;
  uint64_t v92;
  unint64_t v93;
  float32x2_t *v94;
  float32x2_t v95;
  __int32 v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  float *v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  float *v107;
  uint64_t v108;
  uint64_t v109;
  float *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  float32x2_t v116;
  float32x2_t v118;
  _DWORD *v119;
  float32x2_t v120;
  unint64_t v121;
  float32x2_t *v122;
  char *v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  float32x2_t *v130;
  uint64_t v131;
  unint64_t v132;
  float32x2_t *v133;
  float32x2_t v134;
  __int32 v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  float *v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  float *v146;
  uint64_t v147;
  uint64_t v148;
  float *v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  float v154;
  uint64_t v155;
  uint64_t v156;
  float32x4_t v157;
  uint64_t v158;
  float32x4_t v159;
  float32x4_t **v160;
  float32x4_t *v161;
  int v162;

  sub_2241498F4(a2, 0);
  v4 = 10 * *(_DWORD *)(a1 + 216);
  for (i = *(uint64_t **)(a1 + 16); i; i = (uint64_t *)*i)
  {
    if (*((_BYTE *)i + 29))
      v4 += 5;
    else
      ++v4;
  }
  v6 = *(_QWORD *)(a1 + 80);
  for (j = *(_QWORD *)(a1 + 88); v6 != j; v6 += 96)
  {
    if (*(_BYTE *)(v6 + 4))
      v8 = 20;
    else
      v8 = 10;
    v4 += v8;
    if (*(_BYTE *)(v6 + 5))
      v4 += 5;
  }
  v9 = v4;
  sub_22339E3C8(a2, v4);
  v10 = (uint64_t *)(a2 + 32);
  result = sub_22339E3C8(a2 + 32, v9);
  for (k = (uint64_t *)(a1 + 208);
        ;
        result = sub_223A20418(a2, (float32x2_t *)((char *)k + 28), *((unsigned __int8 *)k + 36), v12, v13, v14))
  {
    k = (uint64_t *)*k;
    if (!k)
      break;
  }
  v155 = a1;
  v16 = *(uint64_t **)(a1 + 16);
  if (v16)
  {
    __asm { FMOV            V8.2S, #1.0 }
    v22 = (float32x2_t)vdup_n_s32(0x3C23D70Au);
    v23 = (float32x2_t)vdup_n_s32(0x3D4CCCCDu);
    __asm { FMOV            V11.2S, #3.0 }
    do
    {
      v161 = *(float32x4_t **)((char *)v16 + 44);
      v162 = 0;
      v25 = *(_QWORD *)(a2 + 8);
      if (v25 >= *(_QWORD *)(a2 + 16))
      {
        v27 = sub_2233B2838((unint64_t *)a2, (uint64_t *)&v161);
      }
      else
      {
        v26 = (uint64_t)v161;
        *(_DWORD *)(v25 + 8) = v162;
        *(_QWORD *)v25 = v26;
        v27 = v25 + 12;
      }
      *(_QWORD *)(a2 + 8) = v27;
      v159.i64[0] = _D8;
      v159.i32[2] = 1065353216;
      v28 = *(_QWORD *)(a2 + 40);
      if (v28 >= *(_QWORD *)(a2 + 48))
      {
        result = sub_2233B2B48((unint64_t *)(a2 + 32), (uint64_t *)&v159);
      }
      else
      {
        v29 = v159.i64[0];
        *(_DWORD *)(v28 + 8) = v159.i32[2];
        *(_QWORD *)v28 = v29;
        result = v28 + 12;
      }
      *(_QWORD *)(a2 + 40) = result;
      if (*((_BYTE *)v16 + 29))
      {
        v30 = 0;
        v31 = *(float32x2_t *)((char *)v16 + 52);
        v32 = *(float32x2_t *)((char *)v16 + 44);
        v33 = vadd_f32(v32, vmul_f32(v31, v22));
        v34 = vadd_f32(v32, vmul_f32(v31, v23));
        v35.i64[0] = 0x3F0000003F000000;
        v35.i64[1] = 0x3F0000003F000000;
        v157 = vmulq_f32(v159, v35);
        v36 = vdiv_f32(vsub_f32(v34, v33), _D11);
        do
        {
          v38 = vadd_f32(v33, vmul_n_f32(v36, (float)v30));
          v40 = *(float32x2_t **)(a2 + 8);
          v39 = *(_QWORD *)(a2 + 16);
          if ((unint64_t)v40 >= v39)
          {
            v42 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v40 - *(_QWORD *)a2) >> 2);
            v43 = v42 + 1;
            if (v42 + 1 > 0x1555555555555555)
              goto LABEL_170;
            v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v39 - *(_QWORD *)a2) >> 2);
            if (2 * v44 > v43)
              v43 = 2 * v44;
            if (v44 >= 0xAAAAAAAAAAAAAAALL)
              v45 = 0x1555555555555555;
            else
              v45 = v43;
            if (v45)
            {
              LODWORD(v160) = v45;
              v46 = *(unsigned int *)(a2 + 28);
              if ((_DWORD)v46 == -1)
                goto LABEL_168;
              v161 = (float32x4_t *)&v160;
              result = ((uint64_t (*)(float32x4_t **, uint64_t))off_24EC5D748[v46])(&v161, a2 + 24);
            }
            else
            {
              result = 0;
              v47 = 0;
            }
            v48 = (float32x2_t *)(result + 12 * v42);
            *v48 = v38;
            v48[1].i32[0] = 0;
            v50 = *(_QWORD *)a2;
            v49 = *(_QWORD *)(a2 + 8);
            v51 = v48;
            if (v49 != *(_QWORD *)a2)
            {
              do
              {
                v52 = *(float32x2_t *)(v49 - 12);
                v49 -= 12;
                v53 = *(_DWORD *)(v49 + 8);
                *(float32x2_t *)((char *)v51 - 12) = v52;
                v51 = (float32x2_t *)((char *)v51 - 12);
                v51[1].i32[0] = v53;
              }
              while (v49 != v50);
              v49 = *(_QWORD *)a2;
            }
            v41 = (char *)&v48[1] + 4;
            *(_QWORD *)a2 = v51;
            *(_QWORD *)(a2 + 8) = (char *)v48 + 12;
            v54 = *(_QWORD *)(a2 + 16);
            *(_QWORD *)(a2 + 16) = result + 12 * v47;
            if (v49)
            {
              v161 = (float32x4_t *)v49;
              v162 = -1431655765 * ((unint64_t)(v54 - v49) >> 2);
              v55 = *(unsigned int *)(a2 + 28);
              if ((_DWORD)v55 == -1)
                sub_22316DD70();
              v160 = &v161;
              result = ((uint64_t (*)(float32x4_t ***, uint64_t))off_24EC5D758[v55])(&v160, a2 + 24);
            }
          }
          else
          {
            *v40 = v38;
            v40[1].i32[0] = 0;
            v41 = (char *)&v40[1] + 4;
          }
          *(_QWORD *)(a2 + 8) = v41;
          v56 = *(_QWORD *)(a2 + 40);
          v57 = *(_QWORD *)(a2 + 48);
          if (v56 < v57)
          {
            *(_DWORD *)(v56 + 8) = v157.i32[2];
            *(_QWORD *)v56 = v157.i64[0];
            v37 = v56 + 12;
          }
          else
          {
            v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v56 - *v10) >> 2);
            v59 = v58 + 1;
            if (v58 + 1 > 0x1555555555555555)
LABEL_170:
              sub_22316E078();
            v60 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v57 - *v10) >> 2);
            if (2 * v60 > v59)
              v59 = 2 * v60;
            if (v60 >= 0xAAAAAAAAAAAAAAALL)
              v59 = 0x1555555555555555;
            if (v59)
            {
              LODWORD(v160) = v59;
              v61 = *(unsigned int *)(a2 + 60);
              if ((_DWORD)v61 == -1)
LABEL_168:
                sub_22316DD70();
              v161 = (float32x4_t *)&v160;
              result = ((uint64_t (*)(float32x4_t **, uint64_t))off_24EC5D748[v61])(&v161, a2 + 56);
            }
            else
            {
              result = 0;
              v62 = 0;
            }
            v63 = result + 12 * v58;
            *(_QWORD *)v63 = v157.i64[0];
            *(_DWORD *)(v63 + 8) = v157.i32[2];
            v65 = *(_QWORD *)(a2 + 32);
            v64 = *(_QWORD *)(a2 + 40);
            v66 = v63;
            if (v64 != v65)
            {
              do
              {
                v67 = *(_QWORD *)(v64 - 12);
                v64 -= 12;
                v68 = *(_DWORD *)(v64 + 8);
                *(_QWORD *)(v66 - 12) = v67;
                v66 -= 12;
                *(_DWORD *)(v66 + 8) = v68;
              }
              while (v64 != v65);
              v64 = *v10;
            }
            v37 = v63 + 12;
            *(_QWORD *)(a2 + 32) = v66;
            *(_QWORD *)(a2 + 40) = v63 + 12;
            v69 = *(_QWORD *)(a2 + 48);
            *(_QWORD *)(a2 + 48) = result + 12 * v62;
            if (v64)
            {
              v161 = (float32x4_t *)v64;
              v162 = -1431655765 * ((unint64_t)(v69 - v64) >> 2);
              v70 = *(unsigned int *)(a2 + 60);
              if ((_DWORD)v70 == -1)
                sub_22316DD70();
              v160 = &v161;
              result = ((uint64_t (*)(float32x4_t ***, uint64_t))off_24EC5D758[v70])(&v160, a2 + 56);
            }
          }
          *(_QWORD *)(a2 + 40) = v37;
          ++v30;
        }
        while (v30 != 4);
        *(_DWORD *)(a2 + 64) = 1;
      }
      v16 = (uint64_t *)*v16;
    }
    while (v16);
  }
  v71 = *(_QWORD *)(a1 + 80);
  v156 = *(_QWORD *)(v155 + 88);
  if (v71 != v156)
  {
    v158 = a2 + 24;
    while (1)
    {
      if (*(_BYTE *)(v71 + 94))
      {
        v72 = 1.0;
LABEL_70:
        v73 = 0.0;
LABEL_71:
        v74 = 0.0;
        goto LABEL_72;
      }
      v72 = 0.0;
      if (!*(_BYTE *)(v71 + 4))
        goto LABEL_70;
      v154 = *(float *)(v71 + 36);
      v73 = 1.0;
      if (v154 < 0.1)
        goto LABEL_71;
      v74 = 0.5;
      if (v154 < 0.2)
        goto LABEL_72;
      v74 = 1.0;
      if (v154 < 0.3)
        goto LABEL_72;
      v73 = 0.5;
      if (v154 < 0.4)
        goto LABEL_72;
      if (v154 < 0.5)
        break;
      if (v154 >= 0.6)
      {
        v72 = 1.0;
        if (v154 < 0.7)
          goto LABEL_70;
        v74 = 0.5;
        if (v154 < 0.8)
          break;
        v74 = 1.0;
        v73 = 0.0;
        if (v154 >= 0.9)
          v73 = 1.0;
      }
      else
      {
        v73 = 0.0;
        v72 = 0.5;
      }
LABEL_72:
      v75 = 0;
      if (*(_BYTE *)(v71 + 4))
        v76 = 20;
      else
        v76 = 10;
      v77 = *(float32x2_t *)(v71 + 52);
      v78 = vsub_f32(*(float32x2_t *)(v71 + 60), v77);
      v77.f32[0] = (float)(v76 - 1);
      v79 = vdiv_f32(v78, (float32x2_t)vdup_lane_s32((int32x2_t)v77, 0));
      do
      {
        v81 = vadd_f32(*(float32x2_t *)(v71 + 52), vmul_n_f32(v79, (float)v75));
        v83 = *(float32x2_t **)(a2 + 8);
        v82 = *(_QWORD *)(a2 + 16);
        if ((unint64_t)v83 >= v82)
        {
          v85 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v83 - *(_QWORD *)a2) >> 2);
          v86 = v85 + 1;
          if (v85 + 1 > 0x1555555555555555)
            goto LABEL_167;
          v87 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v82 - *(_QWORD *)a2) >> 2);
          if (2 * v87 > v86)
            v86 = 2 * v87;
          if (v87 >= 0xAAAAAAAAAAAAAAALL)
            v88 = 0x1555555555555555;
          else
            v88 = v86;
          if (v88)
          {
            v159.i32[0] = v88;
            v89 = *(unsigned int *)(a2 + 28);
            if ((_DWORD)v89 == -1)
              goto LABEL_166;
            v161 = &v159;
            result = ((uint64_t (*)(float32x4_t **, uint64_t))off_24EC5D748[v89])(&v161, v158);
          }
          else
          {
            result = 0;
            v90 = 0;
          }
          v91 = (float32x2_t *)(result + 12 * v85);
          *v91 = v81;
          v91[1].i32[0] = 0;
          v93 = *(_QWORD *)a2;
          v92 = *(_QWORD *)(a2 + 8);
          v94 = v91;
          if (v92 != *(_QWORD *)a2)
          {
            do
            {
              v95 = *(float32x2_t *)(v92 - 12);
              v92 -= 12;
              v96 = *(_DWORD *)(v92 + 8);
              *(float32x2_t *)((char *)v94 - 12) = v95;
              v94 = (float32x2_t *)((char *)v94 - 12);
              v94[1].i32[0] = v96;
            }
            while (v92 != v93);
            v92 = *(_QWORD *)a2;
          }
          v84 = (char *)&v91[1] + 4;
          *(_QWORD *)a2 = v94;
          *(_QWORD *)(a2 + 8) = (char *)v91 + 12;
          v97 = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a2 + 16) = result + 12 * v90;
          if (v92)
          {
            v161 = (float32x4_t *)v92;
            v162 = -1431655765 * ((unint64_t)(v97 - v92) >> 2);
            v98 = *(unsigned int *)(a2 + 28);
            if ((_DWORD)v98 == -1)
              sub_22316DD70();
            v159.i64[0] = (uint64_t)&v161;
            result = ((uint64_t (*)(float32x4_t *, uint64_t))off_24EC5D758[v98])(&v159, v158);
          }
        }
        else
        {
          *v83 = v81;
          v83[1].i32[0] = 0;
          v84 = (char *)&v83[1] + 4;
        }
        *(_QWORD *)(a2 + 8) = v84;
        v100 = *(float **)(a2 + 40);
        v99 = *(_QWORD *)(a2 + 48);
        if ((unint64_t)v100 < v99)
        {
          *v100 = v73;
          v100[1] = v74;
          v80 = v100 + 3;
          v100[2] = v72;
        }
        else
        {
          v101 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v100 - *v10) >> 2);
          v102 = v101 + 1;
          if (v101 + 1 > 0x1555555555555555)
LABEL_167:
            sub_22316E078();
          v103 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v99 - *v10) >> 2);
          if (2 * v103 > v102)
            v102 = 2 * v103;
          if (v103 >= 0xAAAAAAAAAAAAAAALL)
            v104 = 0x1555555555555555;
          else
            v104 = v102;
          if (v104)
          {
            v159.i32[0] = v104;
            v105 = *(unsigned int *)(a2 + 60);
            if ((_DWORD)v105 == -1)
LABEL_166:
              sub_22316DD70();
            v161 = &v159;
            result = ((uint64_t (*)(float32x4_t **, uint64_t))off_24EC5D748[v105])(&v161, a2 + 56);
          }
          else
          {
            result = 0;
            v106 = 0;
          }
          v107 = (float *)(result + 12 * v101);
          *v107 = v73;
          v107[1] = v74;
          v107[2] = v72;
          v109 = *(_QWORD *)(a2 + 32);
          v108 = *(_QWORD *)(a2 + 40);
          v110 = v107;
          if (v108 != v109)
          {
            do
            {
              v111 = *(_QWORD *)(v108 - 12);
              v108 -= 12;
              v112 = *(_DWORD *)(v108 + 8);
              *(_QWORD *)(v110 - 3) = v111;
              v110 -= 3;
              *((_DWORD *)v110 + 2) = v112;
            }
            while (v108 != v109);
            v108 = *v10;
          }
          v80 = v107 + 3;
          *(_QWORD *)(a2 + 32) = v110;
          *(_QWORD *)(a2 + 40) = v107 + 3;
          v113 = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a2 + 48) = result + 12 * v106;
          if (v108)
          {
            v161 = (float32x4_t *)v108;
            v162 = -1431655765 * ((unint64_t)(v113 - v108) >> 2);
            v114 = *(unsigned int *)(a2 + 60);
            if ((_DWORD)v114 == -1)
              sub_22316DD70();
            v159.i64[0] = (uint64_t)&v161;
            result = ((uint64_t (*)(float32x4_t *, uint64_t))off_24EC5D758[v114])(&v159, a2 + 56);
          }
        }
        *(_QWORD *)(a2 + 40) = v80;
        ++v75;
      }
      while (v75 != v76);
      *(_DWORD *)(a2 + 64) = 1;
      if (*(_BYTE *)(v71 + 5))
      {
        v115 = 0;
        v116 = vmul_f32(vadd_f32(*(float32x2_t *)(v71 + 52), *(float32x2_t *)(v71 + 60)), (float32x2_t)0x3F0000003F000000);
        __asm { FMOV            V1.2S, #0.25 }
        v118 = vmul_f32(vsub_f32(vadd_f32(v116, vmul_f32(*(float32x2_t *)(v71 + 44), (float32x2_t)vdup_n_s32(0x3D4CCCCDu))), v116), _D1);
        do
        {
          v120 = vadd_f32(v116, vmul_n_f32(v118, (float)v115));
          v122 = *(float32x2_t **)(a2 + 8);
          v121 = *(_QWORD *)(a2 + 16);
          if ((unint64_t)v122 >= v121)
          {
            v124 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v122 - *(_QWORD *)a2) >> 2);
            v125 = v124 + 1;
            if (v124 + 1 > 0x1555555555555555)
              goto LABEL_173;
            v126 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v121 - *(_QWORD *)a2) >> 2);
            if (2 * v126 > v125)
              v125 = 2 * v126;
            if (v126 >= 0xAAAAAAAAAAAAAAALL)
              v127 = 0x1555555555555555;
            else
              v127 = v125;
            if (v127)
            {
              v159.i32[0] = v127;
              v128 = *(unsigned int *)(a2 + 28);
              if ((_DWORD)v128 == -1)
                goto LABEL_169;
              v161 = &v159;
              result = ((uint64_t (*)(float32x4_t **, uint64_t))off_24EC5D748[v128])(&v161, v158);
            }
            else
            {
              result = 0;
              v129 = 0;
            }
            v130 = (float32x2_t *)(result + 12 * v124);
            *v130 = v120;
            v130[1].i32[0] = 0;
            v132 = *(_QWORD *)a2;
            v131 = *(_QWORD *)(a2 + 8);
            v133 = v130;
            if (v131 != *(_QWORD *)a2)
            {
              do
              {
                v134 = *(float32x2_t *)(v131 - 12);
                v131 -= 12;
                v135 = *(_DWORD *)(v131 + 8);
                *(float32x2_t *)((char *)v133 - 12) = v134;
                v133 = (float32x2_t *)((char *)v133 - 12);
                v133[1].i32[0] = v135;
              }
              while (v131 != v132);
              v131 = *(_QWORD *)a2;
            }
            v123 = (char *)&v130[1] + 4;
            *(_QWORD *)a2 = v133;
            *(_QWORD *)(a2 + 8) = (char *)v130 + 12;
            v136 = *(_QWORD *)(a2 + 16);
            *(_QWORD *)(a2 + 16) = result + 12 * v129;
            if (v131)
            {
              v161 = (float32x4_t *)v131;
              v162 = -1431655765 * ((unint64_t)(v136 - v131) >> 2);
              v137 = *(unsigned int *)(a2 + 28);
              if ((_DWORD)v137 == -1)
                sub_22316DD70();
              v159.i64[0] = (uint64_t)&v161;
              result = ((uint64_t (*)(float32x4_t *, uint64_t))off_24EC5D758[v137])(&v159, v158);
            }
          }
          else
          {
            *v122 = v120;
            v122[1].i32[0] = 0;
            v123 = (char *)&v122[1] + 4;
          }
          *(_QWORD *)(a2 + 8) = v123;
          v139 = *(float **)(a2 + 40);
          v138 = *(_QWORD *)(a2 + 48);
          if ((unint64_t)v139 < v138)
          {
            *v139 = v73;
            v139[1] = v74;
            v119 = v139 + 3;
            v139[2] = v72;
          }
          else
          {
            v140 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v139 - *v10) >> 2);
            v141 = v140 + 1;
            if (v140 + 1 > 0x1555555555555555)
LABEL_173:
              sub_22316E078();
            v142 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v138 - *v10) >> 2);
            if (2 * v142 > v141)
              v141 = 2 * v142;
            if (v142 >= 0xAAAAAAAAAAAAAAALL)
              v143 = 0x1555555555555555;
            else
              v143 = v141;
            if (v143)
            {
              v159.i32[0] = v143;
              v144 = *(unsigned int *)(a2 + 60);
              if ((_DWORD)v144 == -1)
LABEL_169:
                sub_22316DD70();
              v161 = &v159;
              result = ((uint64_t (*)(float32x4_t **, uint64_t))off_24EC5D748[v144])(&v161, a2 + 56);
            }
            else
            {
              result = 0;
              v145 = 0;
            }
            v146 = (float *)(result + 12 * v140);
            *v146 = v73;
            v146[1] = v74;
            v146[2] = v72;
            v148 = *(_QWORD *)(a2 + 32);
            v147 = *(_QWORD *)(a2 + 40);
            v149 = v146;
            if (v147 != v148)
            {
              do
              {
                v150 = *(_QWORD *)(v147 - 12);
                v147 -= 12;
                v151 = *(_DWORD *)(v147 + 8);
                *(_QWORD *)(v149 - 3) = v150;
                v149 -= 3;
                *((_DWORD *)v149 + 2) = v151;
              }
              while (v147 != v148);
              v147 = *v10;
            }
            v119 = v146 + 3;
            *(_QWORD *)(a2 + 32) = v149;
            *(_QWORD *)(a2 + 40) = v146 + 3;
            v152 = *(_QWORD *)(a2 + 48);
            *(_QWORD *)(a2 + 48) = result + 12 * v145;
            if (v147)
            {
              v161 = (float32x4_t *)v147;
              v162 = -1431655765 * ((unint64_t)(v152 - v147) >> 2);
              v153 = *(unsigned int *)(a2 + 60);
              if ((_DWORD)v153 == -1)
                sub_22316DD70();
              v159.i64[0] = (uint64_t)&v161;
              result = ((uint64_t (*)(float32x4_t *, uint64_t))off_24EC5D758[v153])(&v159, a2 + 56);
            }
          }
          *(_QWORD *)(a2 + 40) = v119;
          ++v115;
        }
        while (v115 != 5);
        *(_DWORD *)(a2 + 64) = 1;
      }
      v71 += 96;
      if (v71 == v156)
        goto LABEL_165;
    }
    v73 = 0.0;
    goto LABEL_72;
  }
LABEL_165:
  *(_DWORD *)(a2 + 64) = 1;
  return result;
}

void sub_223A1455C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A14570(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A14584(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A14598(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A145DC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A145F0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A14604(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A14618(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A1462C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A14640(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223A14654(uint64_t result, unsigned int *a2, uint64_t *a3, uint64_t a4, char a5)
{
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  BOOL v60;
  unint64_t v61;
  unsigned int v62;
  unsigned int *v63;
  unsigned int *v64;
  unsigned int v65;
  unsigned int v66;
  unint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unsigned __int8 v72;
  unsigned __int8 v73;
  unsigned __int8 v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unsigned __int8 v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned int *v100;
  unsigned int v101;
  unsigned int *v102;
  BOOL v103;
  char v104;
  uint64_t v105;
  unsigned int *v106;
  unsigned int *v107;
  unsigned int v108;
  unsigned int v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  int64_t v116;
  int64_t v117;
  uint64_t v118;
  unsigned int *v119;
  uint64_t v120;
  unsigned int *v121;
  unsigned int v122;
  uint64_t *v123;
  uint64_t v124;
  unsigned int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  unsigned int *v130;
  int64_t v131;
  unsigned int *v132;
  unsigned int *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unsigned int *v142;
  uint64_t v143;
  unint64_t v144;
  unsigned int *v145;
  unint64_t v146;
  unsigned int *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t *v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unsigned int *v158;
  unsigned int *v160;
  unsigned int *v161;
  unsigned int *v164;
  unint64_t v165;
  unsigned int *v166;
  unsigned int *v167;
  unint64_t v168;
  unsigned int v169;
  unsigned int *v170;
  unsigned int *v171;
  int64_t v172;
  int64_t v173;

  v164 = (unsigned int *)result;
LABEL_2:
  v5 = v164;
  v158 = a2 - 1;
  while (2)
  {
    v6 = (char *)a2 - (char *)v5;
    v7 = a2 - v5;
    v164 = v5;
    switch(v7)
    {
      case 0:
      case 1:
        return result;
      case 2:
        result = sub_223A16120(*a3, *(a2 - 1), *v5);
        if ((_DWORD)result)
        {
          v101 = *v5;
          *v5 = *(a2 - 1);
          *(a2 - 1) = v101;
        }
        return result;
      case 3:
        return sub_223A16324(v5, v5 + 1, v158, a3);
      case 4:
        return sub_223A16604(v5, v5 + 1, v5 + 2, v158, a3);
      case 5:
        return sub_223A1624C(v5, v5 + 1, v5 + 2, v5 + 3, v158, a3);
      default:
        if (v6 > 95)
        {
          if (!a4)
          {
            if (v5 != a2)
            {
              v116 = (unint64_t)(v7 - 2) >> 1;
              v172 = v116;
              do
              {
                v117 = v116;
                if (v172 >= v116)
                {
                  v118 = (2 * v116) | 1;
                  v119 = &v164[v118];
                  v120 = *a3;
                  if (2 * v116 + 2 < v7)
                  {
                    if (sub_223A16120(v120, *v119, v119[1]))
                    {
                      ++v119;
                      v118 = 2 * v117 + 2;
                    }
                    v120 = *a3;
                  }
                  v121 = &v164[v117];
                  result = sub_223A16120(v120, *v119, *v121);
                  if ((result & 1) == 0)
                  {
                    v122 = *v121;
                    do
                    {
                      v125 = v119;
                      *v121 = *v119;
                      if (v172 < v118)
                        break;
                      v124 = (2 * v118) | 1;
                      v119 = &v164[v124];
                      v126 = 2 * v118 + 2;
                      if (v126 < v7)
                      {
                        v123 = a3;
                        if (sub_223A16120(*a3, *v119, v119[1]))
                        {
                          ++v119;
                          v124 = v126;
                        }
                      }
                      else
                      {
                        v123 = a3;
                      }
                      result = sub_223A16120(*v123, *v119, v122);
                      v121 = v125;
                      v118 = v124;
                    }
                    while (!(_DWORD)result);
                    *v125 = v122;
                  }
                }
                v116 = v117 - 1;
              }
              while (v117);
              v127 = (unint64_t)v6 >> 2;
              do
              {
                v129 = 0;
                v130 = v164;
                v169 = *v164;
                v131 = (unint64_t)(v127 - 2) >> 1;
                v132 = v164;
                v173 = v131;
                do
                {
                  v133 = &v132[v129 + 1];
                  v134 = (2 * v129) | 1;
                  v135 = 2 * v129 + 2;
                  if (v135 < v127)
                  {
                    v136 = v127;
                    v137 = v132[v129 + 2];
                    v138 = *a3;
                    v139 = *(_QWORD *)(*a3 + 80);
                    v140 = *v133;
                    v141 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*a3 + 88) - v139) >> 5);
                    if (v141 <= v140)
                    {
                      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                      if ((result & 1) != 0)
                        goto LABEL_281;
                      v139 = *(_QWORD *)(v138 + 80);
                      v141 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v138 + 88) - v139) >> 5);
                    }
                    if (v141 <= v137)
                    {
                      result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                      if ((result & 1) != 0)
                        goto LABEL_281;
                      v139 = *(_QWORD *)(v138 + 80);
                      v141 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v138 + 88) - v139) >> 5);
                    }
                    if (v141 <= v140 || v141 <= v137)
                      sub_2236C5448();
                    if (*(float *)(v139 + 96 * v140 + 68) < *(float *)(v139
                                                                                      + 96 * v137
                                                                                      + 68))
                    {
                      ++v133;
                      v134 = v135;
                    }
                    v130 = v164;
                    v127 = v136;
                    v131 = v173;
                  }
                  *v132 = *v133;
                  v132 = v133;
                  v129 = v134;
                }
                while (v134 <= v131);
                v142 = a2 - 1;
                v103 = v133 == --a2;
                if (v103)
                {
                  *v133 = v169;
                }
                else
                {
                  *v133 = *v142;
                  *v142 = v169;
                  v143 = (char *)v133 - (char *)v130 + 4;
                  if (v143 >= 5)
                  {
                    v144 = (((unint64_t)v143 >> 2) - 2) >> 1;
                    v145 = &v130[v144];
                    result = sub_223A16120(*a3, *v145, *v133);
                    if ((_DWORD)result)
                    {
                      v146 = *v133;
                      do
                      {
                        v147 = v145;
                        *v133 = *v145;
                        if (!v144)
                          break;
                        v144 = (v144 - 1) >> 1;
                        v145 = &v130[v144];
                        v148 = *a3;
                        v149 = *(_QWORD *)(*a3 + 80);
                        v150 = *v145;
                        v151 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*a3 + 88) - v149) >> 5);
                        if (v151 <= v150)
                        {
                          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                          if ((result & 1) != 0)
                            goto LABEL_281;
                          v149 = *(_QWORD *)(v148 + 80);
                          v151 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v148 + 88) - v149) >> 5);
                        }
                        if (v151 <= v146)
                        {
                          result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                          if ((result & 1) != 0)
                            goto LABEL_281;
                          v149 = *(_QWORD *)(v148 + 80);
                          v151 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v148 + 88) - v149) >> 5);
                        }
                        if (v151 <= v150 || v151 <= v146)
                          sub_2236C5448();
                        v133 = v147;
                      }
                      while (*(float *)(v149 + 96 * v150 + 68) < *(float *)(v149
                                                                                           + 96 * v146
                                                                                           + 68));
                      *v147 = v146;
                    }
                  }
                }
              }
              while (v127-- > 2);
            }
            return result;
          }
          v8 = (unint64_t)v7 >> 1;
          v9 = &v5[(unint64_t)v7 >> 1];
          if ((unint64_t)v6 >= 0x201)
          {
            sub_223A16324(v5, v9, v158, a3);
            v10 = v8;
            v11 = &v5[v8];
            sub_223A16324(v5 + 1, v11 - 1, a2 - 2, a3);
            sub_223A16324(v5 + 2, &v5[v10 + 1], a2 - 3, a3);
            sub_223A16324(v11 - 1, v9, &v5[v10 + 1], a3);
            v12 = *v5;
            *v5 = *v11;
            *v11 = v12;
            v13 = a3;
            --a4;
            if ((a5 & 1) != 0)
              goto LABEL_11;
LABEL_10:
            if (sub_223A16120(*v13, *(v5 - 1), *v5))
              goto LABEL_11;
            v61 = *v5;
            result = sub_223A16120(*v13, *v5, *v158);
            if ((result & 1) != 0)
            {
              do
              {
                v62 = v5[1];
                ++v5;
                result = sub_223A16120(*v13, v61, v62);
              }
              while ((result & 1) == 0);
            }
            else
            {
              v63 = v5 + 1;
              do
              {
                v5 = v63;
                if (v63 >= a2)
                  break;
                ++v63;
                result = sub_223A16120(*v13, v61, *v5);
              }
              while (!(_DWORD)result);
            }
            v64 = a2;
            if (v5 < a2)
            {
              v64 = a2;
              do
              {
                v65 = *--v64;
                result = sub_223A16120(*v13, v61, v65);
              }
              while ((result & 1) != 0);
            }
            if (v5 < v64)
            {
              v168 = v61;
              do
              {
                v66 = *v5;
                *v5 = *v64;
                v171 = v64;
                *v64 = v66;
                do
                {
                  v68 = v5[1];
                  ++v5;
                  v67 = v68;
                  v69 = *v13;
                  v70 = *(_QWORD *)(*v13 + 80);
                  v71 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*v13 + 88) - v70) >> 5);
                  if (v71 <= v61)
                  {
                    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                    v72 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v72 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    if (!byte_255795670 || byte_255795678)
                    {
                      v77 = qword_255795648;
                      v76 = qword_255795650;
                      while (v77 != v76)
                      {
                        v79 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v77;
                        v78 = *(_QWORD *)(v77 + 8);
                        v77 += 16;
                        v79(v78, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                      }
                    }
                    v73 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v73 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    v61 = v168;
                    if (!byte_255795670)
                      goto LABEL_281;
                    result = qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                    v70 = *(_QWORD *)(v69 + 80);
                    v71 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v69 + 88) - v70) >> 5);
                  }
                  if (v71 <= v67)
                  {
                    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                    v74 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v74 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    if (!byte_255795670 || byte_255795678)
                    {
                      v81 = qword_255795648;
                      v80 = qword_255795650;
                      while (v81 != v80)
                      {
                        v83 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v81;
                        v82 = *(_QWORD *)(v81 + 8);
                        v81 += 16;
                        v83(v82, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                      }
                    }
                    v75 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v75 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    v61 = v168;
                    if (!byte_255795670)
                      goto LABEL_281;
                    result = qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                    v70 = *(_QWORD *)(v69 + 80);
                    v71 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v69 + 88) - v70) >> 5);
                  }
                  if (v71 <= v61 || v71 <= v67)
LABEL_284:
                    sub_2236C5448();
                }
                while (*(float *)(v70 + 96 * v61 + 68) >= *(float *)(v70 + 96 * v67 + 68));
                v166 = v5;
                do
                {
                  v84 = *--v171;
                  v85 = *v13;
                  v86 = *(_QWORD *)(*v13 + 80);
                  v87 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*v13 + 88) - v86) >> 5);
                  if (v87 <= v61)
                  {
                    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                    v88 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v88 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    if (!byte_255795670 || byte_255795678)
                    {
                      v93 = qword_255795648;
                      v92 = qword_255795650;
                      while (v93 != v92)
                      {
                        v95 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v93;
                        v94 = *(_QWORD *)(v93 + 8);
                        v93 += 16;
                        v95(v94, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                      }
                    }
                    v89 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v89 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    v5 = v166;
                    v61 = v168;
                    if (!byte_255795670)
                      goto LABEL_281;
                    result = qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                    v86 = *(_QWORD *)(v85 + 80);
                    v87 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v85 + 88) - v86) >> 5);
                  }
                  if (v87 <= v84)
                  {
                    sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                    v90 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v90 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    if (!byte_255795670 || byte_255795678)
                    {
                      v97 = qword_255795648;
                      v96 = qword_255795650;
                      while (v97 != v96)
                      {
                        v99 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v97;
                        v98 = *(_QWORD *)(v97 + 8);
                        v97 += 16;
                        v99(v98, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                      }
                    }
                    v91 = atomic_load((unsigned __int8 *)&qword_255795680);
                    if ((v91 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                    {
                      __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                      __cxa_guard_release(&qword_255795680);
                    }
                    v61 = v168;
                    if (!byte_255795670)
                      goto LABEL_281;
                    result = qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                    v86 = *(_QWORD *)(v85 + 80);
                    v87 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v85 + 88) - v86) >> 5);
                  }
                  if (v87 <= v61 || v87 <= v84)
                    goto LABEL_284;
                }
                while (*(float *)(v86 + 96 * v61 + 68) < *(float *)(v86 + 96 * v84 + 68));
                v64 = v171;
              }
              while (v5 < v171);
            }
            v100 = v5 - 1;
            if (v5 - 1 != v164)
              *v164 = *v100;
            a5 = 0;
            *v100 = v61;
            continue;
          }
          v13 = a3;
          sub_223A16324(v9, v5, v158, a3);
          --a4;
          if ((a5 & 1) == 0)
            goto LABEL_10;
LABEL_11:
          v14 = 0;
          v15 = *v5;
          do
          {
            v16 = *v13;
            v17 = *(_QWORD *)(*v13 + 80);
            v18 = v5[v14 + 1];
            v19 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*v13 + 88) - v17) >> 5);
            if (v19 <= v18)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C))
              {
                goto LABEL_281;
              }
              v17 = *(_QWORD *)(v16 + 80);
              v19 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v16 + 88) - v17) >> 5);
            }
            if (v19 <= v15)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C))
              {
                goto LABEL_281;
              }
              v17 = *(_QWORD *)(v16 + 80);
              v19 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v16 + 88) - v17) >> 5);
            }
            if (v19 <= v18 || v19 <= v15)
LABEL_282:
              sub_2236C5448();
            ++v14;
          }
          while (*(float *)(v17 + 96 * v18 + 68) < *(float *)(v17 + 96 * v15 + 68));
          v20 = &v5[v14];
          v21 = a2;
          if (v14 == 1)
          {
            v21 = a2;
            do
            {
              if (v20 >= v21)
                break;
              v23 = *--v21;
            }
            while (!sub_223A16120(*v13, v23, v15));
          }
          else
          {
            do
              v22 = *--v21;
            while (!sub_223A16120(*v13, v22, v15));
          }
          v160 = v21;
          v161 = v20;
          if (v20 >= v21)
          {
            v167 = v20 - 1;
          }
          else
          {
            v24 = v21;
            v165 = v15;
            do
            {
              v25 = *v20;
              *v20 = *v24;
              *v24 = v25;
              do
              {
                v167 = v20;
                v27 = v20[1];
                ++v20;
                v26 = v27;
                v28 = *v13;
                v29 = *(_QWORD *)(*v13 + 80);
                v30 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*v13 + 88) - v29) >> 5);
                if (v30 <= v27)
                {
                  sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                  v31 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v31 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  if (!byte_255795670 || byte_255795678)
                  {
                    v36 = qword_255795648;
                    v35 = qword_255795650;
                    while (v36 != v35)
                    {
                      v38 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v36;
                      v37 = *(_QWORD *)(v36 + 8);
                      v36 += 16;
                      v38(v37, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                    }
                  }
                  v32 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v32 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  v13 = a3;
                  if (!byte_255795670)
                    goto LABEL_281;
                  qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                  v29 = *(_QWORD *)(v28 + 80);
                  v30 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v28 + 88) - v29) >> 5);
                  v15 = v165;
                }
                if (v30 <= v15)
                {
                  sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                  v33 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v33 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  if (!byte_255795670 || byte_255795678)
                  {
                    v40 = qword_255795648;
                    v39 = qword_255795650;
                    while (v40 != v39)
                    {
                      v42 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v40;
                      v41 = *(_QWORD *)(v40 + 8);
                      v40 += 16;
                      v42(v41, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                    }
                  }
                  v34 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v34 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  v13 = a3;
                  if (!byte_255795670)
                    goto LABEL_281;
                  qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                  v29 = *(_QWORD *)(v28 + 80);
                  v30 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v28 + 88) - v29) >> 5);
                }
                if (v30 <= v26 || v30 <= v15)
                  sub_2236C5448();
              }
              while (*(float *)(v29 + 96 * v26 + 68) < *(float *)(v29 + 96 * v15 + 68));
              v170 = v20;
              do
              {
                v44 = *--v24;
                v43 = v44;
                v45 = *v13;
                v46 = *(_QWORD *)(*v13 + 80);
                v47 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*v13 + 88) - v46) >> 5);
                if (v47 <= v44)
                {
                  sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                  v48 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v48 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  if (!byte_255795670 || byte_255795678)
                  {
                    v53 = qword_255795648;
                    v52 = qword_255795650;
                    while (v53 != v52)
                    {
                      v55 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v53;
                      v54 = *(_QWORD *)(v53 + 8);
                      v53 += 16;
                      v55(v54, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                    }
                  }
                  v49 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v49 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  v13 = a3;
                  if (!byte_255795670)
                    goto LABEL_281;
                  qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index1", 22, "edge1 out of bounds", 19);
                  v46 = *(_QWORD *)(v45 + 80);
                  v47 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v45 + 88) - v46) >> 5);
                  v20 = v170;
                  v15 = v165;
                }
                if (v47 <= v15)
                {
                  sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                  v50 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v50 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  if (!byte_255795670 || byte_255795678)
                  {
                    v57 = qword_255795648;
                    v56 = qword_255795650;
                    while (v57 != v56)
                    {
                      v59 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v57;
                      v58 = *(_QWORD *)(v57 + 8);
                      v57 += 16;
                      v59(v58, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                    }
                  }
                  v51 = atomic_load((unsigned __int8 *)&qword_255795680);
                  if ((v51 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
                  {
                    __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                    __cxa_guard_release(&qword_255795680);
                  }
                  v13 = a3;
                  if (!byte_255795670)
                    goto LABEL_281;
                  qword_255795660(*(_QWORD *)algn_255795668, "edges_.size() > index2", 22, "edge2 out of bounds", 19);
                  v46 = *(_QWORD *)(v45 + 80);
                  v47 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v45 + 88) - v46) >> 5);
                }
                if (v47 <= v43 || v47 <= v15)
                  goto LABEL_282;
              }
              while (*(float *)(v46 + 96 * v43 + 68) >= *(float *)(v46 + 96 * v15 + 68));
            }
            while (v20 < v24);
          }
          if (v167 != v164)
            *v164 = *v167;
          *v167 = v15;
          if (v161 < v160)
          {
LABEL_101:
            result = sub_223A14654(v164, v167, v13, a4, a5 & 1);
            a5 = 0;
            v5 = v167 + 1;
            continue;
          }
          v60 = sub_223A16424(v164, v167, v13);
          v5 = v167 + 1;
          result = sub_223A16424(v167 + 1, a2, v13);
          if (!(_DWORD)result)
          {
            if (!v60)
              goto LABEL_101;
            continue;
          }
          a2 = v167;
          if (v60)
            return result;
          goto LABEL_2;
        }
        v102 = v5 + 1;
        v103 = v5 == a2 || v102 == a2;
        v104 = v103;
        if ((a5 & 1) != 0)
        {
          if ((v104 & 1) == 0)
          {
            v105 = 0;
            v106 = v5;
            do
            {
              v109 = *v106;
              v108 = v106[1];
              v106 = v102;
              result = sub_223A16120(*a3, v108, v109);
              if ((_DWORD)result)
              {
                v110 = *v102;
                v111 = v105;
                do
                {
                  *(unsigned int *)((char *)v5 + v111 + 4) = *(unsigned int *)((char *)v5 + v111);
                  if (!v111)
                  {
                    v107 = v5;
                    goto LABEL_201;
                  }
                  v112 = *a3;
                  v113 = *(_QWORD *)(*a3 + 80);
                  v114 = *(unsigned int *)((char *)v5 + v111 - 4);
                  v115 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*a3 + 88) - v113) >> 5);
                  if (v115 <= v110)
                  {
                    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                    if ((result & 1) != 0)
                      goto LABEL_281;
                    v113 = *(_QWORD *)(v112 + 80);
                    v115 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v112 + 88) - v113) >> 5);
                  }
                  if (v115 <= v114)
                  {
                    result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                    if ((result & 1) != 0)
                      goto LABEL_281;
                    v113 = *(_QWORD *)(v112 + 80);
                    v115 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v112 + 88) - v113) >> 5);
                  }
                  if (v115 <= v110 || v115 <= v114)
                    sub_2236C5448();
                  v111 -= 4;
                }
                while (*(float *)(v113 + 96 * v110 + 68) < *(float *)(v113
                                                                                     + 96 * v114
                                                                                     + 68));
                v107 = (unsigned int *)((char *)v5 + v111 + 4);
LABEL_201:
                *v107 = v110;
                v106 = v102;
              }
              v102 = v106 + 1;
              v105 += 4;
            }
            while (v106 + 1 != a2);
          }
        }
        else if ((v104 & 1) == 0)
        {
          do
          {
            v152 = a3;
            result = sub_223A16120(*a3, v164[1], *v164);
            v164 = v102;
            if ((_DWORD)result)
            {
              v153 = *v102;
              do
              {
                v154 = *(v102 - 2);
                v155 = *v152;
                v156 = *(_QWORD *)(*v152 + 80);
                *v102 = *(v102 - 1);
                v157 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v155 + 88) - v156) >> 5);
                if (v157 <= v153)
                {
                  result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C);
                  if ((result & 1) != 0)
                    goto LABEL_281;
                  v156 = *(_QWORD *)(v155 + 80);
                  v157 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v155 + 88) - v156) >> 5);
                }
                if (v157 <= v154)
                {
                  result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C);
                  if ((result & 1) != 0)
LABEL_281:
                    abort();
                  v156 = *(_QWORD *)(v155 + 80);
                  v157 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v155 + 88) - v156) >> 5);
                }
                if (v157 <= v153 || v157 <= v154)
                  sub_2236C5448();
                --v102;
                v152 = a3;
              }
              while (*(float *)(v156 + 96 * v153 + 68) < *(float *)(v156
                                                                                   + 96 * v154
                                                                                   + 68));
              *v102 = v153;
              v102 = v164;
            }
            ++v102;
          }
          while (v102 != a2);
        }
        return result;
    }
  }
}

BOOL sub_223A16120(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(a1 + 80);
  v6 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 88) - v5) >> 5);
  v7 = a2;
  if (v6 <= a2)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 390, (uint64_t)"edges_.size() > index1", 22, (uint64_t)"edge1 out of bounds", 19, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_11;
    }
    v5 = *(_QWORD *)(a1 + 80);
    v6 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 88) - v5) >> 5);
  }
  if (v6 <= a3)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraph.cpp", 391, (uint64_t)"edges_.size() > index2", 22, (uint64_t)"edge2 out of bounds", 19, (void (*)(void **))sub_22457406C))
    {
      v5 = *(_QWORD *)(a1 + 80);
      v6 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 88) - v5) >> 5);
      goto LABEL_7;
    }
LABEL_11:
    abort();
  }
LABEL_7:
  if (v6 <= v7 || v6 <= a3)
    sub_2236C5448();
  return *(float *)(v5 + 96 * v7 + 68) < *(float *)(v5 + 96 * a3 + 68);
}

BOOL sub_223A1624C(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, unsigned int *a5, uint64_t *a6)
{
  _BOOL8 result;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;

  sub_223A16604(a1, a2, a3, a4, a6);
  result = sub_223A16120(*a6, *a5, *a4);
  if (result)
  {
    v13 = *a4;
    *a4 = *a5;
    *a5 = v13;
    result = sub_223A16120(*a6, *a4, *a3);
    if (result)
    {
      v14 = *a3;
      *a3 = *a4;
      *a4 = v14;
      result = sub_223A16120(*a6, *a3, *a2);
      if (result)
      {
        v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
        result = sub_223A16120(*a6, *a2, *a1);
        if (result)
        {
          v16 = *a1;
          *a1 = *a2;
          *a2 = v16;
        }
      }
    }
  }
  return result;
}

BOOL sub_223A16324(unsigned int *a1, unsigned int *a2, unsigned int *a3, uint64_t *a4)
{
  BOOL v8;
  _BOOL8 result;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  v8 = sub_223A16120(*a4, *a2, *a1);
  result = sub_223A16120(*a4, *a3, *a2);
  if (v8)
  {
    v10 = *a1;
    if (result)
    {
      *a1 = *a3;
      *a3 = v10;
    }
    else
    {
      *a1 = *a2;
      *a2 = v10;
      result = sub_223A16120(*a4, *a3, v10);
      if (result)
      {
        v13 = *a2;
        *a2 = *a3;
        *a3 = v13;
      }
    }
  }
  else if (result)
  {
    v11 = *a2;
    *a2 = *a3;
    *a3 = v11;
    result = sub_223A16120(*a4, *a2, *a1);
    if (result)
    {
      v12 = *a1;
      *a1 = *a2;
      *a2 = v12;
    }
  }
  return result;
}

BOOL sub_223A16424(unsigned int *a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6;
  _BOOL8 result;
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  char *v14;
  unsigned int v15;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (sub_223A16120(*a3, *(a2 - 1), *a1))
      {
        v15 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v15;
      }
      return 1;
    case 3:
      sub_223A16324(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      sub_223A16604(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      sub_223A1624C(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      v8 = a1 + 2;
      sub_223A16324(a1, a1 + 1, a1 + 2, a3);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (!sub_223A16120(*a3, *v9, *v8))
  {
LABEL_11:
    v8 = v9;
    v10 += 4;
    if (++v9 == a2)
      return 1;
  }
  v12 = *v9;
  v13 = v10;
  do
  {
    v14 = (char *)a1 + v13;
    *(unsigned int *)((char *)a1 + v13 + 12) = *(unsigned int *)((char *)a1 + v13 + 8);
    if (v13 == -8)
    {
      *a1 = v12;
      if (++v11 != 8)
        goto LABEL_11;
      return v9 + 1 == a2;
    }
    v13 -= 4;
  }
  while (sub_223A16120(*a3, v12, *((_DWORD *)v14 + 1)));
  *(unsigned int *)((char *)a1 + v13 + 12) = v12;
  if (++v11 != 8)
    goto LABEL_11;
  return v9 + 1 == a2;
}

BOOL sub_223A16604(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, uint64_t *a5)
{
  _BOOL8 result;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  sub_223A16324(a1, a2, a3, a5);
  result = sub_223A16120(*a5, *a4, *a3);
  if (result)
  {
    v11 = *a3;
    *a3 = *a4;
    *a4 = v11;
    result = sub_223A16120(*a5, *a3, *a2);
    if (result)
    {
      v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      result = sub_223A16120(*a5, *a2, *a1);
      if (result)
      {
        v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

unsigned int *sub_223A166B4(unsigned int *result, unsigned int *a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned int *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  unsigned int v16;
  float v17;
  unsigned int v18;
  unsigned int v19;
  float v20;
  float v21;
  unsigned int v22;
  unsigned int v23;
  float v24;
  float v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  float v35;
  float v36;
  unsigned int v37;
  float v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  float v47;
  float v48;
  unsigned int v49;
  float v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  float v55;
  float v56;
  unsigned int v57;
  float v58;
  unsigned int v59;
  unsigned int v60;
  float v61;
  uint64_t v62;
  uint64_t v63;
  float v64;
  unsigned int v65;
  unsigned int *v66;
  unsigned int *v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int *v72;
  unsigned int *v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int *v76;
  BOOL v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int *v80;
  unsigned int *v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int *v87;
  unsigned int v88;
  unsigned int v89;
  uint64_t v90;
  unsigned int v91;
  float v92;
  float v93;
  unsigned int v94;
  float v95;
  unsigned int *v96;
  unsigned int *v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  float v102;
  unsigned int v103;
  unsigned int v104;
  uint64_t v105;
  unsigned int *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int *v109;
  unsigned int *v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  float v114;
  uint64_t v115;
  uint64_t v116;
  int64_t v117;
  uint64_t v118;
  int64_t v119;
  BOOL v120;
  uint64_t v121;
  unsigned int *v122;
  uint64_t v123;
  unsigned int *v124;
  unsigned int v125;
  float v126;
  unsigned int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  uint64_t v133;
  unsigned int *v134;
  unsigned int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unsigned int *v141;
  unsigned int v142;
  unsigned int v143;
  uint64_t v144;
  float v145;
  unsigned int *v146;
  unsigned int *v147;
  uint64_t v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  float v152;
  unsigned int *v153;
  unsigned int v154;

  v9 = result;
LABEL_2:
  v10 = v9;
  while (2)
  {
    v9 = v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = a2 - v10;
    switch(v12)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v88 = *(a2 - 1);
        v89 = *v10;
        if (*(float *)(*(_QWORD *)(*(_QWORD *)a3 + 128) + 144 * v88 + 104) < *(float *)(*(_QWORD *)(*(_QWORD *)a3 + 128)
                                                                                           + 144 * *v10
                                                                                           + 104))
        {
          *v10 = v88;
          goto LABEL_167;
        }
        return result;
      case 3:
        v90 = *(_QWORD *)(*(_QWORD *)a3 + 128);
        v89 = *v10;
        v91 = v10[1];
        v92 = *(float *)(v90 + 144 * v91 + 104);
        v93 = *(float *)(v90 + 144 * *v10 + 104);
        v94 = *(a2 - 1);
        v95 = *(float *)(v90 + 144 * v94 + 104);
        if (v92 >= v93)
        {
          if (v95 < v92)
          {
            v10[1] = v94;
            *(a2 - 1) = v91;
            v104 = *v10;
            v100 = v10[1];
            v102 = *(float *)(v90 + 144 * v100 + 104);
            goto LABEL_155;
          }
        }
        else
        {
          if (v95 >= v92)
          {
            *v10 = v91;
            v10[1] = v89;
            v154 = *(a2 - 1);
            if (*(float *)(v90 + 144 * v154 + 104) >= v93)
              return result;
            v10[1] = v154;
          }
          else
          {
            *v10 = v94;
          }
LABEL_167:
          *(a2 - 1) = v89;
        }
        return result;
      case 4:
        return sub_223A17630(v10, v10 + 1, v10 + 2, a2 - 1, *(_QWORD *)(*(_QWORD *)a3 + 128));
      case 5:
        v96 = v10 + 2;
        v97 = v10 + 3;
        result = sub_223A17630(v9, v9 + 1, v9 + 2, v9 + 3, *(_QWORD *)(*(_QWORD *)a3 + 128));
        v98 = *(a2 - 1);
        v99 = v9[3];
        v90 = *(_QWORD *)(*(_QWORD *)a3 + 128);
        if (*(float *)(v90 + 144 * v98 + 104) < *(float *)(v90 + 144 * v99 + 104))
        {
          *v97 = v98;
          *(a2 - 1) = v99;
          v100 = *v97;
          v101 = *v96;
          v102 = *(float *)(v90 + 144 * *v97 + 104);
          if (v102 < *(float *)(v90 + 144 * *v96 + 104))
          {
            *v96 = v100;
            *v97 = v101;
            v103 = v9[1];
            if (v102 < *(float *)(v90 + 144 * v103 + 104))
            {
              v9[1] = v100;
              v9[2] = v103;
              v104 = *v9;
LABEL_155:
              if (v102 < *(float *)(v90 + 144 * v104 + 104))
              {
                *v9 = v100;
                v9[1] = v104;
              }
            }
          }
        }
        return result;
      default:
        if (v11 > 95)
        {
          if (!a4)
          {
            if (v10 != a2)
            {
              v117 = (unint64_t)(v12 - 2) >> 1;
              v118 = *(_QWORD *)a3;
              v119 = v117;
              do
              {
                if (v117 >= v119)
                {
                  v121 = (2 * v119) | 1;
                  v122 = &v10[v121];
                  if (2 * v119 + 2 >= v12)
                  {
                    v123 = *(_QWORD *)(v118 + 128);
                  }
                  else
                  {
                    v123 = *(_QWORD *)(v118 + 128);
                    if (*(float *)(v123 + 144 * *v122 + 104) < *(float *)(v123 + 144 * v122[1] + 104))
                    {
                      ++v122;
                      v121 = 2 * v119 + 2;
                    }
                  }
                  v124 = &v10[v119];
                  result = (unsigned int *)*v122;
                  v125 = *v124;
                  v126 = *(float *)(v123 + 144 * *v124 + 104);
                  if (*(float *)(v123 + 144 * result + 104) >= v126)
                  {
                    do
                    {
                      v127 = v122;
                      *v124 = result;
                      if (v117 < v121)
                        break;
                      v128 = 2 * v121;
                      v121 = (2 * v121) | 1;
                      v122 = &v10[v121];
                      v129 = v128 + 2;
                      if (v129 < v12
                        && *(float *)(v123 + 144 * *v122 + 104) < *(float *)(v123 + 144 * v122[1] + 104))
                      {
                        ++v122;
                        v121 = v129;
                      }
                      result = (unsigned int *)*v122;
                      v124 = v127;
                    }
                    while (*(float *)(v123 + 144 * result + 104) >= v126);
                    *v127 = v125;
                    v118 = *(_QWORD *)a3;
                  }
                }
                v120 = v119-- <= 0;
              }
              while (!v120);
              v130 = (unint64_t)v11 >> 2;
              do
              {
                v131 = 0;
                v132 = *v10;
                v133 = *(_QWORD *)a3;
                v134 = v10;
                do
                {
                  v135 = v134;
                  v134 += v131 + 1;
                  v136 = 2 * v131;
                  v131 = (2 * v131) | 1;
                  v137 = v136 + 2;
                  if (v137 < v130)
                  {
                    v138 = *(_QWORD *)(v133 + 128);
                    result = (unsigned int *)(v138 + 144 * v134[1]);
                    if (*(float *)(v138 + 144 * *v134 + 104) < *((float *)result + 26))
                    {
                      ++v134;
                      v131 = v137;
                    }
                  }
                  *v135 = *v134;
                }
                while (v131 <= (uint64_t)((unint64_t)(v130 - 2) >> 1));
                if (v134 == --a2)
                {
                  *v134 = v132;
                }
                else
                {
                  *v134 = *a2;
                  *a2 = v132;
                  v139 = (char *)v134 - (char *)v10 + 4;
                  if (v139 >= 5)
                  {
                    v140 = (((unint64_t)v139 >> 2) - 2) >> 1;
                    v141 = &v10[v140];
                    v142 = *v141;
                    v143 = *v134;
                    v144 = *(_QWORD *)(*(_QWORD *)a3 + 128);
                    v145 = *(float *)(v144 + 144 * *v134 + 104);
                    if (*(float *)(v144 + 144 * *v141 + 104) < v145)
                    {
                      do
                      {
                        v146 = v141;
                        *v134 = v142;
                        if (!v140)
                          break;
                        v140 = (v140 - 1) >> 1;
                        v141 = &v10[v140];
                        v142 = *v141;
                        v134 = v146;
                      }
                      while (*(float *)(v144 + 144 * *v141 + 104) < v145);
                      *v146 = v143;
                    }
                  }
                }
                v120 = v130-- <= 2;
              }
              while (!v120);
            }
            return result;
          }
          v13 = (unint64_t)v12 >> 1;
          v14 = &v10[(unint64_t)v12 >> 1];
          v15 = *(_QWORD *)(*(_QWORD *)a3 + 128);
          v16 = *(a2 - 1);
          v17 = *(float *)(v15 + 144 * v16 + 104);
          if ((unint64_t)v11 < 0x201)
          {
            v22 = *v10;
            v23 = *v14;
            v24 = *(float *)(v15 + 144 * *v10 + 104);
            v25 = *(float *)(v15 + 144 * *v14 + 104);
            if (v24 >= v25)
            {
              if (v17 < v24)
              {
                *v10 = v16;
                *(a2 - 1) = v22;
                v27 = *v14;
                if (*(float *)(v15 + 144 * *v10 + 104) < *(float *)(v15 + 144 * *v14 + 104))
                {
                  *v14 = *v10;
                  *v10 = v27;
                  --a4;
                  v28 = v27;
                  if ((a5 & 1) != 0)
                    goto LABEL_56;
                  goto LABEL_55;
                }
              }
              goto LABEL_32;
            }
            if (v17 >= v24)
            {
              *v14 = v22;
              *v10 = v23;
              v40 = *(a2 - 1);
              if (*(float *)(v15 + 144 * v40 + 104) >= v25)
                goto LABEL_32;
              *v10 = v40;
            }
            else
            {
              *v14 = v16;
            }
            *(a2 - 1) = v23;
LABEL_32:
            --a4;
            v28 = *v10;
            if ((a5 & 1) != 0)
              goto LABEL_56;
            goto LABEL_55;
          }
          v18 = *v14;
          v19 = *v10;
          v20 = *(float *)(v15 + 144 * *v14 + 104);
          v21 = *(float *)(v15 + 144 * *v10 + 104);
          if (v20 >= v21)
          {
            if (v17 < v20)
            {
              *v14 = v16;
              *(a2 - 1) = v18;
              v26 = *v10;
              if (*(float *)(v15 + 144 * *v14 + 104) < *(float *)(v15 + 144 * *v10 + 104))
              {
                *v10 = *v14;
                *v14 = v26;
              }
            }
          }
          else
          {
            if (v17 >= v20)
            {
              *v10 = v18;
              *v14 = v19;
              v29 = *(a2 - 1);
              if (*(float *)(v15 + 144 * v29 + 104) >= v21)
                goto LABEL_23;
              *v14 = v29;
            }
            else
            {
              *v10 = v16;
            }
            *(a2 - 1) = v19;
          }
LABEL_23:
          v30 = &v10[v13];
          v33 = *(v30 - 1);
          v31 = v30 - 1;
          v32 = v33;
          v34 = v10[1];
          v35 = *(float *)(v15 + 144 * v33 + 104);
          v36 = *(float *)(v15 + 144 * v34 + 104);
          v37 = *(a2 - 2);
          v38 = *(float *)(v15 + 144 * v37 + 104);
          if (v35 >= v36)
          {
            if (v38 < v35)
            {
              *v31 = v37;
              *(a2 - 2) = v32;
              v39 = v10[1];
              if (*(float *)(v15 + 144 * *v31 + 104) < *(float *)(v15 + 144 * v39 + 104))
              {
                v10[1] = *v31;
                *v31 = v39;
              }
            }
          }
          else
          {
            if (v38 >= v35)
            {
              v10[1] = v32;
              *v31 = v34;
              v41 = *(a2 - 2);
              if (*(float *)(v15 + 144 * v41 + 104) >= v36)
                goto LABEL_37;
              *v31 = v41;
            }
            else
            {
              v10[1] = v37;
            }
            *(a2 - 2) = v34;
          }
LABEL_37:
          v42 = &v10[v13];
          v45 = v42[1];
          v43 = v42 + 1;
          v44 = v45;
          v46 = v10[2];
          v47 = *(float *)(v15 + 144 * v45 + 104);
          v48 = *(float *)(v15 + 144 * v46 + 104);
          v49 = *(a2 - 3);
          v50 = *(float *)(v15 + 144 * v49 + 104);
          if (v47 >= v48)
          {
            if (v50 < v47)
            {
              *v43 = v49;
              *(a2 - 3) = v44;
              v51 = v10[2];
              if (*(float *)(v15 + 144 * *v43 + 104) < *(float *)(v15 + 144 * v51 + 104))
              {
                v10[2] = *v43;
                *v43 = v51;
              }
            }
          }
          else
          {
            if (v50 >= v47)
            {
              v10[2] = v44;
              *v43 = v46;
              v52 = *(a2 - 3);
              if (*(float *)(v15 + 144 * v52 + 104) >= v48)
                goto LABEL_46;
              *v43 = v52;
            }
            else
            {
              v10[2] = v49;
            }
            *(a2 - 3) = v46;
          }
LABEL_46:
          v53 = *v14;
          v54 = *v31;
          v55 = *(float *)(v15 + 144 * *v14 + 104);
          v56 = *(float *)(v15 + 144 * *v31 + 104);
          v57 = *v43;
          v58 = *(float *)(v15 + 144 * *v43 + 104);
          if (v55 < v56)
          {
            if (v58 >= v55)
            {
              *v31 = v53;
              *v14 = v54;
              v31 = v14;
              v53 = v57;
              if (v58 >= v56)
              {
                v59 = *v10;
                *v10 = v54;
                *v14 = v59;
                --a4;
                v28 = *v10;
                if ((a5 & 1) != 0)
                  goto LABEL_56;
                goto LABEL_55;
              }
            }
            goto LABEL_53;
          }
          if (v58 >= v55)
            goto LABEL_54;
          *v14 = v57;
          *v43 = v53;
          v43 = v14;
          v53 = v54;
          if (v58 < v56)
          {
LABEL_53:
            *v31 = v57;
            *v43 = v54;
LABEL_54:
            v60 = *v10;
            *v10 = v53;
            *v14 = v60;
            --a4;
            v28 = *v10;
            if ((a5 & 1) != 0)
              goto LABEL_56;
LABEL_55:
            v61 = *(float *)(v15 + 144 * v28 + 104);
            if (*(float *)(v15 + 144 * *(v10 - 1) + 104) < v61)
              goto LABEL_56;
            if (v61 >= *(float *)(v15 + 144 * *(a2 - 1) + 104))
            {
              v80 = v10 + 1;
              do
              {
                v10 = v80;
                if (v80 >= a2)
                  break;
                ++v80;
              }
              while (v61 >= *(float *)(v15 + 144 * *v10 + 104));
            }
            else
            {
              do
              {
                v79 = v10[1];
                ++v10;
              }
              while (v61 >= *(float *)(v15 + 144 * v79 + 104));
            }
            v81 = a2;
            if (v10 < a2)
            {
              v81 = a2;
              do
                v82 = *--v81;
              while (v61 < *(float *)(v15 + 144 * v82 + 104));
            }
            if (v10 < v81)
            {
              v83 = *v10;
              v84 = *v81;
              do
              {
                *v10 = v84;
                *v81 = v83;
                do
                {
                  v85 = v10[1];
                  ++v10;
                  v83 = v85;
                }
                while (v61 >= *(float *)(v15 + 144 * v85 + 104));
                do
                {
                  v86 = *--v81;
                  v84 = v86;
                }
                while (v61 < *(float *)(v15 + 144 * v86 + 104));
              }
              while (v10 < v81);
            }
            v87 = v10 - 1;
            if (v10 - 1 != v9)
              *v9 = *v87;
            a5 = 0;
            *v87 = v28;
            continue;
          }
          v78 = *v10;
          *v10 = v57;
          *v14 = v78;
          --a4;
          v28 = *v10;
          if ((a5 & 1) == 0)
            goto LABEL_55;
LABEL_56:
          v62 = 0;
          v63 = *(_QWORD *)(*(_QWORD *)a3 + 128);
          v64 = *(float *)(v63 + 144 * v28 + 104);
          do
            v65 = v10[++v62];
          while (*(float *)(v63 + 144 * v65 + 104) < v64);
          v66 = &v10[v62];
          v67 = a2;
          if (v62 == 1)
          {
            v67 = a2;
            do
            {
              if (v66 >= v67)
                break;
              v69 = *--v67;
            }
            while (*(float *)(v63 + 144 * v69 + 104) >= v64);
          }
          else
          {
            do
              v68 = *--v67;
            while (*(float *)(v63 + 144 * v68 + 104) >= v64);
          }
          if (v66 >= v67)
          {
            v76 = v66 - 1;
            if (v66 - 1 != v10)
              goto LABEL_73;
          }
          else
          {
            v70 = *v67;
            v71 = v65;
            v72 = &v10[v62];
            v73 = v67;
            do
            {
              *v72 = v70;
              *v73 = v71;
              do
              {
                v74 = v72[1];
                ++v72;
                v71 = v74;
              }
              while (*(float *)(v63 + 144 * v74 + 104) < v64);
              do
              {
                v75 = *--v73;
                v70 = v75;
              }
              while (*(float *)(v63 + 144 * v75 + 104) >= v64);
            }
            while (v72 < v73);
            v76 = v72 - 1;
            if (v72 - 1 == v10)
              goto LABEL_74;
LABEL_73:
            *v10 = *v76;
          }
LABEL_74:
          *v76 = v28;
          if (v66 < v67)
            goto LABEL_77;
          v77 = sub_223A17244(v10, v76, a3);
          v10 = v76 + 1;
          result = (unsigned int *)sub_223A17244(v76 + 1, a2, a3);
          if (!(_DWORD)result)
          {
            if (v77)
              continue;
LABEL_77:
            result = (unsigned int *)sub_223A166B4(v9, v76, a3, a4, a5 & 1);
            a5 = 0;
            v10 = v76 + 1;
            continue;
          }
          a2 = v76;
          if (v77)
            return result;
          goto LABEL_2;
        }
        v105 = *(_QWORD *)a3;
        if ((a5 & 1) != 0)
        {
          if (v10 != a2)
          {
            v106 = v10 + 1;
            if (v10 + 1 != a2)
            {
              v107 = *(_QWORD *)(v105 + 128);
              v108 = 4;
              v109 = v10;
              do
              {
                v112 = *v109;
                v111 = v109[1];
                v109 = v106;
                v113 = v112;
                v114 = *(float *)(v107 + 144 * v111 + 104);
                if (v114 < *(float *)(v107 + 144 * v112 + 104))
                {
                  v115 = v108;
                  do
                  {
                    *(unsigned int *)((char *)v10 + v115) = v113;
                    v116 = v115 - 4;
                    if (v115 == 4)
                    {
                      v110 = v10;
                      goto LABEL_116;
                    }
                    v113 = *(unsigned int *)((char *)v10 + v115 - 8);
                    v115 -= 4;
                  }
                  while (v114 < *(float *)(v107 + 144 * v113 + 104));
                  v110 = (unsigned int *)((char *)v10 + v116);
LABEL_116:
                  *v110 = v111;
                }
                v106 = v109 + 1;
                v108 += 4;
              }
              while (v109 + 1 != a2);
            }
          }
        }
        else if (v10 != a2)
        {
          v147 = v10 + 1;
          if (v10 + 1 != a2)
          {
            v148 = *(_QWORD *)(v105 + 128);
            do
            {
              v150 = *v9;
              v149 = v9[1];
              v9 = v147;
              v151 = v150;
              v152 = *(float *)(v148 + 144 * v149 + 104);
              if (v152 < *(float *)(v148 + 144 * v150 + 104))
              {
                v153 = v9;
                do
                {
                  *v153 = v151;
                  v151 = *(v153 - 2);
                  --v153;
                }
                while (v152 < *(float *)(v148 + 144 * v151 + 104));
                *v153 = v149;
              }
              v147 = v9 + 1;
            }
            while (v9 + 1 != a2);
          }
        }
        return result;
    }
  }
}

BOOL sub_223A17244(unsigned int *a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6;
  _BOOL8 result;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  float v13;
  float v14;
  unsigned int v15;
  float v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  float v22;
  float v23;
  float v24;
  unsigned int *v25;
  unsigned int *v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  float v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int *v39;
  int v40;
  uint64_t i;
  unsigned int v42;
  unsigned int v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v8 = *(a2 - 1);
      v9 = *a1;
      if (*(float *)(*(_QWORD *)(*(_QWORD *)a3 + 128) + 144 * v8 + 104) < *(float *)(*(_QWORD *)(*(_QWORD *)a3 + 128)
                                                                                        + 144 * *a1
                                                                                        + 104))
      {
        *a1 = v8;
        *(a2 - 1) = v9;
      }
      return result;
    case 3:
      v10 = *(_QWORD *)(*(_QWORD *)a3 + 128);
      v11 = *a1;
      v12 = a1[1];
      v13 = *(float *)(v10 + 144 * v12 + 104);
      v14 = *(float *)(v10 + 144 * *a1 + 104);
      v15 = *(a2 - 1);
      v16 = *(float *)(v10 + 144 * v15 + 104);
      if (v13 >= v14)
      {
        if (v16 < v13)
        {
          a1[1] = v15;
          *(a2 - 1) = v12;
          v38 = *a1;
          v37 = a1[1];
          if (*(float *)(v10 + 144 * v37 + 104) < *(float *)(v10 + 144 * *a1 + 104))
          {
            *a1 = v37;
            a1[1] = v38;
          }
        }
      }
      else if (v16 >= v13)
      {
        *a1 = v12;
        a1[1] = v11;
        v47 = *(a2 - 1);
        if (*(float *)(v10 + 144 * v47 + 104) < v14)
        {
          a1[1] = v47;
          *(a2 - 1) = v11;
        }
      }
      else
      {
        *a1 = v15;
        *(a2 - 1) = v11;
      }
      return result;
    case 4:
      sub_223A17630(a1, a1 + 1, a1 + 2, a2 - 1, *(_QWORD *)(*(_QWORD *)a3 + 128));
      return 1;
    case 5:
      v27 = a1 + 2;
      v28 = a1 + 3;
      sub_223A17630(a1, a1 + 1, a1 + 2, a1 + 3, *(_QWORD *)(*(_QWORD *)a3 + 128));
      v29 = *(a2 - 1);
      v30 = a1[3];
      v31 = *(_QWORD *)(*(_QWORD *)a3 + 128);
      if (*(float *)(v31 + 144 * v29 + 104) >= *(float *)(v31 + 144 * v30 + 104))
        return 1;
      *v28 = v29;
      *(a2 - 1) = v30;
      v32 = *v28;
      v33 = *v27;
      v34 = *(float *)(v31 + 144 * *v28 + 104);
      if (v34 >= *(float *)(v31 + 144 * *v27 + 104))
        return 1;
      *v27 = v32;
      *v28 = v33;
      v35 = a1[1];
      if (v34 >= *(float *)(v31 + 144 * v35 + 104))
        return 1;
      a1[1] = v32;
      a1[2] = v35;
      v36 = *a1;
      if (v34 >= *(float *)(v31 + 144 * *a1 + 104))
        return 1;
      *a1 = v32;
      a1[1] = v36;
      return 1;
    default:
      v18 = a1 + 2;
      v17 = a1[2];
      v19 = a1[1];
      v20 = *(_QWORD *)(*(_QWORD *)a3 + 128);
      v21 = *a1;
      v22 = *(float *)(v20 + 144 * v19 + 104);
      v23 = *(float *)(v20 + 144 * *a1 + 104);
      v24 = *(float *)(v20 + 144 * v17 + 104);
      if (v22 < v23)
      {
        v25 = a1;
        v26 = a1 + 2;
        if (v24 >= v22)
        {
          *a1 = v19;
          a1[1] = v21;
          v25 = a1 + 1;
          v26 = a1 + 2;
          if (v24 >= v23)
            goto LABEL_25;
        }
LABEL_24:
        *v25 = v17;
        *v26 = v21;
        goto LABEL_25;
      }
      if (v24 < v22)
      {
        a1[1] = v17;
        *v18 = v19;
        v25 = a1;
        v26 = a1 + 1;
        if (v24 < v23)
          goto LABEL_24;
      }
LABEL_25:
      v39 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v40 = 0;
      for (i = 12; ; i += 4)
      {
        v42 = *v39;
        v43 = *v18;
        v44 = *(float *)(v20 + 144 * *v39 + 104);
        if (v44 < *(float *)(v20 + 144 * v43 + 104))
          break;
LABEL_34:
        v18 = v39++;
        if (v39 == a2)
          return 1;
      }
      v45 = i;
      do
      {
        *(unsigned int *)((char *)a1 + v45) = v43;
        v46 = v45 - 4;
        if (v45 == 4)
        {
          *a1 = v42;
          if (++v40 != 8)
            goto LABEL_34;
          return v39 + 1 == a2;
        }
        v43 = *(unsigned int *)((char *)a1 + v45 - 8);
        v45 -= 4;
      }
      while (v44 < *(float *)(v20 + 144 * v43 + 104));
      *(unsigned int *)((char *)a1 + v46) = v42;
      if (++v40 != 8)
        goto LABEL_34;
      return v39 + 1 == a2;
  }
}

unsigned int *sub_223A17630(unsigned int *result, unsigned int *a2, unsigned int *a3, unsigned int *a4, uint64_t a5)
{
  unsigned int v5;
  unsigned int v6;
  float v7;
  float v8;
  unsigned int v9;
  float v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  v5 = *a2;
  v6 = *result;
  v7 = *(float *)(a5 + 144 * *a2 + 104);
  v8 = *(float *)(a5 + 144 * *result + 104);
  v9 = *a3;
  v10 = *(float *)(a5 + 144 * *a3 + 104);
  if (v7 >= v8)
  {
    if (v10 >= v7)
    {
      v6 = *a3;
      goto LABEL_14;
    }
    *a2 = v9;
    *a3 = v5;
    v11 = *result;
    if (*(float *)(a5 + 144 * *a2 + 104) >= *(float *)(a5 + 144 * *result + 104))
    {
      v6 = v5;
      v9 = v5;
      goto LABEL_14;
    }
    *result = *a2;
    *a2 = v11;
    v6 = *a3;
  }
  else
  {
    if (v10 >= v7)
    {
      *result = v5;
      *a2 = v6;
      v9 = *a3;
      if (*(float *)(a5 + 144 * *a3 + 104) >= v8)
      {
        v6 = *a3;
        goto LABEL_14;
      }
      *a2 = v9;
    }
    else
    {
      *result = v9;
    }
    *a3 = v6;
  }
  v9 = v6;
LABEL_14:
  if (*(float *)(a5 + 144 * *a4 + 104) < *(float *)(a5 + 144 * v6 + 104))
  {
    *a3 = *a4;
    *a4 = v9;
    v12 = *a2;
    if (*(float *)(a5 + 144 * *a3 + 104) < *(float *)(a5 + 144 * *a2 + 104))
    {
      *a2 = *a3;
      *a3 = v12;
      v13 = *result;
      if (*(float *)(a5 + 144 * *a2 + 104) < *(float *)(a5 + 144 * *result + 104))
      {
        *result = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

void sub_223A17780(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  float v20;
  float v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t prime;
  int8x8_t v26;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;

  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = (19349669 * v9) ^ (73856093 * *a2) ^ (83492791 * v10);
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = (19349669 * v9) ^ (73856093 * v8) ^ (83492791 * v10);
      if (v11 >= v12)
        v4 = v11 % v12;
    }
    else
    {
      v4 = v11 & (v12 - 1);
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = *v14;
      if (v15)
      {
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v17 = v15[1];
            if (v17 == v11)
            {
              if (*((_DWORD *)v15 + 4) == v8 && *((_DWORD *)v15 + 5) == v9 && *((_DWORD *)v15 + 6) == v10)
                return;
            }
            else if ((v17 & (v12 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v15 = (uint64_t *)*v15;
            if (!v15)
              goto LABEL_27;
          }
        }
        do
        {
          v16 = v15[1];
          if (v16 == v11)
          {
            if (*((_DWORD *)v15 + 4) == v8 && *((_DWORD *)v15 + 5) == v9 && *((_DWORD *)v15 + 6) == v10)
              return;
          }
          else
          {
            if (v16 >= v12)
              v16 %= v12;
            if (v16 != v4)
              break;
          }
          v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_27:
  v18 = (_QWORD *)(a1 + 16);
  v19 = operator new(0x38uLL);
  *v19 = 0;
  v19[1] = v11;
  v19[2] = *(_QWORD *)a3;
  *((_DWORD *)v19 + 6) = *(_DWORD *)(a3 + 8);
  *((_OWORD *)v19 + 2) = *(_OWORD *)a4;
  v19[6] = *(_QWORD *)(a4 + 16);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (v12 && (float)(v21 * (float)v12) >= v20)
    goto LABEL_55;
  v22 = 1;
  if (v12 >= 3)
    v22 = (v12 & (v12 - 1)) != 0;
  v23 = v22 | (2 * v12);
  v24 = vcvtps_u32_f32(v20 / v21);
  if (v23 <= v24)
    prime = v24;
  else
    prime = v23;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
  }
  v26 = *(int8x8_t *)(a1 + 8);
  if (prime > *(_QWORD *)&v26)
    goto LABEL_39;
  if (prime < *(_QWORD *)&v26)
  {
    v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v26 < 3uLL || (v28 = (uint8x8_t)vcnt_s8(v26), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
    {
      v27 = std::__next_prime(v27);
    }
    else
    {
      v29 = 1 << -(char)__clz(v27 - 1);
      if (v27 >= 2)
        v27 = v29;
    }
    if (prime <= v27)
      prime = v27;
    if (prime < *(_QWORD *)&v26)
LABEL_39:
      sub_2231B0668(a1, prime);
  }
  v12 = *(_QWORD *)(a1 + 8);
  v30 = v12 - 1;
  if ((v12 & (v12 - 1)) != 0)
  {
    if (v11 >= v12)
    {
      v4 = v11 % v12;
      v31 = *(_QWORD *)a1;
      v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
      if (!v32)
        goto LABEL_58;
LABEL_56:
      *v19 = *v32;
LABEL_64:
      *v32 = v19;
      goto LABEL_65;
    }
    v4 = v11;
LABEL_55:
    v31 = *(_QWORD *)a1;
    v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (!v32)
      goto LABEL_58;
    goto LABEL_56;
  }
  v4 = v30 & v11;
  v31 = *(_QWORD *)a1;
  v32 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v30 & v11));
  if (v32)
    goto LABEL_56;
LABEL_58:
  *v19 = *v18;
  *v18 = v19;
  *(_QWORD *)(v31 + 8 * v4) = v18;
  if (*v19)
  {
    v33 = *(_QWORD *)(*v19 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v33 >= v12)
        v33 %= v12;
    }
    else
    {
      v33 &= v12 - 1;
    }
    v32 = (_QWORD *)(*(_QWORD *)a1 + 8 * v33);
    goto LABEL_64;
  }
LABEL_65:
  ++*(_QWORD *)(a1 + 24);
}

void sub_223A17AFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223950444((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_223A17B10(float *a1, int *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  float v20;
  float v21;
  _QWORD *v22;
  _QWORD *v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t prime;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  size_t v33;
  size_t v34;
  size_t v35;
  _QWORD *i;
  size_t v37;
  uint64_t v38;
  unint64_t v39;
  uint8x8_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  size_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9);
  v11 = *((_QWORD *)a1 + 1);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9);
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = v10 & (v11 - 1);
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == v10)
            {
              if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_27;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == v10)
          {
            if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_27:
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = v10;
  v19 = **a4;
  *((_DWORD *)v18 + 6) = *((_DWORD *)*a4 + 2);
  v18[2] = v19;
  v20 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v21 = a1[8];
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v24 = 1;
    if (v11 >= 3)
      v24 = (v11 & (v11 - 1)) != 0;
    v25 = v24 | (2 * v11);
    v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26)
      prime = v26;
    else
      prime = v25;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v11 = *((_QWORD *)a1 + 1);
    }
    if (prime > v11)
    {
LABEL_41:
      if (prime >> 61)
        sub_223174E94();
      v28 = operator new(8 * prime);
      v29 = *(_QWORD **)a1;
      *(_QWORD *)a1 = v28;
      if (v29)
        operator delete(v29);
      v30 = 0;
      *((_QWORD *)a1 + 1) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v30++) = 0;
      while (prime != v30);
      v32 = (uint64_t *)(a1 + 4);
      v31 = (_QWORD *)*((_QWORD *)a1 + 2);
      if (!v31)
        goto LABEL_73;
      v33 = v31[1];
      v34 = prime - 1;
      if ((prime & (prime - 1)) == 0)
      {
        v35 = v33 & v34;
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v32;
        for (i = (_QWORD *)*v31; *v31; i = (_QWORD *)*v31)
        {
          v37 = i[1] & v34;
          if (v37 == v35)
          {
            v31 = i;
          }
          else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v37))
          {
            *v31 = *i;
            v38 = 8 * v37;
            *i = **(_QWORD **)(*(_QWORD *)a1 + v38);
            **(_QWORD **)(*(_QWORD *)a1 + v38) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v37) = v31;
            v31 = i;
            v35 = v37;
          }
        }
        goto LABEL_73;
      }
      if (v33 >= prime)
        v33 %= prime;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v33) = v32;
      v42 = (_QWORD *)*v31;
      if (!*v31)
      {
LABEL_73:
        v11 = prime;
        v45 = prime - 1;
        if ((prime & (prime - 1)) != 0)
          goto LABEL_74;
        goto LABEL_89;
      }
      while (1)
      {
        v44 = v42[1];
        if (v44 >= prime)
          v44 %= prime;
        if (v44 == v33)
          goto LABEL_67;
        if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v44))
        {
          *v31 = *v42;
          v43 = 8 * v44;
          *v42 = **(_QWORD **)(*(_QWORD *)a1 + v43);
          **(_QWORD **)(*(_QWORD *)a1 + v43) = v42;
          v42 = v31;
LABEL_67:
          v31 = v42;
          v42 = (_QWORD *)*v42;
          if (!v42)
            goto LABEL_73;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v44) = v31;
          v31 = v42;
          v42 = (_QWORD *)*v42;
          v33 = v44;
          if (!v42)
            goto LABEL_73;
        }
      }
    }
    if (prime < v11)
    {
      v39 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v11 < 3 || (v40 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        v39 = std::__next_prime(v39);
      }
      else
      {
        v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2)
          v39 = v41;
      }
      if (prime <= v39)
        prime = v39;
      if (prime < v11)
      {
        if (!prime)
        {
          v46 = *(_QWORD **)a1;
          *(_QWORD *)a1 = 0;
          if (v46)
            operator delete(v46);
          v11 = 0;
          *((_QWORD *)a1 + 1) = 0;
          v45 = -1;
          goto LABEL_89;
        }
        goto LABEL_41;
      }
      v11 = *((_QWORD *)a1 + 1);
    }
    v45 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
LABEL_74:
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v22 = *(_QWORD **)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v23)
          goto LABEL_30;
      }
      else
      {
        v4 = v10;
        v22 = *(_QWORD **)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        if (v23)
          goto LABEL_30;
      }
      goto LABEL_90;
    }
LABEL_89:
    v4 = v45 & v10;
    v22 = *(_QWORD **)a1;
    v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v45 & v10));
    if (v23)
      goto LABEL_30;
    goto LABEL_90;
  }
  v22 = *(_QWORD **)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
LABEL_30:
    *v18 = *v23;
LABEL_96:
    *v23 = v18;
    goto LABEL_97;
  }
LABEL_90:
  *v18 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v18;
  v22[v4] = a1 + 4;
  if (*v18)
  {
    v47 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v47 >= v11)
        v47 %= v11;
    }
    else
    {
      v47 &= v11 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v47);
    goto LABEL_96;
  }
LABEL_97:
  ++*((_QWORD *)a1 + 3);
  return v18;
}

void sub_223A18030(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223A18044(float *a1, int *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  float v20;
  float v21;
  _QWORD *v22;
  _QWORD *v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t prime;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  size_t v33;
  size_t v34;
  size_t v35;
  _QWORD *i;
  size_t v37;
  uint64_t v38;
  unint64_t v39;
  uint8x8_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  size_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9);
  v11 = *((_QWORD *)a1 + 1);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9);
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = v10 & (v11 - 1);
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == v10)
            {
              if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_27;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == v10)
          {
            if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_27:
  v18 = operator new(0x28uLL);
  *v18 = 0;
  v18[1] = v10;
  v19 = **a4;
  *((_DWORD *)v18 + 6) = *((_DWORD *)*a4 + 2);
  v18[2] = v19;
  *(_QWORD *)((char *)v18 + 28) = 0;
  *((_DWORD *)v18 + 9) = 0;
  v20 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v21 = a1[8];
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    v24 = 1;
    if (v11 >= 3)
      v24 = (v11 & (v11 - 1)) != 0;
    v25 = v24 | (2 * v11);
    v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26)
      prime = v26;
    else
      prime = v25;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v11 = *((_QWORD *)a1 + 1);
    }
    if (prime > v11)
    {
LABEL_41:
      if (prime >> 61)
        sub_223174E94();
      v28 = operator new(8 * prime);
      v29 = *(_QWORD **)a1;
      *(_QWORD *)a1 = v28;
      if (v29)
        operator delete(v29);
      v30 = 0;
      *((_QWORD *)a1 + 1) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v30++) = 0;
      while (prime != v30);
      v32 = (uint64_t *)(a1 + 4);
      v31 = (_QWORD *)*((_QWORD *)a1 + 2);
      if (!v31)
        goto LABEL_73;
      v33 = v31[1];
      v34 = prime - 1;
      if ((prime & (prime - 1)) == 0)
      {
        v35 = v33 & v34;
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v35) = v32;
        for (i = (_QWORD *)*v31; *v31; i = (_QWORD *)*v31)
        {
          v37 = i[1] & v34;
          if (v37 == v35)
          {
            v31 = i;
          }
          else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v37))
          {
            *v31 = *i;
            v38 = 8 * v37;
            *i = **(_QWORD **)(*(_QWORD *)a1 + v38);
            **(_QWORD **)(*(_QWORD *)a1 + v38) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v37) = v31;
            v31 = i;
            v35 = v37;
          }
        }
        goto LABEL_73;
      }
      if (v33 >= prime)
        v33 %= prime;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v33) = v32;
      v42 = (_QWORD *)*v31;
      if (!*v31)
      {
LABEL_73:
        v11 = prime;
        v45 = prime - 1;
        if ((prime & (prime - 1)) != 0)
          goto LABEL_74;
        goto LABEL_89;
      }
      while (1)
      {
        v44 = v42[1];
        if (v44 >= prime)
          v44 %= prime;
        if (v44 == v33)
          goto LABEL_67;
        if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v44))
        {
          *v31 = *v42;
          v43 = 8 * v44;
          *v42 = **(_QWORD **)(*(_QWORD *)a1 + v43);
          **(_QWORD **)(*(_QWORD *)a1 + v43) = v42;
          v42 = v31;
LABEL_67:
          v31 = v42;
          v42 = (_QWORD *)*v42;
          if (!v42)
            goto LABEL_73;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v44) = v31;
          v31 = v42;
          v42 = (_QWORD *)*v42;
          v33 = v44;
          if (!v42)
            goto LABEL_73;
        }
      }
    }
    if (prime < v11)
    {
      v39 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v11 < 3 || (v40 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        v39 = std::__next_prime(v39);
      }
      else
      {
        v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2)
          v39 = v41;
      }
      if (prime <= v39)
        prime = v39;
      if (prime < v11)
      {
        if (!prime)
        {
          v46 = *(_QWORD **)a1;
          *(_QWORD *)a1 = 0;
          if (v46)
            operator delete(v46);
          v11 = 0;
          *((_QWORD *)a1 + 1) = 0;
          v45 = -1;
          goto LABEL_89;
        }
        goto LABEL_41;
      }
      v11 = *((_QWORD *)a1 + 1);
    }
    v45 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
LABEL_74:
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v22 = *(_QWORD **)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v23)
          goto LABEL_30;
      }
      else
      {
        v4 = v10;
        v22 = *(_QWORD **)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        if (v23)
          goto LABEL_30;
      }
      goto LABEL_90;
    }
LABEL_89:
    v4 = v45 & v10;
    v22 = *(_QWORD **)a1;
    v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v45 & v10));
    if (v23)
      goto LABEL_30;
    goto LABEL_90;
  }
  v22 = *(_QWORD **)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
LABEL_30:
    *v18 = *v23;
LABEL_96:
    *v23 = v18;
    goto LABEL_97;
  }
LABEL_90:
  *v18 = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = v18;
  v22[v4] = a1 + 4;
  if (*v18)
  {
    v47 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v47 >= v11)
        v47 %= v11;
    }
    else
    {
      v47 &= v11 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v47);
    goto LABEL_96;
  }
LABEL_97:
  ++*((_QWORD *)a1 + 3);
  return v18;
}

void sub_223A1856C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223A18580(uint64_t a1, int *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  void **v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  float v19;
  float v20;
  uint64_t v21;
  _QWORD *v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9);
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9);
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = v10 & (v11 - 1);
    }
    v13 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == v10)
            {
              if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_27;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == v10)
          {
            if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_27:
  v17 = (_QWORD *)(a1 + 16);
  v14 = operator new(0x38uLL);
  *v14 = 0;
  v14[1] = v10;
  v18 = **a4;
  *((_DWORD *)v14 + 6) = *((_DWORD *)*a4 + 2);
  v14[2] = v18;
  v14[5] = 0;
  v14[6] = 0;
  v14[4] = 0;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (v11 && (float)(v20 * (float)v11) >= v19)
  {
    v21 = *(_QWORD *)a1;
    v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v22)
    {
LABEL_30:
      *v14 = *v22;
LABEL_65:
      *v22 = v14;
      goto LABEL_66;
    }
  }
  else
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v19 / v20);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v11 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v11)
      goto LABEL_41;
    if (prime < v11)
    {
      v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v11 < 3 || (v28 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        v27 = std::__next_prime(v27);
      }
      else
      {
        v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2)
          v27 = v29;
      }
      if (prime <= v27)
        prime = v27;
      if (prime < v11)
LABEL_41:
        sub_2231B0668(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v30 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v21 = *(_QWORD *)a1;
        v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v22)
          goto LABEL_30;
      }
      else
      {
        v4 = v10;
        v21 = *(_QWORD *)a1;
        v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        if (v22)
          goto LABEL_30;
      }
    }
    else
    {
      v4 = v30 & v10;
      v21 = *(_QWORD *)a1;
      v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v30 & v10));
      if (v22)
        goto LABEL_30;
    }
  }
  *v14 = *v17;
  *v17 = v14;
  *(_QWORD *)(v21 + 8 * v4) = v17;
  if (*v14)
  {
    v31 = *(_QWORD *)(*v14 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v31 >= v11)
        v31 %= v11;
    }
    else
    {
      v31 &= v11 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v31);
    goto LABEL_65;
  }
LABEL_66:
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_223A18908(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223950444((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223A1891C(uint64_t result, unsigned int *a2, uint64_t **a3, uint64_t a4, char a5)
{
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  float v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  float *v31;
  unint64_t v32;
  float v33;
  unsigned int *v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  float *v45;
  unsigned int v46;
  float v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unsigned int *v54;
  unint64_t v55;
  float v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned int v65;
  float v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  BOOL v80;
  uint64_t v81;
  unsigned int *v82;
  _DWORD *v83;
  unsigned int *v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  int64_t v95;
  int64_t v96;
  uint64_t v97;
  unsigned int *v98;
  uint64_t *v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unsigned int *v105;
  unint64_t v106;
  unsigned int *v107;
  unint64_t v108;
  unsigned int *v109;
  unsigned int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  int64_t v120;
  uint64_t v122;
  unsigned int v123;
  unsigned int *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  unsigned int *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unsigned int *v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unsigned int *v143;
  uint64_t v144;
  unsigned int *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unsigned int *i;
  unsigned int *v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unsigned int *v156;
  uint64_t v157;
  unint64_t v158;
  unsigned int *v159;
  unsigned int *v160;
  unsigned int *v161;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;

  v8 = (unsigned int *)result;
LABEL_2:
  v9 = a2 - 7;
  v159 = a2 - 21;
  v160 = a2 - 14;
  v10 = v8;
  v161 = a2 - 7;
  while (2)
  {
    v8 = v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = 0x6DB6DB6DB6DB6DB7 * (a2 - v10);
    switch(v12)
    {
      case 0:
      case 1:
        return result;
      case 2:
        result = (uint64_t)*a3;
        v72 = *(a2 - 7);
        v73 = **a3;
        v74 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v73) >> 5);
        if (v74 <= v72)
          goto LABEL_159;
        v75 = *v10;
        if (v74 <= v75)
          goto LABEL_159;
        if (*(float *)(v73 + 96 * v72 + 36) < *(float *)(v73 + 96 * v75 + 36))
        {
          v202 = v10[3];
          v194 = *(_QWORD *)(v10 + 1);
          v178 = *((_QWORD *)v10 + 2);
          v186 = v10[6];
          *v10 = *(a2 - 7);
          v76 = *((_QWORD *)a2 - 3);
          v10[3] = *(a2 - 4);
          *(_QWORD *)(v10 + 1) = v76;
          v77 = *(_QWORD *)(a2 - 3);
          v10[6] = *(a2 - 1);
          *((_QWORD *)v10 + 2) = v77;
          *(a2 - 7) = v75;
          *(a2 - 4) = v202;
          *((_QWORD *)a2 - 3) = v194;
          *(a2 - 1) = v186;
          *(_QWORD *)(a2 - 3) = v178;
        }
        return result;
      case 3:
        return (uint64_t)sub_223A19C68((uint64_t *)v10, v10 + 7, v9, a3);
      case 4:
        return (uint64_t)sub_223A1A328((uint64_t *)v10, v10 + 7, v10 + 14, v9, a3);
      case 5:
        return (uint64_t)sub_223A1991C((uint64_t *)v10, v10 + 7, v10 + 14, v10 + 21, v9, a3);
      default:
        if (v11 <= 671)
        {
          v78 = v10 + 7;
          v80 = v10 == a2 || v78 == a2;
          if ((a5 & 1) != 0)
          {
            if (v80)
              return result;
            v81 = 0;
            v82 = v10;
            while (1)
            {
              v84 = v78;
              result = (uint64_t)*a3;
              v85 = v82[7];
              v86 = **a3;
              v87 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v86) >> 5);
              if (v87 <= v85)
                break;
              v88 = *v82;
              if (v87 <= v88)
                break;
              if (*(float *)(v86 + 96 * v85 + 36) < *(float *)(v86 + 96 * v88 + 36))
              {
                v203 = v82[10];
                v195 = *((_QWORD *)v82 + 4);
                v179 = *(_QWORD *)(v82 + 11);
                v187 = v82[13];
                LODWORD(v89) = *v82;
                v90 = v81;
                do
                {
                  v91 = (char *)v10 + v90;
                  *((_DWORD *)v91 + 7) = v89;
                  *((_QWORD *)v91 + 4) = *(_QWORD *)((char *)v10 + v90 + 4);
                  *((_DWORD *)v91 + 10) = *(unsigned int *)((char *)v10 + v90 + 12);
                  *(_QWORD *)(v91 + 44) = *(_QWORD *)((char *)v10 + v90 + 16);
                  *((_DWORD *)v91 + 13) = *(unsigned int *)((char *)v10 + v90 + 24);
                  if (!v90)
                  {
                    v83 = v10;
                    goto LABEL_90;
                  }
                  result = (uint64_t)*a3;
                  v92 = **a3;
                  v93 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v92) >> 5);
                  if (v93 <= v85)
                    goto LABEL_159;
                  v89 = *((unsigned int *)v91 - 7);
                  if (v93 <= v89)
                    goto LABEL_159;
                  v90 -= 28;
                }
                while (*(float *)(v92 + 96 * v85 + 36) < *(float *)(v92 + 96 * v89 + 36));
                v83 = (unsigned int *)((char *)v10 + v90 + 28);
LABEL_90:
                *v83 = v85;
                *((_DWORD *)v91 + 3) = v203;
                *(_QWORD *)(v91 + 4) = v195;
                *((_DWORD *)v91 + 6) = v187;
                *((_QWORD *)v91 + 2) = v179;
              }
              v78 = v84 + 7;
              v81 += 28;
              v82 = v84;
              if (v84 + 7 == a2)
                return result;
            }
          }
          else
          {
            if (v80)
              return result;
            for (i = v10 + 11; ; i += 7)
            {
              v150 = v78;
              result = (uint64_t)*a3;
              v151 = v8[7];
              v152 = **a3;
              v153 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v152) >> 5);
              if (v153 <= v151)
                break;
              v154 = *v8;
              if (v153 <= v154)
                break;
              if (*(float *)(v152 + 96 * v151 + 36) < *(float *)(v152 + 96 * v154 + 36))
              {
                v206 = v8[10];
                v198 = *((_QWORD *)v8 + 4);
                v182 = *(_QWORD *)(v8 + 11);
                v190 = v8[13];
                LODWORD(v155) = *v8;
                v156 = i;
                do
                {
                  *(v156 - 4) = v155;
                  *(v156 - 1) = *(v156 - 8);
                  *(_QWORD *)(v156 - 3) = *((_QWORD *)v156 - 5);
                  *(_QWORD *)v156 = *(_QWORD *)(v156 - 7);
                  v156[2] = *(v156 - 5);
                  result = (uint64_t)*a3;
                  v157 = **a3;
                  v158 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v157) >> 5);
                  if (v158 <= v151)
                    goto LABEL_159;
                  v155 = *(v156 - 18);
                  if (v158 <= v155)
                    goto LABEL_159;
                  v156 -= 7;
                }
                while (*(float *)(v157 + 96 * v151 + 36) < *(float *)(v157
                                                                                     + 96 * v155
                                                                                     + 36));
                *(v156 - 4) = v151;
                *(v156 - 1) = v206;
                *(_QWORD *)(v156 - 3) = v198;
                v156[2] = v190;
                *(_QWORD *)v156 = v182;
              }
              v78 = v150 + 7;
              v8 = v150;
              if (v150 + 7 == a2)
                return result;
            }
          }
LABEL_159:
          sub_2236C5448();
        }
        if (a4)
        {
          v13 = (unint64_t)v12 >> 1;
          v14 = &v10[7 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0xE01)
          {
            sub_223A19C68((uint64_t *)&v8[7 * v13], v8, v9, a3);
            --a4;
            result = (uint64_t)*a3;
            if ((a5 & 1) != 0)
            {
LABEL_18:
              v25 = *v8;
              v23 = *(_QWORD *)result;
              v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 8) - *(_QWORD *)result) >> 5);
              goto LABEL_19;
            }
          }
          else
          {
            sub_223A19C68((uint64_t *)v8, &v8[7 * v13], v9, a3);
            v15 = a2;
            v16 = a4;
            v17 = &v8[7 * v13];
            sub_223A19C68((uint64_t *)(v8 + 7), v17 - 7, v160, a3);
            sub_223A19C68((uint64_t *)v8 + 7, &v8[7 * v13 + 7], v159, a3);
            sub_223A19C68((uint64_t *)(v17 - 7), v17, &v8[7 * v13 + 7], a3);
            v18 = *v8;
            v199 = v8[3];
            v191 = *(_QWORD *)(v8 + 1);
            v175 = *((_QWORD *)v8 + 2);
            v183 = v8[6];
            *v8 = *v14;
            v19 = *(_QWORD *)(v17 + 1);
            v8[3] = v17[3];
            *(_QWORD *)(v8 + 1) = v19;
            v20 = *((_QWORD *)v17 + 2);
            v8[6] = v17[6];
            *((_QWORD *)v8 + 2) = v20;
            *v14 = v18;
            v17[3] = v199;
            *(_QWORD *)(v17 + 1) = v191;
            v17[6] = v183;
            *((_QWORD *)v17 + 2) = v175;
            v21 = v16;
            a2 = v15;
            v9 = v161;
            a4 = v21 - 1;
            result = (uint64_t)*a3;
            if ((a5 & 1) != 0)
              goto LABEL_18;
          }
          v22 = *(v8 - 7);
          v23 = *(_QWORD *)result;
          v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 8) - *(_QWORD *)result) >> 5);
          if (v24 <= v22)
            goto LABEL_159;
          v25 = *v8;
          if (v24 <= v25)
            goto LABEL_159;
          v26 = *(float *)(v23 + 96 * v25 + 36);
          if (*(float *)(v23 + 96 * v22 + 36) >= v26)
          {
            v172 = v8[3];
            v169 = *(_QWORD *)(v8 + 1);
            v163 = *((_QWORD *)v8 + 2);
            v166 = v8[6];
            v27 = *v9;
            if (v24 <= v27)
              goto LABEL_159;
            if (v26 < *(float *)(v23 + 96 * v27 + 36))
            {
              v10 = v8;
              while (1)
              {
                v29 = v10[7];
                v10 += 7;
                v28 = v29;
                if (v24 <= v29)
                  goto LABEL_159;
                if (v26 < *(float *)(v23 + 96 * v28 + 36))
                  goto LABEL_52;
              }
            }
            v54 = v8 + 7;
            do
            {
              v10 = v54;
              if (v54 >= a2)
                break;
              v55 = *v54;
              if (v24 <= v55)
                goto LABEL_159;
              v56 = *(float *)(v23 + 96 * v55 + 36);
              v54 = v10 + 7;
            }
            while (v26 >= v56);
LABEL_52:
            v57 = a2;
            if (v10 < a2)
            {
              v57 = a2;
              do
              {
                v59 = *(v57 - 7);
                v57 -= 7;
                v58 = v59;
                if (v24 <= v59)
                  goto LABEL_159;
              }
              while (v26 < *(float *)(v23 + 96 * v58 + 36));
            }
            if (v10 < v57)
            {
              v60 = *v10;
              do
              {
                v201 = v10[3];
                v193 = *(_QWORD *)(v10 + 1);
                v177 = *((_QWORD *)v10 + 2);
                v185 = v10[6];
                *v10 = *v57;
                v61 = *(_QWORD *)(v57 + 1);
                v10[3] = v57[3];
                *(_QWORD *)(v10 + 1) = v61;
                v62 = *((_QWORD *)v57 + 2);
                v10[6] = v57[6];
                *((_QWORD *)v10 + 2) = v62;
                *v57 = v60;
                v57[3] = v201;
                *(_QWORD *)(v57 + 1) = v193;
                *((_QWORD *)v57 + 2) = v177;
                v57[6] = v185;
                result = (uint64_t)*a3;
                v63 = **a3;
                v64 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v63) >> 5);
                if (v64 <= v25)
                  goto LABEL_159;
                v65 = v10[7];
                v10 += 7;
                v60 = v65;
                if (v64 <= v65)
                  goto LABEL_159;
                v66 = *(float *)(v63 + 96 * v25 + 36);
                if (v66 < *(float *)(v63 + 96 * v60 + 36))
                  goto LABEL_63;
                do
                {
                  v67 = v10[7];
                  v10 += 7;
                  v60 = v67;
                  if (v64 <= v67)
                    goto LABEL_159;
                }
                while (v66 >= *(float *)(v63 + 96 * v60 + 36));
                do
                {
LABEL_63:
                  v69 = *(v57 - 7);
                  v57 -= 7;
                  v68 = v69;
                  if (v64 <= v69)
                    goto LABEL_159;
                }
                while (v66 < *(float *)(v63 + 96 * v68 + 36));
              }
              while (v10 < v57);
            }
            if (v10 - 7 != v8)
            {
              *v8 = *(v10 - 7);
              v70 = *((_QWORD *)v10 - 3);
              v8[3] = *(v10 - 4);
              *(_QWORD *)(v8 + 1) = v70;
              v71 = *(_QWORD *)(v10 - 3);
              v8[6] = *(v10 - 1);
              *((_QWORD *)v8 + 2) = v71;
            }
            a5 = 0;
            *(v10 - 7) = v25;
            *(v10 - 4) = v172;
            *((_QWORD *)v10 - 3) = v169;
            *(v10 - 1) = v166;
            *(_QWORD *)(v10 - 3) = v163;
            continue;
          }
LABEL_19:
          v173 = v8[3];
          v170 = *(_QWORD *)(v8 + 1);
          v164 = *((_QWORD *)v8 + 2);
          v167 = v8[6];
          if (v24 <= v25)
            goto LABEL_159;
          v30 = 0;
          v31 = (float *)(v23 + 96 * v25 + 36);
          do
          {
            v32 = v8[v30 + 7];
            if (v24 <= v32)
              goto LABEL_159;
            v33 = *v31;
            v30 += 7;
          }
          while (*(float *)(v23 + 96 * v32 + 36) < *v31);
          v34 = &v8[v30];
          v35 = a2;
          if (v30 != 7)
          {
            while (1)
            {
              v37 = *(v35 - 7);
              v35 -= 7;
              v36 = v37;
              if (v24 <= v37)
                goto LABEL_159;
              if (*(float *)(v23 + 96 * v36 + 36) < v33)
                goto LABEL_31;
            }
          }
          v35 = a2;
          do
          {
            if (v34 >= v35)
              break;
            v39 = *(v35 - 7);
            v35 -= 7;
            v38 = v39;
            if (v24 <= v39)
              goto LABEL_159;
          }
          while (*(float *)(v23 + 96 * v38 + 36) >= v33);
LABEL_31:
          if (v34 >= v35)
          {
            v10 = v34;
            v50 = v34 - 7;
            if (v34 - 7 != v8)
              goto LABEL_41;
          }
          else
          {
            v10 = v34;
            v40 = v35;
            do
            {
              v200 = v10[3];
              v192 = *(_QWORD *)(v10 + 1);
              v176 = *((_QWORD *)v10 + 2);
              v184 = v10[6];
              *v10 = *v40;
              v41 = *(_QWORD *)(v40 + 1);
              v10[3] = v40[3];
              *(_QWORD *)(v10 + 1) = v41;
              v42 = *((_QWORD *)v40 + 2);
              v10[6] = v40[6];
              *((_QWORD *)v10 + 2) = v42;
              *v40 = v32;
              v40[3] = v200;
              *(_QWORD *)(v40 + 1) = v192;
              *((_QWORD *)v40 + 2) = v176;
              v40[6] = v184;
              v43 = **a3;
              v44 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v43) >> 5);
              if (v44 <= v25)
                goto LABEL_159;
              v45 = (float *)(v43 + 96 * v25 + 36);
              do
              {
                v46 = v10[7];
                v10 += 7;
                LODWORD(v32) = v46;
                if (v44 <= v46)
                  goto LABEL_159;
                v47 = *v45;
              }
              while (*(float *)(v43 + 96 * v32 + 36) < *v45);
              do
              {
                v49 = *(v40 - 7);
                v40 -= 7;
                v48 = v49;
                if (v44 <= v49)
                  goto LABEL_159;
              }
              while (*(float *)(v43 + 96 * v48 + 36) >= v47);
            }
            while (v10 < v40);
            v50 = v10 - 7;
            if (v10 - 7 != v8)
            {
LABEL_41:
              *v8 = *(v10 - 7);
              v51 = *((_QWORD *)v10 - 3);
              v8[3] = *(v10 - 4);
              *(_QWORD *)(v8 + 1) = v51;
              v52 = *(_QWORD *)(v10 - 3);
              v8[6] = *(v10 - 1);
              *((_QWORD *)v8 + 2) = v52;
            }
          }
          *(v10 - 7) = v25;
          *(v10 - 4) = v173;
          *((_QWORD *)v10 - 3) = v170;
          *(v10 - 1) = v167;
          *(_QWORD *)(v10 - 3) = v164;
          if (v34 < v35)
            goto LABEL_45;
          v53 = sub_223A19FBC(v8, v50, a3);
          result = sub_223A19FBC(v10, a2, a3);
          if (!(_DWORD)result)
          {
            if (!v53)
            {
LABEL_45:
              result = sub_223A1891C(v8, v50, a3, a4, a5 & 1);
              a5 = 0;
            }
            continue;
          }
          a2 = v50;
          if (v53)
            return result;
          goto LABEL_2;
        }
        if (v10 != a2)
        {
          v94 = (unint64_t)(v12 - 2) >> 1;
          v95 = v94;
          while (1)
          {
            v96 = v95;
            if (v94 >= v95)
            {
              v97 = (2 * v95) | 1;
              v98 = &v10[7 * v97];
              v99 = *a3;
              if (2 * v96 + 2 >= v12)
              {
                v101 = *v99;
                v102 = 0xAAAAAAAAAAAAAAABLL * ((v99[1] - *v99) >> 5);
              }
              else
              {
                v100 = *v98;
                v101 = *v99;
                v102 = 0xAAAAAAAAAAAAAAABLL * ((v99[1] - *v99) >> 5);
                if (v102 <= v100)
                  goto LABEL_159;
                v103 = v98[7];
                if (v102 <= v103)
                  goto LABEL_159;
                if (*(float *)(v101 + 96 * v100 + 36) < *(float *)(v101 + 96 * v103 + 36))
                {
                  v98 += 7;
                  v97 = 2 * v96 + 2;
                }
              }
              v104 = *v98;
              if (v102 <= v104)
                goto LABEL_159;
              v105 = &v10[7 * v96];
              v106 = *v105;
              if (v102 <= v106)
                goto LABEL_159;
              if (*(float *)(v101 + 96 * v104 + 36) >= *(float *)(v101 + 96 * v106 + 36))
              {
                v107 = &v10[7 * v96];
                v204 = v107[3];
                v196 = *(_QWORD *)(v107 + 1);
                v188 = v107[6];
                v180 = *((_QWORD *)v107 + 2);
                LODWORD(v108) = *v98;
                do
                {
                  v109 = v105;
                  v105 = v98;
                  *v109 = v108;
                  v110 = v98 + 1;
                  v111 = *(_QWORD *)(v98 + 1);
                  v109[3] = v105[3];
                  *(_QWORD *)(v109 + 1) = v111;
                  v112 = *((_QWORD *)v105 + 2);
                  v109[6] = v105[6];
                  *((_QWORD *)v109 + 2) = v112;
                  if (v94 < v97)
                    break;
                  v113 = 2 * v97;
                  v97 = (2 * v97) | 1;
                  v98 = &v10[7 * v97];
                  v114 = v113 + 2;
                  v115 = *a3;
                  if (v114 >= v12)
                  {
                    v117 = *v115;
                    v118 = 0xAAAAAAAAAAAAAAABLL * ((v115[1] - *v115) >> 5);
                  }
                  else
                  {
                    v116 = *v98;
                    v117 = *v115;
                    v118 = 0xAAAAAAAAAAAAAAABLL * ((v115[1] - *v115) >> 5);
                    if (v118 <= v116)
                      goto LABEL_159;
                    v119 = v98[7];
                    if (v118 <= v119)
                      goto LABEL_159;
                    if (*(float *)(v117 + 96 * v116 + 36) < *(float *)(v117
                                                                                      + 96 * v119
                                                                                      + 36))
                    {
                      v98 += 7;
                      v97 = v114;
                    }
                  }
                  v108 = *v98;
                  if (v118 <= v108 || v118 <= v106)
                    goto LABEL_159;
                }
                while (*(float *)(v117 + 96 * v108 + 36) >= *(float *)(v117
                                                                                      + 96 * v106
                                                                                      + 36));
                *v105 = v106;
                v110[2] = v204;
                *(_QWORD *)v110 = v196;
                *((_QWORD *)v105 + 2) = v180;
                v105[6] = v188;
              }
            }
            v95 = v96 - 1;
            if (!v96)
            {
              v120 = v11 / 0x1CuLL;
              while (1)
              {
                v122 = 0;
                v123 = *v10;
                v171 = *(_QWORD *)(v10 + 1);
                v174 = v10[3];
                v165 = *((_QWORD *)v10 + 2);
                v168 = v10[6];
                v124 = v10;
                do
                {
                  v128 = v124;
                  v124 += 7 * v122 + 7;
                  v129 = 2 * v122;
                  v122 = (2 * v122) | 1;
                  if (v129 + 2 < v120)
                  {
                    v130 = *v124;
                    v131 = **a3;
                    v132 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v131) >> 5);
                    if (v132 <= v130)
                      goto LABEL_159;
                    v133 = v124[7];
                    if (v132 <= v133)
                      goto LABEL_159;
                    if (*(float *)(v131 + 96 * v130 + 36) < *(float *)(v131
                                                                                      + 96 * v133
                                                                                      + 36))
                    {
                      v124 += 7;
                      v122 = v129 + 2;
                    }
                  }
                  *v128 = *v124;
                  v126 = (uint64_t *)(v124 + 1);
                  v125 = *(_QWORD *)(v124 + 1);
                  v128[3] = v124[3];
                  *(_QWORD *)(v128 + 1) = v125;
                  v127 = (uint64_t *)(v124 + 4);
                  result = *((_QWORD *)v124 + 2);
                  v128[6] = v124[6];
                  *((_QWORD *)v128 + 2) = result;
                }
                while (v122 <= (uint64_t)((unint64_t)(v120 - 2) >> 1));
                if (v124 == a2 - 7)
                {
                  *v124 = v123;
                  v124[3] = v174;
                  *v126 = v171;
                  v124[6] = v168;
                  *v127 = v165;
                }
                else
                {
                  *v124 = *(a2 - 7);
                  v134 = *((_QWORD *)a2 - 3);
                  v124[3] = *(a2 - 4);
                  *v126 = v134;
                  v135 = *(_QWORD *)(a2 - 3);
                  v124[6] = *(a2 - 1);
                  *v127 = v135;
                  *(a2 - 7) = v123;
                  *(a2 - 4) = v174;
                  *((_QWORD *)a2 - 3) = v171;
                  result = v168;
                  *(a2 - 1) = v168;
                  *(_QWORD *)(a2 - 3) = v165;
                  v136 = (char *)v124 - (char *)v10 + 28;
                  if (v136 >= 29)
                  {
                    v137 = (v136 / 0x1CuLL - 2) >> 1;
                    v138 = &v10[7 * v137];
                    v139 = *v138;
                    v140 = **a3;
                    v141 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v140) >> 5);
                    if (v141 <= v139)
                      goto LABEL_159;
                    v142 = *v124;
                    if (v141 <= v142)
                      goto LABEL_159;
                    result = v140 + 96 * v142;
                    if (*(float *)(v140 + 96 * v139 + 36) < *(float *)(result + 36))
                    {
                      v205 = v124[3];
                      v197 = *v126;
                      v189 = v124[6];
                      v181 = *v127;
                      do
                      {
                        result = (uint64_t)v124;
                        v124 = v138;
                        *(_DWORD *)result = v139;
                        v143 = v138 + 1;
                        v144 = *(_QWORD *)(v138 + 1);
                        *(_DWORD *)(result + 12) = v138[3];
                        *(_QWORD *)(result + 4) = v144;
                        v145 = v138 + 4;
                        v146 = *((_QWORD *)v138 + 2);
                        *(_DWORD *)(result + 24) = v145[2];
                        *(_QWORD *)(result + 16) = v146;
                        if (!v137)
                          break;
                        v137 = (v137 - 1) >> 1;
                        v138 = &v10[7 * v137];
                        v139 = *v138;
                        v147 = **a3;
                        v148 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v147) >> 5);
                        if (v148 <= v139 || v148 <= v142)
                          goto LABEL_159;
                        result = v147 + 96 * v142;
                      }
                      while (*(float *)(v147 + 96 * v139 + 36) < *(float *)(result + 36));
                      *v124 = v142;
                      v143[2] = v205;
                      *(_QWORD *)v143 = v197;
                      *(_QWORD *)v145 = v181;
                      v145[2] = v189;
                    }
                  }
                }
                a2 -= 7;
                if (v120-- <= 2)
                  return result;
              }
            }
          }
        }
        return result;
    }
  }
}

uint64_t *sub_223A1991C(uint64_t *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, unsigned int *a5, uint64_t **a6)
{
  uint64_t *result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;

  sub_223A1A328(a1, a2, a3, a4, a6);
  result = *a6;
  v13 = *a5;
  v14 = **a6;
  v15 = 0xAAAAAAAAAAAAAAABLL * (((*a6)[1] - v14) >> 5);
  if (v15 <= v13)
    goto LABEL_15;
  v16 = *a4;
  if (v15 <= v16)
    goto LABEL_15;
  if (*(float *)(v14 + 96 * v13 + 36) >= *(float *)(v14 + 96 * v16 + 36))
    return result;
  v17 = (uint64_t *)(a4 + 1);
  v47 = *(_QWORD *)(a4 + 1);
  v51 = a4[3];
  v18 = a4 + 4;
  v39 = *((_QWORD *)a4 + 2);
  v43 = a4[6];
  *a4 = v13;
  v19 = *(_QWORD *)(a5 + 1);
  a4[3] = a5[3];
  *(_QWORD *)(a4 + 1) = v19;
  LODWORD(v19) = a5[6];
  *((_QWORD *)a4 + 2) = *((_QWORD *)a5 + 2);
  a4[6] = v19;
  *a5 = v16;
  *(_QWORD *)(a5 + 1) = v47;
  a5[3] = v51;
  *((_QWORD *)a5 + 2) = v39;
  a5[6] = v43;
  result = *a6;
  v20 = *a4;
  v21 = **a6;
  v22 = 0xAAAAAAAAAAAAAAABLL * (((*a6)[1] - v21) >> 5);
  if (v22 <= v20)
    goto LABEL_15;
  v23 = *a3;
  if (v22 <= v23)
    goto LABEL_15;
  if (*(float *)(v21 + 96 * v20 + 36) >= *(float *)(v21 + 96 * v23 + 36))
    return result;
  v24 = (uint64_t *)(a3 + 1);
  v48 = *(_QWORD *)(a3 + 1);
  v52 = a3[3];
  v25 = a3 + 4;
  v40 = *((_QWORD *)a3 + 2);
  v44 = a3[6];
  *a3 = v20;
  v26 = *v17;
  a3[3] = a4[3];
  *(_QWORD *)(a3 + 1) = v26;
  LODWORD(v26) = a4[6];
  *((_QWORD *)a3 + 2) = *v18;
  a3[6] = v26;
  *a4 = v23;
  *v17 = v48;
  a4[3] = v52;
  *v18 = v40;
  a4[6] = v44;
  result = *a6;
  v27 = *a3;
  v28 = **a6;
  v29 = 0xAAAAAAAAAAAAAAABLL * (((*a6)[1] - v28) >> 5);
  if (v29 <= v27)
    goto LABEL_15;
  v30 = *a2;
  if (v29 <= v30)
    goto LABEL_15;
  if (*(float *)(v28 + 96 * v27 + 36) >= *(float *)(v28 + 96 * v30 + 36))
    return result;
  v31 = (uint64_t *)(a2 + 1);
  v49 = *(_QWORD *)(a2 + 1);
  v53 = a2[3];
  v32 = (uint64_t *)(a2 + 4);
  v41 = *((_QWORD *)a2 + 2);
  v45 = a2[6];
  *a2 = v27;
  v33 = *v24;
  a2[3] = a3[3];
  *(_QWORD *)(a2 + 1) = v33;
  LODWORD(v33) = a3[6];
  *((_QWORD *)a2 + 2) = *v25;
  a2[6] = v33;
  *a3 = v30;
  *v24 = v49;
  a3[3] = v53;
  *v25 = v41;
  a3[6] = v45;
  result = *a6;
  v34 = *a2;
  v35 = **a6;
  v36 = 0xAAAAAAAAAAAAAAABLL * (((*a6)[1] - v35) >> 5);
  if (v36 <= v34 || (v37 = *(unsigned int *)a1, v36 <= v37))
LABEL_15:
    sub_2236C5448();
  if (*(float *)(v35 + 96 * v34 + 36) < *(float *)(v35 + 96 * v37 + 36))
  {
    v50 = *(uint64_t *)((char *)a1 + 4);
    v54 = *((_DWORD *)a1 + 3);
    v42 = a1[2];
    v46 = *((_DWORD *)a1 + 6);
    *(_DWORD *)a1 = v34;
    v38 = *v31;
    *((_DWORD *)a1 + 3) = a2[3];
    *(uint64_t *)((char *)a1 + 4) = v38;
    LODWORD(v38) = a2[6];
    a1[2] = *v32;
    *((_DWORD *)a1 + 6) = v38;
    *a2 = v37;
    *v31 = v50;
    a2[3] = v54;
    *v32 = v42;
    a2[6] = v46;
  }
  return result;
}

uint64_t *sub_223A19C68(uint64_t *result, unsigned int *a2, unsigned int *a3, uint64_t **a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  float v8;
  unint64_t v9;
  float v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;

  v4 = *a2;
  v5 = **a4;
  v6 = 0xAAAAAAAAAAAAAAABLL * (((*a4)[1] - v5) >> 5);
  if (v6 <= v4)
    goto LABEL_19;
  v7 = *(unsigned int *)result;
  if (v6 <= v7)
    goto LABEL_19;
  v8 = *(float *)(v5 + 96 * v4 + 36);
  v9 = *a3;
  if (v8 >= *(float *)(v5 + 96 * v7 + 36))
  {
    if (v6 > v9)
    {
      if (*(float *)(v5 + 96 * v9 + 36) >= v8)
        return result;
      v14 = (uint64_t *)(a2 + 1);
      v40 = *(_QWORD *)(a2 + 1);
      v44 = a2[3];
      v15 = (uint64_t *)(a2 + 4);
      v32 = *((_QWORD *)a2 + 2);
      v36 = a2[6];
      *a2 = v9;
      v16 = *(_QWORD *)(a3 + 1);
      a2[3] = a3[3];
      *(_QWORD *)(a2 + 1) = v16;
      LODWORD(v16) = a3[6];
      *((_QWORD *)a2 + 2) = *((_QWORD *)a3 + 2);
      a2[6] = v16;
      *a3 = v4;
      *(_QWORD *)(a3 + 1) = v40;
      a3[3] = v44;
      *((_QWORD *)a3 + 2) = v32;
      a3[6] = v36;
      v17 = *a2;
      v18 = **a4;
      v19 = 0xAAAAAAAAAAAAAAABLL * (((*a4)[1] - v18) >> 5);
      if (v19 > v17)
      {
        v20 = *(unsigned int *)result;
        if (v19 > v20)
        {
          if (*(float *)(v18 + 96 * v17 + 36) < *(float *)(v18 + 96 * v20 + 36))
          {
            v41 = *(uint64_t *)((char *)result + 4);
            v45 = *((_DWORD *)result + 3);
            v33 = result[2];
            v37 = *((_DWORD *)result + 6);
            *(_DWORD *)result = v17;
            v21 = *v14;
            *((_DWORD *)result + 3) = a2[3];
            *(uint64_t *)((char *)result + 4) = v21;
            LODWORD(v21) = a2[6];
            result[2] = *v15;
            *((_DWORD *)result + 6) = v21;
            *a2 = v20;
            *v14 = v41;
            a2[3] = v45;
            *v15 = v33;
            a2[6] = v37;
          }
          return result;
        }
      }
    }
LABEL_19:
    sub_2236C5448();
  }
  if (v6 <= v9)
    goto LABEL_19;
  v10 = *(float *)(v5 + 96 * v9 + 36);
  v11 = (uint64_t *)((char *)result + 4);
  v12 = result + 2;
  if (v10 < v8)
  {
    v39 = *v11;
    v43 = *((_DWORD *)result + 3);
    v31 = *v12;
    v35 = *((_DWORD *)result + 6);
    *(_DWORD *)result = v9;
    v13 = *(_QWORD *)(a3 + 1);
    *((_DWORD *)result + 3) = a3[3];
    *v11 = v13;
    LODWORD(v13) = a3[6];
    *v12 = *((_QWORD *)a3 + 2);
    *((_DWORD *)result + 6) = v13;
LABEL_18:
    *a3 = v7;
    *(_QWORD *)(a3 + 1) = v39;
    a3[3] = v43;
    *((_QWORD *)a3 + 2) = v31;
    a3[6] = v35;
    return result;
  }
  v42 = *v11;
  v46 = *((_DWORD *)result + 3);
  v34 = *v12;
  v38 = *((_DWORD *)result + 6);
  *(_DWORD *)result = v4;
  v22 = (uint64_t *)(a2 + 1);
  v23 = *(_QWORD *)(a2 + 1);
  *((_DWORD *)result + 3) = a2[3];
  *v11 = v23;
  v24 = (uint64_t *)(a2 + 4);
  v25 = a2[6];
  *v12 = *((_QWORD *)a2 + 2);
  *((_DWORD *)result + 6) = v25;
  *a2 = v7;
  *(_QWORD *)(a2 + 1) = v42;
  a2[3] = v46;
  *((_QWORD *)a2 + 2) = v34;
  a2[6] = v38;
  result = *a4;
  v26 = *a3;
  v27 = **a4;
  v28 = 0xAAAAAAAAAAAAAAABLL * (((*a4)[1] - v27) >> 5);
  if (v28 <= v26 || v28 <= v7)
    goto LABEL_19;
  if (*(float *)(v27 + 96 * v26 + 36) < *(float *)(v27 + 96 * v7 + 36))
  {
    v39 = *v22;
    v43 = a2[3];
    v31 = *v24;
    v35 = a2[6];
    *a2 = v26;
    v29 = *(_QWORD *)(a3 + 1);
    a2[3] = a3[3];
    *v22 = v29;
    v30 = a3[6];
    *v24 = *((_QWORD *)a3 + 2);
    a2[6] = v30;
    goto LABEL_18;
  }
  return result;
}

BOOL sub_223A19FBC(unsigned int *a1, unsigned int *a2, uint64_t **a3)
{
  uint64_t v6;
  _BOOL8 result;
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;
  int v11;
  _DWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;

  v6 = 0x6DB6DB6DB6DB6DB7 * (a2 - a1);
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v22 = *(a2 - 7);
      v23 = **a3;
      v24 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v23) >> 5);
      if (v24 <= v22)
        goto LABEL_25;
      v25 = *a1;
      if (v24 <= v25)
        goto LABEL_25;
      if (*(float *)(v23 + 96 * v22 + 36) >= *(float *)(v23 + 96 * v25 + 36))
        return 1;
      v32 = *(_QWORD *)(a1 + 1);
      v34 = a1[3];
      v28 = *((_QWORD *)a1 + 2);
      v30 = a1[6];
      *a1 = v22;
      v26 = *((_QWORD *)a2 - 3);
      a1[3] = *(a2 - 4);
      *(_QWORD *)(a1 + 1) = v26;
      LODWORD(v26) = *(a2 - 1);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 - 3);
      a1[6] = v26;
      *(a2 - 7) = v25;
      *((_QWORD *)a2 - 3) = v32;
      *(a2 - 4) = v34;
      *(_QWORD *)(a2 - 3) = v28;
      result = 1;
      *(a2 - 1) = v30;
      return result;
    case 3:
      sub_223A19C68((uint64_t *)a1, a1 + 7, a2 - 7, a3);
      return 1;
    case 4:
      sub_223A1A328((uint64_t *)a1, a1 + 7, a1 + 14, a2 - 7, a3);
      return 1;
    case 5:
      sub_223A1991C((uint64_t *)a1, a1 + 7, a1 + 14, a1 + 21, a2 - 7, a3);
      return 1;
    default:
      v8 = a1 + 14;
      sub_223A19C68((uint64_t *)a1, a1 + 7, a1 + 14, a3);
      v9 = a1 + 21;
      if (a1 + 21 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v13 = *v9;
    v14 = **a3;
    v15 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v14) >> 5);
    if (v15 <= v13 || (v16 = *v8, v15 <= v16))
LABEL_25:
      sub_2236C5448();
    if (*(float *)(v14 + 96 * v13 + 36) < *(float *)(v14 + 96 * v16 + 36))
    {
      v33 = v9[3];
      v31 = *(_QWORD *)(v9 + 1);
      v27 = *((_QWORD *)v9 + 2);
      v29 = v9[6];
      LODWORD(v17) = *v8;
      v18 = v10;
      do
      {
        v19 = (char *)a1 + v18;
        *((_DWORD *)v19 + 21) = v17;
        *((_QWORD *)v19 + 11) = *(_QWORD *)((char *)a1 + v18 + 60);
        *((_DWORD *)v19 + 24) = *(unsigned int *)((char *)a1 + v18 + 68);
        *(_QWORD *)(v19 + 100) = *(_QWORD *)((char *)a1 + v18 + 72);
        *((_DWORD *)v19 + 27) = *(unsigned int *)((char *)a1 + v18 + 80);
        if (v18 == -56)
        {
          v12 = a1;
          goto LABEL_5;
        }
        v20 = **a3;
        v21 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v20) >> 5);
        if (v21 <= v13)
          goto LABEL_25;
        v17 = *((unsigned int *)v19 + 7);
        if (v21 <= v17)
          goto LABEL_25;
        v18 -= 28;
      }
      while (*(float *)(v20 + 96 * v13 + 36) < *(float *)(v20 + 96 * v17 + 36));
      v12 = (unsigned int *)((char *)a1 + v18 + 84);
LABEL_5:
      *v12 = v13;
      *(_QWORD *)(v19 + 60) = v31;
      *((_DWORD *)v19 + 17) = v33;
      *((_QWORD *)v19 + 9) = v27;
      *((_DWORD *)v19 + 20) = v29;
      if (++v11 == 8)
        return v9 + 7 == a2;
    }
    v8 = v9;
    v10 += 28;
    v9 += 7;
    if (v9 == a2)
      return 1;
  }
}

uint64_t *sub_223A1A328(uint64_t *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, uint64_t **a5)
{
  uint64_t *result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;

  sub_223A19C68(a1, a2, a3, a5);
  result = *a5;
  v11 = *a4;
  v12 = **a5;
  v13 = 0xAAAAAAAAAAAAAAABLL * (((*a5)[1] - v12) >> 5);
  if (v13 <= v11)
    goto LABEL_12;
  v14 = *a3;
  if (v13 <= v14)
    goto LABEL_12;
  if (*(float *)(v12 + 96 * v11 + 36) >= *(float *)(v12 + 96 * v14 + 36))
    return result;
  v15 = (uint64_t *)(a3 + 1);
  v36 = *(_QWORD *)(a3 + 1);
  v39 = a3[3];
  v16 = a3 + 4;
  v30 = *((_QWORD *)a3 + 2);
  v33 = a3[6];
  *a3 = v11;
  v17 = *(_QWORD *)(a4 + 1);
  a3[3] = a4[3];
  *(_QWORD *)(a3 + 1) = v17;
  LODWORD(v17) = a4[6];
  *((_QWORD *)a3 + 2) = *((_QWORD *)a4 + 2);
  a3[6] = v17;
  *a4 = v14;
  *(_QWORD *)(a4 + 1) = v36;
  a4[3] = v39;
  *((_QWORD *)a4 + 2) = v30;
  a4[6] = v33;
  result = *a5;
  v18 = *a3;
  v19 = **a5;
  v20 = 0xAAAAAAAAAAAAAAABLL * (((*a5)[1] - v19) >> 5);
  if (v20 <= v18)
    goto LABEL_12;
  v21 = *a2;
  if (v20 <= v21)
    goto LABEL_12;
  if (*(float *)(v19 + 96 * v18 + 36) >= *(float *)(v19 + 96 * v21 + 36))
    return result;
  v22 = (uint64_t *)(a2 + 1);
  v37 = *(_QWORD *)(a2 + 1);
  v40 = a2[3];
  v23 = (uint64_t *)(a2 + 4);
  v31 = *((_QWORD *)a2 + 2);
  v34 = a2[6];
  *a2 = v18;
  v24 = *v15;
  a2[3] = a3[3];
  *(_QWORD *)(a2 + 1) = v24;
  LODWORD(v24) = a3[6];
  *((_QWORD *)a2 + 2) = *v16;
  a2[6] = v24;
  *a3 = v21;
  *v15 = v37;
  a3[3] = v40;
  *v16 = v31;
  a3[6] = v34;
  result = *a5;
  v25 = *a2;
  v26 = **a5;
  v27 = 0xAAAAAAAAAAAAAAABLL * (((*a5)[1] - v26) >> 5);
  if (v27 <= v25 || (v28 = *(unsigned int *)a1, v27 <= v28))
LABEL_12:
    sub_2236C5448();
  if (*(float *)(v26 + 96 * v25 + 36) < *(float *)(v26 + 96 * v28 + 36))
  {
    v38 = *(uint64_t *)((char *)a1 + 4);
    v41 = *((_DWORD *)a1 + 3);
    v32 = a1[2];
    v35 = *((_DWORD *)a1 + 6);
    *(_DWORD *)a1 = v25;
    v29 = *v22;
    *((_DWORD *)a1 + 3) = a2[3];
    *(uint64_t *)((char *)a1 + 4) = v29;
    LODWORD(v29) = a2[6];
    a1[2] = *v23;
    *((_DWORD *)a1 + 6) = v29;
    *a2 = v28;
    *v22 = v38;
    a2[3] = v41;
    *v23 = v32;
    a2[6] = v35;
  }
  return result;
}

_QWORD *sub_223A1A5B0(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v3;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  void **v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t prime;
  unint64_t v22;
  uint8x8_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = (19349669 * v7) ^ (73856093 * *a2) ^ (83492791 * v8);
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v3 = (19349669 * v7) ^ (73856093 * v6) ^ (83492791 * v8);
      if (v9 >= v10)
        v3 = v9 % v10;
    }
    else
    {
      v3 = v9 & (v10 - 1);
    }
    v12 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v12)
    {
      v13 = *v12;
      if (*v12)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            v15 = v13[1];
            if (v15 == v9)
            {
              if (*((_DWORD *)v13 + 4) == v6 && *((_DWORD *)v13 + 5) == v7 && *((_DWORD *)v13 + 6) == v8)
                return v13;
            }
            else if ((v15 & (v10 - 1)) != v3)
            {
              goto LABEL_27;
            }
            v13 = (_QWORD *)*v13;
            if (!v13)
              goto LABEL_27;
          }
        }
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (*((_DWORD *)v13 + 4) == v6 && *((_DWORD *)v13 + 5) == v7 && *((_DWORD *)v13 + 6) == v8)
              return v13;
          }
          else
          {
            if (v14 >= v10)
              v14 %= v10;
            if (v14 != v3)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_27:
  v13 = operator new(0x20uLL);
  *v13 = 0;
  v13[1] = v9;
  v13[2] = *(_QWORD *)a3;
  *((_DWORD *)v13 + 6) = *(_DWORD *)(a3 + 8);
  *((_DWORD *)v13 + 7) = 0;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (v10 && (float)(v17 * (float)v10) >= v16)
    goto LABEL_55;
  v18 = 1;
  if (v10 >= 3)
    v18 = (v10 & (v10 - 1)) != 0;
  v19 = v18 | (2 * v10);
  v20 = vcvtps_u32_f32(v16 / v17);
  if (v19 <= v20)
    prime = v20;
  else
    prime = v19;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v10 = *(_QWORD *)(a1 + 8);
  }
  if (prime > v10)
    goto LABEL_39;
  if (prime < v10)
  {
    v22 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v10 < 3 || (v23 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v23.i16[0] = vaddlv_u8(v23), v23.u32[0] > 1uLL))
    {
      v22 = std::__next_prime(v22);
    }
    else
    {
      v24 = 1 << -(char)__clz(v22 - 1);
      if (v22 >= 2)
        v22 = v24;
    }
    if (prime <= v22)
      prime = v22;
    if (prime < v10)
LABEL_39:
      sub_2231B0668(a1, prime);
  }
  v10 = *(_QWORD *)(a1 + 8);
  v25 = v10 - 1;
  if ((v10 & (v10 - 1)) != 0)
  {
    if (v9 >= v10)
    {
      v3 = v9 % v10;
      v26 = *(_QWORD *)a1;
      v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v9 % v10));
      if (!v27)
        goto LABEL_58;
LABEL_56:
      *v13 = *v27;
LABEL_64:
      *v27 = v13;
      goto LABEL_65;
    }
    v3 = v9;
LABEL_55:
    v26 = *(_QWORD *)a1;
    v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (!v27)
      goto LABEL_58;
    goto LABEL_56;
  }
  v3 = v25 & v9;
  v26 = *(_QWORD *)a1;
  v27 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v25 & v9));
  if (v27)
    goto LABEL_56;
LABEL_58:
  *v13 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(v26 + 8 * v3) = a1 + 16;
  if (*v13)
  {
    v28 = *(_QWORD *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v28 >= v10)
        v28 %= v10;
    }
    else
    {
      v28 &= v10 - 1;
    }
    v27 = (_QWORD *)(*(_QWORD *)a1 + 8 * v28);
    goto LABEL_64;
  }
LABEL_65:
  ++*(_QWORD *)(a1 + 24);
  return v13;
}

void sub_223A1A8F8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223A1A90C(uint64_t a1, unint64_t a2, int *a3)
{
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  uint8x8_t v7;
  uint64_t v8;
  uint64_t **v9;
  uint64_t *result;
  unint64_t v11;
  uint64_t v12;

  if (!a2)
    return 0;
  v3 = *a3;
  v4 = a3[1];
  v5 = a3[2];
  v6 = (19349669 * v4) ^ (73856093 * *a3) ^ (83492791 * v5);
  v7 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    v8 = (19349669 * v4) ^ (73856093 * v3) ^ (83492791 * v5);
    if (v6 >= a2)
      v8 = v6 % a2;
  }
  else
  {
    v8 = v6 & (a2 - 1);
  }
  v9 = *(uint64_t ***)(a1 + 8 * v8);
  if (!v9)
    return 0;
  result = *v9;
  if (*v9)
  {
    if (v7.u32[0] < 2uLL)
    {
      while (1)
      {
        v12 = result[1];
        if (v6 == v12)
        {
          if (*((_DWORD *)result + 4) == v3 && *((_DWORD *)result + 5) == v4 && *((_DWORD *)result + 6) == v5)
            return result;
        }
        else if ((v12 & (a2 - 1)) != v8)
        {
          return 0;
        }
        result = (uint64_t *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v11 = result[1];
      if (v6 == v11)
      {
        if (*((_DWORD *)result + 4) == v3 && *((_DWORD *)result + 5) == v4 && *((_DWORD *)result + 6) == v5)
          return result;
      }
      else
      {
        if (v11 >= a2)
          v11 %= a2;
        if (v11 != v8)
          return 0;
      }
      result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t *sub_223A1AA44(uint64_t a1, unsigned int *a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t **v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t prime;
  unint64_t v21;
  uint8x8_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v7 <= v6)
        v3 = v6 % v7;
    }
    else
    {
      v3 = ((_DWORD)v7 - 1) & v6;
    }
    v9 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            v12 = v10[1];
            if (v12 == v6)
            {
              if (*((_DWORD *)v10 + 4) == (_DWORD)v6)
                return v10;
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            v10 = (uint64_t *)*v10;
            if (!v10)
              goto LABEL_23;
          }
        }
        do
        {
          v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == (_DWORD)v6)
              return v10;
          }
          else
          {
            if (v11 >= v7)
              v11 %= v7;
            if (v11 != v3)
              break;
          }
          v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  v14 = operator new(0x18uLL);
  *v14 = 0;
  v14[1] = v6;
  *((_DWORD *)v14 + 4) = *a3;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    v6 = v3;
  }
  else
  {
    v17 = 1;
    if (v7 >= 3)
      v17 = (v7 & (v7 - 1)) != 0;
    v18 = v17 | (2 * v7);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = v19;
    else
      prime = v18;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v7 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v7)
      goto LABEL_36;
    if (prime < v7)
    {
      v21 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (v22 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v22.i16[0] = vaddlv_u8(v22), v22.u32[0] > 1uLL))
      {
        v21 = std::__next_prime(v21);
      }
      else
      {
        v23 = 1 << -(char)__clz(v21 - 1);
        if (v21 >= 2)
          v21 = v23;
      }
      if (prime <= v21)
        prime = v21;
      if (prime < v7)
LABEL_36:
        sub_2231B0668(a1, prime);
    }
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
        v6 %= v7;
    }
    else
    {
      v6 = ((_DWORD)v7 - 1) & v6;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v6);
  if (v25)
  {
    *v14 = *v25;
LABEL_59:
    *v25 = v14;
    goto LABEL_60;
  }
  *v14 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(v24 + 8 * v6) = a1 + 16;
  if (*v14)
  {
    v26 = *(_QWORD *)(*v14 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v26 >= v7)
        v26 %= v7;
    }
    else
    {
      v26 &= v7 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_59;
  }
LABEL_60:
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_223A1AD30(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223A1AD44(uint64_t a1, int *a2, uint64_t a3, _QWORD **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t **v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  int v19;
  float v20;
  float v21;
  uint64_t v22;
  _QWORD *v23;
  _BOOL8 v24;
  unint64_t v25;
  unint64_t v26;
  size_t prime;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9);
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9);
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = v10 & (v11 - 1);
    }
    v13 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == v10)
            {
              if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v14 = (uint64_t *)*v14;
            if (!v14)
              goto LABEL_27;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == v10)
          {
            if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_27:
  v18 = operator new(0x20uLL);
  *v18 = 0;
  v18[1] = v10;
  v19 = *((_DWORD *)*a4 + 2);
  v18[2] = **a4;
  *((_DWORD *)v18 + 6) = v19;
  *((_DWORD *)v18 + 7) = 0;
  v20 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v21 = *(float *)(a1 + 32);
  if (v11 && (float)(v21 * (float)v11) >= v20)
  {
    v22 = *(_QWORD *)a1;
    v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v23)
    {
LABEL_30:
      *v18 = *v23;
LABEL_65:
      *v23 = v18;
      goto LABEL_66;
    }
  }
  else
  {
    v24 = 1;
    if (v11 >= 3)
      v24 = (v11 & (v11 - 1)) != 0;
    v25 = v24 | (2 * v11);
    v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26)
      prime = v26;
    else
      prime = v25;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v11 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v11)
      goto LABEL_41;
    if (prime < v11)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v11 < 3 || (v29 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < v11)
LABEL_41:
        sub_2231B0668(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v31 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v22 = *(_QWORD *)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v23)
          goto LABEL_30;
      }
      else
      {
        v4 = v10;
        v22 = *(_QWORD *)a1;
        v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        if (v23)
          goto LABEL_30;
      }
    }
    else
    {
      v4 = v31 & v10;
      v22 = *(_QWORD *)a1;
      v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v31 & v10));
      if (v23)
        goto LABEL_30;
    }
  }
  *v18 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(v22 + 8 * v4) = a1 + 16;
  if (*v18)
  {
    v32 = *(_QWORD *)(*v18 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v32 >= v11)
        v32 %= v11;
    }
    else
    {
      v32 &= v11 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v32);
    goto LABEL_65;
  }
LABEL_66:
  ++*(_QWORD *)(a1 + 24);
  return v18;
}

void sub_223A1B0BC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A1B0D0(uint64_t a1, int *a2, uint64_t a3, float a4)
{
  uint64_t v4;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t prime;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;

  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = (19349669 * v9) ^ (73856093 * *a2) ^ (83492791 * v10);
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = (19349669 * v9) ^ (73856093 * v8) ^ (83492791 * v10);
      if (v11 >= v12)
        v4 = v11 % v12;
    }
    else
    {
      v4 = v11 & (v12 - 1);
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = *v14;
      if (v15)
      {
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v17 = v15[1];
            if (v17 == v11)
            {
              if (*((_DWORD *)v15 + 4) == v8 && *((_DWORD *)v15 + 5) == v9 && *((_DWORD *)v15 + 6) == v10)
                return;
            }
            else if ((v17 & (v12 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v15 = (uint64_t *)*v15;
            if (!v15)
              goto LABEL_27;
          }
        }
        do
        {
          v16 = v15[1];
          if (v16 == v11)
          {
            if (*((_DWORD *)v15 + 4) == v8 && *((_DWORD *)v15 + 5) == v9 && *((_DWORD *)v15 + 6) == v10)
              return;
          }
          else
          {
            if (v16 >= v12)
              v16 %= v12;
            if (v16 != v4)
              break;
          }
          v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_27:
  v18 = operator new(0x20uLL);
  *v18 = 0;
  v18[1] = v11;
  v18[2] = *(_QWORD *)a3;
  *((_DWORD *)v18 + 6) = *(_DWORD *)(a3 + 8);
  *((float *)v18 + 7) = a4;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (v12 && (float)(v20 * (float)v12) >= v19)
    goto LABEL_55;
  v21 = 1;
  if (v12 >= 3)
    v21 = (v12 & (v12 - 1)) != 0;
  v22 = v21 | (2 * v12);
  v23 = vcvtps_u32_f32(v19 / v20);
  if (v22 <= v23)
    prime = v23;
  else
    prime = v22;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v12 = *(_QWORD *)(a1 + 8);
  }
  if (prime > v12)
    goto LABEL_39;
  if (prime < v12)
  {
    v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v12 < 3 || (v26 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
    {
      v25 = std::__next_prime(v25);
    }
    else
    {
      v27 = 1 << -(char)__clz(v25 - 1);
      if (v25 >= 2)
        v25 = v27;
    }
    if (prime <= v25)
      prime = v25;
    if (prime < v12)
LABEL_39:
      sub_2231B0668(a1, prime);
  }
  v12 = *(_QWORD *)(a1 + 8);
  v28 = v12 - 1;
  if ((v12 & (v12 - 1)) != 0)
  {
    if (v11 >= v12)
    {
      v4 = v11 % v12;
      v29 = *(_QWORD *)a1;
      v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
      if (!v30)
        goto LABEL_58;
LABEL_56:
      *v18 = *v30;
LABEL_64:
      *v30 = v18;
      goto LABEL_65;
    }
    v4 = v11;
LABEL_55:
    v29 = *(_QWORD *)a1;
    v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (!v30)
      goto LABEL_58;
    goto LABEL_56;
  }
  v4 = v28 & v11;
  v29 = *(_QWORD *)a1;
  v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v28 & v11));
  if (v30)
    goto LABEL_56;
LABEL_58:
  *v18 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(v29 + 8 * v4) = a1 + 16;
  if (*v18)
  {
    v31 = *(_QWORD *)(*v18 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v31 >= v12)
        v31 %= v12;
    }
    else
    {
      v31 &= v12 - 1;
    }
    v30 = (_QWORD *)(*(_QWORD *)a1 + 8 * v31);
    goto LABEL_64;
  }
LABEL_65:
  ++*(_QWORD *)(a1 + 24);
}

void sub_223A1B424(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A1B438(uint64_t a1, int *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint8x8_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  size_t prime;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;

  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = (19349669 * v9) ^ (73856093 * *a2) ^ (83492791 * v10);
  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
  {
    v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      v4 = (19349669 * v9) ^ (73856093 * v8) ^ (83492791 * v10);
      if (v11 >= v12)
        v4 = v11 % v12;
    }
    else
    {
      v4 = v11 & (v12 - 1);
    }
    v14 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = *v14;
      if (v15)
      {
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            v17 = v15[1];
            if (v17 == v11)
            {
              if (*((_DWORD *)v15 + 4) == v8 && *((_DWORD *)v15 + 5) == v9 && *((_DWORD *)v15 + 6) == v10)
                return;
            }
            else if ((v17 & (v12 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v15 = (uint64_t *)*v15;
            if (!v15)
              goto LABEL_27;
          }
        }
        do
        {
          v16 = v15[1];
          if (v16 == v11)
          {
            if (*((_DWORD *)v15 + 4) == v8 && *((_DWORD *)v15 + 5) == v9 && *((_DWORD *)v15 + 6) == v10)
              return;
          }
          else
          {
            if (v16 >= v12)
              v16 %= v12;
            if (v16 != v4)
              break;
          }
          v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_27:
  v18 = operator new(0x20uLL);
  *v18 = 0;
  v18[1] = v11;
  v18[2] = *(_QWORD *)a3;
  *((_DWORD *)v18 + 6) = *(_DWORD *)(a3 + 8);
  *((_DWORD *)v18 + 7) = a4;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (v12 && (float)(v20 * (float)v12) >= v19)
    goto LABEL_55;
  v21 = 1;
  if (v12 >= 3)
    v21 = (v12 & (v12 - 1)) != 0;
  v22 = v21 | (2 * v12);
  v23 = vcvtps_u32_f32(v19 / v20);
  if (v22 <= v23)
    prime = v23;
  else
    prime = v22;
  if (prime == 1)
  {
    prime = 2;
  }
  else if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(prime);
    v12 = *(_QWORD *)(a1 + 8);
  }
  if (prime > v12)
    goto LABEL_39;
  if (prime < v12)
  {
    v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v12 < 3 || (v26 = (uint8x8_t)vcnt_s8((int8x8_t)v12), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
    {
      v25 = std::__next_prime(v25);
    }
    else
    {
      v27 = 1 << -(char)__clz(v25 - 1);
      if (v25 >= 2)
        v25 = v27;
    }
    if (prime <= v25)
      prime = v25;
    if (prime < v12)
LABEL_39:
      sub_2231B0668(a1, prime);
  }
  v12 = *(_QWORD *)(a1 + 8);
  v28 = v12 - 1;
  if ((v12 & (v12 - 1)) != 0)
  {
    if (v11 >= v12)
    {
      v4 = v11 % v12;
      v29 = *(_QWORD *)a1;
      v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v11 % v12));
      if (!v30)
        goto LABEL_58;
LABEL_56:
      *v18 = *v30;
LABEL_64:
      *v30 = v18;
      goto LABEL_65;
    }
    v4 = v11;
LABEL_55:
    v29 = *(_QWORD *)a1;
    v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (!v30)
      goto LABEL_58;
    goto LABEL_56;
  }
  v4 = v28 & v11;
  v29 = *(_QWORD *)a1;
  v30 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v28 & v11));
  if (v30)
    goto LABEL_56;
LABEL_58:
  *v18 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v18;
  *(_QWORD *)(v29 + 8 * v4) = a1 + 16;
  if (*v18)
  {
    v31 = *(_QWORD *)(*v18 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v31 >= v12)
        v31 %= v12;
    }
    else
    {
      v31 &= v12 - 1;
    }
    v30 = (_QWORD *)(*(_QWORD *)a1 + 8 * v31);
    goto LABEL_64;
  }
LABEL_65:
  ++*(_QWORD *)(a1 + 24);
}

void sub_223A1B788(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223A1B79C(uint64_t result, unsigned int *a2, uint64_t **a3, uint64_t a4, char a5)
{
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  float v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  float *v31;
  unint64_t v32;
  float v33;
  unsigned int *v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  float *v45;
  unsigned int v46;
  float v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unsigned int *v54;
  unint64_t v55;
  float v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned int v65;
  float v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  BOOL v80;
  uint64_t v81;
  unsigned int *v82;
  _DWORD *v83;
  unsigned int *v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  int64_t v95;
  int64_t v96;
  uint64_t v97;
  unsigned int *v98;
  uint64_t *v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unsigned int *v105;
  unint64_t v106;
  unsigned int *v107;
  unint64_t v108;
  unsigned int *v109;
  unsigned int *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  int64_t v120;
  uint64_t v122;
  unsigned int v123;
  unsigned int *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t *v127;
  unsigned int *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unsigned int *v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unsigned int *v143;
  uint64_t v144;
  unsigned int *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unsigned int *i;
  unsigned int *v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unsigned int *v156;
  uint64_t v157;
  unint64_t v158;
  unsigned int *v159;
  unsigned int *v160;
  unsigned int *v161;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;

  v8 = (unsigned int *)result;
LABEL_2:
  v9 = a2 - 7;
  v159 = a2 - 21;
  v160 = a2 - 14;
  v10 = v8;
  v161 = a2 - 7;
  while (2)
  {
    v8 = v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = 0x6DB6DB6DB6DB6DB7 * (a2 - v10);
    switch(v12)
    {
      case 0:
      case 1:
        return result;
      case 2:
        result = (uint64_t)*a3;
        v72 = *(a2 - 7);
        v73 = **a3;
        v74 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v73) >> 5);
        if (v74 <= v72)
          goto LABEL_159;
        v75 = *v10;
        if (v74 <= v75)
          goto LABEL_159;
        if (*(float *)(v73 + 96 * v72 + 36) < *(float *)(v73 + 96 * v75 + 36))
        {
          v202 = v10[3];
          v194 = *(_QWORD *)(v10 + 1);
          v178 = *((_QWORD *)v10 + 2);
          v186 = v10[6];
          *v10 = *(a2 - 7);
          v76 = *((_QWORD *)a2 - 3);
          v10[3] = *(a2 - 4);
          *(_QWORD *)(v10 + 1) = v76;
          v77 = *(_QWORD *)(a2 - 3);
          v10[6] = *(a2 - 1);
          *((_QWORD *)v10 + 2) = v77;
          *(a2 - 7) = v75;
          *(a2 - 4) = v202;
          *((_QWORD *)a2 - 3) = v194;
          *(a2 - 1) = v186;
          *(_QWORD *)(a2 - 3) = v178;
        }
        return result;
      case 3:
        return (uint64_t)sub_223A19C68((uint64_t *)v10, v10 + 7, v9, a3);
      case 4:
        return (uint64_t)sub_223A1A328((uint64_t *)v10, v10 + 7, v10 + 14, v9, a3);
      case 5:
        return (uint64_t)sub_223A1991C((uint64_t *)v10, v10 + 7, v10 + 14, v10 + 21, v9, a3);
      default:
        if (v11 <= 671)
        {
          v78 = v10 + 7;
          v80 = v10 == a2 || v78 == a2;
          if ((a5 & 1) != 0)
          {
            if (v80)
              return result;
            v81 = 0;
            v82 = v10;
            while (1)
            {
              v84 = v78;
              result = (uint64_t)*a3;
              v85 = v82[7];
              v86 = **a3;
              v87 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v86) >> 5);
              if (v87 <= v85)
                break;
              v88 = *v82;
              if (v87 <= v88)
                break;
              if (*(float *)(v86 + 96 * v85 + 36) < *(float *)(v86 + 96 * v88 + 36))
              {
                v203 = v82[10];
                v195 = *((_QWORD *)v82 + 4);
                v179 = *(_QWORD *)(v82 + 11);
                v187 = v82[13];
                LODWORD(v89) = *v82;
                v90 = v81;
                do
                {
                  v91 = (char *)v10 + v90;
                  *((_DWORD *)v91 + 7) = v89;
                  *((_QWORD *)v91 + 4) = *(_QWORD *)((char *)v10 + v90 + 4);
                  *((_DWORD *)v91 + 10) = *(unsigned int *)((char *)v10 + v90 + 12);
                  *(_QWORD *)(v91 + 44) = *(_QWORD *)((char *)v10 + v90 + 16);
                  *((_DWORD *)v91 + 13) = *(unsigned int *)((char *)v10 + v90 + 24);
                  if (!v90)
                  {
                    v83 = v10;
                    goto LABEL_90;
                  }
                  result = (uint64_t)*a3;
                  v92 = **a3;
                  v93 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v92) >> 5);
                  if (v93 <= v85)
                    goto LABEL_159;
                  v89 = *((unsigned int *)v91 - 7);
                  if (v93 <= v89)
                    goto LABEL_159;
                  v90 -= 28;
                }
                while (*(float *)(v92 + 96 * v85 + 36) < *(float *)(v92 + 96 * v89 + 36));
                v83 = (unsigned int *)((char *)v10 + v90 + 28);
LABEL_90:
                *v83 = v85;
                *((_DWORD *)v91 + 3) = v203;
                *(_QWORD *)(v91 + 4) = v195;
                *((_DWORD *)v91 + 6) = v187;
                *((_QWORD *)v91 + 2) = v179;
              }
              v78 = v84 + 7;
              v81 += 28;
              v82 = v84;
              if (v84 + 7 == a2)
                return result;
            }
          }
          else
          {
            if (v80)
              return result;
            for (i = v10 + 11; ; i += 7)
            {
              v150 = v78;
              result = (uint64_t)*a3;
              v151 = v8[7];
              v152 = **a3;
              v153 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v152) >> 5);
              if (v153 <= v151)
                break;
              v154 = *v8;
              if (v153 <= v154)
                break;
              if (*(float *)(v152 + 96 * v151 + 36) < *(float *)(v152 + 96 * v154 + 36))
              {
                v206 = v8[10];
                v198 = *((_QWORD *)v8 + 4);
                v182 = *(_QWORD *)(v8 + 11);
                v190 = v8[13];
                LODWORD(v155) = *v8;
                v156 = i;
                do
                {
                  *(v156 - 4) = v155;
                  *(v156 - 1) = *(v156 - 8);
                  *(_QWORD *)(v156 - 3) = *((_QWORD *)v156 - 5);
                  *(_QWORD *)v156 = *(_QWORD *)(v156 - 7);
                  v156[2] = *(v156 - 5);
                  result = (uint64_t)*a3;
                  v157 = **a3;
                  v158 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v157) >> 5);
                  if (v158 <= v151)
                    goto LABEL_159;
                  v155 = *(v156 - 18);
                  if (v158 <= v155)
                    goto LABEL_159;
                  v156 -= 7;
                }
                while (*(float *)(v157 + 96 * v151 + 36) < *(float *)(v157
                                                                                     + 96 * v155
                                                                                     + 36));
                *(v156 - 4) = v151;
                *(v156 - 1) = v206;
                *(_QWORD *)(v156 - 3) = v198;
                v156[2] = v190;
                *(_QWORD *)v156 = v182;
              }
              v78 = v150 + 7;
              v8 = v150;
              if (v150 + 7 == a2)
                return result;
            }
          }
LABEL_159:
          sub_2236C5448();
        }
        if (a4)
        {
          v13 = (unint64_t)v12 >> 1;
          v14 = &v10[7 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0xE01)
          {
            sub_223A19C68((uint64_t *)&v8[7 * v13], v8, v9, a3);
            --a4;
            result = (uint64_t)*a3;
            if ((a5 & 1) != 0)
            {
LABEL_18:
              v25 = *v8;
              v23 = *(_QWORD *)result;
              v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 8) - *(_QWORD *)result) >> 5);
              goto LABEL_19;
            }
          }
          else
          {
            sub_223A19C68((uint64_t *)v8, &v8[7 * v13], v9, a3);
            v15 = a2;
            v16 = a4;
            v17 = &v8[7 * v13];
            sub_223A19C68((uint64_t *)(v8 + 7), v17 - 7, v160, a3);
            sub_223A19C68((uint64_t *)v8 + 7, &v8[7 * v13 + 7], v159, a3);
            sub_223A19C68((uint64_t *)(v17 - 7), v17, &v8[7 * v13 + 7], a3);
            v18 = *v8;
            v199 = v8[3];
            v191 = *(_QWORD *)(v8 + 1);
            v175 = *((_QWORD *)v8 + 2);
            v183 = v8[6];
            *v8 = *v14;
            v19 = *(_QWORD *)(v17 + 1);
            v8[3] = v17[3];
            *(_QWORD *)(v8 + 1) = v19;
            v20 = *((_QWORD *)v17 + 2);
            v8[6] = v17[6];
            *((_QWORD *)v8 + 2) = v20;
            *v14 = v18;
            v17[3] = v199;
            *(_QWORD *)(v17 + 1) = v191;
            v17[6] = v183;
            *((_QWORD *)v17 + 2) = v175;
            v21 = v16;
            a2 = v15;
            v9 = v161;
            a4 = v21 - 1;
            result = (uint64_t)*a3;
            if ((a5 & 1) != 0)
              goto LABEL_18;
          }
          v22 = *(v8 - 7);
          v23 = *(_QWORD *)result;
          v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 8) - *(_QWORD *)result) >> 5);
          if (v24 <= v22)
            goto LABEL_159;
          v25 = *v8;
          if (v24 <= v25)
            goto LABEL_159;
          v26 = *(float *)(v23 + 96 * v25 + 36);
          if (*(float *)(v23 + 96 * v22 + 36) >= v26)
          {
            v172 = v8[3];
            v169 = *(_QWORD *)(v8 + 1);
            v163 = *((_QWORD *)v8 + 2);
            v166 = v8[6];
            v27 = *v9;
            if (v24 <= v27)
              goto LABEL_159;
            if (v26 < *(float *)(v23 + 96 * v27 + 36))
            {
              v10 = v8;
              while (1)
              {
                v29 = v10[7];
                v10 += 7;
                v28 = v29;
                if (v24 <= v29)
                  goto LABEL_159;
                if (v26 < *(float *)(v23 + 96 * v28 + 36))
                  goto LABEL_52;
              }
            }
            v54 = v8 + 7;
            do
            {
              v10 = v54;
              if (v54 >= a2)
                break;
              v55 = *v54;
              if (v24 <= v55)
                goto LABEL_159;
              v56 = *(float *)(v23 + 96 * v55 + 36);
              v54 = v10 + 7;
            }
            while (v26 >= v56);
LABEL_52:
            v57 = a2;
            if (v10 < a2)
            {
              v57 = a2;
              do
              {
                v59 = *(v57 - 7);
                v57 -= 7;
                v58 = v59;
                if (v24 <= v59)
                  goto LABEL_159;
              }
              while (v26 < *(float *)(v23 + 96 * v58 + 36));
            }
            if (v10 < v57)
            {
              v60 = *v10;
              do
              {
                v201 = v10[3];
                v193 = *(_QWORD *)(v10 + 1);
                v177 = *((_QWORD *)v10 + 2);
                v185 = v10[6];
                *v10 = *v57;
                v61 = *(_QWORD *)(v57 + 1);
                v10[3] = v57[3];
                *(_QWORD *)(v10 + 1) = v61;
                v62 = *((_QWORD *)v57 + 2);
                v10[6] = v57[6];
                *((_QWORD *)v10 + 2) = v62;
                *v57 = v60;
                v57[3] = v201;
                *(_QWORD *)(v57 + 1) = v193;
                *((_QWORD *)v57 + 2) = v177;
                v57[6] = v185;
                result = (uint64_t)*a3;
                v63 = **a3;
                v64 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v63) >> 5);
                if (v64 <= v25)
                  goto LABEL_159;
                v65 = v10[7];
                v10 += 7;
                v60 = v65;
                if (v64 <= v65)
                  goto LABEL_159;
                v66 = *(float *)(v63 + 96 * v25 + 36);
                if (v66 < *(float *)(v63 + 96 * v60 + 36))
                  goto LABEL_63;
                do
                {
                  v67 = v10[7];
                  v10 += 7;
                  v60 = v67;
                  if (v64 <= v67)
                    goto LABEL_159;
                }
                while (v66 >= *(float *)(v63 + 96 * v60 + 36));
                do
                {
LABEL_63:
                  v69 = *(v57 - 7);
                  v57 -= 7;
                  v68 = v69;
                  if (v64 <= v69)
                    goto LABEL_159;
                }
                while (v66 < *(float *)(v63 + 96 * v68 + 36));
              }
              while (v10 < v57);
            }
            if (v10 - 7 != v8)
            {
              *v8 = *(v10 - 7);
              v70 = *((_QWORD *)v10 - 3);
              v8[3] = *(v10 - 4);
              *(_QWORD *)(v8 + 1) = v70;
              v71 = *(_QWORD *)(v10 - 3);
              v8[6] = *(v10 - 1);
              *((_QWORD *)v8 + 2) = v71;
            }
            a5 = 0;
            *(v10 - 7) = v25;
            *(v10 - 4) = v172;
            *((_QWORD *)v10 - 3) = v169;
            *(v10 - 1) = v166;
            *(_QWORD *)(v10 - 3) = v163;
            continue;
          }
LABEL_19:
          v173 = v8[3];
          v170 = *(_QWORD *)(v8 + 1);
          v164 = *((_QWORD *)v8 + 2);
          v167 = v8[6];
          if (v24 <= v25)
            goto LABEL_159;
          v30 = 0;
          v31 = (float *)(v23 + 96 * v25 + 36);
          do
          {
            v32 = v8[v30 + 7];
            if (v24 <= v32)
              goto LABEL_159;
            v33 = *v31;
            v30 += 7;
          }
          while (*(float *)(v23 + 96 * v32 + 36) < *v31);
          v34 = &v8[v30];
          v35 = a2;
          if (v30 != 7)
          {
            while (1)
            {
              v37 = *(v35 - 7);
              v35 -= 7;
              v36 = v37;
              if (v24 <= v37)
                goto LABEL_159;
              if (*(float *)(v23 + 96 * v36 + 36) < v33)
                goto LABEL_31;
            }
          }
          v35 = a2;
          do
          {
            if (v34 >= v35)
              break;
            v39 = *(v35 - 7);
            v35 -= 7;
            v38 = v39;
            if (v24 <= v39)
              goto LABEL_159;
          }
          while (*(float *)(v23 + 96 * v38 + 36) >= v33);
LABEL_31:
          if (v34 >= v35)
          {
            v10 = v34;
            v50 = v34 - 7;
            if (v34 - 7 != v8)
              goto LABEL_41;
          }
          else
          {
            v10 = v34;
            v40 = v35;
            do
            {
              v200 = v10[3];
              v192 = *(_QWORD *)(v10 + 1);
              v176 = *((_QWORD *)v10 + 2);
              v184 = v10[6];
              *v10 = *v40;
              v41 = *(_QWORD *)(v40 + 1);
              v10[3] = v40[3];
              *(_QWORD *)(v10 + 1) = v41;
              v42 = *((_QWORD *)v40 + 2);
              v10[6] = v40[6];
              *((_QWORD *)v10 + 2) = v42;
              *v40 = v32;
              v40[3] = v200;
              *(_QWORD *)(v40 + 1) = v192;
              *((_QWORD *)v40 + 2) = v176;
              v40[6] = v184;
              v43 = **a3;
              v44 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v43) >> 5);
              if (v44 <= v25)
                goto LABEL_159;
              v45 = (float *)(v43 + 96 * v25 + 36);
              do
              {
                v46 = v10[7];
                v10 += 7;
                LODWORD(v32) = v46;
                if (v44 <= v46)
                  goto LABEL_159;
                v47 = *v45;
              }
              while (*(float *)(v43 + 96 * v32 + 36) < *v45);
              do
              {
                v49 = *(v40 - 7);
                v40 -= 7;
                v48 = v49;
                if (v44 <= v49)
                  goto LABEL_159;
              }
              while (*(float *)(v43 + 96 * v48 + 36) >= v47);
            }
            while (v10 < v40);
            v50 = v10 - 7;
            if (v10 - 7 != v8)
            {
LABEL_41:
              *v8 = *(v10 - 7);
              v51 = *((_QWORD *)v10 - 3);
              v8[3] = *(v10 - 4);
              *(_QWORD *)(v8 + 1) = v51;
              v52 = *(_QWORD *)(v10 - 3);
              v8[6] = *(v10 - 1);
              *((_QWORD *)v8 + 2) = v52;
            }
          }
          *(v10 - 7) = v25;
          *(v10 - 4) = v173;
          *((_QWORD *)v10 - 3) = v170;
          *(v10 - 1) = v167;
          *(_QWORD *)(v10 - 3) = v164;
          if (v34 < v35)
            goto LABEL_45;
          v53 = sub_223A1C79C(v8, v50, a3);
          result = sub_223A1C79C(v10, a2, a3);
          if (!(_DWORD)result)
          {
            if (!v53)
            {
LABEL_45:
              result = sub_223A1B79C(v8, v50, a3, a4, a5 & 1);
              a5 = 0;
            }
            continue;
          }
          a2 = v50;
          if (v53)
            return result;
          goto LABEL_2;
        }
        if (v10 != a2)
        {
          v94 = (unint64_t)(v12 - 2) >> 1;
          v95 = v94;
          while (1)
          {
            v96 = v95;
            if (v94 >= v95)
            {
              v97 = (2 * v95) | 1;
              v98 = &v10[7 * v97];
              v99 = *a3;
              if (2 * v96 + 2 >= v12)
              {
                v101 = *v99;
                v102 = 0xAAAAAAAAAAAAAAABLL * ((v99[1] - *v99) >> 5);
              }
              else
              {
                v100 = *v98;
                v101 = *v99;
                v102 = 0xAAAAAAAAAAAAAAABLL * ((v99[1] - *v99) >> 5);
                if (v102 <= v100)
                  goto LABEL_159;
                v103 = v98[7];
                if (v102 <= v103)
                  goto LABEL_159;
                if (*(float *)(v101 + 96 * v100 + 36) < *(float *)(v101 + 96 * v103 + 36))
                {
                  v98 += 7;
                  v97 = 2 * v96 + 2;
                }
              }
              v104 = *v98;
              if (v102 <= v104)
                goto LABEL_159;
              v105 = &v10[7 * v96];
              v106 = *v105;
              if (v102 <= v106)
                goto LABEL_159;
              if (*(float *)(v101 + 96 * v104 + 36) >= *(float *)(v101 + 96 * v106 + 36))
              {
                v107 = &v10[7 * v96];
                v204 = v107[3];
                v196 = *(_QWORD *)(v107 + 1);
                v188 = v107[6];
                v180 = *((_QWORD *)v107 + 2);
                LODWORD(v108) = *v98;
                do
                {
                  v109 = v105;
                  v105 = v98;
                  *v109 = v108;
                  v110 = v98 + 1;
                  v111 = *(_QWORD *)(v98 + 1);
                  v109[3] = v105[3];
                  *(_QWORD *)(v109 + 1) = v111;
                  v112 = *((_QWORD *)v105 + 2);
                  v109[6] = v105[6];
                  *((_QWORD *)v109 + 2) = v112;
                  if (v94 < v97)
                    break;
                  v113 = 2 * v97;
                  v97 = (2 * v97) | 1;
                  v98 = &v10[7 * v97];
                  v114 = v113 + 2;
                  v115 = *a3;
                  if (v114 >= v12)
                  {
                    v117 = *v115;
                    v118 = 0xAAAAAAAAAAAAAAABLL * ((v115[1] - *v115) >> 5);
                  }
                  else
                  {
                    v116 = *v98;
                    v117 = *v115;
                    v118 = 0xAAAAAAAAAAAAAAABLL * ((v115[1] - *v115) >> 5);
                    if (v118 <= v116)
                      goto LABEL_159;
                    v119 = v98[7];
                    if (v118 <= v119)
                      goto LABEL_159;
                    if (*(float *)(v117 + 96 * v116 + 36) < *(float *)(v117
                                                                                      + 96 * v119
                                                                                      + 36))
                    {
                      v98 += 7;
                      v97 = v114;
                    }
                  }
                  v108 = *v98;
                  if (v118 <= v108 || v118 <= v106)
                    goto LABEL_159;
                }
                while (*(float *)(v117 + 96 * v108 + 36) >= *(float *)(v117
                                                                                      + 96 * v106
                                                                                      + 36));
                *v105 = v106;
                v110[2] = v204;
                *(_QWORD *)v110 = v196;
                *((_QWORD *)v105 + 2) = v180;
                v105[6] = v188;
              }
            }
            v95 = v96 - 1;
            if (!v96)
            {
              v120 = v11 / 0x1CuLL;
              while (1)
              {
                v122 = 0;
                v123 = *v10;
                v171 = *(_QWORD *)(v10 + 1);
                v174 = v10[3];
                v165 = *((_QWORD *)v10 + 2);
                v168 = v10[6];
                v124 = v10;
                do
                {
                  v128 = v124;
                  v124 += 7 * v122 + 7;
                  v129 = 2 * v122;
                  v122 = (2 * v122) | 1;
                  if (v129 + 2 < v120)
                  {
                    v130 = *v124;
                    v131 = **a3;
                    v132 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v131) >> 5);
                    if (v132 <= v130)
                      goto LABEL_159;
                    v133 = v124[7];
                    if (v132 <= v133)
                      goto LABEL_159;
                    if (*(float *)(v131 + 96 * v130 + 36) < *(float *)(v131
                                                                                      + 96 * v133
                                                                                      + 36))
                    {
                      v124 += 7;
                      v122 = v129 + 2;
                    }
                  }
                  *v128 = *v124;
                  v126 = (uint64_t *)(v124 + 1);
                  v125 = *(_QWORD *)(v124 + 1);
                  v128[3] = v124[3];
                  *(_QWORD *)(v128 + 1) = v125;
                  v127 = (uint64_t *)(v124 + 4);
                  result = *((_QWORD *)v124 + 2);
                  v128[6] = v124[6];
                  *((_QWORD *)v128 + 2) = result;
                }
                while (v122 <= (uint64_t)((unint64_t)(v120 - 2) >> 1));
                if (v124 == a2 - 7)
                {
                  *v124 = v123;
                  v124[3] = v174;
                  *v126 = v171;
                  v124[6] = v168;
                  *v127 = v165;
                }
                else
                {
                  *v124 = *(a2 - 7);
                  v134 = *((_QWORD *)a2 - 3);
                  v124[3] = *(a2 - 4);
                  *v126 = v134;
                  v135 = *(_QWORD *)(a2 - 3);
                  v124[6] = *(a2 - 1);
                  *v127 = v135;
                  *(a2 - 7) = v123;
                  *(a2 - 4) = v174;
                  *((_QWORD *)a2 - 3) = v171;
                  result = v168;
                  *(a2 - 1) = v168;
                  *(_QWORD *)(a2 - 3) = v165;
                  v136 = (char *)v124 - (char *)v10 + 28;
                  if (v136 >= 29)
                  {
                    v137 = (v136 / 0x1CuLL - 2) >> 1;
                    v138 = &v10[7 * v137];
                    v139 = *v138;
                    v140 = **a3;
                    v141 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v140) >> 5);
                    if (v141 <= v139)
                      goto LABEL_159;
                    v142 = *v124;
                    if (v141 <= v142)
                      goto LABEL_159;
                    result = v140 + 96 * v142;
                    if (*(float *)(v140 + 96 * v139 + 36) < *(float *)(result + 36))
                    {
                      v205 = v124[3];
                      v197 = *v126;
                      v189 = v124[6];
                      v181 = *v127;
                      do
                      {
                        result = (uint64_t)v124;
                        v124 = v138;
                        *(_DWORD *)result = v139;
                        v143 = v138 + 1;
                        v144 = *(_QWORD *)(v138 + 1);
                        *(_DWORD *)(result + 12) = v138[3];
                        *(_QWORD *)(result + 4) = v144;
                        v145 = v138 + 4;
                        v146 = *((_QWORD *)v138 + 2);
                        *(_DWORD *)(result + 24) = v145[2];
                        *(_QWORD *)(result + 16) = v146;
                        if (!v137)
                          break;
                        v137 = (v137 - 1) >> 1;
                        v138 = &v10[7 * v137];
                        v139 = *v138;
                        v147 = **a3;
                        v148 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v147) >> 5);
                        if (v148 <= v139 || v148 <= v142)
                          goto LABEL_159;
                        result = v147 + 96 * v142;
                      }
                      while (*(float *)(v147 + 96 * v139 + 36) < *(float *)(result + 36));
                      *v124 = v142;
                      v143[2] = v205;
                      *(_QWORD *)v143 = v197;
                      *(_QWORD *)v145 = v181;
                      v145[2] = v189;
                    }
                  }
                }
                a2 -= 7;
                if (v120-- <= 2)
                  return result;
              }
            }
          }
        }
        return result;
    }
  }
}

BOOL sub_223A1C79C(unsigned int *a1, unsigned int *a2, uint64_t **a3)
{
  uint64_t v6;
  _BOOL8 result;
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;
  int v11;
  _DWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;

  v6 = 0x6DB6DB6DB6DB6DB7 * (a2 - a1);
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v22 = *(a2 - 7);
      v23 = **a3;
      v24 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v23) >> 5);
      if (v24 <= v22)
        goto LABEL_25;
      v25 = *a1;
      if (v24 <= v25)
        goto LABEL_25;
      if (*(float *)(v23 + 96 * v22 + 36) >= *(float *)(v23 + 96 * v25 + 36))
        return 1;
      v32 = *(_QWORD *)(a1 + 1);
      v34 = a1[3];
      v28 = *((_QWORD *)a1 + 2);
      v30 = a1[6];
      *a1 = v22;
      v26 = *((_QWORD *)a2 - 3);
      a1[3] = *(a2 - 4);
      *(_QWORD *)(a1 + 1) = v26;
      LODWORD(v26) = *(a2 - 1);
      *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 - 3);
      a1[6] = v26;
      *(a2 - 7) = v25;
      *((_QWORD *)a2 - 3) = v32;
      *(a2 - 4) = v34;
      *(_QWORD *)(a2 - 3) = v28;
      result = 1;
      *(a2 - 1) = v30;
      return result;
    case 3:
      sub_223A19C68((uint64_t *)a1, a1 + 7, a2 - 7, a3);
      return 1;
    case 4:
      sub_223A1A328((uint64_t *)a1, a1 + 7, a1 + 14, a2 - 7, a3);
      return 1;
    case 5:
      sub_223A1991C((uint64_t *)a1, a1 + 7, a1 + 14, a1 + 21, a2 - 7, a3);
      return 1;
    default:
      v8 = a1 + 14;
      sub_223A19C68((uint64_t *)a1, a1 + 7, a1 + 14, a3);
      v9 = a1 + 21;
      if (a1 + 21 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v13 = *v9;
    v14 = **a3;
    v15 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v14) >> 5);
    if (v15 <= v13 || (v16 = *v8, v15 <= v16))
LABEL_25:
      sub_2236C5448();
    if (*(float *)(v14 + 96 * v13 + 36) < *(float *)(v14 + 96 * v16 + 36))
    {
      v33 = v9[3];
      v31 = *(_QWORD *)(v9 + 1);
      v27 = *((_QWORD *)v9 + 2);
      v29 = v9[6];
      LODWORD(v17) = *v8;
      v18 = v10;
      do
      {
        v19 = (char *)a1 + v18;
        *((_DWORD *)v19 + 21) = v17;
        *((_QWORD *)v19 + 11) = *(_QWORD *)((char *)a1 + v18 + 60);
        *((_DWORD *)v19 + 24) = *(unsigned int *)((char *)a1 + v18 + 68);
        *(_QWORD *)(v19 + 100) = *(_QWORD *)((char *)a1 + v18 + 72);
        *((_DWORD *)v19 + 27) = *(unsigned int *)((char *)a1 + v18 + 80);
        if (v18 == -56)
        {
          v12 = a1;
          goto LABEL_5;
        }
        v20 = **a3;
        v21 = 0xAAAAAAAAAAAAAAABLL * (((*a3)[1] - v20) >> 5);
        if (v21 <= v13)
          goto LABEL_25;
        v17 = *((unsigned int *)v19 + 7);
        if (v21 <= v17)
          goto LABEL_25;
        v18 -= 28;
      }
      while (*(float *)(v20 + 96 * v13 + 36) < *(float *)(v20 + 96 * v17 + 36));
      v12 = (unsigned int *)((char *)a1 + v18 + 84);
LABEL_5:
      *v12 = v13;
      *(_QWORD *)(v19 + 60) = v31;
      *((_DWORD *)v19 + 17) = v33;
      *((_QWORD *)v19 + 9) = v27;
      *((_DWORD *)v19 + 20) = v29;
      if (++v11 == 8)
        return v9 + 7 == a2;
    }
    v8 = v9;
    v10 += 28;
    v9 += 7;
    if (v9 == a2)
      return 1;
  }
}

void sub_223A1CB08(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, _DWORD *a5, int a6, int a7, int a8, float a9, int a10, int *a11, int *a12)
{
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  int v23;
  int v24;
  float32x2_t v25;
  float v26;
  float32x2_t v27;
  float v28;
  float v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  _QWORD *v35;
  unint64_t v36;
  char *v37;
  _DWORD *v38;
  char *v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _BYTE *v45;
  _DWORD *v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _OWORD *v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  int v56;
  _QWORD *v57;
  unint64_t v58;
  char *v59;
  _DWORD *v60;
  char *v61;
  int64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _BYTE *v67;
  _DWORD *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _OWORD *v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  int v78;
  _QWORD *v79;
  unsigned int *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unsigned int *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  int *v89;
  int *v90;
  int v91;
  char *v92;
  char *v93;
  int v94;
  char *v95;
  int v96;
  char *v97;
  char *v98;
  char *v99;
  int v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void *v105;
  char *v106;
  void *v107;
  void *v108;
  int v109;
  uint64_t *v110;
  int v111;
  uint64_t *v114;
  void *v115[2];
  void *v116[2];
  __int128 v117;
  void *v118[2];
  void *__p[2];
  _QWORD v120[3];
  int v121;
  void *v122[3];
  int v123;
  __int16 v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  unint64_t v129;
  float v130;
  uint64_t v131;
  float32x2_t v132;
  float32x2_t v133;
  _BYTE v134[27];
  _BYTE v135[9];

  if (!sub_2239942A0(a1, a11)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 90, (uint64_t)"nodes.count(split_block_1) == 1", 31, (uint64_t)"First split node not found", 26, (void (*)(void **))sub_22457406C)|| !sub_2239942A0(a1, a12)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 91, (uint64_t)"nodes.count(split_block_2) == 1", 31, (uint64_t)"Second split node not found", 27, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v19 = sub_2239942A0(a1, a11);
  if (!v19 || (v20 = v19, v109 = a8, v111 = a7, v110 = a4, (v21 = sub_2239942A0(a1, a12)) == 0))
    sub_223198218("unordered_map::at: key not found");
  v22 = *(_QWORD *)(a2 + 8);
  v123 = -1431655765 * ((v22 - *(_QWORD *)a2) >> 5);
  v124 = 1;
  v125 = v20[4];
  v23 = *((_DWORD *)v20 + 10);
  v127 = v21[4];
  v24 = *((_DWORD *)v21 + 10);
  v126 = v23;
  v128 = v24;
  v131 = 0;
  v25 = *(float32x2_t *)((char *)v20 + 44);
  v132 = v25;
  v133 = *(float32x2_t *)((char *)v21 + 44);
  *(_WORD *)&v134[12] = 0;
  *(_WORD *)&v134[24] = 0;
  v26 = v133.f32[0];
  v27 = vsub_f32(v133, v25);
  v129 = __PAIR64__(LODWORD(a9), COERCE_UNSIGNED_INT(sqrtf(vmla_lane_f32(vmul_f32(v27, v27), (float32x2_t)vdup_lane_s32((int32x2_t)v27, 1), v27, 1).f32[0])));
  if (v133.f32[0] >= v25.f32[0])
    v28 = v25.f32[0];
  else
    v28 = v133.f32[0];
  v130 = *(float *)&v129 / a9;
  *(float *)v134 = v28;
  if (v25.f32[0] >= v133.f32[0])
    v26 = v25.f32[0];
  *(float *)&v134[4] = v26;
  v29 = (float)(atan2f(v27.f32[1], v27.f32[0]) * -57.296) + 90.0;
  if (v29 < 0.0)
    v29 = v29 + 360.0;
  *(float *)&v134[8] = v29;
  v134[26] = 1;
  *(_DWORD *)&v134[16] = *a5;
  *(_DWORD *)&v134[20] = a6;
  if (v22 >= *(_QWORD *)(a2 + 16))
  {
    *(_QWORD *)(a2 + 8) = sub_2239A403C((char **)a2, (uint64_t)&v123);
    if (!a7)
      goto LABEL_67;
  }
  else
  {
    v30 = v123;
    *(_WORD *)(v22 + 4) = v124;
    *(_DWORD *)v22 = v30;
    v31 = v125;
    *(_DWORD *)(v22 + 16) = v126;
    *(_QWORD *)(v22 + 8) = v31;
    v32 = v127;
    *(_DWORD *)(v22 + 28) = v128;
    *(_QWORD *)(v22 + 20) = v32;
    v33 = v129;
    *(float *)(v22 + 40) = v130;
    *(_QWORD *)(v22 + 32) = v33;
    *(_QWORD *)(v22 + 44) = v131;
    *(float32x2_t *)(v22 + 52) = v132;
    *(float32x2_t *)(v22 + 60) = v133;
    v34 = *(_OWORD *)v134;
    *(_OWORD *)(v22 + 79) = *(_OWORD *)&v134[11];
    *(_OWORD *)(v22 + 68) = v34;
    *(_QWORD *)(a2 + 8) = v22 + 96;
    if (!a7)
      goto LABEL_67;
  }
  v114 = &v125;
  v35 = sub_223A18580(a3, (int *)&v125, (uint64_t)&unk_2245BA939, &v114);
  v37 = (char *)v35[5];
  v36 = v35[6];
  if ((unint64_t)v37 >= v36)
  {
    v39 = (char *)v35[4];
    v40 = v37 - v39;
    v41 = (v37 - v39) >> 2;
    v42 = v41 + 1;
    if ((unint64_t)(v41 + 1) >> 62)
      goto LABEL_98;
    v43 = v36 - (_QWORD)v39;
    if (v43 >> 1 > v42)
      v42 = v43 >> 1;
    if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL)
      v44 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v44 = v42;
    if (v44)
    {
      if (v44 >> 62)
        goto LABEL_99;
      v45 = operator new(4 * v44);
      v40 = v37 - v39;
    }
    else
    {
      v45 = 0;
    }
    v46 = &v45[4 * v41];
    v47 = &v45[4 * v44];
    *v46 = v123;
    v38 = v46 + 1;
    if (v37 != v39)
    {
      v48 = v37 - v39 - 4;
      if (v48 < 0x2C)
        goto LABEL_102;
      if ((unint64_t)(v37 - v45 - v40) < 0x20)
        goto LABEL_102;
      v49 = (v48 >> 2) + 1;
      v50 = 4 * (v49 & 0x7FFFFFFFFFFFFFF8);
      v51 = &v37[-v50];
      v46 = (_DWORD *)((char *)v46 - v50);
      v52 = &v45[4 * v41 - 16];
      v53 = v37 - 16;
      v54 = v49 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v55 = *(_OWORD *)v53;
        *(v52 - 1) = *((_OWORD *)v53 - 1);
        *v52 = v55;
        v52 -= 2;
        v53 -= 32;
        v54 -= 8;
      }
      while (v54);
      v37 = v51;
      if (v49 != (v49 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_102:
        do
        {
          v56 = *((_DWORD *)v37 - 1);
          v37 -= 4;
          *--v46 = v56;
        }
        while (v37 != v39);
      }
    }
    v35[4] = v46;
    v35[5] = v38;
    v35[6] = v47;
    if (v39)
      operator delete(v39);
  }
  else
  {
    *(_DWORD *)v37 = v123;
    v38 = v37 + 4;
  }
  v35[5] = v38;
  v114 = &v127;
  v57 = sub_223A18580(a3, (int *)&v127, (uint64_t)&unk_2245BA939, &v114);
  v59 = (char *)v57[5];
  v58 = v57[6];
  if ((unint64_t)v59 >= v58)
  {
    v61 = (char *)v57[4];
    v62 = v59 - v61;
    v63 = (v59 - v61) >> 2;
    v64 = v63 + 1;
    if (!((unint64_t)(v63 + 1) >> 62))
    {
      v65 = v58 - (_QWORD)v61;
      if (v65 >> 1 > v64)
        v64 = v65 >> 1;
      if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFFCLL)
        v66 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v66 = v64;
      if (!v66)
      {
        v67 = 0;
LABEL_51:
        v68 = &v67[4 * v63];
        v69 = &v67[4 * v66];
        *v68 = v123;
        v60 = v68 + 1;
        if (v59 != v61)
        {
          v70 = v59 - v61 - 4;
          if (v70 < 0x2C)
            goto LABEL_103;
          if ((unint64_t)(v59 - v67 - v62) < 0x20)
            goto LABEL_103;
          v71 = (v70 >> 2) + 1;
          v72 = 4 * (v71 & 0x7FFFFFFFFFFFFFF8);
          v73 = &v59[-v72];
          v68 = (_DWORD *)((char *)v68 - v72);
          v74 = &v67[4 * v63 - 16];
          v75 = v59 - 16;
          v76 = v71 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v77 = *(_OWORD *)v75;
            *(v74 - 1) = *((_OWORD *)v75 - 1);
            *v74 = v77;
            v74 -= 2;
            v75 -= 32;
            v76 -= 8;
          }
          while (v76);
          v59 = v73;
          if (v71 != (v71 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_103:
            do
            {
              v78 = *((_DWORD *)v59 - 1);
              v59 -= 4;
              *--v68 = v78;
            }
            while (v59 != v61);
          }
        }
        v57[4] = v68;
        v57[5] = v60;
        v57[6] = v69;
        if (v61)
          operator delete(v61);
        goto LABEL_60;
      }
      if (!(v66 >> 62))
      {
        v67 = operator new(4 * v66);
        v62 = v59 - v61;
        goto LABEL_51;
      }
LABEL_99:
      sub_223174E94();
    }
LABEL_98:
    sub_22316E078();
  }
  *(_DWORD *)v59 = v123;
  v60 = v59 + 4;
LABEL_60:
  a7 = v111;
  v57[5] = v60;
  v114 = &v125;
  v79 = sub_223A18580(a3, (int *)&v125, (uint64_t)&unk_2245BA939, &v114);
  v81 = v79[4];
  v80 = (unsigned int *)v79[5];
  v82 = 126 - 2 * __clz((uint64_t)((uint64_t)v80 - v81) >> 2);
  v114 = (uint64_t *)a2;
  v115[0] = &v125;
  v115[1] = v135;
  if (v80 == (unsigned int *)v81)
    v83 = 0;
  else
    v83 = v82;
  sub_223A1DF24(v81, v80, &v114, v83, 1);
  v114 = &v127;
  v84 = sub_223A18580(a3, (int *)&v127, (uint64_t)&unk_2245BA939, &v114);
  v86 = v84[4];
  v85 = (unsigned int *)v84[5];
  v87 = 126 - 2 * __clz((uint64_t)((uint64_t)v85 - v86) >> 2);
  v114 = (uint64_t *)a2;
  v115[0] = &v127;
  v115[1] = v135;
  if (v85 == (unsigned int *)v86)
    v88 = 0;
  else
    v88 = v87;
  sub_223A1DF24(v86, v85, &v114, v88, 1);
LABEL_67:
  LODWORD(v114) = a6;
  v121 = 0;
  memset(v122, 0, sizeof(v122));
  *(_OWORD *)v115 = 0u;
  *(_OWORD *)v116 = 0u;
  v117 = 0u;
  *(_OWORD *)v118 = 0u;
  *(_OWORD *)__p = 0u;
  memset(v120, 0, 21);
  sub_22399F118((uint64_t)a5, (uint64_t)&v114, v109, a10, v123, a1);
  if (a7)
  {
    v89 = (int *)v116[1];
    v90 = (int *)v117;
    if (v116[1] != (void *)v117)
    {
      v91 = 0;
      v92 = (char *)v115[0];
      v93 = *(char **)a2;
      v94 = v123;
      do
      {
        v96 = *v89;
        if (v94 != *v89)
        {
          v97 = &v92[12 * v91];
          v98 = &v93[96 * v96];
          v100 = *((_DWORD *)v98 + 2);
          v99 = v98 + 8;
          if (v100 == *(_DWORD *)v97
            && *((_DWORD *)v99 + 1) == *((_DWORD *)v97 + 1)
            && *((_DWORD *)v99 + 2) == *((_DWORD *)v97 + 2))
          {
            v95 = &v93[96 * v96 + 84];
          }
          else
          {
            v95 = &v93[96 * v96 + 88];
          }
          *(_DWORD *)v95 = a6;
        }
        ++v89;
        ++v91;
      }
      while (v89 != v90);
    }
  }
  v101 = v110[1];
  if (v101 >= v110[2])
  {
    v102 = sub_2239A5298(v110, (int *)&v114);
  }
  else
  {
    sub_2239A54E0(v110[1], (int *)&v114);
    v102 = v101 + 144;
    v110[1] = v101 + 144;
  }
  v110[1] = v102;
  sub_2239AAA98(v122);
  v103 = (char *)__p[1];
  if (__p[1])
  {
    v104 = (char *)v120[0];
    v105 = __p[1];
    if ((void *)v120[0] != __p[1])
    {
      v106 = (char *)v120[0];
      do
      {
        v108 = (void *)*((_QWORD *)v106 - 3);
        v106 -= 24;
        v107 = v108;
        if (v108)
        {
          *((_QWORD *)v104 - 2) = v107;
          operator delete(v107);
        }
        v104 = v106;
      }
      while (v106 != v103);
      v105 = __p[1];
    }
    v120[0] = v103;
    operator delete(v105);
  }
  if (v118[0])
  {
    v118[1] = v118[0];
    operator delete(v118[0]);
  }
  if (v116[1])
  {
    *(void **)&v117 = v116[1];
    operator delete(v116[1]);
  }
  if (v115[0])
  {
    v115[1] = v115[0];
    operator delete(v115[0]);
  }
}

void sub_223A1D2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  uint64_t v8;
  va_list va;

  va_start(va, a7);
  *(_QWORD *)(v7 + 8) = v8;
  sub_22391679C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_223A1D30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_22391679C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_223A1D320(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  int *v8;
  int *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int *v18;
  uint64_t *v19;
  unsigned int *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  char *v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  float32x2_t v46;
  float32x2_t v47;
  float32x2_t v48;
  float v49;
  float32x2_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  float32x2_t v55;
  float v56;
  float v57;
  float v58;
  unint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _DWORD *v70;
  int64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _OWORD *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  int v82;
  uint64_t *v83;
  uint64_t *v84;
  int8x8_t v85;
  unint64_t v86;
  uint8x8_t v87;
  uint64_t *v88;
  uint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void *v94;
  uint64_t *v95;
  int8x8_t v96;
  unint64_t v97;
  uint8x8_t v98;
  uint64_t *v99;
  uint64_t *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t *v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  unsigned int *v113;
  unsigned int *v114;

  v8 = (int *)(a1 + 8);
  if (!sub_2239942A0(a2, (int *)(a1 + 8))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 152, (uint64_t)"nodes.count(edge.from) == 1", 27, (uint64_t)"Edge start node not found", 25, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_148;
  }
  v9 = (int *)(a1 + 20);
  if (!sub_2239942A0(a2, v9)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 153, (uint64_t)"nodes.count(edge.to) == 1", 25, (uint64_t)"Edge end node not found", 23, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_148;
  }
  v10 = sub_22393835C(a2, v8);
  if (!v10 || (v11 = v10, (v12 = sub_22393835C(a2, v9)) == 0))
LABEL_147:
    sub_223198218("unordered_map::at: key not found");
  v13 = *((_DWORD *)v11 + 18);
  v14 = *((_DWORD *)v12 + 18);
  v15 = v13 <= v14 ? (uint64_t)v12 + 28 : (uint64_t)v11 + 28;
  v16 = v15 + 4;
  v17 = v13 <= v14 ? v11 : v12;
  v18 = (int *)(v13 <= v14 ? v11 + 4 : v12 + 4);
  if (!sub_2239942A0(a4, (int *)(v15 + 4))
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 166, (uint64_t)"edges_from_node.count(remaining_node_pos) == 1", 46, (uint64_t)"Edges from remaining node not found", 35, (void (*)(void **))sub_22457406C)|| !sub_2239942A0(a4, v18)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 168, (uint64_t)"edges_from_node.count(erased_node_pos) == 1", 43, (uint64_t)"Edges from erased node not found", 32, (void (*)(void **))sub_22457406C))
  {
LABEL_148:
    abort();
  }
  v108 = sub_22393835C(a4, (int *)(v15 + 4));
  if (!v108)
    goto LABEL_147;
  v106 = a4;
  v19 = sub_22393835C(a4, v18);
  if (!v19)
    goto LABEL_147;
  v105 = a2;
  v20 = (unsigned int *)v19[4];
  v113 = (unsigned int *)v19[5];
  v21 = v108;
  if (v20 != v113)
  {
    v22 = v108[5] - v108[4];
    v111 = v108 + 4;
    v112 = v22 & 0x3FFFFFFFCLL;
    v109 = (v22 >> 2);
    v107 = a3;
    while (1)
    {
      while (1)
      {
        v24 = *v20;
        v25 = *a3;
        v26 = *((_DWORD *)v17 + 8);
        if (!v112)
          break;
        v27 = (char *)*v111;
        v28 = v25 + 96 * v24;
        v29 = (_DWORD *)(v28 + 8);
        v30 = (_DWORD *)(v28 + 20);
        v31 = v109;
        while (1)
        {
          v33 = *(_DWORD *)v27;
          v27 += 4;
          v32 = v33;
          v34 = v25 + 96 * v33;
          v37 = *(_DWORD *)(v34 + 8);
          v36 = v34 + 8;
          v35 = v37;
          if (v37 != v26 || *(_DWORD *)(v36 + 4) != v18[1] || *(_DWORD *)(v36 + 8) != v18[2])
          {
            v38 = v25 + 96 * v32;
            v41 = *(_DWORD *)(v38 + 20);
            v39 = v38 + 20;
            v40 = v41;
            if ((v41 != v26 || *(_DWORD *)(v39 + 4) != v18[1] || *(_DWORD *)(v39 + 8) != v18[2])
              && (v35 == *v29 && *(_DWORD *)(v36 + 4) == v29[1] && *(_DWORD *)(v36 + 8) == v29[2]
               || v35 == *v30 && *(_DWORD *)(v36 + 4) == v30[1] && *(_DWORD *)(v36 + 8) == v30[2]
               || v40 == *v29 && *(_DWORD *)(v39 + 4) == v29[1] && *(_DWORD *)(v39 + 8) == v29[2]
               || v40 == *v30 && *(_DWORD *)(v39 + 4) == v30[1] && *(_DWORD *)(v39 + 8) == v30[2]))
            {
              break;
            }
          }
          if (!--v31)
            goto LABEL_49;
        }
        *(_BYTE *)(v25 + 96 * v24 + 4) = 0;
        if (++v20 == v113)
          goto LABEL_86;
      }
LABEL_49:
      v42 = v25 + 96 * v24;
      v44 = *(_DWORD *)(v42 + 8);
      v43 = v42 + 8;
      v114 = v20;
      if (v44 == v26 && *(_DWORD *)(v43 + 4) == v18[1] && *(_DWORD *)(v43 + 8) == v18[2])
      {
        if (v43 != v16)
        {
          v45 = *(_QWORD *)v16;
          *(_DWORD *)(v43 + 8) = *(_DWORD *)(v16 + 8);
          *(_QWORD *)v43 = v45;
        }
        v48 = (float32x2_t)(v25 + 96 * v24);
        v46 = *(float32x2_t *)(v15 + 16);
        *(float32x2_t *)(*(_QWORD *)&v48 + 52) = v46;
        v47 = *(float32x2_t *)(*(_QWORD *)&v48 + 60);
        v48.i32[0] = v47.i32[0];
        v49 = v46.f32[0];
        v50 = v46;
      }
      else
      {
        v51 = (_QWORD *)(v25 + 96 * v24 + 20);
        if (v51 != (_QWORD *)v16)
        {
          v52 = *(_QWORD *)v16;
          *(_DWORD *)(v25 + 96 * v24 + 28) = *(_DWORD *)(v16 + 8);
          *v51 = v52;
        }
        v48 = *(float32x2_t *)(v15 + 16);
        v53 = v25 + 96 * v24;
        *(float32x2_t *)(v53 + 60) = v48;
        v47 = v48;
        v50 = *(float32x2_t *)(v53 + 52);
        v49 = v50.f32[0];
      }
      v54 = v25 + 96 * v24;
      v55 = vsub_f32(v47, v50);
      v56 = sqrtf(vmla_lane_f32(vmul_f32(v55, v55), (float32x2_t)vdup_lane_s32((int32x2_t)v55, 1), v55, 1).f32[0]);
      *(float *)(v54 + 32) = v56;
      *(float *)(v54 + 40) = v56 / *(float *)(v54 + 36);
      if (v49 <= v48.f32[0])
        v57 = v49;
      else
        v57 = v48.f32[0];
      if (v49 < v48.f32[0])
        v49 = v48.f32[0];
      *(float *)(v54 + 68) = v57;
      *(float *)(v54 + 72) = v49;
      v58 = (float)(atan2f(v55.f32[1], v55.f32[0]) * -57.296) + 90.0;
      if (v58 < 0.0)
        v58 = v58 + 360.0;
      *(float *)(v54 + 76) = v58;
      v60 = (char *)v21[5];
      v59 = v21[6];
      if ((unint64_t)v60 >= v59)
        break;
      *(_DWORD *)v60 = *(_DWORD *)v54;
      v23 = (uint64_t)(v60 + 4);
LABEL_25:
      v21[5] = v23;
      v20 = v114 + 1;
      if (v114 + 1 == v113)
        goto LABEL_86;
    }
    v61 = v17;
    v62 = v16;
    v63 = v15;
    v64 = (char *)*v111;
    v65 = (uint64_t)&v60[-*v111];
    v66 = v65 >> 2;
    v67 = (v65 >> 2) + 1;
    if (v67 >> 62)
      sub_22316E078();
    v68 = v59 - (_QWORD)v64;
    if (v68 >> 1 > v67)
      v67 = v68 >> 1;
    if ((unint64_t)v68 >= 0x7FFFFFFFFFFFFFFCLL)
      v67 = 0x3FFFFFFFFFFFFFFFLL;
    v110 = v67;
    if (v67)
    {
      if (v67 >> 62)
        sub_223174E94();
      v69 = operator new(4 * v67);
      v70 = &v69[4 * v66];
      *v70 = *(_DWORD *)v54;
      v23 = (uint64_t)(v70 + 1);
      v71 = v60 - v64;
      if (v60 != v64)
        goto LABEL_74;
    }
    else
    {
      v69 = 0;
      v70 = (_DWORD *)(4 * v66);
      *(_DWORD *)(4 * v66) = *(_DWORD *)v54;
      v23 = 4 * v66 + 4;
      v71 = v60 - v64;
      if (v60 != v64)
      {
LABEL_74:
        v72 = v71 - 4;
        v73 = v110;
        if (v72 >= 0x2C)
        {
          v74 = v60 - v69 - v65;
          v15 = v63;
          v16 = v62;
          v17 = v61;
          v21 = v108;
          if (v74 >= 0x20)
          {
            v75 = (v72 >> 2) + 1;
            v76 = 4 * (v75 & 0x7FFFFFFFFFFFFFF8);
            v77 = &v60[-v76];
            v70 = (_DWORD *)((char *)v70 - v76);
            v78 = &v69[4 * v66 - 16];
            v79 = v60 - 16;
            v80 = v75 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v81 = *(_OWORD *)v79;
              *(v78 - 1) = *((_OWORD *)v79 - 1);
              *v78 = v81;
              v78 -= 2;
              v79 -= 32;
              v80 -= 8;
            }
            while (v80);
            v60 = v77;
            if (v75 == (v75 & 0x7FFFFFFFFFFFFFF8))
              goto LABEL_83;
          }
        }
        else
        {
          v15 = v63;
          v16 = v62;
          v17 = v61;
          v21 = v108;
        }
        do
        {
          v82 = *((_DWORD *)v60 - 1);
          v60 -= 4;
          *--v70 = v82;
        }
        while (v60 != v64);
LABEL_83:
        v21[4] = (uint64_t)v70;
        v21[5] = v23;
        v21[6] = (uint64_t)&v69[4 * v73];
        if (v64)
          operator delete(v64);
        a3 = v107;
        goto LABEL_25;
      }
    }
    v15 = v63;
    v16 = v62;
    v17 = v61;
    v21 = v108;
    v73 = v110;
    goto LABEL_83;
  }
LABEL_86:
  v83 = sub_22393835C(v106, v18);
  if (v83)
  {
    v84 = v83;
    v85 = (int8x8_t)v106[1];
    v86 = v83[1];
    v87 = (uint8x8_t)vcnt_s8(v85);
    v87.i16[0] = vaddlv_u8(v87);
    if (v87.u32[0] > 1uLL)
    {
      if (v86 >= *(_QWORD *)&v85)
        v86 %= *(_QWORD *)&v85;
    }
    else
    {
      v86 &= *(_QWORD *)&v85 - 1;
    }
    v88 = *(uint64_t **)(*v106 + 8 * v86);
    do
    {
      v89 = v88;
      v88 = (uint64_t *)*v88;
    }
    while (v88 != v83);
    if (v89 == v106 + 2)
      goto LABEL_104;
    v90 = v89[1];
    if (v87.u32[0] > 1uLL)
    {
      if (v90 >= *(_QWORD *)&v85)
        v90 %= *(_QWORD *)&v85;
    }
    else
    {
      v90 &= *(_QWORD *)&v85 - 1;
    }
    if (v90 != v86)
    {
LABEL_104:
      if (!*v83)
        goto LABEL_105;
      v91 = *(_QWORD *)(*v83 + 8);
      if (v87.u32[0] > 1uLL)
      {
        if (v91 >= *(_QWORD *)&v85)
          v91 %= *(_QWORD *)&v85;
      }
      else
      {
        v91 &= *(_QWORD *)&v85 - 1;
      }
      if (v91 != v86)
LABEL_105:
        *(_QWORD *)(*v106 + 8 * v86) = 0;
    }
    v92 = *v83;
    if (*v83)
    {
      v93 = *(_QWORD *)(v92 + 8);
      if (v87.u32[0] > 1uLL)
      {
        if (v93 >= *(_QWORD *)&v85)
          v93 %= *(_QWORD *)&v85;
      }
      else
      {
        v93 &= *(_QWORD *)&v85 - 1;
      }
      if (v93 != v86)
      {
        *(_QWORD *)(*v106 + 8 * v93) = v89;
        v92 = *v83;
      }
    }
    *v89 = v92;
    *v83 = 0;
    --v106[3];
    v94 = (void *)v83[4];
    if (v94)
    {
      v84[5] = (uint64_t)v94;
      operator delete(v94);
    }
    operator delete(v84);
  }
  v95 = sub_22393835C(v105, v18);
  if (v95)
  {
    v96 = (int8x8_t)v105[1];
    v97 = v95[1];
    v98 = (uint8x8_t)vcnt_s8(v96);
    v98.i16[0] = vaddlv_u8(v98);
    if (v98.u32[0] > 1uLL)
    {
      if (v97 >= *(_QWORD *)&v96)
        v97 %= *(_QWORD *)&v96;
    }
    else
    {
      v97 &= *(_QWORD *)&v96 - 1;
    }
    v99 = *(uint64_t **)(*v105 + 8 * v97);
    do
    {
      v100 = v99;
      v99 = (uint64_t *)*v99;
    }
    while (v99 != v95);
    if (v100 == v105 + 2)
      goto LABEL_135;
    v101 = v100[1];
    if (v98.u32[0] > 1uLL)
    {
      if (v101 >= *(_QWORD *)&v96)
        v101 %= *(_QWORD *)&v96;
    }
    else
    {
      v101 &= *(_QWORD *)&v96 - 1;
    }
    if (v101 != v97)
    {
LABEL_135:
      if (!*v95)
        goto LABEL_136;
      v102 = *(_QWORD *)(*v95 + 8);
      if (v98.u32[0] > 1uLL)
      {
        if (v102 >= *(_QWORD *)&v96)
          v102 %= *(_QWORD *)&v96;
      }
      else
      {
        v102 &= *(_QWORD *)&v96 - 1;
      }
      if (v102 != v97)
LABEL_136:
        *(_QWORD *)(*v105 + 8 * v97) = 0;
    }
    v103 = *v95;
    if (*v95)
    {
      v104 = *(_QWORD *)(v103 + 8);
      if (v98.u32[0] > 1uLL)
      {
        if (v104 >= *(_QWORD *)&v96)
          v104 %= *(_QWORD *)&v96;
      }
      else
      {
        v104 &= *(_QWORD *)&v96 - 1;
      }
      if (v104 != v97)
      {
        *(_QWORD *)(*v105 + 8 * v104) = v100;
        v103 = *v95;
      }
    }
    *v100 = v103;
    *v95 = 0;
    --v105[3];
    operator delete(v95);
  }
}

uint64_t *sub_223A1DC20(float32x2_t *a1, _QWORD *a2, uint64_t *a3, float a4)
{
  int *v8;
  uint64_t *result;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  int v16;
  int v17;
  float32x2_t v18;
  unsigned int *v19;
  unsigned int *v20;
  uint64_t v21;
  __int32 v22;
  __int32 v23;
  __int32 v24;
  float v25;
  float v26;
  BOOL v27;
  float v28;
  unsigned int v30;
  uint64_t v31;
  _BYTE *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  float32x2_t v41;
  float32x2_t v42;
  float32x2_t v43;
  float32x2_t v44;
  float v45;
  float v46;
  BOOL v47;
  float v48;

  v8 = (int *)a1 + 1;
  if (!sub_2239942A0(a2, (int *)a1 + 1)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 296, (uint64_t)"edges_from_node.count(node.position) == 1", 41, (uint64_t)"Edges from node not found", 25, (void (*)(void **))sub_22457406C))
  {
LABEL_49:
    abort();
  }
  result = sub_2239942A0(a2, v8);
  if (!result)
LABEL_48:
    sub_223198218("unordered_map::at: key not found");
  v11 = (unsigned int *)result[4];
  v10 = (unsigned int *)result[5];
  while (v11 != v10)
  {
    v12 = *v11;
    v13 = *a3;
    v14 = *a3 + 96 * *v11;
    v16 = *(_DWORD *)(v14 + 8);
    v15 = (int *)(v14 + 8);
    if (*v8 == v16 && a1[1].i32[0] == v15[1] && a1[1].i32[1] == v15[2])
      v15 = (int *)(v13 + 96 * v12 + 20);
    v17 = *(unsigned __int8 *)(v13 + 96 * v12 + 4);
    result = sub_2239942A0(a2, v15);
    if (v17)
    {
      if (!result
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/SpatialSubdivisionGraphAlgorithms.cpp", 313, (uint64_t)"edges_from_node.count(neighbor_pos) == 1", 40, (uint64_t)"Edges from neighbor node not found", 34, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_49;
      }
    }
    else if (!result)
    {
      goto LABEL_6;
    }
    result = sub_2239942A0(a2, v15);
    if (!result)
      goto LABEL_48;
    v19 = (unsigned int *)result[4];
    v20 = (unsigned int *)result[5];
    if (v19 != v20)
    {
      v21 = *a3;
      v22 = a1->i32[1];
      v23 = a1[1].i32[0];
      v24 = a1[1].i32[1];
      do
      {
        while (1)
        {
          v30 = *v19;
          v31 = v21 + 96 * *v19;
          v33 = *(unsigned __int8 *)(v31 + 4);
          v32 = (_BYTE *)(v31 + 4);
          if (!v33)
            goto LABEL_43;
          v34 = v21 + 96 * v30;
          v36 = *(_DWORD *)(v34 + 8);
          v35 = v34 + 8;
          if (v36 == v22 && *(_DWORD *)(v35 + 4) == v23 && *(_DWORD *)(v35 + 8) == v24)
            goto LABEL_43;
          v37 = v21 + 96 * v30;
          v39 = *(_DWORD *)(v37 + 20);
          v38 = v37 + 20;
          if (v39 == v22 && *(_DWORD *)(v38 + 4) == v23 && *(_DWORD *)(v38 + 8) == v24)
            goto LABEL_43;
          v40 = v21 + 96 * v30;
          v41 = *(float32x2_t *)(v40 + 52);
          v42 = vsub_f32(*(float32x2_t *)(v40 + 60), v41);
          v43 = (float32x2_t)vdup_lane_s32((int32x2_t)v42, 1);
          v44 = vmla_lane_f32(vmul_f32(v42, v42), v43, v42, 1);
          if (fabsf(v42.f32[0]) > fabsf(v42.f32[1]))
            break;
          v18.f32[0] = -v42.f32[0];
          v25 = vdiv_f32(vsub_f32(vmla_lane_f32(vmul_lane_f32(a1[2], v42, 1), v18, a1[2], 1), vmla_lane_f32(vmul_lane_f32(v41, v42, 1), v18, v41, 1)), v44).f32[0];
          v26 = (float)((float)(COERCE_FLOAT(HIDWORD(*(_QWORD *)&a1[2])) + (float)(v42.f32[0] * v25)) - v41.f32[1])
              / v42.f32[1];
          v27 = v26 < 0.0 || v26 > 1.0;
          v28 = v44.f32[0] * (float)(v25 * v25);
          if (!v27 && v28 <= a4)
            goto LABEL_45;
LABEL_43:
          if (++v19 == v20)
            goto LABEL_6;
        }
        v18 = a1[2];
        v45 = vdiv_f32(vsub_f32(vmla_lane_f32(vmul_f32(v18, v42), v43, v18, 1), vmla_lane_f32(vmul_f32(v41, v42), v43, v41, 1)), v44).f32[0];
        v46 = (float)-(float)(COERCE_FLOAT(vsub_f32(v18, v41).i32[1]) - (float)(v42.f32[1] * v45)) / v42.f32[0];
        v47 = v45 < 0.0 || v45 > 1.0;
        v48 = v44.f32[0] * (float)(v46 * v46);
        if (v47 || v48 > a4)
          goto LABEL_43;
LABEL_45:
        *v32 = 0;
        ++v19;
      }
      while (v19 != v20);
    }
LABEL_6:
    ++v11;
  }
  return result;
}

unint64_t sub_223A1DF24(unint64_t result, unsigned int *a2, uint64_t **a3, uint64_t a4, char a5)
{
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int *v13;
  int *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t *v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  float v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  float v28;
  float v29;
  uint64_t v30;
  int *v31;
  int v32;
  int v33;
  int *v34;
  float v35;
  float v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *v39;
  float v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  float v47;
  float v48;
  int v49;
  unsigned int *v50;
  float v51;
  float v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  float v57;
  float v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  float v63;
  float v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  float v69;
  float v70;
  float v71;
  float v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  float v77;
  float v78;
  float v79;
  float v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int *v83;
  int v84;
  int v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  float v90;
  float v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  float v96;
  float v97;
  float v98;
  float v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  float v104;
  float v105;
  float v106;
  float v107;
  unsigned int *v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  float v113;
  float v114;
  float v115;
  int v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  float v121;
  float v122;
  float v123;
  float v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  float v129;
  float v130;
  float v131;
  unsigned int *v132;
  int v133;
  float v134;
  float v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  float v139;
  float v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  float v144;
  float v145;
  unsigned int *v146;
  float v147;
  float v148;
  float v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  float v154;
  float v155;
  float v156;
  unsigned int v157;
  unsigned int v158;
  float v159;
  int v160;
  int v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  float v166;
  float v167;
  float v168;
  float v169;
  unsigned int v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  float v175;
  float v176;
  unsigned int v177;
  float v178;
  float v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int v182;
  float v183;
  float v184;
  unsigned int *v185;
  unsigned int v186;
  unsigned int v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  float v193;
  float v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  float v198;
  float v199;
  uint64_t *v200;
  uint64_t *v201;
  unsigned int *v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int *v205;
  unsigned int *v206;
  unsigned int *v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  float v212;
  float v213;
  float v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  float v218;
  float v219;
  float v220;
  uint64_t v221;
  uint64_t v222;
  float v223;
  float v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  float v228;
  float v229;
  int64_t v230;
  int64_t v231;
  int64_t v232;
  uint64_t *v233;
  uint64_t v234;
  unsigned int *v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  float v241;
  float v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  float v246;
  float v247;
  unsigned int v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  float v252;
  float v253;
  unsigned int *v254;
  unsigned int v255;
  uint64_t v256;
  uint64_t v257;
  int v258;
  float v259;
  float v260;
  float v261;
  float v262;
  unsigned int *v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  int v269;
  float v270;
  float v271;
  uint64_t v272;
  uint64_t v273;
  int v274;
  float v275;
  float v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  float v280;
  float v281;
  float v282;
  float v283;
  uint64_t v284;
  uint64_t v286;
  unsigned int v287;
  uint64_t *v288;
  uint64_t *v289;
  unsigned int *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  int v295;
  float v296;
  float v297;
  uint64_t v298;
  uint64_t v299;
  int v300;
  float v301;
  float v302;
  uint64_t v303;
  unint64_t v304;
  uint64_t *v305;
  unint64_t v306;
  unsigned int *v307;
  unsigned int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  int v312;
  float v313;
  float v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  float v318;
  float v319;
  float v320;
  float v321;
  unsigned int *v322;
  uint64_t v323;
  uint64_t v324;
  int v325;
  float v326;
  float v327;
  float v328;
  float v329;
  unsigned int *v330;
  uint64_t v331;
  unsigned int *v332;
  unsigned int v333;
  uint64_t v334;
  uint64_t v335;
  int v336;
  float v337;
  float v338;
  float v339;
  unsigned int v340;
  uint64_t v341;
  int v342;
  float v343;
  unsigned int v344;
  float v345;
  float v346;
  unsigned int *v347;
  float v348;
  float v349;
  uint64_t v350;
  uint64_t v351;
  int v352;
  float v353;
  float v354;
  unsigned int *v355;
  unsigned int *v356;
  unsigned int *v357;
  unsigned int *v358;

  v8 = (unsigned int *)result;
LABEL_2:
  v358 = a2 - 1;
  v355 = a2 - 3;
  v356 = a2 - 2;
  v9 = v8;
  v357 = a2;
  while (2)
  {
    v8 = v9;
    v10 = (char *)a2 - (char *)v9;
    v11 = a2 - v9;
    switch(v11)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v186 = *(a2 - 1);
        v187 = *v9;
        v188 = a3[1];
        v189 = **a3;
        v190 = v189 + 96 * v186;
        v192 = *(_DWORD *)(v190 + 20);
        v191 = v190 + 20;
        v193 = *(float *)(v191 + 56);
        if (v192 == *(_DWORD *)v188
          && *(_DWORD *)(v191 + 4) == *((_DWORD *)v188 + 1)
          && *(_DWORD *)(v191 + 8) == *((_DWORD *)v188 + 2))
        {
          v194 = 180.0;
          if (v193 >= 180.0)
            v194 = -180.0;
          v193 = v193 + v194;
        }
        v195 = v189 + 96 * v187;
        v197 = *(_DWORD *)(v195 + 20);
        v196 = v195 + 20;
        v198 = *(float *)(v196 + 56);
        if (v197 == *(_DWORD *)v188
          && *(_DWORD *)(v196 + 4) == *((_DWORD *)v188 + 1)
          && *(_DWORD *)(v196 + 8) == *((_DWORD *)v188 + 2))
        {
          v199 = 180.0;
          if (v198 >= 180.0)
            v199 = -180.0;
          v198 = v198 + v199;
        }
        if (v193 < v198)
        {
          *v9 = v186;
          *(a2 - 1) = v187;
        }
        return result;
      case 3:
        return (unint64_t)sub_223A1FA00(v9, v9 + 1, v358, **a3, (int *)a3[1]);
      case 4:
        return (unint64_t)sub_223A2017C(v9, v9 + 1, v9 + 2, v358, a3);
      case 5:
        return (unint64_t)sub_223A1F6A0(v9, v9 + 1, v9 + 2, v9 + 3, v358, a3);
      default:
        if (v10 <= 95)
        {
          v201 = *a3;
          v200 = a3[1];
          if ((a5 & 1) != 0)
          {
            if (v9 != a2)
            {
              v202 = v9 + 1;
              if (v9 + 1 != a2)
              {
                v203 = *v201;
                v204 = 4;
                v205 = v9;
                do
                {
                  v207 = v202;
                  v208 = v205[1];
                  v209 = v203 + 96 * v208;
                  v211 = *(_DWORD *)(v209 + 20);
                  v210 = v209 + 20;
                  v212 = *(float *)(v210 + 56);
                  v213 = v212;
                  if (v211 == *(_DWORD *)v200)
                  {
                    v213 = *(float *)(v210 + 56);
                    if (*(_DWORD *)(v210 + 4) == *((_DWORD *)v200 + 1))
                    {
                      v213 = *(float *)(v210 + 56);
                      if (*(_DWORD *)(v210 + 8) == *((_DWORD *)v200 + 2))
                      {
                        v214 = 180.0;
                        if (v212 >= 180.0)
                          v214 = -180.0;
                        v213 = v212 + v214;
                      }
                    }
                  }
                  result = *v205;
                  v215 = v203 + 96 * result;
                  v217 = *(_DWORD *)(v215 + 20);
                  v216 = v215 + 20;
                  v218 = *(float *)(v216 + 56);
                  if (v217 == *(_DWORD *)v200
                    && *(_DWORD *)(v216 + 4) == *((_DWORD *)v200 + 1)
                    && *(_DWORD *)(v216 + 8) == *((_DWORD *)v200 + 2))
                  {
                    v219 = 180.0;
                    if (v218 >= 180.0)
                      v219 = -180.0;
                    v218 = v218 + v219;
                  }
                  if (v213 < v218)
                  {
                    v220 = 180.0;
                    if (v212 >= 180.0)
                      v220 = -180.0;
                    v221 = v204;
                    do
                    {
                      *(unsigned int *)((char *)v9 + v221) = result;
                      v222 = v221 - 4;
                      if (v221 == 4)
                      {
                        v206 = v9;
                        goto LABEL_278;
                      }
                      v223 = v212;
                      if (*(_DWORD *)v210 == *(_DWORD *)v200)
                      {
                        v223 = v212;
                        if (*(_DWORD *)(v210 + 4) == *((_DWORD *)v200 + 1))
                        {
                          if (*(_DWORD *)(v210 + 8) == *((_DWORD *)v200 + 2))
                            v224 = v220;
                          else
                            v224 = -0.0;
                          v223 = v212 + v224;
                        }
                      }
                      result = *(unsigned int *)((char *)v9 + v221 - 8);
                      v225 = v203 + 96 * result;
                      v227 = *(_DWORD *)(v225 + 20);
                      v226 = v225 + 20;
                      v228 = *(float *)(v226 + 56);
                      if (v227 == *(_DWORD *)v200
                        && *(_DWORD *)(v226 + 4) == *((_DWORD *)v200 + 1)
                        && *(_DWORD *)(v226 + 8) == *((_DWORD *)v200 + 2))
                      {
                        v229 = 180.0;
                        if (v228 >= 180.0)
                          v229 = -180.0;
                        v228 = v228 + v229;
                      }
                      v221 = v222;
                    }
                    while (v223 < v228);
                    v206 = (unsigned int *)((char *)v9 + v222);
LABEL_278:
                    *v206 = v208;
                  }
                  v202 = v207 + 1;
                  v204 += 4;
                  v205 = v207;
                }
                while (v207 + 1 != a2);
              }
            }
          }
          else if (v9 != a2)
          {
            v330 = v9 + 1;
            if (v9 + 1 != a2)
            {
              v331 = *v201;
              do
              {
                v332 = v330;
                v333 = v8[1];
                v334 = v331 + 96 * v333;
                v336 = *(_DWORD *)(v334 + 20);
                v335 = v334 + 20;
                v337 = *(float *)(v335 + 56);
                v338 = v337;
                if (v336 == *(_DWORD *)v200)
                {
                  v338 = *(float *)(v335 + 56);
                  if (*(_DWORD *)(v335 + 4) == *((_DWORD *)v200 + 1))
                  {
                    v338 = *(float *)(v335 + 56);
                    if (*(_DWORD *)(v335 + 8) == *((_DWORD *)v200 + 2))
                    {
                      v339 = 180.0;
                      if (v337 >= 180.0)
                        v339 = -180.0;
                      v338 = v337 + v339;
                    }
                  }
                }
                v340 = *v8;
                v341 = v331 + 96 * *v8;
                v342 = *(_DWORD *)(v341 + 20);
                result = v341 + 20;
                v343 = *(float *)(result + 56);
                if (v342 == *(_DWORD *)v200 && *(_DWORD *)(result + 4) == *((_DWORD *)v200 + 1))
                {
                  v344 = *(_DWORD *)(result + 8);
                  result = *((unsigned int *)v200 + 2);
                  if (v344 == (_DWORD)result)
                  {
                    v345 = 180.0;
                    if (v343 >= 180.0)
                      v345 = -180.0;
                    v343 = v343 + v345;
                  }
                }
                if (v338 < v343)
                {
                  v346 = 180.0;
                  if (v337 >= 180.0)
                    v346 = -180.0;
                  v347 = v332;
                  do
                  {
                    *v347 = v340;
                    result = *(unsigned int *)v200;
                    v348 = v337;
                    if (*(_DWORD *)v335 == (_DWORD)result)
                    {
                      v348 = v337;
                      if (*(_DWORD *)(v335 + 4) == *((_DWORD *)v200 + 1))
                      {
                        if (*(_DWORD *)(v335 + 8) == *((_DWORD *)v200 + 2))
                          v349 = v346;
                        else
                          v349 = -0.0;
                        v348 = v337 + v349;
                      }
                    }
                    v340 = *(v347 - 2);
                    v350 = v331 + 96 * v340;
                    v352 = *(_DWORD *)(v350 + 20);
                    v351 = v350 + 20;
                    v353 = *(float *)(v351 + 56);
                    if (v352 == (_DWORD)result)
                    {
                      result = *(unsigned int *)(v351 + 4);
                      if ((_DWORD)result == *((_DWORD *)v200 + 1))
                      {
                        result = *(unsigned int *)(v351 + 8);
                        if ((_DWORD)result == *((_DWORD *)v200 + 2))
                        {
                          v354 = 180.0;
                          if (v353 >= 180.0)
                            v354 = -180.0;
                          v353 = v353 + v354;
                        }
                      }
                    }
                    --v347;
                  }
                  while (v348 < v353);
                  *v347 = v333;
                }
                v330 = v332 + 1;
                v8 = v332;
              }
              while (v332 + 1 != a2);
            }
          }
          return result;
        }
        if (!a4)
        {
          if (v9 != a2)
          {
            v230 = (unint64_t)(v11 - 2) >> 1;
            v231 = v230;
            do
            {
              v232 = v231;
              if (v230 >= v231)
              {
                v233 = a3[1];
                v234 = (2 * v232) | 1;
                v235 = &v9[v234];
                v236 = **a3;
                v237 = *(_DWORD *)v233;
                if (2 * v232 + 2 < v11)
                {
                  v238 = v236 + 96 * *v235;
                  v240 = *(_DWORD *)(v238 + 20);
                  v239 = v238 + 20;
                  v241 = *(float *)(v239 + 56);
                  if (v240 == v237
                    && *(_DWORD *)(v239 + 4) == *((_DWORD *)v233 + 1)
                    && *(_DWORD *)(v239 + 8) == *((_DWORD *)v233 + 2))
                  {
                    v242 = 180.0;
                    if (v241 >= 180.0)
                      v242 = -180.0;
                    v241 = v241 + v242;
                  }
                  v243 = v236 + 96 * v235[1];
                  v245 = *(_DWORD *)(v243 + 20);
                  v244 = v243 + 20;
                  v246 = *(float *)(v244 + 56);
                  if (v245 == v237
                    && *(_DWORD *)(v244 + 4) == *((_DWORD *)v233 + 1)
                    && *(_DWORD *)(v244 + 8) == *((_DWORD *)v233 + 2))
                  {
                    v247 = 180.0;
                    if (v246 >= 180.0)
                      v247 = -180.0;
                    v246 = v246 + v247;
                  }
                  if (v241 < v246)
                  {
                    ++v235;
                    v234 = 2 * v232 + 2;
                  }
                }
                v248 = *v235;
                v249 = v236 + 96 * *v235;
                v251 = *(_DWORD *)(v249 + 20);
                v250 = v249 + 20;
                v252 = *(float *)(v250 + 56);
                if (v251 == v237
                  && *(_DWORD *)(v250 + 4) == *((_DWORD *)v233 + 1)
                  && *(_DWORD *)(v250 + 8) == *((_DWORD *)v233 + 2))
                {
                  v253 = 180.0;
                  if (v252 >= 180.0)
                    v253 = -180.0;
                  v252 = v252 + v253;
                }
                v254 = &v9[v232];
                v255 = *v254;
                v256 = v236 + 96 * *v254;
                v258 = *(_DWORD *)(v256 + 20);
                v257 = v256 + 20;
                v259 = *(float *)(v257 + 56);
                v260 = v259;
                if (v258 == v237)
                {
                  v260 = *(float *)(v257 + 56);
                  if (*(_DWORD *)(v257 + 4) == *((_DWORD *)v233 + 1))
                  {
                    v260 = *(float *)(v257 + 56);
                    if (*(_DWORD *)(v257 + 8) == *((_DWORD *)v233 + 2))
                    {
                      v261 = 180.0;
                      if (v259 >= 180.0)
                        v261 = -180.0;
                      v260 = v259 + v261;
                    }
                  }
                }
                if (v252 >= v260)
                {
                  v262 = 180.0;
                  if (v259 >= 180.0)
                    v262 = -180.0;
                  do
                  {
                    v263 = v235;
                    *v254 = v248;
                    if (v230 < v234)
                      break;
                    v264 = 2 * v234;
                    v234 = (2 * v234) | 1;
                    v235 = &v9[v234];
                    v265 = v264 + 2;
                    v266 = *(_DWORD *)v233;
                    if (v265 < v11)
                    {
                      v267 = v236 + 96 * *v235;
                      v269 = *(_DWORD *)(v267 + 20);
                      v268 = v267 + 20;
                      v270 = *(float *)(v268 + 56);
                      if (v269 == v266
                        && *(_DWORD *)(v268 + 4) == *((_DWORD *)v233 + 1)
                        && *(_DWORD *)(v268 + 8) == *((_DWORD *)v233 + 2))
                      {
                        v271 = 180.0;
                        if (v270 >= 180.0)
                          v271 = -180.0;
                        v270 = v270 + v271;
                      }
                      v272 = v236 + 96 * v235[1];
                      v274 = *(_DWORD *)(v272 + 20);
                      v273 = v272 + 20;
                      v275 = *(float *)(v273 + 56);
                      if (v274 == v266
                        && *(_DWORD *)(v273 + 4) == *((_DWORD *)v233 + 1)
                        && *(_DWORD *)(v273 + 8) == *((_DWORD *)v233 + 2))
                      {
                        v276 = 180.0;
                        if (v275 >= 180.0)
                          v276 = -180.0;
                        v275 = v275 + v276;
                      }
                      if (v270 < v275)
                      {
                        ++v235;
                        v234 = v265;
                      }
                    }
                    v248 = *v235;
                    v277 = v236 + 96 * *v235;
                    v279 = *(_DWORD *)(v277 + 20);
                    v278 = v277 + 20;
                    v280 = *(float *)(v278 + 56);
                    if (v279 == v266
                      && *(_DWORD *)(v278 + 4) == *((_DWORD *)v233 + 1)
                      && *(_DWORD *)(v278 + 8) == *((_DWORD *)v233 + 2))
                    {
                      v281 = 180.0;
                      if (v280 >= 180.0)
                        v281 = -180.0;
                      v280 = v280 + v281;
                    }
                    v282 = v259;
                    if (*(_DWORD *)v257 == v266)
                    {
                      v282 = v259;
                      if (*(_DWORD *)(v257 + 4) == *((_DWORD *)v233 + 1))
                      {
                        if (*(_DWORD *)(v257 + 8) == *((_DWORD *)v233 + 2))
                          v283 = v262;
                        else
                          v283 = -0.0;
                        v282 = v259 + v283;
                      }
                    }
                    v254 = v263;
                  }
                  while (v280 >= v282);
                  *v263 = v255;
                }
              }
              v231 = v232 - 1;
            }
            while (v232);
            v284 = (unint64_t)v10 >> 2;
            do
            {
              v286 = 0;
              v287 = *v9;
              v288 = *a3;
              v289 = a3[1];
              v290 = v9;
              do
              {
                result = (unint64_t)v290;
                v290 += v286 + 1;
                v291 = 2 * v286;
                v286 = (2 * v286) | 1;
                v292 = v291 + 2;
                if (v292 < v284)
                {
                  v293 = *v288 + 96 * *v290;
                  v295 = *(_DWORD *)(v293 + 20);
                  v294 = v293 + 20;
                  v296 = *(float *)(v294 + 56);
                  if (v295 == *(_DWORD *)v289
                    && *(_DWORD *)(v294 + 4) == *((_DWORD *)v289 + 1)
                    && *(_DWORD *)(v294 + 8) == *((_DWORD *)v289 + 2))
                  {
                    v297 = 180.0;
                    if (v296 >= 180.0)
                      v297 = -180.0;
                    v296 = v296 + v297;
                  }
                  v298 = *v288 + 96 * v290[1];
                  v300 = *(_DWORD *)(v298 + 20);
                  v299 = v298 + 20;
                  v301 = *(float *)(v299 + 56);
                  if (v300 == *(_DWORD *)v289
                    && *(_DWORD *)(v299 + 4) == *((_DWORD *)v289 + 1)
                    && *(_DWORD *)(v299 + 8) == *((_DWORD *)v289 + 2))
                  {
                    v302 = 180.0;
                    if (v301 >= 180.0)
                      v302 = -180.0;
                    v301 = v301 + v302;
                  }
                  if (v296 < v301)
                  {
                    ++v290;
                    v286 = v292;
                  }
                }
                *(_DWORD *)result = *v290;
              }
              while (v286 <= (uint64_t)((unint64_t)(v284 - 2) >> 1));
              if (v290 == --a2)
              {
                *v290 = v287;
              }
              else
              {
                *v290 = *a2;
                *a2 = v287;
                v303 = (char *)v290 - (char *)v9 + 4;
                if (v303 >= 5)
                {
                  v304 = (unint64_t)v303 >> 2;
                  v305 = a3[1];
                  v306 = (v304 - 2) >> 1;
                  v307 = &v9[v306];
                  v308 = *v307;
                  v309 = **a3;
                  v310 = v309 + 96 * *v307;
                  v312 = *(_DWORD *)(v310 + 20);
                  v311 = v310 + 20;
                  v313 = *(float *)(v311 + 56);
                  if (v312 == *(_DWORD *)v305
                    && *(_DWORD *)(v311 + 4) == *((_DWORD *)v305 + 1)
                    && *(_DWORD *)(v311 + 8) == *((_DWORD *)v305 + 2))
                  {
                    v314 = 180.0;
                    if (v313 >= 180.0)
                      v314 = -180.0;
                    v313 = v313 + v314;
                  }
                  result = *v290;
                  v315 = v309 + 96 * result;
                  v317 = *(_DWORD *)(v315 + 20);
                  v316 = v315 + 20;
                  v318 = *(float *)(v316 + 56);
                  v319 = v318;
                  if (v317 == *(_DWORD *)v305)
                  {
                    v319 = *(float *)(v316 + 56);
                    if (*(_DWORD *)(v316 + 4) == *((_DWORD *)v305 + 1))
                    {
                      v320 = 180.0;
                      if (v318 >= 180.0)
                        v320 = -180.0;
                      v319 = v318 + v320;
                      if (*(_DWORD *)(v316 + 8) != *((_DWORD *)v305 + 2))
                        v319 = *(float *)(v316 + 56);
                    }
                  }
                  if (v313 < v319)
                  {
                    v321 = 180.0;
                    if (v318 >= 180.0)
                      v321 = -180.0;
                    do
                    {
                      v322 = v307;
                      *v290 = v308;
                      if (!v306)
                        break;
                      v306 = (v306 - 1) >> 1;
                      v307 = &v9[v306];
                      v308 = *v307;
                      v323 = v309 + 96 * *v307;
                      v325 = *(_DWORD *)(v323 + 20);
                      v324 = v323 + 20;
                      v326 = *(float *)(v324 + 56);
                      if (v325 == *(_DWORD *)v305
                        && *(_DWORD *)(v324 + 4) == *((_DWORD *)v305 + 1)
                        && *(_DWORD *)(v324 + 8) == *((_DWORD *)v305 + 2))
                      {
                        v327 = 180.0;
                        if (v326 >= 180.0)
                          v327 = -180.0;
                        v326 = v326 + v327;
                      }
                      v328 = v318;
                      if (*(_DWORD *)v316 == *(_DWORD *)v305)
                      {
                        v328 = v318;
                        if (*(_DWORD *)(v316 + 4) == *((_DWORD *)v305 + 1))
                        {
                          if (*(_DWORD *)(v316 + 8) == *((_DWORD *)v305 + 2))
                            v329 = v321;
                          else
                            v329 = -0.0;
                          v328 = v318 + v329;
                        }
                      }
                      v290 = v322;
                    }
                    while (v326 < v328);
                    *v322 = result;
                  }
                }
              }
            }
            while (v284-- > 2);
          }
          return result;
        }
        v12 = (unint64_t)v11 >> 1;
        v13 = &v9[(unint64_t)v11 >> 1];
        v14 = (int *)a3[1];
        v15 = **a3;
        if ((unint64_t)v10 < 0x201)
        {
          result = (unint64_t)sub_223A1FA00(v13, v8, v358, v15, v14);
        }
        else
        {
          sub_223A1FA00(v8, v13, v358, v15, v14);
          v16 = &v8[v12];
          sub_223A1FA00(v8 + 1, v16 - 1, v356, **a3, (int *)a3[1]);
          sub_223A1FA00(v8 + 2, &v8[v12 + 1], v355, **a3, (int *)a3[1]);
          result = (unint64_t)sub_223A1FA00(v16 - 1, v13, &v8[v12 + 1], **a3, (int *)a3[1]);
          v17 = *v8;
          *v8 = *v16;
          *v16 = v17;
          a2 = v357;
        }
        --a4;
        v18 = a3[1];
        v19 = *v8;
        v20 = **a3;
        v21 = *(_DWORD *)v18;
        if ((a5 & 1) != 0)
        {
          v22 = v20 + 96 * v19;
          v23 = *(float *)(v22 + 76);
          v24 = *(_DWORD *)(v22 + 20);
LABEL_26:
          v37 = v20 + 96 * v19;
          v31 = (int *)(v37 + 20);
          v34 = (int *)v18 + 1;
          v38 = v18 + 1;
          v39 = (_DWORD *)(v37 + 28);
          v40 = 180.0;
          if (v23 >= 180.0)
            v40 = -180.0;
          v41 = v8;
          if (v24 == v21)
          {
            v33 = *v34;
            v41 = v8;
            if (v31[1] == *v34)
              goto LABEL_44;
            goto LABEL_49;
          }
          do
          {
            v43 = v41[1];
            ++v41;
            v42 = v43;
            v44 = v20 + 96 * v43;
            v46 = *(_DWORD *)(v44 + 20);
            v45 = v44 + 20;
            v47 = *(float *)(v45 + 56);
            if (v46 == v21 && *(_DWORD *)(v45 + 4) == *v34 && *(_DWORD *)(v45 + 8) == *v38)
            {
              v48 = 180.0;
              if (v47 >= 180.0)
                v48 = -180.0;
              v47 = v47 + v48;
            }
          }
          while (v47 < v23);
          v49 = 0;
          v50 = a2;
          if (v41 - 1 != v8)
            goto LABEL_67;
LABEL_65:
          v50 = a2;
          do
          {
            if (v41 >= v50)
              break;
            v73 = *--v50;
            v74 = v20 + 96 * v73;
            v76 = *(_DWORD *)(v74 + 20);
            v75 = v74 + 20;
            v77 = *(float *)(v75 + 56);
            if (v76 == v21 && *(_DWORD *)(v75 + 4) == *v34 && *(_DWORD *)(v75 + 8) == *v38)
            {
              v78 = 180.0;
              if (v77 >= 180.0)
                v78 = -180.0;
              v77 = v77 + v78;
            }
            v79 = v23;
            if (v49)
            {
              v79 = v23;
              if (v31[1] == *v34)
              {
                if (*v39 == *v38)
                  v80 = v40;
                else
                  v80 = -0.0;
                v79 = v23 + v80;
              }
            }
          }
          while (v77 >= v79);
          goto LABEL_93;
        }
        v25 = v20 + 96 * *(v8 - 1);
        v27 = *(_DWORD *)(v25 + 20);
        v26 = v25 + 20;
        v28 = *(float *)(v26 + 56);
        if (v27 == v21 && *(_DWORD *)(v26 + 4) == *((_DWORD *)v18 + 1) && *(_DWORD *)(v26 + 8) == *((_DWORD *)v18 + 2))
        {
          v29 = 180.0;
          if (v28 >= 180.0)
            v29 = -180.0;
          v28 = v28 + v29;
        }
        v30 = v20 + 96 * v19;
        v32 = *(_DWORD *)(v30 + 20);
        v31 = (int *)(v30 + 20);
        v24 = v32;
        v23 = *((float *)v31 + 14);
        if (v32 != v21)
        {
          if (v28 < v23)
            goto LABEL_26;
LABEL_136:
          v36 = *((float *)v31 + 14);
          goto LABEL_137;
        }
        v34 = (int *)v18 + 1;
        v33 = *((_DWORD *)v18 + 1);
        result = v31[1];
        if ((_DWORD)result != v33)
        {
          if (v28 < v23)
            goto LABEL_41;
          goto LABEL_136;
        }
        v35 = 180.0;
        if (v23 >= 180.0)
          v35 = -180.0;
        if (v31[2] != *((_DWORD *)v18 + 2))
          v35 = -0.0;
        v36 = v23 + v35;
        if (v28 >= v36)
        {
LABEL_137:
          v110 = v20 + 96 * *v358;
          v112 = *(_DWORD *)(v110 + 20);
          v111 = v110 + 20;
          v113 = *(float *)(v111 + 56);
          if (v112 == v21
            && *(_DWORD *)(v111 + 4) == *((_DWORD *)v18 + 1)
            && *(_DWORD *)(v111 + 8) == *((_DWORD *)v18 + 2))
          {
            v114 = 180.0;
            if (v113 >= 180.0)
              v114 = -180.0;
            v113 = v113 + v114;
          }
          if (v36 >= v113)
          {
            v131 = 180.0;
            if (v23 >= 180.0)
              v131 = -180.0;
            v132 = v8 + 1;
            if (v24 == v21)
            {
              do
              {
                v9 = v132;
                if (v132 >= a2)
                  break;
                v133 = *((_DWORD *)v18 + 1);
                v134 = *((float *)v31 + 14);
                if (v31[1] == v133)
                {
                  if (v31[2] == *((_DWORD *)v18 + 2))
                    v135 = v131;
                  else
                    v135 = -0.0;
                  v134 = v23 + v135;
                }
                v136 = v20 + 96 * *v9;
                v138 = *(_DWORD *)(v136 + 20);
                v137 = v136 + 20;
                v139 = *(float *)(v137 + 56);
                if (v138 == v21 && *(_DWORD *)(v137 + 4) == v133 && *(_DWORD *)(v137 + 8) == *((_DWORD *)v18 + 2))
                {
                  v140 = 180.0;
                  if (v139 >= 180.0)
                    v140 = -180.0;
                  v139 = v139 + v140;
                }
                v132 = v9 + 1;
              }
              while (v134 >= v139);
            }
            else
            {
              do
              {
                v9 = v132;
                if (v132 >= a2)
                  break;
                v141 = v20 + 96 * *v132;
                v143 = *(_DWORD *)(v141 + 20);
                v142 = v141 + 20;
                v144 = *(float *)(v142 + 56);
                if (v143 == v21
                  && *(_DWORD *)(v142 + 4) == *((_DWORD *)v18 + 1)
                  && *(_DWORD *)(v142 + 8) == *((_DWORD *)v18 + 2))
                {
                  v145 = 180.0;
                  if (v144 >= 180.0)
                    v145 = -180.0;
                  v144 = v144 + v145;
                }
                v132 = v9 + 1;
              }
              while (v23 >= v144);
            }
          }
          else
          {
            v115 = 180.0;
            if (v23 >= 180.0)
              v115 = -180.0;
            v9 = v8;
            if (v24 == v21)
            {
              v116 = *((_DWORD *)v18 + 1);
              v9 = v8;
              do
              {
                v123 = *((float *)v31 + 14);
                if (v31[1] == v116)
                {
                  if (v31[2] == *((_DWORD *)v18 + 2))
                    v124 = v115;
                  else
                    v124 = -0.0;
                  v123 = v23 + v124;
                }
                v125 = v9[1];
                ++v9;
                v126 = v20 + 96 * v125;
                v128 = *(_DWORD *)(v126 + 20);
                v127 = v126 + 20;
                v129 = *(float *)(v127 + 56);
                if (v128 == v21 && *(_DWORD *)(v127 + 4) == v116 && *(_DWORD *)(v127 + 8) == *((_DWORD *)v18 + 2))
                {
                  v130 = 180.0;
                  if (v129 >= 180.0)
                    v130 = -180.0;
                  v129 = v129 + v130;
                }
              }
              while (v123 >= v129);
            }
            else
            {
              do
              {
                v117 = v9[1];
                ++v9;
                v118 = v20 + 96 * v117;
                v120 = *(_DWORD *)(v118 + 20);
                v119 = v118 + 20;
                v121 = *(float *)(v119 + 56);
                if (v120 == v21
                  && *(_DWORD *)(v119 + 4) == *((_DWORD *)v18 + 1)
                  && *(_DWORD *)(v119 + 8) == *((_DWORD *)v18 + 2))
                {
                  v122 = 180.0;
                  if (v121 >= 180.0)
                    v122 = -180.0;
                  v121 = v121 + v122;
                }
              }
              while (v23 >= v121);
            }
          }
          v146 = a2;
          if (v9 < a2)
          {
            v147 = 180.0;
            if (v23 >= 180.0)
              v147 = -180.0;
            v146 = a2;
            do
            {
              v148 = *((float *)v31 + 14);
              if (v24 == v21)
              {
                v148 = *((float *)v31 + 14);
                if (v31[1] == *((_DWORD *)v18 + 1))
                {
                  if (v31[2] == *((_DWORD *)v18 + 2))
                    v149 = v147;
                  else
                    v149 = -0.0;
                  v148 = v23 + v149;
                }
              }
              v150 = *--v146;
              v151 = v20 + 96 * v150;
              v153 = *(_DWORD *)(v151 + 20);
              v152 = v151 + 20;
              v154 = *(float *)(v152 + 56);
              if (v153 == v21
                && *(_DWORD *)(v152 + 4) == *((_DWORD *)v18 + 1)
                && *(_DWORD *)(v152 + 8) == *((_DWORD *)v18 + 2))
              {
                v155 = 180.0;
                if (v154 >= 180.0)
                  v155 = -180.0;
                v154 = v154 + v155;
              }
            }
            while (v148 < v154);
          }
          if (v9 < v146)
          {
            v156 = 180.0;
            if (v23 >= 180.0)
              v156 = -180.0;
            v157 = *v9;
            v158 = *v146;
            do
            {
              *v9 = v158;
              *v146 = v157;
              v159 = *(float *)v31;
              v160 = *(_DWORD *)v18;
              if (*v31 == *(_DWORD *)v18)
              {
                v161 = *((_DWORD *)v18 + 1);
                do
                {
                  v168 = v23;
                  if (v31[1] == v161)
                  {
                    if (v31[2] == *((_DWORD *)v18 + 2))
                      v169 = v156;
                    else
                      v169 = -0.0;
                    v168 = v23 + v169;
                  }
                  v171 = v9[1];
                  ++v9;
                  v170 = v171;
                  v172 = v20 + 96 * v171;
                  v174 = *(_DWORD *)(v172 + 20);
                  v173 = v172 + 20;
                  v175 = *(float *)(v173 + 56);
                  if (v174 == LODWORD(v159)
                    && *(_DWORD *)(v173 + 4) == v161
                    && *(_DWORD *)(v173 + 8) == *((_DWORD *)v18 + 2))
                  {
                    v176 = 180.0;
                    if (v175 >= 180.0)
                      v176 = -180.0;
                    v175 = v175 + v176;
                  }
                }
                while (v168 >= v175);
                v157 = v170;
              }
              else
              {
                do
                {
                  v162 = v9[1];
                  ++v9;
                  v157 = v162;
                  v163 = v20 + 96 * v162;
                  v165 = *(_DWORD *)(v163 + 20);
                  v164 = v163 + 20;
                  v166 = *(float *)(v164 + 56);
                  if (v165 == v160
                    && *(_DWORD *)(v164 + 4) == *((_DWORD *)v18 + 1)
                    && *(_DWORD *)(v164 + 8) == *((_DWORD *)v18 + 2))
                  {
                    v167 = 180.0;
                    if (v166 >= 180.0)
                      v167 = -180.0;
                    v166 = v166 + v167;
                  }
                }
                while (v23 >= v166);
              }
              do
              {
                v177 = *--v146;
                v158 = v177;
                v178 = v23;
                if (LODWORD(v159) == v160)
                {
                  v178 = v23;
                  if (v31[1] == *((_DWORD *)v18 + 1))
                  {
                    if (v31[2] == *((_DWORD *)v18 + 2))
                      v179 = v156;
                    else
                      v179 = -0.0;
                    v178 = v23 + v179;
                  }
                }
                v180 = v20 + 96 * v158;
                v182 = *(_DWORD *)(v180 + 20);
                v181 = v180 + 20;
                result = v182;
                v183 = *(float *)(v181 + 56);
                if (v182 == v160)
                {
                  result = *(unsigned int *)(v181 + 4);
                  if ((_DWORD)result == *((_DWORD *)v18 + 1))
                  {
                    result = *((unsigned int *)v18 + 2);
                    if (*(_DWORD *)(v181 + 8) == (_DWORD)result)
                    {
                      v184 = 180.0;
                      if (v183 >= 180.0)
                        v184 = -180.0;
                      v183 = v183 + v184;
                    }
                  }
                }
              }
              while (v178 < v183);
            }
            while (v9 < v146);
          }
          v185 = v9 - 1;
          if (v9 - 1 != v8)
            *v8 = *v185;
          a5 = 0;
          *v185 = v19;
          continue;
        }
LABEL_41:
        v38 = v18 + 1;
        v39 = v31 + 2;
        v40 = 180.0;
        if (v23 >= 180.0)
          v40 = -180.0;
        v41 = v8;
        if ((_DWORD)result != v33)
        {
          do
          {
LABEL_49:
            v53 = v41[1];
            ++v41;
            v42 = v53;
            v54 = v20 + 96 * v53;
            v56 = *(_DWORD *)(v54 + 20);
            v55 = v54 + 20;
            v57 = *(float *)(v55 + 56);
            if (v56 == v21 && *(_DWORD *)(v55 + 4) == v33 && *(_DWORD *)(v55 + 8) == *v38)
            {
              v58 = 180.0;
              if (v57 >= 180.0)
                v58 = -180.0;
              v57 = v57 + v58;
            }
          }
          while (v57 < v23);
          v49 = 1;
          v50 = a2;
          if (v41 - 1 != v8)
            goto LABEL_67;
          goto LABEL_65;
        }
LABEL_44:
        if (*v39 == *v38)
          v51 = v40;
        else
          v51 = -0.0;
        v52 = v23 + v51;
        v41 = v8;
        do
        {
          v59 = v41[1];
          ++v41;
          v42 = v59;
          v60 = v20 + 96 * v59;
          v62 = *(_DWORD *)(v60 + 20);
          v61 = v60 + 20;
          v63 = *(float *)(v61 + 56);
          if (v62 == v21 && *(_DWORD *)(v61 + 4) == v33 && *(_DWORD *)(v61 + 8) == *v38)
          {
            v64 = 180.0;
            if (v63 >= 180.0)
              v64 = -180.0;
            v63 = v63 + v64;
          }
        }
        while (v63 < v52);
        v49 = 1;
        v50 = a2;
        if (v41 - 1 == v8)
          goto LABEL_65;
        do
        {
LABEL_67:
          v65 = *--v50;
          v66 = v20 + 96 * v65;
          v68 = *(_DWORD *)(v66 + 20);
          v67 = v66 + 20;
          v69 = *(float *)(v67 + 56);
          if (v68 == v21 && *(_DWORD *)(v67 + 4) == *v34 && *(_DWORD *)(v67 + 8) == *v38)
          {
            v70 = 180.0;
            if (v69 >= 180.0)
              v70 = -180.0;
            v69 = v69 + v70;
          }
          v71 = v23;
          if (v49)
          {
            v71 = v23;
            if (v31[1] == *v34)
            {
              if (*v39 == *v38)
                v72 = v40;
              else
                v72 = -0.0;
              v71 = v23 + v72;
            }
          }
        }
        while (v69 >= v71);
LABEL_93:
        v9 = v41;
        if (v41 < v50)
        {
          v81 = *v50;
          v82 = v42;
          v9 = v41;
          v83 = v50;
          do
          {
            *v9 = v81;
            *v83 = v82;
            v84 = *(_DWORD *)v18;
            if (*v31 == *(_DWORD *)v18)
            {
              v85 = *v34;
              do
              {
                v92 = v9[1];
                ++v9;
                v82 = v92;
                v93 = v20 + 96 * v92;
                v95 = *(_DWORD *)(v93 + 20);
                v94 = v93 + 20;
                v96 = *(float *)(v94 + 56);
                if (v95 == v84 && *(_DWORD *)(v94 + 4) == v85 && *(_DWORD *)(v94 + 8) == *v38)
                {
                  v97 = 180.0;
                  if (v96 >= 180.0)
                    v97 = -180.0;
                  v96 = v96 + v97;
                }
                v98 = v23;
                if (v31[1] == v85)
                {
                  if (*v39 == *v38)
                    v99 = v40;
                  else
                    v99 = -0.0;
                  v98 = v23 + v99;
                }
              }
              while (v96 < v98);
            }
            else
            {
              do
              {
                v86 = v9[1];
                ++v9;
                v82 = v86;
                v87 = v20 + 96 * v86;
                v89 = *(_DWORD *)(v87 + 20);
                v88 = v87 + 20;
                v90 = *(float *)(v88 + 56);
                if (v89 == v84 && *(_DWORD *)(v88 + 4) == *v34 && *(_DWORD *)(v88 + 8) == *v38)
                {
                  v91 = 180.0;
                  if (v90 >= 180.0)
                    v91 = -180.0;
                  v90 = v90 + v91;
                }
              }
              while (v90 < v23);
            }
            do
            {
              v100 = *--v83;
              v81 = v100;
              v101 = v20 + 96 * v100;
              v103 = *(_DWORD *)(v101 + 20);
              v102 = v101 + 20;
              v104 = *(float *)(v102 + 56);
              if (v103 == v84 && *(_DWORD *)(v102 + 4) == *v34 && *(_DWORD *)(v102 + 8) == *v38)
              {
                v105 = 180.0;
                if (v104 >= 180.0)
                  v105 = -180.0;
                v104 = v104 + v105;
              }
              v106 = v23;
              if (*v31 == v84)
              {
                v106 = v23;
                if (v31[1] == *v34)
                {
                  if (*v39 == *v38)
                    v107 = v40;
                  else
                    v107 = -0.0;
                  v106 = v23 + v107;
                }
              }
            }
            while (v104 >= v106);
          }
          while (v9 < v83);
        }
        v108 = v9 - 1;
        if (v9 - 1 != v8)
          *v8 = *v108;
        *v108 = v19;
        if (v41 < v50)
        {
LABEL_135:
          result = sub_223A1DF24(v8, v9 - 1, a3, a4, a5 & 1);
          a5 = 0;
          continue;
        }
        v109 = sub_223A1FDA0(v8, v9 - 1, a3);
        result = sub_223A1FDA0(v9, a2, a3);
        if (!(_DWORD)result)
        {
          if (v109)
            continue;
          goto LABEL_135;
        }
        a2 = v9 - 1;
        if (!v109)
          goto LABEL_2;
        return result;
    }
  }
}

unsigned int *sub_223A1F6A0(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, unsigned int *a5, uint64_t **a6)
{
  unsigned int *result;
  unsigned int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  float v24;
  float v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  float v30;
  float v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  float v35;
  float v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  float v41;
  float v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  float v46;
  float v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  float v52;
  float v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  float v57;
  float v58;

  result = sub_223A2017C(a1, a2, a3, a4, a6);
  v13 = *a4;
  v14 = a6[1];
  v15 = **a6;
  v16 = v15 + 96 * *a5;
  v18 = *(_DWORD *)(v16 + 20);
  v17 = v16 + 20;
  v19 = *(float *)(v17 + 56);
  if (v18 == *(_DWORD *)v14
    && *(_DWORD *)(v17 + 4) == *((_DWORD *)v14 + 1)
    && *(_DWORD *)(v17 + 8) == *((_DWORD *)v14 + 2))
  {
    v20 = 180.0;
    if (v19 >= 180.0)
      v20 = -180.0;
    v19 = v19 + v20;
  }
  v21 = v15 + 96 * v13;
  v23 = *(_DWORD *)(v21 + 20);
  v22 = v21 + 20;
  v24 = *(float *)(v22 + 56);
  if (v23 == *(_DWORD *)v14
    && *(_DWORD *)(v22 + 4) == *((_DWORD *)v14 + 1)
    && *(_DWORD *)(v22 + 8) == *((_DWORD *)v14 + 2))
  {
    v25 = 180.0;
    if (v24 >= 180.0)
      v25 = -180.0;
    v24 = v24 + v25;
  }
  if (v19 < v24)
  {
    *a4 = *a5;
    *a5 = v13;
    v26 = *a3;
    v27 = v15 + 96 * *a4;
    v29 = *(_DWORD *)(v27 + 20);
    v28 = v27 + 20;
    v30 = *(float *)(v28 + 56);
    if (v29 == *(_DWORD *)v14
      && *(_DWORD *)(v28 + 4) == *((_DWORD *)v14 + 1)
      && *(_DWORD *)(v28 + 8) == *((_DWORD *)v14 + 2))
    {
      v31 = 180.0;
      if (v30 >= 180.0)
        v31 = -180.0;
      v30 = v30 + v31;
    }
    v32 = v15 + 96 * v26;
    v34 = *(_DWORD *)(v32 + 20);
    v33 = v32 + 20;
    v35 = *(float *)(v33 + 56);
    if (v34 == *(_DWORD *)v14
      && *(_DWORD *)(v33 + 4) == *((_DWORD *)v14 + 1)
      && *(_DWORD *)(v33 + 8) == *((_DWORD *)v14 + 2))
    {
      v36 = 180.0;
      if (v35 >= 180.0)
        v36 = -180.0;
      v35 = v35 + v36;
    }
    if (v30 < v35)
    {
      *a3 = *a4;
      *a4 = v26;
      v37 = *a2;
      v38 = v15 + 96 * *a3;
      v40 = *(_DWORD *)(v38 + 20);
      v39 = v38 + 20;
      v41 = *(float *)(v39 + 56);
      if (v40 == *(_DWORD *)v14
        && *(_DWORD *)(v39 + 4) == *((_DWORD *)v14 + 1)
        && *(_DWORD *)(v39 + 8) == *((_DWORD *)v14 + 2))
      {
        v42 = 180.0;
        if (v41 >= 180.0)
          v42 = -180.0;
        v41 = v41 + v42;
      }
      v43 = v15 + 96 * v37;
      v45 = *(_DWORD *)(v43 + 20);
      v44 = v43 + 20;
      v46 = *(float *)(v44 + 56);
      if (v45 == *(_DWORD *)v14
        && *(_DWORD *)(v44 + 4) == *((_DWORD *)v14 + 1)
        && *(_DWORD *)(v44 + 8) == *((_DWORD *)v14 + 2))
      {
        v47 = 180.0;
        if (v46 >= 180.0)
          v47 = -180.0;
        v46 = v46 + v47;
      }
      if (v41 < v46)
      {
        *a2 = *a3;
        *a3 = v37;
        v48 = *a1;
        v49 = v15 + 96 * *a2;
        v51 = *(_DWORD *)(v49 + 20);
        v50 = v49 + 20;
        v52 = *(float *)(v50 + 56);
        if (v51 == *(_DWORD *)v14
          && *(_DWORD *)(v50 + 4) == *((_DWORD *)v14 + 1)
          && *(_DWORD *)(v50 + 8) == *((_DWORD *)v14 + 2))
        {
          v53 = 180.0;
          if (v52 >= 180.0)
            v53 = -180.0;
          v52 = v52 + v53;
        }
        v54 = v15 + 96 * v48;
        v56 = *(_DWORD *)(v54 + 20);
        v55 = v54 + 20;
        v57 = *(float *)(v55 + 56);
        if (v56 == *(_DWORD *)v14
          && *(_DWORD *)(v55 + 4) == *((_DWORD *)v14 + 1)
          && *(_DWORD *)(v55 + 8) == *((_DWORD *)v14 + 2))
        {
          v58 = 180.0;
          if (v57 >= 180.0)
            v58 = -180.0;
          v57 = v57 + v58;
        }
        if (v52 < v57)
        {
          *a1 = *a2;
          *a2 = v48;
        }
      }
    }
  }
  return result;
}

unsigned int *sub_223A1FA00(unsigned int *result, unsigned int *a2, unsigned int *a3, uint64_t a4, int *a5)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  float v11;
  int v12;
  float v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  float v18;
  float v19;
  float v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  float v35;
  float v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  float v40;
  float v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  float v45;
  float v46;
  float v47;

  v5 = *a2;
  v6 = *result;
  v7 = a4 + 96 * *a2;
  v10 = *(_DWORD *)(v7 + 20);
  v8 = v7 + 20;
  v9 = v10;
  v11 = *(float *)(v8 + 56);
  v12 = *a5;
  v13 = v11;
  if (v10 == *a5)
  {
    v13 = *(float *)(v8 + 56);
    if (*(_DWORD *)(v8 + 4) == a5[1])
    {
      v13 = *(float *)(v8 + 56);
      if (*(_DWORD *)(v8 + 8) == a5[2])
      {
        v14 = 180.0;
        if (v11 >= 180.0)
          v14 = -180.0;
        v13 = v11 + v14;
      }
    }
  }
  v15 = a4 + 96 * v6;
  v17 = *(_DWORD *)(v15 + 20);
  v16 = v15 + 20;
  v18 = *(float *)(v16 + 56);
  v19 = v18;
  if (v17 == v12)
  {
    v19 = *(float *)(v16 + 56);
    if (*(_DWORD *)(v16 + 4) == a5[1])
    {
      v19 = *(float *)(v16 + 56);
      if (*(_DWORD *)(v16 + 8) == a5[2])
      {
        v20 = 180.0;
        if (v18 >= 180.0)
          v20 = -180.0;
        v19 = v18 + v20;
      }
    }
  }
  v21 = *a3;
  v22 = a4 + 96 * *a3;
  v25 = *(_DWORD *)(v22 + 20);
  v23 = v22 + 20;
  v24 = v25;
  v26 = *(float *)(v23 + 56);
  if (v13 >= v19)
  {
    if (v24 == v12 && *(_DWORD *)(v23 + 4) == a5[1] && *(_DWORD *)(v23 + 8) == a5[2])
    {
      v29 = 180.0;
      if (v26 >= 180.0)
        v29 = -180.0;
      v26 = v26 + v29;
    }
    if (v9 == v12 && *(_DWORD *)(v8 + 4) == a5[1] && *(_DWORD *)(v8 + 8) == a5[2])
    {
      v30 = 180.0;
      if (v11 >= 180.0)
        v30 = -180.0;
      v11 = v11 + v30;
    }
    if (v26 < v11)
    {
      *a2 = v21;
      *a3 = v5;
      v31 = *result;
      v32 = a4 + 96 * *a2;
      v34 = *(_DWORD *)(v32 + 20);
      v33 = v32 + 20;
      v35 = *(float *)(v33 + 56);
      if (v34 == *a5 && *(_DWORD *)(v33 + 4) == a5[1] && *(_DWORD *)(v33 + 8) == a5[2])
      {
        v36 = 180.0;
        if (v35 >= 180.0)
          v36 = -180.0;
        v35 = v35 + v36;
      }
      v37 = a4 + 96 * v31;
      v39 = *(_DWORD *)(v37 + 20);
      v38 = v37 + 20;
      v40 = *(float *)(v38 + 56);
      if (v39 == *a5 && *(_DWORD *)(v38 + 4) == a5[1] && *(_DWORD *)(v38 + 8) == a5[2])
      {
        v41 = 180.0;
        if (v40 >= 180.0)
          v41 = -180.0;
        v40 = v40 + v41;
      }
      if (v35 < v40)
      {
        *result = *a2;
        *a2 = v31;
      }
    }
  }
  else
  {
    if (v24 == v12 && *(_DWORD *)(v23 + 4) == a5[1] && *(_DWORD *)(v23 + 8) == a5[2])
    {
      v27 = 180.0;
      if (v26 >= 180.0)
        v27 = -180.0;
      v26 = v26 + v27;
    }
    if (v9 == v12 && *(_DWORD *)(v8 + 4) == a5[1] && *(_DWORD *)(v8 + 8) == a5[2])
    {
      v28 = 180.0;
      if (v11 >= 180.0)
        v28 = -180.0;
      v11 = v11 + v28;
    }
    if (v26 < v11)
    {
      *result = v21;
LABEL_69:
      *a3 = v6;
      return result;
    }
    *result = v5;
    *a2 = v6;
    v42 = a4 + 96 * *a3;
    v44 = *(_DWORD *)(v42 + 20);
    v43 = v42 + 20;
    v45 = *(float *)(v43 + 56);
    if (v44 == *a5 && *(_DWORD *)(v43 + 4) == a5[1] && *(_DWORD *)(v43 + 8) == a5[2])
    {
      v46 = 180.0;
      if (v45 >= 180.0)
        v46 = -180.0;
      v45 = v45 + v46;
    }
    if (*(_DWORD *)v16 == *a5 && *(_DWORD *)(v16 + 4) == a5[1] && *(_DWORD *)(v16 + 8) == a5[2])
    {
      v47 = 180.0;
      if (v18 >= 180.0)
        v47 = -180.0;
      v18 = v18 + v47;
    }
    if (v45 < v18)
    {
      *a2 = *a3;
      goto LABEL_69;
    }
  }
  return result;
}

BOOL sub_223A1FDA0(unsigned int *a1, unsigned int *a2, uint64_t **a3)
{
  uint64_t v6;
  _BOOL8 result;
  unsigned int *v8;
  unsigned int *v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  float v18;
  float v19;
  float v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  float v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  float v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  float v35;
  float v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  float v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  float v49;
  float v50;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v37 = *(a2 - 1);
      v38 = *a1;
      v39 = a3[1];
      v40 = **a3;
      v41 = v40 + 96 * v37;
      v43 = *(_DWORD *)(v41 + 20);
      v42 = v41 + 20;
      v44 = *(float *)(v42 + 56);
      if (v43 == *(_DWORD *)v39
        && *(_DWORD *)(v42 + 4) == *((_DWORD *)v39 + 1)
        && *(_DWORD *)(v42 + 8) == *((_DWORD *)v39 + 2))
      {
        v45 = 180.0;
        if (v44 >= 180.0)
          v45 = -180.0;
        v44 = v44 + v45;
      }
      v46 = v40 + 96 * v38;
      v48 = *(_DWORD *)(v46 + 20);
      v47 = v46 + 20;
      v49 = *(float *)(v47 + 56);
      if (v48 == *(_DWORD *)v39
        && *(_DWORD *)(v47 + 4) == *((_DWORD *)v39 + 1)
        && *(_DWORD *)(v47 + 8) == *((_DWORD *)v39 + 2))
      {
        v50 = 180.0;
        if (v49 >= 180.0)
          v50 = -180.0;
        v49 = v49 + v50;
      }
      if (v44 < v49)
      {
        *a1 = v37;
        *(a2 - 1) = v38;
      }
      return result;
    case 3:
      sub_223A1FA00(a1, a1 + 1, a2 - 1, **a3, (int *)a3[1]);
      return 1;
    case 4:
      sub_223A2017C(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      sub_223A1F6A0(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      v8 = a1 + 2;
      sub_223A1FA00(a1, a1 + 1, a1 + 2, **a3, (int *)a3[1]);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = a3[1];
      v12 = **a3;
      v13 = 12;
      break;
  }
  while (1)
  {
    v14 = *v9;
    v15 = v12 + 96 * *v9;
    v17 = *(_DWORD *)(v15 + 20);
    v16 = v15 + 20;
    v18 = *(float *)(v16 + 56);
    v19 = v18;
    if (v17 == *(_DWORD *)v11)
    {
      v19 = *(float *)(v16 + 56);
      if (*(_DWORD *)(v16 + 4) == *((_DWORD *)v11 + 1))
      {
        v19 = *(float *)(v16 + 56);
        if (*(_DWORD *)(v16 + 8) == *((_DWORD *)v11 + 2))
        {
          v20 = 180.0;
          if (v18 >= 180.0)
            v20 = -180.0;
          v19 = v18 + v20;
        }
      }
    }
    v21 = *v8;
    v22 = v12 + 96 * *v8;
    v24 = *(_DWORD *)(v22 + 20);
    v23 = v22 + 20;
    v25 = *(float *)(v23 + 56);
    if (v24 == *(_DWORD *)v11
      && *(_DWORD *)(v23 + 4) == *((_DWORD *)v11 + 1)
      && *(_DWORD *)(v23 + 8) == *((_DWORD *)v11 + 2))
    {
      v26 = 180.0;
      if (v25 >= 180.0)
        v26 = -180.0;
      v25 = v25 + v26;
    }
    if (v19 < v25)
      break;
LABEL_40:
    v8 = v9;
    v13 += 4;
    if (++v9 == a2)
      return 1;
  }
  v27 = 180.0;
  if (v18 >= 180.0)
    v27 = -180.0;
  v28 = v13;
  do
  {
    *(unsigned int *)((char *)a1 + v28) = v21;
    v29 = v28 - 4;
    if (v28 == 4)
    {
      *a1 = v14;
      if (++v10 != 8)
        goto LABEL_40;
      return v9 + 1 == a2;
    }
    v30 = v18;
    if (*(_DWORD *)v16 == *(_DWORD *)v11)
    {
      v30 = v18;
      if (*(_DWORD *)(v16 + 4) == *((_DWORD *)v11 + 1))
      {
        if (*(_DWORD *)(v16 + 8) == *((_DWORD *)v11 + 2))
          v31 = v27;
        else
          v31 = -0.0;
        v30 = v18 + v31;
      }
    }
    v21 = *(unsigned int *)((char *)a1 + v28 - 8);
    v32 = v12 + 96 * v21;
    v34 = *(_DWORD *)(v32 + 20);
    v33 = v32 + 20;
    v35 = *(float *)(v33 + 56);
    if (v34 == *(_DWORD *)v11
      && *(_DWORD *)(v33 + 4) == *((_DWORD *)v11 + 1)
      && *(_DWORD *)(v33 + 8) == *((_DWORD *)v11 + 2))
    {
      v36 = 180.0;
      if (v35 >= 180.0)
        v36 = -180.0;
      v35 = v35 + v36;
    }
    v28 = v29;
  }
  while (v30 < v35);
  *(unsigned int *)((char *)a1 + v29) = v14;
  if (++v10 != 8)
    goto LABEL_40;
  return v9 + 1 == a2;
}

unsigned int *sub_223A2017C(unsigned int *a1, unsigned int *a2, unsigned int *a3, unsigned int *a4, uint64_t **a5)
{
  unsigned int *result;
  unsigned int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  float v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  float v22;
  float v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  float v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  float v33;
  float v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  float v39;
  float v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  float v44;
  float v45;

  result = sub_223A1FA00(a1, a2, a3, **a5, (int *)a5[1]);
  v11 = *a3;
  v12 = a5[1];
  v13 = **a5;
  v14 = v13 + 96 * *a4;
  v16 = *(_DWORD *)(v14 + 20);
  v15 = v14 + 20;
  v17 = *(float *)(v15 + 56);
  if (v16 == *(_DWORD *)v12
    && *(_DWORD *)(v15 + 4) == *((_DWORD *)v12 + 1)
    && *(_DWORD *)(v15 + 8) == *((_DWORD *)v12 + 2))
  {
    v18 = 180.0;
    if (v17 >= 180.0)
      v18 = -180.0;
    v17 = v17 + v18;
  }
  v19 = v13 + 96 * v11;
  v21 = *(_DWORD *)(v19 + 20);
  v20 = v19 + 20;
  v22 = *(float *)(v20 + 56);
  if (v21 == *(_DWORD *)v12
    && *(_DWORD *)(v20 + 4) == *((_DWORD *)v12 + 1)
    && *(_DWORD *)(v20 + 8) == *((_DWORD *)v12 + 2))
  {
    v23 = 180.0;
    if (v22 >= 180.0)
      v23 = -180.0;
    v22 = v22 + v23;
  }
  if (v17 < v22)
  {
    *a3 = *a4;
    *a4 = v11;
    v24 = *a2;
    v25 = v13 + 96 * *a3;
    v27 = *(_DWORD *)(v25 + 20);
    v26 = v25 + 20;
    v28 = *(float *)(v26 + 56);
    if (v27 == *(_DWORD *)v12
      && *(_DWORD *)(v26 + 4) == *((_DWORD *)v12 + 1)
      && *(_DWORD *)(v26 + 8) == *((_DWORD *)v12 + 2))
    {
      v29 = 180.0;
      if (v28 >= 180.0)
        v29 = -180.0;
      v28 = v28 + v29;
    }
    v30 = v13 + 96 * v24;
    v32 = *(_DWORD *)(v30 + 20);
    v31 = v30 + 20;
    v33 = *(float *)(v31 + 56);
    if (v32 == *(_DWORD *)v12
      && *(_DWORD *)(v31 + 4) == *((_DWORD *)v12 + 1)
      && *(_DWORD *)(v31 + 8) == *((_DWORD *)v12 + 2))
    {
      v34 = 180.0;
      if (v33 >= 180.0)
        v34 = -180.0;
      v33 = v33 + v34;
    }
    if (v28 < v33)
    {
      *a2 = *a3;
      *a3 = v24;
      v35 = *a1;
      v36 = v13 + 96 * *a2;
      v38 = *(_DWORD *)(v36 + 20);
      v37 = v36 + 20;
      v39 = *(float *)(v37 + 56);
      if (v38 == *(_DWORD *)v12
        && *(_DWORD *)(v37 + 4) == *((_DWORD *)v12 + 1)
        && *(_DWORD *)(v37 + 8) == *((_DWORD *)v12 + 2))
      {
        v40 = 180.0;
        if (v39 >= 180.0)
          v40 = -180.0;
        v39 = v39 + v40;
      }
      v41 = v13 + 96 * v35;
      v43 = *(_DWORD *)(v41 + 20);
      v42 = v41 + 20;
      v44 = *(float *)(v42 + 56);
      if (v43 == *(_DWORD *)v12
        && *(_DWORD *)(v42 + 4) == *((_DWORD *)v12 + 1)
        && *(_DWORD *)(v42 + 8) == *((_DWORD *)v12 + 2))
      {
        v45 = 180.0;
        if (v44 >= 180.0)
          v45 = -180.0;
        v44 = v44 + v45;
      }
      if (v39 < v44)
      {
        *a1 = *a2;
        *a2 = v35;
      }
    }
  }
  return result;
}

unint64_t sub_223A20418(uint64_t a1, float32x2_t *a2, unsigned int a3, float32x4_t a4, float a5, float a6)
{
  unsigned __int8 *v8;
  float32x4_t v9;
  float32x2_t v10;
  float32x2_t v16;
  unint64_t *v17;
  float32x2_t *v18;
  float32x2_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  float32x2_t *v23;
  float32x2_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  float32x2_t *v28;
  float32x2_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  float32x2_t *v34;
  float32x2_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  float32x2_t *v40;
  float32x2_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  float32x2_t v45;
  float32x2_t v46;
  float32x2_t *v47;
  float32x2_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  float32x2_t *v52;
  float32x2_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  float32x2_t *v57;
  float32x2_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  float32x2_t *v62;
  float32x2_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  float32x2_t *v67;
  float32x2_t v68;
  unint64_t v69;
  unint64_t result;
  uint64_t v71;
  uint64_t v72;
  __int32 v73;
  float32x2_t v74;
  __int32 v75;

  v8 = (unsigned __int8 *)&unk_22465395B + 3 * a3;
  if (a3 >= 0x21)
    v8 = (unsigned __int8 *)&unk_224653958;
  a4.i8[0] = *v8;
  a4.f32[0] = (float)a4.u32[0];
  LOBYTE(a5) = v8[1];
  LOBYTE(a6) = v8[2];
  a4.f32[1] = (float)LODWORD(a5);
  a4.f32[2] = (float)LODWORD(a6);
  v9 = vdivq_f32(a4, (float32x4_t)vdupq_n_s32(0x437F0000u));
  v73 = v9.i32[2];
  v72 = v9.i64[0];
  v10 = vadd_f32(*a2, (float32x2_t)0x80000000BD4CCCCDLL);
  __asm { FMOV            V8.2S, #0.25 }
  v16 = vmul_f32(vsub_f32(vadd_f32(*a2, (float32x2_t)1028443341), v10), _D8);
  v17 = (unint64_t *)(a1 + 32);
  v74 = vadd_f32(v10, vmul_f32(v16, 0));
  v75 = 0;
  v18 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v18 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v20 = *(_QWORD *)(a1 + 40);
    if (v20 >= *(_QWORD *)(a1 + 48))
      goto LABEL_5;
  }
  else
  {
    v19 = v74;
    v18[1].i32[0] = v75;
    *v18 = v19;
    *(_QWORD *)(a1 + 8) = (char *)v18 + 12;
    v20 = *(_QWORD *)(a1 + 40);
    if (v20 >= *(_QWORD *)(a1 + 48))
    {
LABEL_5:
      v21 = sub_2233B2B48(v17, &v72);
      goto LABEL_8;
    }
  }
  v22 = v72;
  *(_DWORD *)(v20 + 8) = v73;
  *(_QWORD *)v20 = v22;
  v21 = v20 + 12;
LABEL_8:
  *(_QWORD *)(a1 + 40) = v21;
  v74 = vadd_f32(v10, v16);
  v75 = 0;
  v23 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v23 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v25 = *(_QWORD *)(a1 + 40);
    if (v25 >= *(_QWORD *)(a1 + 48))
      goto LABEL_10;
  }
  else
  {
    v24 = v74;
    v23[1].i32[0] = v75;
    *v23 = v24;
    *(_QWORD *)(a1 + 8) = (char *)v23 + 12;
    v25 = *(_QWORD *)(a1 + 40);
    if (v25 >= *(_QWORD *)(a1 + 48))
    {
LABEL_10:
      v26 = sub_2233B2B48(v17, &v72);
      goto LABEL_13;
    }
  }
  v27 = v72;
  *(_DWORD *)(v25 + 8) = v73;
  *(_QWORD *)v25 = v27;
  v26 = v25 + 12;
LABEL_13:
  *(_QWORD *)(a1 + 40) = v26;
  v74 = vadd_f32(v10, vadd_f32(v16, v16));
  v75 = 0;
  v28 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v28 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v30 = *(_QWORD *)(a1 + 40);
    if (v30 >= *(_QWORD *)(a1 + 48))
      goto LABEL_15;
  }
  else
  {
    v29 = v74;
    v28[1].i32[0] = v75;
    *v28 = v29;
    *(_QWORD *)(a1 + 8) = (char *)v28 + 12;
    v30 = *(_QWORD *)(a1 + 40);
    if (v30 >= *(_QWORD *)(a1 + 48))
    {
LABEL_15:
      v31 = sub_2233B2B48(v17, &v72);
      goto LABEL_18;
    }
  }
  v32 = v72;
  *(_DWORD *)(v30 + 8) = v73;
  *(_QWORD *)v30 = v32;
  v31 = v30 + 12;
LABEL_18:
  *(_QWORD *)(a1 + 40) = v31;
  __asm { FMOV            V9.2S, #3.0 }
  v74 = vadd_f32(v10, vmul_f32(v16, _D9));
  v75 = 0;
  v34 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v34 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v36 = *(_QWORD *)(a1 + 40);
    if (v36 >= *(_QWORD *)(a1 + 48))
      goto LABEL_20;
  }
  else
  {
    v35 = v74;
    v34[1].i32[0] = v75;
    *v34 = v35;
    *(_QWORD *)(a1 + 8) = (char *)v34 + 12;
    v36 = *(_QWORD *)(a1 + 40);
    if (v36 >= *(_QWORD *)(a1 + 48))
    {
LABEL_20:
      v37 = sub_2233B2B48(v17, &v72);
      goto LABEL_23;
    }
  }
  v38 = v72;
  *(_DWORD *)(v36 + 8) = v73;
  *(_QWORD *)v36 = v38;
  v37 = v36 + 12;
LABEL_23:
  *(_QWORD *)(a1 + 40) = v37;
  __asm { FMOV            V10.2S, #4.0 }
  v74 = vadd_f32(v10, vmul_f32(v16, _D10));
  v75 = 0;
  v40 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v40 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v42 = *(_QWORD *)(a1 + 40);
    if (v42 >= *(_QWORD *)(a1 + 48))
      goto LABEL_25;
  }
  else
  {
    v41 = v74;
    v40[1].i32[0] = v75;
    *v40 = v41;
    *(_QWORD *)(a1 + 8) = (char *)v40 + 12;
    v42 = *(_QWORD *)(a1 + 40);
    if (v42 >= *(_QWORD *)(a1 + 48))
    {
LABEL_25:
      v43 = sub_2233B2B48(v17, &v72);
      goto LABEL_28;
    }
  }
  v44 = v72;
  *(_DWORD *)(v42 + 8) = v73;
  *(_QWORD *)v42 = v44;
  v43 = v42 + 12;
LABEL_28:
  *(_QWORD *)(a1 + 40) = v43;
  *(_DWORD *)(a1 + 64) = 1;
  v45 = vadd_f32(*a2, (float32x2_t)0xBD4CCCCD80000000);
  v46 = vmul_f32(vsub_f32(vadd_f32(*a2, (float32x2_t)0x3D4CCCCD00000000), v45), _D8);
  v74 = vadd_f32(v45, vmul_f32(v46, 0));
  v75 = 0;
  v47 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v47 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v49 = *(_QWORD *)(a1 + 40);
    if (v49 >= *(_QWORD *)(a1 + 48))
      goto LABEL_30;
  }
  else
  {
    v48 = v74;
    v47[1].i32[0] = v75;
    *v47 = v48;
    *(_QWORD *)(a1 + 8) = (char *)v47 + 12;
    v49 = *(_QWORD *)(a1 + 40);
    if (v49 >= *(_QWORD *)(a1 + 48))
    {
LABEL_30:
      v50 = sub_2233B2B48(v17, &v72);
      goto LABEL_33;
    }
  }
  v51 = v72;
  *(_DWORD *)(v49 + 8) = v73;
  *(_QWORD *)v49 = v51;
  v50 = v49 + 12;
LABEL_33:
  *(_QWORD *)(a1 + 40) = v50;
  v74 = vadd_f32(v45, v46);
  v75 = 0;
  v52 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v52 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v54 = *(_QWORD *)(a1 + 40);
    if (v54 >= *(_QWORD *)(a1 + 48))
      goto LABEL_35;
  }
  else
  {
    v53 = v74;
    v52[1].i32[0] = v75;
    *v52 = v53;
    *(_QWORD *)(a1 + 8) = (char *)v52 + 12;
    v54 = *(_QWORD *)(a1 + 40);
    if (v54 >= *(_QWORD *)(a1 + 48))
    {
LABEL_35:
      v55 = sub_2233B2B48(v17, &v72);
      goto LABEL_38;
    }
  }
  v56 = v72;
  *(_DWORD *)(v54 + 8) = v73;
  *(_QWORD *)v54 = v56;
  v55 = v54 + 12;
LABEL_38:
  *(_QWORD *)(a1 + 40) = v55;
  v74 = vadd_f32(v45, vadd_f32(v46, v46));
  v75 = 0;
  v57 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v57 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v59 = *(_QWORD *)(a1 + 40);
    if (v59 >= *(_QWORD *)(a1 + 48))
      goto LABEL_40;
  }
  else
  {
    v58 = v74;
    v57[1].i32[0] = v75;
    *v57 = v58;
    *(_QWORD *)(a1 + 8) = (char *)v57 + 12;
    v59 = *(_QWORD *)(a1 + 40);
    if (v59 >= *(_QWORD *)(a1 + 48))
    {
LABEL_40:
      v60 = sub_2233B2B48(v17, &v72);
      goto LABEL_43;
    }
  }
  v61 = v72;
  *(_DWORD *)(v59 + 8) = v73;
  *(_QWORD *)v59 = v61;
  v60 = v59 + 12;
LABEL_43:
  *(_QWORD *)(a1 + 40) = v60;
  v74 = vadd_f32(v45, vmul_f32(v46, _D9));
  v75 = 0;
  v62 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v62 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v64 = *(_QWORD *)(a1 + 40);
    if (v64 >= *(_QWORD *)(a1 + 48))
      goto LABEL_45;
  }
  else
  {
    v63 = v74;
    v62[1].i32[0] = v75;
    *v62 = v63;
    *(_QWORD *)(a1 + 8) = (char *)v62 + 12;
    v64 = *(_QWORD *)(a1 + 40);
    if (v64 >= *(_QWORD *)(a1 + 48))
    {
LABEL_45:
      v65 = sub_2233B2B48(v17, &v72);
      goto LABEL_48;
    }
  }
  v66 = v72;
  *(_DWORD *)(v64 + 8) = v73;
  *(_QWORD *)v64 = v66;
  v65 = v64 + 12;
LABEL_48:
  *(_QWORD *)(a1 + 40) = v65;
  v74 = vadd_f32(v45, vmul_f32(v46, _D10));
  v75 = 0;
  v67 = *(float32x2_t **)(a1 + 8);
  if ((unint64_t)v67 >= *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 8) = sub_2233B2838((unint64_t *)a1, (uint64_t *)&v74);
    v69 = *(_QWORD *)(a1 + 40);
    if (v69 >= *(_QWORD *)(a1 + 48))
      goto LABEL_50;
LABEL_52:
    v71 = v72;
    *(_DWORD *)(v69 + 8) = v73;
    *(_QWORD *)v69 = v71;
    result = v69 + 12;
    goto LABEL_53;
  }
  v68 = v74;
  v67[1].i32[0] = v75;
  *v67 = v68;
  *(_QWORD *)(a1 + 8) = (char *)v67 + 12;
  v69 = *(_QWORD *)(a1 + 40);
  if (v69 < *(_QWORD *)(a1 + 48))
    goto LABEL_52;
LABEL_50:
  result = sub_2233B2B48(v17, &v72);
LABEL_53:
  *(_QWORD *)(a1 + 40) = result;
  *(_DWORD *)(a1 + 64) = 1;
  return result;
}

uint64_t sub_223A20A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t result;
  float32x4_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int *v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  _DWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  float *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  float *v54;
  uint64_t v55;
  uint64_t v56;
  float *v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  float v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int *v73;
  unsigned int *v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  float32x4_t v78;
  _DWORD *v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  float *v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  float *v104;
  uint64_t v105;
  uint64_t v106;
  float *v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  float32x4_t v118;
  uint64_t v119;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unsigned int v125;
  float32x4_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  float32x4_t v131;
  _QWORD *v132;
  int v133;
  _QWORD v134[2];

  result = sub_2241498F4(a2, 0);
  v7 = *(_QWORD **)(a1 + 40);
  v119 = a1;
  v112 = *(_QWORD **)(a1 + 48);
  if (v7 != v112)
  {
    v8 = (uint64_t *)(a2 + 32);
    __asm { FMOV            V0.4S, #19.0 }
    v118 = _Q0;
    do
    {
      v14 = v7[2] - v7[1];
      v121 = v7;
      if (v14)
      {
        v15 = 0;
        v116 = v14 >> 3;
        v124 = (unint64_t)v14 >> 3;
        do
        {
          if ((*(_BYTE *)(v7[7] + v15) - 1) > 3u)
          {
            v18 = 0;
            v17 = 1.0;
            v19 = 0;
          }
          else
          {
            v16 = 4 * (char)(*(_BYTE *)(v7[7] + v15) - 1);
            v17 = *(float *)((char *)&xmmword_224657FC0 + v16);
            v18 = *(_DWORD *)((char *)&unk_224657FD0 + v16);
            v19 = *(_DWORD *)((char *)&xmmword_224649660 + v16);
          }
          v20 = 0;
          v21 = v7[1];
          v22 = v7[2];
          v23 = (unsigned int *)(v21 + 8 * v15);
          v122 = v15 + 1;
          v24 = (unsigned int *)(v21 + 8 * ((v15 + 1) % (unint64_t)((v22 - v21) >> 3)));
          _Q0.i64[0] = *(_QWORD *)v119;
          _Q0.i32[2] = *(_DWORD *)(v119 + 8);
          v6.i64[0] = *(_QWORD *)(v119 + 12);
          v6.i32[2] = *(_DWORD *)(v119 + 20);
          v25 = vmulq_f32((float32x4_t)vdupq_n_s32(v23[1]), v6);
          v26 = vaddq_f32(vmulq_f32((float32x4_t)vdupq_n_s32(*v23), _Q0), v25);
          v25.i64[0] = *(_QWORD *)(v119 + 24);
          v25.i32[2] = *(_DWORD *)(v119 + 32);
          v27 = vmulq_n_f32(v25, a3);
          v28 = vaddq_f32(v26, v27);
          v128 = vdivq_f32(vsubq_f32(vaddq_f32(vaddq_f32(vmulq_f32((float32x4_t)vdupq_n_s32(*v24), _Q0), vmulq_f32((float32x4_t)vdupq_n_s32(v24[1]), v6)), v27), v28), v118);
          v130 = v28;
          do
          {
            _Q0 = vaddq_f32(v130, vmulq_n_f32(v128, (float)v20));
            v30 = *(_QWORD *)(a2 + 8);
            v31 = *(_QWORD *)(a2 + 16);
            if (v30 >= v31)
            {
              v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v30 - *(_QWORD *)a2) >> 2);
              v34 = v33 + 1;
              if (v33 + 1 > 0x1555555555555555)
                goto LABEL_102;
              v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - *(_QWORD *)a2) >> 2);
              if (2 * v35 > v34)
                v34 = 2 * v35;
              if (v35 >= 0xAAAAAAAAAAAAAAALL)
                v34 = 0x1555555555555555;
              if (v34)
              {
                LODWORD(v134[0]) = v34;
                v36 = *(unsigned int *)(a2 + 28);
                if ((_DWORD)v36 == -1)
                  goto LABEL_101;
                v126 = _Q0;
                v132 = v134;
                result = ((uint64_t (*)(_QWORD **, uint64_t))off_24EC5D768[v36])(&v132, a2 + 24);
                _Q0 = v126;
              }
              else
              {
                result = 0;
                v37 = 0;
              }
              v38 = result + 12 * v33;
              *(_QWORD *)v38 = _Q0.i64[0];
              *(_DWORD *)(v38 + 8) = _Q0.i32[2];
              v40 = *(_QWORD *)a2;
              v39 = *(_QWORD *)(a2 + 8);
              v41 = v38;
              if (v39 != *(_QWORD *)a2)
              {
                do
                {
                  v42 = *(_QWORD *)(v39 - 12);
                  v39 -= 12;
                  v43 = *(_DWORD *)(v39 + 8);
                  *(_QWORD *)(v41 - 12) = v42;
                  v41 -= 12;
                  *(_DWORD *)(v41 + 8) = v43;
                }
                while (v39 != v40);
                v39 = *(_QWORD *)a2;
              }
              v32 = v38 + 12;
              *(_QWORD *)a2 = v41;
              *(_QWORD *)(a2 + 8) = v38 + 12;
              v44 = *(_QWORD *)(a2 + 16);
              *(_QWORD *)(a2 + 16) = result + 12 * v37;
              if (v39)
              {
                v132 = (_QWORD *)v39;
                v133 = -1431655765 * ((unint64_t)(v44 - v39) >> 2);
                v45 = *(unsigned int *)(a2 + 28);
                if ((_DWORD)v45 == -1)
                  sub_22316DD70();
                v134[0] = &v132;
                result = ((uint64_t (*)(_QWORD *, uint64_t))off_24EC5D778[v45])(v134, a2 + 24);
              }
            }
            else
            {
              *(_DWORD *)(v30 + 8) = _Q0.i32[2];
              *(_QWORD *)v30 = _Q0.i64[0];
              v32 = v30 + 12;
            }
            *(_QWORD *)(a2 + 8) = v32;
            v47 = *(float **)(a2 + 40);
            v46 = *(_QWORD *)(a2 + 48);
            if ((unint64_t)v47 < v46)
            {
              *v47 = v17;
              *((_DWORD *)v47 + 1) = v18;
              v29 = v47 + 3;
              *((_DWORD *)v47 + 2) = v19;
            }
            else
            {
              v48 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v47 - *v8) >> 2);
              v49 = v48 + 1;
              if (v48 + 1 > 0x1555555555555555)
LABEL_102:
                sub_22316E078();
              v50 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v46 - *v8) >> 2);
              if (2 * v50 > v49)
                v49 = 2 * v50;
              if (v50 >= 0xAAAAAAAAAAAAAAALL)
                v51 = 0x1555555555555555;
              else
                v51 = v49;
              if (v51)
              {
                LODWORD(v134[0]) = v51;
                v52 = *(unsigned int *)(a2 + 60);
                if ((_DWORD)v52 == -1)
LABEL_101:
                  sub_22316DD70();
                v132 = v134;
                result = ((uint64_t (*)(_QWORD **, uint64_t))off_24EC5D768[v52])(&v132, a2 + 56);
              }
              else
              {
                result = 0;
                v53 = 0;
              }
              v54 = (float *)(result + 12 * v48);
              *v54 = v17;
              *((_DWORD *)v54 + 1) = v18;
              *((_DWORD *)v54 + 2) = v19;
              v56 = *(_QWORD *)(a2 + 32);
              v55 = *(_QWORD *)(a2 + 40);
              v57 = v54;
              if (v55 != v56)
              {
                do
                {
                  v58 = *(_QWORD *)(v55 - 12);
                  v55 -= 12;
                  v59 = *(_DWORD *)(v55 + 8);
                  *(_QWORD *)(v57 - 3) = v58;
                  v57 -= 3;
                  *((_DWORD *)v57 + 2) = v59;
                }
                while (v55 != v56);
                v55 = *v8;
              }
              v29 = v54 + 3;
              *(_QWORD *)(a2 + 32) = v57;
              *(_QWORD *)(a2 + 40) = v54 + 3;
              v60 = *(_QWORD *)(a2 + 48);
              *(_QWORD *)(a2 + 48) = result + 12 * v53;
              if (v55)
              {
                v132 = (_QWORD *)v55;
                v133 = -1431655765 * ((unint64_t)(v60 - v55) >> 2);
                v61 = *(unsigned int *)(a2 + 60);
                if ((_DWORD)v61 == -1)
                  sub_22316DD70();
                v134[0] = &v132;
                result = ((uint64_t (*)(_QWORD *, uint64_t))off_24EC5D778[v61])(v134, a2 + 56);
              }
            }
            *(_QWORD *)(a2 + 40) = v29;
            ++v20;
          }
          while (v20 != 20);
          *(_DWORD *)(a2 + 64) = 1;
          v7 = v121;
          v15 = v122;
        }
        while (v122 != v116);
        v14 = v124;
      }
      v63 = (_QWORD *)v7[4];
      v62 = (_QWORD *)v7[5];
      v113 = v62;
      while (v63 != v62)
      {
        v64 = v14;
        v65 = v63[1] - *v63;
        if (v65)
        {
          v66 = 0;
          v115 = v65 >> 3;
          v117 = v63;
          v67 = v64;
          v114 = v64 + ((unint64_t)v65 >> 3);
          do
          {
            v125 = v67;
            if ((*(_BYTE *)(v7[7] + v67) - 1) > 3u)
            {
              v70 = 0;
              v69 = 1.0;
              v71 = 0;
            }
            else
            {
              v68 = 4 * (char)(*(_BYTE *)(v7[7] + v67) - 1);
              v69 = *(float *)((char *)&xmmword_224657FC0 + v68);
              v70 = *(_DWORD *)((char *)&unk_224657FD0 + v68);
              v71 = *(_DWORD *)((char *)&xmmword_224649660 + v68);
            }
            v72 = 0;
            v73 = (unsigned int *)(*v63 + 8 * v66);
            v123 = v66 + 1;
            v74 = (unsigned int *)(*v63
                                 + 8 * ((v66 + 1) % (unint64_t)((uint64_t)(v63[1] - *v63) >> 3)));
            _Q0.i64[0] = *(_QWORD *)v119;
            _Q0.i32[2] = *(_DWORD *)(v119 + 8);
            v6.i64[0] = *(_QWORD *)(v119 + 12);
            v6.i32[2] = *(_DWORD *)(v119 + 20);
            v75 = vmulq_f32((float32x4_t)vdupq_n_s32(v73[1]), v6);
            v76 = vaddq_f32(vmulq_f32((float32x4_t)vdupq_n_s32(*v73), _Q0), v75);
            v75.i64[0] = *(_QWORD *)(v119 + 24);
            v75.i32[2] = *(_DWORD *)(v119 + 32);
            v77 = vmulq_n_f32(v75, a3);
            v78 = vaddq_f32(v76, v77);
            v129 = vdivq_f32(vsubq_f32(vaddq_f32(vaddq_f32(vmulq_f32((float32x4_t)vdupq_n_s32(*v74), _Q0), vmulq_f32((float32x4_t)vdupq_n_s32(v74[1]), v6)), v77), v78), v118);
            v131 = v78;
            do
            {
              _Q0 = vaddq_f32(v131, vmulq_n_f32(v129, (float)v72));
              v80 = *(_QWORD *)(a2 + 8);
              v81 = *(_QWORD *)(a2 + 16);
              if (v80 >= v81)
              {
                v83 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v80 - *(_QWORD *)a2) >> 2);
                v84 = v83 + 1;
                if (v83 + 1 > 0x1555555555555555)
                  goto LABEL_98;
                v85 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v81 - *(_QWORD *)a2) >> 2);
                if (2 * v85 > v84)
                  v84 = 2 * v85;
                if (v85 >= 0xAAAAAAAAAAAAAAALL)
                  v84 = 0x1555555555555555;
                if (v84)
                {
                  LODWORD(v134[0]) = v84;
                  v86 = *(unsigned int *)(a2 + 28);
                  if ((_DWORD)v86 == -1)
                    goto LABEL_97;
                  v127 = _Q0;
                  v132 = v134;
                  result = ((uint64_t (*)(_QWORD **, uint64_t))off_24EC5D768[v86])(&v132, a2 + 24);
                  _Q0 = v127;
                }
                else
                {
                  result = 0;
                  v87 = 0;
                }
                v88 = result + 12 * v83;
                *(_QWORD *)v88 = _Q0.i64[0];
                *(_DWORD *)(v88 + 8) = _Q0.i32[2];
                v90 = *(_QWORD *)a2;
                v89 = *(_QWORD *)(a2 + 8);
                v91 = v88;
                if (v89 != *(_QWORD *)a2)
                {
                  do
                  {
                    v92 = *(_QWORD *)(v89 - 12);
                    v89 -= 12;
                    v93 = *(_DWORD *)(v89 + 8);
                    *(_QWORD *)(v91 - 12) = v92;
                    v91 -= 12;
                    *(_DWORD *)(v91 + 8) = v93;
                  }
                  while (v89 != v90);
                  v89 = *(_QWORD *)a2;
                }
                v82 = v88 + 12;
                *(_QWORD *)a2 = v91;
                *(_QWORD *)(a2 + 8) = v88 + 12;
                v94 = *(_QWORD *)(a2 + 16);
                *(_QWORD *)(a2 + 16) = result + 12 * v87;
                if (v89)
                {
                  v132 = (_QWORD *)v89;
                  v133 = -1431655765 * ((unint64_t)(v94 - v89) >> 2);
                  v95 = *(unsigned int *)(a2 + 28);
                  if ((_DWORD)v95 == -1)
                    sub_22316DD70();
                  v134[0] = &v132;
                  result = ((uint64_t (*)(_QWORD *, uint64_t))off_24EC5D778[v95])(v134, a2 + 24);
                }
              }
              else
              {
                *(_DWORD *)(v80 + 8) = _Q0.i32[2];
                *(_QWORD *)v80 = _Q0.i64[0];
                v82 = v80 + 12;
              }
              *(_QWORD *)(a2 + 8) = v82;
              v97 = *(float **)(a2 + 40);
              v96 = *(_QWORD *)(a2 + 48);
              if ((unint64_t)v97 < v96)
              {
                *v97 = v69;
                *((_DWORD *)v97 + 1) = v70;
                v79 = v97 + 3;
                *((_DWORD *)v97 + 2) = v71;
              }
              else
              {
                v98 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v97 - *v8) >> 2);
                v99 = v98 + 1;
                if (v98 + 1 > 0x1555555555555555)
LABEL_98:
                  sub_22316E078();
                v100 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v96 - *v8) >> 2);
                if (2 * v100 > v99)
                  v99 = 2 * v100;
                if (v100 >= 0xAAAAAAAAAAAAAAALL)
                  v101 = 0x1555555555555555;
                else
                  v101 = v99;
                if (v101)
                {
                  LODWORD(v134[0]) = v101;
                  v102 = *(unsigned int *)(a2 + 60);
                  if ((_DWORD)v102 == -1)
LABEL_97:
                    sub_22316DD70();
                  v132 = v134;
                  result = ((uint64_t (*)(_QWORD **, uint64_t))off_24EC5D768[v102])(&v132, a2 + 56);
                }
                else
                {
                  result = 0;
                  v103 = 0;
                }
                v104 = (float *)(result + 12 * v98);
                *v104 = v69;
                *((_DWORD *)v104 + 1) = v70;
                *((_DWORD *)v104 + 2) = v71;
                v106 = *(_QWORD *)(a2 + 32);
                v105 = *(_QWORD *)(a2 + 40);
                v107 = v104;
                if (v105 != v106)
                {
                  do
                  {
                    v108 = *(_QWORD *)(v105 - 12);
                    v105 -= 12;
                    v109 = *(_DWORD *)(v105 + 8);
                    *(_QWORD *)(v107 - 3) = v108;
                    v107 -= 3;
                    *((_DWORD *)v107 + 2) = v109;
                  }
                  while (v105 != v106);
                  v105 = *v8;
                }
                v79 = v104 + 3;
                *(_QWORD *)(a2 + 32) = v107;
                *(_QWORD *)(a2 + 40) = v104 + 3;
                v110 = *(_QWORD *)(a2 + 48);
                *(_QWORD *)(a2 + 48) = result + 12 * v103;
                if (v105)
                {
                  v132 = (_QWORD *)v105;
                  v133 = -1431655765 * ((unint64_t)(v110 - v105) >> 2);
                  v111 = *(unsigned int *)(a2 + 60);
                  if ((_DWORD)v111 == -1)
                    sub_22316DD70();
                  v134[0] = &v132;
                  result = ((uint64_t (*)(_QWORD *, uint64_t))off_24EC5D778[v111])(v134, a2 + 56);
                }
              }
              *(_QWORD *)(a2 + 40) = v79;
              ++v72;
            }
            while (v72 != 20);
            *(_DWORD *)(a2 + 64) = 1;
            v66 = v123;
            v67 = v125 + 1;
            v63 = v117;
            v7 = v121;
          }
          while (v123 != v115);
          v14 = v114;
        }
        else
        {
          v14 = v64;
        }
        v63 += 3;
        v62 = v113;
      }
      v7 += 20;
    }
    while (v7 != v112);
  }
  return result;
}

void sub_223A2135C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A21370(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A21394(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A213A8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_223A213BC(_QWORD *a1)
{
  void **v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  unint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = (void **)a1[2];
  v3 = a1[3];
  a1[6] = 0;
  v4 = v3 - (_QWORD)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v5 = a1[3];
      v2 = (void **)(a1[2] + 8);
      a1[2] = v2;
      v4 = v5 - (_QWORD)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    v6 = 8;
  }
  else
  {
    if (v4 >> 3 != 2)
      goto LABEL_8;
    v6 = 16;
  }
  a1[5] = v6;
LABEL_8:
  v7 = (void **)a1[8];
  v8 = (void **)a1[9];
  if (v8 == v7)
  {
    a1[12] = 0;
    v14 = 0;
  }
  else
  {
    v9 = a1[11];
    v10 = &v7[v9 >> 4];
    v11 = (uint64_t)*v10 + 248 * (v9 & 0xF);
    v12 = *(uint64_t *)((char *)v7 + (((a1[12] + v9) >> 1) & 0x7FFFFFFFFFFFFFF8))
        + 248 * ((*((_DWORD *)a1 + 24) + (int)v9) & 0xF);
    if (v11 != v12)
    {
      do
      {
        v11 = sub_223A23BA4(v11) + 248;
        if (v11 - (_QWORD)*v10 == 3968)
        {
          v13 = (uint64_t)v10[1];
          ++v10;
          v11 = v13;
        }
      }
      while (v11 != v12);
      v7 = (void **)a1[8];
      v8 = (void **)a1[9];
    }
    a1[12] = 0;
    v14 = (char *)v8 - (char *)v7;
    if (v14 >= 0x11)
    {
      do
      {
        operator delete(*v7);
        v15 = a1[9];
        v7 = (void **)(a1[8] + 8);
        a1[8] = v7;
        v14 = v15 - (_QWORD)v7;
      }
      while (v14 > 0x10);
    }
  }
  if (v14 >> 3 == 1)
  {
    v16 = 8;
  }
  else
  {
    if (v14 >> 3 != 2)
      goto LABEL_23;
    v16 = 16;
  }
  a1[11] = v16;
LABEL_23:
  v17 = (void **)a1[14];
  v18 = a1[15];
  a1[18] = 0;
  v19 = v18 - (_QWORD)v17;
  if (v19 >= 0x11)
  {
    do
    {
      operator delete(*v17);
      v20 = a1[15];
      v17 = (void **)(a1[14] + 8);
      a1[14] = v17;
      v19 = v20 - (_QWORD)v17;
    }
    while (v19 > 0x10);
  }
  if (v19 >> 3 == 1)
  {
    v21 = 8;
  }
  else
  {
    if (v19 >> 3 != 2)
      goto LABEL_30;
    v21 = 16;
  }
  a1[17] = v21;
LABEL_30:
  v22 = (void **)a1[20];
  v23 = a1[21];
  a1[24] = 0;
  v24 = v23 - (_QWORD)v22;
  if (v24 >= 0x11)
  {
    do
    {
      operator delete(*v22);
      v25 = a1[21];
      v22 = (void **)(a1[20] + 8);
      a1[20] = v22;
      v24 = v25 - (_QWORD)v22;
    }
    while (v24 > 0x10);
  }
  if (v24 >> 3 == 1)
  {
    v26 = 8;
  }
  else
  {
    if (v24 >> 3 != 2)
      goto LABEL_37;
    v26 = 16;
  }
  a1[23] = v26;
LABEL_37:
  v27 = (void **)a1[26];
  v28 = a1[27];
  a1[30] = 0;
  v29 = v28 - (_QWORD)v27;
  if (v29 >= 0x11)
  {
    do
    {
      operator delete(*v27);
      v30 = a1[27];
      v27 = (void **)(a1[26] + 8);
      a1[26] = v27;
      v29 = v30 - (_QWORD)v27;
    }
    while (v29 > 0x10);
  }
  if (v29 >> 3 == 1)
  {
    v31 = 8;
  }
  else
  {
    if (v29 >> 3 != 2)
      return;
    v31 = 16;
  }
  a1[29] = v31;
}

void sub_223A21630(char *a1, size_t __sz, char a3)
{
  size_t v3;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t j;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void *v36;
  void *v37;
  unint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  char *v42;
  char *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  void *v48;
  unint64_t v49;
  size_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  BOOL v56;
  int64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  __int128 *v92;
  _OWORD *v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  int64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  __int128 *v110;
  _OWORD *v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  int64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  void *v135;
  void *v136;
  unint64_t v137;
  char *v138;
  void *v139;
  void *v140;
  char *v141;
  char *v142;
  unint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  void *v147;
  unint64_t v148;
  size_t v149;
  unint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  int64_t v155;
  unint64_t v156;
  char *v157;
  char *v158;
  unint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  char *v166;
  unint64_t v167;
  int64_t v168;
  unint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 *v175;
  char *v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  unint64_t v188;
  uint64_t v189;
  __int128 *v190;
  _OWORD *v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  int64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  __int128 *v208;
  _OWORD *v209;
  uint64_t v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  char *v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  int64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  void *v234;
  void *v235;
  unint64_t v236;
  char *v237;
  void *v238;
  char *v239;
  char *v240;
  unint64_t v241;
  unint64_t v242;
  size_t v243;
  unint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  char *v248;
  int64_t v249;
  unint64_t v250;
  char *v251;
  char *v252;
  unint64_t v253;
  char *v254;
  char *v255;
  char *v256;
  void *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  char *v263;
  unint64_t v264;
  int64_t v265;
  unint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  __int128 *v272;
  char *v273;
  uint64_t v274;
  __int128 v275;
  uint64_t v276;
  unint64_t v277;
  unint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  int64_t v282;
  unint64_t v283;
  char *v284;
  unint64_t v285;
  unint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  int64_t v290;
  unint64_t v291;
  char *v292;
  unint64_t v293;
  unint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  unint64_t v301;
  uint64_t v302;
  __int128 *v303;
  _OWORD *v304;
  uint64_t v305;
  __int128 v306;
  uint64_t v307;
  char *v308;
  char *v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  int64_t v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  __int128 *v321;
  _OWORD *v322;
  uint64_t v323;
  __int128 v324;
  uint64_t v325;
  _QWORD *v326;
  char *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  unint64_t v332;
  char *v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  int64_t v341;
  char *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  void *v346;
  void *v347;
  unint64_t v348;
  char *v349;
  void *v350;
  char *v351;
  char *v352;
  unint64_t v353;
  unint64_t v354;
  size_t v355;
  unint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  char *v360;
  int64_t v361;
  unint64_t v362;
  char *v363;
  char *v364;
  unint64_t v365;
  char *v366;
  char *v367;
  char *v368;
  void *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  unint64_t v374;
  char *v375;
  unint64_t v376;
  int64_t v377;
  unint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  __int128 *v384;
  char *v385;
  uint64_t v386;
  __int128 v387;
  uint64_t v388;
  unint64_t v389;
  unint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  char *v394;
  char *v395;
  char *v396;
  unint64_t v397;
  uint64_t v398;
  __int128 *v399;
  _OWORD *v400;
  uint64_t v401;
  __int128 v402;
  uint64_t v403;
  char *v404;
  char *v405;
  uint64_t v406;
  char *v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  int64_t v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  __int128 *v417;
  _OWORD *v418;
  uint64_t v419;
  __int128 v420;
  uint64_t v421;
  _QWORD *v422;
  char *v423;
  char *v424;
  uint64_t v425;
  uint64_t v426;
  unint64_t v427;
  BOOL v428;
  unint64_t v429;
  char *v430;
  uint64_t v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  char *v437;
  int64_t v438;
  char *v439;
  uint64_t v440;
  char *v441;
  char *v442;
  void *v443;
  void *v444;
  unint64_t v445;
  char *v446;
  void *v447;
  char *v448;
  char *v449;
  unint64_t v450;
  unint64_t v451;
  size_t v452;
  unint64_t v453;
  uint64_t v454;
  char *v455;
  char *v456;
  char *v457;
  int64_t v458;
  unint64_t v459;
  char *v460;
  char *v461;
  unint64_t v462;
  char *v463;
  char *v464;
  char *v465;
  void *v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  unint64_t v470;
  unint64_t v471;
  char *v472;
  unint64_t v473;
  int64_t v474;
  unint64_t v475;
  char *v476;
  char *v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  __int128 *v481;
  char *v482;
  uint64_t v483;
  __int128 v484;
  uint64_t v485;
  unint64_t v486;
  unint64_t v487;
  uint64_t v488;
  char *v489;
  char *v490;
  char *v491;
  char *v492;
  char *v493;
  unint64_t v494;
  uint64_t v495;
  __int128 *v496;
  _OWORD *v497;
  uint64_t v498;
  __int128 v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  int64_t v510;
  char *v511;
  uint64_t v512;
  uint64_t v513;
  __int128 *v514;
  _OWORD *v515;
  uint64_t v516;
  __int128 v517;
  uint64_t v518;
  unint64_t v519;
  uint64_t v520;
  uint64_t i;
  uint64_t v522;
  unint64_t v523;
  unint64_t v524;
  uint64_t v525;
  char *v526;
  char *v527;
  int64_t v528;
  unint64_t v529;
  char *v530;
  unint64_t v531;
  unint64_t v532;
  uint64_t v533;
  char *v534;
  char *v535;
  int64_t v536;
  unint64_t v537;
  char *v538;
  unint64_t v539;
  unint64_t v540;
  uint64_t v541;
  char *v542;
  char *v543;
  int64_t v544;
  unint64_t v545;
  char *v546;
  char *v547;
  uint64_t v548;
  uint64_t v549;
  char *v550;
  __int128 *v551;
  _OWORD *v552;
  uint64_t v553;
  __int128 v554;
  uint64_t v555;
  char *v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  __int128 *v560;
  _OWORD *v561;
  uint64_t v562;
  __int128 v563;
  uint64_t v564;
  char *v565;
  uint64_t v566;
  uint64_t v567;
  char *v568;
  __int128 *v569;
  _OWORD *v570;
  uint64_t v571;
  __int128 v572;
  uint64_t v573;
  char *v574;
  uint64_t v575;
  uint64_t v576;
  char *v577;
  __int128 *v578;
  _OWORD *v579;
  uint64_t v580;
  __int128 v581;
  uint64_t v582;
  char *v583;
  uint64_t v584;
  uint64_t v585;
  char *v586;
  __int128 *v587;
  _OWORD *v588;
  uint64_t v589;
  __int128 v590;
  uint64_t v591;
  size_t v592;
  size_t v593;
  size_t v594;
  size_t v595;
  size_t v596;
  size_t v597;
  size_t v598;
  size_t v599;
  size_t v600;
  size_t v601;
  _QWORD __src[440];

  v3 = __sz;
  if ((a3 & 1) == 0)
  {
    v8 = *((_QWORD *)a1 + 6);
    if (v8 != *(_DWORD *)(__sz + 24))
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockContainer.cpp", 40, (uint64_t)"Size() == md_cell.BlockTableIndex()", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_573;
      }
      v8 = *((_QWORD *)a1 + 6);
    }
    v9 = (char *)*((_QWORD *)a1 + 2);
    v10 = (char *)*((_QWORD *)a1 + 3);
    v11 = v10 - v9;
    if (v10 == v9)
      v12 = 0;
    else
      v12 = 2 * (v10 - v9) - 1;
    v13 = *((_QWORD *)a1 + 5);
    v14 = v13 + v8;
    if (v12 != v14)
    {
LABEL_114:
      v115 = *(_QWORD *)&v9[(v14 >> 1) & 0x7FFFFFFFFFFFFFF8] + 2936 * (v14 & 0xF);
      bzero((void *)v115, 0xB65uLL);
      *(_QWORD *)(v115 + 2920) = v3;
      v116 = (char *)*((_QWORD *)a1 + 8);
      v117 = (char *)*((_QWORD *)a1 + 9);
      v118 = v117 - v116;
      *(_DWORD *)(v115 + 2928) = -1;
      ++*((_QWORD *)a1 + 6);
      if (v117 == v116)
        v119 = 0;
      else
        v119 = 2 * (v117 - v116) - 1;
      v120 = *((_QWORD *)a1 + 11);
      v121 = *((_QWORD *)a1 + 12) + v120;
      if (v119 != v121)
      {
LABEL_208:
        v213 = *(_QWORD *)&v116[(v121 >> 1) & 0x7FFFFFFFFFFFFFF8] + 248 * (v121 & 0xF);
        *(_QWORD *)v213 = v3;
        *(_DWORD *)(v213 + 8) = -1;
        *(_OWORD *)(v213 + 16) = 0u;
        *(_OWORD *)(v213 + 32) = 0u;
        *(_OWORD *)(v213 + 48) = 0u;
        *(_OWORD *)(v213 + 64) = 0u;
        *(_OWORD *)(v213 + 80) = 0u;
        *(_OWORD *)(v213 + 96) = 0u;
        *(_OWORD *)(v213 + 112) = 0u;
        *(_OWORD *)(v213 + 128) = 0u;
        *(_OWORD *)(v213 + 144) = 0u;
        *(_OWORD *)(v213 + 160) = 0u;
        *(_OWORD *)(v213 + 176) = 0u;
        *(_OWORD *)(v213 + 192) = 0u;
        *(_QWORD *)(v213 + 208) = &unk_2245C5160;
        *(_OWORD *)(v213 + 216) = 0u;
        *(_OWORD *)(v213 + 232) = 0u;
        ++*((_QWORD *)a1 + 12);
        v214 = *a1;
        if ((*a1 & 1) == 0)
          goto LABEL_316;
        v215 = (char *)*((_QWORD *)a1 + 14);
        v216 = (char *)*((_QWORD *)a1 + 15);
        v217 = v216 - v215;
        if (v216 == v215)
          v218 = 0;
        else
          v218 = 2 * (v216 - v215) - 1;
        v219 = *((_QWORD *)a1 + 17);
        v220 = *((_QWORD *)a1 + 18) + v219;
        if (v218 != v220)
        {
LABEL_315:
          v326 = (_QWORD *)(*(_QWORD *)&v215[(v220 >> 1) & 0x7FFFFFFFFFFFFFF8] + 1016 * (v220 & 0xF));
          bzero(v326, 0x3E9uLL);
          v326[126] = v3;
          ++*((_QWORD *)a1 + 18);
          v214 = *a1;
LABEL_316:
          if ((v214 & 4) == 0)
            goto LABEL_412;
          v327 = (char *)*((_QWORD *)a1 + 20);
          v328 = (char *)*((_QWORD *)a1 + 21);
          v329 = v328 - v327;
          if (v328 == v327)
            v330 = 0;
          else
            v330 = 2 * (v328 - v327) - 1;
          v331 = *((_QWORD *)a1 + 23);
          v332 = *((_QWORD *)a1 + 24) + v331;
          if (v330 != v332)
          {
LABEL_411:
            v422 = (_QWORD *)(*(_QWORD *)&v327[(v332 >> 1) & 0x7FFFFFFFFFFFFFF8] + 2928 * (v332 & 0xF));
            bzero(v422, 0xB65uLL);
            v422[365] = v3;
            ++*((_QWORD *)a1 + 24);
            v214 = *a1;
LABEL_412:
            if ((v214 & 0x10) == 0)
              return;
            v423 = (char *)*((_QWORD *)a1 + 26);
            v424 = (char *)*((_QWORD *)a1 + 27);
            v425 = v424 - v423;
            if (v424 == v423)
              v426 = 0;
            else
              v426 = 2 * (v424 - v423) - 1;
            v427 = *((_QWORD *)a1 + 29);
            if (v426 != *((_QWORD *)a1 + 30) + v427)
              goto LABEL_508;
            v428 = v427 >= 0x10;
            v429 = v427 - 16;
            if (!v428)
            {
              v440 = v425 >> 3;
              v441 = (char *)*((_QWORD *)a1 + 28);
              v442 = (char *)*((_QWORD *)a1 + 25);
              if (v425 >> 3 >= (unint64_t)((v441 - v442) >> 3))
              {
                v600 = v3;
                if (v441 == v442)
                  v445 = 1;
                else
                  v445 = (v441 - v442) >> 2;
                if (!(v445 >> 61))
                {
                  v446 = (char *)operator new(8 * v445);
                  v447 = operator new(0xDB80uLL);
                  v448 = &v446[8 * v440];
                  v449 = &v446[8 * v445];
                  if (v440 == v445)
                  {
                    if (v425 < 1)
                    {
                      if (v424 == v423)
                        v462 = 1;
                      else
                        v462 = v425 >> 2;
                      if (v462 >> 61)
                        sub_223174E94();
                      v448 = (char *)operator new(8 * v462);
                      v449 = &v448[8 * v462];
                      operator delete(v446);
                      v423 = (char *)*((_QWORD *)a1 + 26);
                      v424 = (char *)*((_QWORD *)a1 + 27);
                      v446 = v448;
                    }
                    else
                    {
                      v450 = v440 + 2;
                      if (v440 >= -1)
                        v450 = v440 + 1;
                      v448 -= 8 * (v450 >> 1);
                    }
                  }
                  *(_QWORD *)v448 = v447;
                  v463 = v448 + 8;
                  if (v424 == v423)
                  {
                    v464 = v448;
                    v465 = v448 + 8;
                  }
                  else
                  {
                    do
                    {
                      if (v448 == v446)
                      {
                        if (v463 >= v449)
                        {
                          if (v449 == v448)
                            v471 = 1;
                          else
                            v471 = (v449 - v448) >> 2;
                          if (v471 >> 61)
                            sub_223174E94();
                          v472 = (char *)operator new(8 * v471);
                          v446 = v472;
                          v473 = (v471 + 3) >> 2;
                          v467 = &v472[8 * v473];
                          v465 = v467;
                          v474 = v463 - v448;
                          if (v463 != v448)
                          {
                            v465 = &v467[v474 & 0xFFFFFFFFFFFFFFF8];
                            v475 = v474 - 8;
                            v476 = &v472[8 * v473];
                            v477 = v448;
                            if (v475 < 0x38)
                              goto LABEL_587;
                            v478 = 8 * v473;
                            v476 = &v472[8 * v473];
                            v477 = v448;
                            if ((unint64_t)(v476 - v448) < 0x20)
                              goto LABEL_587;
                            v479 = (v475 >> 3) + 1;
                            v480 = 8 * (v479 & 0x3FFFFFFFFFFFFFFCLL);
                            v476 = &v467[v480];
                            v477 = &v448[v480];
                            v481 = (__int128 *)(v448 + 16);
                            v482 = &v472[v478 + 16];
                            v483 = v479 & 0x3FFFFFFFFFFFFFFCLL;
                            do
                            {
                              v484 = *v481;
                              *((_OWORD *)v482 - 1) = *(v481 - 1);
                              *(_OWORD *)v482 = v484;
                              v481 += 2;
                              v482 += 32;
                              v483 -= 4;
                            }
                            while (v483);
                            if (v479 != (v479 & 0x3FFFFFFFFFFFFFFCLL))
                            {
LABEL_587:
                              do
                              {
                                v485 = *(_QWORD *)v477;
                                v477 += 8;
                                *(_QWORD *)v476 = v485;
                                v476 += 8;
                              }
                              while (v476 != v465);
                            }
                          }
                          v449 = &v472[8 * v471];
                          operator delete(v448);
                        }
                        else
                        {
                          v469 = (v449 - v463) >> 3;
                          if (v469 >= -1)
                            v470 = v469 + 1;
                          else
                            v470 = v469 + 2;
                          v465 = &v463[8 * (v470 >> 1)];
                          v467 = &v448[8 * (v470 >> 1)];
                          if (v463 == v448)
                          {
                            v446 = v463;
                          }
                          else
                          {
                            memmove(&v448[8 * (v470 >> 1)], v448, v463 - v448);
                            v446 = v448;
                          }
                        }
                      }
                      else
                      {
                        v467 = v448;
                        v465 = v463;
                      }
                      v468 = *((_QWORD *)v424 - 1);
                      v424 -= 8;
                      *((_QWORD *)v467 - 1) = v468;
                      v464 = v467 - 8;
                      v463 = v465;
                      v448 = v464;
                    }
                    while (v424 != *((char **)a1 + 26));
                  }
                  v466 = (void *)*((_QWORD *)a1 + 25);
                  *((_QWORD *)a1 + 25) = v446;
                  *((_QWORD *)a1 + 26) = v464;
                  v424 = v465;
                  *((_QWORD *)a1 + 27) = v465;
                  *((_QWORD *)a1 + 28) = v449;
                  v3 = v600;
                  if (v466)
                  {
                    operator delete(v466);
                    v424 = (char *)*((_QWORD *)a1 + 27);
                  }
                  goto LABEL_507;
                }
              }
              else
              {
                v443 = operator new(0xDB80uLL);
                v444 = v443;
                if (v441 != v424)
                {
                  *(_QWORD *)v424 = v443;
LABEL_506:
                  v424 = (char *)(*((_QWORD *)a1 + 27) + 8);
                  *((_QWORD *)a1 + 27) = v424;
LABEL_507:
                  v423 = (char *)*((_QWORD *)a1 + 26);
LABEL_508:
                  if (v424 == v423)
                  {
                    v520 = 0;
                  }
                  else
                  {
                    v519 = *((_QWORD *)a1 + 30) + *((_QWORD *)a1 + 29);
                    v520 = *(_QWORD *)&v423[(v519 >> 1) & 0x7FFFFFFFFFFFFFF8] + 3512 * (v519 & 0xF);
                  }
                  for (i = 0; i != 3500; i += 28)
                  {
                    v522 = v520 + i;
                    *(_QWORD *)v522 = 0;
                    *(_QWORD *)(v522 + 8) = 0;
                    *(_DWORD *)(v522 + 23) = 0;
                    *(_QWORD *)(v522 + 16) = 0;
                    *(_BYTE *)(v522 + 27) = -1;
                  }
                  *(_BYTE *)(v520 + 3500) = 0;
                  *(_QWORD *)(v520 + 3504) = v3;
                  ++*((_QWORD *)a1 + 30);
                  return;
                }
                v601 = v3;
                if (v423 == v442)
                {
                  v486 = (v441 - v423) >> 2;
                  if (v424 == v423)
                    v486 = 1;
                  if (v486 >> 61)
                    goto LABEL_574;
                  v487 = (v486 + 3) >> 2;
                  v488 = 8 * v486;
                  v489 = (char *)operator new(8 * v486);
                  v461 = &v489[8 * v487];
                  v490 = v461;
                  if (v424 != v423)
                  {
                    v490 = &v461[8 * v440];
                    v491 = &v489[8 * v487];
                    v492 = v423;
                    if ((unint64_t)(v425 - 8) < 0x38)
                      goto LABEL_588;
                    v493 = &v489[8 * v487];
                    v491 = v493;
                    v492 = v423;
                    if ((unint64_t)(v493 - v423) < 0x20)
                      goto LABEL_588;
                    v494 = ((unint64_t)(v425 - 8) >> 3) + 1;
                    v495 = 8 * (v494 & 0x3FFFFFFFFFFFFFFCLL);
                    v491 = &v461[v495];
                    v492 = &v423[v495];
                    v496 = (__int128 *)(v423 + 16);
                    v497 = v493 + 16;
                    v498 = v494 & 0x3FFFFFFFFFFFFFFCLL;
                    do
                    {
                      v499 = *v496;
                      *(v497 - 1) = *(v496 - 1);
                      *v497 = v499;
                      v496 += 2;
                      v497 += 2;
                      v498 -= 4;
                    }
                    while (v498);
                    if (v494 != (v494 & 0x3FFFFFFFFFFFFFFCLL))
                    {
LABEL_588:
                      do
                      {
                        v500 = *(_QWORD *)v492;
                        v492 += 8;
                        *(_QWORD *)v491 = v500;
                        v491 += 8;
                      }
                      while (v491 != v490);
                    }
                  }
                  *((_QWORD *)a1 + 25) = v489;
                  *((_QWORD *)a1 + 26) = v461;
                  *((_QWORD *)a1 + 27) = v490;
                  *((_QWORD *)a1 + 28) = &v489[v488];
                  if (v423)
                  {
                    operator delete(v423);
                    v461 = (char *)*((_QWORD *)a1 + 26);
                  }
                }
                else
                {
                  v461 = v423;
                }
                *((_QWORD *)v461 - 1) = v444;
                v501 = (char *)*((_QWORD *)a1 + 26);
                v502 = (char *)*((_QWORD *)a1 + 27);
                *((_QWORD *)a1 + 26) = v501 - 8;
                v503 = *((_QWORD *)v501 - 1);
                *((_QWORD *)a1 + 26) = v501;
                if (v502 != *((char **)a1 + 28))
                {
LABEL_572:
                  *(_QWORD *)v502 = v503;
                  v424 = (char *)(*((_QWORD *)a1 + 27) + 8);
                  *((_QWORD *)a1 + 27) = v424;
                  v3 = v601;
                  goto LABEL_507;
                }
                v504 = (char *)*((_QWORD *)a1 + 25);
                if (v501 > v504)
                {
                  v505 = (v501 - v504) >> 3;
                  if (v505 >= -1)
                    v506 = v505 + 1;
                  else
                    v506 = v505 + 2;
                  v507 = v506 >> 1;
                  v508 = -v507;
                  v509 = &v501[-8 * v507];
                  v510 = v502 - v501;
                  if (v502 != v501)
                  {
                    memmove(&v501[-8 * v507], v501, v502 - v501);
                    v501 = (char *)*((_QWORD *)a1 + 26);
                  }
                  v502 = &v509[v510];
                  *((_QWORD *)a1 + 26) = &v501[8 * v508];
                  *((_QWORD *)a1 + 27) = &v509[v510];
                  goto LABEL_572;
                }
                v539 = (v502 - v504) >> 2;
                if (v502 == v504)
                  v539 = 1;
                if (!(v539 >> 61))
                {
                  v540 = v539 >> 2;
                  v541 = 8 * v539;
                  v542 = (char *)operator new(8 * v539);
                  v543 = &v542[8 * v540];
                  v544 = v502 - v501;
                  v56 = v502 == v501;
                  v502 = v543;
                  if (v56)
                    goto LABEL_570;
                  v502 = &v543[v544 & 0xFFFFFFFFFFFFFFF8];
                  v545 = v544 - 8;
                  if ((unint64_t)(v544 - 8) >= 0x38)
                  {
                    v583 = &v542[8 * v540];
                    v546 = v583;
                    if ((unint64_t)(v583 - v501) >= 0x20)
                    {
                      v584 = (v545 >> 3) + 1;
                      v585 = 8 * (v584 & 0x3FFFFFFFFFFFFFFCLL);
                      v546 = &v543[v585];
                      v586 = &v501[v585];
                      v587 = (__int128 *)(v501 + 16);
                      v588 = v583 + 16;
                      v589 = v584 & 0x3FFFFFFFFFFFFFFCLL;
                      do
                      {
                        v590 = *v587;
                        *(v588 - 1) = *(v587 - 1);
                        *v588 = v590;
                        v587 += 2;
                        v588 += 2;
                        v589 -= 4;
                      }
                      while (v589);
                      v501 = v586;
                      if (v584 == (v584 & 0x3FFFFFFFFFFFFFFCLL))
                      {
LABEL_570:
                        *((_QWORD *)a1 + 25) = v542;
                        *((_QWORD *)a1 + 26) = v543;
                        *((_QWORD *)a1 + 27) = v502;
                        *((_QWORD *)a1 + 28) = &v542[v541];
                        if (v504)
                        {
                          operator delete(v504);
                          v502 = (char *)*((_QWORD *)a1 + 27);
                        }
                        goto LABEL_572;
                      }
                    }
                  }
                  else
                  {
                    v546 = &v542[8 * v540];
                  }
                  do
                  {
                    v591 = *(_QWORD *)v501;
                    v501 += 8;
                    *(_QWORD *)v546 = v591;
                    v546 += 8;
                  }
                  while (v546 != v502);
                  goto LABEL_570;
                }
              }
LABEL_574:
              sub_223174E94();
            }
            *((_QWORD *)a1 + 29) = v429;
            v430 = v423 + 8;
            v431 = *(_QWORD *)v423;
            *((_QWORD *)a1 + 26) = v423 + 8;
            if (v424 != *((char **)a1 + 28))
            {
LABEL_505:
              *(_QWORD *)v424 = v431;
              goto LABEL_506;
            }
            v432 = (char *)*((_QWORD *)a1 + 25);
            if (v430 > v432)
            {
              v433 = (v430 - v432) >> 3;
              if (v433 >= -1)
                v434 = v433 + 1;
              else
                v434 = v433 + 2;
              v435 = v434 >> 1;
              v436 = -v435;
              v437 = &v430[-8 * v435];
              v438 = v424 - v430;
              if (v424 != v430)
              {
                memmove(&v430[-8 * v435], v430, v424 - v430);
                v424 = (char *)*((_QWORD *)a1 + 26);
              }
              v439 = &v424[8 * v436];
              v424 = &v437[v438];
              *((_QWORD *)a1 + 26) = v439;
              *((_QWORD *)a1 + 27) = &v437[v438];
              goto LABEL_505;
            }
            v451 = (v424 - v432) >> 2;
            if (v424 == v432)
              v451 = 1;
            if (v451 >> 61)
              goto LABEL_574;
            v452 = v3;
            v453 = v451 >> 2;
            v454 = 8 * v451;
            v455 = (char *)operator new(8 * v451);
            v456 = &v455[8 * v453];
            v457 = &v455[v454];
            v458 = v424 - v430;
            v56 = v424 == v430;
            v424 = v456;
            v3 = v452;
            if (!v56)
            {
              v424 = &v456[v458 & 0xFFFFFFFFFFFFFFF8];
              v459 = v458 - 8;
              if ((unint64_t)(v458 - 8) < 0x38)
              {
                v460 = &v455[8 * v453];
                do
                {
LABEL_502:
                  v518 = *(_QWORD *)v430;
                  v430 += 8;
                  *(_QWORD *)v460 = v518;
                  v460 += 8;
                }
                while (v460 != v424);
                goto LABEL_503;
              }
              v511 = &v455[8 * v453];
              v460 = v511;
              if ((unint64_t)(v511 - v430) < 0x20)
                goto LABEL_502;
              v512 = (v459 >> 3) + 1;
              v513 = 8 * (v512 & 0x3FFFFFFFFFFFFFFCLL);
              v460 = &v456[v513];
              v430 += v513;
              v514 = (__int128 *)(v423 + 24);
              v515 = v511 + 16;
              v516 = v512 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v517 = *v514;
                *(v515 - 1) = *(v514 - 1);
                *v515 = v517;
                v514 += 2;
                v515 += 2;
                v516 -= 4;
              }
              while (v516);
              if (v512 != (v512 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_502;
            }
LABEL_503:
            *((_QWORD *)a1 + 25) = v455;
            *((_QWORD *)a1 + 26) = v456;
            *((_QWORD *)a1 + 27) = v424;
            *((_QWORD *)a1 + 28) = v457;
            if (v432)
            {
              operator delete(v432);
              v424 = (char *)*((_QWORD *)a1 + 27);
            }
            goto LABEL_505;
          }
          if (v331 >= 0x10)
          {
            *((_QWORD *)a1 + 23) = v331 - 16;
            v333 = v327 + 8;
            v334 = *(_QWORD *)v327;
            *((_QWORD *)a1 + 20) = v327 + 8;
            if (v328 != *((char **)a1 + 22))
            {
LABEL_408:
              *(_QWORD *)v328 = v334;
              goto LABEL_409;
            }
            v335 = (char *)*((_QWORD *)a1 + 19);
            if (v333 > v335)
            {
              v336 = (v333 - v335) >> 3;
              if (v336 >= -1)
                v337 = v336 + 1;
              else
                v337 = v336 + 2;
              v338 = v337 >> 1;
              v339 = -v338;
              v340 = &v333[-8 * v338];
              v341 = v328 - v333;
              if (v328 != v333)
              {
                memmove(&v333[-8 * v338], v333, v328 - v333);
                v328 = (char *)*((_QWORD *)a1 + 20);
              }
              v342 = &v328[8 * v339];
              v328 = &v340[v341];
              *((_QWORD *)a1 + 20) = v342;
              *((_QWORD *)a1 + 21) = &v340[v341];
              goto LABEL_408;
            }
            v354 = (v328 - v335) >> 2;
            if (v328 == v335)
              v354 = 1;
            if (v354 >> 61)
              goto LABEL_574;
            v355 = v3;
            v356 = v354 >> 2;
            v357 = 8 * v354;
            v358 = (char *)operator new(8 * v354);
            v359 = &v358[8 * v356];
            v360 = &v358[v357];
            v361 = v328 - v333;
            v56 = v328 == v333;
            v328 = v359;
            v3 = v355;
            if (!v56)
            {
              v328 = &v359[v361 & 0xFFFFFFFFFFFFFFF8];
              v362 = v361 - 8;
              if ((unint64_t)(v361 - 8) < 0x38)
              {
                v363 = &v358[8 * v356];
                do
                {
LABEL_405:
                  v421 = *(_QWORD *)v333;
                  v333 += 8;
                  *(_QWORD *)v363 = v421;
                  v363 += 8;
                }
                while (v363 != v328);
                goto LABEL_406;
              }
              v414 = &v358[8 * v356];
              v363 = v414;
              if ((unint64_t)(v414 - v333) < 0x20)
                goto LABEL_405;
              v415 = (v362 >> 3) + 1;
              v416 = 8 * (v415 & 0x3FFFFFFFFFFFFFFCLL);
              v363 = &v359[v416];
              v333 += v416;
              v417 = (__int128 *)(v327 + 24);
              v418 = v414 + 16;
              v419 = v415 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v420 = *v417;
                *(v418 - 1) = *(v417 - 1);
                *v418 = v420;
                v417 += 2;
                v418 += 2;
                v419 -= 4;
              }
              while (v419);
              if (v415 != (v415 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_405;
            }
LABEL_406:
            *((_QWORD *)a1 + 19) = v358;
            *((_QWORD *)a1 + 20) = v359;
            *((_QWORD *)a1 + 21) = v328;
            *((_QWORD *)a1 + 22) = v360;
            if (v335)
            {
              operator delete(v335);
              v328 = (char *)*((_QWORD *)a1 + 21);
            }
            goto LABEL_408;
          }
          v343 = v329 >> 3;
          v344 = (char *)*((_QWORD *)a1 + 22);
          v345 = (char *)*((_QWORD *)a1 + 19);
          if (v329 >> 3 >= (unint64_t)((v344 - v345) >> 3))
          {
            v598 = v3;
            if (v344 == v345)
              v348 = 1;
            else
              v348 = (v344 - v345) >> 2;
            if (v348 >> 61)
              goto LABEL_574;
            v349 = (char *)operator new(8 * v348);
            v350 = operator new(0xB700uLL);
            v351 = &v349[8 * v343];
            v352 = &v349[8 * v348];
            if (v343 == v348)
            {
              if (v329 < 1)
              {
                if (v328 == v327)
                  v365 = 1;
                else
                  v365 = v329 >> 2;
                if (v365 >> 61)
                  sub_223174E94();
                v351 = (char *)operator new(8 * v365);
                v352 = &v351[8 * v365];
                operator delete(v349);
                v327 = (char *)*((_QWORD *)a1 + 20);
                v328 = (char *)*((_QWORD *)a1 + 21);
                v349 = v351;
              }
              else
              {
                v353 = v343 + 2;
                if (v343 >= -1)
                  v353 = v343 + 1;
                v351 -= 8 * (v353 >> 1);
              }
            }
            *(_QWORD *)v351 = v350;
            v366 = v351 + 8;
            if (v328 == v327)
            {
              v367 = v351;
              v368 = v351 + 8;
            }
            else
            {
              do
              {
                if (v351 == v349)
                {
                  if (v366 >= v352)
                  {
                    if (v352 == v351)
                      v374 = 1;
                    else
                      v374 = (v352 - v351) >> 2;
                    if (v374 >> 61)
                      sub_223174E94();
                    v375 = (char *)operator new(8 * v374);
                    v349 = v375;
                    v376 = (v374 + 3) >> 2;
                    v370 = &v375[8 * v376];
                    v368 = v370;
                    v377 = v366 - v351;
                    if (v366 != v351)
                    {
                      v368 = &v370[v377 & 0xFFFFFFFFFFFFFFF8];
                      v378 = v377 - 8;
                      v379 = &v375[8 * v376];
                      v380 = v351;
                      if (v378 < 0x38)
                        goto LABEL_589;
                      v381 = 8 * v376;
                      v379 = &v375[8 * v376];
                      v380 = v351;
                      if ((unint64_t)(v379 - v351) < 0x20)
                        goto LABEL_589;
                      v382 = (v378 >> 3) + 1;
                      v383 = 8 * (v382 & 0x3FFFFFFFFFFFFFFCLL);
                      v379 = &v370[v383];
                      v380 = &v351[v383];
                      v384 = (__int128 *)(v351 + 16);
                      v385 = &v375[v381 + 16];
                      v386 = v382 & 0x3FFFFFFFFFFFFFFCLL;
                      do
                      {
                        v387 = *v384;
                        *((_OWORD *)v385 - 1) = *(v384 - 1);
                        *(_OWORD *)v385 = v387;
                        v384 += 2;
                        v385 += 32;
                        v386 -= 4;
                      }
                      while (v386);
                      if (v382 != (v382 & 0x3FFFFFFFFFFFFFFCLL))
                      {
LABEL_589:
                        do
                        {
                          v388 = *(_QWORD *)v380;
                          v380 += 8;
                          *(_QWORD *)v379 = v388;
                          v379 += 8;
                        }
                        while (v379 != v368);
                      }
                    }
                    v352 = &v375[8 * v374];
                    operator delete(v351);
                  }
                  else
                  {
                    v372 = (v352 - v366) >> 3;
                    if (v372 >= -1)
                      v373 = v372 + 1;
                    else
                      v373 = v372 + 2;
                    v368 = &v366[8 * (v373 >> 1)];
                    v370 = &v351[8 * (v373 >> 1)];
                    if (v366 == v351)
                    {
                      v349 = v366;
                    }
                    else
                    {
                      memmove(&v351[8 * (v373 >> 1)], v351, v366 - v351);
                      v349 = v351;
                    }
                  }
                }
                else
                {
                  v370 = v351;
                  v368 = v366;
                }
                v371 = *((_QWORD *)v328 - 1);
                v328 -= 8;
                *((_QWORD *)v370 - 1) = v371;
                v367 = v370 - 8;
                v366 = v368;
                v351 = v367;
              }
              while (v328 != *((char **)a1 + 20));
            }
            v369 = (void *)*((_QWORD *)a1 + 19);
            *((_QWORD *)a1 + 19) = v349;
            *((_QWORD *)a1 + 20) = v367;
            *((_QWORD *)a1 + 21) = v368;
            *((_QWORD *)a1 + 22) = v352;
            v3 = v598;
            if (v369)
              operator delete(v369);
            goto LABEL_410;
          }
          v346 = operator new(0xB700uLL);
          v347 = v346;
          if (v344 != v328)
          {
            *(_QWORD *)v328 = v346;
LABEL_409:
            *((_QWORD *)a1 + 21) += 8;
LABEL_410:
            v327 = (char *)*((_QWORD *)a1 + 20);
            v332 = *((_QWORD *)a1 + 24) + *((_QWORD *)a1 + 23);
            goto LABEL_411;
          }
          v599 = v3;
          if (v327 == v345)
          {
            v389 = (v344 - v327) >> 2;
            if (v328 == v327)
              v389 = 1;
            if (v389 >> 61)
              goto LABEL_574;
            v390 = (v389 + 3) >> 2;
            v391 = 8 * v389;
            v392 = (char *)operator new(8 * v389);
            v364 = &v392[8 * v390];
            v393 = v364;
            if (v328 != v327)
            {
              v393 = &v364[8 * v343];
              v394 = &v392[8 * v390];
              v395 = v327;
              if ((unint64_t)(v329 - 8) < 0x38)
                goto LABEL_590;
              v396 = &v392[8 * v390];
              v394 = v396;
              v395 = v327;
              if ((unint64_t)(v396 - v327) < 0x20)
                goto LABEL_590;
              v397 = ((unint64_t)(v329 - 8) >> 3) + 1;
              v398 = 8 * (v397 & 0x3FFFFFFFFFFFFFFCLL);
              v394 = &v364[v398];
              v395 = &v327[v398];
              v399 = (__int128 *)(v327 + 16);
              v400 = v396 + 16;
              v401 = v397 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v402 = *v399;
                *(v400 - 1) = *(v399 - 1);
                *v400 = v402;
                v399 += 2;
                v400 += 2;
                v401 -= 4;
              }
              while (v401);
              if (v397 != (v397 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_590:
                do
                {
                  v403 = *(_QWORD *)v395;
                  v395 += 8;
                  *(_QWORD *)v394 = v403;
                  v394 += 8;
                }
                while (v394 != v393);
              }
            }
            *((_QWORD *)a1 + 19) = v392;
            *((_QWORD *)a1 + 20) = v364;
            *((_QWORD *)a1 + 21) = v393;
            *((_QWORD *)a1 + 22) = &v392[v391];
            if (v327)
            {
              operator delete(v327);
              v364 = (char *)*((_QWORD *)a1 + 20);
            }
          }
          else
          {
            v364 = v327;
          }
          *((_QWORD *)v364 - 1) = v347;
          v404 = (char *)*((_QWORD *)a1 + 20);
          v405 = (char *)*((_QWORD *)a1 + 21);
          *((_QWORD *)a1 + 20) = v404 - 8;
          v406 = *((_QWORD *)v404 - 1);
          *((_QWORD *)a1 + 20) = v404;
          if (v405 != *((char **)a1 + 22))
          {
LABEL_564:
            *(_QWORD *)v405 = v406;
            *((_QWORD *)a1 + 21) += 8;
            v3 = v599;
            goto LABEL_410;
          }
          v407 = (char *)*((_QWORD *)a1 + 19);
          if (v404 > v407)
          {
            v408 = (v404 - v407) >> 3;
            if (v408 >= -1)
              v409 = v408 + 1;
            else
              v409 = v408 + 2;
            v410 = v409 >> 1;
            v411 = -v410;
            v412 = &v404[-8 * v410];
            v413 = v405 - v404;
            if (v405 != v404)
            {
              memmove(&v404[-8 * v410], v404, v405 - v404);
              v404 = (char *)*((_QWORD *)a1 + 20);
            }
            v405 = &v412[v413];
            *((_QWORD *)a1 + 20) = &v404[8 * v411];
            *((_QWORD *)a1 + 21) = &v412[v413];
            goto LABEL_564;
          }
          v531 = (v405 - v407) >> 2;
          if (v405 == v407)
            v531 = 1;
          if (v531 >> 61)
            goto LABEL_574;
          v532 = v531 >> 2;
          v533 = 8 * v531;
          v534 = (char *)operator new(8 * v531);
          v535 = &v534[8 * v532];
          v536 = v405 - v404;
          v56 = v405 == v404;
          v405 = v535;
          if (!v56)
          {
            v405 = &v535[v536 & 0xFFFFFFFFFFFFFFF8];
            v537 = v536 - 8;
            if ((unint64_t)(v536 - 8) < 0x38)
            {
              v538 = &v534[8 * v532];
              do
              {
LABEL_561:
                v582 = *(_QWORD *)v404;
                v404 += 8;
                *(_QWORD *)v538 = v582;
                v538 += 8;
              }
              while (v538 != v405);
              goto LABEL_562;
            }
            v574 = &v534[8 * v532];
            v538 = v574;
            if ((unint64_t)(v574 - v404) < 0x20)
              goto LABEL_561;
            v575 = (v537 >> 3) + 1;
            v576 = 8 * (v575 & 0x3FFFFFFFFFFFFFFCLL);
            v538 = &v535[v576];
            v577 = &v404[v576];
            v578 = (__int128 *)(v404 + 16);
            v579 = v574 + 16;
            v580 = v575 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v581 = *v578;
              *(v579 - 1) = *(v578 - 1);
              *v579 = v581;
              v578 += 2;
              v579 += 2;
              v580 -= 4;
            }
            while (v580);
            v404 = v577;
            if (v575 != (v575 & 0x3FFFFFFFFFFFFFFCLL))
              goto LABEL_561;
          }
LABEL_562:
          *((_QWORD *)a1 + 19) = v534;
          *((_QWORD *)a1 + 20) = v535;
          *((_QWORD *)a1 + 21) = v405;
          *((_QWORD *)a1 + 22) = &v534[v533];
          if (v407)
          {
            operator delete(v407);
            v405 = (char *)*((_QWORD *)a1 + 21);
          }
          goto LABEL_564;
        }
        if (v219 >= 0x10)
        {
          *((_QWORD *)a1 + 17) = v219 - 16;
          v221 = v215 + 8;
          v222 = *(_QWORD *)v215;
          *((_QWORD *)a1 + 14) = v215 + 8;
          if (v216 != *((char **)a1 + 16))
          {
LABEL_312:
            *(_QWORD *)v216 = v222;
            goto LABEL_313;
          }
          v223 = (char *)*((_QWORD *)a1 + 13);
          if (v221 > v223)
          {
            v224 = (v221 - v223) >> 3;
            if (v224 >= -1)
              v225 = v224 + 1;
            else
              v225 = v224 + 2;
            v226 = v225 >> 1;
            v227 = -v226;
            v228 = &v221[-8 * v226];
            v229 = v216 - v221;
            if (v216 != v221)
            {
              memmove(&v221[-8 * v226], v221, v216 - v221);
              v216 = (char *)*((_QWORD *)a1 + 14);
            }
            v230 = &v216[8 * v227];
            v216 = &v228[v229];
            *((_QWORD *)a1 + 14) = v230;
            *((_QWORD *)a1 + 15) = &v228[v229];
            goto LABEL_312;
          }
          v242 = (v216 - v223) >> 2;
          if (v216 == v223)
            v242 = 1;
          if (v242 >> 61)
            goto LABEL_574;
          v243 = v3;
          v244 = v242 >> 2;
          v245 = 8 * v242;
          v246 = (char *)operator new(8 * v242);
          v247 = &v246[8 * v244];
          v248 = &v246[v245];
          v249 = v216 - v221;
          v56 = v216 == v221;
          v216 = v247;
          v3 = v243;
          if (!v56)
          {
            v216 = &v247[v249 & 0xFFFFFFFFFFFFFFF8];
            v250 = v249 - 8;
            if ((unint64_t)(v249 - 8) < 0x38)
            {
              v251 = &v246[8 * v244];
              do
              {
LABEL_309:
                v325 = *(_QWORD *)v221;
                v221 += 8;
                *(_QWORD *)v251 = v325;
                v251 += 8;
              }
              while (v251 != v216);
              goto LABEL_310;
            }
            v318 = &v246[8 * v244];
            v251 = v318;
            if ((unint64_t)(v318 - v221) < 0x20)
              goto LABEL_309;
            v319 = (v250 >> 3) + 1;
            v320 = 8 * (v319 & 0x3FFFFFFFFFFFFFFCLL);
            v251 = &v247[v320];
            v221 += v320;
            v321 = (__int128 *)(v215 + 24);
            v322 = v318 + 16;
            v323 = v319 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v324 = *v321;
              *(v322 - 1) = *(v321 - 1);
              *v322 = v324;
              v321 += 2;
              v322 += 2;
              v323 -= 4;
            }
            while (v323);
            if (v319 != (v319 & 0x3FFFFFFFFFFFFFFCLL))
              goto LABEL_309;
          }
LABEL_310:
          *((_QWORD *)a1 + 13) = v246;
          *((_QWORD *)a1 + 14) = v247;
          *((_QWORD *)a1 + 15) = v216;
          *((_QWORD *)a1 + 16) = v248;
          if (v223)
          {
            operator delete(v223);
            v216 = (char *)*((_QWORD *)a1 + 15);
          }
          goto LABEL_312;
        }
        v231 = v217 >> 3;
        v232 = (char *)*((_QWORD *)a1 + 16);
        v233 = (char *)*((_QWORD *)a1 + 13);
        if (v217 >> 3 >= (unint64_t)((v232 - v233) >> 3))
        {
          v596 = v3;
          if (v232 == v233)
            v236 = 1;
          else
            v236 = (v232 - v233) >> 2;
          if (v236 >> 61)
            goto LABEL_574;
          v237 = (char *)operator new(8 * v236);
          v238 = operator new(0x3F80uLL);
          v239 = &v237[8 * v231];
          v240 = &v237[8 * v236];
          if (v231 == v236)
          {
            if (v217 < 1)
            {
              if (v216 == v215)
                v253 = 1;
              else
                v253 = v217 >> 2;
              if (v253 >> 61)
                sub_223174E94();
              v239 = (char *)operator new(8 * v253);
              v240 = &v239[8 * v253];
              operator delete(v237);
              v215 = (char *)*((_QWORD *)a1 + 14);
              v216 = (char *)*((_QWORD *)a1 + 15);
              v237 = v239;
            }
            else
            {
              v241 = v231 + 2;
              if (v231 >= -1)
                v241 = v231 + 1;
              v239 -= 8 * (v241 >> 1);
            }
          }
          *(_QWORD *)v239 = v238;
          v254 = v239 + 8;
          if (v216 == v215)
          {
            v255 = v239;
            v256 = v239 + 8;
          }
          else
          {
            do
            {
              if (v239 == v237)
              {
                if (v254 >= v240)
                {
                  if (v240 == v239)
                    v262 = 1;
                  else
                    v262 = (v240 - v239) >> 2;
                  if (v262 >> 61)
                    sub_223174E94();
                  v263 = (char *)operator new(8 * v262);
                  v237 = v263;
                  v264 = (v262 + 3) >> 2;
                  v258 = &v263[8 * v264];
                  v256 = v258;
                  v265 = v254 - v239;
                  if (v254 != v239)
                  {
                    v256 = &v258[v265 & 0xFFFFFFFFFFFFFFF8];
                    v266 = v265 - 8;
                    v267 = &v263[8 * v264];
                    v268 = v239;
                    if (v266 < 0x38)
                      goto LABEL_591;
                    v269 = 8 * v264;
                    v267 = &v263[8 * v264];
                    v268 = v239;
                    if ((unint64_t)(v267 - v239) < 0x20)
                      goto LABEL_591;
                    v270 = (v266 >> 3) + 1;
                    v271 = 8 * (v270 & 0x3FFFFFFFFFFFFFFCLL);
                    v267 = &v258[v271];
                    v268 = &v239[v271];
                    v272 = (__int128 *)(v239 + 16);
                    v273 = &v263[v269 + 16];
                    v274 = v270 & 0x3FFFFFFFFFFFFFFCLL;
                    do
                    {
                      v275 = *v272;
                      *((_OWORD *)v273 - 1) = *(v272 - 1);
                      *(_OWORD *)v273 = v275;
                      v272 += 2;
                      v273 += 32;
                      v274 -= 4;
                    }
                    while (v274);
                    if (v270 != (v270 & 0x3FFFFFFFFFFFFFFCLL))
                    {
LABEL_591:
                      do
                      {
                        v276 = *(_QWORD *)v268;
                        v268 += 8;
                        *(_QWORD *)v267 = v276;
                        v267 += 8;
                      }
                      while (v267 != v256);
                    }
                  }
                  v240 = &v263[8 * v262];
                  operator delete(v239);
                }
                else
                {
                  v260 = (v240 - v254) >> 3;
                  if (v260 >= -1)
                    v261 = v260 + 1;
                  else
                    v261 = v260 + 2;
                  v256 = &v254[8 * (v261 >> 1)];
                  v258 = &v239[8 * (v261 >> 1)];
                  if (v254 == v239)
                  {
                    v237 = v254;
                  }
                  else
                  {
                    memmove(&v239[8 * (v261 >> 1)], v239, v254 - v239);
                    v237 = v239;
                  }
                }
              }
              else
              {
                v258 = v239;
                v256 = v254;
              }
              v259 = *((_QWORD *)v216 - 1);
              v216 -= 8;
              *((_QWORD *)v258 - 1) = v259;
              v255 = v258 - 8;
              v254 = v256;
              v239 = v255;
            }
            while (v216 != *((char **)a1 + 14));
          }
          v257 = (void *)*((_QWORD *)a1 + 13);
          *((_QWORD *)a1 + 13) = v237;
          *((_QWORD *)a1 + 14) = v255;
          *((_QWORD *)a1 + 15) = v256;
          *((_QWORD *)a1 + 16) = v240;
          v3 = v596;
          if (v257)
            operator delete(v257);
          goto LABEL_314;
        }
        v234 = operator new(0x3F80uLL);
        v235 = v234;
        if (v232 != v216)
        {
          *(_QWORD *)v216 = v234;
LABEL_313:
          *((_QWORD *)a1 + 15) += 8;
LABEL_314:
          v215 = (char *)*((_QWORD *)a1 + 14);
          v220 = *((_QWORD *)a1 + 18) + *((_QWORD *)a1 + 17);
          goto LABEL_315;
        }
        v597 = v3;
        if (v215 == v233)
        {
          v293 = (v232 - v215) >> 2;
          if (v216 == v215)
            v293 = 1;
          if (v293 >> 61)
            goto LABEL_574;
          v294 = (v293 + 3) >> 2;
          v295 = 8 * v293;
          v296 = (char *)operator new(8 * v293);
          v252 = &v296[8 * v294];
          v297 = v252;
          if (v216 != v215)
          {
            v297 = &v252[8 * v231];
            v298 = &v296[8 * v294];
            v299 = v215;
            if ((unint64_t)(v217 - 8) < 0x38)
              goto LABEL_592;
            v300 = &v296[8 * v294];
            v298 = v300;
            v299 = v215;
            if ((unint64_t)(v300 - v215) < 0x20)
              goto LABEL_592;
            v301 = ((unint64_t)(v217 - 8) >> 3) + 1;
            v302 = 8 * (v301 & 0x3FFFFFFFFFFFFFFCLL);
            v298 = &v252[v302];
            v299 = &v215[v302];
            v303 = (__int128 *)(v215 + 16);
            v304 = v300 + 16;
            v305 = v301 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v306 = *v303;
              *(v304 - 1) = *(v303 - 1);
              *v304 = v306;
              v303 += 2;
              v304 += 2;
              v305 -= 4;
            }
            while (v305);
            if (v301 != (v301 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_592:
              do
              {
                v307 = *(_QWORD *)v299;
                v299 += 8;
                *(_QWORD *)v298 = v307;
                v298 += 8;
              }
              while (v298 != v297);
            }
          }
          *((_QWORD *)a1 + 13) = v296;
          *((_QWORD *)a1 + 14) = v252;
          *((_QWORD *)a1 + 15) = v297;
          *((_QWORD *)a1 + 16) = &v296[v295];
          if (v215)
          {
            operator delete(v215);
            v252 = (char *)*((_QWORD *)a1 + 14);
          }
        }
        else
        {
          v252 = v215;
        }
        *((_QWORD *)v252 - 1) = v235;
        v308 = (char *)*((_QWORD *)a1 + 14);
        v309 = (char *)*((_QWORD *)a1 + 15);
        *((_QWORD *)a1 + 14) = v308 - 8;
        v310 = *((_QWORD *)v308 - 1);
        *((_QWORD *)a1 + 14) = v308;
        if (v309 != *((char **)a1 + 16))
        {
LABEL_556:
          *(_QWORD *)v309 = v310;
          *((_QWORD *)a1 + 15) += 8;
          v3 = v597;
          goto LABEL_314;
        }
        v311 = (char *)*((_QWORD *)a1 + 13);
        if (v308 > v311)
        {
          v312 = (v308 - v311) >> 3;
          if (v312 >= -1)
            v313 = v312 + 1;
          else
            v313 = v312 + 2;
          v314 = v313 >> 1;
          v315 = -v314;
          v316 = &v308[-8 * v314];
          v317 = v309 - v308;
          if (v309 != v308)
          {
            memmove(&v308[-8 * v314], v308, v309 - v308);
            v308 = (char *)*((_QWORD *)a1 + 14);
          }
          v309 = &v316[v317];
          *((_QWORD *)a1 + 14) = &v308[8 * v315];
          *((_QWORD *)a1 + 15) = &v316[v317];
          goto LABEL_556;
        }
        v523 = (v309 - v311) >> 2;
        if (v309 == v311)
          v523 = 1;
        if (v523 >> 61)
          goto LABEL_574;
        v524 = v523 >> 2;
        v525 = 8 * v523;
        v526 = (char *)operator new(8 * v523);
        v527 = &v526[8 * v524];
        v528 = v309 - v308;
        v56 = v309 == v308;
        v309 = v527;
        if (!v56)
        {
          v309 = &v527[v528 & 0xFFFFFFFFFFFFFFF8];
          v529 = v528 - 8;
          if ((unint64_t)(v528 - 8) < 0x38)
          {
            v530 = &v526[8 * v524];
            do
            {
LABEL_553:
              v573 = *(_QWORD *)v308;
              v308 += 8;
              *(_QWORD *)v530 = v573;
              v530 += 8;
            }
            while (v530 != v309);
            goto LABEL_554;
          }
          v565 = &v526[8 * v524];
          v530 = v565;
          if ((unint64_t)(v565 - v308) < 0x20)
            goto LABEL_553;
          v566 = (v529 >> 3) + 1;
          v567 = 8 * (v566 & 0x3FFFFFFFFFFFFFFCLL);
          v530 = &v527[v567];
          v568 = &v308[v567];
          v569 = (__int128 *)(v308 + 16);
          v570 = v565 + 16;
          v571 = v566 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v572 = *v569;
            *(v570 - 1) = *(v569 - 1);
            *v570 = v572;
            v569 += 2;
            v570 += 2;
            v571 -= 4;
          }
          while (v571);
          v308 = v568;
          if (v566 != (v566 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_553;
        }
LABEL_554:
        *((_QWORD *)a1 + 13) = v526;
        *((_QWORD *)a1 + 14) = v527;
        *((_QWORD *)a1 + 15) = v309;
        *((_QWORD *)a1 + 16) = &v526[v525];
        if (v311)
        {
          operator delete(v311);
          v309 = (char *)*((_QWORD *)a1 + 15);
        }
        goto LABEL_556;
      }
      if (v120 >= 0x10)
      {
        *((_QWORD *)a1 + 11) = v120 - 16;
        v122 = v116 + 8;
        v123 = *(_QWORD *)v116;
        *((_QWORD *)a1 + 8) = v116 + 8;
        if (v117 != *((char **)a1 + 10))
        {
LABEL_206:
          *(_QWORD *)v117 = v123;
          *((_QWORD *)a1 + 9) += 8;
          goto LABEL_207;
        }
        v124 = (char *)*((_QWORD *)a1 + 7);
        if (v122 > v124)
        {
          v125 = (v122 - v124) >> 3;
          if (v125 >= -1)
            v126 = v125 + 1;
          else
            v126 = v125 + 2;
          v127 = v126 >> 1;
          v128 = -v127;
          v129 = &v122[-8 * v127];
          v130 = v117 - v122;
          if (v117 != v122)
          {
            memmove(&v122[-8 * v127], v122, v117 - v122);
            v117 = (char *)*((_QWORD *)a1 + 8);
          }
          v131 = &v117[8 * v128];
          v117 = &v129[v130];
          *((_QWORD *)a1 + 8) = v131;
          *((_QWORD *)a1 + 9) = &v129[v130];
          goto LABEL_206;
        }
        v148 = (v117 - v124) >> 2;
        if (v117 == v124)
          v148 = 1;
        if (v148 >> 61)
          goto LABEL_574;
        v149 = v3;
        v150 = v148 >> 2;
        v151 = 8 * v148;
        v152 = (char *)operator new(8 * v148);
        v153 = &v152[8 * v150];
        v154 = &v152[v151];
        v155 = v117 - v122;
        v56 = v117 == v122;
        v117 = v153;
        v3 = v149;
        if (!v56)
        {
          v117 = &v153[v155 & 0xFFFFFFFFFFFFFFF8];
          v156 = v155 - 8;
          if ((unint64_t)(v155 - 8) < 0x38)
          {
            v157 = &v152[8 * v150];
            do
            {
LABEL_203:
              v212 = *(_QWORD *)v122;
              v122 += 8;
              *(_QWORD *)v157 = v212;
              v157 += 8;
            }
            while (v157 != v117);
            goto LABEL_204;
          }
          v205 = &v152[8 * v150];
          v157 = v205;
          if ((unint64_t)(v205 - v122) < 0x20)
            goto LABEL_203;
          v206 = (v156 >> 3) + 1;
          v207 = 8 * (v206 & 0x3FFFFFFFFFFFFFFCLL);
          v157 = &v153[v207];
          v122 += v207;
          v208 = (__int128 *)(v116 + 24);
          v209 = v205 + 16;
          v210 = v206 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v211 = *v208;
            *(v209 - 1) = *(v208 - 1);
            *v209 = v211;
            v208 += 2;
            v209 += 2;
            v210 -= 4;
          }
          while (v210);
          if (v206 != (v206 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_203;
        }
LABEL_204:
        *((_QWORD *)a1 + 7) = v152;
        *((_QWORD *)a1 + 8) = v153;
        *((_QWORD *)a1 + 9) = v117;
        *((_QWORD *)a1 + 10) = v154;
        if (v124)
        {
          operator delete(v124);
          v117 = (char *)*((_QWORD *)a1 + 9);
        }
        goto LABEL_206;
      }
      v132 = v118 >> 3;
      v133 = (char *)*((_QWORD *)a1 + 10);
      v134 = (char *)*((_QWORD *)a1 + 7);
      if (v118 >> 3 < (unint64_t)((v133 - v134) >> 3))
      {
        v135 = operator new(0xF80uLL);
        v136 = v135;
        if (v133 != v117)
        {
          *(_QWORD *)v117 = v135;
          *((_QWORD *)a1 + 9) += 8;
LABEL_207:
          v116 = (char *)*((_QWORD *)a1 + 8);
          v121 = *((_QWORD *)a1 + 12) + *((_QWORD *)a1 + 11);
          goto LABEL_208;
        }
        v595 = v3;
        if (v116 == v134)
        {
          v180 = (v133 - v116) >> 2;
          if (v117 == v116)
            v180 = 1;
          if (v180 >> 61)
            goto LABEL_574;
          v181 = (v180 + 3) >> 2;
          v182 = 8 * v180;
          v183 = (char *)operator new(8 * v180);
          v158 = &v183[8 * v181];
          v184 = v158;
          if (v117 != v116)
          {
            v184 = &v158[8 * v132];
            v185 = &v183[8 * v181];
            v186 = v116;
            if ((unint64_t)(v118 - 8) < 0x38)
              goto LABEL_593;
            v187 = &v183[8 * v181];
            v185 = v187;
            v186 = v116;
            if ((unint64_t)(v187 - v116) < 0x20)
              goto LABEL_593;
            v188 = ((unint64_t)(v118 - 8) >> 3) + 1;
            v189 = 8 * (v188 & 0x3FFFFFFFFFFFFFFCLL);
            v185 = &v158[v189];
            v186 = &v116[v189];
            v190 = (__int128 *)(v116 + 16);
            v191 = v187 + 16;
            v192 = v188 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v193 = *v190;
              *(v191 - 1) = *(v190 - 1);
              *v191 = v193;
              v190 += 2;
              v191 += 2;
              v192 -= 4;
            }
            while (v192);
            if (v188 != (v188 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_593:
              do
              {
                v194 = *(_QWORD *)v186;
                v186 += 8;
                *(_QWORD *)v185 = v194;
                v185 += 8;
              }
              while (v185 != v184);
            }
          }
          *((_QWORD *)a1 + 7) = v183;
          *((_QWORD *)a1 + 8) = v158;
          *((_QWORD *)a1 + 9) = v184;
          *((_QWORD *)a1 + 10) = &v183[v182];
          if (v116)
          {
            operator delete(v116);
            v158 = (char *)*((_QWORD *)a1 + 8);
          }
        }
        else
        {
          v158 = v116;
        }
        *((_QWORD *)v158 - 1) = v136;
        v195 = (char *)*((_QWORD *)a1 + 8);
        v196 = (char *)*((_QWORD *)a1 + 9);
        *((_QWORD *)a1 + 8) = v195 - 8;
        v197 = *((_QWORD *)v195 - 1);
        *((_QWORD *)a1 + 8) = v195;
        if (v196 != *((char **)a1 + 10))
        {
LABEL_548:
          *(_QWORD *)v196 = v197;
          *((_QWORD *)a1 + 9) += 8;
          v3 = v595;
          goto LABEL_207;
        }
        v198 = (char *)*((_QWORD *)a1 + 7);
        if (v195 > v198)
        {
          v199 = (v195 - v198) >> 3;
          if (v199 >= -1)
            v200 = v199 + 1;
          else
            v200 = v199 + 2;
          v201 = v200 >> 1;
          v202 = -v201;
          v203 = &v195[-8 * v201];
          v204 = v196 - v195;
          if (v196 != v195)
          {
            memmove(&v195[-8 * v201], v195, v196 - v195);
            v195 = (char *)*((_QWORD *)a1 + 8);
          }
          v196 = &v203[v204];
          *((_QWORD *)a1 + 8) = &v195[8 * v202];
          *((_QWORD *)a1 + 9) = &v203[v204];
          goto LABEL_548;
        }
        v285 = (v196 - v198) >> 2;
        if (v196 == v198)
          v285 = 1;
        if (v285 >> 61)
          goto LABEL_574;
        v286 = v285 >> 2;
        v287 = 8 * v285;
        v288 = (char *)operator new(8 * v285);
        v289 = &v288[8 * v286];
        v290 = v196 - v195;
        v56 = v196 == v195;
        v196 = v289;
        if (!v56)
        {
          v196 = &v289[v290 & 0xFFFFFFFFFFFFFFF8];
          v291 = v290 - 8;
          if ((unint64_t)(v290 - 8) < 0x38)
          {
            v292 = &v288[8 * v286];
            do
            {
LABEL_545:
              v564 = *(_QWORD *)v195;
              v195 += 8;
              *(_QWORD *)v292 = v564;
              v292 += 8;
            }
            while (v292 != v196);
            goto LABEL_546;
          }
          v556 = &v288[8 * v286];
          v292 = v556;
          if ((unint64_t)(v556 - v195) < 0x20)
            goto LABEL_545;
          v557 = (v291 >> 3) + 1;
          v558 = 8 * (v557 & 0x3FFFFFFFFFFFFFFCLL);
          v292 = &v289[v558];
          v559 = &v195[v558];
          v560 = (__int128 *)(v195 + 16);
          v561 = v556 + 16;
          v562 = v557 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v563 = *v560;
            *(v561 - 1) = *(v560 - 1);
            *v561 = v563;
            v560 += 2;
            v561 += 2;
            v562 -= 4;
          }
          while (v562);
          v195 = v559;
          if (v557 != (v557 & 0x3FFFFFFFFFFFFFFCLL))
            goto LABEL_545;
        }
LABEL_546:
        *((_QWORD *)a1 + 7) = v288;
        *((_QWORD *)a1 + 8) = v289;
        *((_QWORD *)a1 + 9) = v196;
        *((_QWORD *)a1 + 10) = &v288[v287];
        if (v198)
        {
          operator delete(v198);
          v196 = (char *)*((_QWORD *)a1 + 9);
        }
        goto LABEL_548;
      }
      v594 = v3;
      if (v133 == v134)
        v137 = 1;
      else
        v137 = (v133 - v134) >> 2;
      if (v137 >> 61)
        goto LABEL_574;
      v138 = (char *)operator new(8 * v137);
      v139 = operator new(0xF80uLL);
      v140 = v139;
      v141 = &v138[8 * v132];
      v142 = &v138[8 * v137];
      if (v132 == v137)
      {
        if (v118 < 1)
        {
          if (v117 == v116)
            v159 = 1;
          else
            v159 = v118 >> 2;
          if (v159 >> 61)
            sub_223174E94();
          v141 = (char *)operator new(8 * v159);
          v142 = &v141[8 * v159];
          operator delete(v138);
          v160 = (char *)*((_QWORD *)a1 + 8);
          v117 = (char *)*((_QWORD *)a1 + 9);
          v138 = v141;
          *(_QWORD *)v141 = v140;
          v144 = v141 + 8;
          if (v117 == v160)
            goto LABEL_140;
          goto LABEL_159;
        }
        v143 = v132 + 2;
        if (v132 >= -1)
          v143 = v132 + 1;
        v141 -= 8 * (v143 >> 1);
      }
      *(_QWORD *)v141 = v139;
      v144 = v141 + 8;
      if (v117 == v116)
      {
LABEL_140:
        v145 = v141;
        v146 = v144;
LABEL_141:
        v147 = (void *)*((_QWORD *)a1 + 7);
        *((_QWORD *)a1 + 7) = v138;
        *((_QWORD *)a1 + 8) = v145;
        *((_QWORD *)a1 + 9) = v146;
        *((_QWORD *)a1 + 10) = v142;
        v3 = v594;
        if (v147)
          operator delete(v147);
        goto LABEL_207;
      }
      do
      {
LABEL_159:
        if (v141 == v138)
        {
          if (v144 >= v142)
          {
            if (v142 == v141)
              v165 = 1;
            else
              v165 = (v142 - v141) >> 2;
            if (v165 >> 61)
              sub_223174E94();
            v166 = (char *)operator new(8 * v165);
            v138 = v166;
            v167 = (v165 + 3) >> 2;
            v161 = &v166[8 * v167];
            v146 = v161;
            v168 = v144 - v141;
            if (v144 != v141)
            {
              v146 = &v161[v168 & 0xFFFFFFFFFFFFFFF8];
              v169 = v168 - 8;
              v170 = &v166[8 * v167];
              v171 = v141;
              if (v169 < 0x38)
                goto LABEL_594;
              v172 = 8 * v167;
              v170 = &v166[8 * v167];
              v171 = v141;
              if ((unint64_t)(v170 - v141) < 0x20)
                goto LABEL_594;
              v173 = (v169 >> 3) + 1;
              v174 = 8 * (v173 & 0x3FFFFFFFFFFFFFFCLL);
              v170 = &v161[v174];
              v171 = &v141[v174];
              v175 = (__int128 *)(v141 + 16);
              v176 = &v166[v172 + 16];
              v177 = v173 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v178 = *v175;
                *((_OWORD *)v176 - 1) = *(v175 - 1);
                *(_OWORD *)v176 = v178;
                v175 += 2;
                v176 += 32;
                v177 -= 4;
              }
              while (v177);
              if (v173 != (v173 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_594:
                do
                {
                  v179 = *(_QWORD *)v171;
                  v171 += 8;
                  *(_QWORD *)v170 = v179;
                  v170 += 8;
                }
                while (v170 != v146);
              }
            }
            v142 = &v166[8 * v165];
            operator delete(v141);
          }
          else
          {
            v163 = (v142 - v144) >> 3;
            if (v163 >= -1)
              v164 = v163 + 1;
            else
              v164 = v163 + 2;
            v146 = &v144[8 * (v164 >> 1)];
            v161 = &v141[8 * (v164 >> 1)];
            if (v144 == v141)
            {
              v138 = v144;
            }
            else
            {
              memmove(&v141[8 * (v164 >> 1)], v141, v144 - v141);
              v138 = v141;
            }
          }
        }
        else
        {
          v161 = v141;
          v146 = v144;
        }
        v162 = *((_QWORD *)v117 - 1);
        v117 -= 8;
        *((_QWORD *)v161 - 1) = v162;
        v145 = v161 - 8;
        v144 = v146;
        v141 = v145;
      }
      while (v117 != *((char **)a1 + 8));
      goto LABEL_141;
    }
    if (v13 >= 0x10)
    {
      *((_QWORD *)a1 + 5) = v13 - 16;
      v15 = v9 + 8;
      v16 = *(_QWORD *)v9;
      *((_QWORD *)a1 + 2) = v9 + 8;
      if (v10 != *((char **)a1 + 4))
      {
LABEL_111:
        *(_QWORD *)v10 = v16;
        goto LABEL_112;
      }
      v17 = (char *)*((_QWORD *)a1 + 1);
      if (v15 > v17)
      {
        v18 = (v15 - v17) >> 3;
        if (v18 >= -1)
          v19 = v18 + 1;
        else
          v19 = v18 + 2;
        v20 = v19 >> 1;
        v21 = -v20;
        v22 = &v15[-8 * v20];
        v23 = v10 - v15;
        if (v10 != v15)
        {
          memmove(&v15[-8 * v20], v15, v10 - v15);
          v10 = (char *)*((_QWORD *)a1 + 2);
        }
        v24 = &v10[8 * v21];
        v10 = &v22[v23];
        *((_QWORD *)a1 + 2) = v24;
        *((_QWORD *)a1 + 3) = &v22[v23];
        goto LABEL_111;
      }
      v49 = (v10 - v17) >> 2;
      if (v10 == v17)
        v49 = 1;
      if (v49 >> 61)
        goto LABEL_574;
      v50 = v3;
      v51 = v49 >> 2;
      v52 = 8 * v49;
      v53 = (char *)operator new(8 * v49);
      v54 = &v53[8 * v51];
      v55 = &v53[v52];
      v57 = v10 - v15;
      v56 = v10 == v15;
      v10 = v54;
      v3 = v50;
      if (!v56)
      {
        v10 = &v54[v57 & 0xFFFFFFFFFFFFFFF8];
        v58 = v57 - 8;
        if ((unint64_t)(v57 - 8) < 0x38)
        {
          v59 = &v53[8 * v51];
          do
          {
LABEL_108:
            v114 = *(_QWORD *)v15;
            v15 += 8;
            *(_QWORD *)v59 = v114;
            v59 += 8;
          }
          while (v59 != v10);
          goto LABEL_109;
        }
        v107 = &v53[8 * v51];
        v59 = v107;
        if ((unint64_t)(v107 - v15) < 0x20)
          goto LABEL_108;
        v108 = (v58 >> 3) + 1;
        v109 = 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
        v59 = &v54[v109];
        v15 += v109;
        v110 = (__int128 *)(v9 + 24);
        v111 = v107 + 16;
        v112 = v108 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v113 = *v110;
          *(v111 - 1) = *(v110 - 1);
          *v111 = v113;
          v110 += 2;
          v111 += 2;
          v112 -= 4;
        }
        while (v112);
        if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_108;
      }
LABEL_109:
      *((_QWORD *)a1 + 1) = v53;
      *((_QWORD *)a1 + 2) = v54;
      *((_QWORD *)a1 + 3) = v10;
      *((_QWORD *)a1 + 4) = v55;
      if (v17)
      {
        operator delete(v17);
        v10 = (char *)*((_QWORD *)a1 + 3);
      }
      goto LABEL_111;
    }
    v33 = v11 >> 3;
    v34 = (char *)*((_QWORD *)a1 + 4);
    v35 = (char *)*((_QWORD *)a1 + 1);
    if (v11 >> 3 < (unint64_t)((v34 - v35) >> 3))
    {
      v36 = operator new(0xB780uLL);
      v37 = v36;
      if (v34 != v10)
      {
        *(_QWORD *)v10 = v36;
LABEL_112:
        *((_QWORD *)a1 + 3) += 8;
LABEL_113:
        v9 = (char *)*((_QWORD *)a1 + 2);
        v14 = *((_QWORD *)a1 + 6) + *((_QWORD *)a1 + 5);
        goto LABEL_114;
      }
      v593 = v3;
      if (v9 == v35)
      {
        v82 = (v34 - v9) >> 2;
        if (v10 == v9)
          v82 = 1;
        if (v82 >> 61)
          goto LABEL_574;
        v83 = (v82 + 3) >> 2;
        v84 = 8 * v82;
        v85 = (char *)operator new(8 * v82);
        v60 = &v85[8 * v83];
        v86 = v60;
        if (v10 != v9)
        {
          v86 = &v60[8 * v33];
          v87 = &v85[8 * v83];
          v88 = v9;
          if ((unint64_t)(v11 - 8) < 0x38)
            goto LABEL_595;
          v89 = &v85[8 * v83];
          v87 = v89;
          v88 = v9;
          if ((unint64_t)(v89 - v9) < 0x20)
            goto LABEL_595;
          v90 = ((unint64_t)(v11 - 8) >> 3) + 1;
          v91 = 8 * (v90 & 0x3FFFFFFFFFFFFFFCLL);
          v87 = &v60[v91];
          v88 = &v9[v91];
          v92 = (__int128 *)(v9 + 16);
          v93 = v89 + 16;
          v94 = v90 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v95 = *v92;
            *(v93 - 1) = *(v92 - 1);
            *v93 = v95;
            v92 += 2;
            v93 += 2;
            v94 -= 4;
          }
          while (v94);
          if (v90 != (v90 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_595:
            do
            {
              v96 = *(_QWORD *)v88;
              v88 += 8;
              *(_QWORD *)v87 = v96;
              v87 += 8;
            }
            while (v87 != v86);
          }
        }
        *((_QWORD *)a1 + 1) = v85;
        *((_QWORD *)a1 + 2) = v60;
        *((_QWORD *)a1 + 3) = v86;
        *((_QWORD *)a1 + 4) = &v85[v84];
        if (v9)
        {
          operator delete(v9);
          v60 = (char *)*((_QWORD *)a1 + 2);
        }
      }
      else
      {
        v60 = v9;
      }
      *((_QWORD *)v60 - 1) = v37;
      v97 = (char *)*((_QWORD *)a1 + 2);
      v98 = (char *)*((_QWORD *)a1 + 3);
      *((_QWORD *)a1 + 2) = v97 - 8;
      v99 = *((_QWORD *)v97 - 1);
      *((_QWORD *)a1 + 2) = v97;
      if (v98 != *((char **)a1 + 4))
      {
LABEL_540:
        *(_QWORD *)v98 = v99;
        *((_QWORD *)a1 + 3) += 8;
        v3 = v593;
        goto LABEL_113;
      }
      v100 = (char *)*((_QWORD *)a1 + 1);
      if (v97 > v100)
      {
        v101 = (v97 - v100) >> 3;
        if (v101 >= -1)
          v102 = v101 + 1;
        else
          v102 = v101 + 2;
        v103 = v102 >> 1;
        v104 = -v103;
        v105 = &v97[-8 * v103];
        v106 = v98 - v97;
        if (v98 != v97)
        {
          memmove(&v97[-8 * v103], v97, v98 - v97);
          v97 = (char *)*((_QWORD *)a1 + 2);
        }
        v98 = &v105[v106];
        *((_QWORD *)a1 + 2) = &v97[8 * v104];
        *((_QWORD *)a1 + 3) = &v105[v106];
        goto LABEL_540;
      }
      v277 = (v98 - v100) >> 2;
      if (v98 == v100)
        v277 = 1;
      if (v277 >> 61)
        goto LABEL_574;
      v278 = v277 >> 2;
      v279 = 8 * v277;
      v280 = (char *)operator new(8 * v277);
      v281 = &v280[8 * v278];
      v282 = v98 - v97;
      v56 = v98 == v97;
      v98 = v281;
      if (!v56)
      {
        v98 = &v281[v282 & 0xFFFFFFFFFFFFFFF8];
        v283 = v282 - 8;
        if ((unint64_t)(v282 - 8) < 0x38)
        {
          v284 = &v280[8 * v278];
          do
          {
LABEL_537:
            v555 = *(_QWORD *)v97;
            v97 += 8;
            *(_QWORD *)v284 = v555;
            v284 += 8;
          }
          while (v284 != v98);
          goto LABEL_538;
        }
        v547 = &v280[8 * v278];
        v284 = v547;
        if ((unint64_t)(v547 - v97) < 0x20)
          goto LABEL_537;
        v548 = (v283 >> 3) + 1;
        v549 = 8 * (v548 & 0x3FFFFFFFFFFFFFFCLL);
        v284 = &v281[v549];
        v550 = &v97[v549];
        v551 = (__int128 *)(v97 + 16);
        v552 = v547 + 16;
        v553 = v548 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v554 = *v551;
          *(v552 - 1) = *(v551 - 1);
          *v552 = v554;
          v551 += 2;
          v552 += 2;
          v553 -= 4;
        }
        while (v553);
        v97 = v550;
        if (v548 != (v548 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_537;
      }
LABEL_538:
      *((_QWORD *)a1 + 1) = v280;
      *((_QWORD *)a1 + 2) = v281;
      *((_QWORD *)a1 + 3) = v98;
      *((_QWORD *)a1 + 4) = &v280[v279];
      if (v100)
      {
        operator delete(v100);
        v98 = (char *)*((_QWORD *)a1 + 3);
      }
      goto LABEL_540;
    }
    v592 = v3;
    if (v34 == v35)
      v38 = 1;
    else
      v38 = (v34 - v35) >> 2;
    if (v38 >> 61)
      goto LABEL_574;
    v39 = (char *)operator new(8 * v38);
    v40 = operator new(0xB780uLL);
    v41 = v40;
    v42 = &v39[8 * v33];
    v43 = &v39[8 * v38];
    if (v33 == v38)
    {
      if (v11 < 1)
      {
        if (v10 == v9)
          v61 = 1;
        else
          v61 = v11 >> 2;
        if (v61 >> 61)
          sub_223174E94();
        v42 = (char *)operator new(8 * v61);
        v43 = &v42[8 * v61];
        operator delete(v39);
        v62 = (char *)*((_QWORD *)a1 + 2);
        v10 = (char *)*((_QWORD *)a1 + 3);
        v39 = v42;
        *(_QWORD *)v42 = v41;
        v45 = v42 + 8;
        if (v10 == v62)
          goto LABEL_45;
        goto LABEL_64;
      }
      v44 = v33 + 2;
      if (v33 >= -1)
        v44 = v33 + 1;
      v42 -= 8 * (v44 >> 1);
    }
    *(_QWORD *)v42 = v40;
    v45 = v42 + 8;
    if (v10 == v9)
    {
LABEL_45:
      v46 = v42;
      v47 = v45;
LABEL_46:
      v48 = (void *)*((_QWORD *)a1 + 1);
      *((_QWORD *)a1 + 1) = v39;
      *((_QWORD *)a1 + 2) = v46;
      *((_QWORD *)a1 + 3) = v47;
      *((_QWORD *)a1 + 4) = v43;
      v3 = v592;
      if (v48)
        operator delete(v48);
      goto LABEL_113;
    }
    do
    {
LABEL_64:
      if (v42 == v39)
      {
        if (v45 >= v43)
        {
          if (v43 == v42)
            v67 = 1;
          else
            v67 = (v43 - v42) >> 2;
          if (v67 >> 61)
            sub_223174E94();
          v68 = (char *)operator new(8 * v67);
          v39 = v68;
          v69 = (v67 + 3) >> 2;
          v63 = &v68[8 * v69];
          v47 = v63;
          v70 = v45 - v42;
          if (v45 != v42)
          {
            v47 = &v63[v70 & 0xFFFFFFFFFFFFFFF8];
            v71 = v70 - 8;
            v72 = &v68[8 * v69];
            v73 = v42;
            if (v71 < 0x38)
              goto LABEL_596;
            v74 = 8 * v69;
            v72 = &v68[8 * v69];
            v73 = v42;
            if ((unint64_t)(v72 - v42) < 0x20)
              goto LABEL_596;
            v75 = (v71 >> 3) + 1;
            v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
            v72 = &v63[v76];
            v73 = &v42[v76];
            v77 = (__int128 *)(v42 + 16);
            v78 = &v68[v74 + 16];
            v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v80 = *v77;
              *((_OWORD *)v78 - 1) = *(v77 - 1);
              *(_OWORD *)v78 = v80;
              v77 += 2;
              v78 += 32;
              v79 -= 4;
            }
            while (v79);
            if (v75 != (v75 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_596:
              do
              {
                v81 = *(_QWORD *)v73;
                v73 += 8;
                *(_QWORD *)v72 = v81;
                v72 += 8;
              }
              while (v72 != v47);
            }
          }
          v43 = &v68[8 * v67];
          operator delete(v42);
        }
        else
        {
          v65 = (v43 - v45) >> 3;
          if (v65 >= -1)
            v66 = v65 + 1;
          else
            v66 = v65 + 2;
          v47 = &v45[8 * (v66 >> 1)];
          v63 = &v42[8 * (v66 >> 1)];
          if (v45 == v42)
          {
            v39 = v45;
          }
          else
          {
            memmove(&v42[8 * (v66 >> 1)], v42, v45 - v42);
            v39 = v42;
          }
        }
      }
      else
      {
        v63 = v42;
        v47 = v45;
      }
      v64 = *((_QWORD *)v10 - 1);
      v10 -= 8;
      *((_QWORD *)v63 - 1) = v64;
      v46 = v63 - 8;
      v45 = v47;
      v42 = v46;
    }
    while (v10 != *((char **)a1 + 2));
    goto LABEL_46;
  }
  v5 = *(unsigned int *)(__sz + 24);
  if (*((_QWORD *)a1 + 6) <= v5)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockContainer.cpp", 55, (uint64_t)"md_cell.BlockTableIndex() < Size()", 34, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      v5 = *(unsigned int *)(v3 + 24);
      goto LABEL_5;
    }
LABEL_573:
    abort();
  }
LABEL_5:
  v6 = *(_QWORD *)(*((_QWORD *)a1 + 2) + (((*((_QWORD *)a1 + 5) + v5) >> 1) & 0x7FFFFFFFFFFFFFF8))
     + 2936 * ((*((_DWORD *)a1 + 10) + (_DWORD)v5) & 0xF);
  bzero((void *)v6, 0xB65uLL);
  *(_QWORD *)(v6 + 2920) = v3;
  *(_DWORD *)(v6 + 2928) = -1;
  v7 = *a1;
  if ((*a1 & 1) != 0)
  {
    v25 = (_QWORD *)(*(_QWORD *)(*((_QWORD *)a1 + 14) + (((*((_QWORD *)a1 + 17) + v5) >> 1) & 0x7FFFFFFFFFFFFFF8))
                   + 1016 * ((*((_DWORD *)a1 + 34) + (_DWORD)v5) & 0xF));
    bzero(v25, 0x3E9uLL);
    v25[126] = v3;
    v7 = *a1;
    if ((*a1 & 4) == 0)
    {
LABEL_7:
      if ((v7 & 0x10) == 0)
        return;
      goto LABEL_29;
    }
  }
  else if ((*a1 & 4) == 0)
  {
    goto LABEL_7;
  }
  bzero(__src, 0xB65uLL);
  v26 = 0;
  __src[365] = v3;
  v27 = *((_QWORD *)a1 + 23) + v5;
  v28 = *(_QWORD *)(*((_QWORD *)a1 + 20) + ((v27 >> 1) & 0x7FFFFFFFFFFFFFF8));
  v29 = v27 & 0xF;
  do
  {
    *(_DWORD *)(v28 + 2928 * v29 + v26) = *(_DWORD *)((char *)__src + v26);
    v26 += 4;
  }
  while (v26 != 2916);
  v30 = v28 + 2928 * v29;
  *(_DWORD *)(v30 + 2924) = HIDWORD(__src[365]);
  *(_QWORD *)(v30 + 2916) = *(_QWORD *)((char *)&__src[364] + 4);
  if ((*a1 & 0x10) != 0)
  {
LABEL_29:
    for (j = 0; j != 3500; j += 28)
    {
      v32 = (char *)__src + j;
      *(_QWORD *)v32 = 0;
      *((_QWORD *)v32 + 1) = 0;
      *(_DWORD *)(v32 + 23) = 0;
      *((_QWORD *)v32 + 2) = 0;
      v32[27] = -1;
    }
    BYTE4(__src[437]) = 0;
    __src[438] = v3;
    memcpy((void *)(*(_QWORD *)(*((_QWORD *)a1 + 26) + (((*((_QWORD *)a1 + 29) + v5) >> 1) & 0x7FFFFFFFFFFFFFF8))+ 3512 * ((*((_DWORD *)a1 + 58) + (_DWORD)v5) & 0xF)), __src, 0xDB8uLL);
  }
}

void sub_223A23A24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  operator delete(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23A50(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23A64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23A78(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23A8C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23AA0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23AB4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23ACC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23AE4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23AFC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23B14(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23B2C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23B44(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23B5C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23B74(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A23B8C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223A23BA4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  if (*(_QWORD *)(a1 + 232))
  {
    operator delete(*(void **)(a1 + 208));
    *(_QWORD *)(a1 + 208) = &unk_2245C5160;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
  }
  v2 = *(void **)(a1 + 184);
  if (v2)
  {
    *(_QWORD *)(a1 + 192) = v2;
    operator delete(v2);
  }
  v3 = *(void **)(a1 + 160);
  if (v3)
  {
    *(_QWORD *)(a1 + 168) = v3;
    operator delete(v3);
  }
  v4 = *(void **)(a1 + 136);
  if (v4)
  {
    *(_QWORD *)(a1 + 144) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 112);
  if (v5)
  {
    *(_QWORD *)(a1 + 120) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 88);
  if (v6)
  {
    *(_QWORD *)(a1 + 96) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 64);
  if (v7)
  {
    *(_QWORD *)(a1 + 72) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 40);
  if (v8)
  {
    *(_QWORD *)(a1 + 48) = v8;
    operator delete(v8);
  }
  v9 = *(void **)(a1 + 16);
  if (v9)
  {
    *(_QWORD *)(a1 + 24) = v9;
    operator delete(v9);
  }
  return a1;
}

uint64_t sub_223A23C6C(uint64_t result)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;

  v1 = 0;
  v2 = 0;
  *(_QWORD *)result = 0;
  *(_DWORD *)(result + 8) = 0;
  v3 = result + 12;
  v4 = result + 2199;
  do
  {
    v5 = 0;
    v6 = 0;
    v7 = v2 < 8;
    do
    {
      v8 = (v1 + v5);
      v9 = (v6 | v2) < 8;
      *(_BYTE *)(v4 + v8) = v9;
      v10 = (_BYTE *)(v3 + 3 * v8);
      *v10 = 1;
      v10[1] = v6 < 8;
      v10[2] = v7;
      *(_BYTE *)(v4 + (v8 + 1)) = v9;
      v11 = (_BYTE *)(v3 + 3 * (v8 + 1));
      *v11 = 1;
      v11[1] = v6 < 8;
      v11[2] = v7;
      *(_BYTE *)(v4 + (v8 + 2)) = v9;
      v12 = (_BYTE *)(v3 + 3 * (v8 + 2));
      *v12 = 1;
      v12[1] = v6 < 8;
      v12[2] = v7;
      *(_BYTE *)(v4 + (v8 + 3)) = v9;
      v13 = (_BYTE *)(v3 + 3 * (v8 + 3));
      *v13 = 1;
      v13[1] = v6 < 8;
      v13[2] = v7;
      *(_BYTE *)(v4 + (v8 + 4)) = v9;
      v14 = (_BYTE *)(v3 + 3 * (v8 + 4));
      *v14 = 1;
      v14[1] = v6 < 8;
      v14[2] = v7;
      *(_BYTE *)(v4 + (v8 + 5)) = v9;
      v15 = (_BYTE *)(v3 + 3 * (v8 + 5));
      *v15 = 1;
      v15[1] = v6 < 8;
      v15[2] = v7;
      *(_BYTE *)(v4 + (v8 + 6)) = v9;
      v16 = (_BYTE *)(v3 + 3 * (v8 + 6));
      *v16 = 1;
      v16[1] = v6 < 8;
      v16[2] = v7;
      *(_BYTE *)(v4 + (v8 + 7)) = v9;
      v17 = (_BYTE *)(v3 + 3 * (v8 + 7));
      *v17 = 1;
      v17[1] = v6 < 8;
      v17[2] = v7;
      v18 = (v8 + 8);
      *(_BYTE *)(v4 + v18) = 0;
      v19 = (_BYTE *)(v3 + v18 + 2 * v18);
      *v19 = 0;
      v19[1] = v6++ < 8;
      v5 += 9;
      v19[2] = v7;
    }
    while (v5 != 81);
    ++v2;
    v1 += 81;
  }
  while (v2 != 9);
  return result;
}

uint64_t sub_223A23DCC(uint64_t a1, __int16 *a2, _QWORD *a3, float a4, float32x4_t _Q1, float32x4_t _Q2)
{
  _QWORD *v6;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v19;
  unsigned int v20;
  float v21;
  uint64_t v22;
  float32x4_t v23;
  float32x4_t v24;
  uint64_t v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  float32x4_t v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  uint64_t v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v36;
  float32x4_t v37;
  float32x4_t v38;
  uint64_t v39;
  float32x4_t v40;
  float32x4_t v41;
  uint64_t v42;
  float32x4_t v43;
  float32x4_t v44;
  uint64_t v45;
  float32x4_t v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;
  char v257;
  char v258;
  char v259;
  char v260;
  char v261;
  char v262;
  char v263;
  char v264;
  char v265;
  char v266;
  char v267;
  char v268;
  char v269;
  char v270;
  char v271;
  char v272;
  char v273;
  char v274;
  char v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  char v285;
  char v286;
  char v287;
  char v288;
  char v289;
  char v290;
  char v291;
  char v292;
  char v293;
  char v294;
  char v295;
  char v296;
  char v297;
  char v298;
  char v299;
  char v300;
  char v301;
  char v302;
  char v303;
  char v304;
  char v305;
  char v306;
  char v307;
  char v308;
  char v309;
  char v310;
  char v311;
  char v312;
  char v313;
  char v314;
  char v315;
  char v316;
  char v317;
  char v318;
  char v319;
  char v320;
  char v321;
  char v322;
  char v323;
  char v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  char v339;
  char v340;
  char v341;
  char v342;
  char v343;
  char v344;
  char v345;
  char v346;
  char v347;
  char v348;
  char v349;
  char v350;
  char v351;
  char v352;
  char v353;
  char v354;
  char v355;
  char v356;
  char v357;
  char v358;
  char v359;
  char v360;
  char v361;
  char v362;
  char v363;
  char v364;
  char v365;
  char v366;
  char v367;
  char v368;
  char v369;
  char v370;
  char v371;
  char v372;
  char v373;
  char v374;
  char v375;
  char v376;
  char v377;
  char v378;
  char v379;
  char v380;
  char v381;
  char v382;
  char v383;
  char v384;
  char v385;
  char v386;
  char v387;
  char v388;
  char v389;
  char v390;
  char v391;
  char v392;
  char v393;
  char v394;
  char v395;
  char v396;
  char v397;
  char v398;
  char v399;
  char v400;
  char v401;
  char v402;
  char v403;
  char v404;
  char v405;
  char v406;
  char v407;
  char v408;
  char v409;
  char v410;
  char v411;
  char v412;
  char v413;
  char v414;
  char v415;
  char v416;
  char v417;
  char v418;
  char v419;
  char v420;
  char v421;
  char v422;
  char v423;
  char v424;
  char v425;
  char v426;
  char v427;
  char v428;
  char v429;
  char v430;
  char v431;
  char v432;
  char v433;
  char v434;
  char v435;
  char v436;
  char v437;
  char v438;
  char v439;
  char v440;
  char v441;
  char v442;
  char v443;
  char v444;
  char v445;
  char v446;
  char v447;
  char v448;
  char v449;
  char v450;
  char v451;
  char v452;
  char v453;
  char v454;
  char v455;
  char v456;
  char v457;
  char v458;
  char v459;
  char v460;
  char v461;
  char v462;
  char v463;
  char v464;
  char v465;
  char v466;
  char v467;
  char v468;
  char v469;
  char v470;
  char v471;
  char v472;
  char v473;
  char v474;
  char v475;
  char v476;
  char v477;
  char v478;
  char v479;
  char v480;
  char v481;
  char v482;
  char v483;
  char v484;
  char v485;
  char v486;
  char v487;
  char v488;
  char v489;
  char v490;
  char v491;
  char v492;
  char v493;
  char v494;
  char v495;
  char v496;
  char v497;
  char v498;
  char v499;
  char v500;
  char v501;
  char v502;
  char v503;
  char v504;
  char v505;
  char v506;
  char v507;
  char v508;
  char v509;
  char v510;
  char v511;
  char v512;
  char v513;
  char v514;
  char v515;
  char v516;
  char v517;
  char v518;
  char v519;
  char v520;
  char v521;
  char v522;
  char v523;
  char v524;
  char v525;
  char v526;
  char v527;
  char v528;
  char v529;
  char v530;
  char v531;
  char v532;
  char v533;
  char v534;
  char v535;
  char v536;
  char v537;
  char v538;
  char v539;
  char v540;
  char v541;
  char v542;
  char v543;
  char v544;
  char v545;
  char v546;
  char v547;
  char v548;
  char v549;
  char v550;
  char v551;
  char v552;
  char v553;
  char v554;
  char v555;
  char v556;
  char v557;
  char v558;
  char v559;
  char v560;
  char v561;
  char v562;
  char v563;
  char v564;
  char v565;
  char v566;
  char v567;
  char v568;
  char v569;
  char v570;
  char v571;
  char v572;
  char v573;
  char v574;
  char v575;
  char v576;
  char v577;
  char v578;
  char v579;
  char v580;
  char v581;
  char v582;
  char v583;
  char v584;
  char v585;
  char v586;
  char v587;
  char v588;
  char v589;
  char v590;
  char v591;
  char v592;
  char v593;
  char v594;
  char v595;
  char v596;
  char v597;
  char v598;
  char v599;
  char v600;
  char v601;
  char v602;
  char v603;
  char v604;
  char v605;
  char v606;
  char v607;
  char v608;
  char v609;
  char v610;
  char v611;
  char v612;
  char v613;
  char v614;
  char v615;
  char v616;
  char v617;
  char v618;
  char v619;
  char v620;
  char v621;
  char v622;
  char v623;
  char v624;
  char v625;
  char v626;
  char v627;
  char v628;
  char v629;
  char v630;
  char v631;
  char v632;
  char v633;
  char v634;
  char v635;
  char v636;
  char v637;
  char v638;
  char v639;
  char v640;
  char v641;
  char v642;
  char v643;
  char v644;
  char v645;
  char v646;
  char v647;
  char v648;
  char v649;
  char v650;
  char v651;
  char v652;
  char v653;
  char v654;
  char v655;
  char v656;
  char v657;
  char v658;
  char v659;
  char v660;
  char v661;
  char v662;
  char v663;
  char v664;
  char v665;
  char v666;
  char v667;
  char v668;
  char v669;
  char v670;
  char v671;
  char v672;
  char v673;
  char v674;
  char v675;
  char v676;
  char v677;
  char v678;
  char v679;
  char v680;
  char v681;
  char v682;
  char v683;
  char v684;
  char v685;
  char v686;
  char v687;
  char v688;
  char v689;
  char v690;
  char v691;
  char v692;
  char v693;
  char v694;
  char v695;
  char v696;
  char v697;
  char v698;
  char v699;
  char v700;
  char v701;
  char v702;
  char v703;
  char v704;
  char v705;
  char v706;
  char v707;
  char v708;
  char v709;
  char v710;
  char v711;
  char v712;
  char v713;
  char v714;
  char v715;
  char v716;
  char v717;
  char v718;
  char v719;
  char v720;
  char v721;
  char v722;
  char v723;
  char v724;
  char v725;
  char v726;
  char v727;
  char v728;
  char v729;
  char v730;
  char v731;
  char v732;
  char v733;
  char v734;
  char v735;
  char v736;
  char v737;
  char v738;
  char v739;
  char v740;
  char v741;
  char v742;
  char v743;
  char v744;
  char v745;
  char v746;
  char v747;
  char v748;
  char v749;
  char v750;
  char v751;
  char v752;
  char v753;
  char v754;
  char v755;
  char v756;
  char v757;
  char v758;
  char v759;
  char v760;
  char v761;
  char v762;
  char v763;
  char v764;
  char v765;
  char v766;
  char v767;
  char v768;
  char v769;
  char v770;
  char v771;
  char v772;
  char v773;
  char v774;
  char v775;
  char v776;
  char v777;
  char v778;
  char v779;
  char v780;
  char v781;
  int32x2_t *v782;
  float v783;
  uint64_t v784;
  _BYTE *v785;
  float32x4_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  int v790;
  __int16 *v791;
  int v792;
  float v793;
  float *v794;
  float v795;
  float v796;
  int v797;
  int v798;
  uint64_t v799;
  int v800;
  int v801;
  float v802;
  float *v803;
  float v804;
  int v805;
  int v806;
  uint64_t v807;
  uint64_t v808;
  int v809;
  int v810;
  float v811;
  float *v812;
  float v813;
  int v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  unint64_t v818;
  unsigned int v819;
  void *v820;
  unint64_t v821;
  uint64_t v822;
  uint64_t v823;
  unint64_t v824;
  char *v825;
  char *v826;
  char *v827;
  char *v828;
  char *v829;
  uint64_t v830;
  int v831;
  _BYTE *v832;
  _BYTE *v833;
  char *v834;
  uint64_t v835;
  char *v836;
  char *v837;
  uint64_t v838;
  unint64_t v839;
  uint64_t v840;
  char *v841;
  char *v842;
  __int128 *v843;
  uint64_t v844;
  __int128 v845;
  int v846;
  _BYTE *v847;
  _BYTE *v848;
  char *v849;
  uint64_t v850;
  char *v851;
  char *v852;
  uint64_t v853;
  unint64_t v854;
  uint64_t v855;
  char *v856;
  char *v857;
  __int128 *v858;
  uint64_t v859;
  __int128 v860;
  int v861;
  unint64_t v862;
  char *v863;
  char *v864;
  uint64_t v865;
  char *v866;
  char *v867;
  char *v868;
  int v869;
  __int16 v870;
  uint64_t v871;
  int v872;
  uint64_t v873;
  _WORD *v874;
  char *v875;
  char *v876;
  uint64_t v877;
  uint64_t v878;
  unint64_t v879;
  uint64_t v880;
  _DWORD *v881;
  unint64_t v882;
  unint64_t v883;
  unint64_t v884;
  char *v885;
  char *v886;
  char *v887;
  uint64_t v888;
  int v889;
  unint64_t v890;
  char *v891;
  _DWORD *v892;
  char *v893;
  uint64_t v894;
  uint64_t v895;
  unint64_t v896;
  uint64_t v897;
  unint64_t v898;
  _BYTE *v899;
  _DWORD *v900;
  unint64_t v901;
  uint64_t v902;
  uint64_t v903;
  char *v904;
  _OWORD *v905;
  char *v906;
  uint64_t v907;
  __int128 v908;
  int v909;
  unint64_t v910;
  char *v911;
  char *v912;
  uint64_t v913;
  unint64_t v914;
  uint64_t v915;
  unint64_t v916;
  uint64_t v917;
  _BYTE *v918;
  _WORD *v919;
  int64_t v920;
  unint64_t v921;
  char *v922;
  uint64_t v923;
  uint64_t v924;
  char *v925;
  _OWORD *v926;
  char *v927;
  uint64_t v928;
  __int128 v929;
  int v930;
  const char *v931;
  const char *v932;
  const char *v933;
  const char *v934;
  const char *v935;
  const char *v936;
  const char *v937;
  const char *v938;
  int8x16_t v939;
  int8x16_t v940;
  int8x16_t v941;
  int8x16_t v942;
  int8x16_t v943;
  int8x16_t v944;
  int8x16_t v945;
  uint64_t v946;
  int8x16_t v947;
  int8x16_t v948;
  int8x16_t v949;
  int8x16_t v950;
  int8x16_t v951;
  int8x16_t v952;
  int8x16_t v953;
  int8x16_t v954;
  int8x16_t v955;
  int8x16_t *v956;
  int8x16_t *v957;
  __int8 v958;
  __int8 v959;
  __int8 v960;
  __int8 v961;
  __int8 v962;
  __int8 v963;
  __int8 v964;
  const char *v965;
  __int8 v966;
  char *v967;
  char v968;
  __int8 v969;
  char v970;
  __int8 v971;
  char v972;
  __int8 v973;
  uint64_t v974;
  uint64_t result;
  uint64_t v976;
  unsigned int v977;
  _DWORD *v978;
  const char *v979;
  int v980;
  int v981;
  uint64_t v982;
  uint64_t v983;
  int8x16_t v984;
  int8x16_t v985;
  unsigned int v986;
  unsigned int v987;
  char *v988;
  _WORD *v989;
  char *v990;
  int v991;
  int v992;
  int v993;
  unint64_t v994;
  _WORD *v995;
  unint64_t v996;
  unint64_t v997;
  unint64_t v998;
  unint64_t v999;
  char *v1000;
  char *v1001;
  char *v1002;
  int v1003;
  __int16 v1004;
  char *v1005;
  _WORD *v1006;
  const char *v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  _QWORD *v1012;
  char **v1013;
  void **v1014;
  uint64_t v1015;
  const char *v1016;
  const char *v1017;
  int v1018;
  unsigned int v1019;
  int v1020;
  unsigned int v1021;
  _DWORD v1023[6];
  int8x16_t v1024;
  int8x8_t v1025;
  unint64_t v1026;
  int v1027;
  _DWORD v1028[160];
  uint64_t v1029;

  v6 = a3;
  v1029 = *MEMORY[0x24BDAC8D0];
  if (*(float *)a1 != a4)
  {
    v8 = 0;
    v9 = 0;
    *(float *)a1 = a4;
    *(float *)(a1 + 4) = 0.00000011921 / a4;
    *(float *)(a1 + 8) = a4 - (float)(0.00000011921 / a4);
    v10 = a1 + 4548;
    __asm
    {
      FMOV            V1.4S, #1.0
      FMOV            V2.4S, #3.0
      FMOV            V3.4S, #4.0
      FMOV            V4.4S, #5.0
      FMOV            V5.4S, #6.0
      FMOV            V6.4S, #7.0
    }
    do
    {
      v19 = 0;
      v20 = 0;
      v21 = (float)v9;
      do
      {
        v22 = v10 + 12 * (v8 + v19);
        v23.i32[0] = 0;
        v23.i32[3] = 0;
        v23.f32[1] = (float)v20;
        v23.f32[2] = (float)v9;
        v24 = vmulq_n_f32(v23, a4);
        *(_DWORD *)(v22 + 8) = v24.i32[2];
        *(_QWORD *)v22 = v24.i64[0];
        v25 = v10 + 12 * (v8 + v19 + 1);
        v26 = _Q1;
        v26.f32[1] = (float)v20;
        v26.f32[2] = (float)v9;
        v27 = vmulq_n_f32(v26, a4);
        *(_DWORD *)(v25 + 8) = v27.i32[2];
        *(_QWORD *)v25 = v27.i64[0];
        v28 = v10 + 12 * (v8 + v19 + 2);
        v27.i32[0] = 0x40000000;
        v27.f32[1] = (float)v20;
        v27.i64[1] = LODWORD(v21) | 0x4000000000000000;
        v29 = vmulq_n_f32(v27, a4);
        *(_DWORD *)(v28 + 8) = v29.i32[2];
        *(_QWORD *)v28 = v29.i64[0];
        v30 = v10 + 12 * (v8 + v19 + 3);
        v31 = _Q2;
        v31.f32[1] = (float)v20;
        v31.f32[2] = (float)v9;
        v32 = vmulq_n_f32(v31, a4);
        *(_DWORD *)(v30 + 8) = v32.i32[2];
        *(_QWORD *)v30 = v32.i64[0];
        v33 = v10 + 12 * (v8 + v19 + 4);
        v34 = _Q3;
        v34.f32[1] = (float)v20;
        v34.f32[2] = (float)v9;
        v35 = vmulq_n_f32(v34, a4);
        *(_DWORD *)(v33 + 8) = v35.i32[2];
        *(_QWORD *)v33 = v35.i64[0];
        v36 = v10 + 12 * (v8 + v19 + 5);
        v37 = _Q4;
        v37.f32[1] = (float)v20;
        v37.f32[2] = (float)v9;
        v38 = vmulq_n_f32(v37, a4);
        *(_DWORD *)(v36 + 8) = v38.i32[2];
        *(_QWORD *)v36 = v38.i64[0];
        v39 = v10 + 12 * (v8 + v19 + 6);
        v40 = _Q5;
        v40.f32[1] = (float)v20;
        v40.f32[2] = (float)v9;
        v41 = vmulq_n_f32(v40, a4);
        *(_DWORD *)(v39 + 8) = v41.i32[2];
        *(_QWORD *)v39 = v41.i64[0];
        v42 = v10 + 12 * (v8 + v19 + 7);
        v43 = _Q6;
        v43.f32[1] = (float)v20;
        v43.f32[2] = (float)v9;
        v44 = vmulq_n_f32(v43, a4);
        *(_DWORD *)(v42 + 8) = v44.i32[2];
        *(_QWORD *)v42 = v44.i64[0];
        v45 = v10 + 12 * (v8 + v19 + 8);
        v44.i32[0] = 1090519040;
        v44.f32[1] = (float)v20;
        v44.i64[1] = LODWORD(v21) | 0x4100000000000000;
        v46 = vmulq_n_f32(v44, a4);
        *(_DWORD *)(v45 + 8) = v46.i32[2];
        *(_QWORD *)v45 = v46.i64[0];
        ++v20;
        v19 += 9;
      }
      while (v19 != 81);
      ++v9;
      v8 += 81;
    }
    while (v9 != 9);
  }
  v47 = 0;
  v1018 = 0;
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v1019 = 0;
  v51 = 0;
  v52 = 0;
  *(_BYTE *)(a1 + 3738) = *a2 > 0;
  if (*((_BYTE *)a2 + 2))
    v53 = -1;
  else
    v53 = 0;
  *(_BYTE *)(a1 + 2928) = v53;
  *(_BYTE *)(a1 + 3739) = a2[2] > 0;
  if (*((_BYTE *)a2 + 6))
    v54 = -1;
  else
    v54 = 0;
  *(_BYTE *)(a1 + 2929) = v54;
  *(_BYTE *)(a1 + 3740) = a2[4] > 0;
  if (*((_BYTE *)a2 + 10))
    v55 = -1;
  else
    v55 = 0;
  *(_BYTE *)(a1 + 2930) = v55;
  *(_BYTE *)(a1 + 3741) = a2[6] > 0;
  if (*((_BYTE *)a2 + 14))
    v56 = -1;
  else
    v56 = 0;
  *(_BYTE *)(a1 + 2931) = v56;
  *(_BYTE *)(a1 + 3742) = a2[8] > 0;
  if (*((_BYTE *)a2 + 18))
    v57 = -1;
  else
    v57 = 0;
  *(_BYTE *)(a1 + 2932) = v57;
  *(_BYTE *)(a1 + 3743) = a2[10] > 0;
  if (*((_BYTE *)a2 + 22))
    v58 = -1;
  else
    v58 = 0;
  *(_BYTE *)(a1 + 2933) = v58;
  *(_BYTE *)(a1 + 3744) = a2[12] > 0;
  if (*((_BYTE *)a2 + 26))
    v59 = -1;
  else
    v59 = 0;
  *(_BYTE *)(a1 + 2934) = v59;
  *(_BYTE *)(a1 + 3745) = a2[14] > 0;
  if (*((_BYTE *)a2 + 30))
    v60 = -1;
  else
    v60 = 0;
  *(_BYTE *)(a1 + 2935) = v60;
  *(_BYTE *)(a1 + 3746) = a2[16] > 0;
  if (*((_BYTE *)a2 + 34))
    v61 = -1;
  else
    v61 = 0;
  *(_BYTE *)(a1 + 2936) = v61;
  *(_BYTE *)(a1 + 3747) = a2[18] > 0;
  if (*((_BYTE *)a2 + 38))
    v62 = -1;
  else
    v62 = 0;
  *(_BYTE *)(a1 + 2937) = v62;
  *(_BYTE *)(a1 + 3748) = a2[20] > 0;
  if (*((_BYTE *)a2 + 42))
    v63 = -1;
  else
    v63 = 0;
  *(_BYTE *)(a1 + 2938) = v63;
  *(_BYTE *)(a1 + 3749) = a2[22] > 0;
  if (*((_BYTE *)a2 + 46))
    v64 = -1;
  else
    v64 = 0;
  *(_BYTE *)(a1 + 2939) = v64;
  *(_BYTE *)(a1 + 3750) = a2[24] > 0;
  if (*((_BYTE *)a2 + 50))
    v65 = -1;
  else
    v65 = 0;
  *(_BYTE *)(a1 + 2940) = v65;
  *(_BYTE *)(a1 + 3751) = a2[26] > 0;
  if (*((_BYTE *)a2 + 54))
    v66 = -1;
  else
    v66 = 0;
  *(_BYTE *)(a1 + 2941) = v66;
  *(_BYTE *)(a1 + 3752) = a2[28] > 0;
  if (*((_BYTE *)a2 + 58))
    v67 = -1;
  else
    v67 = 0;
  *(_BYTE *)(a1 + 2942) = v67;
  *(_BYTE *)(a1 + 3753) = a2[30] > 0;
  if (*((_BYTE *)a2 + 62))
    v68 = -1;
  else
    v68 = 0;
  *(_BYTE *)(a1 + 2943) = v68;
  *(_BYTE *)(a1 + 3754) = a2[32] > 0;
  if (*((_BYTE *)a2 + 66))
    v69 = -1;
  else
    v69 = 0;
  *(_BYTE *)(a1 + 2944) = v69;
  *(_BYTE *)(a1 + 3755) = a2[34] > 0;
  if (*((_BYTE *)a2 + 70))
    v70 = -1;
  else
    v70 = 0;
  *(_BYTE *)(a1 + 2945) = v70;
  *(_BYTE *)(a1 + 3756) = a2[36] > 0;
  if (*((_BYTE *)a2 + 74))
    v71 = -1;
  else
    v71 = 0;
  *(_BYTE *)(a1 + 2946) = v71;
  *(_BYTE *)(a1 + 3757) = a2[38] > 0;
  if (*((_BYTE *)a2 + 78))
    v72 = -1;
  else
    v72 = 0;
  *(_BYTE *)(a1 + 2947) = v72;
  *(_BYTE *)(a1 + 3758) = a2[40] > 0;
  if (*((_BYTE *)a2 + 82))
    v73 = -1;
  else
    v73 = 0;
  *(_BYTE *)(a1 + 2948) = v73;
  *(_BYTE *)(a1 + 3759) = a2[42] > 0;
  if (*((_BYTE *)a2 + 86))
    v74 = -1;
  else
    v74 = 0;
  *(_BYTE *)(a1 + 2949) = v74;
  *(_BYTE *)(a1 + 3760) = a2[44] > 0;
  if (*((_BYTE *)a2 + 90))
    v75 = -1;
  else
    v75 = 0;
  *(_BYTE *)(a1 + 2950) = v75;
  *(_BYTE *)(a1 + 3761) = a2[46] > 0;
  if (*((_BYTE *)a2 + 94))
    v76 = -1;
  else
    v76 = 0;
  *(_BYTE *)(a1 + 2951) = v76;
  *(_BYTE *)(a1 + 3762) = a2[48] > 0;
  if (*((_BYTE *)a2 + 98))
    v77 = -1;
  else
    v77 = 0;
  *(_BYTE *)(a1 + 2952) = v77;
  *(_BYTE *)(a1 + 3763) = a2[50] > 0;
  if (*((_BYTE *)a2 + 102))
    v78 = -1;
  else
    v78 = 0;
  *(_BYTE *)(a1 + 2953) = v78;
  *(_BYTE *)(a1 + 3764) = a2[52] > 0;
  if (*((_BYTE *)a2 + 106))
    v79 = -1;
  else
    v79 = 0;
  *(_BYTE *)(a1 + 2954) = v79;
  *(_BYTE *)(a1 + 3765) = a2[54] > 0;
  if (*((_BYTE *)a2 + 110))
    v80 = -1;
  else
    v80 = 0;
  *(_BYTE *)(a1 + 2955) = v80;
  *(_BYTE *)(a1 + 3766) = a2[56] > 0;
  if (*((_BYTE *)a2 + 114))
    v81 = -1;
  else
    v81 = 0;
  *(_BYTE *)(a1 + 2956) = v81;
  *(_BYTE *)(a1 + 3767) = a2[58] > 0;
  if (*((_BYTE *)a2 + 118))
    v82 = -1;
  else
    v82 = 0;
  *(_BYTE *)(a1 + 2957) = v82;
  *(_BYTE *)(a1 + 3768) = a2[60] > 0;
  if (*((_BYTE *)a2 + 122))
    v83 = -1;
  else
    v83 = 0;
  *(_BYTE *)(a1 + 2958) = v83;
  *(_BYTE *)(a1 + 3769) = a2[62] > 0;
  if (*((_BYTE *)a2 + 126))
    v84 = -1;
  else
    v84 = 0;
  *(_BYTE *)(a1 + 2959) = v84;
  *(_BYTE *)(a1 + 3770) = a2[64] > 0;
  if (*((_BYTE *)a2 + 130))
    v85 = -1;
  else
    v85 = 0;
  *(_BYTE *)(a1 + 2960) = v85;
  *(_BYTE *)(a1 + 3771) = a2[66] > 0;
  if (*((_BYTE *)a2 + 134))
    v86 = -1;
  else
    v86 = 0;
  *(_BYTE *)(a1 + 2961) = v86;
  *(_BYTE *)(a1 + 3772) = a2[68] > 0;
  if (*((_BYTE *)a2 + 138))
    v87 = -1;
  else
    v87 = 0;
  *(_BYTE *)(a1 + 2962) = v87;
  *(_BYTE *)(a1 + 3773) = a2[70] > 0;
  if (*((_BYTE *)a2 + 142))
    v88 = -1;
  else
    v88 = 0;
  *(_BYTE *)(a1 + 2963) = v88;
  *(_BYTE *)(a1 + 3774) = a2[72] > 0;
  if (*((_BYTE *)a2 + 146))
    v89 = -1;
  else
    v89 = 0;
  *(_BYTE *)(a1 + 2964) = v89;
  *(_BYTE *)(a1 + 3775) = a2[74] > 0;
  if (*((_BYTE *)a2 + 150))
    v90 = -1;
  else
    v90 = 0;
  *(_BYTE *)(a1 + 2965) = v90;
  *(_BYTE *)(a1 + 3776) = a2[76] > 0;
  if (*((_BYTE *)a2 + 154))
    v91 = -1;
  else
    v91 = 0;
  *(_BYTE *)(a1 + 2966) = v91;
  *(_BYTE *)(a1 + 3777) = a2[78] > 0;
  if (*((_BYTE *)a2 + 158))
    v92 = -1;
  else
    v92 = 0;
  *(_BYTE *)(a1 + 2967) = v92;
  *(_BYTE *)(a1 + 3778) = a2[80] > 0;
  if (*((_BYTE *)a2 + 162))
    v93 = -1;
  else
    v93 = 0;
  *(_BYTE *)(a1 + 2968) = v93;
  *(_BYTE *)(a1 + 3779) = a2[82] > 0;
  if (*((_BYTE *)a2 + 166))
    v94 = -1;
  else
    v94 = 0;
  *(_BYTE *)(a1 + 2969) = v94;
  *(_BYTE *)(a1 + 3780) = a2[84] > 0;
  if (*((_BYTE *)a2 + 170))
    v95 = -1;
  else
    v95 = 0;
  *(_BYTE *)(a1 + 2970) = v95;
  *(_BYTE *)(a1 + 3781) = a2[86] > 0;
  if (*((_BYTE *)a2 + 174))
    v96 = -1;
  else
    v96 = 0;
  *(_BYTE *)(a1 + 2971) = v96;
  *(_BYTE *)(a1 + 3782) = a2[88] > 0;
  if (*((_BYTE *)a2 + 178))
    v97 = -1;
  else
    v97 = 0;
  *(_BYTE *)(a1 + 2972) = v97;
  *(_BYTE *)(a1 + 3783) = a2[90] > 0;
  if (*((_BYTE *)a2 + 182))
    v98 = -1;
  else
    v98 = 0;
  *(_BYTE *)(a1 + 2973) = v98;
  *(_BYTE *)(a1 + 3784) = a2[92] > 0;
  if (*((_BYTE *)a2 + 186))
    v99 = -1;
  else
    v99 = 0;
  *(_BYTE *)(a1 + 2974) = v99;
  *(_BYTE *)(a1 + 3785) = a2[94] > 0;
  if (*((_BYTE *)a2 + 190))
    v100 = -1;
  else
    v100 = 0;
  *(_BYTE *)(a1 + 2975) = v100;
  *(_BYTE *)(a1 + 3786) = a2[96] > 0;
  if (*((_BYTE *)a2 + 194))
    v101 = -1;
  else
    v101 = 0;
  *(_BYTE *)(a1 + 2976) = v101;
  *(_BYTE *)(a1 + 3787) = a2[98] > 0;
  if (*((_BYTE *)a2 + 198))
    v102 = -1;
  else
    v102 = 0;
  *(_BYTE *)(a1 + 2977) = v102;
  *(_BYTE *)(a1 + 3788) = a2[100] > 0;
  if (*((_BYTE *)a2 + 202))
    v103 = -1;
  else
    v103 = 0;
  *(_BYTE *)(a1 + 2978) = v103;
  *(_BYTE *)(a1 + 3789) = a2[102] > 0;
  if (*((_BYTE *)a2 + 206))
    v104 = -1;
  else
    v104 = 0;
  *(_BYTE *)(a1 + 2979) = v104;
  *(_BYTE *)(a1 + 3790) = a2[104] > 0;
  if (*((_BYTE *)a2 + 210))
    v105 = -1;
  else
    v105 = 0;
  *(_BYTE *)(a1 + 2980) = v105;
  *(_BYTE *)(a1 + 3791) = a2[106] > 0;
  if (*((_BYTE *)a2 + 214))
    v106 = -1;
  else
    v106 = 0;
  *(_BYTE *)(a1 + 2981) = v106;
  *(_BYTE *)(a1 + 3792) = a2[108] > 0;
  if (*((_BYTE *)a2 + 218))
    v107 = -1;
  else
    v107 = 0;
  *(_BYTE *)(a1 + 2982) = v107;
  *(_BYTE *)(a1 + 3793) = a2[110] > 0;
  if (*((_BYTE *)a2 + 222))
    v108 = -1;
  else
    v108 = 0;
  *(_BYTE *)(a1 + 2983) = v108;
  *(_BYTE *)(a1 + 3794) = a2[112] > 0;
  if (*((_BYTE *)a2 + 226))
    v109 = -1;
  else
    v109 = 0;
  *(_BYTE *)(a1 + 2984) = v109;
  *(_BYTE *)(a1 + 3795) = a2[114] > 0;
  if (*((_BYTE *)a2 + 230))
    v110 = -1;
  else
    v110 = 0;
  *(_BYTE *)(a1 + 2985) = v110;
  *(_BYTE *)(a1 + 3796) = a2[116] > 0;
  if (*((_BYTE *)a2 + 234))
    v111 = -1;
  else
    v111 = 0;
  *(_BYTE *)(a1 + 2986) = v111;
  *(_BYTE *)(a1 + 3797) = a2[118] > 0;
  if (*((_BYTE *)a2 + 238))
    v112 = -1;
  else
    v112 = 0;
  *(_BYTE *)(a1 + 2987) = v112;
  *(_BYTE *)(a1 + 3798) = a2[120] > 0;
  if (*((_BYTE *)a2 + 242))
    v113 = -1;
  else
    v113 = 0;
  *(_BYTE *)(a1 + 2988) = v113;
  *(_BYTE *)(a1 + 3799) = a2[122] > 0;
  if (*((_BYTE *)a2 + 246))
    v114 = -1;
  else
    v114 = 0;
  *(_BYTE *)(a1 + 2989) = v114;
  *(_BYTE *)(a1 + 3800) = a2[124] > 0;
  if (*((_BYTE *)a2 + 250))
    v115 = -1;
  else
    v115 = 0;
  *(_BYTE *)(a1 + 2990) = v115;
  *(_BYTE *)(a1 + 3801) = a2[126] > 0;
  if (*((_BYTE *)a2 + 254))
    v116 = -1;
  else
    v116 = 0;
  *(_BYTE *)(a1 + 2991) = v116;
  *(_BYTE *)(a1 + 3802) = a2[128] > 0;
  if (*((_BYTE *)a2 + 258))
    v117 = -1;
  else
    v117 = 0;
  *(_BYTE *)(a1 + 2992) = v117;
  *(_BYTE *)(a1 + 3803) = a2[130] > 0;
  if (*((_BYTE *)a2 + 262))
    v118 = -1;
  else
    v118 = 0;
  *(_BYTE *)(a1 + 2993) = v118;
  *(_BYTE *)(a1 + 3804) = a2[132] > 0;
  if (*((_BYTE *)a2 + 266))
    v119 = -1;
  else
    v119 = 0;
  *(_BYTE *)(a1 + 2994) = v119;
  *(_BYTE *)(a1 + 3805) = a2[134] > 0;
  if (*((_BYTE *)a2 + 270))
    v120 = -1;
  else
    v120 = 0;
  *(_BYTE *)(a1 + 2995) = v120;
  *(_BYTE *)(a1 + 3806) = a2[136] > 0;
  if (*((_BYTE *)a2 + 274))
    v121 = -1;
  else
    v121 = 0;
  *(_BYTE *)(a1 + 2996) = v121;
  *(_BYTE *)(a1 + 3807) = a2[138] > 0;
  if (*((_BYTE *)a2 + 278))
    v122 = -1;
  else
    v122 = 0;
  *(_BYTE *)(a1 + 2997) = v122;
  *(_BYTE *)(a1 + 3808) = a2[140] > 0;
  if (*((_BYTE *)a2 + 282))
    v123 = -1;
  else
    v123 = 0;
  *(_BYTE *)(a1 + 2998) = v123;
  *(_BYTE *)(a1 + 3809) = a2[142] > 0;
  if (*((_BYTE *)a2 + 286))
    v124 = -1;
  else
    v124 = 0;
  *(_BYTE *)(a1 + 2999) = v124;
  *(_BYTE *)(a1 + 3810) = a2[144] > 0;
  if (*((_BYTE *)a2 + 290))
    v125 = -1;
  else
    v125 = 0;
  *(_BYTE *)(a1 + 3000) = v125;
  *(_BYTE *)(a1 + 3811) = a2[146] > 0;
  if (*((_BYTE *)a2 + 294))
    v126 = -1;
  else
    v126 = 0;
  *(_BYTE *)(a1 + 3001) = v126;
  *(_BYTE *)(a1 + 3812) = a2[148] > 0;
  if (*((_BYTE *)a2 + 298))
    v127 = -1;
  else
    v127 = 0;
  *(_BYTE *)(a1 + 3002) = v127;
  *(_BYTE *)(a1 + 3813) = a2[150] > 0;
  if (*((_BYTE *)a2 + 302))
    v128 = -1;
  else
    v128 = 0;
  *(_BYTE *)(a1 + 3003) = v128;
  *(_BYTE *)(a1 + 3814) = a2[152] > 0;
  if (*((_BYTE *)a2 + 306))
    v129 = -1;
  else
    v129 = 0;
  *(_BYTE *)(a1 + 3004) = v129;
  *(_BYTE *)(a1 + 3815) = a2[154] > 0;
  if (*((_BYTE *)a2 + 310))
    v130 = -1;
  else
    v130 = 0;
  *(_BYTE *)(a1 + 3005) = v130;
  *(_BYTE *)(a1 + 3816) = a2[156] > 0;
  if (*((_BYTE *)a2 + 314))
    v131 = -1;
  else
    v131 = 0;
  *(_BYTE *)(a1 + 3006) = v131;
  *(_BYTE *)(a1 + 3817) = a2[158] > 0;
  if (*((_BYTE *)a2 + 318))
    v132 = -1;
  else
    v132 = 0;
  *(_BYTE *)(a1 + 3007) = v132;
  *(_BYTE *)(a1 + 3818) = a2[160] > 0;
  if (*((_BYTE *)a2 + 322))
    v133 = -1;
  else
    v133 = 0;
  *(_BYTE *)(a1 + 3008) = v133;
  *(_BYTE *)(a1 + 3819) = a2[162] > 0;
  if (*((_BYTE *)a2 + 326))
    v134 = -1;
  else
    v134 = 0;
  *(_BYTE *)(a1 + 3009) = v134;
  *(_BYTE *)(a1 + 3820) = a2[164] > 0;
  if (*((_BYTE *)a2 + 330))
    v135 = -1;
  else
    v135 = 0;
  *(_BYTE *)(a1 + 3010) = v135;
  *(_BYTE *)(a1 + 3821) = a2[166] > 0;
  if (*((_BYTE *)a2 + 334))
    v136 = -1;
  else
    v136 = 0;
  *(_BYTE *)(a1 + 3011) = v136;
  *(_BYTE *)(a1 + 3822) = a2[168] > 0;
  if (*((_BYTE *)a2 + 338))
    v137 = -1;
  else
    v137 = 0;
  *(_BYTE *)(a1 + 3012) = v137;
  *(_BYTE *)(a1 + 3823) = a2[170] > 0;
  if (*((_BYTE *)a2 + 342))
    v138 = -1;
  else
    v138 = 0;
  *(_BYTE *)(a1 + 3013) = v138;
  *(_BYTE *)(a1 + 3824) = a2[172] > 0;
  if (*((_BYTE *)a2 + 346))
    v139 = -1;
  else
    v139 = 0;
  *(_BYTE *)(a1 + 3014) = v139;
  *(_BYTE *)(a1 + 3825) = a2[174] > 0;
  if (*((_BYTE *)a2 + 350))
    v140 = -1;
  else
    v140 = 0;
  *(_BYTE *)(a1 + 3015) = v140;
  *(_BYTE *)(a1 + 3826) = a2[176] > 0;
  if (*((_BYTE *)a2 + 354))
    v141 = -1;
  else
    v141 = 0;
  *(_BYTE *)(a1 + 3016) = v141;
  *(_BYTE *)(a1 + 3827) = a2[178] > 0;
  if (*((_BYTE *)a2 + 358))
    v142 = -1;
  else
    v142 = 0;
  *(_BYTE *)(a1 + 3017) = v142;
  *(_BYTE *)(a1 + 3828) = a2[180] > 0;
  if (*((_BYTE *)a2 + 362))
    v143 = -1;
  else
    v143 = 0;
  *(_BYTE *)(a1 + 3018) = v143;
  *(_BYTE *)(a1 + 3829) = a2[182] > 0;
  if (*((_BYTE *)a2 + 366))
    v144 = -1;
  else
    v144 = 0;
  *(_BYTE *)(a1 + 3019) = v144;
  *(_BYTE *)(a1 + 3830) = a2[184] > 0;
  if (*((_BYTE *)a2 + 370))
    v145 = -1;
  else
    v145 = 0;
  *(_BYTE *)(a1 + 3020) = v145;
  *(_BYTE *)(a1 + 3831) = a2[186] > 0;
  if (*((_BYTE *)a2 + 374))
    v146 = -1;
  else
    v146 = 0;
  *(_BYTE *)(a1 + 3021) = v146;
  *(_BYTE *)(a1 + 3832) = a2[188] > 0;
  if (*((_BYTE *)a2 + 378))
    v147 = -1;
  else
    v147 = 0;
  *(_BYTE *)(a1 + 3022) = v147;
  *(_BYTE *)(a1 + 3833) = a2[190] > 0;
  if (*((_BYTE *)a2 + 382))
    v148 = -1;
  else
    v148 = 0;
  *(_BYTE *)(a1 + 3023) = v148;
  *(_BYTE *)(a1 + 3834) = a2[192] > 0;
  if (*((_BYTE *)a2 + 386))
    v149 = -1;
  else
    v149 = 0;
  *(_BYTE *)(a1 + 3024) = v149;
  *(_BYTE *)(a1 + 3835) = a2[194] > 0;
  if (*((_BYTE *)a2 + 390))
    v150 = -1;
  else
    v150 = 0;
  *(_BYTE *)(a1 + 3025) = v150;
  *(_BYTE *)(a1 + 3836) = a2[196] > 0;
  if (*((_BYTE *)a2 + 394))
    v151 = -1;
  else
    v151 = 0;
  *(_BYTE *)(a1 + 3026) = v151;
  *(_BYTE *)(a1 + 3837) = a2[198] > 0;
  if (*((_BYTE *)a2 + 398))
    v152 = -1;
  else
    v152 = 0;
  *(_BYTE *)(a1 + 3027) = v152;
  *(_BYTE *)(a1 + 3838) = a2[200] > 0;
  if (*((_BYTE *)a2 + 402))
    v153 = -1;
  else
    v153 = 0;
  *(_BYTE *)(a1 + 3028) = v153;
  *(_BYTE *)(a1 + 3839) = a2[202] > 0;
  if (*((_BYTE *)a2 + 406))
    v154 = -1;
  else
    v154 = 0;
  *(_BYTE *)(a1 + 3029) = v154;
  *(_BYTE *)(a1 + 3840) = a2[204] > 0;
  if (*((_BYTE *)a2 + 410))
    v155 = -1;
  else
    v155 = 0;
  *(_BYTE *)(a1 + 3030) = v155;
  *(_BYTE *)(a1 + 3841) = a2[206] > 0;
  if (*((_BYTE *)a2 + 414))
    v156 = -1;
  else
    v156 = 0;
  *(_BYTE *)(a1 + 3031) = v156;
  *(_BYTE *)(a1 + 3842) = a2[208] > 0;
  if (*((_BYTE *)a2 + 418))
    v157 = -1;
  else
    v157 = 0;
  *(_BYTE *)(a1 + 3032) = v157;
  *(_BYTE *)(a1 + 3843) = a2[210] > 0;
  if (*((_BYTE *)a2 + 422))
    v158 = -1;
  else
    v158 = 0;
  *(_BYTE *)(a1 + 3033) = v158;
  *(_BYTE *)(a1 + 3844) = a2[212] > 0;
  if (*((_BYTE *)a2 + 426))
    v159 = -1;
  else
    v159 = 0;
  *(_BYTE *)(a1 + 3034) = v159;
  *(_BYTE *)(a1 + 3845) = a2[214] > 0;
  if (*((_BYTE *)a2 + 430))
    v160 = -1;
  else
    v160 = 0;
  *(_BYTE *)(a1 + 3035) = v160;
  *(_BYTE *)(a1 + 3846) = a2[216] > 0;
  if (*((_BYTE *)a2 + 434))
    v161 = -1;
  else
    v161 = 0;
  *(_BYTE *)(a1 + 3036) = v161;
  *(_BYTE *)(a1 + 3847) = a2[218] > 0;
  if (*((_BYTE *)a2 + 438))
    v162 = -1;
  else
    v162 = 0;
  *(_BYTE *)(a1 + 3037) = v162;
  *(_BYTE *)(a1 + 3848) = a2[220] > 0;
  if (*((_BYTE *)a2 + 442))
    v163 = -1;
  else
    v163 = 0;
  *(_BYTE *)(a1 + 3038) = v163;
  *(_BYTE *)(a1 + 3849) = a2[222] > 0;
  if (*((_BYTE *)a2 + 446))
    v164 = -1;
  else
    v164 = 0;
  *(_BYTE *)(a1 + 3039) = v164;
  *(_BYTE *)(a1 + 3850) = a2[224] > 0;
  if (*((_BYTE *)a2 + 450))
    v165 = -1;
  else
    v165 = 0;
  *(_BYTE *)(a1 + 3040) = v165;
  *(_BYTE *)(a1 + 3851) = a2[226] > 0;
  if (*((_BYTE *)a2 + 454))
    v166 = -1;
  else
    v166 = 0;
  *(_BYTE *)(a1 + 3041) = v166;
  *(_BYTE *)(a1 + 3852) = a2[228] > 0;
  if (*((_BYTE *)a2 + 458))
    v167 = -1;
  else
    v167 = 0;
  *(_BYTE *)(a1 + 3042) = v167;
  *(_BYTE *)(a1 + 3853) = a2[230] > 0;
  if (*((_BYTE *)a2 + 462))
    v168 = -1;
  else
    v168 = 0;
  *(_BYTE *)(a1 + 3043) = v168;
  *(_BYTE *)(a1 + 3854) = a2[232] > 0;
  if (*((_BYTE *)a2 + 466))
    v169 = -1;
  else
    v169 = 0;
  *(_BYTE *)(a1 + 3044) = v169;
  *(_BYTE *)(a1 + 3855) = a2[234] > 0;
  if (*((_BYTE *)a2 + 470))
    v170 = -1;
  else
    v170 = 0;
  *(_BYTE *)(a1 + 3045) = v170;
  *(_BYTE *)(a1 + 3856) = a2[236] > 0;
  if (*((_BYTE *)a2 + 474))
    v171 = -1;
  else
    v171 = 0;
  *(_BYTE *)(a1 + 3046) = v171;
  *(_BYTE *)(a1 + 3857) = a2[238] > 0;
  if (*((_BYTE *)a2 + 478))
    v172 = -1;
  else
    v172 = 0;
  *(_BYTE *)(a1 + 3047) = v172;
  *(_BYTE *)(a1 + 3858) = a2[240] > 0;
  if (*((_BYTE *)a2 + 482))
    v173 = -1;
  else
    v173 = 0;
  *(_BYTE *)(a1 + 3048) = v173;
  *(_BYTE *)(a1 + 3859) = a2[242] > 0;
  if (*((_BYTE *)a2 + 486))
    v174 = -1;
  else
    v174 = 0;
  *(_BYTE *)(a1 + 3049) = v174;
  *(_BYTE *)(a1 + 3860) = a2[244] > 0;
  if (*((_BYTE *)a2 + 490))
    v175 = -1;
  else
    v175 = 0;
  *(_BYTE *)(a1 + 3050) = v175;
  *(_BYTE *)(a1 + 3861) = a2[246] > 0;
  if (*((_BYTE *)a2 + 494))
    v176 = -1;
  else
    v176 = 0;
  *(_BYTE *)(a1 + 3051) = v176;
  *(_BYTE *)(a1 + 3862) = a2[248] > 0;
  if (*((_BYTE *)a2 + 498))
    v177 = -1;
  else
    v177 = 0;
  *(_BYTE *)(a1 + 3052) = v177;
  *(_BYTE *)(a1 + 3863) = a2[250] > 0;
  if (*((_BYTE *)a2 + 502))
    v178 = -1;
  else
    v178 = 0;
  *(_BYTE *)(a1 + 3053) = v178;
  *(_BYTE *)(a1 + 3864) = a2[252] > 0;
  if (*((_BYTE *)a2 + 506))
    v179 = -1;
  else
    v179 = 0;
  *(_BYTE *)(a1 + 3054) = v179;
  *(_BYTE *)(a1 + 3865) = a2[254] > 0;
  if (*((_BYTE *)a2 + 510))
    v180 = -1;
  else
    v180 = 0;
  *(_BYTE *)(a1 + 3055) = v180;
  *(_BYTE *)(a1 + 3866) = a2[256] > 0;
  if (*((_BYTE *)a2 + 514))
    v181 = -1;
  else
    v181 = 0;
  *(_BYTE *)(a1 + 3056) = v181;
  *(_BYTE *)(a1 + 3867) = a2[258] > 0;
  if (*((_BYTE *)a2 + 518))
    v182 = -1;
  else
    v182 = 0;
  *(_BYTE *)(a1 + 3057) = v182;
  *(_BYTE *)(a1 + 3868) = a2[260] > 0;
  if (*((_BYTE *)a2 + 522))
    v183 = -1;
  else
    v183 = 0;
  *(_BYTE *)(a1 + 3058) = v183;
  *(_BYTE *)(a1 + 3869) = a2[262] > 0;
  if (*((_BYTE *)a2 + 526))
    v184 = -1;
  else
    v184 = 0;
  *(_BYTE *)(a1 + 3059) = v184;
  *(_BYTE *)(a1 + 3870) = a2[264] > 0;
  if (*((_BYTE *)a2 + 530))
    v185 = -1;
  else
    v185 = 0;
  *(_BYTE *)(a1 + 3060) = v185;
  *(_BYTE *)(a1 + 3871) = a2[266] > 0;
  if (*((_BYTE *)a2 + 534))
    v186 = -1;
  else
    v186 = 0;
  *(_BYTE *)(a1 + 3061) = v186;
  *(_BYTE *)(a1 + 3872) = a2[268] > 0;
  if (*((_BYTE *)a2 + 538))
    v187 = -1;
  else
    v187 = 0;
  *(_BYTE *)(a1 + 3062) = v187;
  *(_BYTE *)(a1 + 3873) = a2[270] > 0;
  if (*((_BYTE *)a2 + 542))
    v188 = -1;
  else
    v188 = 0;
  *(_BYTE *)(a1 + 3063) = v188;
  *(_BYTE *)(a1 + 3874) = a2[272] > 0;
  if (*((_BYTE *)a2 + 546))
    v189 = -1;
  else
    v189 = 0;
  *(_BYTE *)(a1 + 3064) = v189;
  *(_BYTE *)(a1 + 3875) = a2[274] > 0;
  if (*((_BYTE *)a2 + 550))
    v190 = -1;
  else
    v190 = 0;
  *(_BYTE *)(a1 + 3065) = v190;
  *(_BYTE *)(a1 + 3876) = a2[276] > 0;
  if (*((_BYTE *)a2 + 554))
    v191 = -1;
  else
    v191 = 0;
  *(_BYTE *)(a1 + 3066) = v191;
  *(_BYTE *)(a1 + 3877) = a2[278] > 0;
  if (*((_BYTE *)a2 + 558))
    v192 = -1;
  else
    v192 = 0;
  *(_BYTE *)(a1 + 3067) = v192;
  *(_BYTE *)(a1 + 3878) = a2[280] > 0;
  if (*((_BYTE *)a2 + 562))
    v193 = -1;
  else
    v193 = 0;
  *(_BYTE *)(a1 + 3068) = v193;
  *(_BYTE *)(a1 + 3879) = a2[282] > 0;
  if (*((_BYTE *)a2 + 566))
    v194 = -1;
  else
    v194 = 0;
  *(_BYTE *)(a1 + 3069) = v194;
  *(_BYTE *)(a1 + 3880) = a2[284] > 0;
  if (*((_BYTE *)a2 + 570))
    v195 = -1;
  else
    v195 = 0;
  *(_BYTE *)(a1 + 3070) = v195;
  *(_BYTE *)(a1 + 3881) = a2[286] > 0;
  if (*((_BYTE *)a2 + 574))
    v196 = -1;
  else
    v196 = 0;
  *(_BYTE *)(a1 + 3071) = v196;
  *(_BYTE *)(a1 + 3882) = a2[288] > 0;
  if (*((_BYTE *)a2 + 578))
    v197 = -1;
  else
    v197 = 0;
  *(_BYTE *)(a1 + 3072) = v197;
  *(_BYTE *)(a1 + 3883) = a2[290] > 0;
  if (*((_BYTE *)a2 + 582))
    v198 = -1;
  else
    v198 = 0;
  *(_BYTE *)(a1 + 3073) = v198;
  *(_BYTE *)(a1 + 3884) = a2[292] > 0;
  if (*((_BYTE *)a2 + 586))
    v199 = -1;
  else
    v199 = 0;
  *(_BYTE *)(a1 + 3074) = v199;
  *(_BYTE *)(a1 + 3885) = a2[294] > 0;
  if (*((_BYTE *)a2 + 590))
    v200 = -1;
  else
    v200 = 0;
  *(_BYTE *)(a1 + 3075) = v200;
  *(_BYTE *)(a1 + 3886) = a2[296] > 0;
  if (*((_BYTE *)a2 + 594))
    v201 = -1;
  else
    v201 = 0;
  *(_BYTE *)(a1 + 3076) = v201;
  *(_BYTE *)(a1 + 3887) = a2[298] > 0;
  if (*((_BYTE *)a2 + 598))
    v202 = -1;
  else
    v202 = 0;
  *(_BYTE *)(a1 + 3077) = v202;
  *(_BYTE *)(a1 + 3888) = a2[300] > 0;
  if (*((_BYTE *)a2 + 602))
    v203 = -1;
  else
    v203 = 0;
  *(_BYTE *)(a1 + 3078) = v203;
  *(_BYTE *)(a1 + 3889) = a2[302] > 0;
  if (*((_BYTE *)a2 + 606))
    v204 = -1;
  else
    v204 = 0;
  *(_BYTE *)(a1 + 3079) = v204;
  *(_BYTE *)(a1 + 3890) = a2[304] > 0;
  if (*((_BYTE *)a2 + 610))
    v205 = -1;
  else
    v205 = 0;
  *(_BYTE *)(a1 + 3080) = v205;
  *(_BYTE *)(a1 + 3891) = a2[306] > 0;
  if (*((_BYTE *)a2 + 614))
    v206 = -1;
  else
    v206 = 0;
  *(_BYTE *)(a1 + 3081) = v206;
  *(_BYTE *)(a1 + 3892) = a2[308] > 0;
  if (*((_BYTE *)a2 + 618))
    v207 = -1;
  else
    v207 = 0;
  *(_BYTE *)(a1 + 3082) = v207;
  *(_BYTE *)(a1 + 3893) = a2[310] > 0;
  if (*((_BYTE *)a2 + 622))
    v208 = -1;
  else
    v208 = 0;
  *(_BYTE *)(a1 + 3083) = v208;
  *(_BYTE *)(a1 + 3894) = a2[312] > 0;
  if (*((_BYTE *)a2 + 626))
    v209 = -1;
  else
    v209 = 0;
  *(_BYTE *)(a1 + 3084) = v209;
  *(_BYTE *)(a1 + 3895) = a2[314] > 0;
  if (*((_BYTE *)a2 + 630))
    v210 = -1;
  else
    v210 = 0;
  *(_BYTE *)(a1 + 3085) = v210;
  *(_BYTE *)(a1 + 3896) = a2[316] > 0;
  if (*((_BYTE *)a2 + 634))
    v211 = -1;
  else
    v211 = 0;
  *(_BYTE *)(a1 + 3086) = v211;
  *(_BYTE *)(a1 + 3897) = a2[318] > 0;
  if (*((_BYTE *)a2 + 638))
    v212 = -1;
  else
    v212 = 0;
  *(_BYTE *)(a1 + 3087) = v212;
  *(_BYTE *)(a1 + 3898) = a2[320] > 0;
  if (*((_BYTE *)a2 + 642))
    v213 = -1;
  else
    v213 = 0;
  *(_BYTE *)(a1 + 3088) = v213;
  *(_BYTE *)(a1 + 3899) = a2[322] > 0;
  if (*((_BYTE *)a2 + 646))
    v214 = -1;
  else
    v214 = 0;
  *(_BYTE *)(a1 + 3089) = v214;
  *(_BYTE *)(a1 + 3900) = a2[324] > 0;
  if (*((_BYTE *)a2 + 650))
    v215 = -1;
  else
    v215 = 0;
  *(_BYTE *)(a1 + 3090) = v215;
  *(_BYTE *)(a1 + 3901) = a2[326] > 0;
  if (*((_BYTE *)a2 + 654))
    v216 = -1;
  else
    v216 = 0;
  *(_BYTE *)(a1 + 3091) = v216;
  *(_BYTE *)(a1 + 3902) = a2[328] > 0;
  if (*((_BYTE *)a2 + 658))
    v217 = -1;
  else
    v217 = 0;
  *(_BYTE *)(a1 + 3092) = v217;
  *(_BYTE *)(a1 + 3903) = a2[330] > 0;
  if (*((_BYTE *)a2 + 662))
    v218 = -1;
  else
    v218 = 0;
  *(_BYTE *)(a1 + 3093) = v218;
  *(_BYTE *)(a1 + 3904) = a2[332] > 0;
  if (*((_BYTE *)a2 + 666))
    v219 = -1;
  else
    v219 = 0;
  *(_BYTE *)(a1 + 3094) = v219;
  *(_BYTE *)(a1 + 3905) = a2[334] > 0;
  if (*((_BYTE *)a2 + 670))
    v220 = -1;
  else
    v220 = 0;
  *(_BYTE *)(a1 + 3095) = v220;
  *(_BYTE *)(a1 + 3906) = a2[336] > 0;
  if (*((_BYTE *)a2 + 674))
    v221 = -1;
  else
    v221 = 0;
  *(_BYTE *)(a1 + 3096) = v221;
  *(_BYTE *)(a1 + 3907) = a2[338] > 0;
  if (*((_BYTE *)a2 + 678))
    v222 = -1;
  else
    v222 = 0;
  *(_BYTE *)(a1 + 3097) = v222;
  *(_BYTE *)(a1 + 3908) = a2[340] > 0;
  if (*((_BYTE *)a2 + 682))
    v223 = -1;
  else
    v223 = 0;
  *(_BYTE *)(a1 + 3098) = v223;
  *(_BYTE *)(a1 + 3909) = a2[342] > 0;
  if (*((_BYTE *)a2 + 686))
    v224 = -1;
  else
    v224 = 0;
  *(_BYTE *)(a1 + 3099) = v224;
  *(_BYTE *)(a1 + 3910) = a2[344] > 0;
  if (*((_BYTE *)a2 + 690))
    v225 = -1;
  else
    v225 = 0;
  *(_BYTE *)(a1 + 3100) = v225;
  *(_BYTE *)(a1 + 3911) = a2[346] > 0;
  if (*((_BYTE *)a2 + 694))
    v226 = -1;
  else
    v226 = 0;
  *(_BYTE *)(a1 + 3101) = v226;
  *(_BYTE *)(a1 + 3912) = a2[348] > 0;
  if (*((_BYTE *)a2 + 698))
    v227 = -1;
  else
    v227 = 0;
  *(_BYTE *)(a1 + 3102) = v227;
  *(_BYTE *)(a1 + 3913) = a2[350] > 0;
  if (*((_BYTE *)a2 + 702))
    v228 = -1;
  else
    v228 = 0;
  *(_BYTE *)(a1 + 3103) = v228;
  *(_BYTE *)(a1 + 3914) = a2[352] > 0;
  if (*((_BYTE *)a2 + 706))
    v229 = -1;
  else
    v229 = 0;
  *(_BYTE *)(a1 + 3104) = v229;
  *(_BYTE *)(a1 + 3915) = a2[354] > 0;
  if (*((_BYTE *)a2 + 710))
    v230 = -1;
  else
    v230 = 0;
  *(_BYTE *)(a1 + 3105) = v230;
  *(_BYTE *)(a1 + 3916) = a2[356] > 0;
  if (*((_BYTE *)a2 + 714))
    v231 = -1;
  else
    v231 = 0;
  *(_BYTE *)(a1 + 3106) = v231;
  *(_BYTE *)(a1 + 3917) = a2[358] > 0;
  if (*((_BYTE *)a2 + 718))
    v232 = -1;
  else
    v232 = 0;
  *(_BYTE *)(a1 + 3107) = v232;
  *(_BYTE *)(a1 + 3918) = a2[360] > 0;
  if (*((_BYTE *)a2 + 722))
    v233 = -1;
  else
    v233 = 0;
  *(_BYTE *)(a1 + 3108) = v233;
  *(_BYTE *)(a1 + 3919) = a2[362] > 0;
  if (*((_BYTE *)a2 + 726))
    v234 = -1;
  else
    v234 = 0;
  *(_BYTE *)(a1 + 3109) = v234;
  *(_BYTE *)(a1 + 3920) = a2[364] > 0;
  if (*((_BYTE *)a2 + 730))
    v235 = -1;
  else
    v235 = 0;
  *(_BYTE *)(a1 + 3110) = v235;
  *(_BYTE *)(a1 + 3921) = a2[366] > 0;
  if (*((_BYTE *)a2 + 734))
    v236 = -1;
  else
    v236 = 0;
  *(_BYTE *)(a1 + 3111) = v236;
  *(_BYTE *)(a1 + 3922) = a2[368] > 0;
  if (*((_BYTE *)a2 + 738))
    v237 = -1;
  else
    v237 = 0;
  *(_BYTE *)(a1 + 3112) = v237;
  *(_BYTE *)(a1 + 3923) = a2[370] > 0;
  if (*((_BYTE *)a2 + 742))
    v238 = -1;
  else
    v238 = 0;
  *(_BYTE *)(a1 + 3113) = v238;
  *(_BYTE *)(a1 + 3924) = a2[372] > 0;
  if (*((_BYTE *)a2 + 746))
    v239 = -1;
  else
    v239 = 0;
  *(_BYTE *)(a1 + 3114) = v239;
  *(_BYTE *)(a1 + 3925) = a2[374] > 0;
  if (*((_BYTE *)a2 + 750))
    v240 = -1;
  else
    v240 = 0;
  *(_BYTE *)(a1 + 3115) = v240;
  *(_BYTE *)(a1 + 3926) = a2[376] > 0;
  if (*((_BYTE *)a2 + 754))
    v241 = -1;
  else
    v241 = 0;
  *(_BYTE *)(a1 + 3116) = v241;
  *(_BYTE *)(a1 + 3927) = a2[378] > 0;
  if (*((_BYTE *)a2 + 758))
    v242 = -1;
  else
    v242 = 0;
  *(_BYTE *)(a1 + 3117) = v242;
  *(_BYTE *)(a1 + 3928) = a2[380] > 0;
  if (*((_BYTE *)a2 + 762))
    v243 = -1;
  else
    v243 = 0;
  *(_BYTE *)(a1 + 3118) = v243;
  *(_BYTE *)(a1 + 3929) = a2[382] > 0;
  if (*((_BYTE *)a2 + 766))
    v244 = -1;
  else
    v244 = 0;
  *(_BYTE *)(a1 + 3119) = v244;
  *(_BYTE *)(a1 + 3930) = a2[384] > 0;
  if (*((_BYTE *)a2 + 770))
    v245 = -1;
  else
    v245 = 0;
  *(_BYTE *)(a1 + 3120) = v245;
  *(_BYTE *)(a1 + 3931) = a2[386] > 0;
  if (*((_BYTE *)a2 + 774))
    v246 = -1;
  else
    v246 = 0;
  *(_BYTE *)(a1 + 3121) = v246;
  *(_BYTE *)(a1 + 3932) = a2[388] > 0;
  if (*((_BYTE *)a2 + 778))
    v247 = -1;
  else
    v247 = 0;
  *(_BYTE *)(a1 + 3122) = v247;
  *(_BYTE *)(a1 + 3933) = a2[390] > 0;
  if (*((_BYTE *)a2 + 782))
    v248 = -1;
  else
    v248 = 0;
  *(_BYTE *)(a1 + 3123) = v248;
  *(_BYTE *)(a1 + 3934) = a2[392] > 0;
  if (*((_BYTE *)a2 + 786))
    v249 = -1;
  else
    v249 = 0;
  *(_BYTE *)(a1 + 3124) = v249;
  *(_BYTE *)(a1 + 3935) = a2[394] > 0;
  if (*((_BYTE *)a2 + 790))
    v250 = -1;
  else
    v250 = 0;
  *(_BYTE *)(a1 + 3125) = v250;
  *(_BYTE *)(a1 + 3936) = a2[396] > 0;
  if (*((_BYTE *)a2 + 794))
    v251 = -1;
  else
    v251 = 0;
  *(_BYTE *)(a1 + 3126) = v251;
  *(_BYTE *)(a1 + 3937) = a2[398] > 0;
  if (*((_BYTE *)a2 + 798))
    v252 = -1;
  else
    v252 = 0;
  *(_BYTE *)(a1 + 3127) = v252;
  *(_BYTE *)(a1 + 3938) = a2[400] > 0;
  if (*((_BYTE *)a2 + 802))
    v253 = -1;
  else
    v253 = 0;
  *(_BYTE *)(a1 + 3128) = v253;
  *(_BYTE *)(a1 + 3939) = a2[402] > 0;
  if (*((_BYTE *)a2 + 806))
    v254 = -1;
  else
    v254 = 0;
  *(_BYTE *)(a1 + 3129) = v254;
  *(_BYTE *)(a1 + 3940) = a2[404] > 0;
  if (*((_BYTE *)a2 + 810))
    v255 = -1;
  else
    v255 = 0;
  *(_BYTE *)(a1 + 3130) = v255;
  *(_BYTE *)(a1 + 3941) = a2[406] > 0;
  if (*((_BYTE *)a2 + 814))
    v256 = -1;
  else
    v256 = 0;
  *(_BYTE *)(a1 + 3131) = v256;
  *(_BYTE *)(a1 + 3942) = a2[408] > 0;
  if (*((_BYTE *)a2 + 818))
    v257 = -1;
  else
    v257 = 0;
  *(_BYTE *)(a1 + 3132) = v257;
  *(_BYTE *)(a1 + 3943) = a2[410] > 0;
  if (*((_BYTE *)a2 + 822))
    v258 = -1;
  else
    v258 = 0;
  *(_BYTE *)(a1 + 3133) = v258;
  *(_BYTE *)(a1 + 3944) = a2[412] > 0;
  if (*((_BYTE *)a2 + 826))
    v259 = -1;
  else
    v259 = 0;
  *(_BYTE *)(a1 + 3134) = v259;
  *(_BYTE *)(a1 + 3945) = a2[414] > 0;
  if (*((_BYTE *)a2 + 830))
    v260 = -1;
  else
    v260 = 0;
  *(_BYTE *)(a1 + 3135) = v260;
  *(_BYTE *)(a1 + 3946) = a2[416] > 0;
  if (*((_BYTE *)a2 + 834))
    v261 = -1;
  else
    v261 = 0;
  *(_BYTE *)(a1 + 3136) = v261;
  *(_BYTE *)(a1 + 3947) = a2[418] > 0;
  if (*((_BYTE *)a2 + 838))
    v262 = -1;
  else
    v262 = 0;
  *(_BYTE *)(a1 + 3137) = v262;
  *(_BYTE *)(a1 + 3948) = a2[420] > 0;
  if (*((_BYTE *)a2 + 842))
    v263 = -1;
  else
    v263 = 0;
  *(_BYTE *)(a1 + 3138) = v263;
  *(_BYTE *)(a1 + 3949) = a2[422] > 0;
  if (*((_BYTE *)a2 + 846))
    v264 = -1;
  else
    v264 = 0;
  *(_BYTE *)(a1 + 3139) = v264;
  *(_BYTE *)(a1 + 3950) = a2[424] > 0;
  if (*((_BYTE *)a2 + 850))
    v265 = -1;
  else
    v265 = 0;
  *(_BYTE *)(a1 + 3140) = v265;
  *(_BYTE *)(a1 + 3951) = a2[426] > 0;
  if (*((_BYTE *)a2 + 854))
    v266 = -1;
  else
    v266 = 0;
  *(_BYTE *)(a1 + 3141) = v266;
  *(_BYTE *)(a1 + 3952) = a2[428] > 0;
  if (*((_BYTE *)a2 + 858))
    v267 = -1;
  else
    v267 = 0;
  *(_BYTE *)(a1 + 3142) = v267;
  *(_BYTE *)(a1 + 3953) = a2[430] > 0;
  if (*((_BYTE *)a2 + 862))
    v268 = -1;
  else
    v268 = 0;
  *(_BYTE *)(a1 + 3143) = v268;
  *(_BYTE *)(a1 + 3954) = a2[432] > 0;
  if (*((_BYTE *)a2 + 866))
    v269 = -1;
  else
    v269 = 0;
  *(_BYTE *)(a1 + 3144) = v269;
  *(_BYTE *)(a1 + 3955) = a2[434] > 0;
  if (*((_BYTE *)a2 + 870))
    v270 = -1;
  else
    v270 = 0;
  *(_BYTE *)(a1 + 3145) = v270;
  *(_BYTE *)(a1 + 3956) = a2[436] > 0;
  if (*((_BYTE *)a2 + 874))
    v271 = -1;
  else
    v271 = 0;
  *(_BYTE *)(a1 + 3146) = v271;
  *(_BYTE *)(a1 + 3957) = a2[438] > 0;
  if (*((_BYTE *)a2 + 878))
    v272 = -1;
  else
    v272 = 0;
  *(_BYTE *)(a1 + 3147) = v272;
  *(_BYTE *)(a1 + 3958) = a2[440] > 0;
  if (*((_BYTE *)a2 + 882))
    v273 = -1;
  else
    v273 = 0;
  *(_BYTE *)(a1 + 3148) = v273;
  *(_BYTE *)(a1 + 3959) = a2[442] > 0;
  if (*((_BYTE *)a2 + 886))
    v274 = -1;
  else
    v274 = 0;
  *(_BYTE *)(a1 + 3149) = v274;
  *(_BYTE *)(a1 + 3960) = a2[444] > 0;
  if (*((_BYTE *)a2 + 890))
    v275 = -1;
  else
    v275 = 0;
  *(_BYTE *)(a1 + 3150) = v275;
  *(_BYTE *)(a1 + 3961) = a2[446] > 0;
  if (*((_BYTE *)a2 + 894))
    v276 = -1;
  else
    v276 = 0;
  *(_BYTE *)(a1 + 3151) = v276;
  *(_BYTE *)(a1 + 3962) = a2[448] > 0;
  if (*((_BYTE *)a2 + 898))
    v277 = -1;
  else
    v277 = 0;
  *(_BYTE *)(a1 + 3152) = v277;
  *(_BYTE *)(a1 + 3963) = a2[450] > 0;
  if (*((_BYTE *)a2 + 902))
    v278 = -1;
  else
    v278 = 0;
  *(_BYTE *)(a1 + 3153) = v278;
  *(_BYTE *)(a1 + 3964) = a2[452] > 0;
  if (*((_BYTE *)a2 + 906))
    v279 = -1;
  else
    v279 = 0;
  *(_BYTE *)(a1 + 3154) = v279;
  *(_BYTE *)(a1 + 3965) = a2[454] > 0;
  if (*((_BYTE *)a2 + 910))
    v280 = -1;
  else
    v280 = 0;
  *(_BYTE *)(a1 + 3155) = v280;
  *(_BYTE *)(a1 + 3966) = a2[456] > 0;
  if (*((_BYTE *)a2 + 914))
    v281 = -1;
  else
    v281 = 0;
  *(_BYTE *)(a1 + 3156) = v281;
  *(_BYTE *)(a1 + 3967) = a2[458] > 0;
  if (*((_BYTE *)a2 + 918))
    v282 = -1;
  else
    v282 = 0;
  *(_BYTE *)(a1 + 3157) = v282;
  *(_BYTE *)(a1 + 3968) = a2[460] > 0;
  if (*((_BYTE *)a2 + 922))
    v283 = -1;
  else
    v283 = 0;
  *(_BYTE *)(a1 + 3158) = v283;
  *(_BYTE *)(a1 + 3969) = a2[462] > 0;
  if (*((_BYTE *)a2 + 926))
    v284 = -1;
  else
    v284 = 0;
  *(_BYTE *)(a1 + 3159) = v284;
  *(_BYTE *)(a1 + 3970) = a2[464] > 0;
  if (*((_BYTE *)a2 + 930))
    v285 = -1;
  else
    v285 = 0;
  *(_BYTE *)(a1 + 3160) = v285;
  *(_BYTE *)(a1 + 3971) = a2[466] > 0;
  if (*((_BYTE *)a2 + 934))
    v286 = -1;
  else
    v286 = 0;
  *(_BYTE *)(a1 + 3161) = v286;
  *(_BYTE *)(a1 + 3972) = a2[468] > 0;
  if (*((_BYTE *)a2 + 938))
    v287 = -1;
  else
    v287 = 0;
  *(_BYTE *)(a1 + 3162) = v287;
  *(_BYTE *)(a1 + 3973) = a2[470] > 0;
  if (*((_BYTE *)a2 + 942))
    v288 = -1;
  else
    v288 = 0;
  *(_BYTE *)(a1 + 3163) = v288;
  *(_BYTE *)(a1 + 3974) = a2[472] > 0;
  if (*((_BYTE *)a2 + 946))
    v289 = -1;
  else
    v289 = 0;
  *(_BYTE *)(a1 + 3164) = v289;
  *(_BYTE *)(a1 + 3975) = a2[474] > 0;
  if (*((_BYTE *)a2 + 950))
    v290 = -1;
  else
    v290 = 0;
  *(_BYTE *)(a1 + 3165) = v290;
  *(_BYTE *)(a1 + 3976) = a2[476] > 0;
  if (*((_BYTE *)a2 + 954))
    v291 = -1;
  else
    v291 = 0;
  *(_BYTE *)(a1 + 3166) = v291;
  *(_BYTE *)(a1 + 3977) = a2[478] > 0;
  if (*((_BYTE *)a2 + 958))
    v292 = -1;
  else
    v292 = 0;
  *(_BYTE *)(a1 + 3167) = v292;
  *(_BYTE *)(a1 + 3978) = a2[480] > 0;
  if (*((_BYTE *)a2 + 962))
    v293 = -1;
  else
    v293 = 0;
  *(_BYTE *)(a1 + 3168) = v293;
  *(_BYTE *)(a1 + 3979) = a2[482] > 0;
  if (*((_BYTE *)a2 + 966))
    v294 = -1;
  else
    v294 = 0;
  *(_BYTE *)(a1 + 3169) = v294;
  *(_BYTE *)(a1 + 3980) = a2[484] > 0;
  if (*((_BYTE *)a2 + 970))
    v295 = -1;
  else
    v295 = 0;
  *(_BYTE *)(a1 + 3170) = v295;
  *(_BYTE *)(a1 + 3981) = a2[486] > 0;
  if (*((_BYTE *)a2 + 974))
    v296 = -1;
  else
    v296 = 0;
  *(_BYTE *)(a1 + 3171) = v296;
  *(_BYTE *)(a1 + 3982) = a2[488] > 0;
  if (*((_BYTE *)a2 + 978))
    v297 = -1;
  else
    v297 = 0;
  *(_BYTE *)(a1 + 3172) = v297;
  *(_BYTE *)(a1 + 3983) = a2[490] > 0;
  if (*((_BYTE *)a2 + 982))
    v298 = -1;
  else
    v298 = 0;
  *(_BYTE *)(a1 + 3173) = v298;
  *(_BYTE *)(a1 + 3984) = a2[492] > 0;
  if (*((_BYTE *)a2 + 986))
    v299 = -1;
  else
    v299 = 0;
  *(_BYTE *)(a1 + 3174) = v299;
  *(_BYTE *)(a1 + 3985) = a2[494] > 0;
  if (*((_BYTE *)a2 + 990))
    v300 = -1;
  else
    v300 = 0;
  *(_BYTE *)(a1 + 3175) = v300;
  *(_BYTE *)(a1 + 3986) = a2[496] > 0;
  if (*((_BYTE *)a2 + 994))
    v301 = -1;
  else
    v301 = 0;
  *(_BYTE *)(a1 + 3176) = v301;
  *(_BYTE *)(a1 + 3987) = a2[498] > 0;
  if (*((_BYTE *)a2 + 998))
    v302 = -1;
  else
    v302 = 0;
  *(_BYTE *)(a1 + 3177) = v302;
  *(_BYTE *)(a1 + 3988) = a2[500] > 0;
  if (*((_BYTE *)a2 + 1002))
    v303 = -1;
  else
    v303 = 0;
  *(_BYTE *)(a1 + 3178) = v303;
  *(_BYTE *)(a1 + 3989) = a2[502] > 0;
  if (*((_BYTE *)a2 + 1006))
    v304 = -1;
  else
    v304 = 0;
  *(_BYTE *)(a1 + 3179) = v304;
  *(_BYTE *)(a1 + 3990) = a2[504] > 0;
  if (*((_BYTE *)a2 + 1010))
    v305 = -1;
  else
    v305 = 0;
  *(_BYTE *)(a1 + 3180) = v305;
  *(_BYTE *)(a1 + 3991) = a2[506] > 0;
  if (*((_BYTE *)a2 + 1014))
    v306 = -1;
  else
    v306 = 0;
  *(_BYTE *)(a1 + 3181) = v306;
  *(_BYTE *)(a1 + 3992) = a2[508] > 0;
  if (*((_BYTE *)a2 + 1018))
    v307 = -1;
  else
    v307 = 0;
  *(_BYTE *)(a1 + 3182) = v307;
  *(_BYTE *)(a1 + 3993) = a2[510] > 0;
  if (*((_BYTE *)a2 + 1022))
    v308 = -1;
  else
    v308 = 0;
  *(_BYTE *)(a1 + 3183) = v308;
  *(_BYTE *)(a1 + 3994) = a2[512] > 0;
  if (*((_BYTE *)a2 + 1026))
    v309 = -1;
  else
    v309 = 0;
  *(_BYTE *)(a1 + 3184) = v309;
  *(_BYTE *)(a1 + 3995) = a2[514] > 0;
  if (*((_BYTE *)a2 + 1030))
    v310 = -1;
  else
    v310 = 0;
  *(_BYTE *)(a1 + 3185) = v310;
  *(_BYTE *)(a1 + 3996) = a2[516] > 0;
  if (*((_BYTE *)a2 + 1034))
    v311 = -1;
  else
    v311 = 0;
  *(_BYTE *)(a1 + 3186) = v311;
  *(_BYTE *)(a1 + 3997) = a2[518] > 0;
  if (*((_BYTE *)a2 + 1038))
    v312 = -1;
  else
    v312 = 0;
  *(_BYTE *)(a1 + 3187) = v312;
  *(_BYTE *)(a1 + 3998) = a2[520] > 0;
  if (*((_BYTE *)a2 + 1042))
    v313 = -1;
  else
    v313 = 0;
  *(_BYTE *)(a1 + 3188) = v313;
  *(_BYTE *)(a1 + 3999) = a2[522] > 0;
  if (*((_BYTE *)a2 + 1046))
    v314 = -1;
  else
    v314 = 0;
  *(_BYTE *)(a1 + 3189) = v314;
  *(_BYTE *)(a1 + 4000) = a2[524] > 0;
  if (*((_BYTE *)a2 + 1050))
    v315 = -1;
  else
    v315 = 0;
  *(_BYTE *)(a1 + 3190) = v315;
  *(_BYTE *)(a1 + 4001) = a2[526] > 0;
  if (*((_BYTE *)a2 + 1054))
    v316 = -1;
  else
    v316 = 0;
  *(_BYTE *)(a1 + 3191) = v316;
  *(_BYTE *)(a1 + 4002) = a2[528] > 0;
  if (*((_BYTE *)a2 + 1058))
    v317 = -1;
  else
    v317 = 0;
  *(_BYTE *)(a1 + 3192) = v317;
  *(_BYTE *)(a1 + 4003) = a2[530] > 0;
  if (*((_BYTE *)a2 + 1062))
    v318 = -1;
  else
    v318 = 0;
  *(_BYTE *)(a1 + 3193) = v318;
  *(_BYTE *)(a1 + 4004) = a2[532] > 0;
  if (*((_BYTE *)a2 + 1066))
    v319 = -1;
  else
    v319 = 0;
  *(_BYTE *)(a1 + 3194) = v319;
  *(_BYTE *)(a1 + 4005) = a2[534] > 0;
  if (*((_BYTE *)a2 + 1070))
    v320 = -1;
  else
    v320 = 0;
  *(_BYTE *)(a1 + 3195) = v320;
  *(_BYTE *)(a1 + 4006) = a2[536] > 0;
  if (*((_BYTE *)a2 + 1074))
    v321 = -1;
  else
    v321 = 0;
  *(_BYTE *)(a1 + 3196) = v321;
  *(_BYTE *)(a1 + 4007) = a2[538] > 0;
  if (*((_BYTE *)a2 + 1078))
    v322 = -1;
  else
    v322 = 0;
  *(_BYTE *)(a1 + 3197) = v322;
  *(_BYTE *)(a1 + 4008) = a2[540] > 0;
  if (*((_BYTE *)a2 + 1082))
    v323 = -1;
  else
    v323 = 0;
  *(_BYTE *)(a1 + 3198) = v323;
  *(_BYTE *)(a1 + 4009) = a2[542] > 0;
  if (*((_BYTE *)a2 + 1086))
    v324 = -1;
  else
    v324 = 0;
  *(_BYTE *)(a1 + 3199) = v324;
  *(_BYTE *)(a1 + 4010) = a2[544] > 0;
  if (*((_BYTE *)a2 + 1090))
    v325 = -1;
  else
    v325 = 0;
  *(_BYTE *)(a1 + 3200) = v325;
  *(_BYTE *)(a1 + 4011) = a2[546] > 0;
  if (*((_BYTE *)a2 + 1094))
    v326 = -1;
  else
    v326 = 0;
  *(_BYTE *)(a1 + 3201) = v326;
  *(_BYTE *)(a1 + 4012) = a2[548] > 0;
  if (*((_BYTE *)a2 + 1098))
    v327 = -1;
  else
    v327 = 0;
  *(_BYTE *)(a1 + 3202) = v327;
  *(_BYTE *)(a1 + 4013) = a2[550] > 0;
  if (*((_BYTE *)a2 + 1102))
    v328 = -1;
  else
    v328 = 0;
  *(_BYTE *)(a1 + 3203) = v328;
  *(_BYTE *)(a1 + 4014) = a2[552] > 0;
  if (*((_BYTE *)a2 + 1106))
    v329 = -1;
  else
    v329 = 0;
  *(_BYTE *)(a1 + 3204) = v329;
  *(_BYTE *)(a1 + 4015) = a2[554] > 0;
  if (*((_BYTE *)a2 + 1110))
    v330 = -1;
  else
    v330 = 0;
  *(_BYTE *)(a1 + 3205) = v330;
  *(_BYTE *)(a1 + 4016) = a2[556] > 0;
  if (*((_BYTE *)a2 + 1114))
    v331 = -1;
  else
    v331 = 0;
  *(_BYTE *)(a1 + 3206) = v331;
  *(_BYTE *)(a1 + 4017) = a2[558] > 0;
  if (*((_BYTE *)a2 + 1118))
    v332 = -1;
  else
    v332 = 0;
  *(_BYTE *)(a1 + 3207) = v332;
  *(_BYTE *)(a1 + 4018) = a2[560] > 0;
  if (*((_BYTE *)a2 + 1122))
    v333 = -1;
  else
    v333 = 0;
  *(_BYTE *)(a1 + 3208) = v333;
  *(_BYTE *)(a1 + 4019) = a2[562] > 0;
  if (*((_BYTE *)a2 + 1126))
    v334 = -1;
  else
    v334 = 0;
  *(_BYTE *)(a1 + 3209) = v334;
  *(_BYTE *)(a1 + 4020) = a2[564] > 0;
  if (*((_BYTE *)a2 + 1130))
    v335 = -1;
  else
    v335 = 0;
  *(_BYTE *)(a1 + 3210) = v335;
  *(_BYTE *)(a1 + 4021) = a2[566] > 0;
  if (*((_BYTE *)a2 + 1134))
    v336 = -1;
  else
    v336 = 0;
  *(_BYTE *)(a1 + 3211) = v336;
  *(_BYTE *)(a1 + 4022) = a2[568] > 0;
  if (*((_BYTE *)a2 + 1138))
    v337 = -1;
  else
    v337 = 0;
  *(_BYTE *)(a1 + 3212) = v337;
  *(_BYTE *)(a1 + 4023) = a2[570] > 0;
  if (*((_BYTE *)a2 + 1142))
    v338 = -1;
  else
    v338 = 0;
  *(_BYTE *)(a1 + 3213) = v338;
  *(_BYTE *)(a1 + 4024) = a2[572] > 0;
  if (*((_BYTE *)a2 + 1146))
    v339 = -1;
  else
    v339 = 0;
  *(_BYTE *)(a1 + 3214) = v339;
  *(_BYTE *)(a1 + 4025) = a2[574] > 0;
  if (*((_BYTE *)a2 + 1150))
    v340 = -1;
  else
    v340 = 0;
  *(_BYTE *)(a1 + 3215) = v340;
  *(_BYTE *)(a1 + 4026) = a2[576] > 0;
  if (*((_BYTE *)a2 + 1154))
    v341 = -1;
  else
    v341 = 0;
  *(_BYTE *)(a1 + 3216) = v341;
  *(_BYTE *)(a1 + 4027) = a2[578] > 0;
  if (*((_BYTE *)a2 + 1158))
    v342 = -1;
  else
    v342 = 0;
  *(_BYTE *)(a1 + 3217) = v342;
  *(_BYTE *)(a1 + 4028) = a2[580] > 0;
  if (*((_BYTE *)a2 + 1162))
    v343 = -1;
  else
    v343 = 0;
  *(_BYTE *)(a1 + 3218) = v343;
  *(_BYTE *)(a1 + 4029) = a2[582] > 0;
  if (*((_BYTE *)a2 + 1166))
    v344 = -1;
  else
    v344 = 0;
  *(_BYTE *)(a1 + 3219) = v344;
  *(_BYTE *)(a1 + 4030) = a2[584] > 0;
  if (*((_BYTE *)a2 + 1170))
    v345 = -1;
  else
    v345 = 0;
  *(_BYTE *)(a1 + 3220) = v345;
  *(_BYTE *)(a1 + 4031) = a2[586] > 0;
  if (*((_BYTE *)a2 + 1174))
    v346 = -1;
  else
    v346 = 0;
  *(_BYTE *)(a1 + 3221) = v346;
  *(_BYTE *)(a1 + 4032) = a2[588] > 0;
  if (*((_BYTE *)a2 + 1178))
    v347 = -1;
  else
    v347 = 0;
  *(_BYTE *)(a1 + 3222) = v347;
  *(_BYTE *)(a1 + 4033) = a2[590] > 0;
  if (*((_BYTE *)a2 + 1182))
    v348 = -1;
  else
    v348 = 0;
  *(_BYTE *)(a1 + 3223) = v348;
  *(_BYTE *)(a1 + 4034) = a2[592] > 0;
  if (*((_BYTE *)a2 + 1186))
    v349 = -1;
  else
    v349 = 0;
  *(_BYTE *)(a1 + 3224) = v349;
  *(_BYTE *)(a1 + 4035) = a2[594] > 0;
  if (*((_BYTE *)a2 + 1190))
    v350 = -1;
  else
    v350 = 0;
  *(_BYTE *)(a1 + 3225) = v350;
  *(_BYTE *)(a1 + 4036) = a2[596] > 0;
  if (*((_BYTE *)a2 + 1194))
    v351 = -1;
  else
    v351 = 0;
  *(_BYTE *)(a1 + 3226) = v351;
  *(_BYTE *)(a1 + 4037) = a2[598] > 0;
  if (*((_BYTE *)a2 + 1198))
    v352 = -1;
  else
    v352 = 0;
  *(_BYTE *)(a1 + 3227) = v352;
  *(_BYTE *)(a1 + 4038) = a2[600] > 0;
  if (*((_BYTE *)a2 + 1202))
    v353 = -1;
  else
    v353 = 0;
  *(_BYTE *)(a1 + 3228) = v353;
  *(_BYTE *)(a1 + 4039) = a2[602] > 0;
  if (*((_BYTE *)a2 + 1206))
    v354 = -1;
  else
    v354 = 0;
  *(_BYTE *)(a1 + 3229) = v354;
  *(_BYTE *)(a1 + 4040) = a2[604] > 0;
  if (*((_BYTE *)a2 + 1210))
    v355 = -1;
  else
    v355 = 0;
  *(_BYTE *)(a1 + 3230) = v355;
  *(_BYTE *)(a1 + 4041) = a2[606] > 0;
  if (*((_BYTE *)a2 + 1214))
    v356 = -1;
  else
    v356 = 0;
  *(_BYTE *)(a1 + 3231) = v356;
  *(_BYTE *)(a1 + 4042) = a2[608] > 0;
  if (*((_BYTE *)a2 + 1218))
    v357 = -1;
  else
    v357 = 0;
  *(_BYTE *)(a1 + 3232) = v357;
  *(_BYTE *)(a1 + 4043) = a2[610] > 0;
  if (*((_BYTE *)a2 + 1222))
    v358 = -1;
  else
    v358 = 0;
  *(_BYTE *)(a1 + 3233) = v358;
  *(_BYTE *)(a1 + 4044) = a2[612] > 0;
  if (*((_BYTE *)a2 + 1226))
    v359 = -1;
  else
    v359 = 0;
  *(_BYTE *)(a1 + 3234) = v359;
  *(_BYTE *)(a1 + 4045) = a2[614] > 0;
  if (*((_BYTE *)a2 + 1230))
    v360 = -1;
  else
    v360 = 0;
  *(_BYTE *)(a1 + 3235) = v360;
  *(_BYTE *)(a1 + 4046) = a2[616] > 0;
  if (*((_BYTE *)a2 + 1234))
    v361 = -1;
  else
    v361 = 0;
  *(_BYTE *)(a1 + 3236) = v361;
  *(_BYTE *)(a1 + 4047) = a2[618] > 0;
  if (*((_BYTE *)a2 + 1238))
    v362 = -1;
  else
    v362 = 0;
  *(_BYTE *)(a1 + 3237) = v362;
  *(_BYTE *)(a1 + 4048) = a2[620] > 0;
  if (*((_BYTE *)a2 + 1242))
    v363 = -1;
  else
    v363 = 0;
  *(_BYTE *)(a1 + 3238) = v363;
  *(_BYTE *)(a1 + 4049) = a2[622] > 0;
  if (*((_BYTE *)a2 + 1246))
    v364 = -1;
  else
    v364 = 0;
  *(_BYTE *)(a1 + 3239) = v364;
  *(_BYTE *)(a1 + 4050) = a2[624] > 0;
  if (*((_BYTE *)a2 + 1250))
    v365 = -1;
  else
    v365 = 0;
  *(_BYTE *)(a1 + 3240) = v365;
  *(_BYTE *)(a1 + 4051) = a2[626] > 0;
  if (*((_BYTE *)a2 + 1254))
    v366 = -1;
  else
    v366 = 0;
  *(_BYTE *)(a1 + 3241) = v366;
  *(_BYTE *)(a1 + 4052) = a2[628] > 0;
  if (*((_BYTE *)a2 + 1258))
    v367 = -1;
  else
    v367 = 0;
  *(_BYTE *)(a1 + 3242) = v367;
  *(_BYTE *)(a1 + 4053) = a2[630] > 0;
  if (*((_BYTE *)a2 + 1262))
    v368 = -1;
  else
    v368 = 0;
  *(_BYTE *)(a1 + 3243) = v368;
  *(_BYTE *)(a1 + 4054) = a2[632] > 0;
  if (*((_BYTE *)a2 + 1266))
    v369 = -1;
  else
    v369 = 0;
  *(_BYTE *)(a1 + 3244) = v369;
  *(_BYTE *)(a1 + 4055) = a2[634] > 0;
  if (*((_BYTE *)a2 + 1270))
    v370 = -1;
  else
    v370 = 0;
  *(_BYTE *)(a1 + 3245) = v370;
  *(_BYTE *)(a1 + 4056) = a2[636] > 0;
  if (*((_BYTE *)a2 + 1274))
    v371 = -1;
  else
    v371 = 0;
  *(_BYTE *)(a1 + 3246) = v371;
  *(_BYTE *)(a1 + 4057) = a2[638] > 0;
  if (*((_BYTE *)a2 + 1278))
    v372 = -1;
  else
    v372 = 0;
  *(_BYTE *)(a1 + 3247) = v372;
  *(_BYTE *)(a1 + 4058) = a2[640] > 0;
  if (*((_BYTE *)a2 + 1282))
    v373 = -1;
  else
    v373 = 0;
  *(_BYTE *)(a1 + 3248) = v373;
  *(_BYTE *)(a1 + 4059) = a2[642] > 0;
  if (*((_BYTE *)a2 + 1286))
    v374 = -1;
  else
    v374 = 0;
  *(_BYTE *)(a1 + 3249) = v374;
  *(_BYTE *)(a1 + 4060) = a2[644] > 0;
  if (*((_BYTE *)a2 + 1290))
    v375 = -1;
  else
    v375 = 0;
  *(_BYTE *)(a1 + 3250) = v375;
  *(_BYTE *)(a1 + 4061) = a2[646] > 0;
  if (*((_BYTE *)a2 + 1294))
    v376 = -1;
  else
    v376 = 0;
  *(_BYTE *)(a1 + 3251) = v376;
  *(_BYTE *)(a1 + 4062) = a2[648] > 0;
  if (*((_BYTE *)a2 + 1298))
    v377 = -1;
  else
    v377 = 0;
  *(_BYTE *)(a1 + 3252) = v377;
  *(_BYTE *)(a1 + 4063) = a2[650] > 0;
  if (*((_BYTE *)a2 + 1302))
    v378 = -1;
  else
    v378 = 0;
  *(_BYTE *)(a1 + 3253) = v378;
  *(_BYTE *)(a1 + 4064) = a2[652] > 0;
  if (*((_BYTE *)a2 + 1306))
    v379 = -1;
  else
    v379 = 0;
  *(_BYTE *)(a1 + 3254) = v379;
  *(_BYTE *)(a1 + 4065) = a2[654] > 0;
  if (*((_BYTE *)a2 + 1310))
    v380 = -1;
  else
    v380 = 0;
  *(_BYTE *)(a1 + 3255) = v380;
  *(_BYTE *)(a1 + 4066) = a2[656] > 0;
  if (*((_BYTE *)a2 + 1314))
    v381 = -1;
  else
    v381 = 0;
  *(_BYTE *)(a1 + 3256) = v381;
  *(_BYTE *)(a1 + 4067) = a2[658] > 0;
  if (*((_BYTE *)a2 + 1318))
    v382 = -1;
  else
    v382 = 0;
  *(_BYTE *)(a1 + 3257) = v382;
  *(_BYTE *)(a1 + 4068) = a2[660] > 0;
  if (*((_BYTE *)a2 + 1322))
    v383 = -1;
  else
    v383 = 0;
  *(_BYTE *)(a1 + 3258) = v383;
  *(_BYTE *)(a1 + 4069) = a2[662] > 0;
  if (*((_BYTE *)a2 + 1326))
    v384 = -1;
  else
    v384 = 0;
  *(_BYTE *)(a1 + 3259) = v384;
  *(_BYTE *)(a1 + 4070) = a2[664] > 0;
  if (*((_BYTE *)a2 + 1330))
    v385 = -1;
  else
    v385 = 0;
  *(_BYTE *)(a1 + 3260) = v385;
  *(_BYTE *)(a1 + 4071) = a2[666] > 0;
  if (*((_BYTE *)a2 + 1334))
    v386 = -1;
  else
    v386 = 0;
  *(_BYTE *)(a1 + 3261) = v386;
  *(_BYTE *)(a1 + 4072) = a2[668] > 0;
  if (*((_BYTE *)a2 + 1338))
    v387 = -1;
  else
    v387 = 0;
  *(_BYTE *)(a1 + 3262) = v387;
  *(_BYTE *)(a1 + 4073) = a2[670] > 0;
  if (*((_BYTE *)a2 + 1342))
    v388 = -1;
  else
    v388 = 0;
  *(_BYTE *)(a1 + 3263) = v388;
  *(_BYTE *)(a1 + 4074) = a2[672] > 0;
  if (*((_BYTE *)a2 + 1346))
    v389 = -1;
  else
    v389 = 0;
  *(_BYTE *)(a1 + 3264) = v389;
  *(_BYTE *)(a1 + 4075) = a2[674] > 0;
  if (*((_BYTE *)a2 + 1350))
    v390 = -1;
  else
    v390 = 0;
  *(_BYTE *)(a1 + 3265) = v390;
  *(_BYTE *)(a1 + 4076) = a2[676] > 0;
  if (*((_BYTE *)a2 + 1354))
    v391 = -1;
  else
    v391 = 0;
  *(_BYTE *)(a1 + 3266) = v391;
  *(_BYTE *)(a1 + 4077) = a2[678] > 0;
  if (*((_BYTE *)a2 + 1358))
    v392 = -1;
  else
    v392 = 0;
  *(_BYTE *)(a1 + 3267) = v392;
  *(_BYTE *)(a1 + 4078) = a2[680] > 0;
  if (*((_BYTE *)a2 + 1362))
    v393 = -1;
  else
    v393 = 0;
  *(_BYTE *)(a1 + 3268) = v393;
  *(_BYTE *)(a1 + 4079) = a2[682] > 0;
  if (*((_BYTE *)a2 + 1366))
    v394 = -1;
  else
    v394 = 0;
  *(_BYTE *)(a1 + 3269) = v394;
  *(_BYTE *)(a1 + 4080) = a2[684] > 0;
  if (*((_BYTE *)a2 + 1370))
    v395 = -1;
  else
    v395 = 0;
  *(_BYTE *)(a1 + 3270) = v395;
  *(_BYTE *)(a1 + 4081) = a2[686] > 0;
  if (*((_BYTE *)a2 + 1374))
    v396 = -1;
  else
    v396 = 0;
  *(_BYTE *)(a1 + 3271) = v396;
  *(_BYTE *)(a1 + 4082) = a2[688] > 0;
  if (*((_BYTE *)a2 + 1378))
    v397 = -1;
  else
    v397 = 0;
  *(_BYTE *)(a1 + 3272) = v397;
  *(_BYTE *)(a1 + 4083) = a2[690] > 0;
  if (*((_BYTE *)a2 + 1382))
    v398 = -1;
  else
    v398 = 0;
  *(_BYTE *)(a1 + 3273) = v398;
  *(_BYTE *)(a1 + 4084) = a2[692] > 0;
  if (*((_BYTE *)a2 + 1386))
    v399 = -1;
  else
    v399 = 0;
  *(_BYTE *)(a1 + 3274) = v399;
  *(_BYTE *)(a1 + 4085) = a2[694] > 0;
  if (*((_BYTE *)a2 + 1390))
    v400 = -1;
  else
    v400 = 0;
  *(_BYTE *)(a1 + 3275) = v400;
  *(_BYTE *)(a1 + 4086) = a2[696] > 0;
  if (*((_BYTE *)a2 + 1394))
    v401 = -1;
  else
    v401 = 0;
  *(_BYTE *)(a1 + 3276) = v401;
  *(_BYTE *)(a1 + 4087) = a2[698] > 0;
  if (*((_BYTE *)a2 + 1398))
    v402 = -1;
  else
    v402 = 0;
  *(_BYTE *)(a1 + 3277) = v402;
  *(_BYTE *)(a1 + 4088) = a2[700] > 0;
  if (*((_BYTE *)a2 + 1402))
    v403 = -1;
  else
    v403 = 0;
  *(_BYTE *)(a1 + 3278) = v403;
  *(_BYTE *)(a1 + 4089) = a2[702] > 0;
  if (*((_BYTE *)a2 + 1406))
    v404 = -1;
  else
    v404 = 0;
  *(_BYTE *)(a1 + 3279) = v404;
  *(_BYTE *)(a1 + 4090) = a2[704] > 0;
  if (*((_BYTE *)a2 + 1410))
    v405 = -1;
  else
    v405 = 0;
  *(_BYTE *)(a1 + 3280) = v405;
  *(_BYTE *)(a1 + 4091) = a2[706] > 0;
  if (*((_BYTE *)a2 + 1414))
    v406 = -1;
  else
    v406 = 0;
  *(_BYTE *)(a1 + 3281) = v406;
  *(_BYTE *)(a1 + 4092) = a2[708] > 0;
  if (*((_BYTE *)a2 + 1418))
    v407 = -1;
  else
    v407 = 0;
  *(_BYTE *)(a1 + 3282) = v407;
  *(_BYTE *)(a1 + 4093) = a2[710] > 0;
  if (*((_BYTE *)a2 + 1422))
    v408 = -1;
  else
    v408 = 0;
  *(_BYTE *)(a1 + 3283) = v408;
  *(_BYTE *)(a1 + 4094) = a2[712] > 0;
  if (*((_BYTE *)a2 + 1426))
    v409 = -1;
  else
    v409 = 0;
  *(_BYTE *)(a1 + 3284) = v409;
  *(_BYTE *)(a1 + 4095) = a2[714] > 0;
  if (*((_BYTE *)a2 + 1430))
    v410 = -1;
  else
    v410 = 0;
  *(_BYTE *)(a1 + 3285) = v410;
  *(_BYTE *)(a1 + 4096) = a2[716] > 0;
  if (*((_BYTE *)a2 + 1434))
    v411 = -1;
  else
    v411 = 0;
  *(_BYTE *)(a1 + 3286) = v411;
  *(_BYTE *)(a1 + 4097) = a2[718] > 0;
  if (*((_BYTE *)a2 + 1438))
    v412 = -1;
  else
    v412 = 0;
  *(_BYTE *)(a1 + 3287) = v412;
  *(_BYTE *)(a1 + 4098) = a2[720] > 0;
  if (*((_BYTE *)a2 + 1442))
    v413 = -1;
  else
    v413 = 0;
  *(_BYTE *)(a1 + 3288) = v413;
  *(_BYTE *)(a1 + 4099) = a2[722] > 0;
  if (*((_BYTE *)a2 + 1446))
    v414 = -1;
  else
    v414 = 0;
  *(_BYTE *)(a1 + 3289) = v414;
  *(_BYTE *)(a1 + 4100) = a2[724] > 0;
  if (*((_BYTE *)a2 + 1450))
    v415 = -1;
  else
    v415 = 0;
  *(_BYTE *)(a1 + 3290) = v415;
  *(_BYTE *)(a1 + 4101) = a2[726] > 0;
  if (*((_BYTE *)a2 + 1454))
    v416 = -1;
  else
    v416 = 0;
  *(_BYTE *)(a1 + 3291) = v416;
  *(_BYTE *)(a1 + 4102) = a2[728] > 0;
  if (*((_BYTE *)a2 + 1458))
    v417 = -1;
  else
    v417 = 0;
  *(_BYTE *)(a1 + 3292) = v417;
  *(_BYTE *)(a1 + 4103) = a2[730] > 0;
  if (*((_BYTE *)a2 + 1462))
    v418 = -1;
  else
    v418 = 0;
  *(_BYTE *)(a1 + 3293) = v418;
  *(_BYTE *)(a1 + 4104) = a2[732] > 0;
  if (*((_BYTE *)a2 + 1466))
    v419 = -1;
  else
    v419 = 0;
  *(_BYTE *)(a1 + 3294) = v419;
  *(_BYTE *)(a1 + 4105) = a2[734] > 0;
  if (*((_BYTE *)a2 + 1470))
    v420 = -1;
  else
    v420 = 0;
  *(_BYTE *)(a1 + 3295) = v420;
  *(_BYTE *)(a1 + 4106) = a2[736] > 0;
  if (*((_BYTE *)a2 + 1474))
    v421 = -1;
  else
    v421 = 0;
  *(_BYTE *)(a1 + 3296) = v421;
  *(_BYTE *)(a1 + 4107) = a2[738] > 0;
  if (*((_BYTE *)a2 + 1478))
    v422 = -1;
  else
    v422 = 0;
  *(_BYTE *)(a1 + 3297) = v422;
  *(_BYTE *)(a1 + 4108) = a2[740] > 0;
  if (*((_BYTE *)a2 + 1482))
    v423 = -1;
  else
    v423 = 0;
  *(_BYTE *)(a1 + 3298) = v423;
  *(_BYTE *)(a1 + 4109) = a2[742] > 0;
  if (*((_BYTE *)a2 + 1486))
    v424 = -1;
  else
    v424 = 0;
  *(_BYTE *)(a1 + 3299) = v424;
  *(_BYTE *)(a1 + 4110) = a2[744] > 0;
  if (*((_BYTE *)a2 + 1490))
    v425 = -1;
  else
    v425 = 0;
  *(_BYTE *)(a1 + 3300) = v425;
  *(_BYTE *)(a1 + 4111) = a2[746] > 0;
  if (*((_BYTE *)a2 + 1494))
    v426 = -1;
  else
    v426 = 0;
  *(_BYTE *)(a1 + 3301) = v426;
  *(_BYTE *)(a1 + 4112) = a2[748] > 0;
  if (*((_BYTE *)a2 + 1498))
    v427 = -1;
  else
    v427 = 0;
  *(_BYTE *)(a1 + 3302) = v427;
  *(_BYTE *)(a1 + 4113) = a2[750] > 0;
  if (*((_BYTE *)a2 + 1502))
    v428 = -1;
  else
    v428 = 0;
  *(_BYTE *)(a1 + 3303) = v428;
  *(_BYTE *)(a1 + 4114) = a2[752] > 0;
  if (*((_BYTE *)a2 + 1506))
    v429 = -1;
  else
    v429 = 0;
  *(_BYTE *)(a1 + 3304) = v429;
  *(_BYTE *)(a1 + 4115) = a2[754] > 0;
  if (*((_BYTE *)a2 + 1510))
    v430 = -1;
  else
    v430 = 0;
  *(_BYTE *)(a1 + 3305) = v430;
  *(_BYTE *)(a1 + 4116) = a2[756] > 0;
  if (*((_BYTE *)a2 + 1514))
    v431 = -1;
  else
    v431 = 0;
  *(_BYTE *)(a1 + 3306) = v431;
  *(_BYTE *)(a1 + 4117) = a2[758] > 0;
  if (*((_BYTE *)a2 + 1518))
    v432 = -1;
  else
    v432 = 0;
  *(_BYTE *)(a1 + 3307) = v432;
  *(_BYTE *)(a1 + 4118) = a2[760] > 0;
  if (*((_BYTE *)a2 + 1522))
    v433 = -1;
  else
    v433 = 0;
  *(_BYTE *)(a1 + 3308) = v433;
  *(_BYTE *)(a1 + 4119) = a2[762] > 0;
  if (*((_BYTE *)a2 + 1526))
    v434 = -1;
  else
    v434 = 0;
  *(_BYTE *)(a1 + 3309) = v434;
  *(_BYTE *)(a1 + 4120) = a2[764] > 0;
  if (*((_BYTE *)a2 + 1530))
    v435 = -1;
  else
    v435 = 0;
  *(_BYTE *)(a1 + 3310) = v435;
  *(_BYTE *)(a1 + 4121) = a2[766] > 0;
  if (*((_BYTE *)a2 + 1534))
    v436 = -1;
  else
    v436 = 0;
  *(_BYTE *)(a1 + 3311) = v436;
  *(_BYTE *)(a1 + 4122) = a2[768] > 0;
  if (*((_BYTE *)a2 + 1538))
    v437 = -1;
  else
    v437 = 0;
  *(_BYTE *)(a1 + 3312) = v437;
  *(_BYTE *)(a1 + 4123) = a2[770] > 0;
  if (*((_BYTE *)a2 + 1542))
    v438 = -1;
  else
    v438 = 0;
  *(_BYTE *)(a1 + 3313) = v438;
  *(_BYTE *)(a1 + 4124) = a2[772] > 0;
  if (*((_BYTE *)a2 + 1546))
    v439 = -1;
  else
    v439 = 0;
  *(_BYTE *)(a1 + 3314) = v439;
  *(_BYTE *)(a1 + 4125) = a2[774] > 0;
  if (*((_BYTE *)a2 + 1550))
    v440 = -1;
  else
    v440 = 0;
  *(_BYTE *)(a1 + 3315) = v440;
  *(_BYTE *)(a1 + 4126) = a2[776] > 0;
  if (*((_BYTE *)a2 + 1554))
    v441 = -1;
  else
    v441 = 0;
  *(_BYTE *)(a1 + 3316) = v441;
  *(_BYTE *)(a1 + 4127) = a2[778] > 0;
  if (*((_BYTE *)a2 + 1558))
    v442 = -1;
  else
    v442 = 0;
  *(_BYTE *)(a1 + 3317) = v442;
  *(_BYTE *)(a1 + 4128) = a2[780] > 0;
  if (*((_BYTE *)a2 + 1562))
    v443 = -1;
  else
    v443 = 0;
  *(_BYTE *)(a1 + 3318) = v443;
  *(_BYTE *)(a1 + 4129) = a2[782] > 0;
  if (*((_BYTE *)a2 + 1566))
    v444 = -1;
  else
    v444 = 0;
  *(_BYTE *)(a1 + 3319) = v444;
  *(_BYTE *)(a1 + 4130) = a2[784] > 0;
  if (*((_BYTE *)a2 + 1570))
    v445 = -1;
  else
    v445 = 0;
  *(_BYTE *)(a1 + 3320) = v445;
  *(_BYTE *)(a1 + 4131) = a2[786] > 0;
  if (*((_BYTE *)a2 + 1574))
    v446 = -1;
  else
    v446 = 0;
  *(_BYTE *)(a1 + 3321) = v446;
  *(_BYTE *)(a1 + 4132) = a2[788] > 0;
  if (*((_BYTE *)a2 + 1578))
    v447 = -1;
  else
    v447 = 0;
  *(_BYTE *)(a1 + 3322) = v447;
  *(_BYTE *)(a1 + 4133) = a2[790] > 0;
  if (*((_BYTE *)a2 + 1582))
    v448 = -1;
  else
    v448 = 0;
  *(_BYTE *)(a1 + 3323) = v448;
  *(_BYTE *)(a1 + 4134) = a2[792] > 0;
  if (*((_BYTE *)a2 + 1586))
    v449 = -1;
  else
    v449 = 0;
  *(_BYTE *)(a1 + 3324) = v449;
  *(_BYTE *)(a1 + 4135) = a2[794] > 0;
  if (*((_BYTE *)a2 + 1590))
    v450 = -1;
  else
    v450 = 0;
  *(_BYTE *)(a1 + 3325) = v450;
  *(_BYTE *)(a1 + 4136) = a2[796] > 0;
  if (*((_BYTE *)a2 + 1594))
    v451 = -1;
  else
    v451 = 0;
  *(_BYTE *)(a1 + 3326) = v451;
  *(_BYTE *)(a1 + 4137) = a2[798] > 0;
  if (*((_BYTE *)a2 + 1598))
    v452 = -1;
  else
    v452 = 0;
  *(_BYTE *)(a1 + 3327) = v452;
  *(_BYTE *)(a1 + 4138) = a2[800] > 0;
  if (*((_BYTE *)a2 + 1602))
    v453 = -1;
  else
    v453 = 0;
  *(_BYTE *)(a1 + 3328) = v453;
  *(_BYTE *)(a1 + 4139) = a2[802] > 0;
  if (*((_BYTE *)a2 + 1606))
    v454 = -1;
  else
    v454 = 0;
  *(_BYTE *)(a1 + 3329) = v454;
  *(_BYTE *)(a1 + 4140) = a2[804] > 0;
  if (*((_BYTE *)a2 + 1610))
    v455 = -1;
  else
    v455 = 0;
  *(_BYTE *)(a1 + 3330) = v455;
  *(_BYTE *)(a1 + 4141) = a2[806] > 0;
  if (*((_BYTE *)a2 + 1614))
    v456 = -1;
  else
    v456 = 0;
  *(_BYTE *)(a1 + 3331) = v456;
  *(_BYTE *)(a1 + 4142) = a2[808] > 0;
  if (*((_BYTE *)a2 + 1618))
    v457 = -1;
  else
    v457 = 0;
  *(_BYTE *)(a1 + 3332) = v457;
  *(_BYTE *)(a1 + 4143) = a2[810] > 0;
  if (*((_BYTE *)a2 + 1622))
    v458 = -1;
  else
    v458 = 0;
  *(_BYTE *)(a1 + 3333) = v458;
  *(_BYTE *)(a1 + 4144) = a2[812] > 0;
  if (*((_BYTE *)a2 + 1626))
    v459 = -1;
  else
    v459 = 0;
  *(_BYTE *)(a1 + 3334) = v459;
  *(_BYTE *)(a1 + 4145) = a2[814] > 0;
  if (*((_BYTE *)a2 + 1630))
    v460 = -1;
  else
    v460 = 0;
  *(_BYTE *)(a1 + 3335) = v460;
  *(_BYTE *)(a1 + 4146) = a2[816] > 0;
  if (*((_BYTE *)a2 + 1634))
    v461 = -1;
  else
    v461 = 0;
  *(_BYTE *)(a1 + 3336) = v461;
  *(_BYTE *)(a1 + 4147) = a2[818] > 0;
  if (*((_BYTE *)a2 + 1638))
    v462 = -1;
  else
    v462 = 0;
  *(_BYTE *)(a1 + 3337) = v462;
  *(_BYTE *)(a1 + 4148) = a2[820] > 0;
  if (*((_BYTE *)a2 + 1642))
    v463 = -1;
  else
    v463 = 0;
  *(_BYTE *)(a1 + 3338) = v463;
  *(_BYTE *)(a1 + 4149) = a2[822] > 0;
  if (*((_BYTE *)a2 + 1646))
    v464 = -1;
  else
    v464 = 0;
  *(_BYTE *)(a1 + 3339) = v464;
  *(_BYTE *)(a1 + 4150) = a2[824] > 0;
  if (*((_BYTE *)a2 + 1650))
    v465 = -1;
  else
    v465 = 0;
  *(_BYTE *)(a1 + 3340) = v465;
  *(_BYTE *)(a1 + 4151) = a2[826] > 0;
  if (*((_BYTE *)a2 + 1654))
    v466 = -1;
  else
    v466 = 0;
  *(_BYTE *)(a1 + 3341) = v466;
  *(_BYTE *)(a1 + 4152) = a2[828] > 0;
  if (*((_BYTE *)a2 + 1658))
    v467 = -1;
  else
    v467 = 0;
  *(_BYTE *)(a1 + 3342) = v467;
  *(_BYTE *)(a1 + 4153) = a2[830] > 0;
  if (*((_BYTE *)a2 + 1662))
    v468 = -1;
  else
    v468 = 0;
  *(_BYTE *)(a1 + 3343) = v468;
  *(_BYTE *)(a1 + 4154) = a2[832] > 0;
  if (*((_BYTE *)a2 + 1666))
    v469 = -1;
  else
    v469 = 0;
  *(_BYTE *)(a1 + 3344) = v469;
  *(_BYTE *)(a1 + 4155) = a2[834] > 0;
  if (*((_BYTE *)a2 + 1670))
    v470 = -1;
  else
    v470 = 0;
  *(_BYTE *)(a1 + 3345) = v470;
  *(_BYTE *)(a1 + 4156) = a2[836] > 0;
  if (*((_BYTE *)a2 + 1674))
    v471 = -1;
  else
    v471 = 0;
  *(_BYTE *)(a1 + 3346) = v471;
  *(_BYTE *)(a1 + 4157) = a2[838] > 0;
  if (*((_BYTE *)a2 + 1678))
    v472 = -1;
  else
    v472 = 0;
  *(_BYTE *)(a1 + 3347) = v472;
  *(_BYTE *)(a1 + 4158) = a2[840] > 0;
  if (*((_BYTE *)a2 + 1682))
    v473 = -1;
  else
    v473 = 0;
  *(_BYTE *)(a1 + 3348) = v473;
  *(_BYTE *)(a1 + 4159) = a2[842] > 0;
  if (*((_BYTE *)a2 + 1686))
    v474 = -1;
  else
    v474 = 0;
  *(_BYTE *)(a1 + 3349) = v474;
  *(_BYTE *)(a1 + 4160) = a2[844] > 0;
  if (*((_BYTE *)a2 + 1690))
    v475 = -1;
  else
    v475 = 0;
  *(_BYTE *)(a1 + 3350) = v475;
  *(_BYTE *)(a1 + 4161) = a2[846] > 0;
  if (*((_BYTE *)a2 + 1694))
    v476 = -1;
  else
    v476 = 0;
  *(_BYTE *)(a1 + 3351) = v476;
  *(_BYTE *)(a1 + 4162) = a2[848] > 0;
  if (*((_BYTE *)a2 + 1698))
    v477 = -1;
  else
    v477 = 0;
  *(_BYTE *)(a1 + 3352) = v477;
  *(_BYTE *)(a1 + 4163) = a2[850] > 0;
  if (*((_BYTE *)a2 + 1702))
    v478 = -1;
  else
    v478 = 0;
  *(_BYTE *)(a1 + 3353) = v478;
  *(_BYTE *)(a1 + 4164) = a2[852] > 0;
  if (*((_BYTE *)a2 + 1706))
    v479 = -1;
  else
    v479 = 0;
  *(_BYTE *)(a1 + 3354) = v479;
  *(_BYTE *)(a1 + 4165) = a2[854] > 0;
  if (*((_BYTE *)a2 + 1710))
    v480 = -1;
  else
    v480 = 0;
  *(_BYTE *)(a1 + 3355) = v480;
  *(_BYTE *)(a1 + 4166) = a2[856] > 0;
  if (*((_BYTE *)a2 + 1714))
    v481 = -1;
  else
    v481 = 0;
  *(_BYTE *)(a1 + 3356) = v481;
  *(_BYTE *)(a1 + 4167) = a2[858] > 0;
  if (*((_BYTE *)a2 + 1718))
    v482 = -1;
  else
    v482 = 0;
  *(_BYTE *)(a1 + 3357) = v482;
  *(_BYTE *)(a1 + 4168) = a2[860] > 0;
  if (*((_BYTE *)a2 + 1722))
    v483 = -1;
  else
    v483 = 0;
  *(_BYTE *)(a1 + 3358) = v483;
  *(_BYTE *)(a1 + 4169) = a2[862] > 0;
  if (*((_BYTE *)a2 + 1726))
    v484 = -1;
  else
    v484 = 0;
  *(_BYTE *)(a1 + 3359) = v484;
  *(_BYTE *)(a1 + 4170) = a2[864] > 0;
  if (*((_BYTE *)a2 + 1730))
    v485 = -1;
  else
    v485 = 0;
  *(_BYTE *)(a1 + 3360) = v485;
  *(_BYTE *)(a1 + 4171) = a2[866] > 0;
  if (*((_BYTE *)a2 + 1734))
    v486 = -1;
  else
    v486 = 0;
  *(_BYTE *)(a1 + 3361) = v486;
  *(_BYTE *)(a1 + 4172) = a2[868] > 0;
  if (*((_BYTE *)a2 + 1738))
    v487 = -1;
  else
    v487 = 0;
  *(_BYTE *)(a1 + 3362) = v487;
  *(_BYTE *)(a1 + 4173) = a2[870] > 0;
  if (*((_BYTE *)a2 + 1742))
    v488 = -1;
  else
    v488 = 0;
  *(_BYTE *)(a1 + 3363) = v488;
  *(_BYTE *)(a1 + 4174) = a2[872] > 0;
  if (*((_BYTE *)a2 + 1746))
    v489 = -1;
  else
    v489 = 0;
  *(_BYTE *)(a1 + 3364) = v489;
  *(_BYTE *)(a1 + 4175) = a2[874] > 0;
  if (*((_BYTE *)a2 + 1750))
    v490 = -1;
  else
    v490 = 0;
  *(_BYTE *)(a1 + 3365) = v490;
  *(_BYTE *)(a1 + 4176) = a2[876] > 0;
  if (*((_BYTE *)a2 + 1754))
    v491 = -1;
  else
    v491 = 0;
  *(_BYTE *)(a1 + 3366) = v491;
  *(_BYTE *)(a1 + 4177) = a2[878] > 0;
  if (*((_BYTE *)a2 + 1758))
    v492 = -1;
  else
    v492 = 0;
  *(_BYTE *)(a1 + 3367) = v492;
  *(_BYTE *)(a1 + 4178) = a2[880] > 0;
  if (*((_BYTE *)a2 + 1762))
    v493 = -1;
  else
    v493 = 0;
  *(_BYTE *)(a1 + 3368) = v493;
  *(_BYTE *)(a1 + 4179) = a2[882] > 0;
  if (*((_BYTE *)a2 + 1766))
    v494 = -1;
  else
    v494 = 0;
  *(_BYTE *)(a1 + 3369) = v494;
  *(_BYTE *)(a1 + 4180) = a2[884] > 0;
  if (*((_BYTE *)a2 + 1770))
    v495 = -1;
  else
    v495 = 0;
  *(_BYTE *)(a1 + 3370) = v495;
  *(_BYTE *)(a1 + 4181) = a2[886] > 0;
  if (*((_BYTE *)a2 + 1774))
    v496 = -1;
  else
    v496 = 0;
  *(_BYTE *)(a1 + 3371) = v496;
  *(_BYTE *)(a1 + 4182) = a2[888] > 0;
  if (*((_BYTE *)a2 + 1778))
    v497 = -1;
  else
    v497 = 0;
  *(_BYTE *)(a1 + 3372) = v497;
  *(_BYTE *)(a1 + 4183) = a2[890] > 0;
  if (*((_BYTE *)a2 + 1782))
    v498 = -1;
  else
    v498 = 0;
  *(_BYTE *)(a1 + 3373) = v498;
  *(_BYTE *)(a1 + 4184) = a2[892] > 0;
  if (*((_BYTE *)a2 + 1786))
    v499 = -1;
  else
    v499 = 0;
  *(_BYTE *)(a1 + 3374) = v499;
  *(_BYTE *)(a1 + 4185) = a2[894] > 0;
  if (*((_BYTE *)a2 + 1790))
    v500 = -1;
  else
    v500 = 0;
  *(_BYTE *)(a1 + 3375) = v500;
  *(_BYTE *)(a1 + 4186) = a2[896] > 0;
  if (*((_BYTE *)a2 + 1794))
    v501 = -1;
  else
    v501 = 0;
  *(_BYTE *)(a1 + 3376) = v501;
  *(_BYTE *)(a1 + 4187) = a2[898] > 0;
  if (*((_BYTE *)a2 + 1798))
    v502 = -1;
  else
    v502 = 0;
  *(_BYTE *)(a1 + 3377) = v502;
  *(_BYTE *)(a1 + 4188) = a2[900] > 0;
  if (*((_BYTE *)a2 + 1802))
    v503 = -1;
  else
    v503 = 0;
  *(_BYTE *)(a1 + 3378) = v503;
  *(_BYTE *)(a1 + 4189) = a2[902] > 0;
  if (*((_BYTE *)a2 + 1806))
    v504 = -1;
  else
    v504 = 0;
  *(_BYTE *)(a1 + 3379) = v504;
  *(_BYTE *)(a1 + 4190) = a2[904] > 0;
  if (*((_BYTE *)a2 + 1810))
    v505 = -1;
  else
    v505 = 0;
  *(_BYTE *)(a1 + 3380) = v505;
  *(_BYTE *)(a1 + 4191) = a2[906] > 0;
  if (*((_BYTE *)a2 + 1814))
    v506 = -1;
  else
    v506 = 0;
  *(_BYTE *)(a1 + 3381) = v506;
  *(_BYTE *)(a1 + 4192) = a2[908] > 0;
  if (*((_BYTE *)a2 + 1818))
    v507 = -1;
  else
    v507 = 0;
  *(_BYTE *)(a1 + 3382) = v507;
  *(_BYTE *)(a1 + 4193) = a2[910] > 0;
  if (*((_BYTE *)a2 + 1822))
    v508 = -1;
  else
    v508 = 0;
  *(_BYTE *)(a1 + 3383) = v508;
  *(_BYTE *)(a1 + 4194) = a2[912] > 0;
  if (*((_BYTE *)a2 + 1826))
    v509 = -1;
  else
    v509 = 0;
  *(_BYTE *)(a1 + 3384) = v509;
  *(_BYTE *)(a1 + 4195) = a2[914] > 0;
  if (*((_BYTE *)a2 + 1830))
    v510 = -1;
  else
    v510 = 0;
  *(_BYTE *)(a1 + 3385) = v510;
  *(_BYTE *)(a1 + 4196) = a2[916] > 0;
  if (*((_BYTE *)a2 + 1834))
    v511 = -1;
  else
    v511 = 0;
  *(_BYTE *)(a1 + 3386) = v511;
  *(_BYTE *)(a1 + 4197) = a2[918] > 0;
  if (*((_BYTE *)a2 + 1838))
    v512 = -1;
  else
    v512 = 0;
  *(_BYTE *)(a1 + 3387) = v512;
  *(_BYTE *)(a1 + 4198) = a2[920] > 0;
  if (*((_BYTE *)a2 + 1842))
    v513 = -1;
  else
    v513 = 0;
  *(_BYTE *)(a1 + 3388) = v513;
  *(_BYTE *)(a1 + 4199) = a2[922] > 0;
  if (*((_BYTE *)a2 + 1846))
    v514 = -1;
  else
    v514 = 0;
  *(_BYTE *)(a1 + 3389) = v514;
  *(_BYTE *)(a1 + 4200) = a2[924] > 0;
  if (*((_BYTE *)a2 + 1850))
    v515 = -1;
  else
    v515 = 0;
  *(_BYTE *)(a1 + 3390) = v515;
  *(_BYTE *)(a1 + 4201) = a2[926] > 0;
  if (*((_BYTE *)a2 + 1854))
    v516 = -1;
  else
    v516 = 0;
  *(_BYTE *)(a1 + 3391) = v516;
  *(_BYTE *)(a1 + 4202) = a2[928] > 0;
  if (*((_BYTE *)a2 + 1858))
    v517 = -1;
  else
    v517 = 0;
  *(_BYTE *)(a1 + 3392) = v517;
  *(_BYTE *)(a1 + 4203) = a2[930] > 0;
  if (*((_BYTE *)a2 + 1862))
    v518 = -1;
  else
    v518 = 0;
  *(_BYTE *)(a1 + 3393) = v518;
  *(_BYTE *)(a1 + 4204) = a2[932] > 0;
  if (*((_BYTE *)a2 + 1866))
    v519 = -1;
  else
    v519 = 0;
  *(_BYTE *)(a1 + 3394) = v519;
  *(_BYTE *)(a1 + 4205) = a2[934] > 0;
  if (*((_BYTE *)a2 + 1870))
    v520 = -1;
  else
    v520 = 0;
  *(_BYTE *)(a1 + 3395) = v520;
  *(_BYTE *)(a1 + 4206) = a2[936] > 0;
  if (*((_BYTE *)a2 + 1874))
    v521 = -1;
  else
    v521 = 0;
  *(_BYTE *)(a1 + 3396) = v521;
  *(_BYTE *)(a1 + 4207) = a2[938] > 0;
  if (*((_BYTE *)a2 + 1878))
    v522 = -1;
  else
    v522 = 0;
  *(_BYTE *)(a1 + 3397) = v522;
  *(_BYTE *)(a1 + 4208) = a2[940] > 0;
  if (*((_BYTE *)a2 + 1882))
    v523 = -1;
  else
    v523 = 0;
  *(_BYTE *)(a1 + 3398) = v523;
  *(_BYTE *)(a1 + 4209) = a2[942] > 0;
  if (*((_BYTE *)a2 + 1886))
    v524 = -1;
  else
    v524 = 0;
  *(_BYTE *)(a1 + 3399) = v524;
  *(_BYTE *)(a1 + 4210) = a2[944] > 0;
  if (*((_BYTE *)a2 + 1890))
    v525 = -1;
  else
    v525 = 0;
  *(_BYTE *)(a1 + 3400) = v525;
  *(_BYTE *)(a1 + 4211) = a2[946] > 0;
  if (*((_BYTE *)a2 + 1894))
    v526 = -1;
  else
    v526 = 0;
  *(_BYTE *)(a1 + 3401) = v526;
  *(_BYTE *)(a1 + 4212) = a2[948] > 0;
  if (*((_BYTE *)a2 + 1898))
    v527 = -1;
  else
    v527 = 0;
  *(_BYTE *)(a1 + 3402) = v527;
  *(_BYTE *)(a1 + 4213) = a2[950] > 0;
  if (*((_BYTE *)a2 + 1902))
    v528 = -1;
  else
    v528 = 0;
  *(_BYTE *)(a1 + 3403) = v528;
  *(_BYTE *)(a1 + 4214) = a2[952] > 0;
  if (*((_BYTE *)a2 + 1906))
    v529 = -1;
  else
    v529 = 0;
  *(_BYTE *)(a1 + 3404) = v529;
  *(_BYTE *)(a1 + 4215) = a2[954] > 0;
  if (*((_BYTE *)a2 + 1910))
    v530 = -1;
  else
    v530 = 0;
  *(_BYTE *)(a1 + 3405) = v530;
  *(_BYTE *)(a1 + 4216) = a2[956] > 0;
  if (*((_BYTE *)a2 + 1914))
    v531 = -1;
  else
    v531 = 0;
  *(_BYTE *)(a1 + 3406) = v531;
  *(_BYTE *)(a1 + 4217) = a2[958] > 0;
  if (*((_BYTE *)a2 + 1918))
    v532 = -1;
  else
    v532 = 0;
  *(_BYTE *)(a1 + 3407) = v532;
  *(_BYTE *)(a1 + 4218) = a2[960] > 0;
  if (*((_BYTE *)a2 + 1922))
    v533 = -1;
  else
    v533 = 0;
  *(_BYTE *)(a1 + 3408) = v533;
  *(_BYTE *)(a1 + 4219) = a2[962] > 0;
  if (*((_BYTE *)a2 + 1926))
    v534 = -1;
  else
    v534 = 0;
  *(_BYTE *)(a1 + 3409) = v534;
  *(_BYTE *)(a1 + 4220) = a2[964] > 0;
  if (*((_BYTE *)a2 + 1930))
    v535 = -1;
  else
    v535 = 0;
  *(_BYTE *)(a1 + 3410) = v535;
  *(_BYTE *)(a1 + 4221) = a2[966] > 0;
  if (*((_BYTE *)a2 + 1934))
    v536 = -1;
  else
    v536 = 0;
  *(_BYTE *)(a1 + 3411) = v536;
  *(_BYTE *)(a1 + 4222) = a2[968] > 0;
  if (*((_BYTE *)a2 + 1938))
    v537 = -1;
  else
    v537 = 0;
  *(_BYTE *)(a1 + 3412) = v537;
  *(_BYTE *)(a1 + 4223) = a2[970] > 0;
  if (*((_BYTE *)a2 + 1942))
    v538 = -1;
  else
    v538 = 0;
  *(_BYTE *)(a1 + 3413) = v538;
  *(_BYTE *)(a1 + 4224) = a2[972] > 0;
  if (*((_BYTE *)a2 + 1946))
    v539 = -1;
  else
    v539 = 0;
  *(_BYTE *)(a1 + 3414) = v539;
  *(_BYTE *)(a1 + 4225) = a2[974] > 0;
  if (*((_BYTE *)a2 + 1950))
    v540 = -1;
  else
    v540 = 0;
  *(_BYTE *)(a1 + 3415) = v540;
  *(_BYTE *)(a1 + 4226) = a2[976] > 0;
  if (*((_BYTE *)a2 + 1954))
    v541 = -1;
  else
    v541 = 0;
  *(_BYTE *)(a1 + 3416) = v541;
  *(_BYTE *)(a1 + 4227) = a2[978] > 0;
  if (*((_BYTE *)a2 + 1958))
    v542 = -1;
  else
    v542 = 0;
  *(_BYTE *)(a1 + 3417) = v542;
  *(_BYTE *)(a1 + 4228) = a2[980] > 0;
  if (*((_BYTE *)a2 + 1962))
    v543 = -1;
  else
    v543 = 0;
  *(_BYTE *)(a1 + 3418) = v543;
  *(_BYTE *)(a1 + 4229) = a2[982] > 0;
  if (*((_BYTE *)a2 + 1966))
    v544 = -1;
  else
    v544 = 0;
  *(_BYTE *)(a1 + 3419) = v544;
  *(_BYTE *)(a1 + 4230) = a2[984] > 0;
  if (*((_BYTE *)a2 + 1970))
    v545 = -1;
  else
    v545 = 0;
  *(_BYTE *)(a1 + 3420) = v545;
  *(_BYTE *)(a1 + 4231) = a2[986] > 0;
  if (*((_BYTE *)a2 + 1974))
    v546 = -1;
  else
    v546 = 0;
  *(_BYTE *)(a1 + 3421) = v546;
  *(_BYTE *)(a1 + 4232) = a2[988] > 0;
  if (*((_BYTE *)a2 + 1978))
    v547 = -1;
  else
    v547 = 0;
  *(_BYTE *)(a1 + 3422) = v547;
  *(_BYTE *)(a1 + 4233) = a2[990] > 0;
  if (*((_BYTE *)a2 + 1982))
    v548 = -1;
  else
    v548 = 0;
  *(_BYTE *)(a1 + 3423) = v548;
  *(_BYTE *)(a1 + 4234) = a2[992] > 0;
  if (*((_BYTE *)a2 + 1986))
    v549 = -1;
  else
    v549 = 0;
  *(_BYTE *)(a1 + 3424) = v549;
  *(_BYTE *)(a1 + 4235) = a2[994] > 0;
  if (*((_BYTE *)a2 + 1990))
    v550 = -1;
  else
    v550 = 0;
  *(_BYTE *)(a1 + 3425) = v550;
  *(_BYTE *)(a1 + 4236) = a2[996] > 0;
  if (*((_BYTE *)a2 + 1994))
    v551 = -1;
  else
    v551 = 0;
  *(_BYTE *)(a1 + 3426) = v551;
  *(_BYTE *)(a1 + 4237) = a2[998] > 0;
  if (*((_BYTE *)a2 + 1998))
    v552 = -1;
  else
    v552 = 0;
  *(_BYTE *)(a1 + 3427) = v552;
  *(_BYTE *)(a1 + 4238) = a2[1000] > 0;
  if (*((_BYTE *)a2 + 2002))
    v553 = -1;
  else
    v553 = 0;
  *(_BYTE *)(a1 + 3428) = v553;
  *(_BYTE *)(a1 + 4239) = a2[1002] > 0;
  if (*((_BYTE *)a2 + 2006))
    v554 = -1;
  else
    v554 = 0;
  *(_BYTE *)(a1 + 3429) = v554;
  *(_BYTE *)(a1 + 4240) = a2[1004] > 0;
  if (*((_BYTE *)a2 + 2010))
    v555 = -1;
  else
    v555 = 0;
  *(_BYTE *)(a1 + 3430) = v555;
  *(_BYTE *)(a1 + 4241) = a2[1006] > 0;
  if (*((_BYTE *)a2 + 2014))
    v556 = -1;
  else
    v556 = 0;
  *(_BYTE *)(a1 + 3431) = v556;
  *(_BYTE *)(a1 + 4242) = a2[1008] > 0;
  if (*((_BYTE *)a2 + 2018))
    v557 = -1;
  else
    v557 = 0;
  *(_BYTE *)(a1 + 3432) = v557;
  *(_BYTE *)(a1 + 4243) = a2[1010] > 0;
  if (*((_BYTE *)a2 + 2022))
    v558 = -1;
  else
    v558 = 0;
  *(_BYTE *)(a1 + 3433) = v558;
  *(_BYTE *)(a1 + 4244) = a2[1012] > 0;
  if (*((_BYTE *)a2 + 2026))
    v559 = -1;
  else
    v559 = 0;
  *(_BYTE *)(a1 + 3434) = v559;
  *(_BYTE *)(a1 + 4245) = a2[1014] > 0;
  if (*((_BYTE *)a2 + 2030))
    v560 = -1;
  else
    v560 = 0;
  *(_BYTE *)(a1 + 3435) = v560;
  *(_BYTE *)(a1 + 4246) = a2[1016] > 0;
  if (*((_BYTE *)a2 + 2034))
    v561 = -1;
  else
    v561 = 0;
  *(_BYTE *)(a1 + 3436) = v561;
  *(_BYTE *)(a1 + 4247) = a2[1018] > 0;
  if (*((_BYTE *)a2 + 2038))
    v562 = -1;
  else
    v562 = 0;
  *(_BYTE *)(a1 + 3437) = v562;
  *(_BYTE *)(a1 + 4248) = a2[1020] > 0;
  if (*((_BYTE *)a2 + 2042))
    v563 = -1;
  else
    v563 = 0;
  *(_BYTE *)(a1 + 3438) = v563;
  *(_BYTE *)(a1 + 4249) = a2[1022] > 0;
  if (*((_BYTE *)a2 + 2046))
    v564 = -1;
  else
    v564 = 0;
  *(_BYTE *)(a1 + 3439) = v564;
  *(_BYTE *)(a1 + 4250) = a2[1024] > 0;
  if (*((_BYTE *)a2 + 2050))
    v565 = -1;
  else
    v565 = 0;
  *(_BYTE *)(a1 + 3440) = v565;
  *(_BYTE *)(a1 + 4251) = a2[1026] > 0;
  if (*((_BYTE *)a2 + 2054))
    v566 = -1;
  else
    v566 = 0;
  *(_BYTE *)(a1 + 3441) = v566;
  *(_BYTE *)(a1 + 4252) = a2[1028] > 0;
  if (*((_BYTE *)a2 + 2058))
    v567 = -1;
  else
    v567 = 0;
  *(_BYTE *)(a1 + 3442) = v567;
  *(_BYTE *)(a1 + 4253) = a2[1030] > 0;
  if (*((_BYTE *)a2 + 2062))
    v568 = -1;
  else
    v568 = 0;
  *(_BYTE *)(a1 + 3443) = v568;
  *(_BYTE *)(a1 + 4254) = a2[1032] > 0;
  if (*((_BYTE *)a2 + 2066))
    v569 = -1;
  else
    v569 = 0;
  *(_BYTE *)(a1 + 3444) = v569;
  *(_BYTE *)(a1 + 4255) = a2[1034] > 0;
  if (*((_BYTE *)a2 + 2070))
    v570 = -1;
  else
    v570 = 0;
  *(_BYTE *)(a1 + 3445) = v570;
  *(_BYTE *)(a1 + 4256) = a2[1036] > 0;
  if (*((_BYTE *)a2 + 2074))
    v571 = -1;
  else
    v571 = 0;
  *(_BYTE *)(a1 + 3446) = v571;
  *(_BYTE *)(a1 + 4257) = a2[1038] > 0;
  if (*((_BYTE *)a2 + 2078))
    v572 = -1;
  else
    v572 = 0;
  *(_BYTE *)(a1 + 3447) = v572;
  *(_BYTE *)(a1 + 4258) = a2[1040] > 0;
  if (*((_BYTE *)a2 + 2082))
    v573 = -1;
  else
    v573 = 0;
  *(_BYTE *)(a1 + 3448) = v573;
  *(_BYTE *)(a1 + 4259) = a2[1042] > 0;
  if (*((_BYTE *)a2 + 2086))
    v574 = -1;
  else
    v574 = 0;
  *(_BYTE *)(a1 + 3449) = v574;
  *(_BYTE *)(a1 + 4260) = a2[1044] > 0;
  if (*((_BYTE *)a2 + 2090))
    v575 = -1;
  else
    v575 = 0;
  *(_BYTE *)(a1 + 3450) = v575;
  *(_BYTE *)(a1 + 4261) = a2[1046] > 0;
  if (*((_BYTE *)a2 + 2094))
    v576 = -1;
  else
    v576 = 0;
  *(_BYTE *)(a1 + 3451) = v576;
  *(_BYTE *)(a1 + 4262) = a2[1048] > 0;
  if (*((_BYTE *)a2 + 2098))
    v577 = -1;
  else
    v577 = 0;
  *(_BYTE *)(a1 + 3452) = v577;
  *(_BYTE *)(a1 + 4263) = a2[1050] > 0;
  if (*((_BYTE *)a2 + 2102))
    v578 = -1;
  else
    v578 = 0;
  *(_BYTE *)(a1 + 3453) = v578;
  *(_BYTE *)(a1 + 4264) = a2[1052] > 0;
  if (*((_BYTE *)a2 + 2106))
    v579 = -1;
  else
    v579 = 0;
  *(_BYTE *)(a1 + 3454) = v579;
  *(_BYTE *)(a1 + 4265) = a2[1054] > 0;
  if (*((_BYTE *)a2 + 2110))
    v580 = -1;
  else
    v580 = 0;
  *(_BYTE *)(a1 + 3455) = v580;
  *(_BYTE *)(a1 + 4266) = a2[1056] > 0;
  if (*((_BYTE *)a2 + 2114))
    v581 = -1;
  else
    v581 = 0;
  *(_BYTE *)(a1 + 3456) = v581;
  *(_BYTE *)(a1 + 4267) = a2[1058] > 0;
  if (*((_BYTE *)a2 + 2118))
    v582 = -1;
  else
    v582 = 0;
  *(_BYTE *)(a1 + 3457) = v582;
  *(_BYTE *)(a1 + 4268) = a2[1060] > 0;
  if (*((_BYTE *)a2 + 2122))
    v583 = -1;
  else
    v583 = 0;
  *(_BYTE *)(a1 + 3458) = v583;
  *(_BYTE *)(a1 + 4269) = a2[1062] > 0;
  if (*((_BYTE *)a2 + 2126))
    v584 = -1;
  else
    v584 = 0;
  *(_BYTE *)(a1 + 3459) = v584;
  *(_BYTE *)(a1 + 4270) = a2[1064] > 0;
  if (*((_BYTE *)a2 + 2130))
    v585 = -1;
  else
    v585 = 0;
  *(_BYTE *)(a1 + 3460) = v585;
  *(_BYTE *)(a1 + 4271) = a2[1066] > 0;
  if (*((_BYTE *)a2 + 2134))
    v586 = -1;
  else
    v586 = 0;
  *(_BYTE *)(a1 + 3461) = v586;
  *(_BYTE *)(a1 + 4272) = a2[1068] > 0;
  if (*((_BYTE *)a2 + 2138))
    v587 = -1;
  else
    v587 = 0;
  *(_BYTE *)(a1 + 3462) = v587;
  *(_BYTE *)(a1 + 4273) = a2[1070] > 0;
  if (*((_BYTE *)a2 + 2142))
    v588 = -1;
  else
    v588 = 0;
  *(_BYTE *)(a1 + 3463) = v588;
  *(_BYTE *)(a1 + 4274) = a2[1072] > 0;
  if (*((_BYTE *)a2 + 2146))
    v589 = -1;
  else
    v589 = 0;
  *(_BYTE *)(a1 + 3464) = v589;
  *(_BYTE *)(a1 + 4275) = a2[1074] > 0;
  if (*((_BYTE *)a2 + 2150))
    v590 = -1;
  else
    v590 = 0;
  *(_BYTE *)(a1 + 3465) = v590;
  *(_BYTE *)(a1 + 4276) = a2[1076] > 0;
  if (*((_BYTE *)a2 + 2154))
    v591 = -1;
  else
    v591 = 0;
  *(_BYTE *)(a1 + 3466) = v591;
  *(_BYTE *)(a1 + 4277) = a2[1078] > 0;
  if (*((_BYTE *)a2 + 2158))
    v592 = -1;
  else
    v592 = 0;
  *(_BYTE *)(a1 + 3467) = v592;
  *(_BYTE *)(a1 + 4278) = a2[1080] > 0;
  if (*((_BYTE *)a2 + 2162))
    v593 = -1;
  else
    v593 = 0;
  *(_BYTE *)(a1 + 3468) = v593;
  *(_BYTE *)(a1 + 4279) = a2[1082] > 0;
  if (*((_BYTE *)a2 + 2166))
    v594 = -1;
  else
    v594 = 0;
  *(_BYTE *)(a1 + 3469) = v594;
  *(_BYTE *)(a1 + 4280) = a2[1084] > 0;
  if (*((_BYTE *)a2 + 2170))
    v595 = -1;
  else
    v595 = 0;
  *(_BYTE *)(a1 + 3470) = v595;
  *(_BYTE *)(a1 + 4281) = a2[1086] > 0;
  if (*((_BYTE *)a2 + 2174))
    v596 = -1;
  else
    v596 = 0;
  *(_BYTE *)(a1 + 3471) = v596;
  *(_BYTE *)(a1 + 4282) = a2[1088] > 0;
  if (*((_BYTE *)a2 + 2178))
    v597 = -1;
  else
    v597 = 0;
  *(_BYTE *)(a1 + 3472) = v597;
  *(_BYTE *)(a1 + 4283) = a2[1090] > 0;
  if (*((_BYTE *)a2 + 2182))
    v598 = -1;
  else
    v598 = 0;
  *(_BYTE *)(a1 + 3473) = v598;
  *(_BYTE *)(a1 + 4284) = a2[1092] > 0;
  if (*((_BYTE *)a2 + 2186))
    v599 = -1;
  else
    v599 = 0;
  *(_BYTE *)(a1 + 3474) = v599;
  *(_BYTE *)(a1 + 4285) = a2[1094] > 0;
  if (*((_BYTE *)a2 + 2190))
    v600 = -1;
  else
    v600 = 0;
  *(_BYTE *)(a1 + 3475) = v600;
  *(_BYTE *)(a1 + 4286) = a2[1096] > 0;
  if (*((_BYTE *)a2 + 2194))
    v601 = -1;
  else
    v601 = 0;
  *(_BYTE *)(a1 + 3476) = v601;
  *(_BYTE *)(a1 + 4287) = a2[1098] > 0;
  if (*((_BYTE *)a2 + 2198))
    v602 = -1;
  else
    v602 = 0;
  *(_BYTE *)(a1 + 3477) = v602;
  *(_BYTE *)(a1 + 4288) = a2[1100] > 0;
  if (*((_BYTE *)a2 + 2202))
    v603 = -1;
  else
    v603 = 0;
  *(_BYTE *)(a1 + 3478) = v603;
  *(_BYTE *)(a1 + 4289) = a2[1102] > 0;
  if (*((_BYTE *)a2 + 2206))
    v604 = -1;
  else
    v604 = 0;
  *(_BYTE *)(a1 + 3479) = v604;
  *(_BYTE *)(a1 + 4290) = a2[1104] > 0;
  if (*((_BYTE *)a2 + 2210))
    v605 = -1;
  else
    v605 = 0;
  *(_BYTE *)(a1 + 3480) = v605;
  *(_BYTE *)(a1 + 4291) = a2[1106] > 0;
  if (*((_BYTE *)a2 + 2214))
    v606 = -1;
  else
    v606 = 0;
  *(_BYTE *)(a1 + 3481) = v606;
  *(_BYTE *)(a1 + 4292) = a2[1108] > 0;
  if (*((_BYTE *)a2 + 2218))
    v607 = -1;
  else
    v607 = 0;
  *(_BYTE *)(a1 + 3482) = v607;
  *(_BYTE *)(a1 + 4293) = a2[1110] > 0;
  if (*((_BYTE *)a2 + 2222))
    v608 = -1;
  else
    v608 = 0;
  *(_BYTE *)(a1 + 3483) = v608;
  *(_BYTE *)(a1 + 4294) = a2[1112] > 0;
  if (*((_BYTE *)a2 + 2226))
    v609 = -1;
  else
    v609 = 0;
  *(_BYTE *)(a1 + 3484) = v609;
  *(_BYTE *)(a1 + 4295) = a2[1114] > 0;
  if (*((_BYTE *)a2 + 2230))
    v610 = -1;
  else
    v610 = 0;
  *(_BYTE *)(a1 + 3485) = v610;
  *(_BYTE *)(a1 + 4296) = a2[1116] > 0;
  if (*((_BYTE *)a2 + 2234))
    v611 = -1;
  else
    v611 = 0;
  *(_BYTE *)(a1 + 3486) = v611;
  *(_BYTE *)(a1 + 4297) = a2[1118] > 0;
  if (*((_BYTE *)a2 + 2238))
    v612 = -1;
  else
    v612 = 0;
  *(_BYTE *)(a1 + 3487) = v612;
  *(_BYTE *)(a1 + 4298) = a2[1120] > 0;
  if (*((_BYTE *)a2 + 2242))
    v613 = -1;
  else
    v613 = 0;
  *(_BYTE *)(a1 + 3488) = v613;
  *(_BYTE *)(a1 + 4299) = a2[1122] > 0;
  if (*((_BYTE *)a2 + 2246))
    v614 = -1;
  else
    v614 = 0;
  *(_BYTE *)(a1 + 3489) = v614;
  *(_BYTE *)(a1 + 4300) = a2[1124] > 0;
  if (*((_BYTE *)a2 + 2250))
    v615 = -1;
  else
    v615 = 0;
  *(_BYTE *)(a1 + 3490) = v615;
  *(_BYTE *)(a1 + 4301) = a2[1126] > 0;
  if (*((_BYTE *)a2 + 2254))
    v616 = -1;
  else
    v616 = 0;
  *(_BYTE *)(a1 + 3491) = v616;
  *(_BYTE *)(a1 + 4302) = a2[1128] > 0;
  if (*((_BYTE *)a2 + 2258))
    v617 = -1;
  else
    v617 = 0;
  *(_BYTE *)(a1 + 3492) = v617;
  *(_BYTE *)(a1 + 4303) = a2[1130] > 0;
  if (*((_BYTE *)a2 + 2262))
    v618 = -1;
  else
    v618 = 0;
  *(_BYTE *)(a1 + 3493) = v618;
  *(_BYTE *)(a1 + 4304) = a2[1132] > 0;
  if (*((_BYTE *)a2 + 2266))
    v619 = -1;
  else
    v619 = 0;
  *(_BYTE *)(a1 + 3494) = v619;
  *(_BYTE *)(a1 + 4305) = a2[1134] > 0;
  if (*((_BYTE *)a2 + 2270))
    v620 = -1;
  else
    v620 = 0;
  *(_BYTE *)(a1 + 3495) = v620;
  *(_BYTE *)(a1 + 4306) = a2[1136] > 0;
  if (*((_BYTE *)a2 + 2274))
    v621 = -1;
  else
    v621 = 0;
  *(_BYTE *)(a1 + 3496) = v621;
  *(_BYTE *)(a1 + 4307) = a2[1138] > 0;
  if (*((_BYTE *)a2 + 2278))
    v622 = -1;
  else
    v622 = 0;
  *(_BYTE *)(a1 + 3497) = v622;
  *(_BYTE *)(a1 + 4308) = a2[1140] > 0;
  if (*((_BYTE *)a2 + 2282))
    v623 = -1;
  else
    v623 = 0;
  *(_BYTE *)(a1 + 3498) = v623;
  *(_BYTE *)(a1 + 4309) = a2[1142] > 0;
  if (*((_BYTE *)a2 + 2286))
    v624 = -1;
  else
    v624 = 0;
  *(_BYTE *)(a1 + 3499) = v624;
  *(_BYTE *)(a1 + 4310) = a2[1144] > 0;
  if (*((_BYTE *)a2 + 2290))
    v625 = -1;
  else
    v625 = 0;
  *(_BYTE *)(a1 + 3500) = v625;
  *(_BYTE *)(a1 + 4311) = a2[1146] > 0;
  if (*((_BYTE *)a2 + 2294))
    v626 = -1;
  else
    v626 = 0;
  *(_BYTE *)(a1 + 3501) = v626;
  *(_BYTE *)(a1 + 4312) = a2[1148] > 0;
  if (*((_BYTE *)a2 + 2298))
    v627 = -1;
  else
    v627 = 0;
  *(_BYTE *)(a1 + 3502) = v627;
  *(_BYTE *)(a1 + 4313) = a2[1150] > 0;
  if (*((_BYTE *)a2 + 2302))
    v628 = -1;
  else
    v628 = 0;
  *(_BYTE *)(a1 + 3503) = v628;
  *(_BYTE *)(a1 + 4314) = a2[1152] > 0;
  if (*((_BYTE *)a2 + 2306))
    v629 = -1;
  else
    v629 = 0;
  *(_BYTE *)(a1 + 3504) = v629;
  *(_BYTE *)(a1 + 4315) = a2[1154] > 0;
  if (*((_BYTE *)a2 + 2310))
    v630 = -1;
  else
    v630 = 0;
  *(_BYTE *)(a1 + 3505) = v630;
  *(_BYTE *)(a1 + 4316) = a2[1156] > 0;
  if (*((_BYTE *)a2 + 2314))
    v631 = -1;
  else
    v631 = 0;
  *(_BYTE *)(a1 + 3506) = v631;
  *(_BYTE *)(a1 + 4317) = a2[1158] > 0;
  if (*((_BYTE *)a2 + 2318))
    v632 = -1;
  else
    v632 = 0;
  *(_BYTE *)(a1 + 3507) = v632;
  *(_BYTE *)(a1 + 4318) = a2[1160] > 0;
  if (*((_BYTE *)a2 + 2322))
    v633 = -1;
  else
    v633 = 0;
  *(_BYTE *)(a1 + 3508) = v633;
  *(_BYTE *)(a1 + 4319) = a2[1162] > 0;
  if (*((_BYTE *)a2 + 2326))
    v634 = -1;
  else
    v634 = 0;
  *(_BYTE *)(a1 + 3509) = v634;
  *(_BYTE *)(a1 + 4320) = a2[1164] > 0;
  if (*((_BYTE *)a2 + 2330))
    v635 = -1;
  else
    v635 = 0;
  *(_BYTE *)(a1 + 3510) = v635;
  *(_BYTE *)(a1 + 4321) = a2[1166] > 0;
  if (*((_BYTE *)a2 + 2334))
    v636 = -1;
  else
    v636 = 0;
  *(_BYTE *)(a1 + 3511) = v636;
  *(_BYTE *)(a1 + 4322) = a2[1168] > 0;
  if (*((_BYTE *)a2 + 2338))
    v637 = -1;
  else
    v637 = 0;
  *(_BYTE *)(a1 + 3512) = v637;
  *(_BYTE *)(a1 + 4323) = a2[1170] > 0;
  if (*((_BYTE *)a2 + 2342))
    v638 = -1;
  else
    v638 = 0;
  *(_BYTE *)(a1 + 3513) = v638;
  *(_BYTE *)(a1 + 4324) = a2[1172] > 0;
  if (*((_BYTE *)a2 + 2346))
    v639 = -1;
  else
    v639 = 0;
  *(_BYTE *)(a1 + 3514) = v639;
  *(_BYTE *)(a1 + 4325) = a2[1174] > 0;
  if (*((_BYTE *)a2 + 2350))
    v640 = -1;
  else
    v640 = 0;
  *(_BYTE *)(a1 + 3515) = v640;
  *(_BYTE *)(a1 + 4326) = a2[1176] > 0;
  if (*((_BYTE *)a2 + 2354))
    v641 = -1;
  else
    v641 = 0;
  *(_BYTE *)(a1 + 3516) = v641;
  *(_BYTE *)(a1 + 4327) = a2[1178] > 0;
  if (*((_BYTE *)a2 + 2358))
    v642 = -1;
  else
    v642 = 0;
  *(_BYTE *)(a1 + 3517) = v642;
  *(_BYTE *)(a1 + 4328) = a2[1180] > 0;
  if (*((_BYTE *)a2 + 2362))
    v643 = -1;
  else
    v643 = 0;
  *(_BYTE *)(a1 + 3518) = v643;
  *(_BYTE *)(a1 + 4329) = a2[1182] > 0;
  if (*((_BYTE *)a2 + 2366))
    v644 = -1;
  else
    v644 = 0;
  *(_BYTE *)(a1 + 3519) = v644;
  *(_BYTE *)(a1 + 4330) = a2[1184] > 0;
  if (*((_BYTE *)a2 + 2370))
    v645 = -1;
  else
    v645 = 0;
  *(_BYTE *)(a1 + 3520) = v645;
  *(_BYTE *)(a1 + 4331) = a2[1186] > 0;
  if (*((_BYTE *)a2 + 2374))
    v646 = -1;
  else
    v646 = 0;
  *(_BYTE *)(a1 + 3521) = v646;
  *(_BYTE *)(a1 + 4332) = a2[1188] > 0;
  if (*((_BYTE *)a2 + 2378))
    v647 = -1;
  else
    v647 = 0;
  *(_BYTE *)(a1 + 3522) = v647;
  *(_BYTE *)(a1 + 4333) = a2[1190] > 0;
  if (*((_BYTE *)a2 + 2382))
    v648 = -1;
  else
    v648 = 0;
  *(_BYTE *)(a1 + 3523) = v648;
  *(_BYTE *)(a1 + 4334) = a2[1192] > 0;
  if (*((_BYTE *)a2 + 2386))
    v649 = -1;
  else
    v649 = 0;
  *(_BYTE *)(a1 + 3524) = v649;
  *(_BYTE *)(a1 + 4335) = a2[1194] > 0;
  if (*((_BYTE *)a2 + 2390))
    v650 = -1;
  else
    v650 = 0;
  *(_BYTE *)(a1 + 3525) = v650;
  *(_BYTE *)(a1 + 4336) = a2[1196] > 0;
  if (*((_BYTE *)a2 + 2394))
    v651 = -1;
  else
    v651 = 0;
  *(_BYTE *)(a1 + 3526) = v651;
  *(_BYTE *)(a1 + 4337) = a2[1198] > 0;
  if (*((_BYTE *)a2 + 2398))
    v652 = -1;
  else
    v652 = 0;
  *(_BYTE *)(a1 + 3527) = v652;
  *(_BYTE *)(a1 + 4338) = a2[1200] > 0;
  if (*((_BYTE *)a2 + 2402))
    v653 = -1;
  else
    v653 = 0;
  *(_BYTE *)(a1 + 3528) = v653;
  *(_BYTE *)(a1 + 4339) = a2[1202] > 0;
  if (*((_BYTE *)a2 + 2406))
    v654 = -1;
  else
    v654 = 0;
  *(_BYTE *)(a1 + 3529) = v654;
  *(_BYTE *)(a1 + 4340) = a2[1204] > 0;
  if (*((_BYTE *)a2 + 2410))
    v655 = -1;
  else
    v655 = 0;
  *(_BYTE *)(a1 + 3530) = v655;
  *(_BYTE *)(a1 + 4341) = a2[1206] > 0;
  if (*((_BYTE *)a2 + 2414))
    v656 = -1;
  else
    v656 = 0;
  *(_BYTE *)(a1 + 3531) = v656;
  *(_BYTE *)(a1 + 4342) = a2[1208] > 0;
  if (*((_BYTE *)a2 + 2418))
    v657 = -1;
  else
    v657 = 0;
  *(_BYTE *)(a1 + 3532) = v657;
  *(_BYTE *)(a1 + 4343) = a2[1210] > 0;
  if (*((_BYTE *)a2 + 2422))
    v658 = -1;
  else
    v658 = 0;
  *(_BYTE *)(a1 + 3533) = v658;
  *(_BYTE *)(a1 + 4344) = a2[1212] > 0;
  if (*((_BYTE *)a2 + 2426))
    v659 = -1;
  else
    v659 = 0;
  *(_BYTE *)(a1 + 3534) = v659;
  *(_BYTE *)(a1 + 4345) = a2[1214] > 0;
  if (*((_BYTE *)a2 + 2430))
    v660 = -1;
  else
    v660 = 0;
  *(_BYTE *)(a1 + 3535) = v660;
  *(_BYTE *)(a1 + 4346) = a2[1216] > 0;
  if (*((_BYTE *)a2 + 2434))
    v661 = -1;
  else
    v661 = 0;
  *(_BYTE *)(a1 + 3536) = v661;
  *(_BYTE *)(a1 + 4347) = a2[1218] > 0;
  if (*((_BYTE *)a2 + 2438))
    v662 = -1;
  else
    v662 = 0;
  *(_BYTE *)(a1 + 3537) = v662;
  *(_BYTE *)(a1 + 4348) = a2[1220] > 0;
  if (*((_BYTE *)a2 + 2442))
    v663 = -1;
  else
    v663 = 0;
  *(_BYTE *)(a1 + 3538) = v663;
  *(_BYTE *)(a1 + 4349) = a2[1222] > 0;
  if (*((_BYTE *)a2 + 2446))
    v664 = -1;
  else
    v664 = 0;
  *(_BYTE *)(a1 + 3539) = v664;
  *(_BYTE *)(a1 + 4350) = a2[1224] > 0;
  if (*((_BYTE *)a2 + 2450))
    v665 = -1;
  else
    v665 = 0;
  *(_BYTE *)(a1 + 3540) = v665;
  *(_BYTE *)(a1 + 4351) = a2[1226] > 0;
  if (*((_BYTE *)a2 + 2454))
    v666 = -1;
  else
    v666 = 0;
  *(_BYTE *)(a1 + 3541) = v666;
  *(_BYTE *)(a1 + 4352) = a2[1228] > 0;
  if (*((_BYTE *)a2 + 2458))
    v667 = -1;
  else
    v667 = 0;
  *(_BYTE *)(a1 + 3542) = v667;
  *(_BYTE *)(a1 + 4353) = a2[1230] > 0;
  if (*((_BYTE *)a2 + 2462))
    v668 = -1;
  else
    v668 = 0;
  *(_BYTE *)(a1 + 3543) = v668;
  *(_BYTE *)(a1 + 4354) = a2[1232] > 0;
  if (*((_BYTE *)a2 + 2466))
    v669 = -1;
  else
    v669 = 0;
  *(_BYTE *)(a1 + 3544) = v669;
  *(_BYTE *)(a1 + 4355) = a2[1234] > 0;
  if (*((_BYTE *)a2 + 2470))
    v670 = -1;
  else
    v670 = 0;
  *(_BYTE *)(a1 + 3545) = v670;
  *(_BYTE *)(a1 + 4356) = a2[1236] > 0;
  if (*((_BYTE *)a2 + 2474))
    v671 = -1;
  else
    v671 = 0;
  *(_BYTE *)(a1 + 3546) = v671;
  *(_BYTE *)(a1 + 4357) = a2[1238] > 0;
  if (*((_BYTE *)a2 + 2478))
    v672 = -1;
  else
    v672 = 0;
  *(_BYTE *)(a1 + 3547) = v672;
  *(_BYTE *)(a1 + 4358) = a2[1240] > 0;
  if (*((_BYTE *)a2 + 2482))
    v673 = -1;
  else
    v673 = 0;
  *(_BYTE *)(a1 + 3548) = v673;
  *(_BYTE *)(a1 + 4359) = a2[1242] > 0;
  if (*((_BYTE *)a2 + 2486))
    v674 = -1;
  else
    v674 = 0;
  *(_BYTE *)(a1 + 3549) = v674;
  *(_BYTE *)(a1 + 4360) = a2[1244] > 0;
  if (*((_BYTE *)a2 + 2490))
    v675 = -1;
  else
    v675 = 0;
  *(_BYTE *)(a1 + 3550) = v675;
  *(_BYTE *)(a1 + 4361) = a2[1246] > 0;
  if (*((_BYTE *)a2 + 2494))
    v676 = -1;
  else
    v676 = 0;
  *(_BYTE *)(a1 + 3551) = v676;
  *(_BYTE *)(a1 + 4362) = a2[1248] > 0;
  if (*((_BYTE *)a2 + 2498))
    v677 = -1;
  else
    v677 = 0;
  *(_BYTE *)(a1 + 3552) = v677;
  *(_BYTE *)(a1 + 4363) = a2[1250] > 0;
  if (*((_BYTE *)a2 + 2502))
    v678 = -1;
  else
    v678 = 0;
  *(_BYTE *)(a1 + 3553) = v678;
  *(_BYTE *)(a1 + 4364) = a2[1252] > 0;
  if (*((_BYTE *)a2 + 2506))
    v679 = -1;
  else
    v679 = 0;
  *(_BYTE *)(a1 + 3554) = v679;
  *(_BYTE *)(a1 + 4365) = a2[1254] > 0;
  if (*((_BYTE *)a2 + 2510))
    v680 = -1;
  else
    v680 = 0;
  *(_BYTE *)(a1 + 3555) = v680;
  *(_BYTE *)(a1 + 4366) = a2[1256] > 0;
  if (*((_BYTE *)a2 + 2514))
    v681 = -1;
  else
    v681 = 0;
  *(_BYTE *)(a1 + 3556) = v681;
  *(_BYTE *)(a1 + 4367) = a2[1258] > 0;
  if (*((_BYTE *)a2 + 2518))
    v682 = -1;
  else
    v682 = 0;
  *(_BYTE *)(a1 + 3557) = v682;
  *(_BYTE *)(a1 + 4368) = a2[1260] > 0;
  if (*((_BYTE *)a2 + 2522))
    v683 = -1;
  else
    v683 = 0;
  *(_BYTE *)(a1 + 3558) = v683;
  *(_BYTE *)(a1 + 4369) = a2[1262] > 0;
  if (*((_BYTE *)a2 + 2526))
    v684 = -1;
  else
    v684 = 0;
  *(_BYTE *)(a1 + 3559) = v684;
  *(_BYTE *)(a1 + 4370) = a2[1264] > 0;
  if (*((_BYTE *)a2 + 2530))
    v685 = -1;
  else
    v685 = 0;
  *(_BYTE *)(a1 + 3560) = v685;
  *(_BYTE *)(a1 + 4371) = a2[1266] > 0;
  if (*((_BYTE *)a2 + 2534))
    v686 = -1;
  else
    v686 = 0;
  *(_BYTE *)(a1 + 3561) = v686;
  *(_BYTE *)(a1 + 4372) = a2[1268] > 0;
  if (*((_BYTE *)a2 + 2538))
    v687 = -1;
  else
    v687 = 0;
  *(_BYTE *)(a1 + 3562) = v687;
  *(_BYTE *)(a1 + 4373) = a2[1270] > 0;
  if (*((_BYTE *)a2 + 2542))
    v688 = -1;
  else
    v688 = 0;
  *(_BYTE *)(a1 + 3563) = v688;
  *(_BYTE *)(a1 + 4374) = a2[1272] > 0;
  if (*((_BYTE *)a2 + 2546))
    v689 = -1;
  else
    v689 = 0;
  *(_BYTE *)(a1 + 3564) = v689;
  *(_BYTE *)(a1 + 4375) = a2[1274] > 0;
  if (*((_BYTE *)a2 + 2550))
    v690 = -1;
  else
    v690 = 0;
  *(_BYTE *)(a1 + 3565) = v690;
  *(_BYTE *)(a1 + 4376) = a2[1276] > 0;
  if (*((_BYTE *)a2 + 2554))
    v691 = -1;
  else
    v691 = 0;
  *(_BYTE *)(a1 + 3566) = v691;
  *(_BYTE *)(a1 + 4377) = a2[1278] > 0;
  if (*((_BYTE *)a2 + 2558))
    v692 = -1;
  else
    v692 = 0;
  *(_BYTE *)(a1 + 3567) = v692;
  *(_BYTE *)(a1 + 4378) = a2[1280] > 0;
  if (*((_BYTE *)a2 + 2562))
    v693 = -1;
  else
    v693 = 0;
  *(_BYTE *)(a1 + 3568) = v693;
  *(_BYTE *)(a1 + 4379) = a2[1282] > 0;
  if (*((_BYTE *)a2 + 2566))
    v694 = -1;
  else
    v694 = 0;
  *(_BYTE *)(a1 + 3569) = v694;
  *(_BYTE *)(a1 + 4380) = a2[1284] > 0;
  if (*((_BYTE *)a2 + 2570))
    v695 = -1;
  else
    v695 = 0;
  *(_BYTE *)(a1 + 3570) = v695;
  *(_BYTE *)(a1 + 4381) = a2[1286] > 0;
  if (*((_BYTE *)a2 + 2574))
    v696 = -1;
  else
    v696 = 0;
  *(_BYTE *)(a1 + 3571) = v696;
  *(_BYTE *)(a1 + 4382) = a2[1288] > 0;
  if (*((_BYTE *)a2 + 2578))
    v697 = -1;
  else
    v697 = 0;
  *(_BYTE *)(a1 + 3572) = v697;
  *(_BYTE *)(a1 + 4383) = a2[1290] > 0;
  if (*((_BYTE *)a2 + 2582))
    v698 = -1;
  else
    v698 = 0;
  *(_BYTE *)(a1 + 3573) = v698;
  *(_BYTE *)(a1 + 4384) = a2[1292] > 0;
  if (*((_BYTE *)a2 + 2586))
    v699 = -1;
  else
    v699 = 0;
  *(_BYTE *)(a1 + 3574) = v699;
  *(_BYTE *)(a1 + 4385) = a2[1294] > 0;
  if (*((_BYTE *)a2 + 2590))
    v700 = -1;
  else
    v700 = 0;
  *(_BYTE *)(a1 + 3575) = v700;
  *(_BYTE *)(a1 + 4386) = a2[1296] > 0;
  if (*((_BYTE *)a2 + 2594))
    v701 = -1;
  else
    v701 = 0;
  *(_BYTE *)(a1 + 3576) = v701;
  *(_BYTE *)(a1 + 4387) = a2[1298] > 0;
  if (*((_BYTE *)a2 + 2598))
    v702 = -1;
  else
    v702 = 0;
  *(_BYTE *)(a1 + 3577) = v702;
  *(_BYTE *)(a1 + 4388) = a2[1300] > 0;
  if (*((_BYTE *)a2 + 2602))
    v703 = -1;
  else
    v703 = 0;
  *(_BYTE *)(a1 + 3578) = v703;
  *(_BYTE *)(a1 + 4389) = a2[1302] > 0;
  if (*((_BYTE *)a2 + 2606))
    v704 = -1;
  else
    v704 = 0;
  *(_BYTE *)(a1 + 3579) = v704;
  *(_BYTE *)(a1 + 4390) = a2[1304] > 0;
  if (*((_BYTE *)a2 + 2610))
    v705 = -1;
  else
    v705 = 0;
  *(_BYTE *)(a1 + 3580) = v705;
  *(_BYTE *)(a1 + 4391) = a2[1306] > 0;
  if (*((_BYTE *)a2 + 2614))
    v706 = -1;
  else
    v706 = 0;
  *(_BYTE *)(a1 + 3581) = v706;
  *(_BYTE *)(a1 + 4392) = a2[1308] > 0;
  if (*((_BYTE *)a2 + 2618))
    v707 = -1;
  else
    v707 = 0;
  *(_BYTE *)(a1 + 3582) = v707;
  *(_BYTE *)(a1 + 4393) = a2[1310] > 0;
  if (*((_BYTE *)a2 + 2622))
    v708 = -1;
  else
    v708 = 0;
  *(_BYTE *)(a1 + 3583) = v708;
  *(_BYTE *)(a1 + 4394) = a2[1312] > 0;
  if (*((_BYTE *)a2 + 2626))
    v709 = -1;
  else
    v709 = 0;
  *(_BYTE *)(a1 + 3584) = v709;
  *(_BYTE *)(a1 + 4395) = a2[1314] > 0;
  if (*((_BYTE *)a2 + 2630))
    v710 = -1;
  else
    v710 = 0;
  *(_BYTE *)(a1 + 3585) = v710;
  *(_BYTE *)(a1 + 4396) = a2[1316] > 0;
  if (*((_BYTE *)a2 + 2634))
    v711 = -1;
  else
    v711 = 0;
  *(_BYTE *)(a1 + 3586) = v711;
  *(_BYTE *)(a1 + 4397) = a2[1318] > 0;
  if (*((_BYTE *)a2 + 2638))
    v712 = -1;
  else
    v712 = 0;
  *(_BYTE *)(a1 + 3587) = v712;
  *(_BYTE *)(a1 + 4398) = a2[1320] > 0;
  if (*((_BYTE *)a2 + 2642))
    v713 = -1;
  else
    v713 = 0;
  *(_BYTE *)(a1 + 3588) = v713;
  *(_BYTE *)(a1 + 4399) = a2[1322] > 0;
  if (*((_BYTE *)a2 + 2646))
    v714 = -1;
  else
    v714 = 0;
  *(_BYTE *)(a1 + 3589) = v714;
  *(_BYTE *)(a1 + 4400) = a2[1324] > 0;
  if (*((_BYTE *)a2 + 2650))
    v715 = -1;
  else
    v715 = 0;
  *(_BYTE *)(a1 + 3590) = v715;
  *(_BYTE *)(a1 + 4401) = a2[1326] > 0;
  if (*((_BYTE *)a2 + 2654))
    v716 = -1;
  else
    v716 = 0;
  *(_BYTE *)(a1 + 3591) = v716;
  *(_BYTE *)(a1 + 4402) = a2[1328] > 0;
  if (*((_BYTE *)a2 + 2658))
    v717 = -1;
  else
    v717 = 0;
  *(_BYTE *)(a1 + 3592) = v717;
  *(_BYTE *)(a1 + 4403) = a2[1330] > 0;
  if (*((_BYTE *)a2 + 2662))
    v718 = -1;
  else
    v718 = 0;
  *(_BYTE *)(a1 + 3593) = v718;
  *(_BYTE *)(a1 + 4404) = a2[1332] > 0;
  if (*((_BYTE *)a2 + 2666))
    v719 = -1;
  else
    v719 = 0;
  *(_BYTE *)(a1 + 3594) = v719;
  *(_BYTE *)(a1 + 4405) = a2[1334] > 0;
  if (*((_BYTE *)a2 + 2670))
    v720 = -1;
  else
    v720 = 0;
  *(_BYTE *)(a1 + 3595) = v720;
  *(_BYTE *)(a1 + 4406) = a2[1336] > 0;
  if (*((_BYTE *)a2 + 2674))
    v721 = -1;
  else
    v721 = 0;
  *(_BYTE *)(a1 + 3596) = v721;
  *(_BYTE *)(a1 + 4407) = a2[1338] > 0;
  if (*((_BYTE *)a2 + 2678))
    v722 = -1;
  else
    v722 = 0;
  *(_BYTE *)(a1 + 3597) = v722;
  *(_BYTE *)(a1 + 4408) = a2[1340] > 0;
  if (*((_BYTE *)a2 + 2682))
    v723 = -1;
  else
    v723 = 0;
  *(_BYTE *)(a1 + 3598) = v723;
  *(_BYTE *)(a1 + 4409) = a2[1342] > 0;
  if (*((_BYTE *)a2 + 2686))
    v724 = -1;
  else
    v724 = 0;
  *(_BYTE *)(a1 + 3599) = v724;
  *(_BYTE *)(a1 + 4410) = a2[1344] > 0;
  if (*((_BYTE *)a2 + 2690))
    v725 = -1;
  else
    v725 = 0;
  *(_BYTE *)(a1 + 3600) = v725;
  *(_BYTE *)(a1 + 4411) = a2[1346] > 0;
  if (*((_BYTE *)a2 + 2694))
    v726 = -1;
  else
    v726 = 0;
  *(_BYTE *)(a1 + 3601) = v726;
  *(_BYTE *)(a1 + 4412) = a2[1348] > 0;
  if (*((_BYTE *)a2 + 2698))
    v727 = -1;
  else
    v727 = 0;
  *(_BYTE *)(a1 + 3602) = v727;
  *(_BYTE *)(a1 + 4413) = a2[1350] > 0;
  if (*((_BYTE *)a2 + 2702))
    v728 = -1;
  else
    v728 = 0;
  *(_BYTE *)(a1 + 3603) = v728;
  *(_BYTE *)(a1 + 4414) = a2[1352] > 0;
  if (*((_BYTE *)a2 + 2706))
    v729 = -1;
  else
    v729 = 0;
  *(_BYTE *)(a1 + 3604) = v729;
  *(_BYTE *)(a1 + 4415) = a2[1354] > 0;
  if (*((_BYTE *)a2 + 2710))
    v730 = -1;
  else
    v730 = 0;
  *(_BYTE *)(a1 + 3605) = v730;
  *(_BYTE *)(a1 + 4416) = a2[1356] > 0;
  if (*((_BYTE *)a2 + 2714))
    v731 = -1;
  else
    v731 = 0;
  *(_BYTE *)(a1 + 3606) = v731;
  *(_BYTE *)(a1 + 4417) = a2[1358] > 0;
  if (*((_BYTE *)a2 + 2718))
    v732 = -1;
  else
    v732 = 0;
  *(_BYTE *)(a1 + 3607) = v732;
  *(_BYTE *)(a1 + 4418) = a2[1360] > 0;
  if (*((_BYTE *)a2 + 2722))
    v733 = -1;
  else
    v733 = 0;
  *(_BYTE *)(a1 + 3608) = v733;
  *(_BYTE *)(a1 + 4419) = a2[1362] > 0;
  if (*((_BYTE *)a2 + 2726))
    v734 = -1;
  else
    v734 = 0;
  *(_BYTE *)(a1 + 3609) = v734;
  *(_BYTE *)(a1 + 4420) = a2[1364] > 0;
  if (*((_BYTE *)a2 + 2730))
    v735 = -1;
  else
    v735 = 0;
  *(_BYTE *)(a1 + 3610) = v735;
  *(_BYTE *)(a1 + 4421) = a2[1366] > 0;
  if (*((_BYTE *)a2 + 2734))
    v736 = -1;
  else
    v736 = 0;
  *(_BYTE *)(a1 + 3611) = v736;
  *(_BYTE *)(a1 + 4422) = a2[1368] > 0;
  if (*((_BYTE *)a2 + 2738))
    v737 = -1;
  else
    v737 = 0;
  *(_BYTE *)(a1 + 3612) = v737;
  *(_BYTE *)(a1 + 4423) = a2[1370] > 0;
  if (*((_BYTE *)a2 + 2742))
    v738 = -1;
  else
    v738 = 0;
  *(_BYTE *)(a1 + 3613) = v738;
  *(_BYTE *)(a1 + 4424) = a2[1372] > 0;
  if (*((_BYTE *)a2 + 2746))
    v739 = -1;
  else
    v739 = 0;
  *(_BYTE *)(a1 + 3614) = v739;
  *(_BYTE *)(a1 + 4425) = a2[1374] > 0;
  if (*((_BYTE *)a2 + 2750))
    v740 = -1;
  else
    v740 = 0;
  *(_BYTE *)(a1 + 3615) = v740;
  *(_BYTE *)(a1 + 4426) = a2[1376] > 0;
  if (*((_BYTE *)a2 + 2754))
    v741 = -1;
  else
    v741 = 0;
  *(_BYTE *)(a1 + 3616) = v741;
  *(_BYTE *)(a1 + 4427) = a2[1378] > 0;
  if (*((_BYTE *)a2 + 2758))
    v742 = -1;
  else
    v742 = 0;
  *(_BYTE *)(a1 + 3617) = v742;
  *(_BYTE *)(a1 + 4428) = a2[1380] > 0;
  if (*((_BYTE *)a2 + 2762))
    v743 = -1;
  else
    v743 = 0;
  *(_BYTE *)(a1 + 3618) = v743;
  *(_BYTE *)(a1 + 4429) = a2[1382] > 0;
  if (*((_BYTE *)a2 + 2766))
    v744 = -1;
  else
    v744 = 0;
  *(_BYTE *)(a1 + 3619) = v744;
  *(_BYTE *)(a1 + 4430) = a2[1384] > 0;
  if (*((_BYTE *)a2 + 2770))
    v745 = -1;
  else
    v745 = 0;
  *(_BYTE *)(a1 + 3620) = v745;
  *(_BYTE *)(a1 + 4431) = a2[1386] > 0;
  if (*((_BYTE *)a2 + 2774))
    v746 = -1;
  else
    v746 = 0;
  *(_BYTE *)(a1 + 3621) = v746;
  *(_BYTE *)(a1 + 4432) = a2[1388] > 0;
  if (*((_BYTE *)a2 + 2778))
    v747 = -1;
  else
    v747 = 0;
  *(_BYTE *)(a1 + 3622) = v747;
  *(_BYTE *)(a1 + 4433) = a2[1390] > 0;
  if (*((_BYTE *)a2 + 2782))
    v748 = -1;
  else
    v748 = 0;
  *(_BYTE *)(a1 + 3623) = v748;
  *(_BYTE *)(a1 + 4434) = a2[1392] > 0;
  if (*((_BYTE *)a2 + 2786))
    v749 = -1;
  else
    v749 = 0;
  *(_BYTE *)(a1 + 3624) = v749;
  *(_BYTE *)(a1 + 4435) = a2[1394] > 0;
  if (*((_BYTE *)a2 + 2790))
    v750 = -1;
  else
    v750 = 0;
  *(_BYTE *)(a1 + 3625) = v750;
  *(_BYTE *)(a1 + 4436) = a2[1396] > 0;
  if (*((_BYTE *)a2 + 2794))
    v751 = -1;
  else
    v751 = 0;
  *(_BYTE *)(a1 + 3626) = v751;
  *(_BYTE *)(a1 + 4437) = a2[1398] > 0;
  if (*((_BYTE *)a2 + 2798))
    v752 = -1;
  else
    v752 = 0;
  *(_BYTE *)(a1 + 3627) = v752;
  *(_BYTE *)(a1 + 4438) = a2[1400] > 0;
  if (*((_BYTE *)a2 + 2802))
    v753 = -1;
  else
    v753 = 0;
  *(_BYTE *)(a1 + 3628) = v753;
  *(_BYTE *)(a1 + 4439) = a2[1402] > 0;
  if (*((_BYTE *)a2 + 2806))
    v754 = -1;
  else
    v754 = 0;
  *(_BYTE *)(a1 + 3629) = v754;
  *(_BYTE *)(a1 + 4440) = a2[1404] > 0;
  if (*((_BYTE *)a2 + 2810))
    v755 = -1;
  else
    v755 = 0;
  *(_BYTE *)(a1 + 3630) = v755;
  *(_BYTE *)(a1 + 4441) = a2[1406] > 0;
  if (*((_BYTE *)a2 + 2814))
    v756 = -1;
  else
    v756 = 0;
  *(_BYTE *)(a1 + 3631) = v756;
  *(_BYTE *)(a1 + 4442) = a2[1408] > 0;
  if (*((_BYTE *)a2 + 2818))
    v757 = -1;
  else
    v757 = 0;
  *(_BYTE *)(a1 + 3632) = v757;
  *(_BYTE *)(a1 + 4443) = a2[1410] > 0;
  if (*((_BYTE *)a2 + 2822))
    v758 = -1;
  else
    v758 = 0;
  *(_BYTE *)(a1 + 3633) = v758;
  *(_BYTE *)(a1 + 4444) = a2[1412] > 0;
  if (*((_BYTE *)a2 + 2826))
    v759 = -1;
  else
    v759 = 0;
  *(_BYTE *)(a1 + 3634) = v759;
  *(_BYTE *)(a1 + 4445) = a2[1414] > 0;
  if (*((_BYTE *)a2 + 2830))
    v760 = -1;
  else
    v760 = 0;
  *(_BYTE *)(a1 + 3635) = v760;
  *(_BYTE *)(a1 + 4446) = a2[1416] > 0;
  if (*((_BYTE *)a2 + 2834))
    v761 = -1;
  else
    v761 = 0;
  *(_BYTE *)(a1 + 3636) = v761;
  *(_BYTE *)(a1 + 4447) = a2[1418] > 0;
  if (*((_BYTE *)a2 + 2838))
    v762 = -1;
  else
    v762 = 0;
  *(_BYTE *)(a1 + 3637) = v762;
  *(_BYTE *)(a1 + 4448) = a2[1420] > 0;
  if (*((_BYTE *)a2 + 2842))
    v763 = -1;
  else
    v763 = 0;
  *(_BYTE *)(a1 + 3638) = v763;
  *(_BYTE *)(a1 + 4449) = a2[1422] > 0;
  if (*((_BYTE *)a2 + 2846))
    v764 = -1;
  else
    v764 = 0;
  *(_BYTE *)(a1 + 3639) = v764;
  *(_BYTE *)(a1 + 4450) = a2[1424] > 0;
  if (*((_BYTE *)a2 + 2850))
    v765 = -1;
  else
    v765 = 0;
  *(_BYTE *)(a1 + 3640) = v765;
  *(_BYTE *)(a1 + 4451) = a2[1426] > 0;
  if (*((_BYTE *)a2 + 2854))
    v766 = -1;
  else
    v766 = 0;
  *(_BYTE *)(a1 + 3641) = v766;
  *(_BYTE *)(a1 + 4452) = a2[1428] > 0;
  if (*((_BYTE *)a2 + 2858))
    v767 = -1;
  else
    v767 = 0;
  *(_BYTE *)(a1 + 3642) = v767;
  *(_BYTE *)(a1 + 4453) = a2[1430] > 0;
  if (*((_BYTE *)a2 + 2862))
    v768 = -1;
  else
    v768 = 0;
  *(_BYTE *)(a1 + 3643) = v768;
  *(_BYTE *)(a1 + 4454) = a2[1432] > 0;
  if (*((_BYTE *)a2 + 2866))
    v769 = -1;
  else
    v769 = 0;
  *(_BYTE *)(a1 + 3644) = v769;
  *(_BYTE *)(a1 + 4455) = a2[1434] > 0;
  if (*((_BYTE *)a2 + 2870))
    v770 = -1;
  else
    v770 = 0;
  *(_BYTE *)(a1 + 3645) = v770;
  *(_BYTE *)(a1 + 4456) = a2[1436] > 0;
  if (*((_BYTE *)a2 + 2874))
    v771 = -1;
  else
    v771 = 0;
  *(_BYTE *)(a1 + 3646) = v771;
  *(_BYTE *)(a1 + 4457) = a2[1438] > 0;
  if (*((_BYTE *)a2 + 2878))
    v772 = -1;
  else
    v772 = 0;
  *(_BYTE *)(a1 + 3647) = v772;
  *(_BYTE *)(a1 + 4458) = a2[1440] > 0;
  if (*((_BYTE *)a2 + 2882))
    v773 = -1;
  else
    v773 = 0;
  *(_BYTE *)(a1 + 3648) = v773;
  *(_BYTE *)(a1 + 4459) = a2[1442] > 0;
  if (*((_BYTE *)a2 + 2886))
    v774 = -1;
  else
    v774 = 0;
  *(_BYTE *)(a1 + 3649) = v774;
  *(_BYTE *)(a1 + 4460) = a2[1444] > 0;
  if (*((_BYTE *)a2 + 2890))
    v775 = -1;
  else
    v775 = 0;
  *(_BYTE *)(a1 + 3650) = v775;
  *(_BYTE *)(a1 + 4461) = a2[1446] > 0;
  if (*((_BYTE *)a2 + 2894))
    v776 = -1;
  else
    v776 = 0;
  *(_BYTE *)(a1 + 3651) = v776;
  *(_BYTE *)(a1 + 4462) = a2[1448] > 0;
  if (*((_BYTE *)a2 + 2898))
    v777 = -1;
  else
    v777 = 0;
  *(_BYTE *)(a1 + 3652) = v777;
  *(_BYTE *)(a1 + 4463) = a2[1450] > 0;
  if (*((_BYTE *)a2 + 2902))
    v778 = -1;
  else
    v778 = 0;
  *(_BYTE *)(a1 + 3653) = v778;
  *(_BYTE *)(a1 + 4464) = a2[1452] > 0;
  if (*((_BYTE *)a2 + 2906))
    v779 = -1;
  else
    v779 = 0;
  *(_BYTE *)(a1 + 3654) = v779;
  *(_BYTE *)(a1 + 4465) = a2[1454] > 0;
  if (*((_BYTE *)a2 + 2910))
    v780 = -1;
  else
    v780 = 0;
  *(_BYTE *)(a1 + 3655) = v780;
  *(_BYTE *)(a1 + 4466) = a2[1456] > 0;
  if (*((_BYTE *)a2 + 2914))
    v781 = -1;
  else
    v781 = 0;
  *(_BYTE *)(a1 + 3656) = v781;
  v1026 = 0;
  v1027 = 0;
  v782 = (int32x2_t *)*((_QWORD *)a2 + 365);
  v783 = *(float *)a1;
  *(float32x2_t *)_Q1.f32 = vcvt_f32_s32(*v782);
  v1010 = a1 + 48288;
  v1009 = a1 + 13296;
  v1008 = a1 + 39540;
  v784 = a1 + 54120;
  _Q1.f32[2] = (float)v782[1].i32[0];
  v785 = (_BYTE *)(a1 + 14);
  v786 = vmulq_n_f32(_Q1, v783);
  v787 = 4548;
  do
  {
    v788 = a1 + v52;
    if (*(v785 - 2)
      && *(_BYTE *)(v788 + 2928)
      && *(_BYTE *)(a1 + v52 + 2929)
      && *(unsigned __int8 *)(v788 + 3738) != *(unsigned __int8 *)(a1 + v52 + 3739))
    {
      *(_DWORD *)(v1010 + 4 * v51) = v52;
      _Q2.i64[0] = *(_QWORD *)(a1 + v787);
      _Q2.i32[2] = *(_DWORD *)(a1 + v787 + 8);
      v789 = v1009 + 12 * v51;
      _Q2 = vaddq_f32(v786, _Q2);
      *(_DWORD *)(v789 + 8) = _Q2.i32[2];
      *(_QWORD *)v789 = _Q2.i64[0];
      v790 = a2[v47];
      v791 = &a2[v47 + 2];
      v792 = *v791;
      v793 = (float)(v783 * (float)v790) / (float)(v790 - v792);
      *(float *)v1028 = v793;
      if (*(float *)(a1 + 8) >= v793)
        v794 = (float *)v1028;
      else
        v794 = (float *)(a1 + 8);
      if (v793 < *(float *)(a1 + 4))
        v794 = (float *)(a1 + 4);
      v795 = *v794;
      v6 = a3;
      v796 = _Q2.f32[0] + v795;
      *(float *)v789 = v796;
      if (v790 >= 0)
        LOWORD(v797) = v790;
      else
        v797 = -v790;
      if (v792 >= 0)
        LOWORD(v798) = v792;
      else
        v798 = -v792;
      if ((unsigned __int16)v797 <= (unsigned __int16)v798)
        v791 = &a2[v47];
      LOBYTE(v796) = *((_BYTE *)v791 + 2);
      *(float *)(v1008 + 4 * v51) = (float)LODWORD(v796) * 0.0039216;
      v49 = ++v51;
    }
    if (*(v785 - 1)
      && *(_BYTE *)(v788 + 2928)
      && *(_BYTE *)(a1 + v52 + 2937)
      && *(unsigned __int8 *)(v788 + 3738) != *(unsigned __int8 *)(a1 + v52 + 3747))
    {
      *(_DWORD *)(a1 + 51204 + 4 * v1019) = v52;
      v799 = a1 + 22044 + 12 * v1019;
      _Q2.i64[0] = *(_QWORD *)(a1 + v787);
      _Q2.i32[2] = *(_DWORD *)(a1 + v787 + 8);
      _Q2 = vaddq_f32(v786, _Q2);
      *(_DWORD *)(v799 + 8) = _Q2.i32[2];
      *(_QWORD *)v799 = _Q2.i64[0];
      v800 = a2[v47];
      v801 = a2[v47 + 18];
      v802 = (float)(v783 * (float)v800) / (float)(v800 - v801);
      *(float *)v1028 = v802;
      if (*(float *)(a1 + 8) >= v802)
        v803 = (float *)v1028;
      else
        v803 = (float *)(a1 + 8);
      if (v802 < *(float *)(a1 + 4))
        v803 = (float *)(a1 + 4);
      v804 = *v803;
      v6 = a3;
      _Q2.f32[0] = _Q2.f32[1] + v804;
      *(float *)(v799 + 4) = _Q2.f32[1] + v804;
      if (v800 >= 0)
        LOWORD(v805) = v800;
      else
        v805 = -v800;
      if (v801 >= 0)
        LOWORD(v806) = v801;
      else
        v806 = -v801;
      if ((unsigned __int16)v805 <= (unsigned __int16)v806)
        v807 = (uint64_t)&a2[v47];
      else
        v807 = (uint64_t)&a2[v47 + 18];
      _Q2.i8[0] = *(_BYTE *)(v807 + 2);
      *(float *)(a1 + 42456 + 4 * v1019) = (float)_Q2.u32[0] * 0.0039216;
      v48 = ++v1019;
    }
    if (*v785
      && *(_BYTE *)(v788 + 2928)
      && *(_BYTE *)(a1 + v52 + 3009)
      && *(unsigned __int8 *)(v788 + 3738) != *(unsigned __int8 *)(a1 + v52 + 3819))
    {
      *(_DWORD *)(v784 + 4 * v50) = v52;
      v808 = a1 + 30792 + 12 * v50;
      _Q2.i64[0] = *(_QWORD *)(a1 + v787);
      _Q2.i32[2] = *(_DWORD *)(a1 + v787 + 8);
      _Q2 = vaddq_f32(v786, _Q2);
      *(_DWORD *)(v808 + 8) = _Q2.i32[2];
      *(_QWORD *)v808 = _Q2.i64[0];
      v809 = a2[v47];
      v810 = a2[v47 + 162];
      v811 = (float)(v783 * (float)v809) / (float)(v809 - v810);
      *(float *)v1028 = v811;
      if (*(float *)(a1 + 8) >= v811)
        v812 = (float *)v1028;
      else
        v812 = (float *)(a1 + 8);
      if (v811 < *(float *)(a1 + 4))
        v812 = (float *)(a1 + 4);
      v813 = _Q2.f32[2] + *v812;
      *(float *)(v808 + 8) = v813;
      if (v809 >= 0)
        LOWORD(v814) = v809;
      else
        v814 = -v809;
      if (v810 < 0)
        v810 = -v810;
      if ((unsigned __int16)v814 <= (unsigned __int16)v810)
        v815 = (uint64_t)&a2[v47];
      else
        v815 = (uint64_t)&a2[v47 + 162];
      LOBYTE(v813) = *(_BYTE *)(v815 + 2);
      *(float *)(a1 + 45372 + 4 * v50) = (float)LODWORD(v813) * 0.0039216;
      v1018 = ++v50;
    }
    ++v52;
    v47 += 2;
    v785 += 3;
    v787 += 12;
  }
  while (v47 != 1458);
  v1026 = __PAIR64__(v48, v49);
  v1027 = v1018;
  v816 = v6[2];
  *((_DWORD *)v6 + 2) = -1;
  v6[3] = v816;
  v1012 = v6 + 2;
  v1013 = (char **)(v6 + 5);
  v817 = v6[8];
  v1014 = (void **)(v6 + 8);
  v6[6] = v6[5];
  v6[9] = v817;
  v6[12] = v6[11];
  v6[15] = v6[14];
  v6[21] = v6[20];
  v6[24] = v6[23];
  v818 = v6[29];
  if (v818 < 0x80)
  {
    v819 = v1019;
    if (v818)
    {
      v6[28] = 0;
      v820 = (void *)v6[26];
      memset(v820, 128, v818 + 8);
      *((_BYTE *)v820 + v818) = -1;
      v821 = v6[29];
      v822 = v821 - (v821 >> 3);
      _ZF = v821 == 7;
      v823 = 6;
      if (!_ZF)
        v823 = v822;
      v6[30] = v823 - v6[28];
    }
  }
  else
  {
    operator delete((void *)v6[26]);
    v6[26] = &unk_2245C5160;
    *(_OWORD *)(v6 + 27) = 0u;
    *(_OWORD *)(v6 + 29) = 0u;
    v819 = v1019;
  }
  v824 = v819 + v51 + v50;
  v825 = (char *)v6[5];
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6[7] - (_QWORD)v825) >> 2) < v824)
  {
    v826 = (char *)v6[6];
    v827 = (char *)operator new(12 * v824);
    v828 = &v827[12 * ((v826 - v825) / 12)];
    v829 = v828;
    if (v826 != v825)
    {
      v829 = &v827[12 * ((v826 - v825) / 12)];
      do
      {
        v830 = *(_QWORD *)(v826 - 12);
        v826 -= 12;
        v831 = *((_DWORD *)v826 + 2);
        *(_QWORD *)(v829 - 12) = v830;
        v829 -= 12;
        *((_DWORD *)v829 + 2) = v831;
      }
      while (v826 != v825);
    }
    v6[5] = v829;
    v6[6] = v828;
    v6[7] = &v827[12 * v824];
    if (v825)
      operator delete(v825);
  }
  v832 = (_BYTE *)v6[8];
  if (v824 > (uint64_t)(v6[10] - (_QWORD)v832) >> 2)
  {
    v833 = (_BYTE *)v6[9];
    v834 = (char *)operator new(4 * v824);
    v835 = v833 - v832;
    v836 = &v834[(v833 - v832) & 0xFFFFFFFFFFFFFFFCLL];
    v837 = v836;
    if (v833 == v832)
      goto LABEL_2271;
    if ((unint64_t)(v835 - 4) >= 0x2C)
    {
      v837 = &v834[(v833 - v832) & 0xFFFFFFFFFFFFFFFCLL];
      if (v833 - v834 - (v835 & 0xFFFFFFFFFFFFFFFCLL) >= 0x20)
      {
        v838 = v835 >> 2;
        v839 = ((unint64_t)(v835 - 4) >> 2) + 1;
        v840 = 4 * (v839 & 0x7FFFFFFFFFFFFFF8);
        v841 = &v833[-v840];
        v837 = &v836[-v840];
        v842 = &v834[4 * v838 - 16];
        v843 = (__int128 *)(v833 - 16);
        v844 = v839 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v845 = *v843;
          *((_OWORD *)v842 - 1) = *(v843 - 1);
          *(_OWORD *)v842 = v845;
          v842 -= 32;
          v843 -= 2;
          v844 -= 8;
        }
        while (v844);
        v833 = v841;
        if (v839 == (v839 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_2271:
          v6[8] = v837;
          v6[9] = v836;
          v6[10] = &v834[4 * v824];
          if (v832)
            operator delete(v832);
          goto LABEL_2273;
        }
      }
    }
    else
    {
      v837 = &v834[(v833 - v832) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      v846 = *((_DWORD *)v833 - 1);
      v833 -= 4;
      *((_DWORD *)v837 - 1) = v846;
      v837 -= 4;
    }
    while (v833 != v832);
    goto LABEL_2271;
  }
LABEL_2273:
  v847 = (_BYTE *)v6[20];
  if (v824 > (uint64_t)(v6[22] - (_QWORD)v847) >> 2)
  {
    v848 = (_BYTE *)v6[21];
    v849 = (char *)operator new(4 * v824);
    v850 = v848 - v847;
    v851 = &v849[(v848 - v847) & 0xFFFFFFFFFFFFFFFCLL];
    v852 = v851;
    if (v848 == v847)
      goto LABEL_2282;
    if ((unint64_t)(v850 - 4) >= 0x2C)
    {
      v852 = &v849[(v848 - v847) & 0xFFFFFFFFFFFFFFFCLL];
      if (v848 - v849 - (v850 & 0xFFFFFFFFFFFFFFFCLL) >= 0x20)
      {
        v853 = v850 >> 2;
        v854 = ((unint64_t)(v850 - 4) >> 2) + 1;
        v855 = 4 * (v854 & 0x7FFFFFFFFFFFFFF8);
        v856 = &v848[-v855];
        v852 = &v851[-v855];
        v857 = &v849[4 * v853 - 16];
        v858 = (__int128 *)(v848 - 16);
        v859 = v854 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          v860 = *v858;
          *((_OWORD *)v857 - 1) = *(v858 - 1);
          *(_OWORD *)v857 = v860;
          v857 -= 32;
          v858 -= 2;
          v859 -= 8;
        }
        while (v859);
        v848 = v856;
        if (v854 == (v854 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_2282:
          v6[20] = v852;
          v6[21] = v851;
          v6[22] = &v849[4 * v824];
          if (v847)
            operator delete(v847);
          goto LABEL_2284;
        }
      }
    }
    else
    {
      v852 = &v849[(v848 - v847) & 0xFFFFFFFFFFFFFFFCLL];
    }
    do
    {
      v861 = *((_DWORD *)v848 - 1);
      v848 -= 4;
      *((_DWORD *)v852 - 1) = v861;
      v852 -= 4;
    }
    while (v848 != v847);
    goto LABEL_2282;
  }
LABEL_2284:
  v862 = (3 * v824);
  v863 = (char *)v6[2];
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6[4] - (_QWORD)v863) >> 1) < v862)
  {
    v864 = (char *)v6[3];
    v865 = 6 * v862;
    v866 = (char *)operator new(6 * v862);
    v867 = &v866[6 * ((v864 - v863) / 6)];
    v868 = v867;
    if (v864 != v863)
    {
      v868 = &v866[6 * ((v864 - v863) / 6)];
      do
      {
        v869 = *(_DWORD *)(v864 - 6);
        v864 -= 6;
        v870 = *((_WORD *)v864 + 2);
        *(_DWORD *)(v868 - 6) = v869;
        v868 -= 6;
        *((_WORD *)v868 + 2) = v870;
      }
      while (v864 != v863);
    }
    v6[2] = v868;
    v6[3] = v867;
    v6[4] = &v866[v865];
    if (v863)
      operator delete(v863);
  }
  v871 = 0;
  v1007 = (const char *)a1;
  v1011 = a1 + 57036;
  do
  {
    v1020 = *((_DWORD *)&v1026 + v871);
    if (v1020)
    {
      v872 = 0;
      v873 = v1010 + 2916 * v871;
      v1015 = v1008 + 2916 * v871;
      while (1)
      {
        v875 = (char *)v6[5];
        v876 = (char *)v6[6];
        v877 = (v876 - v875) / 12;
        *(_DWORD *)(v1011 + 2916 * v871 + 4 * *(unsigned int *)(v873 + 4 * (unsigned __int16)v872)) = v877;
        v878 = v1009 + 8748 * v871 + 12 * (unsigned __int16)v872;
        v879 = v6[7];
        if ((unint64_t)v876 >= v879)
        {
          v882 = v877 + 1;
          if ((unint64_t)(v877 + 1) > 0x1555555555555555)
            sub_22316E078();
          v883 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v879 - (_QWORD)v875) >> 2);
          if (2 * v883 > v882)
            v882 = 2 * v883;
          v884 = v883 >= 0xAAAAAAAAAAAAAAALL ? 0x1555555555555555 : v882;
          if (v884)
          {
            if (v884 > 0x1555555555555555)
              goto LABEL_2383;
            v885 = (char *)operator new(12 * v884);
          }
          else
          {
            v885 = 0;
          }
          v886 = &v885[12 * v877];
          *(_QWORD *)v886 = *(_QWORD *)v878;
          *((_DWORD *)v886 + 2) = *(_DWORD *)(v878 + 8);
          v887 = v886;
          if (v876 != v875)
          {
            do
            {
              v888 = *(_QWORD *)(v876 - 12);
              v876 -= 12;
              v889 = *((_DWORD *)v876 + 2);
              *(_QWORD *)(v887 - 12) = v888;
              v887 -= 12;
              *((_DWORD *)v887 + 2) = v889;
            }
            while (v876 != v875);
            v876 = *v1013;
          }
          v881 = v886 + 12;
          v6[5] = v887;
          v6[6] = v886 + 12;
          v6[7] = &v885[12 * v884];
          if (v876)
            operator delete(v876);
        }
        else
        {
          v880 = *(_QWORD *)v878;
          *((_DWORD *)v876 + 2) = *(_DWORD *)(v878 + 8);
          *(_QWORD *)v876 = v880;
          v881 = v876 + 12;
        }
        v6[6] = v881;
        v891 = (char *)v6[9];
        v890 = v6[10];
        if ((unint64_t)v891 >= v890)
        {
          v893 = (char *)*v1014;
          v894 = v891 - (_BYTE *)*v1014;
          v895 = v894 >> 2;
          v896 = (v894 >> 2) + 1;
          if (v896 >> 62)
            sub_22316E078();
          v897 = v890 - (_QWORD)v893;
          if (v897 >> 1 > v896)
            v896 = v897 >> 1;
          v898 = (unint64_t)v897 >= 0x7FFFFFFFFFFFFFFCLL ? 0x3FFFFFFFFFFFFFFFLL : v896;
          if (v898)
          {
            if (v898 >> 62)
              goto LABEL_2383;
            v899 = operator new(4 * v898);
          }
          else
          {
            v899 = 0;
          }
          v900 = &v899[4 * v895];
          *v900 = *(_DWORD *)(v1015 + 4 * (unsigned __int16)v872);
          v892 = v900 + 1;
          if (v891 != v893)
          {
            v901 = v891 - v893 - 4;
            if (v901 < 0x2C)
              goto LABEL_2390;
            if ((unint64_t)(v891 - v899 - v894) < 0x20)
              goto LABEL_2390;
            v902 = (v901 >> 2) + 1;
            v903 = 4 * (v902 & 0x7FFFFFFFFFFFFFF8);
            v904 = &v891[-v903];
            v900 = (_DWORD *)((char *)v900 - v903);
            v905 = &v899[4 * v895 - 16];
            v906 = v891 - 16;
            v907 = v902 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v908 = *(_OWORD *)v906;
              *(v905 - 1) = *((_OWORD *)v906 - 1);
              *v905 = v908;
              v905 -= 2;
              v906 -= 32;
              v907 -= 8;
            }
            while (v907);
            v891 = v904;
            if (v902 != (v902 & 0x7FFFFFFFFFFFFFF8))
            {
LABEL_2390:
              do
              {
                v909 = *((_DWORD *)v891 - 1);
                v891 -= 4;
                *--v900 = v909;
              }
              while (v891 != v893);
            }
          }
          a3[8] = v900;
          a3[9] = v892;
          a3[10] = &v899[4 * v898];
          if (v893)
            operator delete(v893);
        }
        else
        {
          *(_DWORD *)v891 = *(_DWORD *)(v1015 + 4 * (unsigned __int16)v872);
          v892 = v891 + 4;
        }
        a3[9] = v892;
        v6 = a3;
        v911 = (char *)a3[21];
        v910 = a3[22];
        if ((unint64_t)v911 >= v910)
          break;
        *(_WORD *)v911 = *(_DWORD *)(v873 + 4 * (unsigned __int16)v872);
        *((_WORD *)v911 + 1) = v871;
        v874 = v911 + 4;
LABEL_2295:
        a3[21] = v874;
        if (++v872 == v1020)
          goto LABEL_2291;
      }
      v912 = (char *)a3[20];
      v913 = (v911 - v912) >> 2;
      v914 = v913 + 1;
      if ((unint64_t)(v913 + 1) >> 62)
        sub_22316E078();
      v915 = v910 - (_QWORD)v912;
      if (v915 >> 1 > v914)
        v914 = v915 >> 1;
      _CF = (unint64_t)v915 >= 0x7FFFFFFFFFFFFFFCLL;
      v916 = 0x3FFFFFFFFFFFFFFFLL;
      if (!_CF)
        v916 = v914;
      if (v916 >> 62)
LABEL_2383:
        sub_223174E94();
      v917 = 4 * v916;
      v918 = operator new(4 * v916);
      v919 = &v918[4 * v913];
      *v919 = *(_DWORD *)(v873 + 4 * (unsigned __int16)v872);
      v919[1] = v871;
      v920 = v911 - v912;
      if (v911 == v912)
      {
        v922 = &v918[4 * v913];
        goto LABEL_2350;
      }
      v921 = v920 - 4;
      if ((unint64_t)(v920 - 4) >= 0x2C)
      {
        v922 = &v918[4 * v913];
        if ((unint64_t)(v912 - v918) >= 0x20)
        {
          v923 = (v921 >> 2) + 1;
          v924 = 4 * (v923 & 0x7FFFFFFFFFFFFFF8);
          v925 = &v911[-v924];
          v922 = (char *)&v919[v924 / 0xFFFFFFFFFFFFFFFELL];
          v926 = &v918[4 * v913 - 16];
          v927 = v911 - 16;
          v928 = v923 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v929 = *(_OWORD *)v927;
            *(v926 - 1) = *((_OWORD *)v927 - 1);
            *v926 = v929;
            v926 -= 2;
            v927 -= 32;
            v928 -= 8;
          }
          while (v928);
          v911 = v925;
          if (v923 == (v923 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_2350:
            v874 = v919 + 2;
            a3[20] = v922;
            a3[21] = v919 + 2;
            a3[22] = &v918[v917];
            if (v912)
              operator delete(v912);
            goto LABEL_2295;
          }
        }
      }
      else
      {
        v922 = &v918[4 * v913];
      }
      do
      {
        v930 = *((_DWORD *)v911 - 1);
        v911 -= 4;
        *((_DWORD *)v922 - 1) = v930;
        v922 -= 4;
      }
      while (v911 != v912);
      goto LABEL_2350;
    }
LABEL_2291:
    ++v871;
  }
  while (v871 != 3);
  v931 = v1007 + 3738;
  v932 = v1007 + 3747;
  v933 = v1007 + 3819;
  v934 = v1007 + 3828;
  v935 = v1007 + 2928;
  v936 = v1007 + 2937;
  v937 = v1007 + 3009;
  v938 = v1007 + 3018;
  v939 = vld1q_dup_s8(v938);
  v940 = vld1q_dup_s8(v937);
  v941 = vld1q_dup_s8(v936);
  v942 = vld1q_dup_s8(v935);
  v943 = vld1q_dup_s8(v934);
  v944 = vld1q_dup_s8(v933);
  v945 = vld1q_dup_s8(v932);
  v946 = -624;
  v947 = vld1q_dup_s8(v931);
  do
  {
    v948 = v947;
    v949 = v945;
    v950 = v944;
    v951 = v943;
    v952 = v942;
    v953 = v941;
    v954 = v940;
    v955 = v939;
    v947 = *(int8x16_t *)&v1007[v946 + 4363];
    v945 = *(int8x16_t *)&v1007[v946 + 4372];
    v944 = *(int8x16_t *)&v1007[v946 + 4444];
    v943 = *(int8x16_t *)&v1007[v946 + 4453];
    v942 = *(int8x16_t *)&v1007[v946 + 3553];
    v941 = *(int8x16_t *)&v1007[v946 + 3562];
    v956 = (int8x16_t *)&v1007[v946 + 3634];
    v940 = *v956;
    v957 = (int8x16_t *)&v1007[v946 + 3643];
    v939 = *v957;
    *(int8x16_t *)((char *)&v1028[156] + v946) = vandq_s8(vandq_s8(vandq_s8(vandq_s8(vandq_s8(vandq_s8(vextq_s8(v954, *v956, 0xFuLL), vextq_s8(v955, *v957, 0xFuLL)), vandq_s8(vextq_s8(v953, v941, 0xFuLL), vextq_s8(v952, v942, 0xFuLL))), v942), v941), vorrq_s8(vorrq_s8(vorrq_s8(vshlq_n_s8(vextq_s8(v950, v944, 0xFuLL), 4uLL), vshlq_n_s8(vextq_s8(v951, v943, 0xFuLL), 7uLL)), vorrq_s8(vshlq_n_s8(vextq_s8(v949, v945, 0xFuLL), 3uLL),
                                                           vextq_s8(v948, v947, 0xFuLL))),
                                                       vorrq_s8(vorrq_s8(vorrq_s8(vaddq_s8(v947, v947), vshlq_n_s8(v945, 2uLL)), vshlq_n_s8(v944, 5uLL)), vshlq_n_s8(v943, 6uLL)))), vandq_s8(*v956, *v957));
    v946 += 16;
  }
  while (v946);
  v958 = v939.i8[15];
  v959 = v940.i8[15];
  v960 = v941.i8[15];
  v961 = v942.i8[15];
  v962 = v943.i8[15];
  v963 = v944.i8[15];
  v964 = v945.i8[15];
  v965 = v1007 + 3553;
  v966 = v947.i8[15];
  do
  {
    v967 = (char *)v1028 + v946;
    v968 = (16 * v963) | (v962 << 7) | (8 * v964) | v966;
    v966 = v965[v946 + 810];
    v964 = v965[v946 + 819];
    v963 = v965[v946 + 891];
    v969 = v965[v946 + 900];
    v970 = v960 & v961;
    v961 = v965[v946];
    v971 = v965[v946 + 9];
    v972 = v959 & v958;
    v959 = v965[v946 + 81];
    v973 = v965[v946++ + 90];
    v967[624] = v972 & v970 & v961 & v971 & v959 & v973 & (v968 | (2 * v966) | (4 * v964) | (32 * v963) | (v969 << 6));
    v958 = v973;
    v960 = v971;
    v962 = v969;
  }
  while (v946 != 14);
  v974 = 0;
  result = 0x2AAAAAAAAAAAAAAALL;
  v1017 = v1007 + 59952;
  v1016 = v1007 + 62868;
  do
  {
    if (v1007[v974 + 2199])
    {
      v976 = *((unsigned __int8 *)v1028 + v974);
      if (*((_BYTE *)v1028 + v974))
      {
        if ((_DWORD)v976 != 255)
        {
          v977 = word_224657FF8[v976];
          v978 = (_DWORD *)(v1011 + 4 * v974);
          v979 = &v1017[4 * v974];
          v980 = *(_DWORD *)v979;
          v981 = *((_DWORD *)v979 + 1) & ((int)(v977 << 30) >> 31);
          v1023[0] = ((int)(v977 << 31) >> 31) & *v978;
          v1023[1] = v981;
          v982 = 4 * v974 + 36;
          v1023[2] = *(_DWORD *)(v1011 + v982) & ((int)(v977 << 29) >> 31);
          v1023[3] = v980 & ((int)(v977 << 28) >> 31);
          v983 = 4 * v974 + 324;
          LODWORD(v979) = *((_DWORD *)v979 + 82) & ((int)(v977 << 26) >> 31);
          v1023[4] = *(_DWORD *)(v1011 + v983) & ((int)(v977 << 27) >> 31);
          v1023[5] = (_DWORD)v979;
          v984 = (int8x16_t)vdupq_n_s32(v977);
          v985.i32[0] = v978[90];
          v985.i32[1] = *(_DWORD *)&v1017[v983];
          v985.i64[1] = *(_QWORD *)&v1016[4 * v974];
          v1024 = vbicq_s8(v985, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8(v984, (int8x16_t)xmmword_224657FE0)));
          v1025 = vbic_s8((int8x8_t)vrev64_s32(*(int32x2_t *)&v1016[v982]), (int8x8_t)vceqz_s32((int32x2_t)vand_s8(*(int8x8_t *)v984.i8, (int8x8_t)0x80000000400)));
          v986 = dword_2246591F8[v976];
          if (v986)
          {
            v987 = 0;
            v988 = (char *)&unk_2246581F8 + 16 * v976;
            v989 = (_WORD *)v6[3];
            v1021 = dword_2246591F8[v976];
            do
            {
              while (1)
              {
                v990 = &v988[v987];
                v991 = v1023[*v990];
                v992 = v1023[v990[1]];
                v993 = v1023[v988[v987 + 2]];
                v994 = v6[4];
                if ((unint64_t)v989 >= v994)
                  break;
                *v989 = v991;
                v989[1] = v992;
                v989[2] = v993;
                v6[3] = v989 + 3;
                v987 += 3;
                v989 += 3;
                if (v987 >= v986)
                  goto LABEL_2357;
              }
              v995 = (_WORD *)*v1012;
              v996 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v989 - *v1012) >> 1);
              v997 = v996 + 1;
              if (v996 + 1 > 0x2AAAAAAAAAAAAAAALL)
                sub_22316E078();
              v998 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v994 - (_QWORD)v995) >> 1);
              if (2 * v998 > v997)
                v997 = 2 * v998;
              if (v998 >= 0x1555555555555555)
                v999 = 0x2AAAAAAAAAAAAAAALL;
              else
                v999 = v997;
              if (v999)
              {
                if (v999 > 0x2AAAAAAAAAAAAAAALL)
                  goto LABEL_2383;
                v1000 = (char *)operator new(6 * v999);
              }
              else
              {
                v1000 = 0;
              }
              v1001 = &v1000[6 * v996];
              *(_WORD *)v1001 = v991;
              *((_WORD *)v1001 + 1) = v992;
              *((_WORD *)v1001 + 2) = v993;
              v1002 = v1001;
              if (v989 != v995)
              {
                do
                {
                  v1003 = *(_DWORD *)(v989 - 3);
                  v989 -= 3;
                  v1004 = v989[2];
                  *(_DWORD *)(v1002 - 6) = v1003;
                  v1002 -= 6;
                  *((_WORD *)v1002 + 2) = v1004;
                }
                while (v989 != v995);
                v989 = (_WORD *)*v1012;
              }
              v1005 = &v1000[6 * v999];
              v1006 = v1001 + 6;
              v6 = a3;
              a3[2] = v1002;
              a3[3] = v1001 + 6;
              a3[4] = v1005;
              if (v989)
                operator delete(v989);
              result = 0x2AAAAAAAAAAAAAAALL;
              v986 = v1021;
              a3[3] = v1006;
              v987 += 3;
              v989 = v1006;
            }
            while (v987 < v1021);
          }
        }
      }
    }
LABEL_2357:
    ++v974;
  }
  while (v974 != 638);
  return result;
}

void sub_223A2AB48(float *a1, uint64_t a2, uint64_t a3, _QWORD *a4, double a5, float32x4_t a6, double a7, float32x4_t a8, float32x4_t a9, float a10, float a11)
{
  float v14;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  int32x2_t *v22;
  float32x4_t v28;
  char *v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16_t v32;
  unsigned int v33;
  float32x4_t v34;
  unsigned int v35;
  unsigned int v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  char *v49;
  float32x4_t v50;
  float32x4_t v51;
  int8x16_t v52;
  float32x4_t v53;
  _BYTE v54[5];
  uint64_t v55;
  __int32 v56;

  v14 = *a1;
  if (*a1 <= 0.00000011921)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubes.cpp", 178, (uint64_t)"voxel_size_ > std::numeric_limits<float>::epsilon()", 51, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v14 = *a1;
  }
  v16 = (void **)(a4 + 17);
  v17 = (void *)a4[17];
  a4[18] = v17;
  v19 = a4[5];
  v18 = a4[6];
  v20 = 0xAAAAAAAAAAAAAAABLL * ((v18 - v19) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a4[19] - (_QWORD)v17) >> 2) < v20)
  {
    if (v20 > 0x1555555555555555)
LABEL_29:
      sub_22316E078();
    v21 = (char *)operator new(v18 - v19);
    a4[17] = v21;
    a4[18] = v21;
    a4[19] = &v21[4 * ((v18 - v19) >> 2)];
    if (v17)
    {
      operator delete(v17);
      v19 = a4[5];
      v18 = a4[6];
    }
  }
  if (v19 != v18)
  {
    v22 = *(int32x2_t **)(a2 + 2920);
    *(float32x2_t *)a6.f32 = vcvt_f32_s32(*v22);
    a6.f32[2] = (float)v22[1].i32[0];
    __asm { FMOV            V0.4S, #9.0 }
    v52 = _Q0;
    v53 = a6;
    v28 = (float32x4_t)vdupq_n_s32(0x3B808081u);
    v51 = v28;
    do
    {
      v28.i64[0] = *(_QWORD *)v19;
      v28.i32[2] = *(_DWORD *)(v19 + 8);
      v30 = (int8x16_t)vsubq_f32(vmulq_n_f32(v28, 1.0 / v14), v53);
      v31 = vbslq_s8((int8x16_t)vcgtq_f32((float32x4_t)v30, (float32x4_t)v52), v52, v30);
      v32 = vbicq_s8(v31, (int8x16_t)vcltzq_f32((float32x4_t)v31));
      v56 = v32.i32[2];
      v55 = v32.i64[0];
      sub_223A73004(a3, (uint64_t)&v55, 0, v54, (float32x4_t)v52, a8, a9, LODWORD(a10), LODWORD(a11));
      LOBYTE(v33) = v54[0];
      v34.f32[0] = (float)v33;
      LOBYTE(v35) = v54[1];
      LOBYTE(v36) = v54[2];
      v34.f32[1] = (float)v35;
      v34.f32[2] = (float)v36;
      v28 = vmulq_f32(v34, v51);
      v38 = (char *)a4[18];
      v37 = a4[19];
      if ((unint64_t)v38 < v37)
      {
        *((_DWORD *)v38 + 2) = v28.i32[2];
        *(_QWORD *)v38 = v28.i64[0];
        v29 = v38 + 12;
      }
      else
      {
        v39 = (char *)*v16;
        v40 = 0xAAAAAAAAAAAAAAABLL * ((v38 - (_BYTE *)*v16) >> 2);
        v41 = v40 + 1;
        if (v40 + 1 > 0x1555555555555555)
          goto LABEL_29;
        v42 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v37 - (_QWORD)v39) >> 2);
        if (2 * v42 > v41)
          v41 = 2 * v42;
        if (v42 >= 0xAAAAAAAAAAAAAAALL)
          v43 = 0x1555555555555555;
        else
          v43 = v41;
        if (v43)
        {
          v50 = v28;
          if (v43 > 0x1555555555555555)
            sub_223174E94();
          v44 = (char *)operator new(12 * v43);
          v28 = v50;
        }
        else
        {
          v44 = 0;
        }
        v45 = &v44[12 * v40];
        *(_QWORD *)v45 = v28.i64[0];
        *((_DWORD *)v45 + 2) = v28.i32[2];
        v46 = v45;
        if (v38 != v39)
        {
          do
          {
            v47 = *(_QWORD *)(v38 - 12);
            v38 -= 12;
            v48 = *((_DWORD *)v38 + 2);
            *(_QWORD *)(v46 - 12) = v47;
            v46 -= 12;
            *((_DWORD *)v46 + 2) = v48;
          }
          while (v38 != v39);
          v38 = (char *)*v16;
        }
        v49 = &v44[12 * v43];
        v29 = v45 + 12;
        a4[17] = v46;
        a4[18] = v45 + 12;
        a4[19] = v49;
        if (v38)
          operator delete(v38);
      }
      a4[18] = v29;
      v19 += 12;
    }
    while (v19 != v18);
  }
}

uint64_t sub_223A2AE38(uint64_t a1)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v2 = a1 + 17496;
  *(_OWORD *)(a1 + 17608) = 0u;
  *(_OWORD *)(a1 + 17624) = 0u;
  *(_OWORD *)(a1 + 17576) = 0u;
  *(_OWORD *)(a1 + 17592) = 0u;
  *(_OWORD *)(a1 + 17544) = 0u;
  *(_OWORD *)(a1 + 17560) = 0u;
  *(_OWORD *)(a1 + 17512) = 0u;
  *(_OWORD *)(a1 + 17528) = 0u;
  *(_OWORD *)(a1 + 17496) = 0u;
  memset((void *)a1, 255, 0x222CuLL);
  v3 = 0;
  v4 = 0;
  v5 = a1 + 8748;
  do
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (_DWORD *)(v5 + 12 * (v3 + v6));
      *v8 = 0;
      v8[1] = v7;
      v8[2] = v4;
      v9 = (_DWORD *)(v5 + 12 * (v3 + v6 + 1));
      *v9 = 1;
      v9[1] = v7;
      v9[2] = v4;
      v10 = (_DWORD *)(v5 + 12 * (v3 + v6 + 2));
      *v10 = 2;
      v10[1] = v7;
      v10[2] = v4;
      v11 = (_DWORD *)(v5 + 12 * (v3 + v6 + 3));
      *v11 = 3;
      v11[1] = v7;
      v11[2] = v4;
      v12 = (_DWORD *)(v5 + 12 * (v3 + v6 + 4));
      *v12 = 4;
      v12[1] = v7;
      v12[2] = v4;
      v13 = (_DWORD *)(v5 + 12 * (v3 + v6 + 5));
      *v13 = 5;
      v13[1] = v7;
      v13[2] = v4;
      v14 = (_DWORD *)(v5 + 12 * (v3 + v6 + 6));
      *v14 = 6;
      v14[1] = v7;
      v14[2] = v4;
      v15 = (_DWORD *)(v5 + 12 * (v3 + v6 + 7));
      *v15 = 7;
      v15[1] = v7;
      v15[2] = v4;
      v16 = (_DWORD *)(v5 + 12 * (v3 + v6 + 8));
      *v16 = 8;
      v16[1] = v7++;
      v6 += 9;
      v16[2] = v4;
    }
    while (v6 != 81);
    ++v4;
    v3 += 81;
  }
  while (v4 != 9);
  v17 = *(_QWORD *)(a1 + 17496);
  v18 = *(_QWORD *)(a1 + 17504) - v17;
  if (v18 >> 17)
  {
    if (v18 != 0x20000)
      *(_QWORD *)(a1 + 17504) = v17 + 0x20000;
  }
  else
  {
    sub_2237189C8(v2, 0x8000 - (v18 >> 2));
  }
  v19 = *(_QWORD *)(a1 + 17568);
  v20 = *(_QWORD *)(a1 + 17576) - v19;
  if (v20 >> 17)
  {
    if (v20 != 0x20000)
      *(_QWORD *)(a1 + 17576) = v19 + 0x20000;
  }
  else
  {
    sub_2237189C8(a1 + 17568, 0x8000 - (v20 >> 2));
  }
  if (*(_QWORD *)(a1 + 17504) - *(_QWORD *)(a1 + 17496) != 0x20000
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubesMeshMerger.cpp", 42, (uint64_t)"boundary_edge_to_vertex_buffer1_[axis].size() == kAxisDuplicateEdgeIndexSize", 76, (uint64_t)"boundary_edge_to_vertex_buffer1_ resize failed!", 47, (void (*)(void **))sub_22457406C)|| *(_QWORD *)(a1 + 17576) - *(_QWORD *)(a1 + 17568) != 0x20000&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubesMeshMerger.cpp", 44, (uint64_t)"boundary_edge_to_vertex_buffer2_[axis].size() == kAxisDuplicateEdgeIndexSize", 76, (uint64_t)"boundary_edge_to_vertex_buffer2_ resize failed!", 47, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_42;
  }
  v21 = *(_QWORD *)(a1 + 17520);
  v22 = *(_QWORD *)(a1 + 17528) - v21;
  if (v22 >= 0x20000)
  {
    if (v22 != 0x20000)
      *(_QWORD *)(a1 + 17528) = v21 + 0x20000;
  }
  else
  {
    sub_2237189C8(a1 + 17520, 0x8000 - (v22 >> 2));
  }
  v23 = *(_QWORD *)(a1 + 17592);
  v24 = *(_QWORD *)(a1 + 17600) - v23;
  if (v24 >= 0x20000)
  {
    if (v24 != 0x20000)
      *(_QWORD *)(a1 + 17600) = v23 + 0x20000;
  }
  else
  {
    sub_2237189C8(a1 + 17592, 0x8000 - (v24 >> 2));
  }
  if (*(_QWORD *)(a1 + 17528) - *(_QWORD *)(a1 + 17520) != 0x20000
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubesMeshMerger.cpp", 42, (uint64_t)"boundary_edge_to_vertex_buffer1_[axis].size() == kAxisDuplicateEdgeIndexSize", 76, (uint64_t)"boundary_edge_to_vertex_buffer1_ resize failed!", 47, (void (*)(void **))sub_22457406C)|| *(_QWORD *)(a1 + 17600) - *(_QWORD *)(a1 + 17592) != 0x20000&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubesMeshMerger.cpp", 44, (uint64_t)"boundary_edge_to_vertex_buffer2_[axis].size() == kAxisDuplicateEdgeIndexSize", 76, (uint64_t)"boundary_edge_to_vertex_buffer2_ resize failed!", 47, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_42;
  }
  v25 = *(_QWORD *)(a1 + 17544);
  v26 = *(_QWORD *)(a1 + 17552) - v25;
  if (v26 >= 0x20000)
  {
    if (v26 != 0x20000)
      *(_QWORD *)(a1 + 17552) = v25 + 0x20000;
  }
  else
  {
    sub_2237189C8(a1 + 17544, 0x8000 - (v26 >> 2));
  }
  v27 = *(_QWORD *)(a1 + 17616);
  v28 = *(_QWORD *)(a1 + 17624) - v27;
  if (v28 >= 0x20000)
  {
    if (v28 != 0x20000)
      *(_QWORD *)(a1 + 17624) = v27 + 0x20000;
  }
  else
  {
    sub_2237189C8(a1 + 17616, 0x8000 - (v28 >> 2));
  }
  if (*(_QWORD *)(a1 + 17552) - *(_QWORD *)(a1 + 17544) != 0x20000
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubesMeshMerger.cpp", 42, (uint64_t)"boundary_edge_to_vertex_buffer1_[axis].size() == kAxisDuplicateEdgeIndexSize", 76, (uint64_t)"boundary_edge_to_vertex_buffer1_ resize failed!", 47, (void (*)(void **))sub_22457406C)|| *(_QWORD *)(a1 + 17624) - *(_QWORD *)(a1 + 17616) != 0x20000&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/BlockMarchingCubesMeshMerger.cpp", 44, (uint64_t)"boundary_edge_to_vertex_buffer2_[axis].size() == kAxisDuplicateEdgeIndexSize", 76, (uint64_t)"boundary_edge_to_vertex_buffer2_ resize failed!", 47, (void (*)(void **))sub_22457406C))
  {
LABEL_42:
    abort();
  }
  return a1;
}

void sub_223A2B288(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v5 = (void *)v1[2202];
  if (v5)
  {
    v1[2203] = v5;
    operator delete(v5);
    v6 = (void *)v1[2199];
    if (!v6)
    {
LABEL_3:
      v7 = *v3;
      if (!*v3)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else
  {
    v6 = (void *)v1[2199];
    if (!v6)
      goto LABEL_3;
  }
  v1[2200] = v6;
  operator delete(v6);
  v7 = *v3;
  if (!*v3)
  {
LABEL_4:
    v8 = (void *)v1[2193];
    if (!v8)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  v1[2197] = v7;
  operator delete(v7);
  v8 = (void *)v1[2193];
  if (!v8)
  {
LABEL_5:
    v9 = (void *)v1[2190];
    if (!v9)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  v1[2194] = v8;
  operator delete(v8);
  v9 = (void *)v1[2190];
  if (!v9)
  {
LABEL_6:
    v10 = *v2;
    if (!*v2)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  v1[2191] = v9;
  operator delete(v9);
  v10 = *v2;
  if (!*v2)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_13:
  v1[2188] = v10;
  operator delete(v10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223A2B328(_QWORD *a1, _QWORD *a2, char *a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unsigned int v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;
  char v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a3;
  *(_QWORD *)(a4 + 8) = *(_QWORD *)a4;
  v7 = a4 + 32;
  *(_QWORD *)(a4 + 40) = *(_QWORD *)(a4 + 32);
  *(_QWORD *)(a4 + 80) = *(_QWORD *)(a4 + 72);
  v22 = a4 + 112;
  *(_QWORD *)(a4 + 120) = *(_QWORD *)(a4 + 112);
  *(_QWORD *)(a4 + 152) = *(_QWORD *)(a4 + 144);
  *(_QWORD *)(a4 + 184) = *(_QWORD *)(a4 + 176);
  *(_QWORD *)(a4 + 216) = *(_QWORD *)(a4 + 208);
  v21 = a4 + 240;
  *(_QWORD *)(a4 + 248) = *(_QWORD *)(a4 + 240);
  *(_QWORD *)(a4 + 288) = *(_QWORD *)(a4 + 280);
  *(_QWORD *)(a4 + 328) = *(_QWORD *)(a4 + 320);
  if (*(_BYTE *)(a4 + 380))
    *(_BYTE *)(a4 + 380) = 0;
  v8 = a1 + 1;
  v9 = (_QWORD *)*a1;
  if ((_QWORD *)*a1 == a1 + 1)
  {
    v11 = 0;
    v10 = 0;
  }
  else
  {
    v20 = a4 + 32;
    v10 = 0;
    LODWORD(v11) = 0;
    do
    {
      v13 = *((unsigned int *)v9 + 7);
      if (a2[11] <= v13
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 647, (uint64_t)"idx_block < metadata_blocks_.size()", 35, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C)|| *(_BYTE *)(*(_QWORD *)(a2[7] + 8 * ((a2[10] + v13) / 0x1F)) + 132 * ((a2[10] + v13) % 0x1F) + 20)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 648, (uint64_t)"!metadata_blocks_[idx_block].IsErased()", 39, (uint64_t)"The block is erased", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v14 = (_QWORD *)v9[1];
      if (v14)
      {
        do
        {
          v15 = v14;
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
      else
      {
        do
        {
          v15 = (_QWORD *)v9[2];
          v16 = *v15 == (_QWORD)v9;
          v9 = v15;
        }
        while (!v16);
      }
      v12 = (_QWORD *)(*(_QWORD *)(a2[24] + (((a2[27] + v13) >> 1) & 0x7FFFFFFFFFFFFFF8))
                     + 248 * ((*((_DWORD *)a2 + 54) + (_DWORD)v13) & 0xF));
      v10 -= 1431655765 * ((v12[6] - v12[5]) >> 2);
      v11 = v11 - 1431655765 * ((v12[3] - v12[2]) >> 1);
      v9 = v15;
    }
    while (v15 != v8);
    v5 = a3;
    v7 = v20;
  }
  sub_22339E3C8(a4, v10);
  sub_22339E528(v22, v11);
  sub_223674C80(a4 + 320, v10);
  *(_DWORD *)(a4 + 352) = 1;
  v17 = *v5;
  if ((*v5 & 1) == 0)
  {
    if ((*v5 & 0x10) == 0)
      goto LABEL_20;
LABEL_24:
    sub_223674E10(a4 + 280, v11);
    *(_DWORD *)(a4 + 312) = 2;
    if ((*v5 & 4) == 0)
      return v10;
    goto LABEL_21;
  }
  sub_223674E10(v21, v11);
  *(_DWORD *)(a4 + 272) = 2;
  v17 = *v5;
  if ((*v5 & 0x10) != 0)
    goto LABEL_24;
LABEL_20:
  if ((v17 & 4) != 0)
  {
LABEL_21:
    sub_22339E3C8(v7, v10);
    *(_DWORD *)(a4 + 64) = 1;
  }
  return v10;
}

uint64_t sub_223A2B5F8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t i;
  uint64_t v46;
  _QWORD **v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD **v51;
  int v52;
  _QWORD *v53;

  v5 = (_QWORD **)*a1;
  v6 = (a2 - *a1) / 12;
  v7 = *a1 + 12 * v6;
  if (a5 < 1)
    return v7;
  v9 = a3;
  v12 = a1[1];
  v11 = a1[2];
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 2)) >= a5)
  {
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - v7) >> 2)) >= a5)
    {
      v20 = (uint64_t *)((char *)a3 + 12 * a5);
      v21 = a1[1];
    }
    else
    {
      v20 = (uint64_t *)((char *)a3 + 4 * ((uint64_t)(v12 - v7) >> 2));
      v21 = a1[1];
      if (v20 != a4)
      {
        v22 = (uint64_t *)((char *)a3 + 4 * ((uint64_t)(v12 - v7) >> 2));
        v23 = a1[1];
        do
        {
          v24 = *v22;
          *(_DWORD *)(v23 + 8) = *((_DWORD *)v22 + 2);
          *(_QWORD *)v23 = v24;
          v23 += 12;
          v22 = (uint64_t *)((char *)v22 + 12);
          v21 += 12;
        }
        while (v22 != a4);
      }
      a1[1] = v21;
      if ((uint64_t)(v12 - v7) < 1)
        return v7;
    }
    v25 = v7 + 12 * a5;
    v26 = (uint64_t *)(v21 - 12 * a5);
    v27 = v21;
    if ((unint64_t)v26 < v12)
    {
      v27 = v21;
      do
      {
        v28 = *v26;
        *(_DWORD *)(v27 + 8) = *((_DWORD *)v26 + 2);
        *(_QWORD *)v27 = v28;
        v27 += 12;
        v26 = (uint64_t *)((char *)v26 + 12);
      }
      while ((unint64_t)v26 < v12);
    }
    a1[1] = v27;
    if (v21 != v25)
    {
      v29 = v21 - 12;
      v30 = 4 * ((v21 - v25) >> 2);
      v31 = (uint64_t)v5 + 12 * v6 - 12;
      do
      {
        v32 = *(_QWORD *)(v31 + v30);
        *(_DWORD *)(v29 + 8) = *(_DWORD *)(v31 + v30 + 8);
        *(_QWORD *)v29 = v32;
        v29 -= 12;
        v30 -= 12;
      }
      while (v30);
    }
    if (v20 != a3)
    {
      v33 = v7;
      do
      {
        v34 = *v9;
        *(_DWORD *)(v33 + 8) = *((_DWORD *)v9 + 2);
        *(_QWORD *)v33 = v34;
        v33 += 12;
        v9 = (uint64_t *)((char *)v9 + 12);
      }
      while (v9 != v20);
    }
    return v7;
  }
  v13 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - (_QWORD)v5) >> 2);
  if (v13 > 0x1555555555555555)
    sub_22316E078();
  v14 = 0xAAAAAAAAAAAAAAABLL * ((v11 - (uint64_t)v5) >> 2);
  v15 = 2 * v14;
  if (2 * v14 <= v13)
    v15 = v13;
  if (v14 >= 0xAAAAAAAAAAAAAAALL)
    v16 = 0x1555555555555555;
  else
    v16 = v15;
  if (v16)
  {
    LODWORD(v53) = v16;
    v17 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v17 == -1)
      sub_22316DD70();
    v51 = &v53;
    v18 = ((uint64_t (*)(_QWORD ***, uint64_t *))off_24EC5D788[v17])(&v51, a1 + 3);
  }
  else
  {
    v18 = 0;
    v19 = 0;
  }
  v35 = v18 + 12 * v6;
  v36 = 12 * a5;
  v37 = v35 + 12 * a5;
  v38 = v35;
  do
  {
    v39 = *v9;
    *(_DWORD *)(v38 + 8) = *((_DWORD *)v9 + 2);
    *(_QWORD *)v38 = v39;
    v38 += 12;
    v9 = (uint64_t *)((char *)v9 + 12);
    v36 -= 12;
  }
  while (v36);
  v40 = (_QWORD **)*a1;
  v41 = v35;
  if (*a1 != v7)
  {
    v42 = v7;
    v41 = v35;
    do
    {
      v43 = *(_QWORD *)(v42 - 12);
      v42 -= 12;
      v44 = *(_DWORD *)(v42 + 8);
      *(_QWORD *)(v41 - 12) = v43;
      v41 -= 12;
      *(_DWORD *)(v41 + 8) = v44;
    }
    while ((_QWORD **)v42 != v40);
  }
  for (i = a1[1]; v7 != i; v7 += 12)
  {
    v46 = *(_QWORD *)v7;
    *(_DWORD *)(v37 + 8) = *(_DWORD *)(v7 + 8);
    *(_QWORD *)v37 = v46;
    v37 += 12;
  }
  v47 = (_QWORD **)*a1;
  *a1 = v41;
  a1[1] = v37;
  v48 = a1[2];
  a1[2] = v18 + 12 * v19;
  if (v47)
  {
    v51 = v47;
    v52 = -1431655765 * ((unint64_t)(v48 - (_QWORD)v47) >> 2);
    v49 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v49 == -1)
      sub_22316DD70();
    v53 = &v51;
    ((void (*)(_QWORD **, uint64_t *))off_24EC5D798[v49])(&v53, a1 + 3);
  }
  return v35;
}

char *sub_223A2B950(uint64_t a1, uint64_t a2, char *__src, char *a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int64_t v24;
  char *v25;
  char *v26;
  char *v27;
  size_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  _OWORD *v42;
  uint64_t v43;
  __int128 v44;
  int v45;
  char *v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 *v55;
  uint64_t v56;
  __int128 v57;
  int v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _QWORD **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  __int128 *v68;
  uint64_t v69;
  __int128 v70;
  int v71;
  uint64_t v73;
  _QWORD **v74;
  int v75;
  _QWORD *v76;

  v5 = *(_QWORD *)a1;
  v6 = a2 - *(_QWORD *)a1;
  v7 = (char *)(*(_QWORD *)a1 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
  v8 = a5 - 1;
  if (a5 < 1)
    return v7;
  v12 = v6 >> 2;
  v14 = *(char **)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  if (a5 > (v13 - (uint64_t)v14) >> 2)
  {
    v15 = a5 + ((uint64_t)&v14[-v5] >> 2);
    if (v15 >> 62)
      sub_22316E078();
    v16 = v13 - v5;
    if (v16 >> 1 > v15)
      v15 = v16 >> 1;
    v17 = (unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL;
    v18 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v17)
      v18 = v15;
    v73 = a1 + 24;
    if (v18)
    {
      LODWORD(v76) = v18;
      v19 = *(unsigned int *)(a1 + 28);
      if ((_DWORD)v19 == -1)
        sub_22316DD70();
      v74 = &v76;
      v20 = ((uint64_t (*)(_QWORD ***, uint64_t))off_24EC5D7A8[v19])(&v74, a1 + 24);
    }
    else
    {
      v20 = 0;
      v21 = 0;
    }
    v35 = (char *)(v20 + 4 * v12);
    v36 = &v35[4 * a5];
    v37 = v35;
    v38 = __src;
    if ((v8 & 0x3FFFFFFFFFFFFFFFuLL) < 7)
      goto LABEL_57;
    v37 = (char *)(v20 + 4 * v12);
    v38 = __src;
    if ((v6 & 0xFFFFFFFFFFFFFFFCLL) + v20 - (unint64_t)__src < 0x20)
      goto LABEL_57;
    v39 = (v8 & 0x3FFFFFFFFFFFFFFFLL) + 1;
    v40 = 4 * (v39 & 0x7FFFFFFFFFFFFFF8);
    v37 = &v35[v40];
    v38 = &__src[v40];
    v41 = (__int128 *)(__src + 16);
    v42 = (_OWORD *)(v20 + 4 * v12 + 16);
    v43 = v39 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v44 = *v41;
      *(v42 - 1) = *(v41 - 1);
      *v42 = v44;
      v41 += 2;
      v42 += 2;
      v43 -= 8;
    }
    while (v43);
    if (v39 != (v39 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_57:
      do
      {
        v45 = *(_DWORD *)v38;
        v38 += 4;
        *(_DWORD *)v37 = v45;
        v37 += 4;
      }
      while (v37 != v36);
    }
    v46 = *(char **)a1;
    v47 = v20 + 4 * v12;
    if (*(char **)a1 != v7)
    {
      v48 = (char *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + v5);
      v49 = v48 - v46 - 4;
      v50 = v7;
      v47 = v20 + 4 * v12;
      if (v49 < 0x3C)
        goto LABEL_58;
      v50 = v7;
      v47 = v20 + 4 * v12;
      if ((unint64_t)&v48[-(v6 & 0xFFFFFFFFFFFFFFFCLL) - v20] < 0x20)
        goto LABEL_58;
      v51 = (v49 >> 2) + 1;
      v52 = 4 * (v51 & 0x7FFFFFFFFFFFFFF8);
      v50 = &v7[-v52];
      v47 = (uint64_t)&v35[-v52];
      v53 = 4 * v12 - 16;
      v54 = (_OWORD *)(v20 + v53);
      v55 = (__int128 *)(v5 + v53);
      v56 = v51 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v57 = *v55;
        *(v54 - 1) = *(v55 - 1);
        *v54 = v57;
        v54 -= 2;
        v55 -= 2;
        v56 -= 8;
      }
      while (v56);
      if (v51 != (v51 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_58:
        do
        {
          v58 = *((_DWORD *)v50 - 1);
          v50 -= 4;
          *(_DWORD *)(v47 - 4) = v58;
          v47 -= 4;
        }
        while (v50 != v46);
      }
    }
    v59 = v20 + 4 * v21;
    v60 = *(_BYTE **)(a1 + 8);
    v61 = v60 - v7;
    if (v60 != v7)
      memmove(v36, v7, v60 - v7);
    v62 = *(_QWORD ***)a1;
    *(_QWORD *)a1 = v47;
    *(_QWORD *)(a1 + 8) = &v36[v61];
    v63 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v59;
    if (v62)
    {
      v74 = v62;
      v75 = (unint64_t)(v63 - (_QWORD)v62) >> 2;
      v64 = *(unsigned int *)(a1 + 28);
      if ((_DWORD)v64 == -1)
        sub_22316DD70();
      v76 = &v74;
      ((void (*)(_QWORD **, uint64_t))off_24EC5D7B8[v64])(&v76, v73);
    }
    return v35;
  }
  v22 = (v14 - v7) >> 2;
  if (v22 >= a5)
  {
    v26 = &__src[4 * a5];
    v25 = *(char **)(a1 + 8);
LABEL_17:
    v27 = &v7[4 * a5];
    v28 = v25 - v27;
    v29 = (v25 - v27) >> 2;
    v30 = &v25[-4 * a5];
    v31 = v25;
    if (v30 < v14)
    {
      v32 = (v6 & 0xFFFFFFFFFFFFFFFCLL) + v28;
      v33 = v32 + v5 + 4;
      if ((unint64_t)v14 > v33)
        v33 = (unint64_t)v14;
      v34 = v33 + ~v5 - v32;
      if (v34 >= 0x2C)
      {
        v31 = v25;
        if ((unint64_t)&v27[-(v6 & 0xFFFFFFFFFFFFFFFCLL) - v5] >= 0x20)
        {
          v65 = (v34 >> 2) + 1;
          v66 = 4 * (v65 & 0x7FFFFFFFFFFFFFF8);
          v30 += v66;
          v31 = &v25[v66];
          v67 = v25 + 16;
          v68 = (__int128 *)(4 * v29 + 4 * (v6 >> 2) + v5 + 16);
          v69 = v65 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            v70 = *v68;
            *(v67 - 1) = *(v68 - 1);
            *v67 = v70;
            v67 += 2;
            v68 += 2;
            v69 -= 8;
          }
          while (v69);
          if (v65 == (v65 & 0x7FFFFFFFFFFFFFF8))
            goto LABEL_47;
        }
      }
      else
      {
        v31 = v25;
      }
      do
      {
        v71 = *(_DWORD *)v30;
        v30 += 4;
        *(_DWORD *)v31 = v71;
        v31 += 4;
      }
      while (v30 < v14);
    }
LABEL_47:
    *(_QWORD *)(a1 + 8) = v31;
    if (v25 != v27)
      memmove(&v25[-4 * v29], v7, v28);
    if (v26 != __src)
      memmove(v7, __src, v26 - __src);
    return v7;
  }
  v23 = &__src[4 * v22];
  v24 = a4 - v23;
  if (a4 != v23)
    memmove(v14, &__src[4 * v22], a4 - v23);
  v25 = &v14[v24];
  *(_QWORD *)(a1 + 8) = &v14[v24];
  if (v14 - v7 >= 1)
  {
    v26 = v23;
    goto LABEL_17;
  }
  return v7;
}

char *sub_223A2BD50(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  char *v5;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  unint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _OWORD *v33;
  __int128 *v34;
  unint64_t v35;
  __int128 v36;
  char v37;
  __int128 *v38;
  char *v39;
  unint64_t v40;
  __int128 v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  char *v48;
  int64_t v49;
  char *v50;
  char *v51;
  char *v52;
  unint64_t v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  char *v57;
  int64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v63;
  int v64;
  char **v65;

  v5 = __dst;
  if (a5 < 1)
    return v5;
  v10 = *(char **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    v11 = *(char **)a1;
    v12 = (uint64_t)&v10[a5 - *(_QWORD *)a1];
    if (v12 < 0)
      sub_22316E078();
    v13 = v9 - (_QWORD)v11;
    if (2 * v13 > v12)
      v12 = 2 * v13;
    v14 = v13 >= 0x3FFFFFFFFFFFFFFFLL;
    v15 = 0x7FFFFFFFFFFFFFFFLL;
    if (!v14)
      v15 = v12;
    if (v15)
    {
      LODWORD(v65) = v15;
      v16 = *(unsigned int *)(a1 + 28);
      if ((_DWORD)v16 == -1)
        sub_22316DD70();
      v63 = (char *)&v65;
      v17 = ((uint64_t (*)(char **, uint64_t))off_24EC5D7C8[v16])(&v63, a1 + 24);
    }
    else
    {
      v17 = 0;
      v18 = 0;
    }
    v27 = (char *)(v17 + v5 - v11);
    v28 = &v27[a5];
    v29 = v27;
    v30 = __src;
    if ((unint64_t)a5 >= 8)
    {
      v29 = (char *)(v17 + v5 - v11);
      v30 = __src;
      if ((unint64_t)(&v5[v17] - __src - (_QWORD)v11) >= 0x20)
      {
        if ((unint64_t)a5 < 0x20)
        {
          v31 = 0;
          goto LABEL_38;
        }
        v31 = a5 & 0x7FFFFFFFFFFFFFE0;
        v38 = (__int128 *)(__src + 16);
        v39 = (char *)(v5 - v11 + v17 + 16);
        v40 = a5 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v41 = *v38;
          *((_OWORD *)v39 - 1) = *(v38 - 1);
          *(_OWORD *)v39 = v41;
          v38 += 2;
          v39 += 32;
          v40 -= 32;
        }
        while (v40);
        if (v31 == a5)
          goto LABEL_44;
        if ((a5 & 0x18) != 0)
        {
LABEL_38:
          v29 = &v27[a5 & 0xFFFFFFFFFFFFFFF8];
          v30 = &__src[a5 & 0xFFFFFFFFFFFFFFF8];
          v42 = &__src[v31];
          v43 = (char *)(v17 + &v5[v31] - v11);
          v44 = v31 - (a5 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            v45 = *(_QWORD *)v42;
            v42 += 8;
            *(_QWORD *)v43 = v45;
            v43 += 8;
            v44 += 8;
          }
          while (v44);
          if ((a5 & 0x7FFFFFFFFFFFFFF8) == a5)
            goto LABEL_44;
          goto LABEL_43;
        }
        v30 = &__src[v31];
        v29 = &v27[v31];
      }
    }
    do
    {
LABEL_43:
      v46 = *v30++;
      *v29++ = v46;
    }
    while (v29 != v28);
LABEL_44:
    v47 = *(char **)a1;
    v48 = (char *)(v17 + v5 - v11);
    if (*(char **)a1 != v5)
    {
      v49 = v5 - v47;
      v50 = v5;
      v48 = (char *)(v17 + v5 - v11);
      if ((unint64_t)(v5 - v47) < 0x20)
        goto LABEL_63;
      v50 = v5;
      v48 = (char *)(v17 + v5 - v11);
      if ((unint64_t)&v11[-v17] < 0x20)
        goto LABEL_63;
      v50 = &v5[-(v49 & 0xFFFFFFFFFFFFFFE0)];
      v48 = &v27[-(v49 & 0xFFFFFFFFFFFFFFE0)];
      v51 = v5 - 16;
      v52 = (char *)(v17 + v5 - 16 - v11);
      v53 = v49 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v54 = *(_OWORD *)v51;
        *((_OWORD *)v52 - 1) = *((_OWORD *)v51 - 1);
        *(_OWORD *)v52 = v54;
        v52 -= 32;
        v51 -= 32;
        v53 -= 32;
      }
      while (v53);
      if (v49 != (v49 & 0xFFFFFFFFFFFFFFE0))
      {
LABEL_63:
        do
        {
          v55 = *--v50;
          *--v48 = v55;
        }
        while (v50 != v47);
      }
    }
    v56 = v17 + v18;
    v57 = *(char **)(a1 + 8);
    v58 = v57 - v5;
    if (v57 != v5)
      memmove(v28, v5, v57 - v5);
    v59 = *(char **)a1;
    *(_QWORD *)a1 = v48;
    *(_QWORD *)(a1 + 8) = &v28[v58];
    v60 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v56;
    if (v59)
    {
      v63 = v59;
      v64 = v60 - (_DWORD)v59;
      v61 = *(unsigned int *)(a1 + 28);
      if ((_DWORD)v61 == -1)
        sub_22316DD70();
      v65 = &v63;
      ((void (*)(char ***, uint64_t))off_24EC5D7D8[v61])(&v65, a1 + 24);
    }
    return v27;
  }
  v19 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    v20 = &__src[a5];
    v22 = *(char **)(a1 + 8);
    v23 = &__dst[a5];
    v24 = &v10[-a5];
    v25 = v22;
    if ((unint64_t)v10 < a5)
      goto LABEL_30;
    goto LABEL_18;
  }
  v20 = &__src[v19];
  v21 = a4 - &__src[v19];
  if (a4 != &__src[v19])
    memmove(*(void **)(a1 + 8), &__src[v19], a4 - &__src[v19]);
  v22 = &v10[v21];
  *(_QWORD *)(a1 + 8) = &v10[v21];
  if (v19 >= 1)
  {
    v23 = &v5[a5];
    v24 = &v22[-a5];
    v25 = &v10[v21];
    if (&v22[-a5] >= v10)
      goto LABEL_30;
LABEL_18:
    v26 = &v10[a5] - v22;
    if (v26 >= 0x20)
    {
      v25 = v22;
      if ((unint64_t)a5 >= 0x20)
      {
        v32 = &v24[v26 & 0xFFFFFFFFFFFFFFE0];
        v25 = &v22[v26 & 0xFFFFFFFFFFFFFFE0];
        v33 = v22 + 16;
        v34 = (__int128 *)(v24 + 16);
        v35 = v26 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v36 = *v34;
          *(v33 - 1) = *(v34 - 1);
          *v33 = v36;
          v33 += 2;
          v34 += 2;
          v35 -= 32;
        }
        while (v35);
        v24 = v32;
        if (v26 == (v26 & 0xFFFFFFFFFFFFFFE0))
          goto LABEL_30;
      }
    }
    else
    {
      v25 = v22;
    }
    do
    {
      v37 = *v24++;
      *v25++ = v37;
    }
    while (v24 != v10);
LABEL_30:
    *(_QWORD *)(a1 + 8) = v25;
    if (v22 != v23)
      memmove(v23, v5, v22 - v23);
    if (v20 != __src)
      memmove(v5, __src, v20 - __src);
  }
  return v5;
}

unint64_t sub_223A2C130(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  uint64_t v10;

  v4 = *a1;
  v5 = a1[3];
  v6 = v5 & ((a2 >> 7) ^ 0x13701D);
  v7 = *(_QWORD *)(*a1 + v6) & (~*(_QWORD *)(*a1 + v6) << 7) & 0x8080808080808080;
  if (!v7)
  {
    v8 = 8;
    do
    {
      v6 = (v6 + v8) & v5;
      v8 += 8;
      v7 = *(_QWORD *)(v4 + v6) & (~*(_QWORD *)(v4 + v6) << 7) & 0x8080808080808080;
    }
    while (!v7);
  }
  result = (v6 + (__clz(__rbit64(v7)) >> 3)) & v5;
  v10 = a1[4];
  if (!v10)
  {
    if (*(unsigned __int8 *)(v4 + result) == 254)
    {
      v10 = 0;
    }
    else
    {
      sub_223A2C228((uint64_t)a1);
      result = sub_22322944C(*a1, a2, a1[3]);
      v4 = *a1;
      v5 = a1[3];
      v10 = a1[4];
    }
  }
  ++a1[2];
  a1[4] = v10 - (*(unsigned __int8 *)(v4 + result) == 128);
  *(_BYTE *)(v4 + result) = a2 & 0x7F;
  *(_BYTE *)(v4 + ((result - 7) & v5) + (v5 & 7)) = a2 & 0x7F;
  return result;
}

void sub_223A2C228(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 24);
  if (!v1)
  {
    v2 = 1;
    goto LABEL_5;
  }
  if (v1 < 9 || 25 * v1 < 32 * *(_QWORD *)(a1 + 16))
  {
    v2 = (2 * v1) | 1;
LABEL_5:
    sub_223A2C264((char **)a1, (char *)v2);
    return;
  }
  sub_223A2C3F0((unint64_t *)a1);
}

void sub_223A2C264(char **a1, char *a2)
{
  char *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  char *i;
  unint64_t v11;
  char v12;
  char *v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[3];
  a1[3] = a2;
  v7 = (unint64_t)(a2 + 11) & 0xFFFFFFFFFFFFFFFCLL;
  v8 = (char *)operator new((unint64_t)&a2[8 * (_QWORD)a2 + 11] & 0xFFFFFFFFFFFFFFFCLL);
  *a1 = v8;
  a1[1] = &v8[v7];
  memset(v8, 128, (size_t)(a2 + 8));
  a2[(_QWORD)v8] = -1;
  v9 = (uint64_t)&a2[-((unint64_t)a2 >> 3)];
  if (a2 == (char *)7)
    v9 = 6;
  a1[4] = (char *)(v9 - (_QWORD)a1[2]);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((i[(_QWORD)v4] & 0x80000000) == 0)
      {
        v13 = &v5[8 * (_QWORD)i];
        v14 = (0x376ADF16980614E5 - 0x622015F714C7D297 * *(unsigned int *)v13) ^ ((0x376ADF16980614E5
                                                                                     - 0x622015F714C7D297
                                                                                     * (unint64_t)*(unsigned int *)v13) >> 32);
        v15 = *a1;
        v16 = a1[3];
        v17 = ((v14 >> 7) ^ 0x13701D) & (unint64_t)v16;
        v18 = *(_QWORD *)&(*a1)[v17] & (~*(_QWORD *)&(*a1)[v17] << 7) & 0x8080808080808080;
        if (!v18)
        {
          v19 = 8;
          do
          {
            v17 = (v17 + v19) & (unint64_t)v16;
            v19 += 8;
            v18 = *(_QWORD *)&v15[v17] & (~*(_QWORD *)&v15[v17] << 7) & 0x8080808080808080;
          }
          while (!v18);
        }
        v11 = (v17 + (__clz(__rbit64(v18)) >> 3)) & (unint64_t)v16;
        v12 = v14 & 0x7F;
        v15[v11] = v12;
        v15[((v11 - 7) & (unint64_t)v16) + (v16 & 7)] = v12;
        *(_QWORD *)&a1[1][8 * v11] = *(_QWORD *)v13;
      }
    }
    operator delete(v4);
  }
}

unint64_t sub_223A2C3F0(unint64_t *a1)
{
  unint64_t result;
  unint64_t v3;
  uint64_t i;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_2232294A8(*a1, a1[3]);
  v3 = a1[3];
  if (v3)
  {
    for (i = 0; i != v3; ++i)
    {
      v7 = *a1;
      if (*(unsigned __int8 *)(*a1 + i) == 254)
      {
        v8 = a1[1];
        v9 = 0x376ADF16980614E5 - 0x622015F714C7D297 * *(unsigned int *)(v8 + 8 * i);
        v10 = v9 ^ HIDWORD(v9);
        v11 = ((v10 >> 7) ^ 0x13701D) & v3;
        v12 = *(_QWORD *)(v7 + v11) & (~*(_QWORD *)(v7 + v11) << 7) & 0x8080808080808080;
        if (v12)
        {
          v5 = ((v10 >> 7) ^ 0x13701D) & v3;
        }
        else
        {
          v13 = 8;
          v5 = ((v10 >> 7) ^ 0x13701D) & v3;
          do
          {
            v5 = (v5 + v13) & v3;
            v13 += 8;
            v12 = *(_QWORD *)(v7 + v5) & (~*(_QWORD *)(v7 + v5) << 7) & 0x8080808080808080;
          }
          while (!v12);
        }
        v6 = (v5 + (__clz(__rbit64(v12)) >> 3)) & v3;
        result = ((v6 - v11) ^ (i - v11)) & v3;
        if (result > 7)
        {
          result = *(unsigned __int8 *)(v7 + v6);
          v14 = v10 & 0x7F;
          *(_BYTE *)(v7 + v6) = v14;
          *(_BYTE *)(v7 + ((v6 - 7) & v3) + (v3 & 7)) = v14;
          if ((_DWORD)result == 128)
          {
            *(_QWORD *)(v8 + 8 * v6) = *(_QWORD *)(v8 + 8 * i);
            v3 = a1[3];
            v15 = *a1;
            *(_BYTE *)(v15 + i) = 0x80;
            *(_BYTE *)(v15 + (v3 & (i - 7)) + (v3 & 7)) = 0x80;
          }
          else
          {
            v16 = *(_QWORD *)(v8 + 8 * i);
            *(_QWORD *)(v8 + 8 * i) = *(_QWORD *)(v8 + 8 * v6);
            *(_QWORD *)(a1[1] + 8 * v6) = v16;
            --i;
            v3 = a1[3];
          }
        }
        else
        {
          *(_BYTE *)(v7 + i) = v10 & 0x7F;
          *(_BYTE *)(v7 + ((i - 7) & v3) + (v3 & 7)) = v10 & 0x7F;
        }
      }
    }
    v17 = v3 - (v3 >> 3);
    if (v3 == 7)
      v17 = 6;
    a1[4] = v17 - a1[2];
  }
  else
  {
    a1[4] = -(uint64_t)a1[2];
  }
  return result;
}

uint64_t sub_223A2C5C4(uint64_t a1, unsigned int a2, __int16 a3, char a4, char a5, float a6)
{
  unsigned int v6;
  uint64_t v8;
  size_t prime;
  _QWORD *v10;
  uint64_t v11;
  unsigned __int8 v12;
  int v13;
  unsigned __int8 v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  const char *v19;
  size_t v20;
  unsigned __int8 v21;
  int8x8_t v22;
  BOOL v23;
  unint64_t v24;
  uint8x8_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;
  void **p_dst;
  unint64_t v30;
  const void *v31;
  unsigned __int8 v32;
  const char *v33;
  size_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  size_t v42;
  std::__shared_weak_count_vtbl *v43;
  std::__shared_weak_count *v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t *v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  int v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  void *v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unsigned __int8 v81;
  int v82;
  unint64_t v83;
  unint64_t v84;
  size_t v86;
  void **v87;
  unint64_t v88;
  const void *v89;
  uint64_t v90;
  uint64_t v91;
  const char *v92;
  uint64_t v93;
  const char *v94;
  size_t v95;
  unsigned __int8 v96;
  unsigned __int8 v97;
  const char *v98;
  size_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  NSObject *v104;
  uint64_t v105;
  uint64_t v106;
  size_t v107;
  std::__shared_weak_count_vtbl *v108;
  std::__shared_weak_count *v109;
  size_t v110;
  size_t v111;
  uint64_t *v112;
  void *v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  _QWORD *v119;
  uint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  char *v124;
  unint64_t *v125;
  unint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void **v133;
  uint64_t v134;
  const char *v135;
  size_t v136;
  unsigned __int8 v137;
  unsigned __int8 v138;
  const char *v139;
  size_t v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  size_t v148;
  std::__shared_weak_count_vtbl *v149;
  std::__shared_weak_count *v150;
  size_t v151;
  size_t v152;
  uint64_t *v153;
  void *v154;
  int v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  const char *v164;
  uint64_t v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  std::__shared_weak_count *v169;
  unint64_t *v170;
  unint64_t v171;
  uint64_t v172;
  std::__shared_weak_count *v173;
  unint64_t *v174;
  unint64_t v175;
  std::__shared_weak_count *v176;
  unint64_t *v177;
  unint64_t v178;
  std::__shared_weak_count *v179;
  unint64_t *v180;
  unint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  const char *v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  _QWORD *v195;
  uint64_t v196;
  std::__shared_weak_count *v197;
  unint64_t *p_shared_owners;
  unint64_t v199;
  char *v200;
  unint64_t *v201;
  unint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  const char *v215;
  uint64_t v216;
  std::__shared_weak_count *v217;
  unint64_t *v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  uint64_t v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  std::__shared_weak_count *v227;
  unint64_t *v228;
  unint64_t v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  std::__shared_weak_count *v233;
  unint64_t *v234;
  unint64_t v235;
  const char *v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  uint64_t v240;
  const char *v241;
  uint64_t v242;
  int v243;
  const char *v244;
  int __s;
  char *__sa;
  unsigned int v247;
  unsigned int v248;
  const char *v249;
  unint64_t v250;
  uint64_t v251;
  int v252;
  uint64_t *v253;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v255;
  int v256;
  const char *v257;
  int v258;
  const char *v259;
  uint64_t v260;
  std::__shared_weak_count *v261;
  void **__dst;
  size_t v263;
  int64_t v264;
  uint64_t v265;
  __int128 v266;
  std::__shared_weak_count *v267;
  char *v268;
  std::__shared_weak_count *v269;
  uint64_t v270;
  __int128 v271;
  _BYTE object[24];
  __int128 v273;
  void *__p[2];
  unint64_t v275;
  const void *v276;
  unint64_t v277;
  void *v278;
  char v279;
  unint64_t v280;
  int v281;
  _BYTE v282[160];
  _BYTE v283[24];
  __int128 v284;
  char *v285;
  const char *v286;
  unint64_t v287;
  std::__shared_weak_count *v288;
  _QWORD v289[5];

  v6 = a2;
  v289[2] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_24EC5D950;
  *(_OWORD *)(a1 + 8) = 0u;
  v8 = a1 + 8;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_QWORD *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = (float)((float)a2 * 0.8125);
  *(_BYTE *)(a1 + 128) = a4;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_QWORD *)(a1 + 376) = a1 + 384;
  *(_QWORD *)(a1 + 384) = 0;
  *(_QWORD *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 400) = a1 + 408;
  *(float *)(a1 + 424) = a6;
  *(float *)(a1 + 428) = 1.0 / a6;
  *(_WORD *)(a1 + 432) = a3;
  *(_BYTE *)(a1 + 434) = a5;
  prime = (unint64_t)(float)a2;
  if (prime == 1)
  {
    v10 = (_QWORD *)(a1 + 16);
    prime = 2;
LABEL_3:
    sub_2231B0668(v8, prime);
    goto LABEL_4;
  }
  if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime((unint64_t)(float)a2);
    v22 = *(int8x8_t *)(a1 + 16);
    v10 = (_QWORD *)(a1 + 16);
    v23 = prime >= *(_QWORD *)&v22;
    if (prime > *(_QWORD *)&v22)
      goto LABEL_3;
  }
  else
  {
    v22 = 0;
    v10 = (_QWORD *)(a1 + 16);
    v23 = 1;
    if (prime)
      goto LABEL_3;
  }
  if (!v23)
  {
    v24 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 32) / *(float *)(a1 + 40));
    if (*(_QWORD *)&v22 < 3uLL || (v25 = (uint8x8_t)vcnt_s8(v22), v25.i16[0] = vaddlv_u8(v25), v25.u32[0] > 1uLL))
    {
      v24 = std::__next_prime(v24);
    }
    else
    {
      v26 = 1 << -(char)__clz(v24 - 1);
      if (v24 >= 2)
        v24 = v26;
    }
    if (prime <= v24)
      prime = v24;
    if (prime < *(_QWORD *)&v22)
      goto LABEL_3;
  }
LABEL_4:
  v11 = v6;
  if (*v10 == v6)
    goto LABEL_9;
  v12 = atomic_load((unsigned __int8 *)&qword_2540CCB48);
  if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCB48))
  {
    sub_22455F53C(v283);
    sub_223174DE4(object, "cv3d.recon.block");
    sub_2232300E0((uint64_t **)v283, (uint64_t)object, &qword_2540CCB40);
    if ((object[23] & 0x80000000) != 0)
      operator delete(*(void **)object);
    __cxa_guard_release(&qword_2540CCB48);
  }
  v265 = qword_2540CCB40;
  if (**(int **)(qword_2540CCB40 + 56) > 4
    || (v13 = *(unsigned __int8 *)(qword_2540CCB40 + 72),
        v250 = sub_22322F254(qword_2540CCB40, "OSLogSurrogateAppender", 1, 0),
        !v13)
    && !v250)
  {
LABEL_9:
    if ((*(_WORD *)(a1 + 432) & (unsigned __int16)(*(_WORD *)(a1 + 432) - 1)) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  sub_223195210((uint64_t)object);
  sub_2231813E8(&object[16], (uint64_t)"Result bucket count not the same as requested: ", 47);
  v27 = (_QWORD *)std::ostream::operator<<();
  sub_2231813E8(v27, (uint64_t)" / ", 3);
  std::ostream::operator<<();
  v248 = v6;
  if ((v281 & 0x10) != 0)
  {
    v30 = v280;
    if (v280 < v277)
    {
      v280 = v277;
      v30 = v277;
    }
    v31 = v276;
    v28 = v30 - (_QWORD)v276;
    if (v30 - (unint64_t)v276 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_317;
  }
  else
  {
    if ((v281 & 8) == 0)
    {
      v28 = 0;
      HIBYTE(v264) = 0;
      p_dst = (void **)&__dst;
      goto LABEL_214;
    }
    v31 = __p[0];
    v28 = v275 - (unint64_t)__p[0];
    if (v275 - (unint64_t)__p[0] > 0x7FFFFFFFFFFFFFF7)
LABEL_317:
      sub_22316DBC0();
  }
  if (v28 >= 0x17)
  {
    v131 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v28 | 7) != 0x17)
      v131 = v28 | 7;
    v132 = v131 + 1;
    p_dst = (void **)operator new(v131 + 1);
    v263 = v28;
    v264 = v132 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_213;
  }
  HIBYTE(v264) = v28;
  p_dst = (void **)&__dst;
  if (v28)
LABEL_213:
    memmove(p_dst, v31, v28);
LABEL_214:
  *((_BYTE *)p_dst + v28) = 0;
  v253 = &v265;
  rep = std::chrono::steady_clock::now().__d_.__rep_;
  v255 = std::chrono::system_clock::now().__d_.__rep_;
  v256 = 4;
  v257 = "unknown file";
  v258 = 447;
  v260 = 0;
  v261 = 0;
  v259 = "unknown function";
  v133 = (void **)&__dst;
  if (v264 < 0)
    v133 = __dst;
  __sa = (char *)v133;
  v134 = *v253;
  v135 = (const char *)(*v253 + 16);
  v241 = v135;
  v242 = *v253;
  if (*(char *)(*v253 + 39) < 0)
  {
    v135 = *(const char **)(v134 + 16);
    v136 = *(_QWORD *)(v134 + 24);
    v243 = v13;
    v138 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v138 & 1) != 0)
      goto LABEL_220;
  }
  else
  {
    v136 = *(unsigned __int8 *)(*v253 + 39);
    v243 = v13;
    v137 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v137 & 1) != 0)
      goto LABEL_220;
  }
  if (__cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v283);
    sub_223199C58("com.apple.cv3d", (unint64_t)v283, &xmmword_255788F40);
    if ((_BYTE)v284 && (v283[23] & 0x80000000) != 0)
      operator delete(*(void **)v283);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
LABEL_220:
  if (byte_255788F57 >= 0)
    v139 = (const char *)&xmmword_255788F40;
  else
    v139 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v140 = byte_255788F57;
  else
    v140 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)v283 = os_log_create(v139, v135);
  v141 = &v283[8];
  if (v140 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v140 >= 0x17)
  {
    v142 = (v140 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v140 | 7) != 0x17)
      v142 = v140 | 7;
    v143 = v142 + 1;
    v141 = operator new(v142 + 1);
    *(_QWORD *)&v283[16] = v140;
    *(_QWORD *)&v284 = v143 | 0x8000000000000000;
    *(_QWORD *)&v283[8] = v141;
    goto LABEL_233;
  }
  BYTE7(v284) = v140;
  if (v140)
LABEL_233:
    memmove(v141, v139, v140);
  v141[v140] = 0;
  BYTE8(v284) = 1;
  v144 = (char *)&v285;
  if (v136 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v136 >= 0x17)
  {
    v145 = (v136 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v136 | 7) != 0x17)
      v145 = v136 | 7;
    v146 = v145 + 1;
    v144 = (char *)operator new(v145 + 1);
    v286 = (const char *)v136;
    v287 = v146 | 0x8000000000000000;
    v285 = v144;
    goto LABEL_241;
  }
  HIBYTE(v287) = v136;
  if (v136)
LABEL_241:
    memmove(v144, v135, v136);
  v144[v136] = 0;
  LOBYTE(v288) = 1;
  v147 = *(NSObject **)v283;
  if (SHIBYTE(v287) < 0)
    operator delete(v285);
  if (BYTE8(v284) && SBYTE7(v284) < 0)
    operator delete(*(void **)&v283[8]);
  if (*(_QWORD *)v283)
    os_release(*(void **)v283);
  if (v250 && *(_QWORD *)(v250 + 24))
  {
    v148 = _os_log_pack_size();
    v149 = (std::__shared_weak_count_vtbl *)operator new(v148, (std::align_val_t)8uLL);
    v150 = (std::__shared_weak_count *)operator new();
    v150->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v150->__shared_owners_ = 0;
    v150->__shared_weak_owners_ = 0;
    v150[1].__vftable = v149;
    *(_QWORD *)&v266 = v149;
    *((_QWORD *)&v266 + 1) = v149;
    v268 = 0;
    v269 = 0;
    v267 = v150;
    v151 = strlen(__sa);
    if (v151 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    v152 = v151;
    if (v151 >= 0x17)
    {
      v191 = (v151 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v151 | 7) != 0x17)
        v191 = v151 | 7;
      v192 = v191 + 1;
      v153 = (uint64_t *)operator new(v191 + 1);
      *(_QWORD *)&v271 = v152;
      *((_QWORD *)&v271 + 1) = v192 | 0x8000000000000000;
      v270 = (uint64_t)v153;
    }
    else
    {
      HIBYTE(v271) = v151;
      v153 = &v270;
      if (!v151)
      {
LABEL_322:
        *((_BYTE *)v153 + v152) = 0;
        v193 = v270;
        v289[0] = v271;
        *(_QWORD *)((char *)v289 + 7) = *(_QWORD *)((char *)&v271 + 7);
        v194 = HIBYTE(v271);
        v195 = operator new(0x38uLL);
        v195[1] = 0;
        v195[2] = 0;
        v195[3] = off_24EC1FA48;
        *v195 = &off_24EC1F9F8;
        v196 = v289[0];
        v195[4] = v193;
        v195[5] = v196;
        *(_QWORD *)((char *)v195 + 47) = *(_QWORD *)((char *)v289 + 7);
        *((_BYTE *)v195 + 55) = v194;
        v289[0] = 0;
        *(_QWORD *)((char *)v289 + 7) = 0;
        v197 = v269;
        v268 = (char *)(v195 + 3);
        v269 = (std::__shared_weak_count *)v195;
        v155 = v243;
        if (v197)
        {
          p_shared_owners = (unint64_t *)&v197->__shared_owners_;
          do
            v199 = __ldaxr(p_shared_owners);
          while (__stlxr(v199 - 1, p_shared_owners));
          if (!v199)
          {
            ((void (*)(std::__shared_weak_count *))v197->__on_zero_shared)(v197);
            std::__shared_weak_count::__release_weak(v197);
          }
        }
        *(_OWORD *)v283 = v266;
        v200 = v268;
        *(_QWORD *)&v283[16] = v267;
        if (v267)
        {
          v201 = (unint64_t *)&v267->__shared_owners_;
          do
            v202 = __ldxr(v201);
          while (__stxr(v202 + 1, v201));
        }
        v203 = v269;
        *(_QWORD *)&v284 = v200;
        *((_QWORD *)&v284 + 1) = v269;
        if (v269)
        {
          v204 = (unint64_t *)&v269->__shared_owners_;
          do
            v205 = __ldxr(v204);
          while (__stxr(v205 + 1, v204));
          v285 = v200;
          do
            v206 = __ldaxr(v204);
          while (__stlxr(v206 - 1, v204));
          if (!v206)
          {
            ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
            std::__shared_weak_count::__release_weak(v203);
          }
        }
        else
        {
          v285 = v200;
        }
        v207 = v267;
        if (v267)
        {
          v208 = (unint64_t *)&v267->__shared_owners_;
          do
            v209 = __ldaxr(v208);
          while (__stlxr(v209 - 1, v208));
          if (!v209)
          {
            ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
            std::__shared_weak_count::__release_weak(v207);
          }
        }
        v210 = *(_QWORD *)v283;
        if (v285[31] >= 0)
          v211 = v285 + 8;
        else
          v211 = (char *)*((_QWORD *)v285 + 1);
        v212 = _os_log_pack_fill();
        *(_DWORD *)v212 = 136315138;
        *(_QWORD *)(v212 + 4) = v211;
        v213 = operator new();
        v214 = *(unsigned __int8 *)(v242 + 39);
        v215 = v241;
        if ((v214 & 0x80u) != 0)
        {
          v215 = *(const char **)(v242 + 16);
          v214 = *(_QWORD *)(v242 + 24);
        }
        *(_QWORD *)v213 = v210;
        *(_OWORD *)(v213 + 8) = *(_OWORD *)&v283[8];
        *(_QWORD *)&v283[8] = 0;
        *(_QWORD *)&v283[16] = 0;
        *(_OWORD *)(v213 + 24) = v284;
        v284 = 0uLL;
        *(_QWORD *)(v213 + 40) = v215;
        *(_QWORD *)(v213 + 48) = v214;
        *(_BYTE *)(v213 + 56) = 16;
        v270 = 0;
        *(_QWORD *)&v266 = v213;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v250 + 24) + 40))(*(_QWORD *)(v250 + 24), &v266);
        v216 = v266;
        *(_QWORD *)&v266 = 0;
        if (v216)
        {
          v217 = *(std::__shared_weak_count **)(v216 + 32);
          if (v217)
          {
            v218 = (unint64_t *)&v217->__shared_owners_;
            do
              v219 = __ldaxr(v218);
            while (__stlxr(v219 - 1, v218));
            if (!v219)
            {
              ((void (*)(std::__shared_weak_count *))v217->__on_zero_shared)(v217);
              std::__shared_weak_count::__release_weak(v217);
            }
          }
          v220 = *(std::__shared_weak_count **)(v216 + 16);
          if (v220)
          {
            v221 = (unint64_t *)&v220->__shared_owners_;
            do
              v222 = __ldaxr(v221);
            while (__stlxr(v222 - 1, v221));
            if (!v222)
            {
              ((void (*)(std::__shared_weak_count *))v220->__on_zero_shared)(v220);
              std::__shared_weak_count::__release_weak(v220);
            }
          }
          MEMORY[0x227684CE8](v216, 0x10F0C40B62ED6C6);
          v223 = v270;
          v270 = 0;
          if (v223)
          {
            v224 = *(std::__shared_weak_count **)(v223 + 32);
            if (v224)
            {
              v225 = (unint64_t *)&v224->__shared_owners_;
              do
                v226 = __ldaxr(v225);
              while (__stlxr(v226 - 1, v225));
              if (!v226)
              {
                ((void (*)(std::__shared_weak_count *))v224->__on_zero_shared)(v224);
                std::__shared_weak_count::__release_weak(v224);
              }
            }
            v227 = *(std::__shared_weak_count **)(v223 + 16);
            if (v227)
            {
              v228 = (unint64_t *)&v227->__shared_owners_;
              do
                v229 = __ldaxr(v228);
              while (__stlxr(v229 - 1, v228));
              if (!v229)
              {
                ((void (*)(std::__shared_weak_count *))v227->__on_zero_shared)(v227);
                std::__shared_weak_count::__release_weak(v227);
              }
            }
            MEMORY[0x227684CE8](v223, 0x10F0C40B62ED6C6);
          }
        }
        v230 = (std::__shared_weak_count *)*((_QWORD *)&v284 + 1);
        if (*((_QWORD *)&v284 + 1))
        {
          v231 = (unint64_t *)(*((_QWORD *)&v284 + 1) + 8);
          do
            v232 = __ldaxr(v231);
          while (__stlxr(v232 - 1, v231));
          if (!v232)
          {
            ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
            std::__shared_weak_count::__release_weak(v230);
          }
        }
        v233 = *(std::__shared_weak_count **)&v283[16];
        if (*(_QWORD *)&v283[16])
        {
          v234 = (unint64_t *)(*(_QWORD *)&v283[16] + 8);
          do
            v235 = __ldaxr(v234);
          while (__stlxr(v235 - 1, v234));
          if (!v235)
          {
            ((void (*)(std::__shared_weak_count *))v233->__on_zero_shared)(v233);
            std::__shared_weak_count::__release_weak(v233);
          }
        }
        goto LABEL_381;
      }
    }
    memcpy(v153, __sa, v152);
    goto LABEL_322;
  }
  os_log_type_enabled(v147, OS_LOG_TYPE_ERROR);
  *(_DWORD *)v283 = 136315138;
  *(_QWORD *)&v283[4] = __sa;
  v154 = (void *)_os_log_send_and_compose_impl();
  v155 = v243;
  if (v154)
    free(v154);
LABEL_381:
  if (v155)
  {
    v236 = (const char *)&__dst;
    if (v264 < 0)
      v236 = (const char *)__dst;
    sub_22322C138((uint64_t)&v253, "%s", v236);
    sub_223182C08((uint64_t)&v253);
  }
  sub_223182C08((uint64_t)&v253);
  v237 = v261;
  if (v261)
  {
    v238 = (unint64_t *)&v261->__shared_owners_;
    do
      v239 = __ldaxr(v238);
    while (__stlxr(v239 - 1, v238));
    if (!v239)
    {
      ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
      std::__shared_weak_count::__release_weak(v237);
    }
  }
  if (SHIBYTE(v264) < 0)
    operator delete(__dst);
  *(_QWORD *)object = *MEMORY[0x24BEDB7F0];
  v240 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)&object[*(_QWORD *)(*(_QWORD *)object - 24)] = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&object[16] = v240;
  *(_QWORD *)&v273 = MEMORY[0x24BEDB848] + 16;
  if (v279 < 0)
    operator delete(v278);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v282);
  v6 = v248;
  if ((*(_WORD *)(a1 + 432) & (unsigned __int16)(*(_WORD *)(a1 + 432) - 1)) != 0)
  {
LABEL_10:
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 450, (uint64_t)"math::IsPowerOfTwo(block_size_)", 31, (uint64_t)"Invalid block size", 18, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
  }
LABEL_11:
  *(_QWORD *)a1 = &off_24EC5D7F8;
  if (*(_QWORD *)(a1 + 16) != v11)
  {
    v14 = atomic_load((unsigned __int8 *)&qword_2540CCB28);
    if ((v14 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCB28))
    {
      sub_22455F53C(v283);
      sub_223174DE4(object, "cv3dapi.recon3d");
      sub_2232300E0((uint64_t **)v283, (uint64_t)object, &qword_2540CCB20);
      if ((object[23] & 0x80000000) != 0)
        operator delete(*(void **)object);
      __cxa_guard_release(&qword_2540CCB28);
    }
    v270 = qword_2540CCB20;
    if (**(int **)(qword_2540CCB20 + 56) <= 4)
    {
      v15 = *(unsigned __int8 *)(qword_2540CCB20 + 72);
      v16 = sub_22322F254(qword_2540CCB20, "OSLogSurrogateAppender", 1, 0);
      v17 = v16;
      if (v15 || v16)
      {
        __s = v15;
        *(_QWORD *)v283 = &v270;
        *(std::chrono::steady_clock::time_point *)&v283[8] = std::chrono::steady_clock::now();
        *(std::chrono::system_clock::time_point *)&v283[16] = std::chrono::system_clock::now();
        LODWORD(v284) = 4;
        *((_QWORD *)&v284 + 1) = "unknown file";
        LODWORD(v285) = 47;
        v287 = 0;
        v288 = 0;
        v286 = "unknown function";
        v18 = **(_QWORD **)v283;
        v19 = (const char *)(**(_QWORD **)v283 + 16);
        v244 = v19;
        if (*(char *)(**(_QWORD **)v283 + 39) < 0)
        {
          v19 = *(const char **)(v18 + 16);
          v20 = *(_QWORD *)(v18 + 24);
          v247 = v6;
          v251 = *(_QWORD *)(a1 + 16);
          v32 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v32 & 1) != 0)
            goto LABEL_44;
        }
        else
        {
          v20 = *(unsigned __int8 *)(**(_QWORD **)v283 + 39);
          v247 = v6;
          v251 = *(_QWORD *)(a1 + 16);
          v21 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v21 & 1) != 0)
            goto LABEL_44;
        }
        if (__cxa_guard_acquire(&qword_255788F58))
        {
          sub_224568628((uint64_t)object);
          sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
          if ((_BYTE)v273 && (object[23] & 0x80000000) != 0)
            operator delete(*(void **)object);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
          __cxa_guard_release(&qword_255788F58);
        }
LABEL_44:
        if (byte_255788F57 >= 0)
          v33 = (const char *)&xmmword_255788F40;
        else
          v33 = (const char *)xmmword_255788F40;
        if (byte_255788F57 >= 0)
          v34 = byte_255788F57;
        else
          v34 = *((_QWORD *)&xmmword_255788F40 + 1);
        *(_QWORD *)object = os_log_create(v33, v19);
        v35 = &object[8];
        if (v34 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v34 >= 0x17)
        {
          v36 = (v34 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v34 | 7) != 0x17)
            v36 = v34 | 7;
          v37 = v36 + 1;
          v35 = operator new(v36 + 1);
          *(_QWORD *)&object[16] = v34;
          *(_QWORD *)&v273 = v37 | 0x8000000000000000;
          *(_QWORD *)&object[8] = v35;
        }
        else
        {
          BYTE7(v273) = v34;
          if (!v34)
          {
LABEL_58:
            v35[v34] = 0;
            BYTE8(v273) = 1;
            v38 = __p;
            if (v20 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            if (v20 >= 0x17)
            {
              v39 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v20 | 7) != 0x17)
                v39 = v20 | 7;
              v40 = v39 + 1;
              v38 = operator new(v39 + 1);
              __p[1] = (void *)v20;
              v275 = v40 | 0x8000000000000000;
              __p[0] = v38;
            }
            else
            {
              HIBYTE(v275) = v20;
              if (!v20)
                goto LABEL_66;
            }
            memmove(v38, v19, v20);
LABEL_66:
            *((_BYTE *)v38 + v20) = 0;
            LOBYTE(v276) = 1;
            v41 = *(NSObject **)object;
            if (SHIBYTE(v275) < 0)
              operator delete(__p[0]);
            if (BYTE8(v273) && SBYTE7(v273) < 0)
              operator delete(*(void **)&object[8]);
            if (*(_QWORD *)object)
              os_release(*(void **)object);
            if (v17 && *(_QWORD *)(v17 + 24))
            {
              v42 = _os_log_pack_size();
              v43 = (std::__shared_weak_count_vtbl *)operator new(v42, (std::align_val_t)8uLL);
              v44 = (std::__shared_weak_count *)operator new();
              v45 = v44;
              v44->__shared_owners_ = 0;
              v46 = (unint64_t *)&v44->__shared_owners_;
              v44->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v44->__shared_weak_owners_ = 0;
              v44[1].__vftable = v43;
              *(_QWORD *)object = v43;
              *(_QWORD *)&object[8] = v43;
              *(_QWORD *)&object[16] = v44;
              do
                v47 = __ldxr(v46);
              while (__stxr(v47 + 1, v46));
              v273 = 0uLL;
              __p[0] = 0;
              do
                v48 = __ldaxr(v46);
              while (__stlxr(v48 - 1, v46));
              if (!v48)
              {
                ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
                std::__shared_weak_count::__release_weak(v45);
              }
              v49 = *(_QWORD *)object;
              v50 = _os_log_pack_fill();
              *(_DWORD *)v50 = 134218240;
              *(_QWORD *)(v50 + 4) = v251;
              *(_WORD *)(v50 + 12) = 1024;
              *(_DWORD *)(v50 + 14) = v247;
              v51 = operator new();
              v52 = *(unsigned __int8 *)(v18 + 39);
              v53 = *(const char **)(v18 + 16);
              v54 = *(_QWORD *)(v18 + 24);
              v55 = v273;
              *(_OWORD *)(v51 + 8) = *(_OWORD *)&object[8];
              if ((v52 & 0x80u) != 0)
                v52 = v54;
              else
                v53 = v244;
              *(_QWORD *)v51 = v49;
              *(_QWORD *)&object[8] = 0;
              *(_QWORD *)&object[16] = 0;
              *(_OWORD *)(v51 + 24) = v55;
              v273 = 0uLL;
              *(_QWORD *)(v51 + 40) = v53;
              *(_QWORD *)(v51 + 48) = v52;
              *(_BYTE *)(v51 + 56) = 16;
              *(_QWORD *)&v266 = 0;
              v253 = (uint64_t *)v51;
              (*(void (**)(_QWORD, uint64_t **))(**(_QWORD **)(v17 + 24) + 40))(*(_QWORD *)(v17 + 24), &v253);
              v56 = v253;
              v253 = 0;
              if (v56)
              {
                v57 = (std::__shared_weak_count *)v56[4];
                if (v57)
                {
                  v58 = (unint64_t *)&v57->__shared_owners_;
                  do
                    v59 = __ldaxr(v58);
                  while (__stlxr(v59 - 1, v58));
                  if (!v59)
                  {
                    ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
                    std::__shared_weak_count::__release_weak(v57);
                  }
                }
                v60 = (std::__shared_weak_count *)v56[2];
                if (v60)
                {
                  v61 = (unint64_t *)&v60->__shared_owners_;
                  do
                    v62 = __ldaxr(v61);
                  while (__stlxr(v62 - 1, v61));
                  if (!v62)
                  {
                    ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                    std::__shared_weak_count::__release_weak(v60);
                  }
                }
                MEMORY[0x227684CE8](v56, 0x10F0C40B62ED6C6);
                v63 = v266;
                *(_QWORD *)&v266 = 0;
                if (v63)
                {
                  v64 = *(std::__shared_weak_count **)(v63 + 32);
                  if (v64)
                  {
                    v65 = (unint64_t *)&v64->__shared_owners_;
                    do
                      v66 = __ldaxr(v65);
                    while (__stlxr(v66 - 1, v65));
                    if (!v66)
                    {
                      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                      std::__shared_weak_count::__release_weak(v64);
                    }
                  }
                  v67 = *(std::__shared_weak_count **)(v63 + 16);
                  if (v67)
                  {
                    v68 = (unint64_t *)&v67->__shared_owners_;
                    do
                      v69 = __ldaxr(v68);
                    while (__stlxr(v69 - 1, v68));
                    if (!v69)
                    {
                      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
                      std::__shared_weak_count::__release_weak(v67);
                    }
                  }
                  MEMORY[0x227684CE8](v63, 0x10F0C40B62ED6C6);
                }
              }
              v70 = (std::__shared_weak_count *)*((_QWORD *)&v273 + 1);
              v71 = __s;
              if (*((_QWORD *)&v273 + 1))
              {
                v72 = (unint64_t *)(*((_QWORD *)&v273 + 1) + 8);
                do
                  v73 = __ldaxr(v72);
                while (__stlxr(v73 - 1, v72));
                if (!v73)
                {
                  ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
                  std::__shared_weak_count::__release_weak(v70);
                }
              }
              v74 = *(std::__shared_weak_count **)&object[16];
              if (*(_QWORD *)&object[16])
              {
                v75 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
                do
                  v76 = __ldaxr(v75);
                while (__stlxr(v76 - 1, v75));
                if (!v76)
                {
                  ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
                  std::__shared_weak_count::__release_weak(v74);
                }
              }
            }
            else
            {
              os_log_type_enabled(v41, OS_LOG_TYPE_ERROR);
              *(_DWORD *)object = 134218240;
              *(_QWORD *)&object[4] = v251;
              *(_WORD *)&object[12] = 1024;
              *(_DWORD *)&object[14] = v247;
              v77 = (void *)_os_log_send_and_compose_impl();
              v71 = __s;
              if (v77)
                free(v77);
            }
            if (v71)
            {
              sub_22322C138((uint64_t)v283, "Result bucket count not the same as requested: %zu / %u", *(_QWORD *)(a1 + 16), v247);
              sub_223182C08((uint64_t)v283);
            }
            sub_223182C08((uint64_t)v283);
            v78 = v288;
            if (v288)
            {
              v79 = (unint64_t *)&v288->__shared_owners_;
              do
                v80 = __ldaxr(v79);
              while (__stlxr(v80 - 1, v79));
              if (!v80)
              {
                ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
                std::__shared_weak_count::__release_weak(v78);
              }
            }
            goto LABEL_126;
          }
        }
        memmove(v35, v33, v34);
        goto LABEL_58;
      }
    }
  }
LABEL_126:
  v81 = atomic_load((unsigned __int8 *)&qword_2540CCB38);
  if ((v81 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCB38))
  {
    sub_22455F53C(v283);
    sub_223174DE4(object, "cv3d.recon.vlm");
    sub_2232300E0((uint64_t **)v283, (uint64_t)object, &qword_2540CCB30);
    if ((object[23] & 0x80000000) != 0)
      operator delete(*(void **)object);
    __cxa_guard_release(&qword_2540CCB38);
  }
  v265 = qword_2540CCB30;
  if (**(int **)(qword_2540CCB30 + 56) <= 2)
  {
    v82 = *(unsigned __int8 *)(qword_2540CCB30 + 72);
    v83 = sub_22322F254(qword_2540CCB30, "OSLogSurrogateAppender", 1, 0);
    v84 = v83;
    if (v82 || v83 != 0)
    {
      sub_223195210((uint64_t)object);
      sub_2231813E8(&object[16], (uint64_t)"#bucket ", 8);
      std::ostream::operator<<();
      v252 = v82;
      if ((v281 & 0x10) != 0)
      {
        v88 = v280;
        if (v280 < v277)
        {
          v280 = v277;
          v88 = v277;
        }
        v89 = v276;
        v86 = v88 - (_QWORD)v276;
        if (v88 - (unint64_t)v276 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_190;
      }
      else
      {
        if ((v281 & 8) == 0)
        {
          v86 = 0;
          HIBYTE(v264) = 0;
          v87 = (void **)&__dst;
          goto LABEL_145;
        }
        v89 = __p[0];
        v86 = v275 - (unint64_t)__p[0];
        if (v275 - (unint64_t)__p[0] > 0x7FFFFFFFFFFFFFF7)
LABEL_190:
          sub_22316DBC0();
      }
      if (v86 >= 0x17)
      {
        v90 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v86 | 7) != 0x17)
          v90 = v86 | 7;
        v91 = v90 + 1;
        v87 = (void **)operator new(v90 + 1);
        v263 = v86;
        v264 = v91 | 0x8000000000000000;
        __dst = v87;
      }
      else
      {
        HIBYTE(v264) = v86;
        v87 = (void **)&__dst;
        if (!v86)
        {
LABEL_145:
          *((_BYTE *)v87 + v86) = 0;
          v253 = &v265;
          rep = std::chrono::steady_clock::now().__d_.__rep_;
          v255 = std::chrono::system_clock::now().__d_.__rep_;
          v256 = 2;
          v257 = "unknown file";
          v258 = 50;
          v260 = 0;
          v261 = 0;
          v259 = "unknown function";
          if (v264 >= 0)
            v92 = (const char *)&__dst;
          else
            v92 = (const char *)__dst;
          v93 = *v253;
          v94 = (const char *)(*v253 + 16);
          v249 = v94;
          if (*(char *)(*v253 + 39) < 0)
          {
            v94 = *(const char **)(v93 + 16);
            v95 = *(_QWORD *)(v93 + 24);
            v97 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v97 & 1) != 0)
              goto LABEL_152;
          }
          else
          {
            v95 = *(unsigned __int8 *)(*v253 + 39);
            v96 = atomic_load((unsigned __int8 *)&qword_255788F58);
            if ((v96 & 1) != 0)
              goto LABEL_152;
          }
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)v283);
            sub_223199C58("com.apple.cv3d", (unint64_t)v283, &xmmword_255788F40);
            if ((_BYTE)v284 && (v283[23] & 0x80000000) != 0)
              operator delete(*(void **)v283);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
          }
LABEL_152:
          if (byte_255788F57 >= 0)
            v98 = (const char *)&xmmword_255788F40;
          else
            v98 = (const char *)xmmword_255788F40;
          if (byte_255788F57 >= 0)
            v99 = byte_255788F57;
          else
            v99 = *((_QWORD *)&xmmword_255788F40 + 1);
          *(_QWORD *)v283 = os_log_create(v98, v94);
          v100 = &v283[8];
          if (v99 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v99 >= 0x17)
          {
            v101 = (v99 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v99 | 7) != 0x17)
              v101 = v99 | 7;
            v102 = v101 + 1;
            v100 = operator new(v101 + 1);
            *(_QWORD *)&v283[16] = v99;
            *(_QWORD *)&v284 = v102 | 0x8000000000000000;
            *(_QWORD *)&v283[8] = v100;
          }
          else
          {
            BYTE7(v284) = v99;
            if (!v99)
            {
LABEL_166:
              v100[v99] = 0;
              BYTE8(v284) = 1;
              v103 = (char *)&v285;
              if (v95 > 0x7FFFFFFFFFFFFFF7)
                sub_22316DBC0();
              if (v95 >= 0x17)
              {
                v105 = (v95 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v95 | 7) != 0x17)
                  v105 = v95 | 7;
                v106 = v105 + 1;
                v103 = (char *)operator new(v105 + 1);
                v286 = (const char *)v95;
                v287 = v106 | 0x8000000000000000;
                v285 = v103;
              }
              else
              {
                HIBYTE(v287) = v95;
                if (!v95)
                {
                  LOBYTE(v285) = 0;
                  LOBYTE(v288) = 1;
                  v104 = *(NSObject **)v283;
                  if ((SHIBYTE(v287) & 0x80000000) == 0)
                    goto LABEL_170;
                  goto LABEL_176;
                }
              }
              memmove(v103, v94, v95);
              v103[v95] = 0;
              LOBYTE(v288) = 1;
              v104 = *(NSObject **)v283;
              if ((SHIBYTE(v287) & 0x80000000) == 0)
              {
LABEL_170:
                if (!BYTE8(v284))
                  goto LABEL_179;
                goto LABEL_177;
              }
LABEL_176:
              operator delete(v285);
              if (!BYTE8(v284))
                goto LABEL_179;
LABEL_177:
              if (SBYTE7(v284) < 0)
                operator delete(*(void **)&v283[8]);
LABEL_179:
              if (*(_QWORD *)v283)
                os_release(*(void **)v283);
              if (!v84 || !*(_QWORD *)(v84 + 24))
              {
                os_log_type_enabled(v104, OS_LOG_TYPE_DEBUG);
                *(_DWORD *)v283 = 136315138;
                *(_QWORD *)&v283[4] = v92;
                v113 = (void *)_os_log_send_and_compose_impl();
                v114 = v252;
                if (v113)
                  free(v113);
                goto LABEL_301;
              }
              v107 = _os_log_pack_size();
              v108 = (std::__shared_weak_count_vtbl *)operator new(v107, (std::align_val_t)8uLL);
              v109 = (std::__shared_weak_count *)operator new();
              v109->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v109->__shared_owners_ = 0;
              v109->__shared_weak_owners_ = 0;
              v109[1].__vftable = v108;
              *(_QWORD *)&v266 = v108;
              *((_QWORD *)&v266 + 1) = v108;
              v268 = 0;
              v269 = 0;
              v267 = v109;
              v110 = strlen(v92);
              if (v110 > 0x7FFFFFFFFFFFFFF7)
                sub_22316DBC0();
              v111 = v110;
              if (v110 >= 0x17)
              {
                v115 = (v110 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v110 | 7) != 0x17)
                  v115 = v110 | 7;
                v116 = v115 + 1;
                v112 = (uint64_t *)operator new(v115 + 1);
                *(_QWORD *)&v271 = v111;
                *((_QWORD *)&v271 + 1) = v116 | 0x8000000000000000;
                v270 = (uint64_t)v112;
              }
              else
              {
                HIBYTE(v271) = v110;
                v112 = &v270;
                if (!v110)
                {
LABEL_195:
                  *((_BYTE *)v112 + v111) = 0;
                  v117 = v270;
                  v289[0] = v271;
                  *(_QWORD *)((char *)v289 + 7) = *(_QWORD *)((char *)&v271 + 7);
                  v118 = HIBYTE(v271);
                  v119 = operator new(0x38uLL);
                  v119[1] = 0;
                  v119[2] = 0;
                  v119[3] = off_24EC1FA48;
                  *v119 = &off_24EC1F9F8;
                  v120 = v289[0];
                  v119[4] = v117;
                  v119[5] = v120;
                  *(_QWORD *)((char *)v119 + 47) = *(_QWORD *)((char *)v289 + 7);
                  *((_BYTE *)v119 + 55) = v118;
                  v289[0] = 0;
                  *(_QWORD *)((char *)v289 + 7) = 0;
                  v121 = v269;
                  v268 = (char *)(v119 + 3);
                  v269 = (std::__shared_weak_count *)v119;
                  if (v121)
                  {
                    v122 = (unint64_t *)&v121->__shared_owners_;
                    do
                      v123 = __ldaxr(v122);
                    while (__stlxr(v123 - 1, v122));
                    if (!v123)
                    {
                      ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
                      std::__shared_weak_count::__release_weak(v121);
                    }
                  }
                  *(_OWORD *)v283 = v266;
                  v124 = v268;
                  *(_QWORD *)&v283[16] = v267;
                  if (v267)
                  {
                    v125 = (unint64_t *)&v267->__shared_owners_;
                    do
                      v126 = __ldxr(v125);
                    while (__stxr(v126 + 1, v125));
                  }
                  v127 = v269;
                  *(_QWORD *)&v284 = v124;
                  *((_QWORD *)&v284 + 1) = v269;
                  if (v269)
                  {
                    v128 = (unint64_t *)&v269->__shared_owners_;
                    do
                      v129 = __ldxr(v128);
                    while (__stxr(v129 + 1, v128));
                    v285 = v124;
                    do
                      v130 = __ldaxr(v128);
                    while (__stlxr(v130 - 1, v128));
                    if (!v130)
                    {
                      ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
                      std::__shared_weak_count::__release_weak(v127);
                    }
                  }
                  else
                  {
                    v285 = v124;
                  }
                  v156 = v267;
                  if (v267)
                  {
                    v157 = (unint64_t *)&v267->__shared_owners_;
                    do
                      v158 = __ldaxr(v157);
                    while (__stlxr(v158 - 1, v157));
                    if (!v158)
                    {
                      ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
                      std::__shared_weak_count::__release_weak(v156);
                    }
                  }
                  v159 = *(_QWORD *)v283;
                  if (v285[31] >= 0)
                    v160 = v285 + 8;
                  else
                    v160 = (char *)*((_QWORD *)v285 + 1);
                  v161 = _os_log_pack_fill();
                  *(_DWORD *)v161 = 136315138;
                  *(_QWORD *)(v161 + 4) = v160;
                  v162 = operator new();
                  v163 = *(unsigned __int8 *)(v93 + 39);
                  v164 = v249;
                  if ((v163 & 0x80u) != 0)
                  {
                    v164 = *(const char **)(v93 + 16);
                    v163 = *(_QWORD *)(v93 + 24);
                  }
                  *(_QWORD *)v162 = v159;
                  *(_OWORD *)(v162 + 8) = *(_OWORD *)&v283[8];
                  *(_QWORD *)&v283[8] = 0;
                  *(_QWORD *)&v283[16] = 0;
                  *(_OWORD *)(v162 + 24) = v284;
                  v284 = 0uLL;
                  *(_QWORD *)(v162 + 40) = v164;
                  *(_QWORD *)(v162 + 48) = v163;
                  *(_BYTE *)(v162 + 56) = 2;
                  v270 = 0;
                  *(_QWORD *)&v266 = v162;
                  (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v84 + 24) + 40))(*(_QWORD *)(v84 + 24), &v266);
                  v165 = v266;
                  *(_QWORD *)&v266 = 0;
                  v114 = v252;
                  if (v165)
                  {
                    v166 = *(std::__shared_weak_count **)(v165 + 32);
                    if (v166)
                    {
                      v167 = (unint64_t *)&v166->__shared_owners_;
                      do
                        v168 = __ldaxr(v167);
                      while (__stlxr(v168 - 1, v167));
                      if (!v168)
                      {
                        ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
                        std::__shared_weak_count::__release_weak(v166);
                      }
                    }
                    v169 = *(std::__shared_weak_count **)(v165 + 16);
                    if (v169)
                    {
                      v170 = (unint64_t *)&v169->__shared_owners_;
                      do
                        v171 = __ldaxr(v170);
                      while (__stlxr(v171 - 1, v170));
                      if (!v171)
                      {
                        ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
                        std::__shared_weak_count::__release_weak(v169);
                      }
                    }
                    MEMORY[0x227684CE8](v165, 0x10F0C40B62ED6C6);
                    v172 = v270;
                    v270 = 0;
                    if (v172)
                    {
                      v173 = *(std::__shared_weak_count **)(v172 + 32);
                      if (v173)
                      {
                        v174 = (unint64_t *)&v173->__shared_owners_;
                        do
                          v175 = __ldaxr(v174);
                        while (__stlxr(v175 - 1, v174));
                        if (!v175)
                        {
                          ((void (*)(std::__shared_weak_count *))v173->__on_zero_shared)(v173);
                          std::__shared_weak_count::__release_weak(v173);
                        }
                      }
                      v176 = *(std::__shared_weak_count **)(v172 + 16);
                      if (v176)
                      {
                        v177 = (unint64_t *)&v176->__shared_owners_;
                        do
                          v178 = __ldaxr(v177);
                        while (__stlxr(v178 - 1, v177));
                        if (!v178)
                        {
                          ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
                          std::__shared_weak_count::__release_weak(v176);
                        }
                      }
                      MEMORY[0x227684CE8](v172, 0x10F0C40B62ED6C6);
                    }
                  }
                  v179 = (std::__shared_weak_count *)*((_QWORD *)&v284 + 1);
                  if (*((_QWORD *)&v284 + 1))
                  {
                    v180 = (unint64_t *)(*((_QWORD *)&v284 + 1) + 8);
                    do
                      v181 = __ldaxr(v180);
                    while (__stlxr(v181 - 1, v180));
                    if (!v181)
                    {
                      ((void (*)(std::__shared_weak_count *))v179->__on_zero_shared)(v179);
                      std::__shared_weak_count::__release_weak(v179);
                    }
                  }
                  v182 = *(std::__shared_weak_count **)&v283[16];
                  if (*(_QWORD *)&v283[16])
                  {
                    v183 = (unint64_t *)(*(_QWORD *)&v283[16] + 8);
                    do
                      v184 = __ldaxr(v183);
                    while (__stlxr(v184 - 1, v183));
                    if (!v184)
                    {
                      ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
                      std::__shared_weak_count::__release_weak(v182);
                    }
                  }
LABEL_301:
                  if (v114)
                  {
                    v185 = (const char *)&__dst;
                    if (v264 < 0)
                      v185 = (const char *)__dst;
                    sub_22322C138((uint64_t)&v253, "%s", v185);
                    sub_223182C08((uint64_t)&v253);
                  }
                  sub_223182C08((uint64_t)&v253);
                  v186 = v261;
                  if (v261)
                  {
                    v187 = (unint64_t *)&v261->__shared_owners_;
                    do
                      v188 = __ldaxr(v187);
                    while (__stlxr(v188 - 1, v187));
                    if (!v188)
                    {
                      ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
                      std::__shared_weak_count::__release_weak(v186);
                    }
                  }
                  if (SHIBYTE(v264) < 0)
                    operator delete(__dst);
                  *(_QWORD *)object = *MEMORY[0x24BEDB7F0];
                  v189 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                  *(_QWORD *)&object[*(_QWORD *)(*(_QWORD *)object - 24)] = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
                  *(_QWORD *)&object[16] = v189;
                  *(_QWORD *)&v273 = MEMORY[0x24BEDB848] + 16;
                  if (v279 < 0)
                    operator delete(v278);
                  std::streambuf::~streambuf();
                  std::iostream::~basic_iostream();
                  MEMORY[0x227684BE0](v282);
                  return a1;
                }
              }
              memcpy(v112, v92, v111);
              goto LABEL_195;
            }
          }
          memmove(v100, v98, v99);
          goto LABEL_166;
        }
      }
      memmove(v87, v89, v86);
      goto LABEL_145;
    }
  }
  return a1;
}

void sub_223A2E428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,void *object,void *a43,int a44,__int16 a45,char a46,char a47,char a48,int a49,__int16 a50,char a51,char a52)
{
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v57;

  if (*(_BYTE *)(v55 - 168) && *(char *)(v55 - 169) < 0)
    operator delete(*(void **)(v55 - 192));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a18);
  if (a32 < 0)
    operator delete(__p);
  sub_223195348((uint64_t)&object);
  sub_223198030(v52 + 400, *(_QWORD **)(v52 + 408));
  sub_223198030(v52 + 376, *(_QWORD **)(v52 + 384));
  sub_223A2FDF4(v54);
  v57 = *(void **)(v52 + 96);
  if (v57)
  {
    *(_QWORD *)(v52 + 104) = v57;
    operator delete(v57);
  }
  sub_223A2FFC8(a14);
  sub_22322E828(v53);
  _Unwind_Resume(a1);
}

uint64_t sub_223A2E848(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  *(_QWORD *)a1 = &off_24EC5D950;
  sub_223198030(a1 + 400, *(_QWORD **)(a1 + 408));
  sub_223198030(a1 + 376, *(_QWORD **)(a1 + 384));
  sub_22369E4C4(a1 + 328);
  sub_22369E4C4(a1 + 280);
  sub_22369E4C4(a1 + 232);
  sub_223A2FE64(a1 + 184);
  sub_22369E4C4(a1 + 136);
  v2 = *(void **)(a1 + 96);
  if (v2)
  {
    *(_QWORD *)(a1 + 104) = v2;
    operator delete(v2);
  }
  sub_223A2FFC8(a1 + 48);
  v3 = *(_QWORD **)(a1 + 24);
  if (v3)
  {
    do
    {
      v4 = (_QWORD *)*v3;
      operator delete(v3);
      v3 = v4;
    }
    while (v4);
  }
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v5)
    operator delete(v5);
  return a1;
}

void sub_223A2E8F8(uint64_t a1)
{
  sub_223A2E848(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223A2E91C(_QWORD *a1, unsigned int a2, char a3, float a4)
{
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[440];

  sub_223A2C5C4((uint64_t)v8, a2, 8, a3, 1, a4);
  v7 = 0;
  sub_223A3008C((uint64_t)a1, (uint64_t)v8, 64, &v7);
  v5 = v7;
  v7 = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 56))(v5);
  sub_223A2E848((uint64_t)v8);
  *a1 = &off_24EC5D820;
  a1[1] = &unk_24EC5D870;
  a1[2] = &unk_24EC5D8A0;
  return a1;
}

void sub_223A2E9A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  if (a2)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
  sub_223A2E848((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_223A2E9D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;

  *a1 = &off_24EC5D978;
  a1[1] = &unk_24EC5D9C8;
  a1[2] = &unk_24EC5D9F8;
  v2 = (uint64_t)(a1 + 2);
  v3 = a1[68];
  a1[68] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 56))(v3);
  v4 = (_QWORD *)a1[64];
  if (v4)
  {
    do
    {
      v7 = (_QWORD *)*v4;
      v8 = (_QWORD *)v4[5];
      if (v8)
      {
        do
        {
          v9 = (_QWORD *)*v8;
          operator delete(v8);
          v8 = v9;
        }
        while (v9);
      }
      v10 = (void *)v4[3];
      v4[3] = 0;
      if (v10)
        operator delete(v10);
      operator delete(v4);
      v4 = v7;
    }
    while (v7);
  }
  v5 = (void *)a1[62];
  a1[62] = 0;
  if (v5)
    operator delete(v5);
  sub_223A307DC((uint64_t)(a1 + 57));
  sub_223A2E848(v2);
  return a1;
}

_QWORD *sub_223A2EAA4(uint64_t a1)
{
  return sub_223A2E9D4((_QWORD *)(a1 - 8));
}

_QWORD *sub_223A2EAAC(uint64_t a1)
{
  return sub_223A2E9D4((_QWORD *)(a1 - 16));
}

void sub_223A2EAB4(_QWORD *a1)
{
  sub_223A2E9D4(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223A2EAD8(uint64_t a1)
{
  sub_223A2E9D4((_QWORD *)(a1 - 8));
  JUMPOUT(0x227684CE8);
}

void sub_223A2EB00(uint64_t a1)
{
  sub_223A2E9D4((_QWORD *)(a1 - 16));
  JUMPOUT(0x227684CE8);
}

void sub_223A2EB28(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t i;
  void **v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = *(_QWORD **)(a1 + 24);
    if (v2)
    {
      do
      {
        v3 = (_QWORD *)*v2;
        operator delete(v2);
        v2 = v3;
      }
      while (v3);
    }
    *(_QWORD *)(a1 + 24) = 0;
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
    {
      for (i = 0; i != v4; ++i)
        *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 32) = 0;
  }
  v6 = *(void ***)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 88) = 0;
  v8 = v7 - (_QWORD)v6;
  if (v8 >= 0x11)
  {
    do
    {
      operator delete(*v6);
      v9 = *(_QWORD *)(a1 + 64);
      v6 = (void **)(*(_QWORD *)(a1 + 56) + 8);
      *(_QWORD *)(a1 + 56) = v6;
      v8 = v9 - (_QWORD)v6;
    }
    while (v8 > 0x10);
  }
  if (v8 >> 3 == 1)
  {
    v10 = 15;
    goto LABEL_14;
  }
  if (v8 >> 3 == 2)
  {
    v10 = 31;
LABEL_14:
    *(_QWORD *)(a1 + 80) = v10;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a1 + 96);
  sub_223A213BC((_QWORD *)(a1 + 128));
  sub_223198030(a1 + 376, *(_QWORD **)(a1 + 384));
  *(_QWORD *)(a1 + 384) = 0;
  *(_QWORD *)(a1 + 392) = 0;
  *(_QWORD *)(a1 + 376) = a1 + 384;
  sub_223198030(a1 + 400, *(_QWORD **)(a1 + 408));
  *(_QWORD *)(a1 + 408) = 0;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 400) = a1 + 408;
}

void sub_223A2EC24(uint64_t a1@<X0>, _QWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  unint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  _DWORD *v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  __int128 v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _OWORD *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  __int128 v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  size_t v64;
  _DWORD *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int *v69;
  int v70;
  int v71;
  uint64_t *v72;
  int v73;
  uint64_t *v74;
  int v75;
  int v76;
  int v77;
  uint64_t *v78;
  int v79;
  uint64_t *v80;
  int v81;
  int v82;
  int v83;
  uint64_t *v84;
  int v85;
  uint64_t *v86;
  int v87;
  int v88;
  int v89;
  uint64_t *v90;
  int v91;
  uint64_t *v92;
  int v93;
  int v94;
  int v95;
  uint64_t *v96;
  int v97;
  uint64_t *v98;
  int v99;
  int v100;
  int v101;
  uint64_t *v102;
  int v103;
  uint64_t *v104;
  int v105;
  int v106;
  int v107;
  uint64_t *v108;
  int v109;
  uint64_t *v110;
  int v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  int v117;
  BOOL v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  int v130;
  _QWORD *v131;
  BOOL v132;
  int v133;
  int v134;
  uint64_t *v135;
  int v136;
  uint64_t *v137;
  int v138;
  int v139;
  int v140;
  uint64_t *v141;
  int v142;
  uint64_t *v143;
  int v144;
  int v145;
  int v146;
  uint64_t *v147;
  int v148;
  uint64_t *v149;
  int v150;
  int v151;
  int v152;
  uint64_t *v153;
  int v154;
  uint64_t *v155;
  int v156;
  int v157;
  int v158;
  uint64_t *v159;
  int v160;
  uint64_t *v161;
  int v162;
  int v163;
  int v164;
  uint64_t *v165;
  int v166;
  uint64_t *v167;
  int v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t v171;
  _QWORD *v172;
  char *v173;
  _QWORD *v174;
  _QWORD *v175;
  _QWORD *v176;
  _QWORD *v177;
  _QWORD *v179;
  uint64_t v180;
  char *__p;
  char *v182;
  char *v183;
  unsigned int v184;
  uint64_t v185;
  int v186;
  _BYTE v187[111];
  uint64_t v188;

  v7 = a1;
  v188 = *MEMORY[0x24BDAC8D0];
  if (a5)
    (***(void (****)(_QWORD, uint64_t, uint64_t, uint64_t, float))(a1 + 544))(*(_QWORD *)(a1 + 544), a4, a4 + 64, a1, *(float *)(a4 + 160));
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
  v9 = a2[2];
  if (!v9)
  {
    v11 = 0;
    __p = 0;
    v182 = 0;
    v183 = 0;
    v12 = (_QWORD *)*a2;
    v13 = 0;
    v175 = a2 + 1;
    if ((_QWORD *)*a2 == a2 + 1)
      goto LABEL_155;
    goto LABEL_9;
  }
  if (v9 >> 62)
    sub_22316E078();
  v10 = (char *)operator new(4 * v9);
  *a6 = v10;
  a6[1] = v10;
  a6[2] = &v10[4 * v9];
  if (v9 > 0x1555555555555555)
    sub_22316E078();
  v11 = (char *)operator new(12 * v9);
  __p = v11;
  v182 = v11;
  v183 = &v11[12 * v9];
  v12 = (_QWORD *)*a2;
  v13 = v11;
  v175 = a2 + 1;
  if ((_QWORD *)*a2 != a2 + 1)
  {
LABEL_9:
    v179 = (_QWORD *)(v7 + 16);
    v180 = v7;
    v176 = (_QWORD *)(v7 + 24);
    v177 = a6;
    v172 = (_QWORD *)(v7 + 400);
    v173 = (char *)(v7 + 144);
    v174 = (_QWORD *)(v7 + 424);
    v171 = v7 + 64;
    while (1)
    {
      v14 = (_QWORD *)((char *)v12 + 28);
      v15 = *(_QWORD *)((char *)v12 + 28);
      *(_DWORD *)v187 = a3;
      *(_QWORD *)&v187[4] = v15;
      *(_DWORD *)&v187[12] = *((_DWORD *)v12 + 9);
      v16 = sub_22351A45C(v176, (int *)v187);
      if (v16)
      {
        v17 = *((unsigned int *)v16 + 8);
        goto LABEL_94;
      }
      v7 = v180;
      v18 = *(unsigned int *)(v180 + 136);
      if (*(_QWORD *)(v180 + 48) == v18)
      {
        v19 = 0;
        LODWORD(v17) = -1;
        v21 = (char *)a6[1];
        v20 = a6[2];
        if ((unint64_t)v21 < v20)
          goto LABEL_95;
        goto LABEL_15;
      }
      v33 = *(_QWORD *)(v180 + 112);
      v34 = *(_QWORD *)(v180 + 120);
      if (v33 == v34)
      {
        v40 = *(_QWORD *)(v180 + 104);
        v184 = v40;
        v51 = v40;
        if (v18 <= v40)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 493, (uint64_t)"idx_block < block_storage_capacity_", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v7 = v180;
          v51 = *(_QWORD *)(v180 + 104);
        }
        v52 = *(_WORD *)(v7 + 448);
        v53 = *(_QWORD *)(v7 + 72);
        v54 = *(_QWORD *)(v7 + 80);
        v55 = ~((v54 - v53) >> 3) + 4 * (v54 - v53);
        if (v54 == v53)
          v55 = 0;
        if (v55 == *(_QWORD *)(v7 + 96) + v51)
        {
          sub_223A314E4(v171);
          v7 = v180;
          v53 = *(_QWORD *)(v180 + 72);
          v54 = *(_QWORD *)(v180 + 80);
        }
        if (v54 == v53)
        {
          v57 = 0;
        }
        else
        {
          v56 = *(_QWORD *)(v7 + 104) + *(_QWORD *)(v7 + 96);
          v57 = *(_QWORD *)(v53 + 8 * (v56 / 0x1F)) + 132 * (v56 % 0x1F);
        }
        v58 = *((_DWORD *)v12 + 9);
        *(_QWORD *)v57 = *v14;
        *(_DWORD *)(v57 + 8) = v58;
        *(_DWORD *)(v57 + 12) = a3;
        *(_WORD *)(v57 + 16) = v52;
        *(_BYTE *)(v57 + 20) = 0;
        *(_WORD *)(v57 + 18) = v52 * v52;
        *(_QWORD *)&v59 = -1;
        *((_QWORD *)&v59 + 1) = -1;
        *(_OWORD *)(v57 + 24) = v59;
        *(_OWORD *)(v57 + 40) = v59;
        *(_OWORD *)(v57 + 56) = v59;
        *(_OWORD *)(v57 + 72) = v59;
        *(_OWORD *)(v57 + 88) = v59;
        *(_OWORD *)(v57 + 104) = v59;
        *(_OWORD *)(v57 + 116) = v59;
        ++*(_QWORD *)(v7 + 104);
        v35 = v40;
      }
      else
      {
        v184 = *(_DWORD *)(v34 - 4);
        v35 = v184;
        *(_QWORD *)(v180 + 120) = v34 - 4;
        v36 = *(_WORD *)(v180 + 448);
        *(_QWORD *)&v37 = -1;
        *((_QWORD *)&v37 + 1) = -1;
        *(_OWORD *)&v187[95] = v37;
        *(_OWORD *)&v187[67] = v37;
        *(_OWORD *)&v187[83] = v37;
        *(_OWORD *)&v187[35] = v37;
        *(_OWORD *)&v187[51] = v37;
        *(_OWORD *)&v187[3] = v37;
        *(_OWORD *)&v187[19] = v37;
        v38 = *(_QWORD *)(*(_QWORD *)(v180 + 72) + 8 * ((*(_QWORD *)(v180 + 96) + v35) / 0x1FuLL))
            + 132 * ((*(_QWORD *)(v180 + 96) + v35) % 0x1FuLL);
        v39 = *((_DWORD *)v12 + 9);
        *(_QWORD *)v38 = *v14;
        *(_DWORD *)(v38 + 8) = v39;
        *(_DWORD *)(v38 + 12) = a3;
        *(_WORD *)(v38 + 16) = v36;
        *(_WORD *)(v38 + 18) = v36 * v36;
        *(_BYTE *)(v38 + 20) = 0;
        *(_OWORD *)(v38 + 53) = *(_OWORD *)&v187[32];
        *(_OWORD *)(v38 + 37) = *(_OWORD *)&v187[16];
        *(_OWORD *)(v38 + 21) = *(_OWORD *)v187;
        *(_OWORD *)(v38 + 116) = *(_OWORD *)&v187[95];
        *(_OWORD *)(v38 + 101) = *(_OWORD *)&v187[80];
        *(_OWORD *)(v38 + 85) = *(_OWORD *)&v187[64];
        *(_OWORD *)(v38 + 69) = *(_OWORD *)&v187[48];
        LODWORD(v40) = v35;
      }
      v60 = v33 != v34;
      v61 = *(_QWORD *)(v7 + 96) + v35;
      v62 = *(_QWORD *)(*(_QWORD *)(v7 + 72) + 8 * (v61 / 0x1F));
      v63 = v61 % 0x1F;
      v64 = v62 + 132 * (v61 % 0x1F);
      *(_DWORD *)(v64 + 24) = v40;
      v65 = (_DWORD *)(v64 + 24);
      sub_223A21630(v173, v64, v60);
      *(_DWORD *)v187 = a3;
      *(_QWORD *)&v187[4] = *(_QWORD *)((char *)v12 + 28);
      *(_DWORD *)&v187[12] = *((_DWORD *)v12 + 9);
      sub_223A31A84((uint64_t)v176, (int *)v187, v187, &v184);
      v66 = v180;
      if (*(unsigned __int8 *)(v180 + 450) - 1 <= 1)
      {
        v67 = *(unsigned __int16 *)(v180 + 448);
        v68 = v62 + 132 * v63;
        v71 = *(_DWORD *)(v68 + 12);
        v69 = (int *)(v68 + 12);
        v70 = v71;
        *(_DWORD *)v187 = *(_DWORD *)v64 + v67;
        *(_QWORD *)&v187[4] = *(_QWORD *)(v64 + 4);
        v72 = sub_223A31E2C(v179, (uint64_t *)v187, v71);
        if (v72)
        {
          *(_DWORD *)(v64 + 28) = v73;
          *((_DWORD *)v72 + 20) = *v65;
        }
        LODWORD(v185) = *(_DWORD *)v64 - v67;
        HIDWORD(v185) = *(_DWORD *)(v64 + 4);
        v186 = *(_DWORD *)(v64 + 8);
        v74 = sub_223A31E2C(v179, &v185, v70);
        if (v74)
        {
          *(_DWORD *)(v64 + 80) = v75;
          *((_DWORD *)v74 + 7) = *v65;
        }
        v76 = *(unsigned __int16 *)(v180 + 448);
        v77 = *v69;
        *(_DWORD *)v187 = *(_DWORD *)v64;
        *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) + v76;
        *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8);
        v78 = sub_223A31E2C(v179, (uint64_t *)v187, v77);
        if (v78)
        {
          *(_DWORD *)(v64 + 32) = v79;
          *((_DWORD *)v78 + 19) = *v65;
        }
        LODWORD(v185) = *(_DWORD *)v64;
        HIDWORD(v185) = *(_DWORD *)(v64 + 4) - v76;
        v186 = *(_DWORD *)(v64 + 8);
        v80 = sub_223A31E2C(v179, &v185, v77);
        if (v80)
        {
          *(_DWORD *)(v64 + 76) = v81;
          *((_DWORD *)v80 + 8) = *v65;
        }
        v82 = *(unsigned __int16 *)(v180 + 448);
        v83 = *v69;
        *(_DWORD *)v187 = *(_DWORD *)v64 + v82;
        *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) + v82;
        *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8);
        v84 = sub_223A31E2C(v179, (uint64_t *)v187, v83);
        if (v84)
        {
          *(_DWORD *)(v64 + 36) = v85;
          *((_DWORD *)v84 + 18) = *v65;
        }
        LODWORD(v185) = *(_DWORD *)v64 - v82;
        HIDWORD(v185) = *(_DWORD *)(v64 + 4) - v82;
        v186 = *(_DWORD *)(v64 + 8);
        v86 = sub_223A31E2C(v179, &v185, v83);
        if (v86)
        {
          *(_DWORD *)(v64 + 72) = v87;
          *((_DWORD *)v86 + 9) = *v65;
        }
        v88 = *(unsigned __int16 *)(v180 + 448);
        v89 = *v69;
        *(_QWORD *)v187 = *(_QWORD *)v64;
        *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v88;
        v90 = sub_223A31E2C(v179, (uint64_t *)v187, v89);
        if (v90)
        {
          *(_DWORD *)(v64 + 40) = v91;
          *((_DWORD *)v90 + 17) = *v65;
        }
        v185 = *(_QWORD *)v64;
        v186 = *(_DWORD *)(v64 + 8) - v88;
        v92 = sub_223A31E2C(v179, &v185, v89);
        if (v92)
        {
          *(_DWORD *)(v64 + 68) = v93;
          *((_DWORD *)v92 + 10) = *v65;
        }
        v94 = *(unsigned __int16 *)(v180 + 448);
        v95 = *v69;
        *(_DWORD *)v187 = *(_DWORD *)v64 + v94;
        *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4);
        *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v94;
        v96 = sub_223A31E2C(v179, (uint64_t *)v187, v95);
        if (v96)
        {
          *(_DWORD *)(v64 + 44) = v97;
          *((_DWORD *)v96 + 16) = *v65;
        }
        LODWORD(v185) = *(_DWORD *)v64 - v94;
        HIDWORD(v185) = *(_DWORD *)(v64 + 4);
        v186 = *(_DWORD *)(v64 + 8) - v94;
        v98 = sub_223A31E2C(v179, &v185, v95);
        if (v98)
        {
          *(_DWORD *)(v64 + 64) = v99;
          *((_DWORD *)v98 + 11) = *v65;
        }
        v100 = *(unsigned __int16 *)(v180 + 448);
        v101 = *v69;
        *(_DWORD *)v187 = *(_DWORD *)v64;
        *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) + v100;
        *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v100;
        v102 = sub_223A31E2C(v179, (uint64_t *)v187, v101);
        if (v102)
        {
          *(_DWORD *)(v64 + 48) = v103;
          *((_DWORD *)v102 + 15) = *v65;
        }
        LODWORD(v185) = *(_DWORD *)v64;
        HIDWORD(v185) = *(_DWORD *)(v64 + 4) - v100;
        v186 = *(_DWORD *)(v64 + 8) - v100;
        v104 = sub_223A31E2C(v179, &v185, v101);
        if (v104)
        {
          *(_DWORD *)(v64 + 60) = v105;
          *((_DWORD *)v104 + 12) = *v65;
        }
        v106 = *(unsigned __int16 *)(v180 + 448);
        v107 = *v69;
        *(_DWORD *)v187 = *(_DWORD *)v64 + v106;
        *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) + v106;
        *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v106;
        v108 = sub_223A31E2C(v179, (uint64_t *)v187, v107);
        if (v108)
        {
          *(_DWORD *)(v64 + 52) = v109;
          *((_DWORD *)v108 + 14) = *v65;
        }
        LODWORD(v185) = *(_DWORD *)v64 - v106;
        HIDWORD(v185) = *(_DWORD *)(v64 + 4) - v106;
        v186 = *(_DWORD *)(v64 + 8) - v106;
        v110 = sub_223A31E2C(v179, &v185, v107);
        if (v110)
        {
          *(_DWORD *)(v64 + 56) = v111;
          *((_DWORD *)v110 + 13) = *v65;
        }
        v66 = v180;
        if (*(_BYTE *)(v180 + 450) == 2)
          break;
      }
      v112 = *(_QWORD **)(v66 + 392);
      v113 = v172;
      v114 = a3;
      if (v112 != v172)
        goto LABEL_148;
LABEL_82:
      v115 = *v174;
      if (*v174)
      {
        v116 = v174;
        do
        {
          v117 = *(_DWORD *)(v115 + 32);
          v118 = v117 < (int)a3;
          if (v117 >= (int)a3)
            v119 = (uint64_t *)v115;
          else
            v119 = (uint64_t *)(v115 + 8);
          if (!v118)
            v116 = (_QWORD *)v115;
          v115 = *v119;
        }
        while (*v119);
        if (v116 != v174 && *((_DWORD *)v116 + 8) <= (signed int)a3)
          (*(void (**)(_QWORD, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v116[5] + 16))(v116[5], (uint64_t)v12 + 28, a3, v184);
      }
      v17 = v184;
LABEL_94:
      v7 = v180;
      v19 = *(_QWORD *)(*(_QWORD *)(v180 + 72) + 8 * ((*(_QWORD *)(v180 + 96) + v17) / 0x1FuLL))
          + 132 * ((*(_QWORD *)(v180 + 96) + v17) % 0x1FuLL);
      v21 = (char *)a6[1];
      v20 = a6[2];
      if ((unint64_t)v21 < v20)
      {
LABEL_95:
        *(_DWORD *)v21 = v17;
        v177[1] = v21 + 4;
        a6 = v177;
        if (!v19)
          goto LABEL_38;
        goto LABEL_96;
      }
LABEL_15:
      v22 = (char *)*a6;
      v23 = (uint64_t)&v21[-*a6];
      v24 = v23 >> 2;
      v25 = (v23 >> 2) + 1;
      if (v25 >> 62)
        sub_22316E078();
      v26 = v20 - (_QWORD)v22;
      if (v26 >> 1 > v25)
        v25 = v26 >> 1;
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFFCLL)
        v27 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v27 = v25;
      if (v27)
      {
        if (v27 >> 62)
          goto LABEL_161;
        v28 = operator new(4 * v27);
        v29 = &v28[4 * v24];
        *v29 = v17;
        v30 = (uint64_t)(v29 + 1);
        v31 = v21 - v22;
        if (v21 == v22)
        {
LABEL_29:
          v7 = v180;
          goto LABEL_35;
        }
      }
      else
      {
        v28 = 0;
        v29 = (_DWORD *)(4 * v24);
        *(_DWORD *)(4 * v24) = v17;
        v30 = 4 * v24 + 4;
        v31 = v21 - v22;
        if (v21 == v22)
          goto LABEL_29;
      }
      v32 = v31 - 4;
      if (v32 < 0x2C)
      {
        v7 = v180;
        do
        {
LABEL_34:
          v49 = *((_DWORD *)v21 - 1);
          v21 -= 4;
          *--v29 = v49;
        }
        while (v21 != v22);
        goto LABEL_35;
      }
      v41 = v21 - v28 - v23;
      v7 = v180;
      if (v41 < 0x20)
        goto LABEL_34;
      v42 = (v32 >> 2) + 1;
      v43 = 4 * (v42 & 0x7FFFFFFFFFFFFFF8);
      v44 = &v21[-v43];
      v29 = (_DWORD *)((char *)v29 - v43);
      v45 = &v28[4 * v24 - 16];
      v46 = v21 - 16;
      v47 = v42 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v48 = *(_OWORD *)v46;
        *(v45 - 1) = *((_OWORD *)v46 - 1);
        *v45 = v48;
        v45 -= 2;
        v46 -= 32;
        v47 -= 8;
      }
      while (v47);
      v21 = v44;
      if (v42 != (v42 & 0x7FFFFFFFFFFFFFF8))
        goto LABEL_34;
LABEL_35:
      *v177 = v29;
      v177[1] = v30;
      v177[2] = &v28[4 * v27];
      if (v22)
        operator delete(v22);
      v177[1] = v30;
      a6 = v177;
      if (!v19)
      {
LABEL_38:
        v50 = (_QWORD *)v12[1];
        if (!v50)
          goto LABEL_116;
        goto LABEL_114;
      }
LABEL_96:
      v120 = v182;
      if (v182 < v183)
      {
        v121 = *v14;
        *((_DWORD *)v182 + 2) = *((_DWORD *)v12 + 9);
        *(_QWORD *)v182 = v121;
        v122 = v182 + 12;
        goto LABEL_113;
      }
      v123 = 0xAAAAAAAAAAAAAAABLL * ((v182 - __p) >> 2) + 1;
      if (v123 > 0x1555555555555555)
        sub_22316E078();
      if (0x5555555555555556 * ((v183 - __p) >> 2) > v123)
        v123 = 0x5555555555555556 * ((v183 - __p) >> 2);
      if (0xAAAAAAAAAAAAAAABLL * ((v183 - __p) >> 2) >= 0xAAAAAAAAAAAAAAALL)
        v124 = 0x1555555555555555;
      else
        v124 = v123;
      if (v124)
      {
        if (v124 > 0x1555555555555555)
LABEL_161:
          sub_223174E94();
        v125 = (char *)operator new(12 * v124);
      }
      else
      {
        v125 = 0;
      }
      v126 = *v14;
      v127 = &v125[4 * ((v182 - __p) >> 2)];
      *((_DWORD *)v127 + 2) = *((_DWORD *)v12 + 9);
      *(_QWORD *)v127 = v126;
      v128 = v127;
      if (v182 == __p)
      {
        v7 = v180;
        v122 = v127 + 12;
        __p = &v125[4 * ((v182 - __p) >> 2)];
        v183 = &v125[12 * v124];
        if (v182)
          goto LABEL_112;
      }
      else
      {
        v7 = v180;
        do
        {
          v129 = *(_QWORD *)(v120 - 12);
          v120 -= 12;
          v130 = *((_DWORD *)v120 + 2);
          *(_QWORD *)(v128 - 12) = v129;
          v128 -= 12;
          *((_DWORD *)v128 + 2) = v130;
        }
        while (v120 != __p);
        v120 = __p;
        v122 = v127 + 12;
        __p = v128;
        v183 = &v125[12 * v124];
        if (v120)
LABEL_112:
          operator delete(v120);
      }
LABEL_113:
      v182 = v122;
      v50 = (_QWORD *)v12[1];
      if (!v50)
      {
        do
        {
LABEL_116:
          v131 = (_QWORD *)v12[2];
          v132 = *v131 == (_QWORD)v12;
          v12 = v131;
        }
        while (!v132);
        goto LABEL_10;
      }
      do
      {
LABEL_114:
        v131 = v50;
        v50 = (_QWORD *)*v50;
      }
      while (v50);
LABEL_10:
      v12 = v131;
      if (v131 == v175)
      {
        v13 = __p;
        v11 = v182;
        goto LABEL_155;
      }
    }
    v133 = *(unsigned __int16 *)(v180 + 448);
    v134 = *v69;
    *(_DWORD *)v187 = *(_DWORD *)v64 - v133;
    *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) + v133;
    *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v133;
    v135 = sub_223A31E2C(v179, (uint64_t *)v187, v134);
    if (v135)
    {
      *(_DWORD *)(v64 + 128) = v136;
      *((_DWORD *)v135 + 21) = *v65;
    }
    LODWORD(v185) = *(_DWORD *)v64 + v133;
    HIDWORD(v185) = *(_DWORD *)(v64 + 4) - v133;
    v186 = *(_DWORD *)(v64 + 8) - v133;
    v137 = sub_223A31E2C(v179, &v185, v134);
    if (v137)
    {
      *(_DWORD *)(v64 + 84) = v138;
      *((_DWORD *)v137 + 32) = *v65;
    }
    v139 = *(unsigned __int16 *)(v180 + 448);
    v140 = *v69;
    *(_DWORD *)v187 = *(_DWORD *)v64 - v139;
    *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4);
    *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v139;
    v141 = sub_223A31E2C(v179, (uint64_t *)v187, v140);
    if (v141)
    {
      *(_DWORD *)(v64 + 124) = v142;
      *((_DWORD *)v141 + 22) = *v65;
    }
    LODWORD(v185) = *(_DWORD *)v64 + v139;
    HIDWORD(v185) = *(_DWORD *)(v64 + 4);
    v186 = *(_DWORD *)(v64 + 8) - v139;
    v143 = sub_223A31E2C(v179, &v185, v140);
    if (v143)
    {
      *(_DWORD *)(v64 + 88) = v144;
      *((_DWORD *)v143 + 31) = *v65;
    }
    v145 = *(unsigned __int16 *)(v180 + 448);
    v146 = *v69;
    *(_DWORD *)v187 = *(_DWORD *)v64 - v145;
    *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) - v145;
    *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v145;
    v147 = sub_223A31E2C(v179, (uint64_t *)v187, v146);
    if (v147)
    {
      *(_DWORD *)(v64 + 112) = v148;
      *((_DWORD *)v147 + 25) = *v65;
    }
    LODWORD(v185) = *(_DWORD *)v64 + v145;
    HIDWORD(v185) = *(_DWORD *)(v64 + 4) + v145;
    v186 = *(_DWORD *)(v64 + 8) - v145;
    v149 = sub_223A31E2C(v179, &v185, v146);
    if (v149)
    {
      *(_DWORD *)(v64 + 100) = v150;
      *((_DWORD *)v149 + 28) = *v65;
    }
    v151 = *(unsigned __int16 *)(v180 + 448);
    v152 = *v69;
    *(_DWORD *)v187 = *(_DWORD *)v64;
    *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) - v151;
    *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v151;
    v153 = sub_223A31E2C(v179, (uint64_t *)v187, v152);
    if (v153)
    {
      *(_DWORD *)(v64 + 116) = v154;
      *((_DWORD *)v153 + 24) = *v65;
    }
    LODWORD(v185) = *(_DWORD *)v64;
    HIDWORD(v185) = *(_DWORD *)(v64 + 4) + v151;
    v186 = *(_DWORD *)(v64 + 8) - v151;
    v155 = sub_223A31E2C(v179, &v185, v152);
    if (v155)
    {
      *(_DWORD *)(v64 + 96) = v156;
      *((_DWORD *)v155 + 29) = *v65;
    }
    v157 = *(unsigned __int16 *)(v180 + 448);
    v158 = *v69;
    *(_DWORD *)v187 = *(_DWORD *)v64 + v157;
    *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) - v157;
    *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8) + v157;
    v159 = sub_223A31E2C(v179, (uint64_t *)v187, v158);
    if (v159)
    {
      *(_DWORD *)(v64 + 120) = v160;
      *((_DWORD *)v159 + 23) = *v65;
    }
    LODWORD(v185) = *(_DWORD *)v64 - v157;
    HIDWORD(v185) = *(_DWORD *)(v64 + 4) + v157;
    v186 = *(_DWORD *)(v64 + 8) - v157;
    v161 = sub_223A31E2C(v179, &v185, v158);
    if (v161)
    {
      *(_DWORD *)(v64 + 92) = v162;
      *((_DWORD *)v161 + 30) = *v65;
    }
    v163 = *(unsigned __int16 *)(v180 + 448);
    v164 = *v69;
    *(_DWORD *)v187 = *(_DWORD *)v64 + v163;
    *(_DWORD *)&v187[4] = *(_DWORD *)(v64 + 4) - v163;
    *(_DWORD *)&v187[8] = *(_DWORD *)(v64 + 8);
    v165 = sub_223A31E2C(v179, (uint64_t *)v187, v164);
    if (v165)
    {
      *(_DWORD *)(v64 + 104) = v166;
      *((_DWORD *)v165 + 27) = *v65;
    }
    LODWORD(v185) = *(_DWORD *)v64 - v163;
    HIDWORD(v185) = *(_DWORD *)(v64 + 4) + v163;
    v186 = *(_DWORD *)(v64 + 8);
    v167 = sub_223A31E2C(v179, &v185, v164);
    if (v167)
    {
      *(_DWORD *)(v64 + 108) = v168;
      *((_DWORD *)v167 + 26) = *v65;
    }
    v112 = *(_QWORD **)(v180 + 392);
    v113 = v172;
    v114 = a3;
    if (v112 == v172)
      goto LABEL_82;
    do
    {
LABEL_148:
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v112[4] + 16))(v112[4], (uint64_t)v12 + 28, v114, v184);
      v169 = (_QWORD *)v112[1];
      if (v169)
      {
        do
        {
          v170 = v169;
          v169 = (_QWORD *)*v169;
        }
        while (v169);
      }
      else
      {
        do
        {
          v170 = (_QWORD *)v112[2];
          v132 = *v170 == (_QWORD)v112;
          v112 = v170;
        }
        while (!v132);
      }
      v112 = v170;
    }
    while (v170 != v113);
    goto LABEL_82;
  }
LABEL_155:
  *(_QWORD *)v187 = 0xAAAAAAAAAAAAAAABLL * ((v11 - v13) >> 2);
  *(_QWORD *)&v187[8] = v13;
  if (v11
    && !v13
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v7 + 544) + 64))(*(_QWORD *)(v7 + 544), v187);
  if (__p)
    operator delete(__p);
}

void sub_223A2FC70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  void *v22;

  if (__p)
  {
    operator delete(__p);
    v22 = *(void **)a16;
    if (!*(_QWORD *)a16)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v22 = *(void **)a16;
    if (!*(_QWORD *)a16)
      goto LABEL_3;
  }
  *(_QWORD *)(a16 + 8) = v22;
  operator delete(v22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223A2FCDC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 544) + 16))(*(_QWORD *)(a1 + 544));
}

uint64_t sub_223A2FCEC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 544) + 24))(*(_QWORD *)(a1 + 544));
}

uint64_t *sub_223A2FCFC(uint64_t a1)
{
  uint64_t *result;
  unint64_t v3;
  uint64_t *v4;
  uint64_t **v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;

  sub_223A2EB28(a1 + 16);
  sub_223CF61B8((_QWORD *)(a1 + 456));
  result = (uint64_t *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 544) + 40))(*(_QWORD *)(a1 + 544));
  v3 = a1 + 8;
  v4 = *(uint64_t **)(a1 + 400);
  if (v4)
  {
    while (1)
    {
      while (1)
      {
        v6 = (uint64_t **)v4;
        v7 = v4[4];
        if (v7 <= v3)
          break;
        v4 = *v6;
        v5 = v6;
        if (!*v6)
          goto LABEL_8;
      }
      if (v7 >= v3)
        break;
      v4 = v6[1];
      if (!v4)
      {
        v5 = v6 + 1;
        goto LABEL_8;
      }
    }
  }
  else
  {
    v5 = (uint64_t **)(a1 + 400);
    v6 = (uint64_t **)(a1 + 400);
LABEL_8:
    v8 = (uint64_t *)operator new(0x28uLL);
    v8[4] = v3;
    *v8 = 0;
    v8[1] = 0;
    v8[2] = (uint64_t)v6;
    *v5 = v8;
    v9 = **(_QWORD **)(a1 + 392);
    if (v9)
    {
      *(_QWORD *)(a1 + 392) = v9;
      v10 = *v5;
    }
    else
    {
      v10 = v8;
    }
    result = sub_2231A9A8C(*(uint64_t **)(a1 + 400), v10);
    ++*(_QWORD *)(a1 + 408);
  }
  return result;
}

uint64_t *sub_223A2FDCC(uint64_t a1, int *a2, int a3, int a4)
{
  return sub_223CF2F60((uint64_t *)(a1 + 456), a2, a3, a4);
}

void sub_223A2FDD4(uint64_t a1, int *a2, int a3)
{
  sub_223CF3F8C(a1 + 456, a2, a3);
}

uint64_t *sub_223A2FDDC(uint64_t a1, int *a2, int a3, int a4)
{
  return sub_223CF2F60((uint64_t *)(a1 + 448), a2, a3, a4);
}

void sub_223A2FDE4(uint64_t a1, int *a2, int a3)
{
  sub_223CF3F8C(a1 + 448, a2, a3);
}

uint64_t *sub_223A2FDEC(uint64_t a1)
{
  return sub_223A2FCFC(a1 - 16);
}

uint64_t sub_223A2FDF4(uint64_t a1)
{
  sub_22369E4C4(a1 + 200);
  sub_22369E4C4(a1 + 152);
  sub_22369E4C4(a1 + 104);
  sub_223A2FE64(a1 + 56);
  sub_22369E4C4(a1 + 8);
  return a1;
}

void sub_223A2FE40(uint64_t a1)
{
  sub_223A2E848(a1);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223A2FE64(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  if (v3 == v2)
  {
    v3 = *(void ***)(a1 + 8);
    *(_QWORD *)(a1 + 40) = 0;
    v9 = 0;
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = &v2[v4 >> 4];
    v6 = (uint64_t)*v5 + 248 * (v4 & 0xF);
    v7 = *(uint64_t *)((char *)v2 + (((*(_QWORD *)(a1 + 40) + v4) >> 1) & 0x7FFFFFFFFFFFFFF8))
       + 248 * ((*(_DWORD *)(a1 + 40) + (int)v4) & 0xF);
    if (v6 != v7)
    {
      do
      {
        v6 = sub_223A23BA4(v6) + 248;
        if (v6 - (_QWORD)*v5 == 3968)
        {
          v8 = (uint64_t)v5[1];
          ++v5;
          v6 = v8;
        }
      }
      while (v6 != v7);
      v2 = *(void ***)(a1 + 8);
      v3 = *(void ***)(a1 + 16);
    }
    *(_QWORD *)(a1 + 40) = 0;
    v9 = (char *)v3 - (char *)v2;
    if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
    {
      do
      {
        operator delete(*v2);
        v3 = *(void ***)(a1 + 16);
        v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
        *(_QWORD *)(a1 + 8) = v2;
        v9 = (char *)v3 - (char *)v2;
      }
      while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
    }
  }
  v10 = v9 >> 3;
  if (v10 == 1)
  {
    v11 = 8;
    goto LABEL_15;
  }
  if (v10 == 2)
  {
    v11 = 16;
LABEL_15:
    *(_QWORD *)(a1 + 32) = v11;
  }
  if (v2 != v3)
  {
    do
    {
      v12 = *v2++;
      operator delete(v12);
    }
    while (v2 != v3);
    v14 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    if (v13 != v14)
      *(_QWORD *)(a1 + 16) = v13 + ((v14 - v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_223A2FFC8(uint64_t a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  *(_QWORD *)(a1 + 40) = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(_QWORD *)(a1 + 8) + 8);
      *(_QWORD *)(a1 + 8) = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 15;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    v6 = 31;
LABEL_7:
    *(_QWORD *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    v9 = *(_QWORD *)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    if (v8 != v9)
      *(_QWORD *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_223A3008C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t **v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int v30;
  __int16 v31;
  uint64_t v32;

  *(_QWORD *)a1 = off_24EC63A38;
  *(_QWORD *)(a1 + 8) = off_24EC63A88;
  v7 = a1 + 8;
  *(_QWORD *)(a1 + 16) = &off_24EC5D950;
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v10;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 40);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 8);
    v12 = *(_QWORD *)(a1 + 32);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
        v11 %= v12;
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(_QWORD *)(v8 + 8 * v11) = a1 + 40;
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  v13 = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a2 + 168) = 0;
  *(_QWORD *)(a2 + 176) = 0;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a2 + 200) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a2 + 216) = 0;
  *(_QWORD *)(a2 + 224) = 0;
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 256);
  *(_OWORD *)(a2 + 248) = 0u;
  *(_OWORD *)(a2 + 232) = 0u;
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 304);
  *(_OWORD *)(a2 + 296) = 0u;
  *(_OWORD *)(a2 + 280) = 0u;
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a2 + 312) = 0;
  *(_QWORD *)(a2 + 320) = 0;
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 352);
  *(_OWORD *)(a2 + 344) = 0u;
  *(_OWORD *)(a2 + 328) = 0u;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a2 + 360) = 0;
  *(_QWORD *)(a2 + 368) = 0;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 376);
  v14 = (uint64_t **)(a1 + 400);
  v15 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 400) = v15;
  v16 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 408) = v16;
  if (v16)
  {
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(a2 + 376) = a2 + 384;
    *(_QWORD *)(a2 + 384) = 0;
    *(_QWORD *)(a2 + 392) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 392) = v14;
  }
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 400);
  v17 = a1 + 424;
  v18 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 424) = v18;
  v19 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 432) = v19;
  if (v19)
  {
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(a2 + 400) = a2 + 408;
    *(_QWORD *)(a2 + 408) = 0;
    *(_QWORD *)(a2 + 416) = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 416) = v17;
  }
  v20 = *(_QWORD *)(a2 + 424);
  *(_DWORD *)(a1 + 447) = *(_DWORD *)(a2 + 431);
  *(_QWORD *)(a1 + 440) = v20;
  *(_QWORD *)a1 = &off_24EC5D978;
  *(_QWORD *)(a1 + 8) = &unk_24EC5D9C8;
  *(_QWORD *)(a1 + 16) = &unk_24EC5D9F8;
  *(_WORD *)(a1 + 452) = a3;
  sub_223A305D4(a1 + 456, a3);
  *(_QWORD *)(a1 + 544) = 0;
  v21 = *(unsigned __int16 *)(a1 + 452);
  if ((v21 & (v21 - 1)) != 0)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockStore.h", 253, (uint64_t)"math::IsPowerOfTwo(chunk_size_)", 31, (uint64_t)"Invalid chunk size", 18, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_34;
    }
    v21 = *(unsigned __int16 *)(a1 + 452);
  }
  if (*(unsigned __int16 *)(a1 + 448) >= v21
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockStore.h", 254, (uint64_t)"Base::BlockSize() < chunk_size_", 31, (uint64_t)"A block must be smaller than a chunk", 36, (void (*)(void **))sub_22457406C))
  {
LABEL_34:
    abort();
  }
  v22 = *a4;
  if (*a4)
  {
    *a4 = 0;
    v23 = *(_QWORD *)(a1 + 544);
    *(_QWORD *)(a1 + 544) = v22;
    if (!v23)
      goto LABEL_21;
    goto LABEL_20;
  }
  v30 = *(_DWORD *)(a1 + 440);
  v31 = *(_WORD *)(a1 + 448);
  v32 = operator new();
  *(_QWORD *)v32 = off_24EC5DA20;
  *(_DWORD *)(v32 + 8) = 1062207488;
  *(_DWORD *)(v32 + 12) = v30;
  *(_WORD *)(v32 + 16) = v31;
  *(_WORD *)(v32 + 18) = a3;
  *(_QWORD *)(v32 + 32) = 0;
  *(_QWORD *)(v32 + 24) = v32 + 32;
  *(_QWORD *)(v32 + 56) = 0;
  *(_QWORD *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = v32 + 56;
  *(_QWORD *)(v32 + 80) = 0;
  *(_QWORD *)(v32 + 64) = 0;
  *(_QWORD *)(v32 + 72) = v32 + 80;
  *(_QWORD *)(v32 + 112) = 0;
  *(_QWORD *)(v32 + 104) = 0;
  *(_QWORD *)(v32 + 88) = 0;
  *(_QWORD *)(v32 + 96) = v32 + 104;
  *(_QWORD *)(v32 + 120) = 0xFFFFFFFF00000000;
  v23 = *(_QWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 544) = v32;
  if (v23)
LABEL_20:
    (*(void (**)(uint64_t))(*(_QWORD *)v23 + 56))(v23);
LABEL_21:
  v24 = *v14;
  v25 = (uint64_t **)(a1 + 400);
  if (*v14)
  {
    while (1)
    {
      while (1)
      {
        v25 = (uint64_t **)v24;
        v26 = v24[4];
        if (v26 <= v7)
          break;
        v24 = *v25;
        v14 = v25;
        if (!*v25)
          goto LABEL_28;
      }
      if (v26 >= v7)
        break;
      v24 = v25[1];
      if (!v24)
      {
        v14 = v25 + 1;
        goto LABEL_28;
      }
    }
  }
  else
  {
LABEL_28:
    v27 = (uint64_t *)operator new(0x28uLL);
    v27[4] = v7;
    *v27 = 0;
    v27[1] = 0;
    v27[2] = (uint64_t)v25;
    *v14 = v27;
    v28 = **(_QWORD **)(a1 + 392);
    if (v28)
    {
      *(_QWORD *)(a1 + 392) = v28;
      v27 = *v14;
    }
    sub_2231A9A8C(*(uint64_t **)(a1 + 400), v27);
    ++*(_QWORD *)(a1 + 408);
  }
  return a1;
}

void sub_223A30588(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + 544);
  *(_QWORD *)(v1 + 544) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 56))(v5);
  sub_223A306D4(v3);
  sub_223A2E848(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_223A305D4(uint64_t a1, int a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 72) = 1065353216;
  *(_WORD *)(a1 + 80) = a2;
  if (!a2
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/ChunkBlockBundleIndex.h", 37, (uint64_t)"chunk_size > 0", 14, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  return a1;
}

void sub_223A30668(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;

  v4 = *(_QWORD **)(v1 + 56);
  if (v4)
  {
    do
    {
      v6 = (_QWORD *)*v4;
      v7 = (_QWORD *)v4[5];
      if (v7)
      {
        do
        {
          v8 = (_QWORD *)*v7;
          operator delete(v7);
          v7 = v8;
        }
        while (v8);
      }
      v9 = (void *)v4[3];
      v4[3] = 0;
      if (v9)
        operator delete(v9);
      operator delete(v4);
      v4 = v6;
    }
    while (v6);
  }
  v5 = *v2;
  *v2 = 0;
  if (v5)
    operator delete(v5);
  sub_223A307DC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223A306D4(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;

  v2 = *(_QWORD **)(a1 + 56);
  if (v2)
  {
    do
    {
      v5 = (_QWORD *)*v2;
      v6 = (_QWORD *)v2[5];
      if (v6)
      {
        do
        {
          v7 = (_QWORD *)*v6;
          operator delete(v6);
          v6 = v7;
        }
        while (v7);
      }
      v8 = (void *)v2[3];
      v2[3] = 0;
      if (v8)
        operator delete(v8);
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v3)
    operator delete(v3);
  return sub_223A307DC(a1);
}

void sub_223A30758(_QWORD *a1)
{
  sub_223A2E9D4(a1);
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223A3077C(uint64_t a1)
{
  return sub_223A2E9D4((_QWORD *)(a1 - 8));
}

void sub_223A30784(uint64_t a1)
{
  sub_223A2E9D4((_QWORD *)(a1 - 8));
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223A307AC(uint64_t a1)
{
  return sub_223A2E9D4((_QWORD *)(a1 - 16));
}

void sub_223A307B4(uint64_t a1)
{
  sub_223A2E9D4((_QWORD *)(a1 - 16));
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223A307DC(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v7;
  void *v8;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v5 = (_QWORD *)*v2;
      v6 = (_QWORD **)v2[6];
      if (v6)
      {
        do
        {
          v7 = *v6;
          sub_223198030((uint64_t)(v6 + 4), v6[5]);
          operator delete(v6);
          v6 = (_QWORD **)v7;
        }
        while (v7);
      }
      v8 = (void *)v2[4];
      v2[4] = 0;
      if (v8)
        operator delete(v8);
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

float sub_223A30874(uint64_t a1, uint64_t a2, uint32x2_t *a3, uint64_t a4, float a5, double a6, float32x4_t a7, double a8, float32x4_t a9, float32x4_t a10, float32x2_t a11)
{
  uint64_t v12;
  unsigned int v13;
  float32x2_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float v17;
  unsigned int v18;
  BOOL v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  float result;
  float32x2_t v25;
  int8x16_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  unsigned int v30;
  unint64_t v31;
  _QWORD **v32;
  char v33;
  _QWORD *v34;
  unint64_t v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  _QWORD *v47;
  _QWORD *v48;
  BOOL v49;
  uint64_t v50;
  uint64_t j;
  uint64_t v52;
  uint64_t i;
  _QWORD **v54;
  _QWORD *v55;
  void *v56;
  uint64_t **v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD **v66;
  int v67[3];
  int8x8_t v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  void *__p;
  _QWORD **v73;

  v12 = a1;
  v13 = *(_DWORD *)(a1 + 124);
  if (v13 == -1)
  {
    *(uint32x2_t *)a7.f32 = a3[4];
    v14 = (float32x2_t)a3[5];
    *(float32x2_t *)a9.f32 = vadd_f32(vmul_f32(*(float32x2_t *)a7.f32, 0), v14);
    v15 = vmulq_n_f32(a9, a5);
    *(float32x2_t *)a7.f32 = vadd_f32(v14, vmul_f32(*(float32x2_t *)a7.f32, vcvt_f32_u32(a3[11])));
    v16 = vmulq_n_f32(a7, a5);
    a7.i16[0] = *(_WORD *)(a1 + 16);
    v17 = 1.0 / (float)(*(float *)(a1 + 12) * (float)a7.u32[0]);
    v16.i64[0] = vsubq_f32(v16, v15).u64[0];
    v13 = 2 * (float)(v17 * ceilf(v16.f32[1])) * (float)(v17 * ceilf(v16.f32[0]));
    *(_DWORD *)(a1 + 124) = v13;
  }
  v18 = *(_DWORD *)(a4 + 136);
  v19 = v18 >= v13;
  v20 = v18 - v13;
  if (v19)
    v21 = v20;
  else
    v21 = 0;
  v22 = *(_QWORD *)(a4 + 48);
  v63 = v21;
  if (v22 > v21)
    goto LABEL_11;
  v23 = *(_QWORD *)(a4 + 32);
  if (v23)
  {
    result = (float)v22 / (float)v23;
    if (result <= *(float *)(a1 + 8))
      return result;
    goto LABEL_11;
  }
  result = 0.0;
  if (*(float *)(a1 + 8) < 0.0)
  {
LABEL_11:
    v25.i32[0] = *(_DWORD *)(a2 + 8);
    a10.i64[0] = *(_QWORD *)(a2 + 48);
    a10.i32[2] = *(_DWORD *)(a2 + 56);
    a11.i32[0] = *(_DWORD *)(a2 + 40);
    v26 = (int8x16_t)vnegq_f32(a10);
    v25.i32[1] = *(_DWORD *)(a2 + 24);
    *(float32x2_t *)v27.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)a2, *(int32x2_t *)(a2 + 16)), *(float *)v26.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)a2, *(int32x2_t *)(a2 + 16)), *(float32x2_t *)a10.f32, 1), v25, a10, 2);
    *(float32x2_t *)&v27.u32[2] = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a2 + 32), *(float32x2_t *)v26.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a2 + 32), 1), *(float32x2_t *)a10.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL), a11);
    v28.i64[0] = 0x3F0000003F000000;
    v28.i64[1] = 0x3F0000003F000000;
    v29 = vmlaq_n_f32(v28, v27, 1.0 / *(float *)(a1 + 12));
    v30 = -*(unsigned __int16 *)(a1 + 18);
    v62 = (_QWORD *)(a1 + 48);
    v57 = (uint64_t **)(a1 + 24);
    v59 = (_QWORD *)(a1 + 72);
    v58 = (_QWORD *)(a1 + 96);
    v61 = (_QWORD *)(a4 + 456);
    v64 = a4 + 16;
    v68 = vand_s8((int8x8_t)vdup_n_s32(v30), (int8x8_t)vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v29.f32)));
    v69 = vcvtms_s32_f32(v29.f32[2]) & v30;
    while (1)
    {
      if (v22 <= v63)
      {
        v31 = *(_QWORD *)(a4 + 32);
        if (v31)
        {
          result = (float)v22 / (float)v31;
          if (result <= *(float *)(v12 + 8))
            return result;
        }
        else
        {
          result = 0.0;
          if (*(float *)(v12 + 8) >= 0.0)
            return result;
        }
      }
      sub_223CF6450(v62, (int *)&v68, (uint64_t)v67);
      if (sub_223C033D8(v62, v67) == 1)
      {
        sub_223CF69A0(v59, v67);
        sub_223CF6ACC(v58, v67);
      }
      sub_223CF4AB4(v61, v67, (uint64_t *)&__p);
      v32 = v73;
      if (!v73)
        break;
      v33 = 0;
      do
      {
        v34 = v32[3];
        v66 = v32;
        v65 = v32 + 4;
        if (v34 != v32 + 4)
        {
          do
          {
            v35 = *((unsigned int *)v34 + 7);
            if (*(_QWORD *)(a4 + 104) <= v35)
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 667, (uint64_t)"index < metadata_blocks_.size()", 31, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C);
              v36 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v36 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v52 = qword_255795648;
                for (i = qword_255795650; v52 != i; v52 += 16)
                  (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v52)(*(_QWORD *)(v52 + 8), "index < metadata_blocks_.size()", 31, "Out of range", 12);
              }
              v37 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v37 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
LABEL_72:
                abort();
              qword_255795660(*(_QWORD *)algn_255795668, "index < metadata_blocks_.size()", 31, "Out of range", 12);
            }
            v38 = *(_QWORD *)(a4 + 96) + v35;
            v39 = *(_QWORD *)(*(_QWORD *)(a4 + 72) + 8 * (v38 / 0x1F));
            v40 = v38 % 0x1F;
            if (*(_BYTE *)(v39 + 132 * v40 + 20))
            {
              sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 668, (uint64_t)"!metadata_blocks_[index].IsErased()", 35, (uint64_t)"Cannot get an erased block", 26, (void (*)(void **))sub_22457406C);
              v41 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v41 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670 || byte_255795678)
              {
                v50 = qword_255795648;
                for (j = qword_255795650; v50 != j; v50 += 16)
                  (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v50)(*(_QWORD *)(v50 + 8), "!metadata_blocks_[index].IsErased()", 35, "Cannot get an erased block", 26);
              }
              v42 = atomic_load((unsigned __int8 *)&qword_255795680);
              if ((v42 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
              {
                __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
                __cxa_guard_release(&qword_255795680);
              }
              if (!byte_255795670)
                goto LABEL_72;
              qword_255795660(*(_QWORD *)algn_255795668, "!metadata_blocks_[index].IsErased()", 35, "Cannot get an erased block", 26);
              v43 = *(_QWORD *)(a4 + 96) + v35;
              v40 = v43 % 0x1F;
              v39 = *(_QWORD *)(*(_QWORD *)(a4 + 72) + 8 * (v43 / 0x1F));
            }
            v44 = (uint64_t *)(v39 + 132 * v40);
            v45 = *v44;
            v71 = *((_DWORD *)v44 + 2);
            v70 = v45;
            v46 = sub_2235196C0(v64, (uint64_t)&v70, *((_DWORD *)v66 + 4));
            v47 = (_QWORD *)v34[1];
            if (v47)
            {
              do
              {
                v48 = v47;
                v47 = (_QWORD *)*v47;
              }
              while (v47);
            }
            else
            {
              do
              {
                v48 = (_QWORD *)v34[2];
                v49 = *v48 == (_QWORD)v34;
                v34 = v48;
              }
              while (!v49);
            }
            v33 |= v46;
            v34 = v48;
          }
          while (v48 != v65);
        }
        v32 = (_QWORD **)*v66;
      }
      while (*v66);
      v54 = v73;
      if (v73)
      {
        v12 = a1;
        do
        {
          v55 = *v54;
          sub_223198030((uint64_t)(v54 + 3), v54[4]);
          operator delete(v54);
          v54 = (_QWORD **)v55;
        }
        while (v55);
LABEL_65:
        v56 = __p;
        __p = 0;
        if (!v56)
          goto LABEL_67;
LABEL_66:
        operator delete(v56);
        goto LABEL_67;
      }
      v12 = a1;
      v56 = __p;
      __p = 0;
      if (v56)
        goto LABEL_66;
LABEL_67:
      if ((v33 & 1) != 0)
        sub_22397FD34(v57, v67, (uint64_t)v67);
      ++*(_DWORD *)(v12 + 120);
      v22 = *(_QWORD *)(a4 + 48);
    }
    v33 = 0;
    goto LABEL_65;
  }
  return result;
}

void sub_223A30F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,_QWORD **a27)
{
  _QWORD **v28;
  _QWORD *v29;

  v28 = a27;
  if (a27)
  {
    do
    {
      v29 = *v28;
      sub_223198030((uint64_t)(v28 + 3), v28[4]);
      operator delete(v28);
      v28 = (_QWORD **)v29;
    }
    while (v29);
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_223A30FD4(char *result, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  uint64_t **v5;
  uint64_t **v6;
  uint64_t **v7;
  unsigned int v8;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v12;
  int8x8_t v13;
  int v14;

  v2 = a2 + 1;
  v3 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != a2 + 1)
  {
    v4 = result;
    v5 = (uint64_t **)(result + 48);
    v6 = (uint64_t **)(result + 72);
    v7 = (uint64_t **)(result + 96);
    do
    {
      v8 = -*((unsigned __int16 *)v4 + 9);
      v9 = *((_DWORD *)v3 + 9) & v8;
      v13 = vand_s8(*(int8x8_t *)((char *)v3 + 28), (int8x8_t)vdup_n_s32(v8));
      v14 = v9;
      sub_22397FD34(v5, (int *)&v13, (uint64_t)&v13);
      sub_223CF6738(v6, (int *)&v13, (uint64_t)&v13);
      result = sub_223CF686C(v7, (int *)&v13, (uint64_t)&v13);
      v10 = (_QWORD *)v3[1];
      if (v10)
      {
        do
        {
          v11 = v10;
          v10 = (_QWORD *)*v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          v11 = (_QWORD *)v3[2];
          v12 = *v11 == (_QWORD)v3;
          v3 = v11;
        }
        while (!v12);
      }
      v3 = v11;
    }
    while (v11 != v2);
  }
  return result;
}

_QWORD *sub_223A310B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(a1 + 32);
  result = (_QWORD *)(a1 + 32);
  v3 = v4;
  *a2 = *(result - 1);
  v5 = result[1];
  a2[2] = v5;
  v6 = (_QWORD *)(v4 + 16);
  if (v5)
    v7 = v6;
  else
    v7 = a2;
  a2[1] = v3;
  *result = 0;
  result[1] = 0;
  *v7 = a2 + 1;
  *(result - 1) = result;
  return result;
}

uint64_t sub_223A310EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

void sub_223A310F4()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/ChunkRecycler.h", 242, (uint64_t)"", 0, (uint64_t)"Deprecated", 10, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_223A31130(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD **v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD **v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD **v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;

  v16 = &v17;
  v17 = 0;
  v20 = 0;
  v21 = 0;
  v18 = 0;
  v19 = &v20;
  v22 = &v23;
  v23 = 0;
  v26 = 0;
  v27 = 0;
  v24 = 0;
  v25 = &v26;
  v3 = (_QWORD *)(a1 + 32);
  v2 = *(_QWORD **)(a1 + 32);
  v4 = (_QWORD *)(a1 + 24);
  v28 = 0xFFFFFFFF00000000;
  sub_223198030(a1 + 24, v2);
  v5 = v17;
  *(v3 - 1) = &v17;
  *v3 = v5;
  v6 = v18;
  v3[1] = v18;
  if (v6)
  {
    v5[2] = v3;
    v16 = &v17;
    v17 = 0;
    v18 = 0;
  }
  else
  {
    *v4 = v3;
  }
  v7 = a1 + 56;
  sub_223198030(a1 + 48, *(_QWORD **)(a1 + 56));
  v8 = v20;
  *(_QWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 56) = v8;
  v9 = v21;
  *(_QWORD *)(a1 + 64) = v21;
  if (v9)
  {
    v8[2] = v7;
    v19 = &v20;
    v20 = 0;
    v21 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = v7;
  }
  v10 = a1 + 80;
  sub_223198030(a1 + 72, *(_QWORD **)(a1 + 80));
  v11 = v23;
  *(_QWORD *)(a1 + 72) = v22;
  *(_QWORD *)(a1 + 80) = v11;
  v12 = v24;
  *(_QWORD *)(a1 + 88) = v24;
  if (v12)
  {
    v11[2] = v10;
    v22 = &v23;
    v23 = 0;
    v24 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 72) = v10;
  }
  v13 = a1 + 104;
  sub_223198030(a1 + 96, *(_QWORD **)(a1 + 104));
  v14 = v26;
  *(_QWORD *)(a1 + 96) = v25;
  *(_QWORD *)(a1 + 104) = v14;
  v15 = v27;
  *(_QWORD *)(a1 + 112) = v27;
  if (v15)
  {
    v14[2] = v13;
    v14 = 0;
    v25 = &v26;
    v26 = 0;
    v27 = 0;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = v13;
  }
  *(_QWORD *)(a1 + 120) = v28;
  sub_223198030((uint64_t)&v25, v14);
  sub_223198030((uint64_t)&v22, v23);
  sub_223198030((uint64_t)&v19, v20);
  sub_223198030((uint64_t)&v16, v17);
}

uint64_t sub_223A312FC(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_24EC5DA20;
  v2 = a1 + 48;
  sub_223198030(a1 + 96, *(_QWORD **)(a1 + 104));
  sub_223198030(a1 + 72, *(_QWORD **)(a1 + 80));
  sub_223198030(v2, *(_QWORD **)(a1 + 56));
  sub_223198030(a1 + 24, *(_QWORD **)(a1 + 32));
  return a1;
}

void sub_223A3135C(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = off_24EC5DA20;
  v2 = a1 + 48;
  sub_223198030(a1 + 96, *(_QWORD **)(a1 + 104));
  sub_223198030(a1 + 72, *(_QWORD **)(a1 + 80));
  sub_223198030(v2, *(_QWORD **)(a1 + 56));
  sub_223198030(a1 + 24, *(_QWORD **)(a1 + 32));
  JUMPOUT(0x227684CE8);
}

char *sub_223A313CC(char *result, _QWORD *a2)
{
  char *v2;
  uint64_t **v3;
  uint64_t **v4;
  uint64_t **v5;
  _DWORD *v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int8x8_t v10;
  int v11;

  if (*a2)
  {
    v2 = result;
    v3 = (uint64_t **)(result + 48);
    v4 = (uint64_t **)(result + 72);
    v5 = (uint64_t **)(result + 96);
    v6 = (_DWORD *)(a2[1] + 8);
    v7 = 12 * *a2;
    do
    {
      v8 = -*((unsigned __int16 *)v2 + 9);
      v9 = *v6 & v8;
      v10 = vand_s8(*(int8x8_t *)(v6 - 2), (int8x8_t)vdup_n_s32(v8));
      v11 = v9;
      sub_22397FD34(v3, (int *)&v10, (uint64_t)&v10);
      sub_223CF6738(v4, (int *)&v10, (uint64_t)&v10);
      result = sub_223CF686C(v5, (int *)&v10, (uint64_t)&v10);
      v6 += 3;
      v7 -= 12;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_223A31484(uint64_t a1)
{
  _QWORD **v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD ***)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = *v2;
      sub_223198030((uint64_t)(v2 + 3), v2[4]);
      operator delete(v2);
      v2 = (_QWORD **)v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

void sub_223A314E4(uint64_t a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  char *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  void *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  BOOL v41;
  int64_t v42;
  unint64_t v43;
  char *v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  int64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 *v76;
  _OWORD *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  void *v89;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = v2 >= 0x1F;
  v4 = v2 - 31;
  if (v3)
  {
    *(_QWORD *)(a1 + 32) = v4;
    v6 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v6 + 1);
    v8 = *v6;
    *(_QWORD *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_76:
      *(_QWORD *)v5 = v8;
      *(_QWORD *)(a1 + 16) += 8;
      return;
    }
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v35 = (v5 - v9) >> 2;
      if (v5 == v9)
        v35 = 1;
      if (!(v35 >> 61))
      {
        v36 = v35 >> 2;
        v37 = 8 * v35;
        v38 = (char *)operator new(8 * v35);
        v39 = &v38[8 * v36];
        v40 = &v38[v37];
        v42 = v5 - v7;
        v41 = v5 == v7;
        v5 = v39;
        if (!v41)
        {
          v5 = &v39[v42 & 0xFFFFFFFFFFFFFFF8];
          v43 = v42 - 8;
          if ((unint64_t)(v42 - 8) >= 0x38)
          {
            v73 = &v38[8 * v36];
            v44 = v73;
            if ((unint64_t)(v73 - v7) >= 0x20)
            {
              v74 = (v43 >> 3) + 1;
              v75 = 8 * (v74 & 0x3FFFFFFFFFFFFFFCLL);
              v44 = &v39[v75];
              v7 += v75;
              v76 = (__int128 *)(v6 + 3);
              v77 = v73 + 16;
              v78 = v74 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v79 = *v76;
                *(v77 - 1) = *(v76 - 1);
                *v77 = v79;
                v76 += 2;
                v77 += 2;
                v78 -= 4;
              }
              while (v78);
              if (v74 == (v74 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_74;
            }
          }
          else
          {
            v44 = &v38[8 * v36];
          }
          do
          {
            v80 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v44 = v80;
            v44 += 8;
          }
          while (v44 != v5);
        }
        goto LABEL_74;
      }
LABEL_85:
      sub_223174E94();
    }
LABEL_5:
    v11 = v10 >> 3;
    if (v11 >= -1)
      v12 = v11 + 1;
    else
      v12 = v11 + 2;
    v13 = v12 >> 1;
    v14 = -v13;
    v15 = &v7[-8 * v13];
    v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      v7 = *(char **)(a1 + 8);
    }
    v5 = &v15[v16];
    *(_QWORD *)(a1 + 8) = &v7[8 * v14];
    *(_QWORD *)(a1 + 16) = &v15[v16];
    goto LABEL_76;
  }
  v18 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 8);
  v20 = v18 - v19;
  v21 = (v18 - v19) >> 3;
  v22 = v17 - *(_QWORD *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      v89 = operator new(0xFFCuLL);
      sub_22323CCA0((char **)a1, &v89);
      return;
    }
    v89 = operator new(0xFFCuLL);
    sub_22323CE2C((void **)a1, &v89);
    v45 = *(_QWORD **)(a1 + 8);
    v5 = *(char **)(a1 + 16);
    v7 = (char *)(v45 + 1);
    v8 = *v45;
    *(_QWORD *)(a1 + 8) = v45 + 1;
    if (v5 != *(char **)(a1 + 24))
      goto LABEL_76;
    v9 = *(char **)a1;
    v10 = (uint64_t)&v7[-*(_QWORD *)a1];
    if ((unint64_t)v7 <= *(_QWORD *)a1)
    {
      v46 = (v5 - v9) >> 2;
      if (v5 == v9)
        v46 = 1;
      if (!(v46 >> 61))
      {
        v47 = v46 >> 2;
        v48 = 8 * v46;
        v38 = (char *)operator new(8 * v46);
        v39 = &v38[8 * v47];
        v40 = &v38[v48];
        v49 = v5 - v7;
        v41 = v5 == v7;
        v5 = v39;
        if (!v41)
        {
          v5 = &v39[v49 & 0xFFFFFFFFFFFFFFF8];
          v50 = v49 - 8;
          if ((unint64_t)(v49 - 8) >= 0x38)
          {
            v81 = &v38[8 * v47];
            v51 = v81;
            if ((unint64_t)(v81 - v7) >= 0x20)
            {
              v82 = (v50 >> 3) + 1;
              v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
              v51 = &v39[v83];
              v7 += v83;
              v84 = (__int128 *)(v45 + 3);
              v85 = v81 + 16;
              v86 = v82 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v87 = *v84;
                *(v85 - 1) = *(v84 - 1);
                *v85 = v87;
                v84 += 2;
                v85 += 2;
                v86 -= 4;
              }
              while (v86);
              if (v82 == (v82 & 0x3FFFFFFFFFFFFFFCLL))
                goto LABEL_74;
            }
          }
          else
          {
            v51 = &v38[8 * v47];
          }
          do
          {
            v88 = *(_QWORD *)v7;
            v7 += 8;
            *(_QWORD *)v51 = v88;
            v51 += 8;
          }
          while (v51 != v5);
        }
LABEL_74:
        *(_QWORD *)a1 = v38;
        *(_QWORD *)(a1 + 8) = v39;
        *(_QWORD *)(a1 + 16) = v5;
        *(_QWORD *)(a1 + 24) = v40;
        if (v9)
        {
          operator delete(v9);
          v5 = *(char **)(a1 + 16);
        }
        goto LABEL_76;
      }
      goto LABEL_85;
    }
    goto LABEL_5;
  }
  v23 = v22 >> 2;
  if (v17 == *(_QWORD *)a1)
    v24 = 1;
  else
    v24 = v23;
  if (v24 >> 61)
    goto LABEL_85;
  v25 = (char *)operator new(8 * v24);
  v26 = operator new(0xFFCuLL);
  v27 = v26;
  v28 = &v25[8 * v21];
  v29 = &v25[8 * v24];
  if (v21 == v24)
  {
    if (v20 < 1)
    {
      if (v18 == v19)
        v52 = 1;
      else
        v52 = v20 >> 2;
      if (v52 >> 61)
        sub_223174E94();
      v28 = (char *)operator new(8 * v52);
      v29 = &v28[8 * v52];
      operator delete(v25);
      v53 = *(_QWORD *)(a1 + 8);
      v18 = *(_QWORD *)(a1 + 16);
      v25 = v28;
      *(_QWORD *)v28 = v27;
      v31 = v28 + 8;
      if (v18 == v53)
        goto LABEL_24;
      do
      {
LABEL_49:
        if (v28 == v25)
        {
          if (v31 >= v29)
          {
            if (v29 == v28)
              v58 = 1;
            else
              v58 = (v29 - v28) >> 2;
            if (v58 >> 61)
              sub_223174E94();
            v59 = (char *)operator new(8 * v58);
            v25 = v59;
            v60 = (v58 + 3) >> 2;
            v54 = &v59[8 * v60];
            v33 = v54;
            v61 = v31 - v28;
            if (v31 != v28)
            {
              v33 = &v54[v61 & 0xFFFFFFFFFFFFFFF8];
              v62 = v61 - 8;
              v63 = &v59[8 * v60];
              v64 = v28;
              if (v62 < 0x38)
                goto LABEL_89;
              v65 = 8 * v60;
              v63 = &v59[8 * v60];
              v64 = v28;
              if ((unint64_t)(v63 - v28) < 0x20)
                goto LABEL_89;
              v66 = (v62 >> 3) + 1;
              v67 = 8 * (v66 & 0x3FFFFFFFFFFFFFFCLL);
              v63 = &v54[v67];
              v64 = &v28[v67];
              v68 = (__int128 *)(v28 + 16);
              v69 = &v59[v65 + 16];
              v70 = v66 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v71 = *v68;
                *((_OWORD *)v69 - 1) = *(v68 - 1);
                *(_OWORD *)v69 = v71;
                v68 += 2;
                v69 += 32;
                v70 -= 4;
              }
              while (v70);
              if (v66 != (v66 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_89:
                do
                {
                  v72 = *(_QWORD *)v64;
                  v64 += 8;
                  *(_QWORD *)v63 = v72;
                  v63 += 8;
                }
                while (v63 != v33);
              }
            }
            v29 = &v59[8 * v58];
            operator delete(v28);
          }
          else
          {
            v56 = (v29 - v31) >> 3;
            if (v56 >= -1)
              v57 = v56 + 1;
            else
              v57 = v56 + 2;
            v33 = &v31[8 * (v57 >> 1)];
            v54 = &v28[8 * (v57 >> 1)];
            if (v31 == v28)
            {
              v25 = v31;
            }
            else
            {
              memmove(&v28[8 * (v57 >> 1)], v28, v31 - v28);
              v25 = v28;
            }
          }
        }
        else
        {
          v54 = v28;
          v33 = v31;
        }
        v55 = *(_QWORD *)(v18 - 8);
        v18 -= 8;
        *((_QWORD *)v54 - 1) = v55;
        v32 = v54 - 8;
        v31 = v33;
        v28 = v32;
      }
      while (v18 != *(_QWORD *)(a1 + 8));
      goto LABEL_25;
    }
    v30 = v21 + 2;
    if (v21 >= -1)
      v30 = v21 + 1;
    v28 -= 8 * (v30 >> 1);
  }
  *(_QWORD *)v28 = v26;
  v31 = v28 + 8;
  if (v18 != v19)
    goto LABEL_49;
LABEL_24:
  v32 = v28;
  v33 = v31;
LABEL_25:
  v34 = *(char **)a1;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v32;
  *(_QWORD *)(a1 + 16) = v33;
  *(_QWORD *)(a1 + 24) = v29;
  if (v34)
    operator delete(v34);
}

void sub_223A31A24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  operator delete(v2);
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A31A40(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A31A54(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_223A31A6C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_223A31A84(uint64_t a1, int *a2, _OWORD *a3, _DWORD *a4)
{
  uint64_t v4;
  int v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  void **v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  float v19;
  float v20;
  uint64_t v21;
  _QWORD *v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = (19349669 * v9) ^ (73856093 * *a2) ^ (83492791 * v10) ^ (37783632 * v11);
  v13 = *(_QWORD *)(a1 + 8);
  if (v13)
  {
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      v4 = (19349669 * v9) ^ (73856093 * v8) ^ (83492791 * v10) ^ (37783632 * v11);
      if (v12 >= v13)
        v4 = v12 % v13;
    }
    else
    {
      v4 = v12 & (v13 - 1);
    }
    v15 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v15)
    {
      v16 = *v15;
      if (*v15)
      {
        if (v14.u32[0] < 2uLL)
        {
          while (1)
          {
            v18 = v16[1];
            if (v18 == v12)
            {
              if (*((_DWORD *)v16 + 4) == v8
                && *((_DWORD *)v16 + 5) == v9
                && *((_DWORD *)v16 + 6) == v10
                && *((_DWORD *)v16 + 7) == v11)
              {
                return v16;
              }
            }
            else if ((v18 & (v13 - 1)) != v4)
            {
              goto LABEL_29;
            }
            v16 = (_QWORD *)*v16;
            if (!v16)
              goto LABEL_29;
          }
        }
        do
        {
          v17 = v16[1];
          if (v17 == v12)
          {
            if (*((_DWORD *)v16 + 4) == v8
              && *((_DWORD *)v16 + 5) == v9
              && *((_DWORD *)v16 + 6) == v10
              && *((_DWORD *)v16 + 7) == v11)
            {
              return v16;
            }
          }
          else
          {
            if (v17 >= v13)
              v17 %= v13;
            if (v17 != v4)
              break;
          }
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
    }
  }
LABEL_29:
  v16 = operator new(0x28uLL);
  *v16 = 0;
  v16[1] = v12;
  *((_OWORD *)v16 + 1) = *a3;
  *((_DWORD *)v16 + 8) = *a4;
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (v13 && (float)(v20 * (float)v13) >= v19)
  {
    v21 = *(_QWORD *)a1;
    v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v22)
    {
LABEL_32:
      *v16 = *v22;
LABEL_67:
      *v22 = v16;
      goto LABEL_68;
    }
  }
  else
  {
    v23 = 1;
    if (v13 >= 3)
      v23 = (v13 & (v13 - 1)) != 0;
    v24 = v23 | (2 * v13);
    v25 = vcvtps_u32_f32(v19 / v20);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v13 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v13)
      goto LABEL_43;
    if (prime < v13)
    {
      v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v13 < 3 || (v28 = (uint8x8_t)vcnt_s8((int8x8_t)v13), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        v27 = std::__next_prime(v27);
      }
      else
      {
        v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2)
          v27 = v29;
      }
      if (prime <= v27)
        prime = v27;
      if (prime < v13)
LABEL_43:
        sub_2231B0668(a1, prime);
    }
    v13 = *(_QWORD *)(a1 + 8);
    v30 = v13 - 1;
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
      {
        v4 = v12 % v13;
        v21 = *(_QWORD *)a1;
        v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v12 % v13));
        if (v22)
          goto LABEL_32;
      }
      else
      {
        v4 = v12;
        v21 = *(_QWORD *)a1;
        v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v12);
        if (v22)
          goto LABEL_32;
      }
    }
    else
    {
      v4 = v30 & v12;
      v21 = *(_QWORD *)a1;
      v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v30 & v12));
      if (v22)
        goto LABEL_32;
    }
  }
  *v16 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*v16)
  {
    v31 = *(_QWORD *)(*v16 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v31 >= v13)
        v31 %= v13;
    }
    else
    {
      v31 &= v13 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v31);
    goto LABEL_67;
  }
LABEL_68:
  ++*(_QWORD *)(a1 + 24);
  return v16;
}

void sub_223A31E18(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_223A31E2C(_QWORD *a1, uint64_t *a2, int a3)
{
  uint64_t *result;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  int v13;

  v11 = a3;
  v12 = *a2;
  v13 = *((_DWORD *)a2 + 2);
  result = sub_22353408C(a1 + 1, &v11);
  if (result)
  {
    v5 = result;
    v6 = *((unsigned int *)result + 8);
    if (*(_BYTE *)(*(_QWORD *)(a1[7] + 8 * ((a1[10] + v6) / 0x1F)) + 132 * ((a1[10] + v6) % 0x1F) + 20))
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 706, (uint64_t)"!metadata_blocks_[iter->second].IsErased()", 42, (uint64_t)"The block is erased", 19, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_12;
      }
      v6 = *((unsigned int *)v5 + 8);
    }
    if (a1[11] > v6
      || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 647, (uint64_t)"idx_block < metadata_blocks_.size()", 35, (uint64_t)"Out of range", 12, (void (*)(void **))sub_22457406C))
    {
      v7 = a1[10] + v6;
      v8 = *(_QWORD *)(a1[7] + 8 * (v7 / 0x1F));
      v9 = v7 % 0x1F;
      if (!*(_BYTE *)(v8 + 132 * v9 + 20))
        return (uint64_t *)(v8 + 132 * v9);
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/BlockTable.h", 648, (uint64_t)"!metadata_blocks_[idx_block].IsErased()", 39, (uint64_t)"The block is erased", 19, (void (*)(void **))sub_22457406C))
      {
        v10 = a1[10] + v6;
        v9 = v10 % 0x1F;
        v8 = *(_QWORD *)(a1[7] + 8 * (v10 / 0x1F));
        return (uint64_t *)(v8 + 132 * v9);
      }
    }
LABEL_12:
    abort();
  }
  return result;
}

void sub_223A32020(char **a1, uint64_t a2, int a3, uint64_t a4, void ***a5)
{
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  char *v24;
  char *v25;
  char *v26;
  unint64_t v27;
  __int128 *v28;
  char *v29;
  unint64_t v30;
  __int128 v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  _OWORD *v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  int v51;
  unint64_t v52;
  unint64_t v53;
  uint8x8_t v54;
  uint64_t **v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  float v60;
  float v61;
  _BOOL8 v62;
  unint64_t v63;
  unint64_t v64;
  size_t prime;
  unint64_t v66;
  uint8x8_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  uint64_t v73;
  __int128 v74;

  v10 = (unint64_t)(a1 + 3);
  if (0x84BDA12F684BDA13 * ((a1[1] - *a1) >> 4) != a1[4] - a1[3]
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 31, (uint64_t)"mesh_buffers_.size() == used_buffer_flags_.size()", 49, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_6:
    abort();
  }
  LODWORD(v74) = a3;
  *(_QWORD *)((char *)&v74 + 4) = *(_QWORD *)a2;
  HIDWORD(v74) = *(_DWORD *)(a2 + 8);
  v11 = (uint64_t *)(a1 + 6);
  v12 = sub_22351A45C(a1 + 6, (int *)&v74);
  if (!v12)
  {
    v14 = a1[3];
    v15 = a1[4];
    v16 = v15 - v14;
    v17 = memchr(v14, 0, v15 - v14);
    if (v17)
      v18 = (uint64_t)v17;
    else
      v18 = (uint64_t)v15;
    if ((char *)v18 != v15)
      goto LABEL_60;
    v19 = (unint64_t)a1[5];
    if ((unint64_t)v15 < v19)
    {
      *v15 = 0;
      v20 = (uint64_t)(v15 + 1);
      goto LABEL_41;
    }
    v21 = v16 + 1;
    if ((uint64_t)(v16 + 1) < 0)
      sub_22316E078();
    v22 = v19 - (_QWORD)v14;
    if (2 * v22 > v21)
      v21 = 2 * v22;
    if (v22 >= 0x3FFFFFFFFFFFFFFFLL)
      v23 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v23 = v21;
    if (v23)
    {
      v24 = (char *)operator new(v23);
      v25 = &v24[v16];
      v26 = &v24[v23];
      v24[v16] = 0;
      v20 = (uint64_t)&v24[v16 + 1];
      if (v15 != v14)
      {
LABEL_21:
        if (v16 >= 8 && (unint64_t)(v14 - v24) >= 0x20)
        {
          if (v16 < 0x20)
          {
            v27 = 0;
            goto LABEL_31;
          }
          v27 = v16 & 0xFFFFFFFFFFFFFFE0;
          v28 = (__int128 *)(v15 - 16);
          v29 = &v24[v15 - 16 - v14];
          v30 = v16 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v31 = *v28;
            *((_OWORD *)v29 - 1) = *(v28 - 1);
            *(_OWORD *)v29 = v31;
            v29 -= 32;
            v28 -= 2;
            v30 -= 32;
          }
          while (v30);
          if (v16 == v27)
            goto LABEL_38;
          if ((v16 & 0x18) != 0)
          {
LABEL_31:
            v25 -= v16 & 0xFFFFFFFFFFFFFFF8;
            v32 = &v15[-v27 - 8];
            v33 = &v24[v32 - v14];
            v34 = v27 - (v16 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v35 = *(_QWORD *)v32;
              v32 -= 8;
              *(_QWORD *)v33 = v35;
              v33 -= 8;
              v34 += 8;
            }
            while (v34);
            v15 -= v16 & 0xFFFFFFFFFFFFFFF8;
            if (v16 == (v16 & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_38;
            goto LABEL_36;
          }
          v25 -= v27;
          v15 -= v27;
        }
LABEL_36:
        v36 = v25 - 1;
        do
        {
          v37 = *--v15;
          *v36-- = v37;
        }
        while (v15 != v14);
LABEL_38:
        v14 = *(char **)v10;
LABEL_39:
        a1[3] = v24;
        a1[4] = (char *)v20;
        a1[5] = v26;
        if (v14)
          operator delete(v14);
LABEL_41:
        a1[4] = (char *)v20;
        v38 = (unint64_t)a1[1];
        v39 = (unint64_t)a1[2];
        if (v38 >= v39)
        {
          v42 = 0x84BDA12F684BDA13 * ((uint64_t)(v38 - (_QWORD)*a1) >> 4);
          if (v42 + 1 > 0x97B425ED097B42)
            sub_223A33684();
          v43 = 0x84BDA12F684BDA13 * ((uint64_t)(v39 - (_QWORD)*a1) >> 4);
          v44 = 2 * v43;
          if (2 * v43 <= v42 + 1)
            v44 = v42 + 1;
          if (v43 >= 0x4BDA12F684BDA1)
            v10 = 0x97B425ED097B42;
          else
            v10 = v44;
          if (v10)
          {
            if (v10 > 0x97B425ED097B42)
              sub_223174E94();
            v45 = (char *)operator new(432 * v10);
          }
          else
          {
            v45 = 0;
          }
          v46 = &v45[432 * v10];
          v47 = (char *)sub_2241498F4((uint64_t)&v45[432 * v42], 1);
          *((_OWORD *)v47 + 25) = 0u;
          *((_OWORD *)v47 + 26) = 0u;
          *((_OWORD *)v47 + 24) = 0u;
          v41 = v47 + 432;
          v49 = *a1;
          v48 = a1[1];
          if (v48 == *a1)
          {
            *a1 = v47;
            a1[1] = v41;
            a1[2] = v46;
            if (!v48)
              goto LABEL_59;
          }
          else
          {
            do
            {
              v50 = v47;
              v47 = (char *)sub_22317FD80((uint64_t)(v47 - 432), (uint64_t)(v48 - 432));
              *((_OWORD *)v50 - 3) = *((_OWORD *)v48 - 3);
              *((_QWORD *)v48 - 6) = 0;
              *((_QWORD *)v48 - 5) = 0;
              *((_OWORD *)v50 - 2) = *((_OWORD *)v48 - 2);
              *((_QWORD *)v48 - 4) = 0;
              *((_QWORD *)v48 - 3) = 0;
              *((_OWORD *)v50 - 1) = *((_OWORD *)v48 - 1);
              *((_QWORD *)v48 - 2) = 0;
              *((_QWORD *)v48 - 1) = 0;
              v48 -= 432;
            }
            while (v48 != v49);
            v48 = *a1;
            v10 = (unint64_t)a1[1];
            *a1 = v47;
            a1[1] = v41;
            a1[2] = v46;
            while ((char *)v10 != v48)
            {
              v10 -= 432;
              sub_223518FD8((uint64_t *)v10);
            }
            if (!v48)
              goto LABEL_59;
          }
          operator delete(v48);
        }
        else
        {
          v40 = (_OWORD *)sub_2241498F4(v38, 1);
          v40[25] = 0u;
          v40[26] = 0u;
          v40[24] = 0u;
          v41 = (char *)(v40 + 27);
          a1[1] = (char *)(v40 + 27);
        }
LABEL_59:
        a1[1] = v41;
        v14 = a1[3];
        v18 = (uint64_t)(a1[4] - 1);
LABEL_60:
        v51 = v18 - (_DWORD)v14;
        v52 = (19349669 * SDWORD1(v74)) ^ (73856093 * (int)v74) ^ (83492791 * SDWORD2(v74)) ^ (37783632 * SHIDWORD(v74));
        v53 = (unint64_t)a1[7];
        if (v53)
        {
          v54 = (uint8x8_t)vcnt_s8((int8x8_t)v53);
          v54.i16[0] = vaddlv_u8(v54);
          if (v54.u32[0] > 1uLL)
          {
            v10 = (19349669 * SDWORD1(v74)) ^ (73856093 * (int)v74) ^ (83492791 * SDWORD2(v74)) ^ (37783632 * SHIDWORD(v74));
            if (v52 >= v53)
              v10 = v52 % v53;
          }
          else
          {
            v10 = v52 & (v53 - 1);
          }
          v55 = *(uint64_t ***)(*v11 + 8 * v10);
          if (v55)
          {
            v56 = *v55;
            if (v56)
            {
              if (v54.u32[0] < 2uLL)
              {
                while (1)
                {
                  v58 = v56[1];
                  if (v58 == v52)
                  {
                    if (*((_DWORD *)v56 + 4) == (_DWORD)v74
                      && *(uint64_t *)((char *)v56 + 20) == *(_QWORD *)((char *)&v74 + 4)
                      && *((_DWORD *)v56 + 7) == HIDWORD(v74))
                    {
                      goto LABEL_127;
                    }
                  }
                  else if ((v58 & (v53 - 1)) != v10)
                  {
                    goto LABEL_86;
                  }
                  v56 = (uint64_t *)*v56;
                  if (!v56)
                    goto LABEL_86;
                }
              }
              do
              {
                v57 = v56[1];
                if (v57 == v52)
                {
                  if (*((_DWORD *)v56 + 4) == (_DWORD)v74
                    && *(uint64_t *)((char *)v56 + 20) == *(_QWORD *)((char *)&v74 + 4)
                    && *((_DWORD *)v56 + 7) == HIDWORD(v74))
                  {
                    goto LABEL_127;
                  }
                }
                else
                {
                  if (v57 >= v53)
                    v57 %= v53;
                  if (v57 != v10)
                    break;
                }
                v56 = (uint64_t *)*v56;
              }
              while (v56);
            }
          }
        }
LABEL_86:
        v59 = operator new(0x28uLL);
        *v59 = 0;
        v59[1] = v52;
        *((_OWORD *)v59 + 1) = v74;
        *((_DWORD *)v59 + 8) = v51;
        v60 = (float)(unint64_t)(a1[9] + 1);
        v61 = *((float *)a1 + 20);
        if (!v53 || (float)(v61 * (float)v53) < v60)
        {
          v62 = 1;
          if (v53 >= 3)
            v62 = (v53 & (v53 - 1)) != 0;
          v63 = v62 | (2 * v53);
          v64 = vcvtps_u32_f32(v60 / v61);
          if (v63 <= v64)
            prime = v64;
          else
            prime = v63;
          if (prime == 1)
          {
            prime = 2;
          }
          else if ((prime & (prime - 1)) != 0)
          {
            prime = std::__next_prime(prime);
            v53 = (unint64_t)a1[7];
          }
          if (prime > v53)
            goto LABEL_98;
          if (prime < v53)
          {
            v66 = vcvtps_u32_f32((float)(unint64_t)a1[9] / *((float *)a1 + 20));
            if (v53 < 3 || (v67 = (uint8x8_t)vcnt_s8((int8x8_t)v53), v67.i16[0] = vaddlv_u8(v67), v67.u32[0] > 1uLL))
            {
              v66 = std::__next_prime(v66);
            }
            else
            {
              v68 = 1 << -(char)__clz(v66 - 1);
              if (v66 >= 2)
                v66 = v68;
            }
            if (prime <= v66)
              prime = v66;
            if (prime < v53)
LABEL_98:
              sub_2231B0668((uint64_t)(a1 + 6), prime);
          }
          v53 = (unint64_t)a1[7];
          v69 = v53 - 1;
          if ((v53 & (v53 - 1)) == 0)
          {
            v10 = v69 & v52;
            v70 = *v11;
            v71 = *(_QWORD **)(*v11 + 8 * (v69 & v52));
            if (!v71)
              goto LABEL_119;
LABEL_117:
            *v59 = *v71;
            goto LABEL_125;
          }
          if (v52 >= v53)
          {
            v10 = v52 % v53;
            v70 = *v11;
            v71 = *(_QWORD **)(*v11 + 8 * (v52 % v53));
            if (v71)
              goto LABEL_117;
            goto LABEL_119;
          }
          v10 = v52;
        }
        v70 = *v11;
        v71 = *(_QWORD **)(*v11 + 8 * v10);
        if (v71)
          goto LABEL_117;
LABEL_119:
        *v59 = a1[8];
        a1[8] = (char *)v59;
        *(_QWORD *)(v70 + 8 * v10) = a1 + 8;
        if (!*v59)
          goto LABEL_126;
        v72 = *(_QWORD *)(*v59 + 8);
        if ((v53 & (v53 - 1)) != 0)
        {
          if (v72 >= v53)
            v72 %= v53;
        }
        else
        {
          v72 &= v53 - 1;
        }
        v71 = (_QWORD *)(*v11 + 8 * v72);
LABEL_125:
        *v71 = v59;
LABEL_126:
        ++a1[9];
        v14 = a1[3];
LABEL_127:
        LODWORD(v13) = v51;
        v14[v51] = 1;
        goto LABEL_128;
      }
    }
    else
    {
      v24 = 0;
      v25 = (char *)(v15 - v14);
      v26 = 0;
      *(_BYTE *)v16 = 0;
      v20 = v16 + 1;
      if (v15 != v14)
        goto LABEL_21;
    }
    v24 = v25;
    goto LABEL_39;
  }
  v13 = *((unsigned int *)v12 + 8);
  if (*(_BYTE *)(*(_QWORD *)v10 + v13) != 1
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 51, (uint64_t)"used_buffer_flags_[index] == 1", 30, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_6;
  }
LABEL_128:
  v73 = (uint64_t)&(*a1)[432 * v13];
  sub_22316B5A4(v73, a4);
  sub_223CDAD58(v73, a5);
}

void sub_223A327E4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223A327F8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;

  sub_2237C2E74((uint64_t *)a1, a2);
  v4 = *(_OWORD *)(a2 + 384);
  *(_QWORD *)(a2 + 384) = 0;
  *(_QWORD *)(a2 + 392) = 0;
  v5 = *(std::__shared_weak_count **)(a1 + 392);
  *(_OWORD *)(a1 + 384) = v4;
  if (!v5)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v12 = *(_OWORD *)(a2 + 400);
    *(_QWORD *)(a2 + 400) = 0;
    *(_QWORD *)(a2 + 408) = 0;
    v9 = *(std::__shared_weak_count **)(a1 + 408);
    *(_OWORD *)(a1 + 400) = v12;
    if (!v9)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v8 = *(_OWORD *)(a2 + 400);
    *(_QWORD *)(a2 + 400) = 0;
    *(_QWORD *)(a2 + 408) = 0;
    v9 = *(std::__shared_weak_count **)(a1 + 408);
    *(_OWORD *)(a1 + 400) = v8;
    if (!v9)
      goto LABEL_11;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
LABEL_11:
  v13 = *(_OWORD *)(a2 + 416);
  *(_QWORD *)(a2 + 416) = 0;
  *(_QWORD *)(a2 + 424) = 0;
  v14 = *(std::__shared_weak_count **)(a1 + 424);
  *(_OWORD *)(a1 + 416) = v13;
  if (!v14)
    return a1;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (v16)
    return a1;
  ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
  std::__shared_weak_count::__release_weak(v14);
  return a1;
}

BOOL sub_223A32920(_QWORD *a1, uint64_t a2, int a3)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  void *v18;
  _BYTE __p[12];
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v4 = a1 + 6;
  *(_DWORD *)__p = a3;
  *(_QWORD *)&__p[4] = *(_QWORD *)a2;
  v21 = *(_DWORD *)(a2 + 8);
  v5 = sub_22351A45C(a1 + 6, (int *)__p);
  v6 = v5;
  if (!v5)
    return v6 != 0;
  v7 = *((unsigned int *)v5 + 8);
  if (0x84BDA12F684BDA13 * ((uint64_t)(a1[1] - *a1) >> 4) <= v7)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 81, (uint64_t)"it->second < mesh_buffers_.size()", 33, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_26;
    }
    v7 = *((unsigned int *)v6 + 8);
  }
  v8 = a1[3];
  if (*(_BYTE *)(v8 + v7))
    goto LABEL_8;
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 82, (uint64_t)"used_buffer_flags_[it->second] != 0", 35, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
  {
LABEL_26:
    abort();
  }
  LODWORD(v7) = *((_DWORD *)v6 + 8);
  v8 = a1[3];
LABEL_8:
  *(_BYTE *)(v8 + v7) = 0;
  sub_2241498F4((uint64_t)__p, 1);
  v23 = 0u;
  v24 = 0u;
  v22 = 0u;
  sub_223A327F8(*a1 + 432 * *((unsigned int *)v6 + 8), (uint64_t)__p);
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
  if (*((_QWORD *)&v24 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
  if (*((_QWORD *)&v23 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
  if (*((_QWORD *)&v22 + 1))
  {
    v16 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  sub_22316F8F4((uint64_t *)__p);
  sub_2231AFBB8(v4, v6, (uint64_t)__p);
  v18 = *(void **)__p;
  *(_QWORD *)__p = 0;
  if (v18)
    operator delete(v18);
  return v6 != 0;
}

void sub_223A32B34(_QWORD *a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  int v7;
  int v8;
  int v9;
  int v12;
  _DWORD *v13;
  char v14;
  uint64_t *i;
  uint64_t v16;
  int v17;

  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  v4 = (uint64_t *)a1[8];
  if (v4)
  {
    do
    {
      v8 = *((_DWORD *)v4 + 5);
      v7 = *((_DWORD *)v4 + 6);
      v9 = *((_DWORD *)v4 + 7);
      if (v8 == *a2 && v7 == a2[1] && v9 == a2[2])
      {
        v12 = *((_DWORD *)v4 + 4);
        v13 = operator new(0x20uLL);
        v13[4] = v12;
        v13[5] = v8;
        v13[6] = v7;
        v13[7] = v9;
        *(_QWORD *)v13 = 0;
        *((_QWORD *)v13 + 1) = (19349669 * v8) ^ (73856093 * v12) ^ (83492791 * v7) ^ (37783632 * v9);
        sub_223A33698(a3, (uint64_t)v13);
        if ((v14 & 1) == 0)
          operator delete(v13);
      }
      v4 = (uint64_t *)*v4;
    }
    while (v4);
    for (i = *(uint64_t **)(a3 + 16); i; i = (uint64_t *)*i)
    {
      v16 = *(uint64_t *)((char *)i + 20);
      v17 = *((_DWORD *)i + 7);
      sub_223A32920(a1, (uint64_t)&v16, *((_DWORD *)i + 4));
    }
  }
}

void sub_223A32C78(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  operator delete(v2);
  sub_22322E828(v1);
  _Unwind_Resume(a1);
}

void sub_223A32C94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22322E828(v1);
  _Unwind_Resume(a1);
}

void sub_223A32CA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22322E828(v1);
  _Unwind_Resume(a1);
}

void sub_223A32CBC(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  size_t v11;
  const char *v12;
  unsigned __int8 v13;
  const char *v14;
  size_t v15;
  _BYTE *v16;
  unint64_t v17;
  const char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  void *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  uint64_t *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v68[3];
  int v69;
  const char *v70;
  int v71;
  const char *v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE object[24];
  __int128 v79;
  void *__p[2];
  unint64_t v81;
  char v82;
  uint64_t v83;

  v83 = *MEMORY[0x24BDAC8D0];
  sub_2241498F4(a3, 0);
  v5 = atomic_load((unsigned __int8 *)&qword_2540CCB58);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCB58))
  {
    sub_22455F53C(v68);
    sub_223174DE4(object, "cv3dapi.recon3d");
    sub_2232300E0(v68, (uint64_t)object, &qword_2540CCB50);
    if ((object[23] & 0x80000000) != 0)
      operator delete(*(void **)object);
    __cxa_guard_release(&qword_2540CCB58);
  }
  v75 = qword_2540CCB50;
  if (**(int **)(qword_2540CCB50 + 56) > 3)
    goto LABEL_91;
  v6 = *(unsigned __int8 *)(qword_2540CCB50 + 72);
  v7 = sub_22322F254(qword_2540CCB50, "OSLogSurrogateAppender", 1, 0);
  v8 = v7;
  if (!v6 && v7 == 0)
    goto LABEL_91;
  v68[0] = &v75;
  v68[1] = (uint64_t *)std::chrono::steady_clock::now().__d_.__rep_;
  v68[2] = (uint64_t *)std::chrono::system_clock::now().__d_.__rep_;
  v69 = 3;
  v70 = "unknown file";
  v71 = 133;
  v73 = 0;
  v74 = 0;
  v72 = "unknown function";
  v10 = *v68[0];
  if (*(char *)(*v68[0] + 39) < 0)
  {
    v12 = *(const char **)(v10 + 16);
    v11 = *(_QWORD *)(v10 + 24);
  }
  else
  {
    v11 = *(unsigned __int8 *)(*v68[0] + 39);
    v12 = (const char *)(*v68[0] + 16);
  }
  v64 = *v68[0] + 16;
  v65 = *v68[0];
  v66 = a1[9];
  v13 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v13 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)object);
    sub_223199C58("com.apple.cv3d", (unint64_t)object, &xmmword_255788F40);
    if ((_BYTE)v79 && (object[23] & 0x80000000) != 0)
      operator delete(*(void **)object);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F57 >= 0)
    v14 = (const char *)&xmmword_255788F40;
  else
    v14 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v15 = byte_255788F57;
  else
    v15 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)object = os_log_create(v14, v12);
  v16 = &object[8];
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v15 >= 0x17)
  {
    v17 = v8;
    v18 = v12;
    v19 = v6;
    v20 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v20 = v15 | 7;
    v21 = v20 + 1;
    v16 = operator new(v20 + 1);
    *(_QWORD *)&object[16] = v15;
    *(_QWORD *)&v79 = v21 | 0x8000000000000000;
    *(_QWORD *)&object[8] = v16;
    v6 = v19;
    v12 = v18;
    v8 = v17;
    goto LABEL_24;
  }
  BYTE7(v79) = v15;
  if (v15)
LABEL_24:
    memmove(v16, v14, v15);
  v16[v15] = 0;
  BYTE8(v79) = 1;
  v22 = __p;
  if (v11 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v11 >= 0x17)
  {
    v24 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17)
      v24 = v11 | 7;
    v25 = v24 + 1;
    v22 = operator new(v24 + 1);
    __p[1] = (void *)v11;
    v81 = v25 | 0x8000000000000000;
    __p[0] = v22;
  }
  else
  {
    HIBYTE(v81) = v11;
    if (!v11)
    {
      LOBYTE(__p[0]) = 0;
      v82 = 1;
      v23 = *(NSObject **)object;
      if ((SHIBYTE(v81) & 0x80000000) == 0)
        goto LABEL_29;
      goto LABEL_35;
    }
  }
  memmove(v22, v12, v11);
  *((_BYTE *)v22 + v11) = 0;
  v82 = 1;
  v23 = *(NSObject **)object;
  if ((SHIBYTE(v81) & 0x80000000) == 0)
  {
LABEL_29:
    if (!BYTE8(v79))
      goto LABEL_38;
    goto LABEL_36;
  }
LABEL_35:
  operator delete(__p[0]);
  if (!BYTE8(v79))
    goto LABEL_38;
LABEL_36:
  if (SBYTE7(v79) < 0)
    operator delete(*(void **)&object[8]);
LABEL_38:
  if (*(_QWORD *)object)
    os_release(*(void **)object);
  if (v8 && *(_QWORD *)(v8 + 24))
  {
    v26 = _os_log_pack_size();
    v27 = (std::__shared_weak_count_vtbl *)operator new(v26, (std::align_val_t)8uLL);
    v28 = (std::__shared_weak_count *)operator new();
    v29 = v28;
    v28->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    v28->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v28->__shared_weak_owners_ = 0;
    v28[1].__vftable = v27;
    *(_QWORD *)object = v27;
    *(_QWORD *)&object[8] = v27;
    *(_QWORD *)&object[16] = v28;
    do
      v31 = __ldxr(p_shared_owners);
    while (__stxr(v31 + 1, p_shared_owners));
    v79 = 0uLL;
    __p[0] = 0;
    do
      v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v29);
    }
    v33 = *(_QWORD *)object;
    v34 = _os_log_pack_fill();
    *(_DWORD *)v34 = 134217984;
    *(_QWORD *)(v34 + 4) = v66;
    v35 = operator new();
    v36 = *(unsigned __int8 *)(v65 + 39);
    v37 = v64;
    if ((v36 & 0x80u) != 0)
    {
      v37 = *(_QWORD *)(v65 + 16);
      v36 = *(_QWORD *)(v65 + 24);
    }
    *(_QWORD *)v35 = v33;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)&object[8];
    *(_QWORD *)&object[8] = 0;
    *(_QWORD *)&object[16] = 0;
    *(_OWORD *)(v35 + 24) = v79;
    v79 = 0uLL;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 48) = v36;
    *(_BYTE *)(v35 + 56) = 1;
    v76 = 0;
    v77 = v35;
    (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v8 + 24) + 40))(*(_QWORD *)(v8 + 24), &v77);
    v38 = v77;
    v77 = 0;
    if (v38)
    {
      v39 = *(std::__shared_weak_count **)(v38 + 32);
      if (v39)
      {
        v40 = (unint64_t *)&v39->__shared_owners_;
        do
          v41 = __ldaxr(v40);
        while (__stlxr(v41 - 1, v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
      }
      v42 = *(std::__shared_weak_count **)(v38 + 16);
      if (v42)
      {
        v43 = (unint64_t *)&v42->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
      MEMORY[0x227684CE8](v38, 0x10F0C40B62ED6C6);
      v45 = v76;
      v76 = 0;
      if (v45)
      {
        v46 = *(std::__shared_weak_count **)(v45 + 32);
        if (v46)
        {
          v47 = (unint64_t *)&v46->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        v49 = *(std::__shared_weak_count **)(v45 + 16);
        if (v49)
        {
          v50 = (unint64_t *)&v49->__shared_owners_;
          do
            v51 = __ldaxr(v50);
          while (__stlxr(v51 - 1, v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
            std::__shared_weak_count::__release_weak(v49);
          }
        }
        MEMORY[0x227684CE8](v45, 0x10F0C40B62ED6C6);
      }
    }
    v52 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
    if (*((_QWORD *)&v79 + 1))
    {
      v53 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
      do
        v54 = __ldaxr(v53);
      while (__stlxr(v54 - 1, v53));
      if (!v54)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
    v55 = *(std::__shared_weak_count **)&object[16];
    if (*(_QWORD *)&object[16])
    {
      v56 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
  }
  else
  {
    os_log_type_enabled(v23, OS_LOG_TYPE_INFO);
    *(_DWORD *)object = 134217984;
    *(_QWORD *)&object[4] = v66;
    v58 = (void *)_os_log_send_and_compose_impl();
    if (v58)
      free(v58);
  }
  if (v6)
  {
    sub_22322C138((uint64_t)v68, "VLM: Dump cached %lu chunks", a1[9]);
    sub_223182C08((uint64_t)v68);
  }
  sub_223182C08((uint64_t)v68);
  v59 = v74;
  if (v74)
  {
    v60 = (unint64_t *)&v74->__shared_owners_;
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
      v62 = (uint64_t *)a1[8];
      if (!v62)
        return;
      goto LABEL_96;
    }
  }
LABEL_91:
  v62 = (uint64_t *)a1[8];
  if (!v62)
    return;
  do
  {
LABEL_96:
    if (*((_DWORD *)v62 + 4) == a2)
    {
      v63 = *((unsigned int *)v62 + 8);
      if (0x84BDA12F684BDA13 * ((uint64_t)(a1[1] - *a1) >> 4) <= v63
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 105, (uint64_t)"index < mesh_buffers_.size()", 28, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C)|| !*(_BYTE *)(a1[3] + v63)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/ChunkMeshTable.cpp", 106, (uint64_t)"used_buffer_flags_[index] != 0", 30, (uint64_t)&unk_22459CCCA, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      sub_22414E9E0(a3, *a1 + 432 * v63);
    }
    v62 = (uint64_t *)*v62;
  }
  while (v62);
}

void sub_223A33558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,int a26,__int16 a27,char a28,char a29,void *__p,void *a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  if (a36)
  {
    if (a35 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a15);
  sub_22316F8F4(a14);
  _Unwind_Resume(a1);
}

void sub_223A33684()
{
  sub_22316DBD4("vector");
}

uint64_t *sub_223A33698(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t prime;
  void *v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  size_t v28;
  size_t v29;
  size_t v30;
  _QWORD *i;
  size_t v32;
  uint64_t v33;
  size_t v34;
  uint8x8_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  size_t v39;
  unint64_t v40;
  uint8x8_t v41;
  _QWORD *v42;
  unint64_t v43;
  size_t v44;
  void *v45;

  v4 = *(_DWORD *)(a2 + 16);
  v5 = *(_DWORD *)(a2 + 20);
  v6 = *(_DWORD *)(a2 + 24);
  v7 = *(_DWORD *)(a2 + 28);
  v8 = (19349669 * v5) ^ (73856093 * v4) ^ (83492791 * v6) ^ (37783632 * v7);
  *(_QWORD *)(a2 + 8) = v8;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v11 = (19349669 * v5) ^ (73856093 * v4) ^ (83492791 * v6) ^ (37783632 * v7);
      if (v9 <= v8)
        v11 = v8 % v9;
    }
    else
    {
      v11 = (v9 - 1) & v8;
    }
    v12 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v11);
    if (v12)
    {
      v13 = *v12;
      if (v13)
      {
        if (v10.u32[0] < 2uLL)
        {
          while (1)
          {
            v15 = v13[1];
            if (v15 == v8)
            {
              if (*((_DWORD *)v13 + 4) == v4
                && *((_DWORD *)v13 + 5) == v5
                && *((_DWORD *)v13 + 6) == v6
                && *((_DWORD *)v13 + 7) == v7)
              {
                return v13;
              }
            }
            else if ((v15 & (v9 - 1)) != v11)
            {
              goto LABEL_28;
            }
            v13 = (uint64_t *)*v13;
            if (!v13)
              goto LABEL_28;
          }
        }
        do
        {
          v14 = v13[1];
          if (v14 == v8)
          {
            if (*((_DWORD *)v13 + 4) == v4
              && *((_DWORD *)v13 + 5) == v5
              && *((_DWORD *)v13 + 6) == v6
              && *((_DWORD *)v13 + 7) == v7)
            {
              return v13;
            }
          }
          else
          {
            if (v14 >= v9)
              v14 %= v9;
            if (v14 != v11)
              break;
          }
          v13 = (uint64_t *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_28:
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    v19 = 1;
    if (v9 >= 3)
      v19 = (v9 & (v9 - 1)) != 0;
    v20 = v19 | (2 * v9);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      prime = v21;
    else
      prime = v20;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v9 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v9)
      goto LABEL_40;
    if (prime >= v9)
      goto LABEL_76;
    v34 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v9 < 3 || (v35 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v35.i16[0] = vaddlv_u8(v35), v35.u32[0] > 1uLL))
    {
      v44 = std::__next_prime(v34);
      if (prime <= v44)
        prime = v44;
      if (prime >= v9)
        goto LABEL_63;
    }
    else
    {
      v36 = 1 << -(char)__clz(v34 - 1);
      if (v34 >= 2)
        v34 = v36;
      if (prime <= v34)
        prime = v34;
      if (prime >= v9)
      {
LABEL_63:
        v9 = *(_QWORD *)(a1 + 8);
        goto LABEL_76;
      }
    }
    if (prime)
    {
LABEL_40:
      if (prime >> 61)
        sub_223174E94();
      v23 = operator new(8 * prime);
      v24 = *(void **)a1;
      *(_QWORD *)a1 = v23;
      if (v24)
        operator delete(v24);
      v25 = 0;
      *(_QWORD *)(a1 + 8) = prime;
      do
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v25++) = 0;
      while (prime != v25);
      v27 = a1 + 16;
      v26 = *(_QWORD **)(a1 + 16);
      if (!v26)
        goto LABEL_75;
      v28 = v26[1];
      v29 = prime - 1;
      if ((prime & (prime - 1)) == 0)
      {
        v30 = v28 & v29;
        *(_QWORD *)(*(_QWORD *)a1 + 8 * v30) = v27;
        for (i = (_QWORD *)*v26; *v26; i = (_QWORD *)*v26)
        {
          v32 = i[1] & v29;
          if (v32 == v30)
          {
            v26 = i;
          }
          else if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v32))
          {
            *v26 = *i;
            v33 = 8 * v32;
            *i = **(_QWORD **)(*(_QWORD *)a1 + v33);
            **(_QWORD **)(*(_QWORD *)a1 + v33) = i;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v32) = v26;
            v26 = i;
            v30 = v32;
          }
        }
LABEL_75:
        v9 = prime;
        goto LABEL_76;
      }
      if (v28 >= prime)
        v28 %= prime;
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v28) = v27;
      v37 = (_QWORD *)*v26;
      if (!*v26)
        goto LABEL_75;
      while (1)
      {
        v39 = v37[1];
        if (v39 >= prime)
          v39 %= prime;
        if (v39 == v28)
          goto LABEL_69;
        if (*(_QWORD *)(*(_QWORD *)a1 + 8 * v39))
        {
          *v26 = *v37;
          v38 = 8 * v39;
          *v37 = **(_QWORD **)(*(_QWORD *)a1 + v38);
          **(_QWORD **)(*(_QWORD *)a1 + v38) = v37;
          v37 = v26;
LABEL_69:
          v26 = v37;
          v37 = (_QWORD *)*v37;
          if (!v37)
            goto LABEL_75;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a1 + 8 * v39) = v26;
          v26 = v37;
          v37 = (_QWORD *)*v37;
          v28 = v39;
          if (!v37)
            goto LABEL_75;
        }
      }
    }
    v45 = *(void **)a1;
    *(_QWORD *)a1 = 0;
    if (v45)
      operator delete(v45);
    v9 = 0;
    *(_QWORD *)(a1 + 8) = 0;
  }
LABEL_76:
  v40 = *(_QWORD *)(a2 + 8);
  v41 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
  v41.i16[0] = vaddlv_u8(v41);
  if (v41.u32[0] > 1uLL)
  {
    if (v40 >= v9)
      v40 %= v9;
  }
  else
  {
    v40 &= v9 - 1;
  }
  v42 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v40);
  if (v42)
  {
    *(_QWORD *)a2 = *v42;
LABEL_88:
    *v42 = a2;
    goto LABEL_89;
  }
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(*(_QWORD *)a1 + 8 * v40) = a1 + 16;
  if (*(_QWORD *)a2)
  {
    v43 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    if (v41.u32[0] > 1uLL)
    {
      if (v43 >= v9)
        v43 %= v9;
    }
    else
    {
      v43 &= v9 - 1;
    }
    v42 = (_QWORD *)(*(_QWORD *)a1 + 8 * v43);
    goto LABEL_88;
  }
LABEL_89:
  ++*(_QWORD *)(a1 + 24);
  return (uint64_t *)a2;
}

unsigned __int8 *sub_223A33B94@<X0>(unsigned __int8 *result@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, float a4@<S0>, float32x4_t a5@<Q3>, unsigned int a6@<S4>, unsigned int a7@<S5>)
{
  unsigned int v7;
  float v8;
  unsigned int v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  int16x8_t v13;

  v7 = result[3];
  if (result[3])
  {
    if (a2[3])
    {
      a5.i32[0] = 0.5;
      v8 = floorf((float)((float)((float)(1.0 - a4) * (float)v7) + (float)((float)a2[3] * a4)) + 0.5);
      a5.i8[0] = *result;
      a5.f32[0] = (float)a5.u32[0];
      LOBYTE(a6) = result[1];
      LOBYTE(a7) = result[2];
      a5.f32[1] = (float)a6;
      *(float *)&v9 = (float)a7;
      a5.f32[2] = (float)a7;
      v10 = vmulq_n_f32(a5, 1.0 - a4);
      a5.i8[0] = *a2;
      a5.f32[0] = (float)a5.u32[0];
      LOBYTE(v9) = a2[1];
      LOBYTE(a7) = a2[2];
      a5.f32[1] = (float)v9;
      a5.f32[2] = (float)a7;
      v11 = vaddq_f32(v10, vmulq_n_f32(a5, a4));
      v10.i64[0] = 0x3F0000003F000000;
      v10.i64[1] = 0x3F0000003F000000;
      v12 = vaddq_f32(v11, v10);
      v12.f32[3] = v8;
      v13 = (int16x8_t)vcvtq_s32_f32(v12);
      *(int16x4_t *)v13.i8 = vmovn_s32((int32x4_t)v13);
      *(_DWORD *)a3 = vmovn_s16(v13).u32[0];
    }
    else
    {
      *(_WORD *)a3 = *(_WORD *)result;
      *(_BYTE *)(a3 + 2) = result[2];
      *(_BYTE *)(a3 + 3) = v7;
    }
  }
  else
  {
    *(_DWORD *)a3 = *(_DWORD *)a2;
  }
  return result;
}

void sub_223A33C5C(uint64_t a1, unsigned int a2)
{
  void **v3;
  void **v4;
  unsigned __int8 *v5;
  unsigned __int8 **v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned __int8 *v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 *v26;
  int v27;
  BOOL v28;
  unsigned __int8 *v29;
  unsigned int v30;
  BOOL v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  BOOL v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  BOOL v41;
  unsigned int v42;
  _BOOL4 v43;
  unsigned __int8 *v44;
  unsigned __int8 **v45;
  uint64_t v46;
  int v47;
  char *v48;
  unsigned __int8 v49;
  uint64_t v50;
  int v51;
  unsigned __int8 v52;
  BOOL v53;
  unsigned __int8 v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  char v58;
  __int16 v59;
  __int16 v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  char *v72;
  char *v73;
  int v74;
  __int16 v75;
  char *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  BOOL v90;
  char *v91;
  char *v92;
  int v93;
  __int16 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  BOOL v108;
  char *v109;
  char *v110;
  int v111;
  char *v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  __int128 *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  __int128 v132;
  unsigned __int8 v133;
  int v134;
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  size_t v138;
  void **v139;
  unint64_t v140;
  const void **v141;
  const void *v142;
  uint64_t v143;
  uint64_t v144;
  void **v145;
  uint64_t v146;
  uint64_t v147;
  size_t v148;
  const char *v149;
  unsigned __int8 v150;
  unsigned __int8 v151;
  const char *v152;
  size_t v153;
  _BYTE *v154;
  int v155;
  size_t v156;
  uint64_t v157;
  uint64_t v158;
  void **v159;
  NSObject *v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  size_t v164;
  std::__shared_weak_count_vtbl *v165;
  std::__shared_weak_count *v166;
  size_t v167;
  size_t v168;
  _QWORD *v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  char v174;
  _QWORD *v175;
  uint64_t v176;
  std::__shared_weak_count *v177;
  unint64_t *p_shared_owners;
  unint64_t v179;
  void *v180;
  unint64_t *v181;
  unint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  std::__shared_weak_count *v198;
  unint64_t *v199;
  unint64_t v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  _QWORD *v204;
  std::__shared_weak_count *v205;
  unint64_t *v206;
  unint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  std::__shared_weak_count *v211;
  unint64_t *v212;
  unint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  const char *v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  unint64_t v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  char v225;
  unsigned int v226;
  __int16 v227;
  unsigned __int8 v228;
  unsigned __int8 v229;
  _QWORD *v230;
  __int16 v231;
  uint64_t v232;
  _QWORD *v233;
  unsigned int v234;
  unsigned int v235;
  BOOL v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  _BYTE *v240;
  uint64_t v241;
  _BYTE *v242;
  uint64_t v243;
  _BYTE *v244;
  uint64_t v245;
  _BYTE *v246;
  int v247;
  uint64_t v248;
  int v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  _BYTE *v253;
  _QWORD *v254;
  __int16 v255;
  uint64_t v256;
  _QWORD *v257;
  unsigned int v258;
  BOOL v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  _BYTE *v264;
  uint64_t v265;
  _BYTE *v266;
  uint64_t v267;
  _BYTE *v268;
  uint64_t v269;
  _BYTE *v270;
  int v271;
  uint64_t v272;
  int v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  _BYTE *v277;
  _QWORD *v278;
  __int16 v279;
  uint64_t v280;
  _QWORD *v281;
  unsigned int v282;
  BOOL v283;
  unsigned int v284;
  BOOL v285;
  unsigned int v286;
  unsigned int v287;
  _BYTE *v288;
  uint64_t v289;
  _BYTE *v290;
  uint64_t v291;
  _BYTE *v292;
  uint64_t v293;
  _BYTE *v294;
  int v295;
  uint64_t v296;
  int v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  _BYTE *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  char *v308;
  unsigned int v309;
  char *v310;
  _QWORD *v311;
  unint64_t v312;
  _QWORD *v313;
  _QWORD *v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  _BYTE *v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t *v324;
  uint64_t *v325;
  uint64_t *v326;
  _BYTE *v327;
  int v328;
  uint64_t v329;
  int v330;
  uint64_t **v331;
  uint64_t *v332;
  uint64_t v333;
  void **v334;
  unint64_t v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  unint64_t v341;
  char *v342;
  char *v343;
  unint64_t v344;
  void **v345;
  char *v346;
  char *v347;
  unsigned __int8 v348;
  int v349;
  char *v350;
  uint64_t v351;
  _QWORD *v352;
  unint64_t v353;
  _QWORD *i;
  _QWORD *v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  _BYTE *v362;
  uint64_t v363;
  uint64_t *v364;
  uint64_t *v365;
  uint64_t *v366;
  uint64_t *v367;
  _BYTE *v368;
  int v369;
  uint64_t v370;
  int v371;
  uint64_t **v372;
  uint64_t *v373;
  uint64_t v374;
  void **v375;
  unint64_t v376;
  uint64_t v377;
  _BYTE *v378;
  uint64_t v379;
  uint64_t v380;
  unint64_t v381;
  uint64_t v382;
  unint64_t v383;
  char *v384;
  char *v385;
  unint64_t v386;
  char *v387;
  char *v388;
  int v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  __int128 v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  char *v399;
  uint64_t v400;
  __int128 v401;
  uint64_t v402;
  uint64_t v403;
  unsigned int v404;
  char *v405;
  unsigned int v406;
  unsigned int v407;
  char *v408;
  _QWORD *v409;
  unint64_t v410;
  _QWORD *v411;
  _QWORD *v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  BOOL v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  _BYTE *v420;
  uint64_t v421;
  char *v422;
  char *v423;
  char *v424;
  uint64_t v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  unint64_t v429;
  char *v430;
  char *v431;
  unint64_t v432;
  char *v433;
  char *v434;
  int v435;
  _QWORD *v436;
  unint64_t v437;
  _QWORD *v438;
  _QWORD *v439;
  unsigned int v440;
  unsigned int v441;
  BOOL v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  _BYTE *v447;
  uint64_t v448;
  unsigned __int8 v449;
  char *v450;
  char *v451;
  _BYTE *v452;
  uint64_t v453;
  uint64_t v454;
  unint64_t v455;
  uint64_t v456;
  unint64_t v457;
  char *v458;
  char *v459;
  unint64_t v460;
  char *v461;
  char *v462;
  int v463;
  _QWORD *v464;
  unint64_t v465;
  _QWORD *v466;
  _QWORD *v467;
  unsigned int v468;
  unsigned int v469;
  unsigned int v470;
  BOOL v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  _BYTE *v475;
  uint64_t v476;
  char *v477;
  char *v478;
  _BYTE *v479;
  uint64_t v480;
  uint64_t v481;
  unint64_t v482;
  uint64_t v483;
  unint64_t v484;
  char *v485;
  char *v486;
  unint64_t v487;
  char *v488;
  char *v489;
  int v490;
  _QWORD *v491;
  unint64_t v492;
  _QWORD *v493;
  _QWORD *v494;
  unsigned int v495;
  unsigned int v496;
  BOOL v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  _BYTE *v502;
  uint64_t v503;
  char *v504;
  _BYTE *v505;
  uint64_t v506;
  uint64_t v507;
  unint64_t v508;
  uint64_t v509;
  unint64_t v510;
  char *v511;
  char *v512;
  unint64_t v513;
  char *v514;
  char *v515;
  int v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  char *v520;
  uint64_t v521;
  __int128 v522;
  uint64_t v523;
  uint64_t v524;
  char *v525;
  char *v526;
  uint64_t v527;
  __int128 v528;
  uint64_t v529;
  uint64_t v530;
  char *v531;
  char *v532;
  uint64_t v533;
  __int128 v534;
  uint64_t v535;
  uint64_t v536;
  char *v537;
  char *v538;
  uint64_t v539;
  __int128 v540;
  unsigned int v541;
  unsigned int v542;
  unsigned int v543;
  char *v544;
  unsigned int v545;
  char *v546;
  _QWORD *v547;
  unint64_t v548;
  _QWORD *v549;
  _QWORD *v550;
  unsigned int v551;
  unsigned int v552;
  unsigned int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  _BYTE *v557;
  uint64_t v558;
  uint64_t *v559;
  uint64_t *v560;
  uint64_t *v561;
  uint64_t *v562;
  _BYTE *v563;
  int v564;
  uint64_t v565;
  int v566;
  uint64_t **v567;
  uint64_t *v568;
  uint64_t v569;
  void **v570;
  unint64_t v571;
  char *v572;
  uint64_t v573;
  uint64_t v574;
  unint64_t v575;
  uint64_t v576;
  unint64_t v577;
  char *v578;
  char *v579;
  unint64_t v580;
  void **v581;
  char *v582;
  char *v583;
  unsigned __int8 v584;
  int v585;
  char *v586;
  uint64_t v587;
  _QWORD *v588;
  unint64_t v589;
  _QWORD *j;
  _QWORD *v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  _BYTE *v598;
  uint64_t v599;
  uint64_t *v600;
  uint64_t *v601;
  uint64_t *v602;
  uint64_t *v603;
  _BYTE *v604;
  int v605;
  uint64_t v606;
  int v607;
  uint64_t **v608;
  uint64_t *v609;
  uint64_t v610;
  void **v611;
  unint64_t v612;
  uint64_t v613;
  _BYTE *v614;
  uint64_t v615;
  uint64_t v616;
  unint64_t v617;
  uint64_t v618;
  unint64_t v619;
  char *v620;
  char *v621;
  unint64_t v622;
  char *v623;
  char *v624;
  int v625;
  uint64_t v626;
  uint64_t v627;
  char *v628;
  char *v629;
  uint64_t v630;
  __int128 v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  char *v635;
  uint64_t v636;
  __int128 v637;
  uint64_t v638;
  uint64_t v639;
  unsigned int k;
  char *v641;
  unsigned int v642;
  unsigned int v643;
  char *v644;
  _QWORD *v645;
  unint64_t v646;
  _QWORD *v647;
  _QWORD *v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  BOOL v652;
  unsigned int v653;
  unsigned int v654;
  unsigned int v655;
  char *v656;
  char *v657;
  _BYTE *v658;
  uint64_t v659;
  char *v660;
  uint64_t v661;
  uint64_t v662;
  unint64_t v663;
  uint64_t v664;
  unint64_t v665;
  char *v666;
  char *v667;
  unint64_t v668;
  char *v669;
  char *v670;
  int v671;
  _QWORD *v672;
  unint64_t v673;
  _QWORD *v674;
  _QWORD *v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  _BYTE *v682;
  uint64_t v683;
  char *v684;
  char *v685;
  unsigned __int8 v686;
  char *v687;
  uint64_t v688;
  uint64_t v689;
  unint64_t v690;
  uint64_t v691;
  unint64_t v692;
  char *v693;
  char *v694;
  unint64_t v695;
  char *v696;
  char *v697;
  int v698;
  _QWORD *v699;
  unint64_t v700;
  _QWORD *v701;
  _QWORD *v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  BOOL v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  char *v710;
  char *v711;
  _BYTE *v712;
  uint64_t v713;
  char *v714;
  uint64_t v715;
  uint64_t v716;
  unint64_t v717;
  uint64_t v718;
  unint64_t v719;
  char *v720;
  char *v721;
  unint64_t v722;
  char *v723;
  char *v724;
  int v725;
  _QWORD *v726;
  unint64_t v727;
  _QWORD *v728;
  _QWORD *v729;
  unsigned int v730;
  unsigned int v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  _BYTE *v736;
  uint64_t v737;
  char *v738;
  _BYTE *v739;
  uint64_t v740;
  uint64_t v741;
  unint64_t v742;
  uint64_t v743;
  unint64_t v744;
  char *v745;
  char *v746;
  unint64_t v747;
  char *v748;
  char *v749;
  int v750;
  uint64_t v751;
  uint64_t v752;
  char *v753;
  char *v754;
  uint64_t v755;
  __int128 v756;
  uint64_t v757;
  uint64_t v758;
  char *v759;
  char *v760;
  uint64_t v761;
  __int128 v762;
  uint64_t v763;
  uint64_t v764;
  char *v765;
  __int128 *v766;
  uint64_t v767;
  __int128 v768;
  uint64_t v769;
  uint64_t v770;
  char *v771;
  char *v772;
  uint64_t v773;
  __int128 v774;
  unsigned int v775;
  unsigned int v776;
  unsigned int v777;
  char *v778;
  unsigned int v779;
  char *v780;
  _QWORD *v781;
  unint64_t v782;
  _QWORD *v783;
  _QWORD *v784;
  unsigned int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  unsigned int v789;
  unsigned int v790;
  __int16 v791;
  _BYTE *v792;
  uint64_t v793;
  uint64_t *v794;
  uint64_t *v795;
  uint64_t *v796;
  uint64_t *v797;
  _BYTE *v798;
  int v799;
  uint64_t v800;
  int v801;
  uint64_t **v802;
  uint64_t *v803;
  uint64_t v804;
  uint64_t v805;
  char *v806;
  char *v807;
  unsigned __int8 v808;
  char *v809;
  uint64_t v810;
  uint64_t v811;
  unint64_t v812;
  uint64_t v813;
  unint64_t v814;
  __int16 v815;
  char *v816;
  char *v817;
  unint64_t v818;
  char *v819;
  char *v820;
  int v821;
  uint64_t v822;
  unint64_t v823;
  _QWORD *v824;
  _QWORD *v825;
  unsigned int v826;
  unsigned int v827;
  unsigned int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  _BYTE *v832;
  __int16 v833;
  void **v834;
  uint64_t v835;
  uint64_t *v836;
  uint64_t *v837;
  uint64_t *v838;
  uint64_t *v839;
  _BYTE *v840;
  int v841;
  uint64_t v842;
  int v843;
  uint64_t **v844;
  uint64_t *v845;
  uint64_t v846;
  unint64_t v847;
  char *v848;
  uint64_t v849;
  char *v850;
  uint64_t v851;
  uint64_t v852;
  unint64_t v853;
  uint64_t v854;
  unint64_t v855;
  char *v856;
  char *v857;
  unint64_t v858;
  char *v859;
  char *v860;
  int v861;
  char *v862;
  char *v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  char *v867;
  uint64_t v868;
  __int128 v869;
  uint64_t v870;
  uint64_t v871;
  char *v872;
  __int128 *v873;
  uint64_t v874;
  __int128 v875;
  uint64_t v876;
  uint64_t v877;
  unsigned int v878;
  char *v879;
  unsigned int v880;
  unsigned int v881;
  char *v882;
  char *v883;
  unint64_t v884;
  char **v885;
  char **v886;
  unsigned int v887;
  unsigned int v888;
  BOOL v889;
  unsigned int v890;
  unsigned int v891;
  unsigned int v892;
  unsigned int v893;
  char *v894;
  uint64_t v895;
  char *v896;
  char *v897;
  char *v898;
  uint64_t v899;
  uint64_t v900;
  unint64_t v901;
  uint64_t v902;
  unint64_t v903;
  char *v904;
  char *v905;
  unint64_t v906;
  char *v907;
  char *v908;
  int v909;
  char *v910;
  unint64_t v911;
  char **v912;
  char **v913;
  unsigned int v914;
  unsigned int v915;
  unsigned int v916;
  unsigned int v917;
  BOOL v918;
  unsigned int v919;
  unsigned int v920;
  char *v921;
  uint64_t v922;
  unsigned __int8 v923;
  char *v924;
  char *v925;
  _BYTE *v926;
  uint64_t v927;
  uint64_t v928;
  unint64_t v929;
  uint64_t v930;
  unint64_t v931;
  char *v932;
  char *v933;
  unint64_t v934;
  char *v935;
  char *v936;
  int v937;
  char *v938;
  unint64_t v939;
  char **v940;
  char **v941;
  unsigned int v942;
  unsigned int v943;
  BOOL v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  char *v949;
  uint64_t v950;
  char *v951;
  char *v952;
  _BYTE *v953;
  uint64_t v954;
  uint64_t v955;
  unint64_t v956;
  uint64_t v957;
  unint64_t v958;
  char *v959;
  char *v960;
  unint64_t v961;
  char *v962;
  char *v963;
  int v964;
  char *v965;
  unint64_t v966;
  char **v967;
  char **v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  BOOL v973;
  unsigned int v974;
  unsigned int v975;
  char *v976;
  uint64_t v977;
  char *v978;
  _BYTE *v979;
  uint64_t v980;
  uint64_t v981;
  unint64_t v982;
  uint64_t v983;
  unint64_t v984;
  char *v985;
  char *v986;
  unint64_t v987;
  char *v988;
  char *v989;
  int v990;
  uint64_t v991;
  uint64_t v992;
  char *v993;
  char *v994;
  uint64_t v995;
  __int128 v996;
  uint64_t v997;
  uint64_t v998;
  char *v999;
  char *v1000;
  uint64_t v1001;
  __int128 v1002;
  uint64_t v1003;
  uint64_t v1004;
  char *v1005;
  char *v1006;
  uint64_t v1007;
  __int128 v1008;
  uint64_t v1009;
  uint64_t v1010;
  char *v1011;
  char *v1012;
  uint64_t v1013;
  __int128 v1014;
  unsigned int v1015;
  uint64_t v1016;
  uint64_t v1017;
  void *v1018;
  void *v1019;
  uint64_t v1020;
  unsigned int v1021;
  unsigned int v1022;
  unsigned int v1023;
  unsigned int v1024;
  unsigned int v1025;
  unsigned int v1026;
  int v1027;
  int v1028;
  int v1029;
  int v1030;
  unsigned int v1031;
  unsigned int v1032;
  int v1033;
  int v1034;
  unsigned __int8 v1035;
  unsigned int v1036;
  unsigned int v1037;
  unsigned int v1038;
  unsigned int v1039;
  unsigned int v1040;
  unsigned int v1041;
  uint64_t v1042;
  int v1043;
  int v1044;
  uint64_t v1045;
  unint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  _QWORD *v1049;
  int __s;
  char *__sa;
  unsigned int __sb;
  void **v1054;
  _QWORD v1055[3];
  int v1056;
  const char *v1057;
  int v1058;
  const char *v1059;
  uint64_t v1060;
  std::__shared_weak_count *v1061;
  void *__dst[2];
  int64_t v1063;
  void *v1064[2];
  _QWORD v1065[3];
  _QWORD v1066[3];
  uint64_t v1067;
  unint64_t v1068;
  void *__p;
  char v1070;
  unint64_t v1071;
  int v1072;
  uint64_t v1073;
  uint64_t v1074;
  __int128 v1075;
  std::__shared_weak_count *v1076;
  char *v1077;
  std::__shared_weak_count *v1078;
  _QWORD *v1079;
  __int128 v1080;
  _BYTE v1081[24];
  __int128 v1082;
  void *v1083[2];
  unint64_t v1084;
  char v1085;
  _QWORD v1086[5];

  v3 = (void **)a1;
  v1086[2] = *MEMORY[0x24BDAC8D0];
  if (a2 >= 4)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/EdgeOwnerTable.cpp", 38, (uint64_t)"num_mesh_levels <= kNumMeshLevels", 33, (uint64_t)&unk_22459CE1E, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    goto LABEL_68;
  }
  if (a2)
  {
LABEL_68:
    v46 = 0;
    v1054 = v3 + 3;
    v1018 = *(void **)(MEMORY[0x24BEDB7F0] + 64);
    v1019 = (void *)*MEMORY[0x24BEDB7F0];
    v1017 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
    v1015 = a2;
    v1020 = a2;
    v1016 = MEMORY[0x24BEDB848] + 16;
    while (1)
    {
      v47 = 0;
      v48 = (char *)v3[1];
      *((_WORD *)v1054 + v46) = ((_DWORD)v48 - *(_DWORD *)v3) >> 2;
      v1031 = (8u >> v46) + 1;
      __s = 1 << v46;
      while (2)
      {
        if (v47 == 8)
          v49 = 0;
        else
          v49 = v47;
        v50 = 1;
        if (v47 == 8)
          v50 = 2;
        v1042 = v50;
        v1027 = v47;
        v1029 = (v49 >> v46) * v1031;
        v51 = 0;
        while (2)
        {
          v52 = 0;
          v53 = v51 == 8;
          v1034 = v51;
          if (v51 == 8)
            v54 = 0;
          else
            v54 = v51;
          v55 = 1;
          if (v53)
            v55 = 2;
          v1047 = v55;
          v1044 = ((v54 >> v46) + v1029) * v1031;
          do
          {
            if (v52 == 8)
              v56 = 0;
            else
              v56 = v52;
            v57 = 1;
            if (v52 == 8)
              v57 = 2;
            v58 = byte_224659778[9 * v1042 + 3 * v1047 + v57];
            v59 = 3 * ((v56 >> v46) + v1044);
            v60 = v59 + *((_WORD *)v1054 + v46);
            v61 = (char *)v3[2];
            if (v48 < v61)
            {
              *v48 = v58;
              *((_WORD *)v48 + 1) = v60;
              v62 = v48 + 4;
              goto LABEL_108;
            }
            v63 = (char *)*v3;
            v64 = v48 - (_BYTE *)*v3;
            v65 = v64 >> 2;
            v66 = (v64 >> 2) + 1;
            if (v66 >> 62)
              goto LABEL_321;
            v67 = v61 - v63;
            if (v67 >> 1 > v66)
              v66 = v67 >> 1;
            if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFFCLL)
              v68 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v68 = v66;
            if (v68 >> 62)
              goto LABEL_320;
            v69 = (char *)operator new(4 * v68);
            v70 = &v69[4 * v65];
            *v70 = v58;
            *((_WORD *)v70 + 1) = v60;
            if (v48 != v63)
            {
              v71 = v48 - v63 - 4;
              if (v71 < 0xBC
                || (v114 = (v48 - 4 - v63) & 0xFFFFFFFFFFFFFFFCLL, &v69[v64 - 4 - v114] > &v69[v64 - 4])
                || &v48[-v114 - 4] > v48 - 4
                || (unint64_t)(v48 - &v69[v64]) < 0x20)
              {
                v72 = v48;
                v73 = &v69[4 * v65];
                v3 = (void **)a1;
              }
              else
              {
                v115 = (v71 >> 2) + 1;
                v116 = 4 * (v115 & 0x7FFFFFFFFFFFFFF8);
                v72 = &v48[-v116];
                v73 = &v70[-v116];
                v117 = &v69[4 * v65 - 16];
                v118 = (__int128 *)(v48 - 16);
                v119 = v115 & 0x7FFFFFFFFFFFFFF8;
                v3 = (void **)a1;
                do
                {
                  v120 = *v118;
                  *((_OWORD *)v117 - 1) = *(v118 - 1);
                  *(_OWORD *)v117 = v120;
                  v117 -= 32;
                  v118 -= 2;
                  v119 -= 8;
                }
                while (v119);
                if (v115 == (v115 & 0x7FFFFFFFFFFFFFF8))
                {
LABEL_106:
                  v61 = &v69[4 * v68];
                  v62 = v70 + 4;
                  *v3 = v73;
                  v3[1] = v70 + 4;
                  v3[2] = v61;
                  if (!v63)
                    goto LABEL_108;
LABEL_107:
                  operator delete(v63);
                  v61 = (char *)v3[2];
                  goto LABEL_108;
                }
              }
              do
              {
                v74 = *((_DWORD *)v72 - 1);
                v72 -= 4;
                *((_DWORD *)v73 - 1) = v74;
                v73 -= 4;
              }
              while (v72 != v63);
              goto LABEL_106;
            }
            v3 = (void **)a1;
            v61 = &v69[4 * v68];
            v62 = v70 + 4;
            *(_QWORD *)a1 = v70;
            *(_QWORD *)(a1 + 8) = v70 + 4;
            *(_QWORD *)(a1 + 16) = v61;
            if (v63)
              goto LABEL_107;
LABEL_108:
            v3[1] = v62;
            v75 = v59 + *((_WORD *)v1054 + v46) + 1;
            if (v62 < v61)
            {
              *v62 = v58;
              *((_WORD *)v62 + 1) = v75;
              v76 = v62 + 4;
              goto LABEL_128;
            }
            v77 = *v3;
            v78 = v62 - (_BYTE *)*v3;
            v79 = v78 >> 2;
            v80 = (v78 >> 2) + 1;
            if (v80 >> 62)
              goto LABEL_321;
            v81 = v61 - v77;
            if (v81 >> 1 > v80)
              v80 = v81 >> 1;
            if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFFCLL)
              v82 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v82 = v80;
            if (v82 >> 62)
              goto LABEL_320;
            v83 = (char *)operator new(4 * v82);
            v84 = &v83[4 * v79];
            *v84 = v58;
            *((_WORD *)v84 + 1) = v75;
            if (v62 != v77)
            {
              v85 = v62 - v77 - 4;
              if (v85 < 0xBC
                || ((v86 = (v62 - 4 - v77) & 0xFFFFFFFFFFFFFFFCLL,
                     v87 = (unint64_t)&v83[v78 - 4],
                     v88 = v87 - v86,
                     v89 = (unint64_t)&v62[-v86 - 4],
                     v88 <= v87)
                  ? (v90 = v89 > (unint64_t)(v62 - 4))
                  : (v90 = 1),
                    v90 || (unint64_t)(&v62[-v78] - v83) < 0x20))
              {
                v91 = v62;
                v92 = &v83[4 * v79];
                v3 = (void **)a1;
                goto LABEL_125;
              }
              v121 = (v85 >> 2) + 1;
              v122 = 4 * (v121 & 0x7FFFFFFFFFFFFFF8);
              v91 = &v62[-v122];
              v92 = &v84[-v122];
              v123 = &v83[4 * v79 - 16];
              v124 = v62 - 16;
              v125 = v121 & 0x7FFFFFFFFFFFFFF8;
              v3 = (void **)a1;
              do
              {
                v126 = *(_OWORD *)v124;
                *((_OWORD *)v123 - 1) = *((_OWORD *)v124 - 1);
                *(_OWORD *)v123 = v126;
                v123 -= 32;
                v124 -= 32;
                v125 -= 8;
              }
              while (v125);
              if (v121 != (v121 & 0x7FFFFFFFFFFFFFF8))
              {
                do
                {
LABEL_125:
                  v93 = *((_DWORD *)v91 - 1);
                  v91 -= 4;
                  *((_DWORD *)v92 - 1) = v93;
                  v92 -= 4;
                }
                while (v91 != v77);
              }
              v61 = &v83[4 * v82];
              v76 = v84 + 4;
              *v3 = v92;
              v3[1] = v84 + 4;
              v3[2] = v61;
              if (!v77)
                goto LABEL_128;
LABEL_127:
              operator delete(v77);
              v61 = (char *)v3[2];
              goto LABEL_128;
            }
            v3 = (void **)a1;
            v61 = &v83[4 * v82];
            v76 = v84 + 4;
            *(_QWORD *)a1 = v84;
            *(_QWORD *)(a1 + 8) = v84 + 4;
            *(_QWORD *)(a1 + 16) = v61;
            if (v77)
              goto LABEL_127;
LABEL_128:
            v3[1] = v76;
            v94 = v59 + *((_WORD *)v1054 + v46) + 2;
            if (v76 < v61)
            {
              *v76 = v58;
              *((_WORD *)v76 + 1) = v94;
              v48 = v76 + 4;
              goto LABEL_87;
            }
            v95 = (char *)*v3;
            v96 = v76 - (_BYTE *)*v3;
            v97 = v96 >> 2;
            v98 = (v96 >> 2) + 1;
            if (v98 >> 62)
LABEL_321:
              sub_22316E078();
            v99 = v61 - v95;
            if (v99 >> 1 > v98)
              v98 = v99 >> 1;
            if ((unint64_t)v99 >= 0x7FFFFFFFFFFFFFFCLL)
              v100 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v100 = v98;
            if (v100 >> 62)
LABEL_320:
              sub_223174E94();
            v101 = (char *)operator new(4 * v100);
            v102 = &v101[4 * v97];
            *v102 = v58;
            *((_WORD *)v102 + 1) = v94;
            if (v76 == v95)
            {
              v3 = (void **)a1;
              v113 = &v101[4 * v100];
              v48 = v102 + 4;
              *(_QWORD *)a1 = v102;
              *(_QWORD *)(a1 + 8) = v102 + 4;
              *(_QWORD *)(a1 + 16) = v113;
              if (!v95)
                goto LABEL_87;
LABEL_152:
              operator delete(v95);
              goto LABEL_87;
            }
            v103 = v76 - v95 - 4;
            v3 = (void **)a1;
            if (v103 < 0xBC
              || ((v104 = (v76 - 4 - v95) & 0xFFFFFFFFFFFFFFFCLL,
                   v105 = (unint64_t)&v101[v96 - 4],
                   v106 = v105 - v104,
                   v107 = (unint64_t)&v76[-v104 - 4],
                   v106 <= v105)
                ? (v108 = v107 > (unint64_t)(v76 - 4))
                : (v108 = 1),
                  v108 || (unint64_t)(&v76[-v96] - v101) < 0x20))
            {
              v109 = v76;
              v110 = &v101[4 * v97];
              do
              {
LABEL_144:
                v111 = *((_DWORD *)v109 - 1);
                v109 -= 4;
                *((_DWORD *)v110 - 1) = v111;
                v110 -= 4;
              }
              while (v109 != v95);
              goto LABEL_145;
            }
            v127 = (v103 >> 2) + 1;
            v128 = 4 * (v127 & 0x7FFFFFFFFFFFFFF8);
            v109 = &v76[-v128];
            v110 = &v102[-v128];
            v129 = &v101[4 * v97 - 16];
            v130 = v76 - 16;
            v131 = v127 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v132 = *(_OWORD *)v130;
              *((_OWORD *)v129 - 1) = *((_OWORD *)v130 - 1);
              *(_OWORD *)v129 = v132;
              v129 -= 32;
              v130 -= 32;
              v131 -= 8;
            }
            while (v131);
            if (v127 != (v127 & 0x7FFFFFFFFFFFFFF8))
              goto LABEL_144;
LABEL_145:
            v112 = &v101[4 * v100];
            v48 = v102 + 4;
            *(_QWORD *)a1 = v110;
            *(_QWORD *)(a1 + 8) = v102 + 4;
            *(_QWORD *)(a1 + 16) = v112;
            if (v95)
              goto LABEL_152;
LABEL_87:
            v3[1] = v48;
            v52 += __s;
          }
          while (v52 < 9u);
          v51 = v1034 + __s;
          if ((v1034 + __s) < 9u)
            continue;
          break;
        }
        v47 = v1027 + __s;
        if ((v1027 + __s) < 9u)
          continue;
        break;
      }
      v133 = atomic_load((unsigned __int8 *)&qword_2540CCB68);
      if ((v133 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCB68))
      {
        sub_22455F53C(v1081);
        sub_223174DE4(v1064, "cv3d.recon.vlm");
        sub_2232300E0((uint64_t **)v1081, (uint64_t)v1064, &qword_2540CCB60);
        if (SHIBYTE(v1065[0]) < 0)
          operator delete(v1064[0]);
        __cxa_guard_release(&qword_2540CCB68);
        v3 = (void **)a1;
      }
      v1074 = qword_2540CCB60;
      if (**(int **)(qword_2540CCB60 + 56) > 2)
        goto LABEL_70;
      v134 = *(unsigned __int8 *)(qword_2540CCB60 + 72);
      v135 = sub_22322F254(qword_2540CCB60, "OSLogSurrogateAppender", 1, 0);
      v136 = v135;
      if (!v134 && !v135)
        goto LABEL_70;
      sub_223195210((uint64_t)v1064);
      sub_2231813E8(v1065, (uint64_t)"regular_edge_index_offset ", 26);
      v137 = (_QWORD *)std::ostream::operator<<();
      sub_2231813E8(v137, (uint64_t)" : ", 3);
      std::ostream::operator<<();
      if ((v1072 & 0x10) != 0)
      {
        v140 = v1071;
        v141 = (const void **)&v1067;
        if (v1071 < v1068)
        {
          v1071 = v1068;
          v140 = v1068;
          v141 = (const void **)&v1067;
        }
      }
      else
      {
        if ((v1072 & 8) == 0)
        {
          v138 = 0;
          HIBYTE(v1063) = 0;
          v139 = __dst;
          goto LABEL_186;
        }
        v140 = v1066[2];
        v141 = (const void **)v1066;
      }
      v142 = *v141;
      v138 = v140 - (_QWORD)*v141;
      if (v138 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v138 >= 0x17)
      {
        v143 = (v138 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v138 | 7) != 0x17)
          v143 = v138 | 7;
        v144 = v143 + 1;
        v139 = (void **)operator new(v143 + 1);
        __dst[1] = (void *)v138;
        v1063 = v144 | 0x8000000000000000;
        __dst[0] = v139;
LABEL_185:
        memmove(v139, v142, v138);
        goto LABEL_186;
      }
      HIBYTE(v1063) = v140 - *(_BYTE *)v141;
      v139 = __dst;
      if (v138)
        goto LABEL_185;
LABEL_186:
      *((_BYTE *)v139 + v138) = 0;
      v1055[0] = &v1074;
      v1055[1] = std::chrono::steady_clock::now().__d_.__rep_;
      v1055[2] = std::chrono::system_clock::now().__d_.__rep_;
      v1056 = 2;
      v1057 = "unknown file";
      v1058 = 76;
      v1059 = "unknown function";
      v1060 = 0;
      v1061 = 0;
      if (v1063 >= 0)
        v145 = __dst;
      else
        v145 = (void **)__dst[0];
      v146 = *(_QWORD *)v1055[0];
      v147 = *(_QWORD *)v1055[0] + 16;
      v1048 = *(_QWORD *)v1055[0];
      __sa = (char *)v145;
      if (*(char *)(*(_QWORD *)v1055[0] + 39) < 0)
      {
        v149 = *(const char **)(v146 + 16);
        v148 = *(_QWORD *)(v146 + 24);
        v151 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v151 & 1) == 0)
        {
LABEL_314:
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)&v1075);
            sub_223199C58("com.apple.cv3d", (unint64_t)&v1075, &xmmword_255788F40);
            if ((_BYTE)v1077 && SHIBYTE(v1076) < 0)
              operator delete((void *)v1075);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
            v3 = (void **)a1;
          }
        }
      }
      else
      {
        v148 = *(unsigned __int8 *)(*(_QWORD *)v1055[0] + 39);
        v149 = (const char *)(*(_QWORD *)v1055[0] + 16);
        v150 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v150 & 1) == 0)
          goto LABEL_314;
      }
      if (byte_255788F57 >= 0)
        v152 = (const char *)&xmmword_255788F40;
      else
        v152 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v153 = byte_255788F57;
      else
        v153 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)v1081 = os_log_create(v152, v149);
      if (v153 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      v1045 = v147;
      if (v153 >= 0x17)
      {
        v155 = v134;
        v156 = v148;
        v157 = (v153 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v153 | 7) != 0x17)
          v157 = v153 | 7;
        v158 = v157 + 1;
        v154 = operator new(v157 + 1);
        *(_QWORD *)&v1081[16] = v153;
        *(_QWORD *)&v1082 = v158 | 0x8000000000000000;
        *(_QWORD *)&v1081[8] = v154;
        v148 = v156;
        v134 = v155;
LABEL_206:
        memmove(v154, v152, v153);
        goto LABEL_207;
      }
      BYTE7(v1082) = v153;
      v154 = &v1081[8];
      if (v153)
        goto LABEL_206;
LABEL_207:
      v154[v153] = 0;
      BYTE8(v1082) = 1;
      if (v148 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v148 >= 0x17)
      {
        v161 = (v148 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v148 | 7) != 0x17)
          v161 = v148 | 7;
        v162 = (void *)v148;
        v163 = v161 + 1;
        v159 = (void **)operator new(v161 + 1);
        v1083[1] = v162;
        v1084 = v163 | 0x8000000000000000;
        v1083[0] = v159;
        v148 = (size_t)v162;
      }
      else
      {
        HIBYTE(v1084) = v148;
        v159 = v1083;
        if (!v148)
        {
          LOBYTE(v1083[0]) = 0;
          v1085 = 1;
          v160 = *(NSObject **)v1081;
          if ((SHIBYTE(v1084) & 0x80000000) == 0)
            goto LABEL_211;
LABEL_217:
          operator delete(v1083[0]);
          if (BYTE8(v1082))
            goto LABEL_218;
          goto LABEL_220;
        }
      }
      memmove(v159, v149, v148);
      *((_BYTE *)v159 + v148) = 0;
      v1085 = 1;
      v160 = *(NSObject **)v1081;
      if (SHIBYTE(v1084) < 0)
        goto LABEL_217;
LABEL_211:
      if (BYTE8(v1082))
      {
LABEL_218:
        if (SBYTE7(v1082) < 0)
          operator delete(*(void **)&v1081[8]);
      }
LABEL_220:
      if (*(_QWORD *)v1081)
        os_release(*(void **)v1081);
      if (!v136 || !*(_QWORD *)(v136 + 24))
      {
        os_log_type_enabled(v160, OS_LOG_TYPE_DEBUG);
        *(_DWORD *)v1081 = 136315138;
        *(_QWORD *)&v1081[4] = __sa;
        v170 = (void *)_os_log_send_and_compose_impl();
        if (!v170)
          goto LABEL_292;
        free(v170);
        if (!v134)
          goto LABEL_296;
LABEL_293:
        v217 = (const char *)__dst;
        if (v1063 < 0)
          v217 = (const char *)__dst[0];
        sub_22322C138((uint64_t)v1055, "%s", v217);
        sub_223182C08((uint64_t)v1055);
        goto LABEL_296;
      }
      v164 = _os_log_pack_size();
      v165 = (std::__shared_weak_count_vtbl *)operator new(v164, (std::align_val_t)8uLL);
      v166 = (std::__shared_weak_count *)operator new();
      v166->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
      v166->__shared_owners_ = 0;
      v166->__shared_weak_owners_ = 0;
      v166[1].__vftable = v165;
      *(_QWORD *)&v1075 = v165;
      *((_QWORD *)&v1075 + 1) = v165;
      v1076 = v166;
      v1077 = 0;
      v1078 = 0;
      v167 = strlen(__sa);
      if (v167 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      v168 = v167;
      if (v167 >= 0x17)
      {
        v171 = (v167 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v167 | 7) != 0x17)
          v171 = v167 | 7;
        v172 = v171 + 1;
        v169 = operator new(v171 + 1);
        *(_QWORD *)&v1080 = v168;
        *((_QWORD *)&v1080 + 1) = v172 | 0x8000000000000000;
        v1079 = v169;
      }
      else
      {
        HIBYTE(v1080) = v167;
        v169 = &v1079;
        if (!v167)
          goto LABEL_235;
      }
      memcpy(v169, __sa, v168);
LABEL_235:
      *((_BYTE *)v169 + v168) = 0;
      v173 = v1079;
      v1086[0] = v1080;
      *(_QWORD *)((char *)v1086 + 7) = *(_QWORD *)((char *)&v1080 + 7);
      v174 = HIBYTE(v1080);
      v175 = operator new(0x38uLL);
      v175[1] = 0;
      v175[2] = 0;
      v175[3] = off_24EC1FA48;
      *v175 = &off_24EC1F9F8;
      v176 = v1086[0];
      v175[4] = v173;
      v175[5] = v176;
      *(_QWORD *)((char *)v175 + 47) = *(_QWORD *)((char *)v1086 + 7);
      *((_BYTE *)v175 + 55) = v174;
      v1086[0] = 0;
      *(_QWORD *)((char *)v1086 + 7) = 0;
      v177 = v1078;
      v1077 = (char *)(v175 + 3);
      v1078 = (std::__shared_weak_count *)v175;
      if (v177)
      {
        p_shared_owners = (unint64_t *)&v177->__shared_owners_;
        do
          v179 = __ldaxr(p_shared_owners);
        while (__stlxr(v179 - 1, p_shared_owners));
        if (!v179)
        {
          ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
          std::__shared_weak_count::__release_weak(v177);
        }
      }
      *(_OWORD *)v1081 = v1075;
      v180 = v1077;
      *(_QWORD *)&v1081[16] = v1076;
      if (v1076)
      {
        v181 = (unint64_t *)&v1076->__shared_owners_;
        do
          v182 = __ldxr(v181);
        while (__stxr(v182 + 1, v181));
      }
      v183 = v1078;
      *(_QWORD *)&v1082 = v180;
      *((_QWORD *)&v1082 + 1) = v1078;
      if (v1078)
      {
        v184 = (unint64_t *)&v1078->__shared_owners_;
        do
          v185 = __ldxr(v184);
        while (__stxr(v185 + 1, v184));
        v1083[0] = v180;
        do
          v186 = __ldaxr(v184);
        while (__stlxr(v186 - 1, v184));
        if (!v186)
        {
          ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
          std::__shared_weak_count::__release_weak(v183);
        }
      }
      else
      {
        v1083[0] = v180;
      }
      v187 = v136;
      v188 = v1076;
      if (v1076)
      {
        v189 = (unint64_t *)&v1076->__shared_owners_;
        do
          v190 = __ldaxr(v189);
        while (__stlxr(v190 - 1, v189));
        if (!v190)
        {
          ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
          std::__shared_weak_count::__release_weak(v188);
        }
      }
      v191 = *(_QWORD *)v1081;
      if (*((char *)v1083[0] + 31) >= 0)
        v192 = (char *)v1083[0] + 8;
      else
        v192 = (char *)*((_QWORD *)v1083[0] + 1);
      v193 = _os_log_pack_fill();
      *(_DWORD *)v193 = 136315138;
      *(_QWORD *)(v193 + 4) = v192;
      v194 = operator new();
      v195 = *(unsigned __int8 *)(v1048 + 39);
      v196 = v1045;
      if ((v195 & 0x80u) != 0)
      {
        v196 = *(_QWORD *)(v1048 + 16);
        v195 = *(_QWORD *)(v1048 + 24);
      }
      *(_QWORD *)v194 = v191;
      *(_OWORD *)(v194 + 8) = *(_OWORD *)&v1081[8];
      *(_QWORD *)&v1081[8] = 0;
      *(_QWORD *)&v1081[16] = 0;
      *(_OWORD *)(v194 + 24) = v1082;
      v1082 = 0uLL;
      *(_QWORD *)(v194 + 40) = v196;
      *(_QWORD *)(v194 + 48) = v195;
      *(_BYTE *)(v194 + 56) = 2;
      v1079 = 0;
      *(_QWORD *)&v1075 = v194;
      (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v187 + 24) + 40))(*(_QWORD *)(v187 + 24), &v1075);
      v197 = v1075;
      *(_QWORD *)&v1075 = 0;
      if (v197)
      {
        v198 = *(std::__shared_weak_count **)(v197 + 32);
        if (v198)
        {
          v199 = (unint64_t *)&v198->__shared_owners_;
          do
            v200 = __ldaxr(v199);
          while (__stlxr(v200 - 1, v199));
          if (!v200)
          {
            ((void (*)(std::__shared_weak_count *))v198->__on_zero_shared)(v198);
            std::__shared_weak_count::__release_weak(v198);
          }
        }
        v201 = *(std::__shared_weak_count **)(v197 + 16);
        if (v201)
        {
          v202 = (unint64_t *)&v201->__shared_owners_;
          do
            v203 = __ldaxr(v202);
          while (__stlxr(v203 - 1, v202));
          if (!v203)
          {
            ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
            std::__shared_weak_count::__release_weak(v201);
          }
        }
        MEMORY[0x227684CE8](v197, 0x10F0C40B62ED6C6);
        v204 = v1079;
        v1079 = 0;
        if (v204)
        {
          v205 = (std::__shared_weak_count *)v204[4];
          if (v205)
          {
            v206 = (unint64_t *)&v205->__shared_owners_;
            do
              v207 = __ldaxr(v206);
            while (__stlxr(v207 - 1, v206));
            if (!v207)
            {
              ((void (*)(std::__shared_weak_count *))v205->__on_zero_shared)(v205);
              std::__shared_weak_count::__release_weak(v205);
            }
          }
          v208 = (std::__shared_weak_count *)v204[2];
          if (v208)
          {
            v209 = (unint64_t *)&v208->__shared_owners_;
            do
              v210 = __ldaxr(v209);
            while (__stlxr(v210 - 1, v209));
            if (!v210)
            {
              ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
              std::__shared_weak_count::__release_weak(v208);
            }
          }
          MEMORY[0x227684CE8](v204, 0x10F0C40B62ED6C6);
        }
      }
      v211 = (std::__shared_weak_count *)*((_QWORD *)&v1082 + 1);
      if (*((_QWORD *)&v1082 + 1))
      {
        v212 = (unint64_t *)(*((_QWORD *)&v1082 + 1) + 8);
        do
          v213 = __ldaxr(v212);
        while (__stlxr(v213 - 1, v212));
        if (!v213)
        {
          ((void (*)(std::__shared_weak_count *))v211->__on_zero_shared)(v211);
          std::__shared_weak_count::__release_weak(v211);
          v214 = *(std::__shared_weak_count **)&v1081[16];
          if (*(_QWORD *)&v1081[16])
            goto LABEL_289;
          goto LABEL_292;
        }
      }
      v214 = *(std::__shared_weak_count **)&v1081[16];
      if (!*(_QWORD *)&v1081[16])
        goto LABEL_292;
LABEL_289:
      v215 = (unint64_t *)&v214->__shared_owners_;
      do
        v216 = __ldaxr(v215);
      while (__stlxr(v216 - 1, v215));
      if (!v216)
      {
        ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
        std::__shared_weak_count::__release_weak(v214);
        if (!v134)
          goto LABEL_296;
        goto LABEL_293;
      }
LABEL_292:
      if (v134)
        goto LABEL_293;
LABEL_296:
      sub_223182C08((uint64_t)v1055);
      v218 = v1061;
      if (!v1061)
        goto LABEL_300;
      v219 = (unint64_t *)&v1061->__shared_owners_;
      do
        v220 = __ldaxr(v219);
      while (__stlxr(v220 - 1, v219));
      if (!v220)
      {
        ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
        std::__shared_weak_count::__release_weak(v218);
        if (SHIBYTE(v1063) < 0)
LABEL_301:
          operator delete(__dst[0]);
      }
      else
      {
LABEL_300:
        if (SHIBYTE(v1063) < 0)
          goto LABEL_301;
      }
      v1064[0] = v1019;
      *(void **)((char *)v1064 + *((_QWORD *)v1019 - 3)) = v1018;
      v1065[0] = v1017;
      v1065[1] = v1016;
      if (v1070 < 0)
        operator delete(__p);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x227684BE0](&v1073);
LABEL_70:
      if (++v46 == v1020)
      {
        v221 = 0;
        v1049 = v3 + 5;
        while (1)
        {
          v222 = 0;
          v223 = 1 << v221;
          __sb = 8 - (1 << v221);
          v1046 = v221;
          v1032 = (8u >> v221) + 1;
          v1043 = 1 << v221;
          do
          {
            v224 = 0;
            v225 = v1046;
            v1035 = v222 + v223;
            do
            {
              v226 = 0;
              v227 = ((v224 >> v225) + (v222 >> v1046) * v1032) * v1032;
              v228 = v224 + v223;
              do
              {
                if (v222 >= __sb || v224 >= __sb || v226 >= __sb)
                {
                  if (v226 != 8)
                  {
                    v229 = v226 + v1043;
                    v230 = v1049;
                    v231 = *((_WORD *)v1054 + v1046);
LABEL_339:
                    v232 = *v230;
                    v233 = v230;
                    if (*v230)
                    {
                      while (1)
                      {
                        v230 = (_QWORD *)v232;
                        v234 = *(unsigned __int8 *)(v232 + 26);
                        if (v234 == v226)
                        {
                          v235 = *((unsigned __int8 *)v230 + 27);
                          v236 = v235 > v224;
                          if (v235 != v224)
                            goto LABEL_351;
                          v237 = *((unsigned __int8 *)v230 + 28);
                          if (v237 != v222)
                          {
                            if (v237 > v222)
                              goto LABEL_339;
                            if (v237 >= v222)
                              goto LABEL_386;
                            goto LABEL_359;
                          }
                          v238 = *((unsigned __int8 *)v230 + 29);
                          if (v238 != v229)
                          {
                            if (v238 > v229)
                              goto LABEL_339;
                            if (v238 >= v229)
                              goto LABEL_386;
                            goto LABEL_359;
                          }
                          v235 = *((unsigned __int8 *)v230 + 30);
                          v236 = v235 > v224;
                          if (v235 == v224)
                          {
                            v239 = *((unsigned __int8 *)v230 + 31);
                            if (v239 > v222)
                              goto LABEL_339;
                            if (v239 >= v222)
                              goto LABEL_386;
                          }
                          else
                          {
LABEL_351:
                            if (v236)
                              goto LABEL_339;
                            if (v235 >= v224)
                              goto LABEL_386;
                          }
                        }
                        else
                        {
                          if (v234 > v226)
                            goto LABEL_339;
                          if (v234 >= v226)
                            goto LABEL_386;
                        }
LABEL_359:
                        v232 = v230[1];
                        if (!v232)
                        {
                          v233 = v230 + 1;
                          break;
                        }
                      }
                    }
                    v240 = operator new(0x28uLL);
                    v240[26] = v226;
                    v240[27] = v224;
                    v240[28] = v222;
                    v240[29] = v229;
                    v240[30] = v224;
                    v240[31] = v222;
                    *((_WORD *)v240 + 16) = v231 + 3 * ((v226 >> v1046) + v227);
                    *(_QWORD *)v240 = 0;
                    *((_QWORD *)v240 + 1) = 0;
                    *((_QWORD *)v240 + 2) = v230;
                    *v233 = v240;
                    v241 = **(_QWORD **)(a1 + 32);
                    if (v241)
                    {
                      *(_QWORD *)(a1 + 32) = v241;
                      v240 = (_BYTE *)*v233;
                    }
                    v242 = (_BYTE *)*v1049;
                    v28 = v240 == (_BYTE *)*v1049;
                    v240[24] = v28;
                    if (!v28)
                    {
                      do
                      {
                        v243 = *((_QWORD *)v240 + 2);
                        if (*(_BYTE *)(v243 + 24))
                          break;
                        v244 = *(_BYTE **)(v243 + 16);
                        v245 = *(_QWORD *)v244;
                        if (*(_QWORD *)v244 == v243)
                        {
                          v248 = *((_QWORD *)v244 + 1);
                          if (!v248 || (v249 = *(unsigned __int8 *)(v248 + 24), v246 = (_BYTE *)(v248 + 24), v249))
                          {
                            if (*(_BYTE **)v243 == v240)
                            {
                              *(_BYTE *)(v243 + 24) = 1;
                              v244[24] = 0;
                              v252 = *(_QWORD *)(v243 + 8);
                              *(_QWORD *)v244 = v252;
                              if (v252)
                                goto LABEL_378;
                            }
                            else
                            {
                              v250 = *(uint64_t **)(v243 + 8);
                              v251 = *v250;
                              *(_QWORD *)(v243 + 8) = *v250;
                              if (v251)
                              {
                                *(_QWORD *)(v251 + 16) = v243;
                                v244 = *(_BYTE **)(v243 + 16);
                              }
                              v250[2] = (uint64_t)v244;
                              *(_QWORD *)(*(_QWORD *)(v243 + 16) + 8 * (**(_QWORD **)(v243 + 16) != v243)) = v250;
                              *v250 = v243;
                              *(_QWORD *)(v243 + 16) = v250;
                              v244 = (_BYTE *)v250[2];
                              v243 = *(_QWORD *)v244;
                              *((_BYTE *)v250 + 24) = 1;
                              v244[24] = 0;
                              v252 = *(_QWORD *)(v243 + 8);
                              *(_QWORD *)v244 = v252;
                              if (v252)
LABEL_378:
                                *(_QWORD *)(v252 + 16) = v244;
                            }
                            *(_QWORD *)(v243 + 16) = *((_QWORD *)v244 + 2);
                            *(_QWORD *)(*((_QWORD *)v244 + 2) + 8 * (**((_QWORD **)v244 + 2) != (_QWORD)v244)) = v243;
                            *(_QWORD *)(v243 + 8) = v244;
LABEL_384:
                            *((_QWORD *)v244 + 2) = v243;
                            break;
                          }
                        }
                        else if (!v245 || (v247 = *(unsigned __int8 *)(v245 + 24), v246 = (_BYTE *)(v245 + 24), v247))
                        {
                          if (*(_BYTE **)v243 == v240)
                          {
                            v302 = *((_QWORD *)v240 + 1);
                            *(_QWORD *)v243 = v302;
                            if (v302)
                            {
                              *(_QWORD *)(v302 + 16) = v243;
                              v244 = *(_BYTE **)(v243 + 16);
                            }
                            *((_QWORD *)v240 + 2) = v244;
                            *(_QWORD *)(*(_QWORD *)(v243 + 16) + 8 * (**(_QWORD **)(v243 + 16) != v243)) = v240;
                            *((_QWORD *)v240 + 1) = v243;
                            *(_QWORD *)(v243 + 16) = v240;
                            v244 = (_BYTE *)*((_QWORD *)v240 + 2);
                            v240[24] = 1;
                            v244[24] = 0;
                            v243 = *((_QWORD *)v244 + 1);
                            v253 = *(_BYTE **)v243;
                            *((_QWORD *)v244 + 1) = *(_QWORD *)v243;
                            if (v253)
LABEL_382:
                              *((_QWORD *)v253 + 2) = v244;
                          }
                          else
                          {
                            *(_BYTE *)(v243 + 24) = 1;
                            v244[24] = 0;
                            v243 = *((_QWORD *)v244 + 1);
                            v253 = *(_BYTE **)v243;
                            *((_QWORD *)v244 + 1) = *(_QWORD *)v243;
                            if (v253)
                              goto LABEL_382;
                          }
                          *(_QWORD *)(v243 + 16) = *((_QWORD *)v244 + 2);
                          *(_QWORD *)(*((_QWORD *)v244 + 2) + 8 * (**((_QWORD **)v244 + 2) != (_QWORD)v244)) = v243;
                          *(_QWORD *)v243 = v244;
                          goto LABEL_384;
                        }
                        *(_BYTE *)(v243 + 24) = 1;
                        v240 = v244;
                        v244[24] = v244 == v242;
                        *v246 = 1;
                      }
                      while (v244 != v242);
                    }
                    ++*(_QWORD *)(a1 + 48);
                  }
LABEL_386:
                  if (v224 != 8)
                  {
                    v254 = v1049;
                    v255 = *((_WORD *)v1054 + v1046);
LABEL_388:
                    v256 = *v254;
                    v257 = v254;
                    if (*v254)
                    {
                      while (1)
                      {
                        v254 = (_QWORD *)v256;
                        v258 = *(unsigned __int8 *)(v256 + 26);
                        v259 = v258 > v226;
                        if (v258 == v226)
                        {
                          v260 = *((unsigned __int8 *)v254 + 27);
                          if (v260 != v224)
                          {
                            if (v260 > v224)
                              goto LABEL_388;
                            if (v260 >= v224)
                              goto LABEL_435;
                            goto LABEL_405;
                          }
                          v261 = *((unsigned __int8 *)v254 + 28);
                          if (v261 != v222)
                          {
                            if (v261 > v222)
                              goto LABEL_388;
                            if (v261 >= v222)
                              goto LABEL_435;
                            goto LABEL_405;
                          }
                          v258 = *((unsigned __int8 *)v254 + 29);
                          v259 = v258 > v226;
                          if (v258 == v226)
                          {
                            v262 = *((unsigned __int8 *)v254 + 30);
                            if (v262 == v228)
                            {
                              v263 = *((unsigned __int8 *)v254 + 31);
                              if (v263 > v222)
                                goto LABEL_388;
                              if (v263 >= v222)
                                goto LABEL_435;
                            }
                            else
                            {
                              if (v262 > v228)
                                goto LABEL_388;
                              if (v262 >= v228)
                                goto LABEL_435;
                            }
                            goto LABEL_405;
                          }
                        }
                        if (v259)
                          goto LABEL_388;
                        if (v258 >= v226)
                          goto LABEL_435;
LABEL_405:
                        v256 = v254[1];
                        if (!v256)
                        {
                          v257 = v254 + 1;
                          break;
                        }
                      }
                    }
                    v264 = operator new(0x28uLL);
                    v264[26] = v226;
                    v264[27] = v224;
                    v264[28] = v222;
                    v264[29] = v226;
                    v264[30] = v228;
                    v264[31] = v222;
                    *((_WORD *)v264 + 16) = 3 * ((v226 >> v1046) + v227) + v255 + 1;
                    *(_QWORD *)v264 = 0;
                    *((_QWORD *)v264 + 1) = 0;
                    *((_QWORD *)v264 + 2) = v254;
                    *v257 = v264;
                    v265 = **(_QWORD **)(a1 + 32);
                    if (v265)
                    {
                      *(_QWORD *)(a1 + 32) = v265;
                      v264 = (_BYTE *)*v257;
                    }
                    v266 = (_BYTE *)*v1049;
                    v28 = v264 == (_BYTE *)*v1049;
                    v264[24] = v28;
                    if (!v28)
                    {
                      do
                      {
                        v267 = *((_QWORD *)v264 + 2);
                        if (*(_BYTE *)(v267 + 24))
                          break;
                        v268 = *(_BYTE **)(v267 + 16);
                        v269 = *(_QWORD *)v268;
                        if (*(_QWORD *)v268 == v267)
                        {
                          v272 = *((_QWORD *)v268 + 1);
                          if (!v272 || (v273 = *(unsigned __int8 *)(v272 + 24), v270 = (_BYTE *)(v272 + 24), v273))
                          {
                            if (*(_BYTE **)v267 == v264)
                            {
                              *(_BYTE *)(v267 + 24) = 1;
                              v268[24] = 0;
                              v276 = *(_QWORD *)(v267 + 8);
                              *(_QWORD *)v268 = v276;
                              if (v276)
                                goto LABEL_427;
                            }
                            else
                            {
                              v274 = *(uint64_t **)(v267 + 8);
                              v275 = *v274;
                              *(_QWORD *)(v267 + 8) = *v274;
                              if (v275)
                              {
                                *(_QWORD *)(v275 + 16) = v267;
                                v268 = *(_BYTE **)(v267 + 16);
                              }
                              v274[2] = (uint64_t)v268;
                              *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8 * (**(_QWORD **)(v267 + 16) != v267)) = v274;
                              *v274 = v267;
                              *(_QWORD *)(v267 + 16) = v274;
                              v268 = (_BYTE *)v274[2];
                              v267 = *(_QWORD *)v268;
                              *((_BYTE *)v274 + 24) = 1;
                              v268[24] = 0;
                              v276 = *(_QWORD *)(v267 + 8);
                              *(_QWORD *)v268 = v276;
                              if (v276)
LABEL_427:
                                *(_QWORD *)(v276 + 16) = v268;
                            }
                            *(_QWORD *)(v267 + 16) = *((_QWORD *)v268 + 2);
                            *(_QWORD *)(*((_QWORD *)v268 + 2) + 8 * (**((_QWORD **)v268 + 2) != (_QWORD)v268)) = v267;
                            *(_QWORD *)(v267 + 8) = v268;
LABEL_433:
                            *((_QWORD *)v268 + 2) = v267;
                            break;
                          }
                        }
                        else if (!v269 || (v271 = *(unsigned __int8 *)(v269 + 24), v270 = (_BYTE *)(v269 + 24), v271))
                        {
                          if (*(_BYTE **)v267 == v264)
                          {
                            v303 = *((_QWORD *)v264 + 1);
                            *(_QWORD *)v267 = v303;
                            if (v303)
                            {
                              *(_QWORD *)(v303 + 16) = v267;
                              v268 = *(_BYTE **)(v267 + 16);
                            }
                            *((_QWORD *)v264 + 2) = v268;
                            *(_QWORD *)(*(_QWORD *)(v267 + 16) + 8 * (**(_QWORD **)(v267 + 16) != v267)) = v264;
                            *((_QWORD *)v264 + 1) = v267;
                            *(_QWORD *)(v267 + 16) = v264;
                            v268 = (_BYTE *)*((_QWORD *)v264 + 2);
                            v264[24] = 1;
                            v268[24] = 0;
                            v267 = *((_QWORD *)v268 + 1);
                            v277 = *(_BYTE **)v267;
                            *((_QWORD *)v268 + 1) = *(_QWORD *)v267;
                            if (v277)
LABEL_431:
                              *((_QWORD *)v277 + 2) = v268;
                          }
                          else
                          {
                            *(_BYTE *)(v267 + 24) = 1;
                            v268[24] = 0;
                            v267 = *((_QWORD *)v268 + 1);
                            v277 = *(_BYTE **)v267;
                            *((_QWORD *)v268 + 1) = *(_QWORD *)v267;
                            if (v277)
                              goto LABEL_431;
                          }
                          *(_QWORD *)(v267 + 16) = *((_QWORD *)v268 + 2);
                          *(_QWORD *)(*((_QWORD *)v268 + 2) + 8 * (**((_QWORD **)v268 + 2) != (_QWORD)v268)) = v267;
                          *(_QWORD *)v267 = v268;
                          goto LABEL_433;
                        }
                        *(_BYTE *)(v267 + 24) = 1;
                        v264 = v268;
                        v268[24] = v268 == v266;
                        *v270 = 1;
                      }
                      while (v268 != v266);
                    }
                    ++*(_QWORD *)(a1 + 48);
                  }
LABEL_435:
                  if (v222 != 8)
                  {
                    v278 = v1049;
                    v279 = *((_WORD *)v1054 + v1046);
LABEL_437:
                    v280 = *v278;
                    v281 = v278;
                    if (*v278)
                    {
                      while (1)
                      {
                        v278 = (_QWORD *)v280;
                        v282 = *(unsigned __int8 *)(v280 + 26);
                        v283 = v282 > v226;
                        if (v282 != v226)
                          goto LABEL_446;
                        v284 = *((unsigned __int8 *)v278 + 27);
                        v285 = v284 > v224;
                        if (v284 != v224)
                          goto LABEL_449;
                        v286 = *((unsigned __int8 *)v278 + 28);
                        if (v286 != v222)
                        {
                          if (v286 > v222)
                            goto LABEL_437;
                          if (v286 >= v222)
                            goto LABEL_333;
                          goto LABEL_454;
                        }
                        v282 = *((unsigned __int8 *)v278 + 29);
                        v283 = v282 > v226;
                        if (v282 == v226)
                        {
                          v284 = *((unsigned __int8 *)v278 + 30);
                          v285 = v284 > v224;
                          if (v284 != v224)
                          {
LABEL_449:
                            if (v285)
                              goto LABEL_437;
                            if (v284 >= v224)
                              goto LABEL_333;
                            goto LABEL_454;
                          }
                          v287 = *((unsigned __int8 *)v278 + 31);
                          if (v287 > v1035)
                            goto LABEL_437;
                          if (v287 >= v1035)
                            goto LABEL_333;
                        }
                        else
                        {
LABEL_446:
                          if (v283)
                            goto LABEL_437;
                          if (v282 >= v226)
                            goto LABEL_333;
                        }
LABEL_454:
                        v280 = v278[1];
                        if (!v280)
                        {
                          v281 = v278 + 1;
                          break;
                        }
                      }
                    }
                    v288 = operator new(0x28uLL);
                    v288[26] = v226;
                    v288[27] = v224;
                    v288[28] = v222;
                    v288[29] = v226;
                    v288[30] = v224;
                    v288[31] = v1035;
                    *((_WORD *)v288 + 16) = 3 * ((v226 >> v1046) + v227) + v279 + 2;
                    *(_QWORD *)v288 = 0;
                    *((_QWORD *)v288 + 1) = 0;
                    *((_QWORD *)v288 + 2) = v278;
                    *v281 = v288;
                    v289 = **(_QWORD **)(a1 + 32);
                    if (v289)
                    {
                      *(_QWORD *)(a1 + 32) = v289;
                      v288 = (_BYTE *)*v281;
                    }
                    v290 = (_BYTE *)*v1049;
                    v28 = v288 == (_BYTE *)*v1049;
                    v288[24] = v28;
                    if (!v28)
                    {
                      do
                      {
                        v291 = *((_QWORD *)v288 + 2);
                        if (*(_BYTE *)(v291 + 24))
                          break;
                        v292 = *(_BYTE **)(v291 + 16);
                        v293 = *(_QWORD *)v292;
                        if (*(_QWORD *)v292 == v291)
                        {
                          v296 = *((_QWORD *)v292 + 1);
                          if (!v296 || (v297 = *(unsigned __int8 *)(v296 + 24), v294 = (_BYTE *)(v296 + 24), v297))
                          {
                            if (*(_BYTE **)v291 == v288)
                            {
                              *(_BYTE *)(v291 + 24) = 1;
                              v292[24] = 0;
                              v300 = *(_QWORD *)(v291 + 8);
                              *(_QWORD *)v292 = v300;
                              if (v300)
                                goto LABEL_473;
                            }
                            else
                            {
                              v298 = *(uint64_t **)(v291 + 8);
                              v299 = *v298;
                              *(_QWORD *)(v291 + 8) = *v298;
                              if (v299)
                              {
                                *(_QWORD *)(v299 + 16) = v291;
                                v292 = *(_BYTE **)(v291 + 16);
                              }
                              v298[2] = (uint64_t)v292;
                              *(_QWORD *)(*(_QWORD *)(v291 + 16) + 8 * (**(_QWORD **)(v291 + 16) != v291)) = v298;
                              *v298 = v291;
                              *(_QWORD *)(v291 + 16) = v298;
                              v292 = (_BYTE *)v298[2];
                              v291 = *(_QWORD *)v292;
                              *((_BYTE *)v298 + 24) = 1;
                              v292[24] = 0;
                              v300 = *(_QWORD *)(v291 + 8);
                              *(_QWORD *)v292 = v300;
                              if (v300)
LABEL_473:
                                *(_QWORD *)(v300 + 16) = v292;
                            }
                            *(_QWORD *)(v291 + 16) = *((_QWORD *)v292 + 2);
                            *(_QWORD *)(*((_QWORD *)v292 + 2) + 8 * (**((_QWORD **)v292 + 2) != (_QWORD)v292)) = v291;
                            *(_QWORD *)(v291 + 8) = v292;
LABEL_331:
                            *((_QWORD *)v292 + 2) = v291;
                            break;
                          }
                        }
                        else if (!v293 || (v295 = *(unsigned __int8 *)(v293 + 24), v294 = (_BYTE *)(v293 + 24), v295))
                        {
                          if (*(_BYTE **)v291 == v288)
                          {
                            v304 = *((_QWORD *)v288 + 1);
                            *(_QWORD *)v291 = v304;
                            if (v304)
                            {
                              *(_QWORD *)(v304 + 16) = v291;
                              v292 = *(_BYTE **)(v291 + 16);
                            }
                            *((_QWORD *)v288 + 2) = v292;
                            *(_QWORD *)(*(_QWORD *)(v291 + 16) + 8 * (**(_QWORD **)(v291 + 16) != v291)) = v288;
                            *((_QWORD *)v288 + 1) = v291;
                            *(_QWORD *)(v291 + 16) = v288;
                            v292 = (_BYTE *)*((_QWORD *)v288 + 2);
                            v288[24] = 1;
                            v292[24] = 0;
                            v291 = *((_QWORD *)v292 + 1);
                            v301 = *(_BYTE **)v291;
                            *((_QWORD *)v292 + 1) = *(_QWORD *)v291;
                            if (!v301)
                              goto LABEL_330;
                          }
                          else
                          {
                            *(_BYTE *)(v291 + 24) = 1;
                            v292[24] = 0;
                            v291 = *((_QWORD *)v292 + 1);
                            v301 = *(_BYTE **)v291;
                            *((_QWORD *)v292 + 1) = *(_QWORD *)v291;
                            if (!v301)
                              goto LABEL_330;
                          }
                          *((_QWORD *)v301 + 2) = v292;
LABEL_330:
                          *(_QWORD *)(v291 + 16) = *((_QWORD *)v292 + 2);
                          *(_QWORD *)(*((_QWORD *)v292 + 2) + 8 * (**((_QWORD **)v292 + 2) != (_QWORD)v292)) = v291;
                          *(_QWORD *)v291 = v292;
                          goto LABEL_331;
                        }
                        *(_BYTE *)(v291 + 24) = 1;
                        v288 = v292;
                        v292[24] = v292 == v290;
                        *v294 = 1;
                      }
                      while (v292 != v290);
                    }
                    ++*(_QWORD *)(a1 + 48);
                  }
                }
LABEL_333:
                LOBYTE(v223) = v1043;
                v226 += v1043;
              }
              while (v226 < 9);
              v224 += v1043;
              v225 = v1046;
            }
            while (v224 < 9);
            v222 += v1043;
            v3 = (void **)a1;
          }
          while (v222 < 9);
          if (v1046 < v1015 - 1)
            break;
LABEL_323:
          v221 = v1046 + 1;
          if (v1046 + 1 == v1020)
            goto LABEL_3;
        }
        if (v1046 >= 2)
        {
          v3 = (void **)a1;
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/EdgeOwnerTable.cpp", 264, (uint64_t)"kLevel < kNumMeshLevels - 1", 27, (uint64_t)&unk_22459CE1E, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
        }
        v305 = 0;
        v1030 = (2 << v1046) - 1;
        v1028 = -2 << v1046;
        v1033 = 8 - (2 << v1046);
LABEL_501:
        v306 = 0;
        v307 = v305;
        v1036 = v305 & v1028;
        v1024 = v305;
        v1021 = v305;
        while (2)
        {
          if (((v306 | v305) & v1030) == 0)
            goto LABEL_504;
          v309 = v306 & v1028;
          v310 = (char *)v3[1];
          v311 = v3[5];
          v312 = (unint64_t)(v310 - (_BYTE *)*v3) >> 2;
          v313 = v1049;
LABEL_508:
          v314 = v313;
          if (v311)
          {
            while (1)
            {
              v313 = v311;
              v315 = *((unsigned __int8 *)v311 + 26);
              if (v315 == __sb)
              {
                v316 = *((unsigned __int8 *)v313 + 27);
                if (v316 == v306)
                {
                  v317 = *((unsigned __int8 *)v313 + 28);
                  if (v317 == v307)
                  {
                    v318 = *((unsigned __int8 *)v313 + 29);
                    if (v318 == 8)
                    {
                      v319 = *((unsigned __int8 *)v313 + 30);
                      if (v319 == v309)
                      {
                        v320 = *((unsigned __int8 *)v313 + 31);
                        if (v320 > v1036)
                          goto LABEL_507;
                        if (v320 >= v1036)
                          goto LABEL_551;
                      }
                      else
                      {
                        if (v319 > v309)
                        {
LABEL_507:
                          v311 = (_QWORD *)*v313;
                          goto LABEL_508;
                        }
                        if (v319 >= v309)
                          goto LABEL_551;
                      }
                    }
                    else if (v318 > 8)
                    {
                      goto LABEL_507;
                    }
                  }
                  else
                  {
                    if (v317 > v307)
                      goto LABEL_507;
                    if (v317 >= v307)
                    {
LABEL_551:
                      v334 = (void **)a1;
                      v335 = *(_QWORD *)(a1 + 16);
                      if ((unint64_t)v310 < v335)
                        goto LABEL_574;
                      goto LABEL_552;
                    }
                  }
                }
                else
                {
                  if (v316 > v306)
                    goto LABEL_507;
                  if (v316 >= v306)
                    goto LABEL_551;
                }
              }
              else
              {
                if (v315 > __sb)
                  goto LABEL_507;
                if (v315 >= __sb)
                  goto LABEL_551;
              }
              v311 = (_QWORD *)v313[1];
              if (!v311)
              {
                v314 = v313 + 1;
                break;
              }
            }
          }
          v321 = operator new(0x28uLL);
          v321[26] = __sb;
          v321[27] = v306;
          v307 = v1024;
          v321[28] = v1024;
          v321[29] = 8;
          v321[30] = v306 & v1028;
          v321[31] = v1036;
          *((_WORD *)v321 + 16) = v312;
          *(_QWORD *)v321 = 0;
          *((_QWORD *)v321 + 1) = 0;
          *((_QWORD *)v321 + 2) = v313;
          *v314 = v321;
          v322 = **(_QWORD **)(a1 + 32);
          if (v322)
          {
            *(_QWORD *)(a1 + 32) = v322;
            v321 = (_BYTE *)*v314;
          }
          v323 = (uint64_t *)*v1049;
          v28 = v321 == (_BYTE *)*v1049;
          v321[24] = v28;
          if (v28)
            goto LABEL_573;
          while (2)
          {
            v324 = (uint64_t *)*((_QWORD *)v321 + 2);
            if (*((_BYTE *)v324 + 24))
              goto LABEL_573;
            v325 = (uint64_t *)v324[2];
            v326 = (uint64_t *)*v325;
            if ((uint64_t *)*v325 != v324)
            {
              if (!v326 || (v328 = *((unsigned __int8 *)v326 + 24), v327 = v326 + 3, v328))
              {
                if ((_BYTE *)*v324 == v321)
                {
                  v402 = *((_QWORD *)v321 + 1);
                  *v324 = v402;
                  if (v402)
                  {
                    *(_QWORD *)(v402 + 16) = v324;
                    v325 = (uint64_t *)v324[2];
                  }
                  *((_QWORD *)v321 + 2) = v325;
                  *(_QWORD *)(v324[2] + 8 * (*(_QWORD *)v324[2] != (_QWORD)v324)) = v321;
                  *((_QWORD *)v321 + 1) = v324;
                  v324[2] = (uint64_t)v321;
                  v325 = (uint64_t *)*((_QWORD *)v321 + 2);
                  v321[24] = 1;
                  *((_BYTE *)v325 + 24) = 0;
                  v324 = (uint64_t *)v325[1];
                  v351 = *v324;
                  v325[1] = *v324;
                  if (v351)
LABEL_570:
                    *(_QWORD *)(v351 + 16) = v325;
                }
                else
                {
                  *((_BYTE *)v324 + 24) = 1;
                  *((_BYTE *)v325 + 24) = 0;
                  v324 = (uint64_t *)v325[1];
                  v351 = *v324;
                  v325[1] = *v324;
                  if (v351)
                    goto LABEL_570;
                }
                v324[2] = v325[2];
                *(_QWORD *)(v325[2] + 8 * (*(_QWORD *)v325[2] != (_QWORD)v325)) = v324;
                *v324 = (uint64_t)v325;
                goto LABEL_572;
              }
LABEL_537:
              *((_BYTE *)v324 + 24) = 1;
              v321 = v325;
              *((_BYTE *)v325 + 24) = v325 == v323;
              *v327 = 1;
              if (v325 == v323)
                goto LABEL_573;
              continue;
            }
            break;
          }
          v329 = v325[1];
          if (v329)
          {
            v330 = *(unsigned __int8 *)(v329 + 24);
            v327 = (_BYTE *)(v329 + 24);
            if (!v330)
              goto LABEL_537;
          }
          if ((_BYTE *)*v324 == v321)
          {
            *((_BYTE *)v324 + 24) = 1;
            *((_BYTE *)v325 + 24) = 0;
            v333 = v324[1];
            *v325 = v333;
            if (v333)
              goto LABEL_549;
          }
          else
          {
            v331 = (uint64_t **)v324[1];
            v332 = *v331;
            v324[1] = (uint64_t)*v331;
            if (v332)
            {
              v332[2] = (uint64_t)v324;
              v325 = (uint64_t *)v324[2];
            }
            v331[2] = v325;
            *(_QWORD *)(v324[2] + 8 * (*(_QWORD *)v324[2] != (_QWORD)v324)) = v331;
            *v331 = v324;
            v324[2] = (uint64_t)v331;
            v325 = v331[2];
            v324 = (uint64_t *)*v325;
            *((_BYTE *)v331 + 24) = 1;
            *((_BYTE *)v325 + 24) = 0;
            v333 = v324[1];
            *v325 = v333;
            if (v333)
LABEL_549:
              *(_QWORD *)(v333 + 16) = v325;
          }
          v324[2] = v325[2];
          *(_QWORD *)(v325[2] + 8 * (*(_QWORD *)v325[2] != (_QWORD)v325)) = v324;
          v324[1] = (uint64_t)v325;
LABEL_572:
          v325[2] = (uint64_t)v324;
LABEL_573:
          v334 = (void **)a1;
          ++*(_QWORD *)(a1 + 48);
          v310 = *(char **)(a1 + 8);
          v335 = *(_QWORD *)(a1 + 16);
          if ((unint64_t)v310 < v335)
          {
LABEL_574:
            *v310 = 0;
            *((_WORD *)v310 + 1) = v312;
            v350 = v310 + 4;
            v345 = v334;
            v348 = 8 - (2 << v1046);
            goto LABEL_575;
          }
LABEL_552:
          v336 = (char *)*v334;
          v337 = v310 - (_BYTE *)*v334;
          v338 = v337 >> 2;
          v339 = (v337 >> 2) + 1;
          if (v339 >> 62)
            sub_22316E078();
          v340 = v335 - (_QWORD)v336;
          if (v340 >> 1 > v339)
            v339 = v340 >> 1;
          if ((unint64_t)v340 >= 0x7FFFFFFFFFFFFFFCLL)
            v341 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v341 = v339;
          if (v341 >> 62)
            sub_223174E94();
          v342 = (char *)operator new(4 * v341);
          v343 = &v342[4 * v338];
          *v343 = 0;
          *((_WORD *)v343 + 1) = v312;
          if (v310 == v336)
          {
            v345 = (void **)a1;
            v348 = 8 - (2 << v1046);
            v307 = v1024;
            v350 = v343 + 4;
            *(_QWORD *)a1 = v343;
            *(_QWORD *)(a1 + 8) = v343 + 4;
            *(_QWORD *)(a1 + 16) = &v342[4 * v341];
            if (!v336)
              goto LABEL_575;
          }
          else
          {
            v344 = v310 - v336 - 4;
            v345 = (void **)a1;
            if (v344 < 0x2C || (unint64_t)(&v310[-v337] - v342) < 0x20)
            {
              v346 = v310;
              v347 = &v342[4 * v338];
              v348 = 8 - (2 << v1046);
              v307 = v1024;
              goto LABEL_563;
            }
            v390 = (v344 >> 2) + 1;
            v391 = 4 * (v390 & 0x7FFFFFFFFFFFFFF8);
            v346 = &v310[-v391];
            v347 = &v343[-v391];
            v392 = &v342[4 * v338 - 16];
            v393 = v310 - 16;
            v394 = v390 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              v395 = *(_OWORD *)v393;
              *((_OWORD *)v392 - 1) = *((_OWORD *)v393 - 1);
              *(_OWORD *)v392 = v395;
              v392 -= 32;
              v393 -= 32;
              v394 -= 8;
            }
            while (v394);
            v348 = 8 - (2 << v1046);
            v307 = v1024;
            if (v390 != (v390 & 0x7FFFFFFFFFFFFFF8))
            {
              do
              {
LABEL_563:
                v349 = *((_DWORD *)v346 - 1);
                v346 -= 4;
                *((_DWORD *)v347 - 1) = v349;
                v347 -= 4;
              }
              while (v346 != v336);
            }
            v350 = v343 + 4;
            *(_QWORD *)a1 = v347;
            *(_QWORD *)(a1 + 8) = v343 + 4;
            *(_QWORD *)(a1 + 16) = &v342[4 * v341];
            if (!v336)
            {
LABEL_575:
              v345[1] = v350;
              v352 = v345[5];
              v353 = (unint64_t)(v350 - (_BYTE *)*v345) >> 2;
              for (i = v1049; ; v352 = (_QWORD *)*i)
              {
                v355 = i;
                if (!v352)
                  break;
                while (1)
                {
                  i = v352;
                  v356 = *((unsigned __int8 *)v352 + 26);
                  if (v356 != v348)
                  {
                    if (v356 > v348)
                      goto LABEL_576;
                    if (v356 >= v348)
                      goto LABEL_620;
                    goto LABEL_599;
                  }
                  v357 = *((unsigned __int8 *)i + 27);
                  if (v357 != v309)
                  {
                    if (v357 > v309)
                      goto LABEL_576;
                    if (v357 >= v309)
                      goto LABEL_620;
                    goto LABEL_599;
                  }
                  v358 = *((unsigned __int8 *)i + 28);
                  if (v358 != v1036)
                  {
                    if (v358 > v1036)
                      goto LABEL_576;
                    if (v358 >= v1036)
                    {
LABEL_620:
                      v375 = (void **)a1;
                      v376 = *(_QWORD *)(a1 + 16);
                      if ((unint64_t)v350 >= v376)
                        goto LABEL_628;
                      goto LABEL_502;
                    }
                    goto LABEL_599;
                  }
                  v359 = *((unsigned __int8 *)i + 29);
                  if (v359 == 8)
                    break;
                  if (v359 > 8)
                    goto LABEL_576;
LABEL_599:
                  v352 = (_QWORD *)i[1];
                  if (!v352)
                  {
                    v355 = i + 1;
                    goto LABEL_601;
                  }
                }
                v360 = *((unsigned __int8 *)i + 30);
                if (v360 == v306)
                {
                  v361 = *((unsigned __int8 *)i + 31);
                  if (v361 > v307)
                    continue;
                  if (v361 >= v307)
                    goto LABEL_620;
                  goto LABEL_599;
                }
                if (v360 <= v306)
                {
                  if (v360 >= v306)
                    goto LABEL_620;
                  goto LABEL_599;
                }
LABEL_576:
                ;
              }
LABEL_601:
              v362 = operator new(0x28uLL);
              v362[26] = v1033;
              v362[27] = v306 & v1028;
              v362[28] = v1036;
              v362[29] = 8;
              v362[30] = v306;
              v307 = v1024;
              v362[31] = v1024;
              *((_WORD *)v362 + 16) = v353;
              *(_QWORD *)v362 = 0;
              *((_QWORD *)v362 + 1) = 0;
              *((_QWORD *)v362 + 2) = i;
              *v355 = v362;
              v363 = **(_QWORD **)(a1 + 32);
              if (v363)
              {
                *(_QWORD *)(a1 + 32) = v363;
                v362 = (_BYTE *)*v355;
              }
              v364 = (uint64_t *)*v1049;
              v28 = v362 == (_BYTE *)*v1049;
              v362[24] = v28;
              if (v28)
                goto LABEL_627;
              while (2)
              {
                v365 = (uint64_t *)*((_QWORD *)v362 + 2);
                if (*((_BYTE *)v365 + 24))
                  goto LABEL_627;
                v366 = (uint64_t *)v365[2];
                v367 = (uint64_t *)*v366;
                if ((uint64_t *)*v366 != v365)
                {
                  if (!v367 || (v369 = *((unsigned __int8 *)v367 + 24), v368 = v367 + 3, v369))
                  {
                    if ((_BYTE *)*v365 == v362)
                    {
                      v403 = *((_QWORD *)v362 + 1);
                      *v365 = v403;
                      if (v403)
                      {
                        *(_QWORD *)(v403 + 16) = v365;
                        v366 = (uint64_t *)v365[2];
                      }
                      *((_QWORD *)v362 + 2) = v366;
                      *(_QWORD *)(v365[2] + 8 * (*(_QWORD *)v365[2] != (_QWORD)v365)) = v362;
                      *((_QWORD *)v362 + 1) = v365;
                      v365[2] = (uint64_t)v362;
                      v366 = (uint64_t *)*((_QWORD *)v362 + 2);
                      v362[24] = 1;
                      *((_BYTE *)v366 + 24) = 0;
                      v365 = (uint64_t *)v366[1];
                      v377 = *v365;
                      v366[1] = *v365;
                      if (v377)
LABEL_624:
                        *(_QWORD *)(v377 + 16) = v366;
                    }
                    else
                    {
                      *((_BYTE *)v365 + 24) = 1;
                      *((_BYTE *)v366 + 24) = 0;
                      v365 = (uint64_t *)v366[1];
                      v377 = *v365;
                      v366[1] = *v365;
                      if (v377)
                        goto LABEL_624;
                    }
                    v365[2] = v366[2];
                    *(_QWORD *)(v366[2] + 8 * (*(_QWORD *)v366[2] != (_QWORD)v366)) = v365;
                    *v365 = (uint64_t)v366;
                    goto LABEL_626;
                  }
LABEL_606:
                  *((_BYTE *)v365 + 24) = 1;
                  v362 = v366;
                  *((_BYTE *)v366 + 24) = v366 == v364;
                  *v368 = 1;
                  if (v366 == v364)
                    goto LABEL_627;
                  continue;
                }
                break;
              }
              v370 = v366[1];
              if (v370)
              {
                v371 = *(unsigned __int8 *)(v370 + 24);
                v368 = (_BYTE *)(v370 + 24);
                if (!v371)
                  goto LABEL_606;
              }
              if ((_BYTE *)*v365 == v362)
              {
                *((_BYTE *)v365 + 24) = 1;
                *((_BYTE *)v366 + 24) = 0;
                v374 = v365[1];
                *v366 = v374;
                if (v374)
                  goto LABEL_618;
              }
              else
              {
                v372 = (uint64_t **)v365[1];
                v373 = *v372;
                v365[1] = (uint64_t)*v372;
                if (v373)
                {
                  v373[2] = (uint64_t)v365;
                  v366 = (uint64_t *)v365[2];
                }
                v372[2] = v366;
                *(_QWORD *)(v365[2] + 8 * (*(_QWORD *)v365[2] != (_QWORD)v365)) = v372;
                *v372 = v365;
                v365[2] = (uint64_t)v372;
                v366 = v372[2];
                v365 = (uint64_t *)*v366;
                *((_BYTE *)v372 + 24) = 1;
                *((_BYTE *)v366 + 24) = 0;
                v374 = v365[1];
                *v366 = v374;
                if (v374)
LABEL_618:
                  *(_QWORD *)(v374 + 16) = v366;
              }
              v365[2] = v366[2];
              *(_QWORD *)(v366[2] + 8 * (*(_QWORD *)v366[2] != (_QWORD)v366)) = v365;
              v365[1] = (uint64_t)v366;
LABEL_626:
              v366[2] = (uint64_t)v365;
LABEL_627:
              v375 = (void **)a1;
              ++*(_QWORD *)(a1 + 48);
              v350 = *(char **)(a1 + 8);
              v376 = *(_QWORD *)(a1 + 16);
              if ((unint64_t)v350 < v376)
              {
LABEL_502:
                *v350 = 0;
                *((_WORD *)v350 + 1) = v353;
                v308 = v350 + 4;
                v3 = v375;
                goto LABEL_503;
              }
LABEL_628:
              v378 = *v375;
              v379 = v350 - (_BYTE *)*v375;
              v380 = v379 >> 2;
              v381 = (v379 >> 2) + 1;
              if (v381 >> 62)
                sub_22316E078();
              v382 = v376 - (_QWORD)v378;
              if (v382 >> 1 > v381)
                v381 = v382 >> 1;
              if ((unint64_t)v382 >= 0x7FFFFFFFFFFFFFFCLL)
                v383 = 0x3FFFFFFFFFFFFFFFLL;
              else
                v383 = v381;
              if (v383 >> 62)
                sub_223174E94();
              v384 = (char *)operator new(4 * v383);
              v385 = &v384[4 * v380];
              *v385 = 0;
              *((_WORD *)v385 + 1) = v353;
              if (v350 == v378)
              {
                v3 = (void **)a1;
                v308 = v385 + 4;
                *(_QWORD *)a1 = v385;
                *(_QWORD *)(a1 + 8) = v385 + 4;
                *(_QWORD *)(a1 + 16) = &v384[4 * v383];
                if (v378)
                  goto LABEL_641;
              }
              else
              {
                v386 = v350 - v378 - 4;
                v3 = (void **)a1;
                if (v386 < 0x2C || (unint64_t)(&v350[-v379] - v384) < 0x20)
                {
                  v387 = v350;
                  v388 = &v384[4 * v380];
                  goto LABEL_639;
                }
                v396 = (v386 >> 2) + 1;
                v397 = 4 * (v396 & 0x7FFFFFFFFFFFFFF8);
                v387 = &v350[-v397];
                v388 = &v385[-v397];
                v398 = &v384[4 * v380 - 16];
                v399 = v350 - 16;
                v400 = v396 & 0x7FFFFFFFFFFFFFF8;
                do
                {
                  v401 = *(_OWORD *)v399;
                  *((_OWORD *)v398 - 1) = *((_OWORD *)v399 - 1);
                  *(_OWORD *)v398 = v401;
                  v398 -= 32;
                  v399 -= 32;
                  v400 -= 8;
                }
                while (v400);
                if (v396 != (v396 & 0x7FFFFFFFFFFFFFF8))
                {
                  do
                  {
LABEL_639:
                    v389 = *((_DWORD *)v387 - 1);
                    v387 -= 4;
                    *((_DWORD *)v388 - 1) = v389;
                    v388 -= 4;
                  }
                  while (v387 != v378);
                }
                v308 = v385 + 4;
                *(_QWORD *)a1 = v388;
                *(_QWORD *)(a1 + 8) = v385 + 4;
                *(_QWORD *)(a1 + 16) = &v384[4 * v383];
                if (v378)
LABEL_641:
                  operator delete(v378);
              }
              v307 = v1024;
LABEL_503:
              v3[1] = v308;
              v305 = v1021;
LABEL_504:
              v306 += v1043;
              if (v306 < 8)
                continue;
              v305 += v1043;
              if (v305 < 8)
                goto LABEL_501;
              v404 = 0;
              while (2)
              {
                if ((v404 & v1030) != 0)
                {
                  v406 = v404;
                  v1037 = v404;
                  v407 = (v404 - v1043);
                  v408 = (char *)v3[1];
                  v409 = v3[5];
                  v410 = (unint64_t)(v408 - (_BYTE *)*v3) >> 2;
                  v411 = v1049;
                  while (2)
                  {
                    v412 = v411;
                    if (!v409)
                    {
LABEL_693:
                      v420 = operator new(0x28uLL);
                      v420[26] = v406;
                      v420[27] = __sb;
                      v420[28] = 8;
                      v420[29] = v407;
                      *((_WORD *)v420 + 15) = 2056;
                      *((_WORD *)v420 + 16) = v410;
                      *(_QWORD *)v420 = 0;
                      *((_QWORD *)v420 + 1) = 0;
                      *((_QWORD *)v420 + 2) = v411;
                      *v412 = v420;
                      v3 = (void **)a1;
                      v421 = **(_QWORD **)(a1 + 32);
                      if (v421)
                      {
                        *(_QWORD *)(a1 + 32) = v421;
                        v420 = (_BYTE *)*v412;
                      }
                      sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v420);
                      ++*(_QWORD *)(a1 + 48);
                      v408 = *(char **)(a1 + 8);
LABEL_696:
                      v422 = (char *)v3[2];
                      if (v408 < v422)
                      {
                        *v408 = 0;
                        *((_WORD *)v408 + 1) = v410;
                        v423 = v408 + 4;
LABEL_712:
                        v3[1] = v423;
                        v436 = v3[5];
                        v437 = (unint64_t)(v423 - (_BYTE *)*v3) >> 2;
                        v438 = v1049;
                        while (2)
                        {
                          v439 = v438;
                          if (!v436)
                          {
LABEL_735:
                            v447 = operator new(0x28uLL);
                            v447[26] = v406;
                            v447[27] = 8;
                            v447[28] = __sb;
                            v447[29] = v407;
                            *((_WORD *)v447 + 15) = 2056;
                            *((_WORD *)v447 + 16) = v437;
                            *(_QWORD *)v447 = 0;
                            *((_QWORD *)v447 + 1) = 0;
                            *((_QWORD *)v447 + 2) = v438;
                            *v439 = v447;
                            v3 = (void **)a1;
                            v448 = **(_QWORD **)(a1 + 32);
                            if (v448)
                            {
                              *(_QWORD *)(a1 + 32) = v448;
                              v447 = (_BYTE *)*v439;
                            }
                            sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v447);
                            ++*(_QWORD *)(a1 + 48);
                            v423 = *(char **)(a1 + 8);
LABEL_738:
                            v449 = 8 - (2 << v1046);
                            v450 = (char *)v3[2];
                            if (v423 < v450)
                            {
                              *v423 = 0;
                              *((_WORD *)v423 + 1) = v437;
                              v451 = v423 + 4;
LABEL_754:
                              v3[1] = v451;
                              v464 = v3[5];
                              v465 = (unint64_t)(v451 - (_BYTE *)*v3) >> 2;
                              v466 = v1049;
                              while (2)
                              {
                                v467 = v466;
                                if (!v464)
                                {
LABEL_777:
                                  v475 = operator new(0x28uLL);
                                  v475[26] = v407;
                                  v449 = 8 - (2 << v1046);
                                  v475[27] = v1033;
                                  v475[28] = 8;
                                  v475[29] = v406;
                                  *((_WORD *)v475 + 15) = 2056;
                                  *((_WORD *)v475 + 16) = v465;
                                  *(_QWORD *)v475 = 0;
                                  *((_QWORD *)v475 + 1) = 0;
                                  *((_QWORD *)v475 + 2) = v466;
                                  *v467 = v475;
                                  v3 = (void **)a1;
                                  v476 = **(_QWORD **)(a1 + 32);
                                  if (v476)
                                  {
                                    *(_QWORD *)(a1 + 32) = v476;
                                    v475 = (_BYTE *)*v467;
                                  }
                                  sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v475);
                                  ++*(_QWORD *)(a1 + 48);
                                  v451 = *(char **)(a1 + 8);
LABEL_780:
                                  v477 = (char *)v3[2];
                                  if (v451 < v477)
                                  {
                                    *v451 = 0;
                                    *((_WORD *)v451 + 1) = v465;
                                    v478 = v451 + 4;
LABEL_796:
                                    v3[1] = v478;
                                    v491 = v3[5];
                                    v492 = (unint64_t)(v478 - (_BYTE *)*v3) >> 2;
                                    v493 = v1049;
                                    while (2)
                                    {
                                      v494 = v493;
                                      if (!v491)
                                      {
LABEL_819:
                                        v502 = operator new(0x28uLL);
                                        v502[26] = v407;
                                        v502[27] = 8;
                                        v502[28] = v1033;
                                        v502[29] = v406;
                                        *((_WORD *)v502 + 15) = 2056;
                                        *((_WORD *)v502 + 16) = v492;
                                        *(_QWORD *)v502 = 0;
                                        *((_QWORD *)v502 + 1) = 0;
                                        *((_QWORD *)v502 + 2) = v493;
                                        *v494 = v502;
                                        v3 = (void **)a1;
                                        v503 = **(_QWORD **)(a1 + 32);
                                        if (v503)
                                        {
                                          *(_QWORD *)(a1 + 32) = v503;
                                          v502 = (_BYTE *)*v494;
                                        }
                                        sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v502);
                                        ++*(_QWORD *)(a1 + 48);
                                        v478 = *(char **)(a1 + 8);
LABEL_822:
                                        v504 = (char *)v3[2];
                                        if (v478 < v504)
                                        {
                                          *v478 = 0;
                                          *((_WORD *)v478 + 1) = v492;
                                          v405 = v478 + 4;
                                          v404 = v1037;
                                          goto LABEL_667;
                                        }
                                        v505 = *v3;
                                        v506 = v478 - (_BYTE *)*v3;
                                        v507 = v506 >> 2;
                                        v508 = (v506 >> 2) + 1;
                                        if (v508 >> 62)
                                          sub_22316E078();
                                        v509 = v504 - v505;
                                        if (v509 >> 1 > v508)
                                          v508 = v509 >> 1;
                                        if ((unint64_t)v509 >= 0x7FFFFFFFFFFFFFFCLL)
                                          v510 = 0x3FFFFFFFFFFFFFFFLL;
                                        else
                                          v510 = v508;
                                        if (v510 >> 62)
                                          sub_223174E94();
                                        v511 = (char *)operator new(4 * v510);
                                        v512 = &v511[4 * v507];
                                        *v512 = 0;
                                        *((_WORD *)v512 + 1) = v492;
                                        if (v478 == v505)
                                        {
                                          v3 = (void **)a1;
                                          v404 = v1037;
                                          v405 = v512 + 4;
                                          *(_QWORD *)a1 = v512;
                                          *(_QWORD *)(a1 + 8) = v512 + 4;
                                          *(_QWORD *)(a1 + 16) = &v511[4 * v510];
                                          if (!v505)
                                            goto LABEL_667;
                                        }
                                        else
                                        {
                                          v513 = v478 - v505 - 4;
                                          v3 = (void **)a1;
                                          v404 = v1037;
                                          if (v513 < 0x2C || (unint64_t)(&v478[-v506] - v511) < 0x20)
                                          {
                                            v514 = v478;
                                            v515 = &v511[4 * v507];
                                            goto LABEL_834;
                                          }
                                          v535 = (v513 >> 2) + 1;
                                          v536 = 4 * (v535 & 0x7FFFFFFFFFFFFFF8);
                                          v514 = &v478[-v536];
                                          v515 = &v512[-v536];
                                          v537 = &v511[4 * v507 - 16];
                                          v538 = v478 - 16;
                                          v539 = v535 & 0x7FFFFFFFFFFFFFF8;
                                          do
                                          {
                                            v540 = *(_OWORD *)v538;
                                            *((_OWORD *)v537 - 1) = *((_OWORD *)v538 - 1);
                                            *(_OWORD *)v537 = v540;
                                            v537 -= 32;
                                            v538 -= 32;
                                            v539 -= 8;
                                          }
                                          while (v539);
                                          if (v535 != (v535 & 0x7FFFFFFFFFFFFFF8))
                                          {
                                            do
                                            {
LABEL_834:
                                              v516 = *((_DWORD *)v514 - 1);
                                              v514 -= 4;
                                              *((_DWORD *)v515 - 1) = v516;
                                              v515 -= 4;
                                            }
                                            while (v514 != v505);
                                          }
                                          v405 = v512 + 4;
                                          *(_QWORD *)a1 = v515;
                                          *(_QWORD *)(a1 + 8) = v512 + 4;
                                          *(_QWORD *)(a1 + 16) = &v511[4 * v510];
                                          if (!v505)
                                          {
LABEL_667:
                                            v3[1] = v405;
                                            goto LABEL_668;
                                          }
                                        }
                                        operator delete(v505);
                                        goto LABEL_667;
                                      }
LABEL_799:
                                      v493 = v491;
                                      v495 = *((unsigned __int8 *)v491 + 26);
                                      if (v495 == v407)
                                      {
                                        v496 = *((unsigned __int8 *)v493 + 27);
                                        v497 = v496 > 8;
                                        if (v496 != 8)
                                          goto LABEL_810;
                                        v498 = *((unsigned __int8 *)v493 + 28);
                                        if (v498 == v449)
                                        {
                                          v499 = *((unsigned __int8 *)v493 + 29);
                                          if (v499 != v406)
                                          {
                                            if (v499 > v406)
                                            {
LABEL_797:
                                              v491 = (_QWORD *)*v493;
                                              continue;
                                            }
                                            if (v499 >= v406)
                                              goto LABEL_822;
                                            break;
                                          }
                                          v500 = *((unsigned __int8 *)v493 + 30);
                                          v497 = v500 > 8;
                                          if (v500 == 8)
                                          {
                                            v501 = *((unsigned __int8 *)v493 + 31);
                                            if (v501 > 8)
                                              goto LABEL_797;
                                            if (v501 == 8)
                                              goto LABEL_822;
                                            break;
                                          }
LABEL_810:
                                          if (v497)
                                            goto LABEL_797;
                                          break;
                                        }
                                        if (v498 > v449)
                                          goto LABEL_797;
                                        if (v498 >= v449)
                                          goto LABEL_822;
                                      }
                                      else
                                      {
                                        if (v495 > v407)
                                          goto LABEL_797;
                                        if (v495 >= v407)
                                          goto LABEL_822;
                                      }
                                      break;
                                    }
                                    v491 = (_QWORD *)v493[1];
                                    if (!v491)
                                    {
                                      v494 = v493 + 1;
                                      goto LABEL_819;
                                    }
                                    goto LABEL_799;
                                  }
                                  v479 = *v3;
                                  v480 = v451 - (_BYTE *)*v3;
                                  v481 = v480 >> 2;
                                  v482 = (v480 >> 2) + 1;
                                  if (v482 >> 62)
                                    sub_22316E078();
                                  v483 = v477 - v479;
                                  if (v483 >> 1 > v482)
                                    v482 = v483 >> 1;
                                  if ((unint64_t)v483 >= 0x7FFFFFFFFFFFFFFCLL)
                                    v484 = 0x3FFFFFFFFFFFFFFFLL;
                                  else
                                    v484 = v482;
                                  if (v484 >> 62)
                                    sub_223174E94();
                                  v485 = (char *)operator new(4 * v484);
                                  v486 = &v485[4 * v481];
                                  *v486 = 0;
                                  *((_WORD *)v486 + 1) = v465;
                                  if (v451 == v479)
                                  {
                                    v3 = (void **)a1;
                                    v449 = 8 - (2 << v1046);
                                    v478 = v486 + 4;
                                    *(_QWORD *)a1 = v486;
                                    *(_QWORD *)(a1 + 8) = v486 + 4;
                                    *(_QWORD *)(a1 + 16) = &v485[4 * v484];
                                    if (!v479)
                                      goto LABEL_796;
                                  }
                                  else
                                  {
                                    v487 = v451 - v479 - 4;
                                    v3 = (void **)a1;
                                    if (v487 < 0x2C || (unint64_t)(&v451[-v480] - v485) < 0x20)
                                    {
                                      v488 = v451;
                                      v489 = &v485[4 * v481];
                                      v449 = 8 - (2 << v1046);
                                      goto LABEL_793;
                                    }
                                    v529 = (v487 >> 2) + 1;
                                    v530 = 4 * (v529 & 0x7FFFFFFFFFFFFFF8);
                                    v488 = &v451[-v530];
                                    v489 = &v486[-v530];
                                    v531 = &v485[4 * v481 - 16];
                                    v532 = v451 - 16;
                                    v533 = v529 & 0x7FFFFFFFFFFFFFF8;
                                    v449 = 8 - (2 << v1046);
                                    do
                                    {
                                      v534 = *(_OWORD *)v532;
                                      *((_OWORD *)v531 - 1) = *((_OWORD *)v532 - 1);
                                      *(_OWORD *)v531 = v534;
                                      v531 -= 32;
                                      v532 -= 32;
                                      v533 -= 8;
                                    }
                                    while (v533);
                                    if (v529 != (v529 & 0x7FFFFFFFFFFFFFF8))
                                    {
                                      do
                                      {
LABEL_793:
                                        v490 = *((_DWORD *)v488 - 1);
                                        v488 -= 4;
                                        *((_DWORD *)v489 - 1) = v490;
                                        v489 -= 4;
                                      }
                                      while (v488 != v479);
                                    }
                                    v478 = v486 + 4;
                                    *(_QWORD *)a1 = v489;
                                    *(_QWORD *)(a1 + 8) = v486 + 4;
                                    *(_QWORD *)(a1 + 16) = &v485[4 * v484];
                                    if (!v479)
                                      goto LABEL_796;
                                  }
                                  operator delete(v479);
                                  goto LABEL_796;
                                }
LABEL_757:
                                v466 = v464;
                                v468 = *((unsigned __int8 *)v464 + 26);
                                if (v468 == v407)
                                {
                                  v469 = *((unsigned __int8 *)v466 + 27);
                                  if (v469 == v449)
                                  {
                                    v470 = *((unsigned __int8 *)v466 + 28);
                                    v471 = v470 > 8;
                                    if (v470 != 8)
                                      goto LABEL_771;
                                    v472 = *((unsigned __int8 *)v466 + 29);
                                    if (v472 != v406)
                                    {
                                      if (v472 > v406)
                                      {
LABEL_755:
                                        v464 = (_QWORD *)*v466;
                                        continue;
                                      }
                                      if (v472 >= v406)
                                        goto LABEL_780;
                                      break;
                                    }
                                    v473 = *((unsigned __int8 *)v466 + 30);
                                    v471 = v473 > 8;
                                    if (v473 == 8)
                                    {
                                      v474 = *((unsigned __int8 *)v466 + 31);
                                      if (v474 > 8)
                                        goto LABEL_755;
                                      if (v474 == 8)
                                        goto LABEL_780;
                                    }
                                    else
                                    {
LABEL_771:
                                      if (v471)
                                        goto LABEL_755;
                                    }
                                  }
                                  else
                                  {
                                    if (v469 > v449)
                                      goto LABEL_755;
                                    if (v469 >= v449)
                                      goto LABEL_780;
                                  }
                                }
                                else
                                {
                                  if (v468 > v407)
                                    goto LABEL_755;
                                  if (v468 >= v407)
                                    goto LABEL_780;
                                }
                                break;
                              }
                              v464 = (_QWORD *)v466[1];
                              if (!v464)
                              {
                                v467 = v466 + 1;
                                goto LABEL_777;
                              }
                              goto LABEL_757;
                            }
                            v452 = *v3;
                            v453 = v423 - (_BYTE *)*v3;
                            v454 = v453 >> 2;
                            v455 = (v453 >> 2) + 1;
                            if (v455 >> 62)
                              sub_22316E078();
                            v456 = v450 - v452;
                            if (v456 >> 1 > v455)
                              v455 = v456 >> 1;
                            if ((unint64_t)v456 >= 0x7FFFFFFFFFFFFFFCLL)
                              v457 = 0x3FFFFFFFFFFFFFFFLL;
                            else
                              v457 = v455;
                            if (v457 >> 62)
                              sub_223174E94();
                            v458 = (char *)operator new(4 * v457);
                            v459 = &v458[4 * v454];
                            *v459 = 0;
                            *((_WORD *)v459 + 1) = v437;
                            if (v423 == v452)
                            {
                              v3 = (void **)a1;
                              v449 = 8 - (2 << v1046);
                              v451 = v459 + 4;
                              *(_QWORD *)a1 = v459;
                              *(_QWORD *)(a1 + 8) = v459 + 4;
                              *(_QWORD *)(a1 + 16) = &v458[4 * v457];
                              if (!v452)
                                goto LABEL_754;
                            }
                            else
                            {
                              v460 = v423 - v452 - 4;
                              v3 = (void **)a1;
                              if (v460 < 0x2C || (unint64_t)(&v423[-v453] - v458) < 0x20)
                              {
                                v461 = v423;
                                v462 = &v458[4 * v454];
                                v449 = 8 - (2 << v1046);
                                goto LABEL_751;
                              }
                              v523 = (v460 >> 2) + 1;
                              v524 = 4 * (v523 & 0x7FFFFFFFFFFFFFF8);
                              v461 = &v423[-v524];
                              v462 = &v459[-v524];
                              v525 = &v458[4 * v454 - 16];
                              v526 = v423 - 16;
                              v527 = v523 & 0x7FFFFFFFFFFFFFF8;
                              v449 = 8 - (2 << v1046);
                              do
                              {
                                v528 = *(_OWORD *)v526;
                                *((_OWORD *)v525 - 1) = *((_OWORD *)v526 - 1);
                                *(_OWORD *)v525 = v528;
                                v525 -= 32;
                                v526 -= 32;
                                v527 -= 8;
                              }
                              while (v527);
                              if (v523 != (v523 & 0x7FFFFFFFFFFFFFF8))
                              {
                                do
                                {
LABEL_751:
                                  v463 = *((_DWORD *)v461 - 1);
                                  v461 -= 4;
                                  *((_DWORD *)v462 - 1) = v463;
                                  v462 -= 4;
                                }
                                while (v461 != v452);
                              }
                              v451 = v459 + 4;
                              *(_QWORD *)a1 = v462;
                              *(_QWORD *)(a1 + 8) = v459 + 4;
                              *(_QWORD *)(a1 + 16) = &v458[4 * v457];
                              if (!v452)
                                goto LABEL_754;
                            }
                            operator delete(v452);
                            goto LABEL_754;
                          }
LABEL_715:
                          v438 = v436;
                          v440 = *((unsigned __int8 *)v436 + 26);
                          if (v440 == v406)
                          {
                            v441 = *((unsigned __int8 *)v438 + 27);
                            v442 = v441 > 8;
                            if (v441 != 8)
                              goto LABEL_726;
                            v443 = *((unsigned __int8 *)v438 + 28);
                            if (v443 == __sb)
                            {
                              v444 = *((unsigned __int8 *)v438 + 29);
                              if (v444 != v407)
                              {
                                if (v444 > v407)
                                {
LABEL_713:
                                  v436 = (_QWORD *)*v438;
                                  continue;
                                }
                                if (v444 >= v407)
                                  goto LABEL_738;
                                break;
                              }
                              v445 = *((unsigned __int8 *)v438 + 30);
                              v442 = v445 > 8;
                              if (v445 == 8)
                              {
                                v446 = *((unsigned __int8 *)v438 + 31);
                                if (v446 > 8)
                                  goto LABEL_713;
                                if (v446 == 8)
                                  goto LABEL_738;
                                break;
                              }
LABEL_726:
                              if (v442)
                                goto LABEL_713;
                              break;
                            }
                            if (v443 > __sb)
                              goto LABEL_713;
                            if (v443 >= __sb)
                              goto LABEL_738;
                          }
                          else
                          {
                            if (v440 > v406)
                              goto LABEL_713;
                            if (v440 >= v406)
                              goto LABEL_738;
                          }
                          break;
                        }
                        v436 = (_QWORD *)v438[1];
                        if (!v436)
                        {
                          v439 = v438 + 1;
                          goto LABEL_735;
                        }
                        goto LABEL_715;
                      }
                      v424 = (char *)*v3;
                      v425 = v408 - (_BYTE *)*v3;
                      v426 = v425 >> 2;
                      v427 = (v425 >> 2) + 1;
                      if (v427 >> 62)
                        sub_22316E078();
                      v428 = v422 - v424;
                      if (v428 >> 1 > v427)
                        v427 = v428 >> 1;
                      if ((unint64_t)v428 >= 0x7FFFFFFFFFFFFFFCLL)
                        v429 = 0x3FFFFFFFFFFFFFFFLL;
                      else
                        v429 = v427;
                      if (v429 >> 62)
                        sub_223174E94();
                      v430 = (char *)operator new(4 * v429);
                      v431 = &v430[4 * v426];
                      *v431 = 0;
                      *((_WORD *)v431 + 1) = v410;
                      if (v408 == v424)
                      {
                        v3 = (void **)a1;
                        v423 = v431 + 4;
                        *(_QWORD *)a1 = v431;
                        *(_QWORD *)(a1 + 8) = v431 + 4;
                        *(_QWORD *)(a1 + 16) = &v430[4 * v429];
                        if (!v424)
                          goto LABEL_712;
                      }
                      else
                      {
                        v432 = v408 - v424 - 4;
                        v3 = (void **)a1;
                        if (v432 < 0x2C || (unint64_t)(&v408[-v425] - v430) < 0x20)
                        {
                          v433 = v408;
                          v434 = &v430[4 * v426];
                          goto LABEL_709;
                        }
                        v517 = (v432 >> 2) + 1;
                        v518 = 4 * (v517 & 0x7FFFFFFFFFFFFFF8);
                        v433 = &v408[-v518];
                        v434 = &v431[-v518];
                        v519 = &v430[4 * v426 - 16];
                        v520 = v408 - 16;
                        v521 = v517 & 0x7FFFFFFFFFFFFFF8;
                        do
                        {
                          v522 = *(_OWORD *)v520;
                          *((_OWORD *)v519 - 1) = *((_OWORD *)v520 - 1);
                          *(_OWORD *)v519 = v522;
                          v519 -= 32;
                          v520 -= 32;
                          v521 -= 8;
                        }
                        while (v521);
                        if (v517 != (v517 & 0x7FFFFFFFFFFFFFF8))
                        {
                          do
                          {
LABEL_709:
                            v435 = *((_DWORD *)v433 - 1);
                            v433 -= 4;
                            *((_DWORD *)v434 - 1) = v435;
                            v434 -= 4;
                          }
                          while (v433 != v424);
                        }
                        v423 = v431 + 4;
                        *(_QWORD *)a1 = v434;
                        *(_QWORD *)(a1 + 8) = v431 + 4;
                        *(_QWORD *)(a1 + 16) = &v430[4 * v429];
                        if (!v424)
                          goto LABEL_712;
                      }
                      operator delete(v424);
                      goto LABEL_712;
                    }
LABEL_673:
                    v411 = v409;
                    v413 = *((unsigned __int8 *)v409 + 26);
                    if (v413 == v406)
                    {
                      v414 = *((unsigned __int8 *)v411 + 27);
                      if (v414 == __sb)
                      {
                        v415 = *((unsigned __int8 *)v411 + 28);
                        v416 = v415 > 8;
                        if (v415 != 8)
                          goto LABEL_687;
                        v417 = *((unsigned __int8 *)v411 + 29);
                        if (v417 != v407)
                        {
                          if (v417 > v407)
                          {
LABEL_671:
                            v409 = (_QWORD *)*v411;
                            continue;
                          }
                          if (v417 >= v407)
                            goto LABEL_696;
                          break;
                        }
                        v418 = *((unsigned __int8 *)v411 + 30);
                        v416 = v418 > 8;
                        if (v418 == 8)
                        {
                          v419 = *((unsigned __int8 *)v411 + 31);
                          if (v419 > 8)
                            goto LABEL_671;
                          if (v419 == 8)
                            goto LABEL_696;
                        }
                        else
                        {
LABEL_687:
                          if (v416)
                            goto LABEL_671;
                        }
                      }
                      else
                      {
                        if (v414 > __sb)
                          goto LABEL_671;
                        if (v414 >= __sb)
                          goto LABEL_696;
                      }
                    }
                    else
                    {
                      if (v413 > v406)
                        goto LABEL_671;
                      if (v413 >= v406)
                        goto LABEL_696;
                    }
                    break;
                  }
                  v409 = (_QWORD *)v411[1];
                  if (!v409)
                  {
                    v412 = v411 + 1;
                    goto LABEL_693;
                  }
                  goto LABEL_673;
                }
LABEL_668:
                v404 += v1043;
                if (v404 < 8)
                  continue;
                break;
              }
              if (v1046 > 1)
              {
                v3 = (void **)a1;
                if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/EdgeOwnerTable.cpp", 264, (uint64_t)"kLevel < kNumMeshLevels - 1", 27, (uint64_t)&unk_22459CE1E, 0, (void (*)(void **))sub_22457406C))
                {
                  abort();
                }
              }
              v541 = 0;
LABEL_865:
              v542 = 0;
              v543 = v541;
              v1038 = v541 & v1028;
              v1025 = v541;
              v1022 = v541;
              while (2)
              {
                if (((v542 | v541) & v1030) == 0)
                  goto LABEL_868;
                v545 = v542 & v1028;
                v546 = (char *)v3[1];
                v547 = v3[5];
                v548 = (unint64_t)(v546 - (_BYTE *)*v3) >> 2;
                v549 = v1049;
LABEL_872:
                v550 = v549;
                if (v547)
                {
                  while (1)
                  {
                    v549 = v547;
                    v551 = *((unsigned __int8 *)v547 + 26);
                    if (v551 == v542)
                    {
                      v552 = *((unsigned __int8 *)v549 + 27);
                      if (v552 == __sb)
                      {
                        v553 = *((unsigned __int8 *)v549 + 28);
                        if (v553 == v543)
                        {
                          v554 = *((unsigned __int8 *)v549 + 29);
                          if (v554 == v545)
                          {
                            v555 = *((unsigned __int8 *)v549 + 30);
                            if (v555 == 8)
                            {
                              v556 = *((unsigned __int8 *)v549 + 31);
                              if (v556 > v1038)
                                goto LABEL_871;
                              if (v556 >= v1038)
                                goto LABEL_915;
                            }
                            else if (v555 > 8)
                            {
LABEL_871:
                              v547 = (_QWORD *)*v549;
                              goto LABEL_872;
                            }
                          }
                          else
                          {
                            if (v554 > v545)
                              goto LABEL_871;
                            if (v554 >= v545)
                            {
LABEL_915:
                              v570 = (void **)a1;
                              v571 = *(_QWORD *)(a1 + 16);
                              if ((unint64_t)v546 < v571)
                                goto LABEL_938;
                              goto LABEL_916;
                            }
                          }
                        }
                        else
                        {
                          if (v553 > v543)
                            goto LABEL_871;
                          if (v553 >= v543)
                            goto LABEL_915;
                        }
                      }
                      else
                      {
                        if (v552 > __sb)
                          goto LABEL_871;
                        if (v552 >= __sb)
                          goto LABEL_915;
                      }
                    }
                    else
                    {
                      if (v551 > v542)
                        goto LABEL_871;
                      if (v551 >= v542)
                        goto LABEL_915;
                    }
                    v547 = (_QWORD *)v549[1];
                    if (!v547)
                    {
                      v550 = v549 + 1;
                      break;
                    }
                  }
                }
                v557 = operator new(0x28uLL);
                v557[26] = v542;
                v557[27] = __sb;
                v543 = v1025;
                v557[28] = v1025;
                v557[29] = v542 & v1028;
                v557[30] = 8;
                v557[31] = v1038;
                *((_WORD *)v557 + 16) = v548;
                *(_QWORD *)v557 = 0;
                *((_QWORD *)v557 + 1) = 0;
                *((_QWORD *)v557 + 2) = v549;
                *v550 = v557;
                v558 = **(_QWORD **)(a1 + 32);
                if (v558)
                {
                  *(_QWORD *)(a1 + 32) = v558;
                  v557 = (_BYTE *)*v550;
                }
                v559 = (uint64_t *)*v1049;
                v28 = v557 == (_BYTE *)*v1049;
                v557[24] = v28;
                if (v28)
                  goto LABEL_937;
                while (2)
                {
                  v560 = (uint64_t *)*((_QWORD *)v557 + 2);
                  if (*((_BYTE *)v560 + 24))
                    goto LABEL_937;
                  v561 = (uint64_t *)v560[2];
                  v562 = (uint64_t *)*v561;
                  if ((uint64_t *)*v561 != v560)
                  {
                    if (!v562 || (v564 = *((unsigned __int8 *)v562 + 24), v563 = v562 + 3, v564))
                    {
                      if ((_BYTE *)*v560 == v557)
                      {
                        v638 = *((_QWORD *)v557 + 1);
                        *v560 = v638;
                        if (v638)
                        {
                          *(_QWORD *)(v638 + 16) = v560;
                          v561 = (uint64_t *)v560[2];
                        }
                        *((_QWORD *)v557 + 2) = v561;
                        *(_QWORD *)(v560[2] + 8 * (*(_QWORD *)v560[2] != (_QWORD)v560)) = v557;
                        *((_QWORD *)v557 + 1) = v560;
                        v560[2] = (uint64_t)v557;
                        v561 = (uint64_t *)*((_QWORD *)v557 + 2);
                        v557[24] = 1;
                        *((_BYTE *)v561 + 24) = 0;
                        v560 = (uint64_t *)v561[1];
                        v587 = *v560;
                        v561[1] = *v560;
                        if (v587)
LABEL_934:
                          *(_QWORD *)(v587 + 16) = v561;
                      }
                      else
                      {
                        *((_BYTE *)v560 + 24) = 1;
                        *((_BYTE *)v561 + 24) = 0;
                        v560 = (uint64_t *)v561[1];
                        v587 = *v560;
                        v561[1] = *v560;
                        if (v587)
                          goto LABEL_934;
                      }
                      v560[2] = v561[2];
                      *(_QWORD *)(v561[2] + 8 * (*(_QWORD *)v561[2] != (_QWORD)v561)) = v560;
                      *v560 = (uint64_t)v561;
                      goto LABEL_936;
                    }
LABEL_901:
                    *((_BYTE *)v560 + 24) = 1;
                    v557 = v561;
                    *((_BYTE *)v561 + 24) = v561 == v559;
                    *v563 = 1;
                    if (v561 == v559)
                      goto LABEL_937;
                    continue;
                  }
                  break;
                }
                v565 = v561[1];
                if (v565)
                {
                  v566 = *(unsigned __int8 *)(v565 + 24);
                  v563 = (_BYTE *)(v565 + 24);
                  if (!v566)
                    goto LABEL_901;
                }
                if ((_BYTE *)*v560 == v557)
                {
                  *((_BYTE *)v560 + 24) = 1;
                  *((_BYTE *)v561 + 24) = 0;
                  v569 = v560[1];
                  *v561 = v569;
                  if (v569)
                    goto LABEL_913;
                }
                else
                {
                  v567 = (uint64_t **)v560[1];
                  v568 = *v567;
                  v560[1] = (uint64_t)*v567;
                  if (v568)
                  {
                    v568[2] = (uint64_t)v560;
                    v561 = (uint64_t *)v560[2];
                  }
                  v567[2] = v561;
                  *(_QWORD *)(v560[2] + 8 * (*(_QWORD *)v560[2] != (_QWORD)v560)) = v567;
                  *v567 = v560;
                  v560[2] = (uint64_t)v567;
                  v561 = v567[2];
                  v560 = (uint64_t *)*v561;
                  *((_BYTE *)v567 + 24) = 1;
                  *((_BYTE *)v561 + 24) = 0;
                  v569 = v560[1];
                  *v561 = v569;
                  if (v569)
LABEL_913:
                    *(_QWORD *)(v569 + 16) = v561;
                }
                v560[2] = v561[2];
                *(_QWORD *)(v561[2] + 8 * (*(_QWORD *)v561[2] != (_QWORD)v561)) = v560;
                v560[1] = (uint64_t)v561;
LABEL_936:
                v561[2] = (uint64_t)v560;
LABEL_937:
                v570 = (void **)a1;
                ++*(_QWORD *)(a1 + 48);
                v546 = *(char **)(a1 + 8);
                v571 = *(_QWORD *)(a1 + 16);
                if ((unint64_t)v546 < v571)
                {
LABEL_938:
                  *v546 = 0;
                  *((_WORD *)v546 + 1) = v548;
                  v586 = v546 + 4;
                  v581 = v570;
                  v584 = 8 - (2 << v1046);
                  goto LABEL_939;
                }
LABEL_916:
                v572 = (char *)*v570;
                v573 = v546 - (_BYTE *)*v570;
                v574 = v573 >> 2;
                v575 = (v573 >> 2) + 1;
                if (v575 >> 62)
                  sub_22316E078();
                v576 = v571 - (_QWORD)v572;
                if (v576 >> 1 > v575)
                  v575 = v576 >> 1;
                if ((unint64_t)v576 >= 0x7FFFFFFFFFFFFFFCLL)
                  v577 = 0x3FFFFFFFFFFFFFFFLL;
                else
                  v577 = v575;
                if (v577 >> 62)
                  sub_223174E94();
                v578 = (char *)operator new(4 * v577);
                v579 = &v578[4 * v574];
                *v579 = 0;
                *((_WORD *)v579 + 1) = v548;
                if (v546 == v572)
                {
                  v581 = (void **)a1;
                  v584 = 8 - (2 << v1046);
                  v543 = v1025;
                  v586 = v579 + 4;
                  *(_QWORD *)a1 = v579;
                  *(_QWORD *)(a1 + 8) = v579 + 4;
                  *(_QWORD *)(a1 + 16) = &v578[4 * v577];
                  if (!v572)
                    goto LABEL_939;
                }
                else
                {
                  v580 = v546 - v572 - 4;
                  v581 = (void **)a1;
                  if (v580 < 0x2C || (unint64_t)(&v546[-v573] - v578) < 0x20)
                  {
                    v582 = v546;
                    v583 = &v578[4 * v574];
                    v584 = 8 - (2 << v1046);
                    v543 = v1025;
                    goto LABEL_927;
                  }
                  v626 = (v580 >> 2) + 1;
                  v627 = 4 * (v626 & 0x7FFFFFFFFFFFFFF8);
                  v582 = &v546[-v627];
                  v583 = &v579[-v627];
                  v628 = &v578[4 * v574 - 16];
                  v629 = v546 - 16;
                  v630 = v626 & 0x7FFFFFFFFFFFFFF8;
                  do
                  {
                    v631 = *(_OWORD *)v629;
                    *((_OWORD *)v628 - 1) = *((_OWORD *)v629 - 1);
                    *(_OWORD *)v628 = v631;
                    v628 -= 32;
                    v629 -= 32;
                    v630 -= 8;
                  }
                  while (v630);
                  v584 = 8 - (2 << v1046);
                  v543 = v1025;
                  if (v626 != (v626 & 0x7FFFFFFFFFFFFFF8))
                  {
                    do
                    {
LABEL_927:
                      v585 = *((_DWORD *)v582 - 1);
                      v582 -= 4;
                      *((_DWORD *)v583 - 1) = v585;
                      v583 -= 4;
                    }
                    while (v582 != v572);
                  }
                  v586 = v579 + 4;
                  *(_QWORD *)a1 = v583;
                  *(_QWORD *)(a1 + 8) = v579 + 4;
                  *(_QWORD *)(a1 + 16) = &v578[4 * v577];
                  if (!v572)
                  {
LABEL_939:
                    v581[1] = v586;
                    v588 = v581[5];
                    v589 = (unint64_t)(v586 - (_BYTE *)*v581) >> 2;
                    for (j = v1049; ; v588 = (_QWORD *)*j)
                    {
                      v591 = j;
                      if (!v588)
                        break;
                      while (1)
                      {
                        j = v588;
                        v592 = *((unsigned __int8 *)v588 + 26);
                        if (v592 != v545)
                        {
                          if (v592 > v545)
                            break;
                          if (v592 >= v545)
                            goto LABEL_984;
                          goto LABEL_963;
                        }
                        v593 = *((unsigned __int8 *)j + 27);
                        if (v593 != v584)
                        {
                          if (v593 > v584)
                            break;
                          if (v593 >= v584)
                            goto LABEL_984;
                          goto LABEL_963;
                        }
                        v594 = *((unsigned __int8 *)j + 28);
                        if (v594 != v1038)
                        {
                          if (v594 > v1038)
                            break;
                          if (v594 >= v1038)
                            goto LABEL_984;
                          goto LABEL_963;
                        }
                        v595 = *((unsigned __int8 *)j + 29);
                        if (v595 != v542)
                        {
                          if (v595 > v542)
                            break;
                          if (v595 >= v542)
                          {
LABEL_984:
                            v611 = (void **)a1;
                            v612 = *(_QWORD *)(a1 + 16);
                            if ((unint64_t)v586 >= v612)
                              goto LABEL_992;
                            goto LABEL_866;
                          }
                          goto LABEL_963;
                        }
                        v596 = *((unsigned __int8 *)j + 30);
                        if (v596 == 8)
                        {
                          v597 = *((unsigned __int8 *)j + 31);
                          if (v597 > v543)
                            break;
                          if (v597 >= v543)
                            goto LABEL_984;
                          goto LABEL_963;
                        }
                        if (v596 > 8)
                          break;
LABEL_963:
                        v588 = (_QWORD *)j[1];
                        if (!v588)
                        {
                          v591 = j + 1;
                          goto LABEL_965;
                        }
                      }
                    }
LABEL_965:
                    v598 = operator new(0x28uLL);
                    v598[26] = v542 & v1028;
                    v598[27] = v1033;
                    v598[28] = v1038;
                    v598[29] = v542;
                    v598[30] = 8;
                    v543 = v1025;
                    v598[31] = v1025;
                    *((_WORD *)v598 + 16) = v589;
                    *(_QWORD *)v598 = 0;
                    *((_QWORD *)v598 + 1) = 0;
                    *((_QWORD *)v598 + 2) = j;
                    *v591 = v598;
                    v599 = **(_QWORD **)(a1 + 32);
                    if (v599)
                    {
                      *(_QWORD *)(a1 + 32) = v599;
                      v598 = (_BYTE *)*v591;
                    }
                    v600 = (uint64_t *)*v1049;
                    v28 = v598 == (_BYTE *)*v1049;
                    v598[24] = v28;
                    if (v28)
                      goto LABEL_991;
                    while (2)
                    {
                      v601 = (uint64_t *)*((_QWORD *)v598 + 2);
                      if (*((_BYTE *)v601 + 24))
                        goto LABEL_991;
                      v602 = (uint64_t *)v601[2];
                      v603 = (uint64_t *)*v602;
                      if ((uint64_t *)*v602 != v601)
                      {
                        if (!v603 || (v605 = *((unsigned __int8 *)v603 + 24), v604 = v603 + 3, v605))
                        {
                          if ((_BYTE *)*v601 == v598)
                          {
                            v639 = *((_QWORD *)v598 + 1);
                            *v601 = v639;
                            if (v639)
                            {
                              *(_QWORD *)(v639 + 16) = v601;
                              v602 = (uint64_t *)v601[2];
                            }
                            *((_QWORD *)v598 + 2) = v602;
                            *(_QWORD *)(v601[2] + 8 * (*(_QWORD *)v601[2] != (_QWORD)v601)) = v598;
                            *((_QWORD *)v598 + 1) = v601;
                            v601[2] = (uint64_t)v598;
                            v602 = (uint64_t *)*((_QWORD *)v598 + 2);
                            v598[24] = 1;
                            *((_BYTE *)v602 + 24) = 0;
                            v601 = (uint64_t *)v602[1];
                            v613 = *v601;
                            v602[1] = *v601;
                            if (v613)
LABEL_988:
                              *(_QWORD *)(v613 + 16) = v602;
                          }
                          else
                          {
                            *((_BYTE *)v601 + 24) = 1;
                            *((_BYTE *)v602 + 24) = 0;
                            v601 = (uint64_t *)v602[1];
                            v613 = *v601;
                            v602[1] = *v601;
                            if (v613)
                              goto LABEL_988;
                          }
                          v601[2] = v602[2];
                          *(_QWORD *)(v602[2] + 8 * (*(_QWORD *)v602[2] != (_QWORD)v602)) = v601;
                          *v601 = (uint64_t)v602;
                          goto LABEL_990;
                        }
LABEL_970:
                        *((_BYTE *)v601 + 24) = 1;
                        v598 = v602;
                        *((_BYTE *)v602 + 24) = v602 == v600;
                        *v604 = 1;
                        if (v602 == v600)
                          goto LABEL_991;
                        continue;
                      }
                      break;
                    }
                    v606 = v602[1];
                    if (v606)
                    {
                      v607 = *(unsigned __int8 *)(v606 + 24);
                      v604 = (_BYTE *)(v606 + 24);
                      if (!v607)
                        goto LABEL_970;
                    }
                    if ((_BYTE *)*v601 == v598)
                    {
                      *((_BYTE *)v601 + 24) = 1;
                      *((_BYTE *)v602 + 24) = 0;
                      v610 = v601[1];
                      *v602 = v610;
                      if (v610)
                        goto LABEL_982;
                    }
                    else
                    {
                      v608 = (uint64_t **)v601[1];
                      v609 = *v608;
                      v601[1] = (uint64_t)*v608;
                      if (v609)
                      {
                        v609[2] = (uint64_t)v601;
                        v602 = (uint64_t *)v601[2];
                      }
                      v608[2] = v602;
                      *(_QWORD *)(v601[2] + 8 * (*(_QWORD *)v601[2] != (_QWORD)v601)) = v608;
                      *v608 = v601;
                      v601[2] = (uint64_t)v608;
                      v602 = v608[2];
                      v601 = (uint64_t *)*v602;
                      *((_BYTE *)v608 + 24) = 1;
                      *((_BYTE *)v602 + 24) = 0;
                      v610 = v601[1];
                      *v602 = v610;
                      if (v610)
LABEL_982:
                        *(_QWORD *)(v610 + 16) = v602;
                    }
                    v601[2] = v602[2];
                    *(_QWORD *)(v602[2] + 8 * (*(_QWORD *)v602[2] != (_QWORD)v602)) = v601;
                    v601[1] = (uint64_t)v602;
LABEL_990:
                    v602[2] = (uint64_t)v601;
LABEL_991:
                    v611 = (void **)a1;
                    ++*(_QWORD *)(a1 + 48);
                    v586 = *(char **)(a1 + 8);
                    v612 = *(_QWORD *)(a1 + 16);
                    if ((unint64_t)v586 < v612)
                    {
LABEL_866:
                      *v586 = 0;
                      *((_WORD *)v586 + 1) = v589;
                      v544 = v586 + 4;
                      v3 = v611;
                      goto LABEL_867;
                    }
LABEL_992:
                    v614 = *v611;
                    v615 = v586 - (_BYTE *)*v611;
                    v616 = v615 >> 2;
                    v617 = (v615 >> 2) + 1;
                    if (v617 >> 62)
                      sub_22316E078();
                    v618 = v612 - (_QWORD)v614;
                    if (v618 >> 1 > v617)
                      v617 = v618 >> 1;
                    if ((unint64_t)v618 >= 0x7FFFFFFFFFFFFFFCLL)
                      v619 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v619 = v617;
                    if (v619 >> 62)
                      sub_223174E94();
                    v620 = (char *)operator new(4 * v619);
                    v621 = &v620[4 * v616];
                    *v621 = 0;
                    *((_WORD *)v621 + 1) = v589;
                    if (v586 == v614)
                    {
                      v3 = (void **)a1;
                      v544 = v621 + 4;
                      *(_QWORD *)a1 = v621;
                      *(_QWORD *)(a1 + 8) = v621 + 4;
                      *(_QWORD *)(a1 + 16) = &v620[4 * v619];
                      if (v614)
                        goto LABEL_1005;
                    }
                    else
                    {
                      v622 = v586 - v614 - 4;
                      v3 = (void **)a1;
                      if (v622 < 0x2C || (unint64_t)(&v586[-v615] - v620) < 0x20)
                      {
                        v623 = v586;
                        v624 = &v620[4 * v616];
                        goto LABEL_1003;
                      }
                      v632 = (v622 >> 2) + 1;
                      v633 = 4 * (v632 & 0x7FFFFFFFFFFFFFF8);
                      v623 = &v586[-v633];
                      v624 = &v621[-v633];
                      v634 = &v620[4 * v616 - 16];
                      v635 = v586 - 16;
                      v636 = v632 & 0x7FFFFFFFFFFFFFF8;
                      do
                      {
                        v637 = *(_OWORD *)v635;
                        *((_OWORD *)v634 - 1) = *((_OWORD *)v635 - 1);
                        *(_OWORD *)v634 = v637;
                        v634 -= 32;
                        v635 -= 32;
                        v636 -= 8;
                      }
                      while (v636);
                      if (v632 != (v632 & 0x7FFFFFFFFFFFFFF8))
                      {
                        do
                        {
LABEL_1003:
                          v625 = *((_DWORD *)v623 - 1);
                          v623 -= 4;
                          *((_DWORD *)v624 - 1) = v625;
                          v624 -= 4;
                        }
                        while (v623 != v614);
                      }
                      v544 = v621 + 4;
                      *(_QWORD *)a1 = v624;
                      *(_QWORD *)(a1 + 8) = v621 + 4;
                      *(_QWORD *)(a1 + 16) = &v620[4 * v619];
                      if (v614)
LABEL_1005:
                        operator delete(v614);
                    }
                    v543 = v1025;
LABEL_867:
                    v3[1] = v544;
                    v541 = v1022;
LABEL_868:
                    v542 += v1043;
                    if (v542 < 8)
                      continue;
                    v541 += v1043;
                    if (v541 < 8)
                      goto LABEL_865;
                    for (k = 0; k < 8; k += v1043)
                    {
                      if ((k & v1030) != 0)
                      {
                        v642 = k;
                        v1039 = k;
                        v643 = (k - v1043);
                        v644 = (char *)v3[1];
                        v645 = v3[5];
                        v646 = (unint64_t)(v644 - (_BYTE *)*v3) >> 2;
                        v647 = v1049;
LABEL_1036:
                        v648 = v647;
                        if (!v645)
                          goto LABEL_1058;
                        while (1)
                        {
                          v647 = v645;
                          v649 = *((unsigned __int8 *)v645 + 26);
                          if (v649 == __sb)
                          {
                            v650 = *((unsigned __int8 *)v647 + 27);
                            if (v650 == v642)
                            {
                              v651 = *((unsigned __int8 *)v647 + 28);
                              v652 = v651 > 8;
                              if (v651 == 8 && (v653 = *((unsigned __int8 *)v647 + 29), v652 = v653 > 8, v653 == 8))
                              {
                                v654 = *((unsigned __int8 *)v647 + 30);
                                if (v654 == v643)
                                {
                                  v655 = *((unsigned __int8 *)v647 + 31);
                                  if (v655 > 8)
                                    goto LABEL_1035;
                                  if (v655 == 8)
                                    goto LABEL_1056;
                                }
                                else
                                {
                                  if (v654 > v643)
                                  {
LABEL_1035:
                                    v645 = (_QWORD *)*v647;
                                    goto LABEL_1036;
                                  }
                                  if (v654 >= v643)
                                    goto LABEL_1056;
                                }
                              }
                              else if (v652)
                              {
                                goto LABEL_1035;
                              }
                            }
                            else
                            {
                              if (v650 > v642)
                                goto LABEL_1035;
                              if (v650 >= v642)
                              {
LABEL_1056:
                                v656 = (char *)v3[2];
                                if (v644 < v656)
                                  goto LABEL_1057;
LABEL_1061:
                                v660 = (char *)*v3;
                                v661 = v644 - (_BYTE *)*v3;
                                v662 = v661 >> 2;
                                v663 = (v661 >> 2) + 1;
                                if (v663 >> 62)
                                  sub_22316E078();
                                v664 = v656 - v660;
                                if (v664 >> 1 > v663)
                                  v663 = v664 >> 1;
                                if ((unint64_t)v664 >= 0x7FFFFFFFFFFFFFFCLL)
                                  v665 = 0x3FFFFFFFFFFFFFFFLL;
                                else
                                  v665 = v663;
                                if (v665 >> 62)
                                  sub_223174E94();
                                v666 = (char *)operator new(4 * v665);
                                v667 = &v666[4 * v662];
                                *v667 = 0;
                                *((_WORD *)v667 + 1) = v646;
                                if (v644 == v660)
                                {
                                  v3 = (void **)a1;
                                  v657 = v667 + 4;
                                  *(_QWORD *)a1 = v667;
                                  *(_QWORD *)(a1 + 8) = v667 + 4;
                                  *(_QWORD *)(a1 + 16) = &v666[4 * v665];
                                  if (v660)
                                    goto LABEL_1074;
                                }
                                else
                                {
                                  v668 = v644 - v660 - 4;
                                  v3 = (void **)a1;
                                  if (v668 < 0x2C || (unint64_t)(&v644[-v661] - v666) < 0x20)
                                  {
                                    v669 = v644;
                                    v670 = &v666[4 * v662];
                                    goto LABEL_1072;
                                  }
                                  v751 = (v668 >> 2) + 1;
                                  v752 = 4 * (v751 & 0x7FFFFFFFFFFFFFF8);
                                  v669 = &v644[-v752];
                                  v670 = &v667[-v752];
                                  v753 = &v666[4 * v662 - 16];
                                  v754 = v644 - 16;
                                  v755 = v751 & 0x7FFFFFFFFFFFFFF8;
                                  do
                                  {
                                    v756 = *(_OWORD *)v754;
                                    *((_OWORD *)v753 - 1) = *((_OWORD *)v754 - 1);
                                    *(_OWORD *)v753 = v756;
                                    v753 -= 32;
                                    v754 -= 32;
                                    v755 -= 8;
                                  }
                                  while (v755);
                                  if (v751 != (v751 & 0x7FFFFFFFFFFFFFF8))
                                  {
                                    do
                                    {
LABEL_1072:
                                      v671 = *((_DWORD *)v669 - 1);
                                      v669 -= 4;
                                      *((_DWORD *)v670 - 1) = v671;
                                      v670 -= 4;
                                    }
                                    while (v669 != v660);
                                  }
                                  v657 = v667 + 4;
                                  *(_QWORD *)a1 = v670;
                                  *(_QWORD *)(a1 + 8) = v667 + 4;
                                  *(_QWORD *)(a1 + 16) = &v666[4 * v665];
                                  if (v660)
LABEL_1074:
                                    operator delete(v660);
                                }
LABEL_1075:
                                v3[1] = v657;
                                v672 = v3[5];
                                v673 = (unint64_t)(v657 - (_BYTE *)*v3) >> 2;
                                v674 = v1049;
LABEL_1077:
                                v675 = v674;
                                if (!v672)
                                {
LABEL_1100:
                                  v682 = operator new(0x28uLL);
                                  v682[26] = 8;
                                  v682[27] = v642;
                                  v682[28] = __sb;
                                  v682[29] = 8;
                                  v682[30] = v643;
                                  v682[31] = 8;
                                  *((_WORD *)v682 + 16) = v673;
                                  *(_QWORD *)v682 = 0;
                                  *((_QWORD *)v682 + 1) = 0;
                                  *((_QWORD *)v682 + 2) = v674;
                                  *v675 = v682;
                                  v3 = (void **)a1;
                                  v683 = **(_QWORD **)(a1 + 32);
                                  if (v683)
                                  {
                                    *(_QWORD *)(a1 + 32) = v683;
                                    v682 = (_BYTE *)*v675;
                                  }
                                  sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v682);
                                  ++*(_QWORD *)(a1 + 48);
                                  v657 = *(char **)(a1 + 8);
LABEL_1103:
                                  v684 = (char *)v3[2];
                                  if (v657 < v684)
                                  {
                                    *v657 = 0;
                                    *((_WORD *)v657 + 1) = v673;
                                    v685 = v657 + 4;
                                    v686 = 8 - (2 << v1046);
                                    goto LABEL_1119;
                                  }
                                  v687 = (char *)*v3;
                                  v688 = v657 - (_BYTE *)*v3;
                                  v689 = v688 >> 2;
                                  v690 = (v688 >> 2) + 1;
                                  if (v690 >> 62)
                                    sub_22316E078();
                                  v691 = v684 - v687;
                                  if (v691 >> 1 > v690)
                                    v690 = v691 >> 1;
                                  if ((unint64_t)v691 >= 0x7FFFFFFFFFFFFFFCLL)
                                    v692 = 0x3FFFFFFFFFFFFFFFLL;
                                  else
                                    v692 = v690;
                                  if (v692 >> 62)
                                    sub_223174E94();
                                  v693 = (char *)operator new(4 * v692);
                                  v694 = &v693[4 * v689];
                                  *v694 = 0;
                                  *((_WORD *)v694 + 1) = v673;
                                  if (v657 == v687)
                                  {
                                    v3 = (void **)a1;
                                    v686 = 8 - (2 << v1046);
                                    v685 = v694 + 4;
                                    *(_QWORD *)a1 = v694;
                                    *(_QWORD *)(a1 + 8) = v694 + 4;
                                    *(_QWORD *)(a1 + 16) = &v693[4 * v692];
                                    if (v687)
                                      goto LABEL_1118;
                                  }
                                  else
                                  {
                                    v695 = v657 - v687 - 4;
                                    v3 = (void **)a1;
                                    if (v695 < 0x2C || (unint64_t)(&v657[-v688] - v693) < 0x20)
                                    {
                                      v696 = v657;
                                      v697 = &v693[4 * v689];
                                      v686 = 8 - (2 << v1046);
                                      goto LABEL_1116;
                                    }
                                    v757 = (v695 >> 2) + 1;
                                    v758 = 4 * (v757 & 0x7FFFFFFFFFFFFFF8);
                                    v696 = &v657[-v758];
                                    v697 = &v694[-v758];
                                    v759 = &v693[4 * v689 - 16];
                                    v760 = v657 - 16;
                                    v761 = v757 & 0x7FFFFFFFFFFFFFF8;
                                    v686 = 8 - (2 << v1046);
                                    do
                                    {
                                      v762 = *(_OWORD *)v760;
                                      *((_OWORD *)v759 - 1) = *((_OWORD *)v760 - 1);
                                      *(_OWORD *)v759 = v762;
                                      v759 -= 32;
                                      v760 -= 32;
                                      v761 -= 8;
                                    }
                                    while (v761);
                                    if (v757 != (v757 & 0x7FFFFFFFFFFFFFF8))
                                    {
                                      do
                                      {
LABEL_1116:
                                        v698 = *((_DWORD *)v696 - 1);
                                        v696 -= 4;
                                        *((_DWORD *)v697 - 1) = v698;
                                        v697 -= 4;
                                      }
                                      while (v696 != v687);
                                    }
                                    v685 = v694 + 4;
                                    *(_QWORD *)a1 = v697;
                                    *(_QWORD *)(a1 + 8) = v694 + 4;
                                    *(_QWORD *)(a1 + 16) = &v693[4 * v692];
                                    if (v687)
LABEL_1118:
                                      operator delete(v687);
                                  }
LABEL_1119:
                                  v3[1] = v685;
                                  v699 = v3[5];
                                  v700 = (unint64_t)(v685 - (_BYTE *)*v3) >> 2;
                                  v701 = v1049;
LABEL_1121:
                                  v702 = v701;
                                  if (!v699)
                                    goto LABEL_1143;
                                  while (1)
                                  {
                                    v701 = v699;
                                    v703 = *((unsigned __int8 *)v699 + 26);
                                    if (v703 == v686)
                                    {
                                      v704 = *((unsigned __int8 *)v701 + 27);
                                      if (v704 == v643)
                                      {
                                        v705 = *((unsigned __int8 *)v701 + 28);
                                        v706 = v705 > 8;
                                        if (v705 == 8
                                          && (v707 = *((unsigned __int8 *)v701 + 29), v706 = v707 > 8, v707 == 8))
                                        {
                                          v708 = *((unsigned __int8 *)v701 + 30);
                                          if (v708 == v642)
                                          {
                                            v709 = *((unsigned __int8 *)v701 + 31);
                                            if (v709 > 8)
                                              goto LABEL_1120;
                                            if (v709 == 8)
                                              goto LABEL_1141;
                                          }
                                          else
                                          {
                                            if (v708 > v642)
                                            {
LABEL_1120:
                                              v699 = (_QWORD *)*v701;
                                              goto LABEL_1121;
                                            }
                                            if (v708 >= v642)
                                              goto LABEL_1141;
                                          }
                                        }
                                        else if (v706)
                                        {
                                          goto LABEL_1120;
                                        }
                                      }
                                      else
                                      {
                                        if (v704 > v643)
                                          goto LABEL_1120;
                                        if (v704 >= v643)
                                        {
LABEL_1141:
                                          v710 = (char *)v3[2];
                                          if (v685 < v710)
                                            goto LABEL_1142;
LABEL_1146:
                                          v714 = (char *)*v3;
                                          v715 = v685 - (_BYTE *)*v3;
                                          v716 = v715 >> 2;
                                          v717 = (v715 >> 2) + 1;
                                          if (v717 >> 62)
                                            sub_22316E078();
                                          v718 = v710 - v714;
                                          if (v718 >> 1 > v717)
                                            v717 = v718 >> 1;
                                          if ((unint64_t)v718 >= 0x7FFFFFFFFFFFFFFCLL)
                                            v719 = 0x3FFFFFFFFFFFFFFFLL;
                                          else
                                            v719 = v717;
                                          if (v719 >> 62)
                                            sub_223174E94();
                                          v720 = (char *)operator new(4 * v719);
                                          v721 = &v720[4 * v716];
                                          *v721 = 0;
                                          *((_WORD *)v721 + 1) = v700;
                                          if (v685 == v714)
                                          {
                                            v3 = (void **)a1;
                                            v686 = 8 - (2 << v1046);
                                            v711 = v721 + 4;
                                            *(_QWORD *)a1 = v721;
                                            *(_QWORD *)(a1 + 8) = v721 + 4;
                                            *(_QWORD *)(a1 + 16) = &v720[4 * v719];
                                            if (v714)
                                              goto LABEL_1159;
                                          }
                                          else
                                          {
                                            v722 = v685 - v714 - 4;
                                            v3 = (void **)a1;
                                            if (v722 < 0x2C || (unint64_t)(&v685[-v715] - v720) < 0x20)
                                            {
                                              v723 = v685;
                                              v724 = &v720[4 * v716];
                                              v686 = 8 - (2 << v1046);
                                              goto LABEL_1157;
                                            }
                                            v763 = (v722 >> 2) + 1;
                                            v764 = 4 * (v763 & 0x7FFFFFFFFFFFFFF8);
                                            v723 = &v685[-v764];
                                            v724 = &v721[-v764];
                                            v765 = &v720[4 * v716 - 16];
                                            v766 = (__int128 *)(v685 - 16);
                                            v767 = v763 & 0x7FFFFFFFFFFFFFF8;
                                            v686 = 8 - (2 << v1046);
                                            do
                                            {
                                              v768 = *v766;
                                              *((_OWORD *)v765 - 1) = *(v766 - 1);
                                              *(_OWORD *)v765 = v768;
                                              v765 -= 32;
                                              v766 -= 2;
                                              v767 -= 8;
                                            }
                                            while (v767);
                                            if (v763 != (v763 & 0x7FFFFFFFFFFFFFF8))
                                            {
                                              do
                                              {
LABEL_1157:
                                                v725 = *((_DWORD *)v723 - 1);
                                                v723 -= 4;
                                                *((_DWORD *)v724 - 1) = v725;
                                                v724 -= 4;
                                              }
                                              while (v723 != v714);
                                            }
                                            v711 = v721 + 4;
                                            *(_QWORD *)a1 = v724;
                                            *(_QWORD *)(a1 + 8) = v721 + 4;
                                            *(_QWORD *)(a1 + 16) = &v720[4 * v719];
                                            if (v714)
LABEL_1159:
                                              operator delete(v714);
                                          }
LABEL_1160:
                                          v3[1] = v711;
                                          v726 = v3[5];
                                          v727 = (unint64_t)(v711 - (_BYTE *)*v3) >> 2;
                                          v728 = v1049;
LABEL_1162:
                                          v729 = v728;
                                          if (!v726)
                                          {
LABEL_1185:
                                            v736 = operator new(0x28uLL);
                                            v736[26] = 8;
                                            v736[27] = v643;
                                            v736[28] = v1033;
                                            v736[29] = 8;
                                            v736[30] = v642;
                                            v736[31] = 8;
                                            *((_WORD *)v736 + 16) = v727;
                                            *(_QWORD *)v736 = 0;
                                            *((_QWORD *)v736 + 1) = 0;
                                            *((_QWORD *)v736 + 2) = v728;
                                            *v729 = v736;
                                            v3 = (void **)a1;
                                            v737 = **(_QWORD **)(a1 + 32);
                                            if (v737)
                                            {
                                              *(_QWORD *)(a1 + 32) = v737;
                                              v736 = (_BYTE *)*v729;
                                            }
                                            sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v736);
                                            ++*(_QWORD *)(a1 + 48);
                                            v711 = *(char **)(a1 + 8);
LABEL_1188:
                                            v738 = (char *)v3[2];
                                            if (v711 < v738)
                                            {
                                              *v711 = 0;
                                              *((_WORD *)v711 + 1) = v727;
                                              v641 = v711 + 4;
                                              k = v1039;
                                              goto LABEL_1031;
                                            }
                                            v739 = *v3;
                                            v740 = v711 - (_BYTE *)*v3;
                                            v741 = v740 >> 2;
                                            v742 = (v740 >> 2) + 1;
                                            if (v742 >> 62)
                                              sub_22316E078();
                                            v743 = v738 - v739;
                                            if (v743 >> 1 > v742)
                                              v742 = v743 >> 1;
                                            if ((unint64_t)v743 >= 0x7FFFFFFFFFFFFFFCLL)
                                              v744 = 0x3FFFFFFFFFFFFFFFLL;
                                            else
                                              v744 = v742;
                                            if (v744 >> 62)
                                              sub_223174E94();
                                            v745 = (char *)operator new(4 * v744);
                                            v746 = &v745[4 * v741];
                                            *v746 = 0;
                                            *((_WORD *)v746 + 1) = v727;
                                            if (v711 == v739)
                                            {
                                              v3 = (void **)a1;
                                              k = v1039;
                                              v641 = v746 + 4;
                                              *(_QWORD *)a1 = v746;
                                              *(_QWORD *)(a1 + 8) = v746 + 4;
                                              *(_QWORD *)(a1 + 16) = &v745[4 * v744];
                                              if (!v739)
                                                goto LABEL_1031;
                                            }
                                            else
                                            {
                                              v747 = v711 - v739 - 4;
                                              v3 = (void **)a1;
                                              if (v747 < 0x2C || (unint64_t)(&v711[-v740] - v745) < 0x20)
                                              {
                                                v748 = v711;
                                                v749 = &v745[4 * v741];
                                                k = v1039;
                                                goto LABEL_1200;
                                              }
                                              v769 = (v747 >> 2) + 1;
                                              v770 = 4 * (v769 & 0x7FFFFFFFFFFFFFF8);
                                              v748 = &v711[-v770];
                                              v749 = &v746[-v770];
                                              v771 = &v745[4 * v741 - 16];
                                              v772 = v711 - 16;
                                              v773 = v769 & 0x7FFFFFFFFFFFFFF8;
                                              do
                                              {
                                                v774 = *(_OWORD *)v772;
                                                *((_OWORD *)v771 - 1) = *((_OWORD *)v772 - 1);
                                                *(_OWORD *)v771 = v774;
                                                v771 -= 32;
                                                v772 -= 32;
                                                v773 -= 8;
                                              }
                                              while (v773);
                                              k = v1039;
                                              if (v769 != (v769 & 0x7FFFFFFFFFFFFFF8))
                                              {
                                                do
                                                {
LABEL_1200:
                                                  v750 = *((_DWORD *)v748 - 1);
                                                  v748 -= 4;
                                                  *((_DWORD *)v749 - 1) = v750;
                                                  v749 -= 4;
                                                }
                                                while (v748 != v739);
                                              }
                                              v641 = v746 + 4;
                                              *(_QWORD *)a1 = v749;
                                              *(_QWORD *)(a1 + 8) = v746 + 4;
                                              *(_QWORD *)(a1 + 16) = &v745[4 * v744];
                                              if (!v739)
                                              {
LABEL_1031:
                                                v3[1] = v641;
                                                goto LABEL_1032;
                                              }
                                            }
                                            operator delete(v739);
                                            goto LABEL_1031;
                                          }
                                          while (1)
                                          {
                                            v728 = v726;
                                            v730 = *((unsigned __int8 *)v726 + 26);
                                            if (v730 == 8)
                                            {
                                              v731 = *((unsigned __int8 *)v728 + 27);
                                              if (v731 == v643)
                                              {
                                                v732 = *((unsigned __int8 *)v728 + 28);
                                                if (v732 == v686)
                                                {
                                                  v733 = *((unsigned __int8 *)v728 + 29);
                                                  if (v733 == 8)
                                                  {
                                                    v734 = *((unsigned __int8 *)v728 + 30);
                                                    if (v734 == v642)
                                                    {
                                                      v735 = *((unsigned __int8 *)v728 + 31);
                                                      if (v735 > 8)
                                                        goto LABEL_1161;
                                                      if (v735 == 8)
                                                        goto LABEL_1188;
                                                    }
                                                    else
                                                    {
                                                      if (v734 > v642)
                                                      {
LABEL_1161:
                                                        v726 = (_QWORD *)*v728;
                                                        goto LABEL_1162;
                                                      }
                                                      if (v734 >= v642)
                                                        goto LABEL_1188;
                                                    }
                                                  }
                                                  else if (v733 > 8)
                                                  {
                                                    goto LABEL_1161;
                                                  }
                                                }
                                                else
                                                {
                                                  if (v732 > v686)
                                                    goto LABEL_1161;
                                                  if (v732 >= v686)
                                                    goto LABEL_1188;
                                                }
                                              }
                                              else
                                              {
                                                if (v731 > v643)
                                                  goto LABEL_1161;
                                                if (v731 >= v643)
                                                  goto LABEL_1188;
                                              }
                                            }
                                            else if (v730 >= 9)
                                            {
                                              goto LABEL_1161;
                                            }
                                            v726 = (_QWORD *)v728[1];
                                            if (!v726)
                                            {
                                              v729 = v728 + 1;
                                              goto LABEL_1185;
                                            }
                                          }
                                        }
                                      }
                                    }
                                    else
                                    {
                                      if (v703 > v686)
                                        goto LABEL_1120;
                                      if (v703 >= v686)
                                        goto LABEL_1141;
                                    }
                                    v699 = (_QWORD *)v701[1];
                                    if (!v699)
                                    {
                                      v702 = v701 + 1;
LABEL_1143:
                                      v712 = operator new(0x28uLL);
                                      v686 = 8 - (2 << v1046);
                                      v712[26] = v1033;
                                      v712[27] = v643;
                                      *((_WORD *)v712 + 14) = 2056;
                                      v712[30] = v642;
                                      v712[31] = 8;
                                      *((_WORD *)v712 + 16) = v700;
                                      *(_QWORD *)v712 = 0;
                                      *((_QWORD *)v712 + 1) = 0;
                                      *((_QWORD *)v712 + 2) = v701;
                                      *v702 = v712;
                                      v3 = (void **)a1;
                                      v713 = **(_QWORD **)(a1 + 32);
                                      if (v713)
                                      {
                                        *(_QWORD *)(a1 + 32) = v713;
                                        v712 = (_BYTE *)*v702;
                                      }
                                      sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v712);
                                      ++*(_QWORD *)(a1 + 48);
                                      v685 = *(char **)(a1 + 8);
                                      v710 = *(char **)(a1 + 16);
                                      if (v685 >= v710)
                                        goto LABEL_1146;
LABEL_1142:
                                      *v685 = 0;
                                      *((_WORD *)v685 + 1) = v700;
                                      v711 = v685 + 4;
                                      goto LABEL_1160;
                                    }
                                  }
                                }
                                while (1)
                                {
                                  v674 = v672;
                                  v676 = *((unsigned __int8 *)v672 + 26);
                                  if (v676 == 8)
                                  {
                                    v677 = *((unsigned __int8 *)v674 + 27);
                                    if (v677 == v642)
                                    {
                                      v678 = *((unsigned __int8 *)v674 + 28);
                                      if (v678 == __sb)
                                      {
                                        v679 = *((unsigned __int8 *)v674 + 29);
                                        if (v679 == 8)
                                        {
                                          v680 = *((unsigned __int8 *)v674 + 30);
                                          if (v680 == v643)
                                          {
                                            v681 = *((unsigned __int8 *)v674 + 31);
                                            if (v681 > 8)
                                              goto LABEL_1076;
                                            if (v681 == 8)
                                              goto LABEL_1103;
                                          }
                                          else
                                          {
                                            if (v680 > v643)
                                            {
LABEL_1076:
                                              v672 = (_QWORD *)*v674;
                                              goto LABEL_1077;
                                            }
                                            if (v680 >= v643)
                                              goto LABEL_1103;
                                          }
                                        }
                                        else if (v679 > 8)
                                        {
                                          goto LABEL_1076;
                                        }
                                      }
                                      else
                                      {
                                        if (v678 > __sb)
                                          goto LABEL_1076;
                                        if (v678 >= __sb)
                                          goto LABEL_1103;
                                      }
                                    }
                                    else
                                    {
                                      if (v677 > v642)
                                        goto LABEL_1076;
                                      if (v677 >= v642)
                                        goto LABEL_1103;
                                    }
                                  }
                                  else if (v676 >= 9)
                                  {
                                    goto LABEL_1076;
                                  }
                                  v672 = (_QWORD *)v674[1];
                                  if (!v672)
                                  {
                                    v675 = v674 + 1;
                                    goto LABEL_1100;
                                  }
                                }
                              }
                            }
                          }
                          else
                          {
                            if (v649 > __sb)
                              goto LABEL_1035;
                            if (v649 >= __sb)
                              goto LABEL_1056;
                          }
                          v645 = (_QWORD *)v647[1];
                          if (!v645)
                          {
                            v648 = v647 + 1;
LABEL_1058:
                            v658 = operator new(0x28uLL);
                            v658[26] = __sb;
                            v658[27] = v642;
                            *((_WORD *)v658 + 14) = 2056;
                            v658[30] = v643;
                            v658[31] = 8;
                            *((_WORD *)v658 + 16) = v646;
                            *(_QWORD *)v658 = 0;
                            *((_QWORD *)v658 + 1) = 0;
                            *((_QWORD *)v658 + 2) = v647;
                            *v648 = v658;
                            v3 = (void **)a1;
                            v659 = **(_QWORD **)(a1 + 32);
                            if (v659)
                            {
                              *(_QWORD *)(a1 + 32) = v659;
                              v658 = (_BYTE *)*v648;
                            }
                            sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v658);
                            ++*(_QWORD *)(a1 + 48);
                            v644 = *(char **)(a1 + 8);
                            v656 = *(char **)(a1 + 16);
                            if (v644 >= v656)
                              goto LABEL_1061;
LABEL_1057:
                            *v644 = 0;
                            *((_WORD *)v644 + 1) = v646;
                            v657 = v644 + 4;
                            goto LABEL_1075;
                          }
                        }
                      }
LABEL_1032:
                      ;
                    }
                    if (v1046 > 1)
                    {
                      v3 = (void **)a1;
                      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/EdgeOwnerTable.cpp", 264, (uint64_t)"kLevel < kNumMeshLevels - 1", 27, (uint64_t)&unk_22459CE1E, 0, (void (*)(void **))sub_22457406C))
                      {
                        abort();
                      }
                    }
                    v775 = 0;
                    while (2)
                    {
                      v776 = 0;
                      v777 = v775;
                      v1040 = v775 & v1028;
                      v1026 = v775;
                      v1023 = v775;
                      while (2)
                      {
                        if (((v776 | v775) & v1030) == 0)
                          goto LABEL_1234;
                        v779 = v776 & v1028;
                        v780 = (char *)v3[1];
                        v781 = v3[5];
                        v782 = (unint64_t)(v780 - (_BYTE *)*v3) >> 2;
                        v783 = v1049;
LABEL_1238:
                        v784 = v783;
                        if (v781)
                        {
                          while (1)
                          {
                            v783 = v781;
                            v785 = *((unsigned __int8 *)v781 + 26);
                            if (v785 == v776)
                            {
                              v786 = *((unsigned __int8 *)v783 + 27);
                              if (v786 == v777)
                              {
                                v787 = *((unsigned __int8 *)v783 + 28);
                                if (v787 == __sb)
                                {
                                  v788 = *((unsigned __int8 *)v783 + 29);
                                  if (v788 == v779)
                                  {
                                    v789 = *((unsigned __int8 *)v783 + 30);
                                    if (v789 == v1040)
                                    {
                                      v790 = *((unsigned __int8 *)v783 + 31);
                                      if (v790 > 8)
                                        goto LABEL_1237;
                                      if (v790 == 8)
                                        goto LABEL_1288;
                                    }
                                    else
                                    {
                                      if (v789 > v1040)
                                      {
LABEL_1237:
                                        v781 = (_QWORD *)*v783;
                                        goto LABEL_1238;
                                      }
                                      if (v789 >= v1040)
                                        goto LABEL_1288;
                                    }
                                  }
                                  else
                                  {
                                    if (v788 > v779)
                                      goto LABEL_1237;
                                    if (v788 >= v779)
                                      goto LABEL_1288;
                                  }
                                }
                                else
                                {
                                  if (v787 > __sb)
                                    goto LABEL_1237;
                                  if (v787 >= __sb)
                                    goto LABEL_1288;
                                }
                              }
                              else
                              {
                                if (v786 > v777)
                                  goto LABEL_1237;
                                if (v786 >= v777)
                                  goto LABEL_1288;
                              }
                            }
                            else
                            {
                              if (v785 > v776)
                                goto LABEL_1237;
                              if (v785 >= v776)
                                goto LABEL_1288;
                            }
                            v781 = (_QWORD *)v783[1];
                            if (!v781)
                            {
                              v784 = v783 + 1;
                              break;
                            }
                          }
                        }
                        v791 = (unint64_t)(v780 - (_BYTE *)*v3) >> 2;
                        v792 = operator new(0x28uLL);
                        v792[26] = v776;
                        v777 = v1026;
                        v792[27] = v1026;
                        v792[28] = __sb;
                        v792[29] = v776 & v1028;
                        v792[30] = v1040;
                        v792[31] = 8;
                        LOWORD(v782) = v791;
                        *((_WORD *)v792 + 16) = v791;
                        *(_QWORD *)v792 = 0;
                        *((_QWORD *)v792 + 1) = 0;
                        *((_QWORD *)v792 + 2) = v783;
                        *v784 = v792;
                        v3 = (void **)a1;
                        v793 = **(_QWORD **)(a1 + 32);
                        if (v793)
                        {
                          *(_QWORD *)(a1 + 32) = v793;
                          v792 = (_BYTE *)*v784;
                        }
                        v794 = (uint64_t *)*v1049;
                        v28 = v792 == (_BYTE *)*v1049;
                        v792[24] = v28;
                        if (v28)
                          goto LABEL_1287;
                        while (2)
                        {
                          v795 = (uint64_t *)*((_QWORD *)v792 + 2);
                          if (*((_BYTE *)v795 + 24))
                            goto LABEL_1287;
                          v796 = (uint64_t *)v795[2];
                          v797 = (uint64_t *)*v796;
                          if ((uint64_t *)*v796 != v795)
                          {
                            if (!v797 || (v799 = *((unsigned __int8 *)v797 + 24), v798 = v797 + 3, v799))
                            {
                              if ((_BYTE *)*v795 == v792)
                              {
                                v876 = *((_QWORD *)v792 + 1);
                                *v795 = v876;
                                if (v876)
                                {
                                  *(_QWORD *)(v876 + 16) = v795;
                                  v796 = (uint64_t *)v795[2];
                                }
                                *((_QWORD *)v792 + 2) = v796;
                                *(_QWORD *)(v795[2] + 8 * (*(_QWORD *)v795[2] != (_QWORD)v795)) = v792;
                                *((_QWORD *)v792 + 1) = v795;
                                v795[2] = (uint64_t)v792;
                                v796 = (uint64_t *)*((_QWORD *)v792 + 2);
                                v792[24] = 1;
                                *((_BYTE *)v796 + 24) = 0;
                                v795 = (uint64_t *)v796[1];
                                v805 = *v795;
                                v796[1] = *v795;
                                if (v805)
LABEL_1284:
                                  *(_QWORD *)(v805 + 16) = v796;
                              }
                              else
                              {
                                *((_BYTE *)v795 + 24) = 1;
                                *((_BYTE *)v796 + 24) = 0;
                                v795 = (uint64_t *)v796[1];
                                v805 = *v795;
                                v796[1] = *v795;
                                if (v805)
                                  goto LABEL_1284;
                              }
                              v795[2] = v796[2];
                              *(_QWORD *)(v796[2] + 8 * (*(_QWORD *)v796[2] != (_QWORD)v796)) = v795;
                              *v795 = (uint64_t)v796;
                              goto LABEL_1286;
                            }
LABEL_1268:
                            *((_BYTE *)v795 + 24) = 1;
                            v792 = v796;
                            *((_BYTE *)v796 + 24) = v796 == v794;
                            *v798 = 1;
                            if (v796 == v794)
                              goto LABEL_1287;
                            continue;
                          }
                          break;
                        }
                        v800 = v796[1];
                        if (v800)
                        {
                          v801 = *(unsigned __int8 *)(v800 + 24);
                          v798 = (_BYTE *)(v800 + 24);
                          if (!v801)
                            goto LABEL_1268;
                        }
                        if ((_BYTE *)*v795 == v792)
                        {
                          *((_BYTE *)v795 + 24) = 1;
                          *((_BYTE *)v796 + 24) = 0;
                          v804 = v795[1];
                          *v796 = v804;
                          if (v804)
                            goto LABEL_1280;
                        }
                        else
                        {
                          v802 = (uint64_t **)v795[1];
                          v803 = *v802;
                          v795[1] = (uint64_t)*v802;
                          if (v803)
                          {
                            v803[2] = (uint64_t)v795;
                            v796 = (uint64_t *)v795[2];
                          }
                          v802[2] = v796;
                          *(_QWORD *)(v795[2] + 8 * (*(_QWORD *)v795[2] != (_QWORD)v795)) = v802;
                          *v802 = v795;
                          v795[2] = (uint64_t)v802;
                          v796 = v802[2];
                          v795 = (uint64_t *)*v796;
                          *((_BYTE *)v802 + 24) = 1;
                          *((_BYTE *)v796 + 24) = 0;
                          v804 = v795[1];
                          *v796 = v804;
                          if (v804)
LABEL_1280:
                            *(_QWORD *)(v804 + 16) = v796;
                        }
                        v795[2] = v796[2];
                        *(_QWORD *)(v796[2] + 8 * (*(_QWORD *)v796[2] != (_QWORD)v796)) = v795;
                        v795[1] = (uint64_t)v796;
LABEL_1286:
                        v796[2] = (uint64_t)v795;
LABEL_1287:
                        ++*(_QWORD *)(a1 + 48);
                        v780 = *(char **)(a1 + 8);
LABEL_1288:
                        v806 = (char *)v3[2];
                        if (v780 < v806)
                        {
                          *v780 = 0;
                          *((_WORD *)v780 + 1) = v782;
                          v807 = v780 + 4;
                          v808 = 8 - (2 << v1046);
                          goto LABEL_1304;
                        }
                        v809 = (char *)*v3;
                        v810 = v780 - (_BYTE *)*v3;
                        v811 = v810 >> 2;
                        v812 = (v810 >> 2) + 1;
                        if (v812 >> 62)
                          sub_22316E078();
                        v813 = v806 - v809;
                        if (v813 >> 1 > v812)
                          v812 = v813 >> 1;
                        if ((unint64_t)v813 >= 0x7FFFFFFFFFFFFFFCLL)
                          v814 = 0x3FFFFFFFFFFFFFFFLL;
                        else
                          v814 = v812;
                        if (v814 >> 62)
                          sub_223174E94();
                        v815 = v782;
                        v816 = (char *)operator new(4 * v814);
                        v817 = &v816[4 * v811];
                        *v817 = 0;
                        *((_WORD *)v817 + 1) = v815;
                        if (v780 == v809)
                        {
                          v848 = &v816[4 * v811];
                          v808 = 8 - (2 << v1046);
                          v777 = v1026;
                          v807 = v817 + 4;
                          *(_QWORD *)a1 = v848;
                          *(_QWORD *)(a1 + 8) = v817 + 4;
                          *(_QWORD *)(a1 + 16) = &v816[4 * v814];
                          if (v809)
                            goto LABEL_1303;
                        }
                        else
                        {
                          v818 = v780 - v809 - 4;
                          v777 = v1026;
                          if (v818 < 0x2C || (unint64_t)(&v780[-v810] - v816) < 0x20)
                          {
                            v819 = v780;
                            v820 = &v816[4 * v811];
                            v808 = 8 - (2 << v1046);
                            goto LABEL_1301;
                          }
                          v864 = (v818 >> 2) + 1;
                          v865 = 4 * (v864 & 0x7FFFFFFFFFFFFFF8);
                          v819 = &v780[-v865];
                          v820 = &v817[-v865];
                          v866 = &v816[4 * v811 - 16];
                          v867 = v780 - 16;
                          v868 = v864 & 0x7FFFFFFFFFFFFFF8;
                          do
                          {
                            v869 = *(_OWORD *)v867;
                            *((_OWORD *)v866 - 1) = *((_OWORD *)v867 - 1);
                            *(_OWORD *)v866 = v869;
                            v866 -= 32;
                            v867 -= 32;
                            v868 -= 8;
                          }
                          while (v868);
                          v808 = 8 - (2 << v1046);
                          if (v864 != (v864 & 0x7FFFFFFFFFFFFFF8))
                          {
                            do
                            {
LABEL_1301:
                              v821 = *((_DWORD *)v819 - 1);
                              v819 -= 4;
                              *((_DWORD *)v820 - 1) = v821;
                              v820 -= 4;
                            }
                            while (v819 != v809);
                          }
                          v807 = v817 + 4;
                          *(_QWORD *)a1 = v820;
                          *(_QWORD *)(a1 + 8) = v817 + 4;
                          *(_QWORD *)(a1 + 16) = &v816[4 * v814];
                          if (v809)
LABEL_1303:
                            operator delete(v809);
                        }
LABEL_1304:
                        *(_QWORD *)(a1 + 8) = v807;
                        v822 = *(_QWORD *)(a1 + 40);
                        v823 = (unint64_t)&v807[-*(_QWORD *)a1] >> 2;
                        v824 = v1049;
LABEL_1306:
                        v825 = v824;
                        if (v822)
                        {
                          while (1)
                          {
                            v824 = (_QWORD *)v822;
                            v826 = *(unsigned __int8 *)(v822 + 26);
                            if (v826 == v779)
                            {
                              v827 = *((unsigned __int8 *)v824 + 27);
                              if (v827 == v1040)
                              {
                                v828 = *((unsigned __int8 *)v824 + 28);
                                if (v828 == v808)
                                {
                                  v829 = *((unsigned __int8 *)v824 + 29);
                                  if (v829 == v776)
                                  {
                                    v830 = *((unsigned __int8 *)v824 + 30);
                                    if (v830 == v777)
                                    {
                                      v831 = *((unsigned __int8 *)v824 + 31);
                                      if (v831 > 8)
                                        goto LABEL_1305;
                                      if (v831 == 8)
                                        goto LABEL_1350;
                                    }
                                    else
                                    {
                                      if (v830 > v777)
                                      {
LABEL_1305:
                                        v822 = *v824;
                                        goto LABEL_1306;
                                      }
                                      if (v830 >= v777)
                                        goto LABEL_1350;
                                    }
                                  }
                                  else
                                  {
                                    if (v829 > v776)
                                      goto LABEL_1305;
                                    if (v829 >= v776)
                                    {
LABEL_1350:
                                      v834 = (void **)a1;
                                      v833 = (unint64_t)&v807[-*(_QWORD *)a1] >> 2;
                                      v847 = *(_QWORD *)(a1 + 16);
                                      if ((unint64_t)v807 >= v847)
                                        goto LABEL_1360;
                                      goto LABEL_1232;
                                    }
                                  }
                                }
                                else
                                {
                                  if (v828 > v808)
                                    goto LABEL_1305;
                                  if (v828 >= v808)
                                    goto LABEL_1350;
                                }
                              }
                              else
                              {
                                if (v827 > v1040)
                                  goto LABEL_1305;
                                if (v827 >= v1040)
                                  goto LABEL_1350;
                              }
                            }
                            else
                            {
                              if (v826 > v779)
                                goto LABEL_1305;
                              if (v826 >= v779)
                                goto LABEL_1350;
                            }
                            v822 = v824[1];
                            if (!v822)
                            {
                              v825 = v824 + 1;
                              break;
                            }
                          }
                        }
                        v832 = operator new(0x28uLL);
                        v833 = v823;
                        v832[26] = v776 & v1028;
                        v832[27] = v1040;
                        v832[28] = v1033;
                        v832[29] = v776;
                        v777 = v1026;
                        v832[30] = v1026;
                        v832[31] = 8;
                        *((_WORD *)v832 + 16) = v823;
                        *(_QWORD *)v832 = 0;
                        *((_QWORD *)v832 + 1) = 0;
                        *((_QWORD *)v832 + 2) = v824;
                        *v825 = v832;
                        v834 = (void **)a1;
                        v835 = **(_QWORD **)(a1 + 32);
                        if (v835)
                        {
                          *(_QWORD *)(a1 + 32) = v835;
                          v832 = (_BYTE *)*v825;
                        }
                        v836 = (uint64_t *)*v1049;
                        v28 = v832 == (_BYTE *)*v1049;
                        v832[24] = v28;
                        if (v28)
                          goto LABEL_1359;
                        while (2)
                        {
                          v837 = (uint64_t *)*((_QWORD *)v832 + 2);
                          if (*((_BYTE *)v837 + 24))
                            goto LABEL_1359;
                          v838 = (uint64_t *)v837[2];
                          v839 = (uint64_t *)*v838;
                          if ((uint64_t *)*v838 != v837)
                          {
                            if (!v839 || (v841 = *((unsigned __int8 *)v839 + 24), v840 = v839 + 3, v841))
                            {
                              if ((_BYTE *)*v837 == v832)
                              {
                                v877 = *((_QWORD *)v832 + 1);
                                *v837 = v877;
                                if (v877)
                                {
                                  *(_QWORD *)(v877 + 16) = v837;
                                  v838 = (uint64_t *)v837[2];
                                }
                                *((_QWORD *)v832 + 2) = v838;
                                *(_QWORD *)(v837[2] + 8 * (*(_QWORD *)v837[2] != (_QWORD)v837)) = v832;
                                *((_QWORD *)v832 + 1) = v837;
                                v837[2] = (uint64_t)v832;
                                v838 = (uint64_t *)*((_QWORD *)v832 + 2);
                                v832[24] = 1;
                                *((_BYTE *)v838 + 24) = 0;
                                v837 = (uint64_t *)v838[1];
                                v849 = *v837;
                                v838[1] = *v837;
                                if (v849)
LABEL_1356:
                                  *(_QWORD *)(v849 + 16) = v838;
                              }
                              else
                              {
                                *((_BYTE *)v837 + 24) = 1;
                                *((_BYTE *)v838 + 24) = 0;
                                v837 = (uint64_t *)v838[1];
                                v849 = *v837;
                                v838[1] = *v837;
                                if (v849)
                                  goto LABEL_1356;
                              }
                              v837[2] = v838[2];
                              *(_QWORD *)(v838[2] + 8 * (*(_QWORD *)v838[2] != (_QWORD)v838)) = v837;
                              *v837 = (uint64_t)v838;
                              goto LABEL_1358;
                            }
LABEL_1336:
                            *((_BYTE *)v837 + 24) = 1;
                            v832 = v838;
                            *((_BYTE *)v838 + 24) = v838 == v836;
                            *v840 = 1;
                            if (v838 == v836)
                              goto LABEL_1359;
                            continue;
                          }
                          break;
                        }
                        v842 = v838[1];
                        if (v842)
                        {
                          v843 = *(unsigned __int8 *)(v842 + 24);
                          v840 = (_BYTE *)(v842 + 24);
                          if (!v843)
                            goto LABEL_1336;
                        }
                        if ((_BYTE *)*v837 == v832)
                        {
                          *((_BYTE *)v837 + 24) = 1;
                          *((_BYTE *)v838 + 24) = 0;
                          v846 = v837[1];
                          *v838 = v846;
                          if (v846)
                            goto LABEL_1348;
                        }
                        else
                        {
                          v844 = (uint64_t **)v837[1];
                          v845 = *v844;
                          v837[1] = (uint64_t)*v844;
                          if (v845)
                          {
                            v845[2] = (uint64_t)v837;
                            v838 = (uint64_t *)v837[2];
                          }
                          v844[2] = v838;
                          *(_QWORD *)(v837[2] + 8 * (*(_QWORD *)v837[2] != (_QWORD)v837)) = v844;
                          *v844 = v837;
                          v837[2] = (uint64_t)v844;
                          v838 = v844[2];
                          v837 = (uint64_t *)*v838;
                          *((_BYTE *)v844 + 24) = 1;
                          *((_BYTE *)v838 + 24) = 0;
                          v846 = v837[1];
                          *v838 = v846;
                          if (v846)
LABEL_1348:
                            *(_QWORD *)(v846 + 16) = v838;
                        }
                        v837[2] = v838[2];
                        *(_QWORD *)(v838[2] + 8 * (*(_QWORD *)v838[2] != (_QWORD)v838)) = v837;
                        v837[1] = (uint64_t)v838;
LABEL_1358:
                        v838[2] = (uint64_t)v837;
LABEL_1359:
                        ++*(_QWORD *)(a1 + 48);
                        v807 = *(char **)(a1 + 8);
                        v847 = *(_QWORD *)(a1 + 16);
                        if ((unint64_t)v807 < v847)
                        {
LABEL_1232:
                          *v807 = 0;
                          *((_WORD *)v807 + 1) = v833;
                          v778 = v807 + 4;
                          v3 = v834;
                          goto LABEL_1233;
                        }
LABEL_1360:
                        v850 = (char *)*v834;
                        v851 = v807 - (_BYTE *)*v834;
                        v852 = v851 >> 2;
                        v853 = (v851 >> 2) + 1;
                        if (v853 >> 62)
                          sub_22316E078();
                        v854 = v847 - (_QWORD)v850;
                        if (v854 >> 1 > v853)
                          v853 = v854 >> 1;
                        if ((unint64_t)v854 >= 0x7FFFFFFFFFFFFFFCLL)
                          v855 = 0x3FFFFFFFFFFFFFFFLL;
                        else
                          v855 = v853;
                        if (v855 >> 62)
                          sub_223174E94();
                        v856 = (char *)operator new(4 * v855);
                        v857 = &v856[4 * v852];
                        *v857 = 0;
                        *((_WORD *)v857 + 1) = v833;
                        if (v807 == v850)
                        {
                          v3 = (void **)a1;
                          v863 = &v856[4 * v855];
                          v778 = v857 + 4;
                          *(_QWORD *)a1 = v857;
                          *(_QWORD *)(a1 + 8) = v857 + 4;
                          *(_QWORD *)(a1 + 16) = v863;
                          if (v850)
                            goto LABEL_1373;
                        }
                        else
                        {
                          v858 = v807 - v850 - 4;
                          if (v858 < 0x2C || (unint64_t)(&v807[-v851] - v856) < 0x20)
                          {
                            v859 = v807;
                            v860 = &v856[4 * v852];
                            v3 = (void **)a1;
                            goto LABEL_1371;
                          }
                          v870 = (v858 >> 2) + 1;
                          v871 = 4 * (v870 & 0x7FFFFFFFFFFFFFF8);
                          v859 = &v807[-v871];
                          v860 = &v857[-v871];
                          v872 = &v856[4 * v852 - 16];
                          v873 = (__int128 *)(v807 - 16);
                          v874 = v870 & 0x7FFFFFFFFFFFFFF8;
                          do
                          {
                            v875 = *v873;
                            *((_OWORD *)v872 - 1) = *(v873 - 1);
                            *(_OWORD *)v872 = v875;
                            v872 -= 32;
                            v873 -= 2;
                            v874 -= 8;
                          }
                          while (v874);
                          v3 = (void **)a1;
                          if (v870 != (v870 & 0x7FFFFFFFFFFFFFF8))
                          {
                            do
                            {
LABEL_1371:
                              v861 = *((_DWORD *)v859 - 1);
                              v859 -= 4;
                              *((_DWORD *)v860 - 1) = v861;
                              v860 -= 4;
                            }
                            while (v859 != v850);
                          }
                          v862 = &v856[4 * v855];
                          v778 = v857 + 4;
                          *v3 = v860;
                          v3[1] = v857 + 4;
                          v3[2] = v862;
                          if (v850)
LABEL_1373:
                            operator delete(v850);
                        }
                        v777 = v1026;
LABEL_1233:
                        v3[1] = v778;
                        v775 = v1023;
LABEL_1234:
                        v776 += v1043;
                        if (v776 < 8)
                          continue;
                        break;
                      }
                      v775 += v1043;
                      if (v775 < 8)
                        continue;
                      break;
                    }
                    v878 = 0;
                    while (2)
                    {
                      if ((v878 & v1030) == 0)
                      {
LABEL_1400:
                        v878 += v1043;
                        if (v878 >= 8)
                          goto LABEL_323;
                        continue;
                      }
                      break;
                    }
                    v880 = v878;
                    v1041 = v878;
                    v881 = (v878 - v1043);
                    v882 = (char *)v3[1];
                    v883 = (char *)v3[5];
                    v884 = (unint64_t)(v882 - (_BYTE *)*v3) >> 2;
                    v885 = (char **)v1049;
LABEL_1404:
                    v886 = v885;
                    if (v883)
                    {
                      while (1)
                      {
                        v885 = (char **)v883;
                        v887 = v883[26];
                        if (v887 == __sb)
                        {
                          v888 = *((unsigned __int8 *)v885 + 27);
                          v889 = v888 > 8;
                          if (v888 != 8)
                            goto LABEL_1416;
                          v890 = *((unsigned __int8 *)v885 + 28);
                          if (v890 != v880)
                          {
                            if (v890 > v880)
                            {
LABEL_1403:
                              v883 = *v885;
                              goto LABEL_1404;
                            }
                            if (v890 >= v880)
                              goto LABEL_1425;
                            goto LABEL_1420;
                          }
                          v891 = *((unsigned __int8 *)v885 + 29);
                          v889 = v891 > 8;
                          if (v891 == 8 && (v892 = *((unsigned __int8 *)v885 + 30), v889 = v892 > 8, v892 == 8))
                          {
                            v893 = *((unsigned __int8 *)v885 + 31);
                            if (v893 > v881)
                              goto LABEL_1403;
                            if (v893 >= v881)
                              goto LABEL_1425;
                          }
                          else
                          {
LABEL_1416:
                            if (v889)
                              goto LABEL_1403;
                          }
                        }
                        else
                        {
                          if (v887 > __sb)
                            goto LABEL_1403;
                          if (v887 >= __sb)
                            goto LABEL_1425;
                        }
LABEL_1420:
                        v883 = v885[1];
                        if (!v883)
                        {
                          v886 = v885 + 1;
                          break;
                        }
                      }
                    }
                    v894 = (char *)operator new(0x28uLL);
                    v894[26] = __sb;
                    v894[27] = 8;
                    v894[28] = v880;
                    *(_WORD *)(v894 + 29) = 2056;
                    v894[31] = v881;
                    *((_WORD *)v894 + 16) = v884;
                    *(_QWORD *)v894 = 0;
                    *((_QWORD *)v894 + 1) = 0;
                    *((_QWORD *)v894 + 2) = v885;
                    *v886 = v894;
                    v3 = (void **)a1;
                    v895 = **(_QWORD **)(a1 + 32);
                    if (v895)
                    {
                      *(_QWORD *)(a1 + 32) = v895;
                      v894 = *v886;
                    }
                    sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v894);
                    ++*(_QWORD *)(a1 + 48);
                    v882 = *(char **)(a1 + 8);
LABEL_1425:
                    v896 = (char *)v3[2];
                    if (v882 < v896)
                    {
                      *v882 = 0;
                      *((_WORD *)v882 + 1) = v884;
                      v897 = v882 + 4;
LABEL_1441:
                      v3[1] = v897;
                      v910 = (char *)v3[5];
                      v911 = (unint64_t)(v897 - (_BYTE *)*v3) >> 2;
                      v912 = (char **)v1049;
LABEL_1443:
                      v913 = v912;
                      if (v910)
                      {
                        do
                        {
                          v912 = (char **)v910;
                          v914 = v910[26];
                          if (v914 == 8)
                          {
                            v915 = *((unsigned __int8 *)v912 + 27);
                            if (v915 == __sb)
                            {
                              v916 = *((unsigned __int8 *)v912 + 28);
                              if (v916 == v880)
                              {
                                v917 = *((unsigned __int8 *)v912 + 29);
                                v918 = v917 > 8;
                                if (v917 == 8 && (v919 = *((unsigned __int8 *)v912 + 30), v918 = v919 > 8, v919 == 8))
                                {
                                  v920 = *((unsigned __int8 *)v912 + 31);
                                  if (v920 > v881)
                                    goto LABEL_1442;
                                  if (v920 >= v881)
                                    goto LABEL_1466;
                                }
                                else if (v918)
                                {
LABEL_1442:
                                  v910 = *v912;
                                  goto LABEL_1443;
                                }
                              }
                              else
                              {
                                if (v916 > v880)
                                  goto LABEL_1442;
                                if (v916 >= v880)
                                  goto LABEL_1466;
                              }
                            }
                            else
                            {
                              if (v915 > __sb)
                                goto LABEL_1442;
                              if (v915 >= __sb)
                                goto LABEL_1466;
                            }
                          }
                          else if (v914 >= 9)
                          {
                            goto LABEL_1442;
                          }
                          v910 = v912[1];
                        }
                        while (v910);
                        v913 = v912 + 1;
                      }
                      v921 = (char *)operator new(0x28uLL);
                      v921[26] = 8;
                      v921[27] = __sb;
                      v921[28] = v880;
                      *(_WORD *)(v921 + 29) = 2056;
                      v921[31] = v881;
                      *((_WORD *)v921 + 16) = v911;
                      *(_QWORD *)v921 = 0;
                      *((_QWORD *)v921 + 1) = 0;
                      *((_QWORD *)v921 + 2) = v912;
                      *v913 = v921;
                      v3 = (void **)a1;
                      v922 = **(_QWORD **)(a1 + 32);
                      if (v922)
                      {
                        *(_QWORD *)(a1 + 32) = v922;
                        v921 = *v913;
                      }
                      sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v921);
                      ++*(_QWORD *)(a1 + 48);
                      v897 = *(char **)(a1 + 8);
LABEL_1466:
                      v923 = 8 - (2 << v1046);
                      v924 = (char *)v3[2];
                      if (v897 < v924)
                      {
                        *v897 = 0;
                        *((_WORD *)v897 + 1) = v911;
                        v925 = v897 + 4;
LABEL_1482:
                        v3[1] = v925;
                        v938 = (char *)v3[5];
                        v939 = (unint64_t)(v925 - (_BYTE *)*v3) >> 2;
                        v940 = (char **)v1049;
                        while (2)
                        {
                          v941 = v940;
                          if (v938)
                          {
LABEL_1485:
                            v940 = (char **)v938;
                            v942 = v938[26];
                            if (v942 == v923)
                            {
                              v943 = *((unsigned __int8 *)v940 + 27);
                              v944 = v943 > 8;
                              if (v943 != 8)
                                goto LABEL_1496;
                              v945 = *((unsigned __int8 *)v940 + 28);
                              if (v945 == v881)
                              {
                                v946 = *((unsigned __int8 *)v940 + 29);
                                v944 = v946 > 8;
                                if (v946 == 8)
                                {
                                  v947 = *((unsigned __int8 *)v940 + 30);
                                  v944 = v947 > 8;
                                  if (v947 == 8)
                                  {
                                    v948 = *((unsigned __int8 *)v940 + 31);
                                    if (v948 > v880)
                                      goto LABEL_1483;
                                    if (v948 >= v880)
                                      goto LABEL_1505;
                                    goto LABEL_1500;
                                  }
                                }
LABEL_1496:
                                if (v944)
                                  goto LABEL_1483;
                              }
                              else
                              {
                                if (v945 > v881)
                                {
LABEL_1483:
                                  v938 = *v940;
                                  continue;
                                }
                                if (v945 >= v881)
                                  goto LABEL_1505;
                              }
                            }
                            else
                            {
                              if (v942 > v923)
                                goto LABEL_1483;
                              if (v942 >= v923)
                                goto LABEL_1505;
                            }
LABEL_1500:
                            v938 = v940[1];
                            if (!v938)
                            {
                              v941 = v940 + 1;
                              break;
                            }
                            goto LABEL_1485;
                          }
                          break;
                        }
                        v949 = (char *)operator new(0x28uLL);
                        v923 = 8 - (2 << v1046);
                        v949[26] = v1033;
                        v949[27] = 8;
                        v949[28] = v881;
                        *(_WORD *)(v949 + 29) = 2056;
                        v949[31] = v880;
                        *((_WORD *)v949 + 16) = v939;
                        *(_QWORD *)v949 = 0;
                        *((_QWORD *)v949 + 1) = 0;
                        *((_QWORD *)v949 + 2) = v940;
                        *v941 = v949;
                        v3 = (void **)a1;
                        v950 = **(_QWORD **)(a1 + 32);
                        if (v950)
                        {
                          *(_QWORD *)(a1 + 32) = v950;
                          v949 = *v941;
                        }
                        sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v949);
                        ++*(_QWORD *)(a1 + 48);
                        v925 = *(char **)(a1 + 8);
LABEL_1505:
                        v951 = (char *)v3[2];
                        if (v925 < v951)
                        {
                          *v925 = 0;
                          *((_WORD *)v925 + 1) = v939;
                          v952 = v925 + 4;
LABEL_1521:
                          v3[1] = v952;
                          v965 = (char *)v3[5];
                          v966 = (unint64_t)(v952 - (_BYTE *)*v3) >> 2;
                          v967 = (char **)v1049;
LABEL_1523:
                          v968 = v967;
                          if (v965)
                          {
                            do
                            {
                              v967 = (char **)v965;
                              v969 = v965[26];
                              if (v969 == 8)
                              {
                                v970 = *((unsigned __int8 *)v967 + 27);
                                if (v970 == v923)
                                {
                                  v971 = *((unsigned __int8 *)v967 + 28);
                                  if (v971 == v881)
                                  {
                                    v972 = *((unsigned __int8 *)v967 + 29);
                                    v973 = v972 > 8;
                                    if (v972 == 8
                                      && (v974 = *((unsigned __int8 *)v967 + 30), v973 = v974 > 8, v974 == 8))
                                    {
                                      v975 = *((unsigned __int8 *)v967 + 31);
                                      if (v975 > v880)
                                        goto LABEL_1522;
                                      if (v975 >= v880)
                                        goto LABEL_1546;
                                    }
                                    else if (v973)
                                    {
LABEL_1522:
                                      v965 = *v967;
                                      goto LABEL_1523;
                                    }
                                  }
                                  else
                                  {
                                    if (v971 > v881)
                                      goto LABEL_1522;
                                    if (v971 >= v881)
                                      goto LABEL_1546;
                                  }
                                }
                                else
                                {
                                  if (v970 > v923)
                                    goto LABEL_1522;
                                  if (v970 >= v923)
                                    goto LABEL_1546;
                                }
                              }
                              else if (v969 >= 9)
                              {
                                goto LABEL_1522;
                              }
                              v965 = v967[1];
                            }
                            while (v965);
                            v968 = v967 + 1;
                          }
                          v976 = (char *)operator new(0x28uLL);
                          v976[26] = 8;
                          v976[27] = v1033;
                          v976[28] = v881;
                          *(_WORD *)(v976 + 29) = 2056;
                          v976[31] = v880;
                          *((_WORD *)v976 + 16) = v966;
                          *(_QWORD *)v976 = 0;
                          *((_QWORD *)v976 + 1) = 0;
                          *((_QWORD *)v976 + 2) = v967;
                          *v968 = v976;
                          v3 = (void **)a1;
                          v977 = **(_QWORD **)(a1 + 32);
                          if (v977)
                          {
                            *(_QWORD *)(a1 + 32) = v977;
                            v976 = *v968;
                          }
                          sub_2231A9A8C(*(uint64_t **)(a1 + 40), (uint64_t *)v976);
                          ++*(_QWORD *)(a1 + 48);
                          v952 = *(char **)(a1 + 8);
LABEL_1546:
                          v978 = (char *)v3[2];
                          if (v952 < v978)
                          {
                            *v952 = 0;
                            *((_WORD *)v952 + 1) = v966;
                            v879 = v952 + 4;
                            v878 = v1041;
                            goto LABEL_1399;
                          }
                          v979 = *v3;
                          v980 = v952 - (_BYTE *)*v3;
                          v981 = v980 >> 2;
                          v982 = (v980 >> 2) + 1;
                          if (v982 >> 62)
                            sub_22316E078();
                          v983 = v978 - v979;
                          if (v983 >> 1 > v982)
                            v982 = v983 >> 1;
                          if ((unint64_t)v983 >= 0x7FFFFFFFFFFFFFFCLL)
                            v984 = 0x3FFFFFFFFFFFFFFFLL;
                          else
                            v984 = v982;
                          if (v984 >> 62)
                            sub_223174E94();
                          v985 = (char *)operator new(4 * v984);
                          v986 = &v985[4 * v981];
                          *v986 = 0;
                          *((_WORD *)v986 + 1) = v966;
                          if (v952 == v979)
                          {
                            v3 = (void **)a1;
                            v878 = v1041;
                            v879 = v986 + 4;
                            *(_QWORD *)a1 = v986;
                            *(_QWORD *)(a1 + 8) = v986 + 4;
                            *(_QWORD *)(a1 + 16) = &v985[4 * v984];
                            if (!v979)
                              goto LABEL_1399;
                          }
                          else
                          {
                            v987 = v952 - v979 - 4;
                            v3 = (void **)a1;
                            v878 = v1041;
                            if (v987 < 0x2C || (unint64_t)(&v952[-v980] - v985) < 0x20)
                            {
                              v988 = v952;
                              v989 = &v985[4 * v981];
                              goto LABEL_1558;
                            }
                            v1009 = (v987 >> 2) + 1;
                            v1010 = 4 * (v1009 & 0x7FFFFFFFFFFFFFF8);
                            v988 = &v952[-v1010];
                            v989 = &v986[-v1010];
                            v1011 = &v985[4 * v981 - 16];
                            v1012 = v952 - 16;
                            v1013 = v1009 & 0x7FFFFFFFFFFFFFF8;
                            do
                            {
                              v1014 = *(_OWORD *)v1012;
                              *((_OWORD *)v1011 - 1) = *((_OWORD *)v1012 - 1);
                              *(_OWORD *)v1011 = v1014;
                              v1011 -= 32;
                              v1012 -= 32;
                              v1013 -= 8;
                            }
                            while (v1013);
                            if (v1009 != (v1009 & 0x7FFFFFFFFFFFFFF8))
                            {
                              do
                              {
LABEL_1558:
                                v990 = *((_DWORD *)v988 - 1);
                                v988 -= 4;
                                *((_DWORD *)v989 - 1) = v990;
                                v989 -= 4;
                              }
                              while (v988 != v979);
                            }
                            v879 = v986 + 4;
                            *(_QWORD *)a1 = v989;
                            *(_QWORD *)(a1 + 8) = v986 + 4;
                            *(_QWORD *)(a1 + 16) = &v985[4 * v984];
                            if (!v979)
                            {
LABEL_1399:
                              v3[1] = v879;
                              goto LABEL_1400;
                            }
                          }
                          operator delete(v979);
                          goto LABEL_1399;
                        }
                        v953 = *v3;
                        v954 = v925 - (_BYTE *)*v3;
                        v955 = v954 >> 2;
                        v956 = (v954 >> 2) + 1;
                        if (v956 >> 62)
                          sub_22316E078();
                        v957 = v951 - v953;
                        if (v957 >> 1 > v956)
                          v956 = v957 >> 1;
                        if ((unint64_t)v957 >= 0x7FFFFFFFFFFFFFFCLL)
                          v958 = 0x3FFFFFFFFFFFFFFFLL;
                        else
                          v958 = v956;
                        if (v958 >> 62)
                          sub_223174E94();
                        v959 = (char *)operator new(4 * v958);
                        v960 = &v959[4 * v955];
                        *v960 = 0;
                        *((_WORD *)v960 + 1) = v939;
                        if (v925 == v953)
                        {
                          v3 = (void **)a1;
                          v923 = 8 - (2 << v1046);
                          v952 = v960 + 4;
                          *(_QWORD *)a1 = v960;
                          *(_QWORD *)(a1 + 8) = v960 + 4;
                          *(_QWORD *)(a1 + 16) = &v959[4 * v958];
                          if (!v953)
                            goto LABEL_1521;
                        }
                        else
                        {
                          v961 = v925 - v953 - 4;
                          v3 = (void **)a1;
                          if (v961 < 0x2C || (unint64_t)(&v925[-v954] - v959) < 0x20)
                          {
                            v962 = v925;
                            v963 = &v959[4 * v955];
                            v923 = 8 - (2 << v1046);
                            goto LABEL_1518;
                          }
                          v1003 = (v961 >> 2) + 1;
                          v1004 = 4 * (v1003 & 0x7FFFFFFFFFFFFFF8);
                          v962 = &v925[-v1004];
                          v963 = &v960[-v1004];
                          v1005 = &v959[4 * v955 - 16];
                          v1006 = v925 - 16;
                          v1007 = v1003 & 0x7FFFFFFFFFFFFFF8;
                          v923 = 8 - (2 << v1046);
                          do
                          {
                            v1008 = *(_OWORD *)v1006;
                            *((_OWORD *)v1005 - 1) = *((_OWORD *)v1006 - 1);
                            *(_OWORD *)v1005 = v1008;
                            v1005 -= 32;
                            v1006 -= 32;
                            v1007 -= 8;
                          }
                          while (v1007);
                          if (v1003 != (v1003 & 0x7FFFFFFFFFFFFFF8))
                          {
                            do
                            {
LABEL_1518:
                              v964 = *((_DWORD *)v962 - 1);
                              v962 -= 4;
                              *((_DWORD *)v963 - 1) = v964;
                              v963 -= 4;
                            }
                            while (v962 != v953);
                          }
                          v952 = v960 + 4;
                          *(_QWORD *)a1 = v963;
                          *(_QWORD *)(a1 + 8) = v960 + 4;
                          *(_QWORD *)(a1 + 16) = &v959[4 * v958];
                          if (!v953)
                            goto LABEL_1521;
                        }
                        operator delete(v953);
                        goto LABEL_1521;
                      }
                      v926 = *v3;
                      v927 = v897 - (_BYTE *)*v3;
                      v928 = v927 >> 2;
                      v929 = (v927 >> 2) + 1;
                      if (v929 >> 62)
                        sub_22316E078();
                      v930 = v924 - v926;
                      if (v930 >> 1 > v929)
                        v929 = v930 >> 1;
                      if ((unint64_t)v930 >= 0x7FFFFFFFFFFFFFFCLL)
                        v931 = 0x3FFFFFFFFFFFFFFFLL;
                      else
                        v931 = v929;
                      if (v931 >> 62)
                        sub_223174E94();
                      v932 = (char *)operator new(4 * v931);
                      v933 = &v932[4 * v928];
                      *v933 = 0;
                      *((_WORD *)v933 + 1) = v911;
                      if (v897 == v926)
                      {
                        v3 = (void **)a1;
                        v923 = 8 - (2 << v1046);
                        v925 = v933 + 4;
                        *(_QWORD *)a1 = v933;
                        *(_QWORD *)(a1 + 8) = v933 + 4;
                        *(_QWORD *)(a1 + 16) = &v932[4 * v931];
                        if (!v926)
                          goto LABEL_1482;
                      }
                      else
                      {
                        v934 = v897 - v926 - 4;
                        v3 = (void **)a1;
                        if (v934 < 0x2C || (unint64_t)(&v897[-v927] - v932) < 0x20)
                        {
                          v935 = v897;
                          v936 = &v932[4 * v928];
                          v923 = 8 - (2 << v1046);
                          goto LABEL_1479;
                        }
                        v997 = (v934 >> 2) + 1;
                        v998 = 4 * (v997 & 0x7FFFFFFFFFFFFFF8);
                        v935 = &v897[-v998];
                        v936 = &v933[-v998];
                        v999 = &v932[4 * v928 - 16];
                        v1000 = v897 - 16;
                        v1001 = v997 & 0x7FFFFFFFFFFFFFF8;
                        v923 = 8 - (2 << v1046);
                        do
                        {
                          v1002 = *(_OWORD *)v1000;
                          *((_OWORD *)v999 - 1) = *((_OWORD *)v1000 - 1);
                          *(_OWORD *)v999 = v1002;
                          v999 -= 32;
                          v1000 -= 32;
                          v1001 -= 8;
                        }
                        while (v1001);
                        if (v997 != (v997 & 0x7FFFFFFFFFFFFFF8))
                        {
                          do
                          {
LABEL_1479:
                            v937 = *((_DWORD *)v935 - 1);
                            v935 -= 4;
                            *((_DWORD *)v936 - 1) = v937;
                            v936 -= 4;
                          }
                          while (v935 != v926);
                        }
                        v925 = v933 + 4;
                        *(_QWORD *)a1 = v936;
                        *(_QWORD *)(a1 + 8) = v933 + 4;
                        *(_QWORD *)(a1 + 16) = &v932[4 * v931];
                        if (!v926)
                          goto LABEL_1482;
                      }
                      operator delete(v926);
                      goto LABEL_1482;
                    }
                    v898 = (char *)*v3;
                    v899 = v882 - (_BYTE *)*v3;
                    v900 = v899 >> 2;
                    v901 = (v899 >> 2) + 1;
                    if (v901 >> 62)
                      sub_22316E078();
                    v902 = v896 - v898;
                    if (v902 >> 1 > v901)
                      v901 = v902 >> 1;
                    if ((unint64_t)v902 >= 0x7FFFFFFFFFFFFFFCLL)
                      v903 = 0x3FFFFFFFFFFFFFFFLL;
                    else
                      v903 = v901;
                    if (v903 >> 62)
                      sub_223174E94();
                    v904 = (char *)operator new(4 * v903);
                    v905 = &v904[4 * v900];
                    *v905 = 0;
                    *((_WORD *)v905 + 1) = v884;
                    if (v882 == v898)
                    {
                      v3 = (void **)a1;
                      v897 = v905 + 4;
                      *(_QWORD *)a1 = v905;
                      *(_QWORD *)(a1 + 8) = v905 + 4;
                      *(_QWORD *)(a1 + 16) = &v904[4 * v903];
                      if (!v898)
                        goto LABEL_1441;
                    }
                    else
                    {
                      v906 = v882 - v898 - 4;
                      v3 = (void **)a1;
                      if (v906 < 0x2C || (unint64_t)(&v882[-v899] - v904) < 0x20)
                      {
                        v907 = v882;
                        v908 = &v904[4 * v900];
                        goto LABEL_1438;
                      }
                      v991 = (v906 >> 2) + 1;
                      v992 = 4 * (v991 & 0x7FFFFFFFFFFFFFF8);
                      v907 = &v882[-v992];
                      v908 = &v905[-v992];
                      v993 = &v904[4 * v900 - 16];
                      v994 = v882 - 16;
                      v995 = v991 & 0x7FFFFFFFFFFFFFF8;
                      do
                      {
                        v996 = *(_OWORD *)v994;
                        *((_OWORD *)v993 - 1) = *((_OWORD *)v994 - 1);
                        *(_OWORD *)v993 = v996;
                        v993 -= 32;
                        v994 -= 32;
                        v995 -= 8;
                      }
                      while (v995);
                      if (v991 != (v991 & 0x7FFFFFFFFFFFFFF8))
                      {
                        do
                        {
LABEL_1438:
                          v909 = *((_DWORD *)v907 - 1);
                          v907 -= 4;
                          *((_DWORD *)v908 - 1) = v909;
                          v908 -= 4;
                        }
                        while (v907 != v898);
                      }
                      v897 = v905 + 4;
                      *(_QWORD *)a1 = v908;
                      *(_QWORD *)(a1 + 8) = v905 + 4;
                      *(_QWORD *)(a1 + 16) = &v904[4 * v903];
                      if (!v898)
                        goto LABEL_1441;
                    }
                    operator delete(v898);
                    goto LABEL_1441;
                  }
                }
                break;
              }
              operator delete(v572);
              goto LABEL_939;
            }
          }
          break;
        }
        operator delete(v336);
        goto LABEL_575;
      }
    }
  }
LABEL_3:
  v4 = v3;
  v5 = (unsigned __int8 *)v3[4];
  v6 = (unsigned __int8 **)(v4 + 5);
  if (v5 != (unsigned __int8 *)(v4 + 5))
  {
    while (1)
    {
      v7 = v5[26];
      v8 = v5[27];
      v9 = v5[28];
      if (v9 == 8)
        v10 = 0;
      else
        v10 = v5[28];
      if (v9 == 8)
        v11 = 18;
      else
        v11 = 9;
      if (v8 == 8)
        v12 = 0;
      else
        v12 = v5[27];
      if (v8 == 8)
        v13 = 6;
      else
        v13 = 3;
      if (v7 == 8)
        v14 = 0;
      else
        v14 = v5[26];
      if (v7 == 8)
        v15 = 2;
      else
        v15 = 1;
      v16 = &byte_224659778[v11 + v13];
      v17 = v16[v15];
      if (!v16[v15])
        goto LABEL_59;
      v18 = v5[29];
      v19 = v7 == v18;
      v20 = v5[30];
      if (v8 == v20)
        ++v19;
      v21 = v5[31];
      if (v9 == v21)
        ++v19;
      if (v19 == 2)
        goto LABEL_59;
      v22 = *v6;
      if (!*v6)
        break;
      v23 = v18 + v14 - v7;
      v24 = v20 + v12 - v8;
      v25 = v21 + v10 - v9;
      v26 = (unsigned __int8 *)v6;
      do
      {
        v30 = v22[26];
        v31 = v30 >= v14;
        if (v30 == v14)
        {
          v32 = v22[27];
          v31 = v32 >= v12;
          if (v32 == v12)
          {
            v33 = v22[28];
            v31 = v33 >= v10;
            if (v33 == v10)
            {
              v34 = v22[29];
              v31 = v34 >= v23;
              if (v34 == v23)
              {
                v35 = v22[30];
                v31 = v35 >= v24;
                if (v35 == v24)
                  v31 = v22[31] >= v25;
              }
            }
          }
        }
        v27 = !v31;
        v28 = v27 == 0;
        if (v27)
          v29 = v22 + 8;
        else
          v29 = v22;
        if (v28)
          v26 = v22;
        v22 = *(unsigned __int8 **)v29;
      }
      while (*(_QWORD *)v29);
      if (v26 == (unsigned __int8 *)v6)
        break;
      v36 = v26[26];
      v37 = v14 >= v36;
      if (v14 == v36 && (v38 = v26[27], v37 = v12 >= v38, v12 == v38) && (v39 = v26[28], v37 = v10 >= v39, v10 == v39))
      {
        v40 = v26[29];
        v41 = v40 > v23;
        if (v40 == v23 && (v42 = v26[30], v41 = v42 > v24, v42 == v24))
        {
          if (v26[31] > v25)
            break;
        }
        else if (v41)
        {
          break;
        }
      }
      else if (!v37)
      {
        break;
      }
LABEL_58:
      *(_DWORD *)(*(_QWORD *)a1 + 4 * *((unsigned __int16 *)v5 + 16)) = v17 | (*((unsigned __int16 *)v26 + 16) << 16);
LABEL_59:
      v44 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
      if (v44)
      {
        do
        {
          v45 = (unsigned __int8 **)v44;
          v44 = *(unsigned __int8 **)v44;
        }
        while (v44);
      }
      else
      {
        do
        {
          v45 = (unsigned __int8 **)*((_QWORD *)v5 + 2);
          v28 = *v45 == v5;
          v5 = (unsigned __int8 *)v45;
        }
        while (!v28);
      }
      v5 = (unsigned __int8 *)v45;
      if (v45 == v6)
        return;
    }
    v43 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/VolumetricMapper/src/EdgeOwnerTable.cpp", 411, (uint64_t)"iter != bridge_edge_map_.end()", 30, (uint64_t)&unk_22459CE1E, 0, (void (*)(void **))sub_22457406C);
    v26 = (unsigned __int8 *)v6;
    if (v43)
      abort();
    goto LABEL_58;
  }
}

