void sub_223900B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  char a66;
  char a67;

  if (a67)
  {
    if (a66 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a51);
  sub_223198030((uint64_t)&a32, (_QWORD *)a33);
  sub_2231874DC((uint64_t)&a35);
  _Unwind_Resume(a1);
}

uint64_t sub_223900DE4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  float v14;
  uint64_t *v15;
  uint64_t **v16;
  uint64_t **v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t **v27;
  uint64_t **v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  std::mutex *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  float32x4_t v45;
  float32x4_t v46;
  int32x2_t v47;
  uint64_t **v48;
  float32x4_t v49;
  float32x4_t v50;
  uint64_t *v51;
  uint64_t **v52;
  uint64_t *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *p_shared_owners;
  unint64_t v57;
  std::__shared_weak_count *v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  std::mutex *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t *v86;
  float32x4_t v87;
  float32x4_t v88;
  int32x2_t v89;
  uint64_t **v90;
  float32x4_t v91;
  float32x4_t v92;
  uint64_t *v93;
  uint64_t **v94;
  uint64_t *v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  std::__shared_weak_count *v100;
  uint64_t v101;
  unint64_t *v102;
  unint64_t v103;
  unint64_t *v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t *v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  std::mutex *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  unint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  BOOL v133;
  __n128 *v135;
  _BYTE *v136;
  size_t v137;
  float v138;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v145;
  float32x4_t v147;
  float32x4_t v148;
  int v149;
  void *v150[4];
  int v151;
  std::string v152;
  float v153;
  uint64_t **v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t **v157;
  uint64_t *v158;
  uint64_t v159;
  __int128 v160;
  uint64_t (**v161)();
  uint64_t v162;
  std::__shared_weak_count *v163;
  _BYTE __p[25];
  __int128 v165;
  std::__shared_weak_count *v166;
  __int16 v167;
  char v168;
  uint64_t v169;
  __int32 v170;
  uint64_t v171;
  __int32 v172;
  __int128 v173;
  __int128 v174;
  _QWORD v175[48];

  v175[45] = *MEMORY[0x24BDAC8D0];
  v158 = 0;
  v159 = 0;
  v156 = 0;
  v157 = &v158;
  v154 = &v155;
  v155 = 0;
  v153 = 0.0;
  v2 = *(uint64_t **)(a1 + 16);
  if (v2)
  {
    v149 = 0;
    while (1)
    {
      v3 = v2[4];
      v4 = v3 - v2[11];
      v5 = v2[6];
      v6 = v2[8];
      if (v6)
      {
        v7 = v5 <= v4;
        if (v3 < v2[9] + v6)
          v8 = v7;
        else
          v8 = v3 >= v2[10] + v6;
        if (v8)
        {
LABEL_13:
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Monitoring/src/ChangeProposalAggregator.cpp", 397, (uint64_t)"!ShouldEradicate()", 18, (uint64_t)"Expect no suggestion for eradicated proposals", 45, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
        }
      }
      else if (v5 <= v4)
      {
        goto LABEL_13;
      }
      if (!sub_2238FDF3C(v2 + 4))
        goto LABEL_31;
      v9 = v2[8];
      if (v9)
      {
        v10 = v2[9] + v9;
        v11 = v2[4];
        if (v11 >= v10)
          goto LABEL_31;
        if (a2 == 2)
        {
          if (v2[7] + 2000000000 < v11)
            goto LABEL_31;
        }
        else if (*((_DWORD *)v2 + 10) < 2u || v2[7] < v11 - 2000000000)
        {
LABEL_31:
          LOBYTE(v12) = 1;
          v13 = v2 + 2;
          v14 = 0.0;
          goto LABEL_50;
        }
        LOBYTE(v12) = 2;
        v13 = v2 + 2;
        v14 = 1.0;
        if (1.0 <= 0.0)
          goto LABEL_50;
      }
      else
      {
        if (*((_DWORD *)v2 + 10) < 2u)
        {
          v12 = 1;
        }
        else if (v2[7] < v2[4] - 2000000000)
        {
          v12 = 1;
        }
        else
        {
          v12 = 2;
        }
        v13 = v2 + 2;
        LODWORD(v14) = (((unint64_t)*((unsigned int *)v2 + 11) << 32) | v12) >> 32;
        if (v14 <= 0.0)
          goto LABEL_50;
      }
      v15 = v155;
      v16 = &v155;
      v17 = &v155;
      if (!v155)
        goto LABEL_47;
      v18 = *((_DWORD *)v2 + 4);
      v19 = *((_DWORD *)v2 + 5);
      v20 = *((_DWORD *)v2 + 6);
      do
      {
        while (1)
        {
          v17 = (uint64_t **)v15;
          v21 = *((_DWORD *)v15 + 7);
          if (v18 != v21)
            break;
          v22 = *((_DWORD *)v17 + 8);
          if (v19 != v22)
          {
            if (v19 < v22)
              goto LABEL_34;
            if (v22 >= v19)
              goto LABEL_50;
            goto LABEL_45;
          }
          v23 = *((_DWORD *)v17 + 9);
          if (v20 >= v23)
          {
            if (v23 >= v20)
              goto LABEL_50;
            goto LABEL_45;
          }
LABEL_34:
          v15 = *v17;
          v16 = v17;
          if (!*v17)
            goto LABEL_47;
        }
        if (v18 < v21)
          goto LABEL_34;
        if (v21 >= v18)
          goto LABEL_50;
LABEL_45:
        v15 = v17[1];
      }
      while (v15);
      v16 = v17 + 1;
LABEL_47:
      v24 = (char *)operator new(0x28uLL);
      v25 = *v13;
      *((_DWORD *)v24 + 9) = *((_DWORD *)v13 + 2);
      *(_QWORD *)(v24 + 28) = v25;
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      *((_QWORD *)v24 + 2) = v17;
      *v16 = (uint64_t *)v24;
      if (*v154)
      {
        v154 = (uint64_t **)*v154;
        v24 = (char *)*v16;
      }
      sub_2231A9A8C(v155, (uint64_t *)v24);
      ++v156;
LABEL_50:
      if (v12 == 2)
      {
        v26 = v158;
        v27 = &v158;
        v28 = &v158;
        if (v158)
        {
          v29 = *((_DWORD *)v2 + 4);
          v30 = *((_DWORD *)v2 + 5);
          v31 = *((_DWORD *)v2 + 6);
          while (1)
          {
            while (1)
            {
              v28 = (uint64_t **)v26;
              v32 = *((_DWORD *)v26 + 7);
              if (v29 == v32)
                break;
              if (v29 >= v32)
              {
                if (v32 >= v29)
                  goto LABEL_4;
                goto LABEL_64;
              }
LABEL_53:
              v26 = *v28;
              v27 = v28;
              if (!*v28)
                goto LABEL_66;
            }
            v33 = *((_DWORD *)v28 + 8);
            if (v30 != v33)
            {
              if (v30 >= v33)
              {
                if (v33 >= v30)
                  goto LABEL_4;
                goto LABEL_64;
              }
              goto LABEL_53;
            }
            v34 = *((_DWORD *)v28 + 9);
            if (v31 < v34)
              goto LABEL_53;
            if (v34 >= v31)
              goto LABEL_4;
LABEL_64:
            v26 = v28[1];
            if (!v26)
            {
              v27 = v28 + 1;
              break;
            }
          }
        }
LABEL_66:
        v35 = (char *)operator new(0x28uLL);
        v36 = *v13;
        *((_DWORD *)v35 + 9) = *((_DWORD *)v13 + 2);
        *(_QWORD *)(v35 + 28) = v36;
        *(_QWORD *)v35 = 0;
        *((_QWORD *)v35 + 1) = 0;
        *((_QWORD *)v35 + 2) = v28;
        *v27 = (uint64_t *)v35;
        if (*v157)
        {
          v157 = (uint64_t **)*v157;
          v35 = (char *)*v27;
        }
        sub_2231A9A8C(v158, (uint64_t *)v35);
        ++v159;
LABEL_4:
        ++v149;
      }
      v153 = v153 + v14;
      v2 = (uint64_t *)*v2;
      if (!v2)
        goto LABEL_69;
    }
  }
  v149 = 0;
LABEL_69:
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v37 = sub_2241471F8();
    v38 = v37[2];
    if (!v38)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_225;
      }
      v38 = v37[2];
    }
    v39 = *(_QWORD *)(v38 + 64);
    v40 = (std::mutex *)(v39 + 32);
    std::mutex::lock((std::mutex *)(v39 + 32));
    v42 = *(_QWORD *)(v39 + 96);
    v41 = *(_QWORD *)(v39 + 104);
    std::mutex::unlock(v40);
    if (v42 != v41)
    {
      *(_QWORD *)&v173 = "cv3d.recon.";
      *((_QWORD *)&v173 + 1) = 11;
      *(_QWORD *)&v174 = "Monitoring.ChangeTracking";
      *((_QWORD *)&v174 + 1) = 25;
      sub_2231A9820((uint64_t)&v173, (uint64_t)v175, 0, 0, &v152);
      sub_2241471F8();
      v43 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v43 + 24))(v43))
      {
        memset(v150, 0, sizeof(v150));
        v151 = 728325616;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v43 + 24))(v43))
        {
          *(_QWORD *)&v160 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v160 + 1) = 2;
          v44 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v43 + 24))(v43))
          {
            sub_2241498F4((uint64_t)&v173, 0);
            v47.i32[0] = *(_DWORD *)(a1 + 40);
            LOWORD(v171) = -256;
            BYTE2(v171) = 0;
            v48 = v157;
            if (v157 != &v158)
            {
              v45.f32[0] = 1.0 / *(float *)v47.i32;
              v147 = v45;
              *(float *)v47.i32 = (float)(1.0 / *(float *)v47.i32) * 8.0;
              v45.f32[0] = (float)(*(float *)v47.i32 * 0.0) * 0.5;
              v141 = (float32x4_t)vdupq_lane_s32(v47, 0);
              v142 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v45.f32, 0);
              do
              {
                *(float32x2_t *)v46.f32 = vcvt_f32_s32(*(int32x2_t *)((char *)v48 + 28));
                v46.f32[2] = (float)*((int *)v48 + 9);
                v49 = vaddq_f32(v142, vmulq_n_f32(v46, v147.f32[0]));
                *(_DWORD *)&__p[8] = v49.i32[2];
                *(_QWORD *)__p = v49.i64[0];
                v50 = vaddq_f32(v141, v49);
                LODWORD(v162) = v50.i32[2];
                v161 = (uint64_t (**)())v50.i64[0];
                sub_223CF1130((uint64_t)__p, (uint64_t)&v161, 1, (__int8 *)&v171, (uint64_t)&v173, v147, v50, v141);
                v51 = v48[1];
                if (v51)
                {
                  do
                  {
                    v52 = (uint64_t **)v51;
                    v51 = (uint64_t *)*v51;
                  }
                  while (v51);
                }
                else
                {
                  do
                  {
                    v52 = (uint64_t **)v48[2];
                    v133 = *v52 == (uint64_t *)v48;
                    v48 = v52;
                  }
                  while (!v133);
                }
                v48 = v52;
              }
              while (v52 != &v158);
            }
            strcpy(__p, "UpdateVotingBlocks");
            *(_DWORD *)&__p[19] = 0;
            *(_WORD *)&__p[23] = 274;
            sub_22329F414((uint64_t)&v173, (__int128 *)__p, &v160, &v165);
            if (__p[24] && (__p[23] & 0x80000000) != 0)
              operator delete(*(void **)__p);
            sub_22316F8F4((uint64_t *)&v173);
            v53 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 56))(v43);
            v54 = *v53;
            v55 = (std::__shared_weak_count *)v53[1];
            if (v55)
            {
              p_shared_owners = (unint64_t *)&v55->__shared_owners_;
              do
                v57 = __ldxr(p_shared_owners);
              while (__stxr(v57 + 1, p_shared_owners));
            }
            v59 = *((_QWORD *)&v165 + 1);
            v58 = v166;
            v161 = &off_24EC6A3B8;
            v162 = *((_QWORD *)&v165 + 1);
            v163 = v166;
            *((_QWORD *)&v165 + 1) = 0;
            v166 = 0;
            *(_QWORD *)&v173 = v54;
            *((_QWORD *)&v173 + 1) = v55;
            if (v55)
            {
              v60 = (unint64_t *)&v55->__shared_owners_;
              do
                v61 = __ldxr(v60);
              while (__stxr(v61 + 1, v60));
            }
            *(_QWORD *)&v174 = &off_24EC6A3B8;
            *((_QWORD *)&v174 + 1) = v59;
            v175[0] = v58;
            if (v58)
            {
              v62 = (unint64_t *)&v58->__shared_owners_;
              do
                v63 = __ldxr(v62);
              while (__stxr(v63 + 1, v62));
            }
            (*(void (**)(uint64_t *, __int128 *))(*v44 + 16))(v44, &v173);
            v64 = (std::__shared_weak_count *)v175[0];
            if (v175[0])
            {
              v65 = (unint64_t *)(v175[0] + 8);
              do
                v66 = __ldaxr(v65);
              while (__stlxr(v66 - 1, v65));
              if (!v66)
              {
                ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                std::__shared_weak_count::__release_weak(v64);
              }
            }
            v67 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
            if (*((_QWORD *)&v173 + 1))
            {
              v68 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
              do
                v69 = __ldaxr(v68);
              while (__stlxr(v69 - 1, v68));
              if (!v69)
              {
                ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
                std::__shared_weak_count::__release_weak(v67);
              }
            }
            v70 = v163;
            if (v163)
            {
              v71 = (unint64_t *)&v163->__shared_owners_;
              do
                v72 = __ldaxr(v71);
              while (__stlxr(v72 - 1, v71));
              if (!v72)
              {
                ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
                std::__shared_weak_count::__release_weak(v70);
              }
            }
            if (v55)
            {
              v73 = (unint64_t *)&v55->__shared_owners_;
              do
                v74 = __ldaxr(v73);
              while (__stlxr(v74 - 1, v73));
              if (!v74)
              {
                ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
                std::__shared_weak_count::__release_weak(v55);
              }
            }
            v75 = v166;
            if (v166)
            {
              v76 = (unint64_t *)&v166->__shared_owners_;
              do
                v77 = __ldaxr(v76);
              while (__stlxr(v77 - 1, v76));
              if (!v77)
              {
                ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                std::__shared_weak_count::__release_weak(v75);
              }
            }
          }
        }
        kdebug_trace();
      }
      if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v152.__r_.__value_.__l.__data_);
    }
  }
  sub_224569D7C();
  sub_224569A80();
  if (!os_variant_has_internal_diagnostics())
    goto LABEL_186;
  v78 = sub_2241471F8();
  v79 = v78[2];
  if (!v79)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      v79 = v78[2];
      goto LABEL_131;
    }
LABEL_225:
    abort();
  }
LABEL_131:
  v80 = *(_QWORD *)(v79 + 64);
  v81 = (std::mutex *)(v80 + 32);
  std::mutex::lock((std::mutex *)(v80 + 32));
  v83 = *(_QWORD *)(v80 + 96);
  v82 = *(_QWORD *)(v80 + 104);
  std::mutex::unlock(v81);
  if (v83 != v82)
  {
    *(_QWORD *)&v173 = "cv3d.recon.";
    *((_QWORD *)&v173 + 1) = 11;
    *(_QWORD *)&v174 = "Monitoring.ChangeTracking";
    *((_QWORD *)&v174 + 1) = 25;
    sub_2231A9820((uint64_t)&v173, (uint64_t)v175, 0, 0, &v152);
    sub_2241471F8();
    v84 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v84 + 24))(v84))
    {
      memset(v150, 0, sizeof(v150));
      v151 = 728325616;
      kdebug_trace();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v84 + 24))(v84))
      {
        v85 = (char *)operator new(0x20uLL);
        strcpy(v85, "ChangeContributingBlocks");
        *(_QWORD *)&v160 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
        *((_QWORD *)&v160 + 1) = 2;
        v86 = sub_2241471F8();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v84 + 24))(v84))
        {
          sub_2241498F4((uint64_t)&v173, 0);
          v89.i32[0] = *(_DWORD *)(a1 + 40);
          v167 = 0;
          v168 = -1;
          v90 = v154;
          if (v154 != &v155)
          {
            v87.f32[0] = 1.0 / *(float *)v89.i32;
            v148 = v87;
            *(float *)v89.i32 = (float)(1.0 / *(float *)v89.i32) * 8.0;
            v87.f32[0] = (float)(*(float *)v89.i32 * 0.0) * 0.5;
            v143 = (float32x4_t)vdupq_lane_s32(v89, 0);
            v145 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v87.f32, 0);
            do
            {
              *(float32x2_t *)v88.f32 = vcvt_f32_s32(*(int32x2_t *)((char *)v90 + 28));
              v88.f32[2] = (float)*((int *)v90 + 9);
              v91 = vaddq_f32(v145, vmulq_n_f32(v88, v148.f32[0]));
              v172 = v91.i32[2];
              v171 = v91.i64[0];
              v92 = vaddq_f32(v143, v91);
              v170 = v92.i32[2];
              v169 = v92.i64[0];
              sub_223CF1130((uint64_t)&v171, (uint64_t)&v169, 1, (__int8 *)&v167, (uint64_t)&v173, v148, v92, v143);
              v93 = v90[1];
              if (v93)
              {
                do
                {
                  v94 = (uint64_t **)v93;
                  v93 = (uint64_t *)*v93;
                }
                while (v93);
              }
              else
              {
                do
                {
                  v94 = (uint64_t **)v90[2];
                  v133 = *v94 == (uint64_t *)v90;
                  v90 = v94;
                }
                while (!v133);
              }
              v90 = v94;
            }
            while (v94 != &v155);
          }
          *(_QWORD *)__p = v85;
          *(_OWORD *)&__p[8] = xmmword_2245B9420;
          __p[24] = 1;
          sub_22329F414((uint64_t)&v173, (__int128 *)__p, &v160, &v165);
          if (__p[24] && (__p[23] & 0x80000000) != 0)
            operator delete(*(void **)__p);
          sub_22316F8F4((uint64_t *)&v173);
          v95 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v84 + 56))(v84);
          v96 = *v95;
          v97 = (std::__shared_weak_count *)v95[1];
          if (v97)
          {
            v98 = (unint64_t *)&v97->__shared_owners_;
            do
              v99 = __ldxr(v98);
            while (__stxr(v99 + 1, v98));
          }
          v101 = *((_QWORD *)&v165 + 1);
          v100 = v166;
          v161 = &off_24EC6A3B8;
          v162 = *((_QWORD *)&v165 + 1);
          v163 = v166;
          *((_QWORD *)&v165 + 1) = 0;
          v166 = 0;
          *(_QWORD *)&v173 = v96;
          *((_QWORD *)&v173 + 1) = v97;
          if (v97)
          {
            v102 = (unint64_t *)&v97->__shared_owners_;
            do
              v103 = __ldxr(v102);
            while (__stxr(v103 + 1, v102));
          }
          *(_QWORD *)&v174 = &off_24EC6A3B8;
          *((_QWORD *)&v174 + 1) = v101;
          v175[0] = v100;
          if (v100)
          {
            v104 = (unint64_t *)&v100->__shared_owners_;
            do
              v105 = __ldxr(v104);
            while (__stxr(v105 + 1, v104));
          }
          (*(void (**)(uint64_t *, __int128 *))(*v86 + 16))(v86, &v173);
          v106 = (std::__shared_weak_count *)v175[0];
          if (v175[0])
          {
            v107 = (unint64_t *)(v175[0] + 8);
            do
              v108 = __ldaxr(v107);
            while (__stlxr(v108 - 1, v107));
            if (!v108)
            {
              ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
              std::__shared_weak_count::__release_weak(v106);
            }
          }
          v109 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
          if (*((_QWORD *)&v173 + 1))
          {
            v110 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
            do
              v111 = __ldaxr(v110);
            while (__stlxr(v111 - 1, v110));
            if (!v111)
            {
              ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
              std::__shared_weak_count::__release_weak(v109);
            }
          }
          v112 = v163;
          if (v163)
          {
            v113 = (unint64_t *)&v163->__shared_owners_;
            do
              v114 = __ldaxr(v113);
            while (__stlxr(v114 - 1, v113));
            if (!v114)
            {
              ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
              std::__shared_weak_count::__release_weak(v112);
            }
          }
          if (v97)
          {
            v115 = (unint64_t *)&v97->__shared_owners_;
            do
              v116 = __ldaxr(v115);
            while (__stlxr(v116 - 1, v115));
            if (!v116)
            {
              ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
              std::__shared_weak_count::__release_weak(v97);
            }
          }
          v117 = v166;
          if (v166)
          {
            v118 = (unint64_t *)&v166->__shared_owners_;
            do
              v119 = __ldaxr(v118);
            while (__stlxr(v119 - 1, v118));
            if (!v119)
            {
              ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
              std::__shared_weak_count::__release_weak(v117);
            }
          }
        }
        else
        {
          operator delete(v85);
        }
      }
      kdebug_trace();
    }
    if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v152.__r_.__value_.__l.__data_);
  }
LABEL_186:
  *(_QWORD *)&v173 = "cv3d.recon.";
  *((_QWORD *)&v173 + 1) = 11;
  *(_QWORD *)&v174 = "Stats.Monitoring.ChangeTracking";
  *((_QWORD *)&v174 + 1) = 31;
  sub_2231A9820((uint64_t)&v173, (uint64_t)v175, 0, 0, (std::string *)__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v120 = sub_2241471F8();
    v121 = v120[2];
    if (!v121)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v121 = v120[2];
    }
    v122 = *(_QWORD *)(v121 + 64);
    v123 = (std::mutex *)(v122 + 32);
    std::mutex::lock((std::mutex *)(v122 + 32));
    v125 = *(_QWORD *)(v122 + 96);
    v124 = *(_QWORD *)(v122 + 104);
    std::mutex::unlock(v123);
    if (v125 != v124)
    {
      sub_2241471F8();
      v126 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v126 + 24))(v126))
      {
        v173 = 0u;
        v174 = 0u;
        LODWORD(v175[0]) = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v126 + 24))(v126))
        {
          v150[0] = operator new(0x19uLL);
          *(_OWORD *)&v150[1] = xmmword_2245B9430;
          strcpy((char *)v150[0], "AccumulatedChageMeasure");
          *(_QWORD *)&v165 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v165 + 1) = 2;
          v127 = sub_2241471F8();
          sub_2231AF940((uint64_t)v127, v126, &v153, (uint64_t)v150, &v165);
          if (SHIBYTE(v150[2]) < 0)
            operator delete(v150[0]);
        }
        kdebug_trace();
      }
    }
  }
  v173 = 0u;
  v174 = 0u;
  LODWORD(v175[0]) = 728325624;
  kdebug_trace();
  v128 = __p[23];
  if (__p[23] < 0)
    v128 = *(_QWORD *)&__p[8];
  if (v128 >= 0x11)
  {
    v129 = __p;
    if (__p[23] < 0)
      v129 = *(_BYTE **)__p;
    v130 = *(_QWORD *)v129;
    v131 = *((_QWORD *)v129 + 1);
    v132 = v129[16];
    v133 = v130 == 0x6365722E64337663 && v131 == 0x73746174532E6E6FLL;
    if (v133 && v132 == 46)
    {
      v135 = sub_223187510();
      if (__p[23] >= 0)
        v136 = __p;
      else
        v136 = *(_BYTE **)__p;
      if (__p[23] >= 0)
        v137 = __p[23];
      else
        v137 = *(_QWORD *)&__p[8];
      sub_2231897A8((uint64_t *)v135, v136, v137, &v153, (uint64_t)"AccumulatedChageMeasure", 23);
    }
  }
  kdebug_trace();
  if ((__p[23] & 0x80000000) != 0)
    operator delete(*(void **)__p);
  v138 = v153;
  sub_223198030((uint64_t)&v154, v155);
  sub_223198030((uint64_t)&v157, v158);
  if (v138 < 3.0 && v149 == 0)
    return 1;
  else
    return 2;
}

void sub_223901F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,uint64_t a46,uint64_t a47,__int16 a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  std::__shared_weak_count *v57;
  uint64_t v58;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t *p_shared_owners;
  unint64_t v64;

  sub_2241231D8(v58);
  v60 = (std::__shared_weak_count *)a57;
  if (a57)
  {
    v61 = (unint64_t *)(a57 + 8);
    do
      v62 = __ldaxr(v61);
    while (__stlxr(v62 - 1, v61));
    if (!v62)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  sub_2241231D8((uint64_t)&a40);
  if (v57)
  {
    p_shared_owners = (unint64_t *)&v57->__shared_owners_;
    do
      v64 = __ldaxr(p_shared_owners);
    while (__stlxr(v64 - 1, p_shared_owners));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
  sub_2241231D8((uint64_t)&a48);
  sub_2231874DC((uint64_t)&a19);
  if (a30 < 0)
    operator delete(__p);
  sub_223198030((uint64_t)&a32, (_QWORD *)a33);
  sub_223198030((uint64_t)&a35, (_QWORD *)a36);
  _Unwind_Resume(a1);
}

uint64_t sub_223902174(uint64_t a1, uint64_t *a2, int a3)
{
  const float *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;

  *(_DWORD *)(a1 + 4) = a3 + 1;
  v4 = (const float *)(a1 + 4);
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  v5 = a1 + 64;
  *(_DWORD *)(a1 + 8) = a3;
  *(_DWORD *)(a1 + 12) = 1;
  v6 = a1 + 40;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  v7 = (a3 + 2);
  if (a3 == -2)
  {
    v8 = 0;
    v10 = 1;
  }
  else
  {
    sub_2239022D8((void **)(a1 + 16), (a3 + 2), a2);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = (*(_QWORD *)(a1 + 48) - v8) >> 2;
    v10 = v7 >= v9;
    if (v7 > v9)
    {
      sub_2237F84A4(v6, v7 - v9, (const float *)a1);
      goto LABEL_7;
    }
  }
  if (!v10)
    *(_QWORD *)(a1 + 48) = v8 + 4 * v7;
LABEL_7:
  v11 = *(_QWORD *)(a1 + 64);
  v12 = (*(_QWORD *)(a1 + 72) - v11) >> 2;
  if (v7 > v12)
  {
    sub_2237F84A4(v5, v7 - v12, v4);
    return a1;
  }
  if (v7 >= v12)
    return a1;
  *(_QWORD *)(a1 + 72) = v11 + 4 * v7;
  return a1;
}

void sub_223902284(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void **v4;
  void *v6;
  void *v7;
  void *v8;

  v6 = *v4;
  if (*v4)
  {
    v1[9] = v6;
    operator delete(v6);
    v7 = *v3;
    if (!*v3)
    {
LABEL_3:
      v8 = *v2;
      if (!*v2)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else
  {
    v7 = *v3;
    if (!*v3)
      goto LABEL_3;
  }
  v1[6] = v7;
  operator delete(v7);
  v8 = *v2;
  if (!*v2)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  v1[3] = v8;
  operator delete(v8);
  _Unwind_Resume(exception_object);
}

void sub_2239022D8(void **a1, unint64_t a2, uint64_t *a3)
{
  _BYTE *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;

  v7 = (char *)a1[1];
  v6 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 2) >= a2)
  {
    if (a2)
    {
      v13 = &v7[12 * a2];
      v14 = 12 * a2;
      do
      {
        v15 = *a3;
        *((_DWORD *)v7 + 2) = *((_DWORD *)a3 + 2);
        *(_QWORD *)v7 = v15;
        v7 += 12;
        v14 -= 12;
      }
      while (v14);
      v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (_BYTE *)*a1) >> 2);
    v9 = v8 + a2;
    if (v8 + a2 > 0x1555555555555555)
      sub_22316E078();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v6 - (_BYTE *)*a1) >> 2);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0xAAAAAAAAAAAAAAALL)
      v11 = 0x1555555555555555;
    else
      v11 = v9;
    if (v11)
    {
      if (v11 > 0x1555555555555555)
        sub_223174E94();
      v12 = (char *)operator new(12 * v11);
    }
    else
    {
      v12 = 0;
    }
    v16 = &v12[12 * v8];
    v17 = 12 * a2;
    v18 = &v16[12 * a2];
    v19 = v16;
    do
    {
      v20 = *a3;
      *((_DWORD *)v19 + 2) = *((_DWORD *)a3 + 2);
      *(_QWORD *)v19 = v20;
      v19 += 12;
      v17 -= 12;
    }
    while (v17);
    v21 = (char *)*a1;
    if (v7 != *a1)
    {
      do
      {
        v22 = *(_QWORD *)(v7 - 12);
        v7 -= 12;
        v23 = *((_DWORD *)v7 + 2);
        *(_QWORD *)(v16 - 12) = v22;
        v16 -= 12;
        *((_DWORD *)v16 + 2) = v23;
      }
      while (v7 != v21);
      v7 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v18;
    a1[2] = &v12[12 * v11];
    if (v7)
      operator delete(v7);
  }
}

uint64_t *sub_22390246C(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v3;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  uint64_t **v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  float v18;
  float v19;
  uint64_t v20;
  _QWORD *v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t prime;
  unint64_t v26;
  uint8x8_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = (19349669 * v7) ^ (73856093 * *a2) ^ (83492791 * v8);
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v3 = (19349669 * v7) ^ (73856093 * v6) ^ (83492791 * v8);
      if (v9 >= v10)
        v3 = v9 % v10;
    }
    else
    {
      v3 = v9 & (v10 - 1);
    }
    v12 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v12)
    {
      v13 = *v12;
      if (*v12)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            v15 = v13[1];
            if (v15 == v9)
            {
              if (*((_DWORD *)v13 + 4) == v6 && *((_DWORD *)v13 + 5) == v7 && *((_DWORD *)v13 + 6) == v8)
                return v13;
            }
            else if ((v15 & (v10 - 1)) != v3)
            {
              goto LABEL_27;
            }
            v13 = (uint64_t *)*v13;
            if (!v13)
              goto LABEL_27;
          }
        }
        do
        {
          v14 = v13[1];
          if (v14 == v9)
          {
            if (*((_DWORD *)v13 + 4) == v6 && *((_DWORD *)v13 + 5) == v7 && *((_DWORD *)v13 + 6) == v8)
              return v13;
          }
          else
          {
            if (v14 >= v10)
              v14 %= v10;
            if (v14 != v3)
              break;
          }
          v13 = (uint64_t *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_27:
  v17 = operator new(0x20uLL);
  *v17 = 0;
  v17[1] = v9;
  v17[2] = *(_QWORD *)a3;
  *((_DWORD *)v17 + 6) = *(_DWORD *)(a3 + 8);
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (v10 && (float)(v19 * (float)v10) >= v18)
  {
    v20 = *(_QWORD *)a1;
    v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v21)
    {
LABEL_30:
      *v17 = *v21;
LABEL_65:
      *v21 = v17;
      goto LABEL_66;
    }
  }
  else
  {
    v22 = 1;
    if (v10 >= 3)
      v22 = (v10 & (v10 - 1)) != 0;
    v23 = v22 | (2 * v10);
    v24 = vcvtps_u32_f32(v18 / v19);
    if (v23 <= v24)
      prime = v24;
    else
      prime = v23;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v10 = *(_QWORD *)(a1 + 8);
    }
    if (prime > v10)
      goto LABEL_41;
    if (prime < v10)
    {
      v26 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v10 < 3 || (v27 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v27.i16[0] = vaddlv_u8(v27), v27.u32[0] > 1uLL))
      {
        v26 = std::__next_prime(v26);
      }
      else
      {
        v28 = 1 << -(char)__clz(v26 - 1);
        if (v26 >= 2)
          v26 = v28;
      }
      if (prime <= v26)
        prime = v26;
      if (prime < v10)
LABEL_41:
        sub_2231B0668(a1, prime);
    }
    v10 = *(_QWORD *)(a1 + 8);
    v29 = v10 - 1;
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
      {
        v3 = v9 % v10;
        v20 = *(_QWORD *)a1;
        v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v9 % v10));
        if (v21)
          goto LABEL_30;
      }
      else
      {
        v3 = v9;
        v20 = *(_QWORD *)a1;
        v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v9);
        if (v21)
          goto LABEL_30;
      }
    }
    else
    {
      v3 = v29 & v9;
      v20 = *(_QWORD *)a1;
      v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v29 & v9));
      if (v21)
        goto LABEL_30;
    }
  }
  *v17 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v17;
  *(_QWORD *)(v20 + 8 * v3) = a1 + 16;
  if (*v17)
  {
    v30 = *(_QWORD *)(*v17 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v30 >= v10)
        v30 %= v10;
    }
    else
    {
      v30 &= v10 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v30);
    goto LABEL_65;
  }
LABEL_66:
  ++*(_QWORD *)(a1 + 24);
  return v17;
}

void sub_2239027E0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL sub_2239027F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  int v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  size_t v19;
  const char *v20;
  unsigned __int8 v21;
  uint64_t v22;
  unsigned __int8 v23;
  const char *v24;
  size_t v25;
  const char *v26;
  _QWORD *v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  const char *v32;
  uint64_t v33;
  size_t v34;
  uint64_t v35;
  NSObject *v36;
  size_t v37;
  std::__shared_weak_count_vtbl *v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  unint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  void *v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t v73;
  float v74;
  uint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  int32x4_t v87;
  double v88;
  double v89;
  unsigned int v92;
  unint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  __int16 v97;
  unint64_t v98;
  uint64_t v99;
  __int128 v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  uint64_t v132;
  char v133;
  double v134;
  float v135;
  __int16 v137;
  uint64_t v138;
  unint64_t v141;
  uint64_t v142;
  BOOL v143;
  unsigned int v144;
  uint64_t v145;
  BOOL v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  unint64_t v149;
  uint64_t v152;
  uint64_t v156;
  char *category;
  char *categorya;
  int v160;
  uint64_t v161;
  _QWORD v164[3];
  int v165;
  const char *v166;
  int v167;
  const char *v168;
  uint64_t v169;
  std::__shared_weak_count *v170;
  uint64_t v171;
  NSObject *v172;
  _QWORD v173[5];
  size_t v174;
  unint64_t v175;
  char v176;
  uint64_t v177;
  _QWORD v178[2];

  if (*(_DWORD *)(a3 + 32))
    _ZF = *(_DWORD *)(a3 + 36) == 0;
  else
    _ZF = 1;
  v14 = _ZF;
  if (_ZF)
  {
    sub_223903788(&v171);
    if (**(int **)(v171 + 56) > 3
      || ((v160 = *(unsigned __int8 *)(v171 + 72),
           v15 = sub_22322F254(v171, "OSLogSurrogateAppender", 1, 0),
           v16 = v15,
           !v160)
        ? (v17 = v15 == 0)
        : (v17 = 0),
          v17))
    {
LABEL_102:
      v22 = 5;
      goto LABEL_103;
    }
    v164[0] = &v171;
    v164[1] = std::chrono::steady_clock::now().__d_.__rep_;
    v164[2] = std::chrono::system_clock::now().__d_.__rep_;
    v165 = 3;
    v166 = "unknown file";
    v167 = 95;
    v169 = 0;
    v170 = 0;
    v168 = "unknown function";
    v18 = v171;
    category = (char *)(v171 + 16);
    if (*(char *)(v171 + 39) < 0)
    {
      v20 = *(const char **)(v171 + 16);
      v19 = *(_QWORD *)(v171 + 24);
      v23 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v23 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      v19 = *(unsigned __int8 *)(v171 + 39);
      v20 = (const char *)(v171 + 16);
      v21 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v21 & 1) != 0)
        goto LABEL_18;
    }
    if (__cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)&v172);
      sub_223199C58("com.apple.cv3d", (unint64_t)&v172, byte_255788F40);
      if (LOBYTE(v173[2]) && SHIBYTE(v173[1]) < 0)
        operator delete(v172);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
LABEL_18:
    if (byte_255788F40[23] >= 0)
      v24 = byte_255788F40;
    else
      v24 = *(const char **)byte_255788F40;
    if (byte_255788F40[23] >= 0)
      v25 = byte_255788F40[23];
    else
      v25 = *(_QWORD *)&byte_255788F40[8];
    v26 = v24;
    v172 = os_log_create(v24, v20);
    v27 = v173;
    if (v25 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v25 >= 0x17)
    {
      v28 = v19;
      v29 = (v25 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v25 | 7) != 0x17)
        v29 = v25 | 7;
      v30 = v29 + 1;
      v27 = operator new(v29 + 1);
      v173[1] = v25;
      v173[2] = v30 | 0x8000000000000000;
      v173[0] = v27;
      v19 = v28;
    }
    else
    {
      HIBYTE(v173[2]) = v25;
      if (!v25)
      {
LABEL_32:
        *((_BYTE *)v27 + v25) = 0;
        LOBYTE(v173[3]) = 1;
        v31 = &v173[4];
        if (v19 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v19 >= 0x17)
        {
          v32 = v20;
          v33 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v19 | 7) != 0x17)
            v33 = v19 | 7;
          v34 = v19;
          v35 = v33 + 1;
          v31 = operator new(v33 + 1);
          v174 = v34;
          v175 = v35 | 0x8000000000000000;
          v173[4] = v31;
          v19 = v34;
          v20 = v32;
        }
        else
        {
          HIBYTE(v175) = v19;
          if (!v19)
            goto LABEL_40;
        }
        memmove(v31, v20, v19);
LABEL_40:
        *((_BYTE *)v31 + v19) = 0;
        v176 = 1;
        v36 = v172;
        if (SHIBYTE(v175) < 0)
          operator delete((void *)v173[4]);
        if (LOBYTE(v173[3]) && SHIBYTE(v173[2]) < 0)
          operator delete((void *)v173[0]);
        if (v172)
          os_release(v172);
        if (v16 && *(_QWORD *)(v16 + 24))
        {
          v37 = _os_log_pack_size();
          v38 = (std::__shared_weak_count_vtbl *)operator new(v37, (std::align_val_t)8uLL);
          v39 = (std::__shared_weak_count *)operator new();
          v40 = v39;
          v39->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v39->__shared_owners_;
          v39->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v39->__shared_weak_owners_ = 0;
          v39[1].__vftable = v38;
          v172 = v38;
          v173[0] = v38;
          v173[1] = v39;
          do
            v42 = __ldxr(p_shared_owners);
          while (__stxr(v42 + 1, p_shared_owners));
          memset(&v173[2], 0, 24);
          do
            v43 = __ldaxr(p_shared_owners);
          while (__stlxr(v43 - 1, p_shared_owners));
          if (!v43)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v40);
          }
          v44 = v172;
          *(_WORD *)_os_log_pack_fill() = 0;
          v45 = operator new();
          v46 = *(unsigned __int8 *)(v18 + 39);
          if ((v46 & 0x80u) == 0)
            v47 = category;
          else
            v47 = *(char **)(v18 + 16);
          if ((v46 & 0x80u) != 0)
            v46 = *(_QWORD *)(v18 + 24);
          *(_QWORD *)v45 = v44;
          *(_OWORD *)(v45 + 8) = *(_OWORD *)v173;
          *(_OWORD *)v173 = 0uLL;
          *(_OWORD *)(v45 + 24) = *(_OWORD *)&v173[2];
          *(_OWORD *)&v173[2] = 0uLL;
          *(_QWORD *)(v45 + 40) = v47;
          *(_QWORD *)(v45 + 48) = v46;
          *(_BYTE *)(v45 + 56) = 1;
          v177 = 0;
          v178[0] = v45;
          (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(v16 + 24) + 40))(*(_QWORD *)(v16 + 24), v178);
          v48 = v178[0];
          v178[0] = 0;
          if (v48)
          {
            v49 = *(std::__shared_weak_count **)(v48 + 32);
            if (v49)
            {
              v50 = (unint64_t *)&v49->__shared_owners_;
              do
                v51 = __ldaxr(v50);
              while (__stlxr(v51 - 1, v50));
              if (!v51)
              {
                ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                std::__shared_weak_count::__release_weak(v49);
              }
            }
            v52 = *(std::__shared_weak_count **)(v48 + 16);
            if (v52)
            {
              v53 = (unint64_t *)&v52->__shared_owners_;
              do
                v54 = __ldaxr(v53);
              while (__stlxr(v54 - 1, v53));
              if (!v54)
              {
                ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
                std::__shared_weak_count::__release_weak(v52);
              }
            }
            MEMORY[0x227684CE8](v48, 0x10F0C40B62ED6C6);
            v55 = v177;
            v177 = 0;
            if (v55)
            {
              v56 = *(std::__shared_weak_count **)(v55 + 32);
              if (v56)
              {
                v57 = (unint64_t *)&v56->__shared_owners_;
                do
                  v58 = __ldaxr(v57);
                while (__stlxr(v58 - 1, v57));
                if (!v58)
                {
                  ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                  std::__shared_weak_count::__release_weak(v56);
                }
              }
              v59 = *(std::__shared_weak_count **)(v55 + 16);
              if (v59)
              {
                v60 = (unint64_t *)&v59->__shared_owners_;
                do
                  v61 = __ldaxr(v60);
                while (__stlxr(v61 - 1, v60));
                if (!v61)
                {
                  ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                  std::__shared_weak_count::__release_weak(v59);
                }
              }
              MEMORY[0x227684CE8](v55, 0x10F0C40B62ED6C6);
            }
          }
          v62 = (std::__shared_weak_count *)v173[3];
          if (v173[3])
          {
            v63 = (unint64_t *)(v173[3] + 8);
            do
              v64 = __ldaxr(v63);
            while (__stlxr(v64 - 1, v63));
            if (!v64)
            {
              ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
              std::__shared_weak_count::__release_weak(v62);
            }
          }
          v65 = (std::__shared_weak_count *)v173[1];
          if (v173[1])
          {
            v66 = (unint64_t *)(v173[1] + 8);
            do
              v67 = __ldaxr(v66);
            while (__stlxr(v67 - 1, v66));
            if (!v67)
            {
              ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
              std::__shared_weak_count::__release_weak(v65);
            }
          }
        }
        else
        {
          os_log_type_enabled(v36, OS_LOG_TYPE_INFO);
          LOWORD(v172) = 0;
          v68 = (void *)_os_log_send_and_compose_impl();
          if (v68)
            free(v68);
        }
        if (v160)
        {
          sub_22322C138((uint64_t)v164, "DepthNovelty computation configured to use active depth mask, but, distance transform image not provided. Will consider all depth pixels as active. Note: expected on iOS.");
          sub_223182C08((uint64_t)v164);
        }
        sub_223182C08((uint64_t)v164);
        v69 = v170;
        if (v170)
        {
          v70 = (unint64_t *)&v170->__shared_owners_;
          do
            v71 = __ldaxr(v70);
          while (__stlxr(v71 - 1, v70));
          if (!v71)
          {
            ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
            std::__shared_weak_count::__release_weak(v69);
          }
        }
        goto LABEL_102;
      }
    }
    memmove(v27, v26, v25);
    goto LABEL_32;
  }
  v22 = 0;
LABEL_103:
  if (2 * v22 >= (unint64_t)*(unsigned int *)(a1 + 36)
    || 2 * v22 >= (unint64_t)*(unsigned int *)(a1 + 32))
  {
    v73 = 0;
  }
  else
  {
    v73 = v22;
  }
  if ((float)(a6[2] + 0.0) >= 0.75)
    v74 = a6[2] + 0.0;
  else
    v74 = 0.75;
  LODWORD(v172) = 0;
  sub_22390B1A0(a8, (int *)&v172);
  LODWORD(v172) = 0;
  sub_22390B1A0(a10, (int *)&v172);
  if (!a12)
    goto LABEL_140;
  v75 = *(_QWORD *)(a11 + 8);
  if (!v75)
    goto LABEL_132;
  v76 = *(std::__shared_weak_count **)(a11 + 16);
  if (!v76)
    goto LABEL_126;
  v77 = (unint64_t *)&v76->__shared_owners_;
  do
    v78 = __ldxr(v77);
  while (__stxr(v78 + 1, v77));
  do
    v79 = __ldaxr(v77);
  while (__stlxr(v79 - 1, v77));
  if (v79)
  {
    v75 = *(_QWORD *)(a11 + 8);
    v80 = *(std::__shared_weak_count **)(a11 + 16);
    if (!v80)
      goto LABEL_126;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
    std::__shared_weak_count::__release_weak(v76);
    v75 = *(_QWORD *)(a11 + 8);
    v80 = *(std::__shared_weak_count **)(a11 + 16);
    if (!v80)
      goto LABEL_126;
  }
  v81 = (unint64_t *)&v80->__shared_owners_;
  do
    v82 = __ldxr(v81);
  while (__stxr(v82 + 1, v81));
  do
    v83 = __ldaxr(v81);
  while (__stlxr(v83 - 1, v81));
  if (v83)
  {
LABEL_126:
    if (*(_BYTE *)(a11 + 49))
      goto LABEL_127;
LABEL_132:
    v178[0] = 0;
    if (*(_DWORD *)(a11 + 40) != 1)
      goto LABEL_128;
LABEL_133:
    v84 = *(unsigned int *)(a11 + 32);
    if (*(_DWORD *)(a11 + 44) == (_DWORD)v84)
    {
      sub_2236B4E44(a11, &flt_224654718);
    }
    else
    {
      LOBYTE(v177) = 0;
      v164[0] = v84;
      v172 = &v177;
      v173[0] = v164;
      v173[1] = &flt_224654718;
      if ((_DWORD)v84 && *(_DWORD *)(a11 + 36))
        sub_2236B4FD4((uint64_t)&v172, a11);
    }
    goto LABEL_138;
  }
  ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
  std::__shared_weak_count::__release_weak(v80);
  if (!*(_BYTE *)(a11 + 49))
    goto LABEL_132;
LABEL_127:
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v75 + 96))(v178, v75, 1);
  if (*(_DWORD *)(a11 + 40) == 1)
    goto LABEL_133;
LABEL_128:
  v172 = &flt_224654718;
  if (*(_DWORD *)(a11 + 32) && *(_DWORD *)(a11 + 36))
    sub_2236B50B8((_DWORD **)&v172, a11);
LABEL_138:
  v85 = v178[0];
  v178[0] = 0;
  if (v85)
    (*(void (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
LABEL_140:
  v156 = a8;
  v86 = sub_22400271C(a1, a5, 2, 1.0);
  categorya = (char *)(*(unsigned int *)(a1 + 36) - v73);
  if ((char *)v73 != categorya)
  {
    v87.i64[0] = 1.0;
    LODWORD(v88) = 10.0;
    v105 = v73;
    while (1)
    {
      v106 = *(unsigned int *)(a1 + 32);
      if (v106 != 2 * v73)
        break;
LABEL_163:
      if ((char *)++v105 == categorya)
        goto LABEL_141;
    }
    v107 = *(_DWORD *)(a1 + 40);
    v108 = *(_DWORD *)(a2 + 40);
    v109 = *(_DWORD *)(a4 + 40);
    v110 = *(_DWORD *)(a5 + 40);
    v111 = *(_DWORD *)(a10 + 40);
    v112 = *(_DWORD *)(v156 + 40);
    v113 = *(_DWORD *)(a3 + 40);
    v114 = *(_QWORD *)(a1 + 24) + 2 * (*(_DWORD *)(a1 + 44) * v105);
    v115 = *(_QWORD *)(a2 + 24) + 2 * (*(_DWORD *)(a2 + 44) * v105);
    v116 = v73 * v113;
    v117 = *(_QWORD *)(a4 + 24) + 4 * (*(_DWORD *)(a4 + 44) * v105);
    v118 = *(_QWORD *)(a5 + 24) + (*(_DWORD *)(a5 + 44) * v105);
    v161 = *(_QWORD *)(a10 + 24) + (*(_DWORD *)(a10 + 44) * v105);
    v152 = *(_QWORD *)(v156 + 24) + (*(_DWORD *)(v156 + 44) * v105);
    v119 = v73 * v112;
    v120 = v73 * v111;
    v121 = *(_QWORD *)(a3 + 24) + 4 * (*(_DWORD *)(a3 + 44) * v105);
    v122 = -2 * v73 + v106;
    v123 = v73 * v110;
    v124 = v73 * v107;
    v125 = v73 * v108;
    v126 = v73;
    v127 = v73 * v109;
    while (1)
    {
      if ((v14 & 1) == 0)
      {
        LODWORD(v89) = *(_DWORD *)(v121 + 4 * v116);
        if (*(float *)&v89 > 10.0)
          goto LABEL_167;
      }
      LODWORD(v89) = *(_DWORD *)(v117 + 4 * v127);
      LODWORD(_D4) = -947920896;
      if (*(float *)&v89 <= -65504.0)
        goto LABEL_167;
      LOWORD(_D4) = *(_WORD *)(v115 + 2 * v125);
      __asm { FCVT            S6, H4 }
      if (_S6 == 0.0)
        goto LABEL_167;
      _Q5.n128_u16[0] = *(_WORD *)(v114 + 2 * v124);
      __asm { FCVT            S4, H5 }
      if (*a6 >= *(float *)&_D4)
        goto LABEL_167;
      if (*(float *)&_D4 > -65504.0 && v74 > _S6 && a6[1] > *(float *)&_D4)
        goto LABEL_167;
      v132 = *(unsigned __int8 *)(v118 + v123);
      if (v132 > 0x26 || ((1 << v132) & 0x4600000400) == 0)
      {
        if (*(float *)&_D4 >= 1.0)
          v133 = 1;
        else
          v133 = v86 ^ 1;
        if ((v133 & 1) != 0)
        {
LABEL_189:
          v134 = 1.0;
          if (*(float *)&_D4 >= 1.0)
          {
            __asm { FCVT            D5, H5 }
            v134 = 1.0 / _Q5.n128_f64[0];
          }
          v135 = v134;
          _Q5.n128_f32[0] = vabds_f32(*(float *)&_D4, *(float *)&v89) * v135;
          if ((v132 - 1) > 2)
          {
            LODWORD(v89) = 1036831949;
            if (_Q5.n128_f32[0] > 0.1)
              goto LABEL_198;
          }
          else
          {
            if (*(float *)&v89 > *(float *)&_D4 && _Q5.n128_f32[0] > 0.1)
            {
              _Q5.n128_f32[0] = _Q5.n128_f32[0] * 0.5;
              *(_BYTE *)(v161 + v120) = 1;
            }
            LODWORD(v89) = 1036831949;
            if (_Q5.n128_f32[0] > 0.1)
LABEL_198:
              *(_BYTE *)(v152 + v119) = 1;
          }
          if (a12)
            *(_DWORD *)(*(_QWORD *)(a11 + 24)
                      + 4 * (*(_DWORD *)(a11 + 40) * v126 + *(_DWORD *)(a11 + 44) * v105)) = _Q5.n128_u32[0];
          goto LABEL_167;
        }
        if (byte_25578E69A)
        {
          if (v132 <= 0x29)
            goto LABEL_188;
        }
        else
        {
          xmmword_25578E670 = xmmword_22465471C;
          unk_25578E680 = unk_22465472C;
          unk_25578E68A = unk_224654736;
          byte_25578E69A = 1;
          if (v132 <= 0x29)
          {
LABEL_188:
            if (*((_BYTE *)&xmmword_25578E670 + v132))
              goto LABEL_189;
          }
        }
      }
      *(_BYTE *)(v161 + v120) = 1;
LABEL_167:
      v116 += v113;
      ++v126;
      v119 += v112;
      v120 += v111;
      v123 += v110;
      v124 += v107;
      v125 += v108;
      v127 += v109;
      if (!--v122)
        goto LABEL_163;
    }
  }
LABEL_141:
  if (v14)
    v92 = 29;
  else
    v92 = 7;
  v172 = &off_24EC21420;
  v93 = *(_QWORD *)(v156 + 8);
  v94 = *(std::__shared_weak_count **)(v156 + 16);
  if (!v94)
  {
    v137 = *(_WORD *)(v156 + 48);
    v138 = *(_QWORD *)(v156 + 24);
    *(_OWORD *)v173 = v93;
    v173[2] = v138;
    v100 = *(_OWORD *)(v156 + 32);
    *(_OWORD *)&v173[3] = v100;
    LOWORD(v174) = v137;
    if (v100 >= v92 && HIDWORD(v173[3]) >= v92)
      goto LABEL_214;
LABEL_222:
    v146 = 0;
    v147 = (std::__shared_weak_count *)v173[1];
    if (!v173[1])
      return v146;
    goto LABEL_228;
  }
  v95 = (unint64_t *)&v94->__shared_owners_;
  do
    v96 = __ldxr(v95);
  while (__stxr(v96 + 1, v95));
  v97 = *(_WORD *)(v156 + 48);
  do
    v98 = __ldxr(v95);
  while (__stxr(v98 + 1, v95));
  v99 = *(_QWORD *)(v156 + 24);
  v100 = *(_OWORD *)(v156 + 32);
  *(_OWORD *)&v173[3] = v100;
  do
    v101 = __ldxr(v95);
  while (__stxr(v101 + 1, v95));
  v173[0] = v93;
  v173[1] = v94;
  v173[2] = v99;
  LOWORD(v174) = v97;
  do
    v102 = __ldaxr(v95);
  while (__stlxr(v102 - 1, v95));
  if (!v102)
  {
    ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
    std::__shared_weak_count::__release_weak(v94);
  }
  do
    v103 = __ldaxr(v95);
  while (__stlxr(v103 - 1, v95));
  if (!v103)
  {
    ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
    std::__shared_weak_count::__release_weak(v94);
    if (LODWORD(v173[3]) >= v92 && HIDWORD(v173[3]) >= v92)
      goto LABEL_214;
    goto LABEL_222;
  }
  if (LODWORD(v173[3]) < v92 || HIDWORD(v173[3]) < v92)
    goto LABEL_222;
LABEL_214:
  sub_2239090F4(a7, (uint64_t)&v172, a9, v92, *(float *)&v100, v87, v88, v89, _D4, _Q5);
  v141 = *(unsigned int *)(a9 + 36);
  if ((_DWORD)v141)
  {
    if (!*(_DWORD *)(a9 + 32))
      goto LABEL_222;
    v142 = 0;
    v143 = 1;
LABEL_217:
    v144 = 0;
    v145 = *(unsigned int *)(a9 + 32);
    while (*(float *)(*(_QWORD *)(a9 + 24) + 4 * (*(_DWORD *)(a9 + 44) * v142) + 4 * v144) <= 0.8)
    {
      v144 += *(_DWORD *)(a9 + 40);
      if (!--v145)
      {
        v146 = 0;
        v143 = ++v142 < v141;
        if (v142 != v141)
          goto LABEL_217;
        goto LABEL_227;
      }
    }
    v146 = v143;
    v147 = (std::__shared_weak_count *)v173[1];
    if (v173[1])
      goto LABEL_228;
  }
  else
  {
    v146 = 0;
LABEL_227:
    v147 = (std::__shared_weak_count *)v173[1];
    if (v173[1])
    {
LABEL_228:
      v148 = (unint64_t *)&v147->__shared_owners_;
      do
        v149 = __ldaxr(v148);
      while (__stlxr(v149 - 1, v148));
      if (!v149)
      {
        ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
        std::__shared_weak_count::__release_weak(v147);
      }
    }
  }
  return v146;
}

void sub_223903624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  if (*(_BYTE *)(v27 - 168))
  {
    if (*(char *)(v27 - 169) < 0)
      operator delete(*(void **)(v27 - 192));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_223903664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  sub_22319A054((uint64_t *)(v27 - 112));
  sub_22319A054((uint64_t *)(v27 - 120));
  sub_223199DE8(v27 - 192);
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_223903690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  sub_223199DE8(v27 - 192);
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_2239036AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  MEMORY[0x227684CE8](v27, 0x10D0C40B950D02ALL);
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_2239036D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_2239036F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_223903708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  void *v29;

  if (*(_BYTE *)(v27 - 160) && *(char *)(v27 - 161) < 0)
    operator delete(*(void **)(v27 - 184));
  v29 = *(void **)(v27 - 192);
  if (v29)
    os_release(v29);
  sub_223182DAC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_223903750(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 - 112);
  *(_QWORD *)(v1 - 112) = 0;
  if (v3)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_223903788(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CCA28);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCA28))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon.monitor");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CCA20);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CCA28);
  }
  *a1 = qword_2540CCA20;
}

void sub_223903824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CCA28);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CCA28);
  _Unwind_Resume(a1);
}

void sub_22390387C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  std::mutex *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void **v16;
  void *v17;
  void **v18;
  void *v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  std::mutex *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void **v32;
  void *v33;
  void *v34;
  int v35;
  uint64_t v38;
  void *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  std::mutex *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void **v48;
  void *v49;
  void *v50;
  int v51;
  uint64_t v54;
  void *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  std::mutex *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void **v63;
  void *v64;
  void **v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  void **v69;
  void *v70;
  void *v71;
  int v72;
  uint64_t v75;
  void *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  std::mutex *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void **v84;
  void *v85;
  void **v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  void **v90;
  void *v91;
  void *v92;
  int v93;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  std::mutex *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  __int128 v105;
  std::string *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  int v124;
  int v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  _BYTE *v136;
  std::__shared_weak_count *v137;
  int v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  int v144;
  _BYTE *v145;
  uint64_t (**v146)();
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t *v155;
  unint64_t v156;
  unint64_t *v157;
  unint64_t v158;
  std::__shared_weak_count *v159;
  unint64_t *v160;
  unint64_t v161;
  unint64_t *v162;
  unint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  std::mutex *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  __int128 v173;
  std::string *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  std::__shared_weak_count *v179;
  unint64_t *v180;
  unint64_t v181;
  unint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  unint64_t v191;
  int v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _BYTE *v198;
  std::__shared_weak_count *v199;
  uint64_t v200;
  unint64_t *v201;
  unint64_t v202;
  unint64_t v203;
  _BYTE *v204;
  int v205;
  int v206;
  int i;
  int v208;
  _BYTE *v209;
  _BYTE *v210;
  uint64_t (**v211)();
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  std::__shared_weak_count *v215;
  unint64_t *v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t *v220;
  unint64_t v221;
  unint64_t *v222;
  unint64_t v223;
  std::__shared_weak_count *v224;
  unint64_t *v225;
  unint64_t v226;
  unint64_t *v227;
  unint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  std::mutex *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  uint64_t v237;
  __int128 v238;
  std::string *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  std::__shared_weak_count *v244;
  unint64_t *v245;
  unint64_t v246;
  unint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  unint64_t v256;
  int v257;
  int v258;
  uint64_t v259;
  float *v260;
  uint64_t v261;
  uint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  float *v267;
  int v268;
  int v269;
  int v270;
  float *v271;
  float *v272;
  int v273;
  float v274;
  float v275;
  float v276;
  float v277;
  float v278;
  uint64_t (**v279)();
  uint64_t v280;
  uint64_t *v281;
  uint64_t v282;
  std::__shared_weak_count *v283;
  unint64_t *v284;
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t *v288;
  unint64_t v289;
  unint64_t *v290;
  unint64_t v291;
  std::__shared_weak_count *v292;
  unint64_t *v293;
  unint64_t v294;
  unint64_t *v295;
  unint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  std::mutex *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void *v304;
  uint64_t v305;
  __int128 v306;
  std::string *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t *v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  unint64_t *p_shared_owners;
  unint64_t v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  std::__shared_weak_count *v321;
  unint64_t *v322;
  unint64_t v323;
  unint64_t v324;
  int v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  _BYTE *v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  unint64_t *v334;
  unint64_t v335;
  unint64_t v336;
  _BYTE *v337;
  int v338;
  int v339;
  int v340;
  int v341;
  _BYTE *v342;
  _BYTE *v343;
  uint64_t (**v344)();
  uint64_t v345;
  uint64_t *v346;
  uint64_t v347;
  std::__shared_weak_count *v348;
  unint64_t *v349;
  unint64_t v350;
  uint64_t v351;
  uint64_t v352;
  unint64_t *v353;
  unint64_t v354;
  unint64_t *v355;
  unint64_t v356;
  std::__shared_weak_count *v357;
  unint64_t *v358;
  unint64_t v359;
  unint64_t *v360;
  unint64_t v361;
  std::__shared_weak_count *v362;
  std::__shared_weak_count *v363;
  std::__shared_weak_count *v364;
  uint64_t v365;
  int v366;
  uint64_t v367;
  uint64_t *v368;
  uint64_t v369;
  uint64_t *v370;
  uint64_t *v371;
  uint64_t v372;
  void *__p[2];
  __int128 v374;
  int v375;
  std::string v376;
  void *v377;
  __int128 v378;
  __int128 v379;
  uint64_t (**v380)();
  uint64_t v381;
  uint64_t v382;
  _BYTE v383[25];
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _QWORD v387[2];
  __int128 v388;
  __int128 v389;
  _QWORD v390[5];
  unsigned int v391;
  unsigned int v392;
  char v393;
  char v394;
  uint64_t v395;

  v395 = *MEMORY[0x24BDAC8D0];
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v8 = sub_2241471F8();
    v9 = v8[2];
    if (!v9)
    {
      v10 = v8;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = v10[2];
    }
    v11 = *(_QWORD *)(v9 + 64);
    v12 = (std::mutex *)(v11 + 32);
    std::mutex::lock((std::mutex *)(v11 + 32));
    v14 = *(_QWORD *)(v11 + 96);
    v13 = *(_QWORD *)(v11 + 104);
    std::mutex::unlock(v12);
    if (v14 != v13)
    {
      *(_QWORD *)&v388 = "cv3d.recon.";
      *((_QWORD *)&v388 + 1) = 11;
      *(_QWORD *)&v389 = "Monitoring";
      *((_QWORD *)&v389 + 1) = 10;
      sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, (std::string *)__p);
      v15 = (void *)BYTE7(v374);
      v16 = (void **)__p[0];
      v17 = __p[1];
      sub_2241471F8();
      if ((char)v15 >= 0)
        v18 = __p;
      else
        v18 = v16;
      if ((char)v15 >= 0)
        v19 = v15;
      else
        v19 = v17;
      v20 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v18, v19);
      v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 24))(v20);
      v22 = v21;
      if (SBYTE7(v374) < 0)
      {
        operator delete(__p[0]);
        if ((v22 & 1) == 0)
          return;
      }
      else if ((v21 & 1) == 0)
      {
        return;
      }
      v23 = operator new(0x20uLL);
      v377 = v23;
      v378 = xmmword_2245B8E30;
      strcpy((char *)v23, "Monitoring.Novelty.InputDepth");
      *(_QWORD *)&v388 = "cv3d.recon.";
      *((_QWORD *)&v388 + 1) = 11;
      *(_QWORD *)&v389 = v23;
      *((_QWORD *)&v389 + 1) = 29;
      sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v24 = sub_2241471F8();
        v25 = v24[2];
        if (!v25)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v25 = v24[2];
        }
        v26 = *(_QWORD *)(v25 + 64);
        v27 = (std::mutex *)(v26 + 32);
        std::mutex::lock((std::mutex *)(v26 + 32));
        v29 = *(_QWORD *)(v26 + 96);
        v28 = *(_QWORD *)(v26 + 104);
        std::mutex::unlock(v27);
        if (v29 != v28)
        {
          sub_2241471F8();
          v30 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v30 + 24))(v30))
          {
            v388 = 0u;
            v389 = 0u;
            LODWORD(v390[0]) = 728325608;
            kdebug_trace();
            sub_223906328(v30, a2);
            kdebug_trace();
          }
        }
      }
      v388 = 0u;
      v389 = 0u;
      LODWORD(v390[0]) = 728325624;
      kdebug_trace();
      v31 = BYTE7(v374);
      if (SBYTE7(v374) < 0)
        v31 = (unint64_t)__p[1];
      if (v31 >= 0x11)
      {
        v32 = __p;
        if (SBYTE7(v374) < 0)
          v32 = (void **)__p[0];
        v33 = *v32;
        v34 = v32[1];
        v35 = *((unsigned __int8 *)v32 + 16);
        if (v33 == (void *)0x6365722E64337663 && v34 == (void *)0x73746174532E6E6FLL && v35 == 46)
          sub_223187510();
      }
      kdebug_trace();
      if (SBYTE7(v374) < 0)
        operator delete(__p[0]);
      *(_QWORD *)&v388 = "cv3d.recon.";
      *((_QWORD *)&v388 + 1) = 11;
      v38 = HIBYTE(v378);
      v39 = &v377;
      if (v378 < 0)
      {
        v39 = v377;
        v38 = v378;
      }
      *(_QWORD *)&v389 = v39;
      *((_QWORD *)&v389 + 1) = v38;
      sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v40 = sub_2241471F8();
        v41 = v40[2];
        if (!v41)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v41 = v40[2];
        }
        v42 = *(_QWORD *)(v41 + 64);
        v43 = (std::mutex *)(v42 + 32);
        std::mutex::lock((std::mutex *)(v42 + 32));
        v45 = *(_QWORD *)(v42 + 96);
        v44 = *(_QWORD *)(v42 + 104);
        std::mutex::unlock(v43);
        if (v45 != v44)
        {
          sub_2241471F8();
          v46 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v46 + 24))(v46))
          {
            v388 = 0u;
            v389 = 0u;
            LODWORD(v390[0]) = 728325608;
            kdebug_trace();
            sub_223906400(v46, a3);
            kdebug_trace();
          }
        }
      }
      v388 = 0u;
      v389 = 0u;
      LODWORD(v390[0]) = 728325624;
      kdebug_trace();
      v47 = BYTE7(v374);
      if (SBYTE7(v374) < 0)
        v47 = (unint64_t)__p[1];
      if (v47 >= 0x11)
      {
        v48 = __p;
        if (SBYTE7(v374) < 0)
          v48 = (void **)__p[0];
        v49 = *v48;
        v50 = v48[1];
        v51 = *((unsigned __int8 *)v48 + 16);
        if (v49 == (void *)0x6365722E64337663 && v50 == (void *)0x73746174532E6E6FLL && v51 == 46)
          sub_223187510();
      }
      kdebug_trace();
      if (SBYTE7(v374) < 0)
        operator delete(__p[0]);
      *(_QWORD *)&v388 = "cv3d.recon.";
      *((_QWORD *)&v388 + 1) = 11;
      v54 = HIBYTE(v378);
      v55 = &v377;
      if (v378 < 0)
      {
        v55 = v377;
        v54 = v378;
      }
      *(_QWORD *)&v389 = v55;
      *((_QWORD *)&v389 + 1) = v54;
      sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v56 = sub_2241471F8();
        v57 = v56[2];
        if (!v57)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v57 = v56[2];
        }
        v58 = *(_QWORD *)(v57 + 64);
        v59 = (std::mutex *)(v58 + 32);
        std::mutex::lock((std::mutex *)(v58 + 32));
        v61 = *(_QWORD *)(v58 + 96);
        v60 = *(_QWORD *)(v58 + 104);
        std::mutex::unlock(v59);
        if (v61 != v60)
        {
          v62 = (void *)BYTE7(v374);
          v63 = (void **)__p[0];
          v64 = __p[1];
          sub_2241471F8();
          v65 = (char)v62 >= 0 ? __p : v63;
          v66 = (char)v62 >= 0 ? v62 : v64;
          v67 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v65, v66);
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v67 + 24))(v67))
          {
            v388 = 0u;
            v389 = 0u;
            LODWORD(v390[0]) = 728325608;
            kdebug_trace();
            sub_2239064D8(v67, a4);
            kdebug_trace();
          }
        }
      }
      v388 = 0u;
      v389 = 0u;
      LODWORD(v390[0]) = 728325624;
      kdebug_trace();
      v68 = BYTE7(v374);
      if (SBYTE7(v374) < 0)
        v68 = (unint64_t)__p[1];
      if (v68 >= 0x11)
      {
        v69 = __p;
        if (SBYTE7(v374) < 0)
          v69 = (void **)__p[0];
        v70 = *v69;
        v71 = v69[1];
        v72 = *((unsigned __int8 *)v69 + 16);
        if (v70 == (void *)0x6365722E64337663 && v71 == (void *)0x73746174532E6E6FLL && v72 == 46)
          sub_223187510();
      }
      kdebug_trace();
      if (SBYTE7(v374) < 0)
        operator delete(__p[0]);
      *(_QWORD *)&v388 = "cv3d.recon.";
      *((_QWORD *)&v388 + 1) = 11;
      v75 = HIBYTE(v378);
      v76 = &v377;
      if (v378 < 0)
      {
        v76 = v377;
        v75 = v378;
      }
      *(_QWORD *)&v389 = v76;
      *((_QWORD *)&v389 + 1) = v75;
      sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, (std::string *)__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v77 = sub_2241471F8();
        v78 = v77[2];
        if (!v78)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v78 = v77[2];
        }
        v79 = *(_QWORD *)(v78 + 64);
        v80 = (std::mutex *)(v79 + 32);
        std::mutex::lock((std::mutex *)(v79 + 32));
        v82 = *(_QWORD *)(v79 + 96);
        v81 = *(_QWORD *)(v79 + 104);
        std::mutex::unlock(v80);
        if (v82 != v81)
        {
          v83 = (void *)BYTE7(v374);
          v84 = (void **)__p[0];
          v85 = __p[1];
          sub_2241471F8();
          v86 = (char)v83 >= 0 ? __p : v84;
          v87 = (char)v83 >= 0 ? v83 : v85;
          v88 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v86, v87);
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v88 + 24))(v88))
          {
            v388 = 0u;
            v389 = 0u;
            LODWORD(v390[0]) = 728325608;
            kdebug_trace();
            sub_2239065A4(v88, a1 + 704);
            kdebug_trace();
          }
        }
      }
      v388 = 0u;
      v389 = 0u;
      LODWORD(v390[0]) = 728325624;
      kdebug_trace();
      v89 = BYTE7(v374);
      if (SBYTE7(v374) < 0)
        v89 = (unint64_t)__p[1];
      if (v89 >= 0x11)
      {
        v90 = __p;
        if (SBYTE7(v374) < 0)
          v90 = (void **)__p[0];
        v91 = *v90;
        v92 = v90[1];
        v93 = *((unsigned __int8 *)v90 + 16);
        if (v91 == (void *)0x6365722E64337663 && v92 == (void *)0x73746174532E6E6FLL && v93 == 46)
          sub_223187510();
      }
      kdebug_trace();
      if (SBYTE7(v374) < 0)
        operator delete(__p[0]);
      sub_224569D7C();
      sub_224569A80();
      if (!os_variant_has_internal_diagnostics())
        goto LABEL_225;
      v96 = sub_2241471F8();
      v97 = v96[2];
      if (!v97)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_540;
        }
        v97 = v96[2];
      }
      v98 = *(_QWORD *)(v97 + 64);
      v99 = (std::mutex *)(v98 + 32);
      std::mutex::lock((std::mutex *)(v98 + 32));
      v101 = *(_QWORD *)(v98 + 96);
      v100 = *(_QWORD *)(v98 + 104);
      std::mutex::unlock(v99);
      if (v101 == v100)
        goto LABEL_225;
      *(_QWORD *)&v388 = "cv3d.recon.";
      *((_QWORD *)&v388 + 1) = 11;
      v102 = HIBYTE(v378);
      v103 = &v377;
      if (v378 < 0)
      {
        v103 = v377;
        v102 = v378;
      }
      *(_QWORD *)&v389 = v103;
      *((_QWORD *)&v389 + 1) = v102;
      sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, &v376);
      v104 = HIBYTE(v376.__r_.__value_.__r.__words[2]);
      v105 = *(_OWORD *)&v376.__r_.__value_.__l.__data_;
      sub_2241471F8();
      if ((v104 & 0x80u) == 0)
        v106 = &v376;
      else
        v106 = (std::string *)v105;
      if ((v104 & 0x80u) == 0)
        v107 = v104;
      else
        v107 = *((_QWORD *)&v105 + 1);
      v108 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v106, v107);
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v108 + 24))(v108))
      {
LABEL_223:
        if (SHIBYTE(v376.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v376.__r_.__value_.__l.__data_);
LABEL_225:
        sub_224569D7C();
        sub_224569A80();
        if (!os_variant_has_internal_diagnostics())
          goto LABEL_325;
        v164 = sub_2241471F8();
        v165 = v164[2];
        if (!v165)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            goto LABEL_540;
          }
          v165 = v164[2];
        }
        v166 = *(_QWORD *)(v165 + 64);
        v167 = (std::mutex *)(v166 + 32);
        std::mutex::lock((std::mutex *)(v166 + 32));
        v169 = *(_QWORD *)(v166 + 96);
        v168 = *(_QWORD *)(v166 + 104);
        std::mutex::unlock(v167);
        if (v169 == v168)
          goto LABEL_325;
        *(_QWORD *)&v388 = "cv3d.recon.";
        *((_QWORD *)&v388 + 1) = 11;
        v170 = HIBYTE(v378);
        v171 = &v377;
        if (v378 < 0)
        {
          v171 = v377;
          v170 = v378;
        }
        *(_QWORD *)&v389 = v171;
        *((_QWORD *)&v389 + 1) = v170;
        sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, &v376);
        v172 = HIBYTE(v376.__r_.__value_.__r.__words[2]);
        v173 = *(_OWORD *)&v376.__r_.__value_.__l.__data_;
        sub_2241471F8();
        if ((v172 & 0x80u) == 0)
          v174 = &v376;
        else
          v174 = (std::string *)v173;
        if ((v172 & 0x80u) == 0)
          v175 = v172;
        else
          v175 = *((_QWORD *)&v173 + 1);
        v176 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v174, v175);
        if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v176 + 24))(v176))
        {
LABEL_323:
          if (SHIBYTE(v376.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v376.__r_.__value_.__l.__data_);
LABEL_325:
          sub_224569D7C();
          sub_224569A80();
          if (!os_variant_has_internal_diagnostics())
            goto LABEL_434;
          v229 = sub_2241471F8();
          v230 = v229[2];
          if (!v230)
          {
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
            {
              goto LABEL_540;
            }
            v230 = v229[2];
          }
          v231 = *(_QWORD *)(v230 + 64);
          v232 = (std::mutex *)(v231 + 32);
          std::mutex::lock((std::mutex *)(v231 + 32));
          v234 = *(_QWORD *)(v231 + 96);
          v233 = *(_QWORD *)(v231 + 104);
          std::mutex::unlock(v232);
          if (v234 == v233)
          {
LABEL_434:
            sub_224569D7C();
            sub_224569A80();
            if (!os_variant_has_internal_diagnostics())
              goto LABEL_536;
            v297 = sub_2241471F8();
            v298 = v297[2];
            if (v298)
            {
LABEL_438:
              v299 = *(_QWORD *)(v298 + 64);
              v300 = (std::mutex *)(v299 + 32);
              std::mutex::lock((std::mutex *)(v299 + 32));
              v302 = *(_QWORD *)(v299 + 96);
              v301 = *(_QWORD *)(v299 + 104);
              std::mutex::unlock(v300);
              if (v302 != v301)
              {
                *(_QWORD *)&v388 = "cv3d.recon.";
                *((_QWORD *)&v388 + 1) = 11;
                v303 = HIBYTE(v378);
                v304 = &v377;
                if (v378 < 0)
                {
                  v304 = v377;
                  v303 = v378;
                }
                *(_QWORD *)&v389 = v304;
                *((_QWORD *)&v389 + 1) = v303;
                sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, &v376);
                v305 = HIBYTE(v376.__r_.__value_.__r.__words[2]);
                v306 = *(_OWORD *)&v376.__r_.__value_.__l.__data_;
                sub_2241471F8();
                if ((v305 & 0x80u) == 0)
                  v307 = &v376;
                else
                  v307 = (std::string *)v306;
                if ((v305 & 0x80u) == 0)
                  v308 = v305;
                else
                  v308 = *((_QWORD *)&v306 + 1);
                v309 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v307, v308);
                if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v309 + 24))(v309))
                  goto LABEL_534;
                *(_OWORD *)__p = 0u;
                v374 = 0u;
                v375 = 728325616;
                kdebug_trace();
                if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v309 + 24))(v309)
                  || (qmemcpy(v387, "sExcludedMask", 13),
                      *(_QWORD *)&v379 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
                      *((_QWORD *)&v379 + 1) = 2,
                      v310 = sub_2241471F8(),
                      !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v309 + 24))(v309)))
                {
LABEL_533:
                  kdebug_trace();
LABEL_534:
                  if (SHIBYTE(v376.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v376.__r_.__value_.__l.__data_);
                  goto LABEL_536;
                }
                *(_QWORD *)&v388 = &off_24EC24788;
                sub_2231F8D1C((_DWORD *)(a1 + 856), (_WORD *)&v388 + 4);
                v311 = *(_QWORD *)(a1 + 800);
                v312 = *(std::__shared_weak_count **)(a1 + 808);
                if (v312)
                {
                  p_shared_owners = (unint64_t *)&v312->__shared_owners_;
                  do
                    v314 = __ldxr(p_shared_owners);
                  while (__stxr(v314 + 1, p_shared_owners));
                  do
                    v315 = __ldaxr(p_shared_owners);
                  while (__stlxr(v315 - 1, p_shared_owners));
                  if (!v315)
                  {
                    ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
                    std::__shared_weak_count::__release_weak(v312);
                  }
                  if (!v311)
                    goto LABEL_467;
                  v316 = *(std::__shared_weak_count **)(a1 + 808);
                  v311 = *(_QWORD *)(a1 + 800);
                  if (v316)
                  {
                    v317 = (unint64_t *)&v316->__shared_owners_;
                    do
                      v318 = __ldxr(v317);
                    while (__stxr(v318 + 1, v317));
                    do
                      v319 = __ldaxr(v317);
                    while (__stlxr(v319 - 1, v317));
                    if (!v319)
                    {
                      ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
                      std::__shared_weak_count::__release_weak(v316);
                    }
                  }
                }
                else if (!v311)
                {
                  goto LABEL_467;
                }
                if (*(_BYTE *)(a1 + 873))
                {
                  (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v311 + 96))(v383, v311, 0);
                  goto LABEL_468;
                }
LABEL_467:
                *(_QWORD *)v383 = 0;
LABEL_468:
                v320 = *((_QWORD *)&v388 + 1);
                v321 = (std::__shared_weak_count *)v389;
                if ((_QWORD)v389)
                {
                  v322 = (unint64_t *)(v389 + 8);
                  do
                    v323 = __ldxr(v322);
                  while (__stxr(v323 + 1, v322));
                  do
                    v324 = __ldaxr(v322);
                  while (__stlxr(v324 - 1, v322));
                  if (!v324)
                  {
                    ((void (*)(std::__shared_weak_count *))v321->__on_zero_shared)(v321);
                    std::__shared_weak_count::__release_weak(v321);
                  }
                }
                if (v320 && v394)
                  (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, uint64_t))(**((_QWORD **)&v388 + 1)
                                                                                                  + 96))(&v380, *((_QWORD *)&v388 + 1), 1);
                else
                  v380 = 0;
                v325 = *(_DWORD *)(a1 + 856);
                if (v325)
                {
                  v326 = *(_DWORD *)(a1 + 860);
                  if (v326)
                  {
                    v370 = v310;
                    v327 = *(unsigned int *)(a1 + 864);
                    v328 = *(unsigned int *)(a1 + 868);
                    v329 = v391;
                    v330 = v392;
                    v331 = *(_BYTE **)(a1 + 848);
                    if (*(_BYTE *)(a1 + 872) && v331)
                    {
                      v332 = *(_QWORD *)(a1 + 800);
                      v333 = *(std::__shared_weak_count **)(a1 + 808);
                      if (v333)
                      {
                        v334 = (unint64_t *)&v333->__shared_owners_;
                        do
                          v335 = __ldxr(v334);
                        while (__stxr(v335 + 1, v334));
                        do
                          v336 = __ldaxr(v334);
                        while (__stlxr(v336 - 1, v334));
                        if (!v336)
                        {
                          ((void (*)(std::__shared_weak_count *))v333->__on_zero_shared)(v333);
                          std::__shared_weak_count::__release_weak(v333);
                        }
                      }
                      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v332 + 88))(v332, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
                      v331 = *(_BYTE **)(a1 + 848);
                    }
                    v337 = (_BYTE *)v390[0];
                    if (v393 && v390[0])
                    {
                      (*(void (**)(_QWORD, uint64_t, const char *))(**((_QWORD **)&v388 + 1) + 88))(*((_QWORD *)&v388 + 1), 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
                      v337 = (_BYTE *)v390[0];
                    }
                    v338 = v325 - 1;
                    v339 = v326 - 1;
                    if (v326 != 1)
                    {
                      if (v325 == 1)
                      {
                        do
                        {
                          *v337 = -*v331;
                          v331 += v328;
                          v337 += v330;
                          --v339;
                        }
                        while (v339);
                      }
                      else
                      {
                        v340 = 0;
                        do
                        {
                          v341 = v325 - 1;
                          v342 = v331;
                          v343 = v337;
                          do
                          {
                            *v343 = -*v342;
                            v342 += v327;
                            v343 += v329;
                            --v341;
                          }
                          while (v341);
                          *v343 = -*v342;
                          v331 += v328;
                          v337 += v330;
                          ++v340;
                        }
                        while (v340 != v339);
                      }
                    }
                    if (v325 == 1)
                    {
                      v310 = v370;
                    }
                    else
                    {
                      v310 = v370;
                      do
                      {
                        *v337 = -*v331;
                        v331 += v327;
                        v337 += v329;
                        --v338;
                      }
                      while (v338);
                    }
                    *v337 = -*v331;
                  }
                }
                v344 = v380;
                v380 = 0;
                if (v344)
                  (*((void (**)(uint64_t (**)()))*v344 + 1))(v344);
                v345 = *(_QWORD *)v383;
                *(_QWORD *)v383 = 0;
                if (v345)
                  (*(void (**)(uint64_t))(*(_QWORD *)v345 + 8))(v345);
                *(_QWORD *)v383 = 0x6369746E616D6553;
                *(_QWORD *)&v383[8] = v387[0];
                *(_QWORD *)&v383[13] = *(_QWORD *)((char *)v387 + 5);
                v387[0] = 0;
                *(_QWORD *)((char *)v387 + 5) = 0;
                *(_DWORD *)&v383[21] = 18153472;
                sub_2233B3528((uint64_t)&v388, (__int128 *)v383, &v379, &v384);
                if (v383[24] && (v383[23] & 0x80000000) != 0)
                  operator delete(*(void **)v383);
                sub_223167354((uint64_t)&v388 + 8);
                v346 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v309 + 56))(v309);
                v347 = *v346;
                v348 = (std::__shared_weak_count *)v346[1];
                if (v348)
                {
                  v349 = (unint64_t *)&v348->__shared_owners_;
                  do
                    v350 = __ldxr(v349);
                  while (__stxr(v350 + 1, v349));
                }
                v352 = v385;
                v351 = v386;
                v380 = &off_24EC6A3B8;
                v381 = v385;
                v382 = v386;
                v385 = 0;
                v386 = 0;
                *(_QWORD *)&v388 = v347;
                *((_QWORD *)&v388 + 1) = v348;
                if (v348)
                {
                  v353 = (unint64_t *)&v348->__shared_owners_;
                  do
                    v354 = __ldxr(v353);
                  while (__stxr(v354 + 1, v353));
                }
                *(_QWORD *)&v389 = &off_24EC6A3B8;
                *((_QWORD *)&v389 + 1) = v352;
                v390[0] = v351;
                if (v351)
                {
                  v355 = (unint64_t *)(v351 + 8);
                  do
                    v356 = __ldxr(v355);
                  while (__stxr(v356 + 1, v355));
                }
                (*(void (**)(uint64_t *, __int128 *))(*v310 + 16))(v310, &v388);
                sub_2241231D8((uint64_t)&v389);
                v357 = (std::__shared_weak_count *)*((_QWORD *)&v388 + 1);
                if (*((_QWORD *)&v388 + 1))
                {
                  v358 = (unint64_t *)(*((_QWORD *)&v388 + 1) + 8);
                  do
                    v359 = __ldaxr(v358);
                  while (__stlxr(v359 - 1, v358));
                  if (!v359)
                  {
                    ((void (*)(std::__shared_weak_count *))v357->__on_zero_shared)(v357);
                    std::__shared_weak_count::__release_weak(v357);
                  }
                }
                sub_2241231D8((uint64_t)&v380);
                if (v348)
                {
                  v360 = (unint64_t *)&v348->__shared_owners_;
                  do
                    v361 = __ldaxr(v360);
                  while (__stlxr(v361 - 1, v360));
                  if (!v361)
                  {
                    ((void (*)(std::__shared_weak_count *))v348->__on_zero_shared)(v348);
                    std::__shared_weak_count::__release_weak(v348);
                  }
                }
                sub_2241231D8((uint64_t)&v384);
                goto LABEL_533;
              }
LABEL_536:
              if (SHIBYTE(v378) < 0)
                operator delete(v377);
              return;
            }
            if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
            {
              v298 = v297[2];
              goto LABEL_438;
            }
LABEL_540:
            abort();
          }
          *(_QWORD *)&v388 = "cv3d.recon.";
          *((_QWORD *)&v388 + 1) = 11;
          v235 = HIBYTE(v378);
          v236 = &v377;
          if (v378 < 0)
          {
            v236 = v377;
            v235 = v378;
          }
          *(_QWORD *)&v389 = v236;
          *((_QWORD *)&v389 + 1) = v235;
          sub_2231A9820((uint64_t)&v388, (uint64_t)v390, 0, 0, &v376);
          v237 = HIBYTE(v376.__r_.__value_.__r.__words[2]);
          v238 = *(_OWORD *)&v376.__r_.__value_.__l.__data_;
          sub_2241471F8();
          if ((v237 & 0x80u) == 0)
            v239 = &v376;
          else
            v239 = (std::string *)v238;
          if ((v237 & 0x80u) == 0)
            v240 = v237;
          else
            v240 = *((_QWORD *)&v238 + 1);
          v241 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v239, v240);
          if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v241 + 24))(v241))
          {
LABEL_432:
            if (SHIBYTE(v376.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v376.__r_.__value_.__l.__data_);
            goto LABEL_434;
          }
          *(_OWORD *)__p = 0u;
          v374 = 0u;
          v375 = 728325616;
          kdebug_trace();
          if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v241 + 24))(v241)
            || (qmemcpy(v387, "Change", 6),
                *(_QWORD *)&v379 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
                *((_QWORD *)&v379 + 1) = 2,
                v242 = sub_2241471F8(),
                !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v241 + 24))(v241)))
          {
LABEL_431:
            kdebug_trace();
            goto LABEL_432;
          }
          *(_QWORD *)&v388 = &off_24EC216B8;
          sub_2231FF60C((_DWORD *)(a1 + 504), (_WORD *)&v388 + 4);
          v243 = *(_QWORD *)(a1 + 448);
          v244 = *(std::__shared_weak_count **)(a1 + 456);
          if (v244)
          {
            v245 = (unint64_t *)&v244->__shared_owners_;
            do
              v246 = __ldxr(v245);
            while (__stxr(v246 + 1, v245));
            do
              v247 = __ldaxr(v245);
            while (__stlxr(v247 - 1, v245));
            if (!v247)
            {
              ((void (*)(std::__shared_weak_count *))v244->__on_zero_shared)(v244);
              std::__shared_weak_count::__release_weak(v244);
            }
            if (!v243)
              goto LABEL_358;
            v243 = *(_QWORD *)(a1 + 448);
            v248 = *(std::__shared_weak_count **)(a1 + 456);
            if (v248)
            {
              v249 = (unint64_t *)&v248->__shared_owners_;
              do
                v250 = __ldxr(v249);
              while (__stxr(v250 + 1, v249));
              do
                v251 = __ldaxr(v249);
              while (__stlxr(v251 - 1, v249));
              if (!v251)
              {
                ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
                std::__shared_weak_count::__release_weak(v248);
              }
            }
          }
          else if (!v243)
          {
            goto LABEL_358;
          }
          if (*(_BYTE *)(a1 + 521))
          {
            (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v243 + 96))(v383, v243, 0);
LABEL_359:
            v252 = *((_QWORD *)&v388 + 1);
            v253 = (std::__shared_weak_count *)v389;
            if ((_QWORD)v389)
            {
              v254 = (unint64_t *)(v389 + 8);
              do
                v255 = __ldxr(v254);
              while (__stxr(v255 + 1, v254));
              do
                v256 = __ldaxr(v254);
              while (__stlxr(v256 - 1, v254));
              if (!v256)
              {
                ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
                std::__shared_weak_count::__release_weak(v253);
              }
            }
            if (v252 && v394)
              (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, uint64_t))(**((_QWORD **)&v388 + 1)
                                                                                              + 96))(&v380, *((_QWORD *)&v388 + 1), 1);
            else
              v380 = 0;
            v257 = *(_DWORD *)(a1 + 504);
            if (!v257)
              goto LABEL_404;
            v258 = *(_DWORD *)(a1 + 508);
            if (!v258)
              goto LABEL_404;
            v259 = *(unsigned int *)(a1 + 512);
            v369 = v392;
            v372 = v391;
            v260 = *(float **)(a1 + 496);
            v367 = *(unsigned int *)(a1 + 516);
            if (*(_BYTE *)(a1 + 520) && v260)
            {
              v364 = (std::__shared_weak_count *)v242;
              v261 = *(unsigned int *)(a1 + 512);
              v262 = *(_QWORD *)(a1 + 448);
              v263 = *(std::__shared_weak_count **)(a1 + 456);
              if (v263)
              {
                v264 = (unint64_t *)&v263->__shared_owners_;
                do
                  v265 = __ldxr(v264);
                while (__stxr(v265 + 1, v264));
                do
                  v266 = __ldaxr(v264);
                while (__stlxr(v266 - 1, v264));
                if (!v266)
                {
                  ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
                  std::__shared_weak_count::__release_weak(v263);
                }
              }
              (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v262 + 88))(v262, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
              v259 = v261;
              v242 = (uint64_t *)v364;
              v260 = *(float **)(a1 + 496);
            }
            v267 = (float *)v390[0];
            if (v393 && v390[0])
            {
              (*(void (**)(_QWORD, uint64_t, const char *))(**((_QWORD **)&v388 + 1) + 88))(*((_QWORD *)&v388 + 1), 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
              v267 = (float *)v390[0];
            }
            v268 = v257 - 1;
            v269 = v258 - 1;
            if (v258 != 1)
            {
              if (v257 == 1)
              {
                do
                {
                  v277 = *v260;
                  if (*v260 > 0.8)
                    v277 = *v260 + 1.0;
                  *v267 = v277;
                  v260 += v367;
                  v267 += v369;
                  --v269;
                }
                while (v269);
                goto LABEL_401;
              }
              v270 = 0;
              do
              {
                v271 = v267;
                v272 = v260;
                v273 = v257 - 1;
                do
                {
                  v274 = *v272;
                  if (*v272 > 0.8)
                    v274 = *v272 + 1.0;
                  *v271 = v274;
                  v272 += v259;
                  v271 += v372;
                  --v273;
                }
                while (v273);
                v275 = *v272;
                if (*v272 > 0.8)
                  v275 = *v272 + 1.0;
                *v271 = v275;
                v260 += v367;
                v267 += v369;
                ++v270;
              }
              while (v270 != v269);
            }
            if (v257 != 1)
            {
              do
              {
                v276 = *v260;
                if (*v260 > 0.8)
                  v276 = *v260 + 1.0;
                *v267 = v276;
                v260 += v259;
                v267 += v372;
                --v268;
              }
              while (v268);
            }
LABEL_401:
            v278 = *v260;
            if (*v260 > 0.8)
              v278 = *v260 + 1.0;
            *v267 = v278;
LABEL_404:
            v279 = v380;
            v380 = 0;
            if (v279)
              (*((void (**)(uint64_t (**)()))*v279 + 1))(v279);
            v280 = *(_QWORD *)v383;
            *(_QWORD *)v383 = 0;
            if (v280)
              (*(void (**)(uint64_t))(*(_QWORD *)v280 + 8))(v280);
            *(_QWORD *)v383 = 0x64657265746C6946;
            *(_DWORD *)&v383[8] = v387[0];
            *(_WORD *)&v383[12] = WORD2(v387[0]);
            v383[14] = 0;
            *(_QWORD *)&v383[15] = 0;
            *(_WORD *)&v383[23] = 270;
            LODWORD(v387[0]) = 0;
            WORD2(v387[0]) = 0;
            sub_22321B368(&v388, (__int128 *)v383, &v379, &v384);
            if (v383[24] && (v383[23] & 0x80000000) != 0)
              operator delete(*(void **)v383);
            sub_223167354((uint64_t)&v388 + 8);
            v281 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v241 + 56))(v241);
            v282 = *v281;
            v283 = (std::__shared_weak_count *)v281[1];
            if (v283)
            {
              v284 = (unint64_t *)&v283->__shared_owners_;
              do
                v285 = __ldxr(v284);
              while (__stxr(v285 + 1, v284));
            }
            v287 = v385;
            v286 = v386;
            v380 = &off_24EC6A3B8;
            v381 = v385;
            v382 = v386;
            v385 = 0;
            v386 = 0;
            *(_QWORD *)&v388 = v282;
            *((_QWORD *)&v388 + 1) = v283;
            if (v283)
            {
              v288 = (unint64_t *)&v283->__shared_owners_;
              do
                v289 = __ldxr(v288);
              while (__stxr(v289 + 1, v288));
            }
            *(_QWORD *)&v389 = &off_24EC6A3B8;
            *((_QWORD *)&v389 + 1) = v287;
            v390[0] = v286;
            if (v286)
            {
              v290 = (unint64_t *)(v286 + 8);
              do
                v291 = __ldxr(v290);
              while (__stxr(v291 + 1, v290));
            }
            (*(void (**)(uint64_t *, __int128 *))(*v242 + 16))(v242, &v388);
            sub_2241231D8((uint64_t)&v389);
            v292 = (std::__shared_weak_count *)*((_QWORD *)&v388 + 1);
            if (*((_QWORD *)&v388 + 1))
            {
              v293 = (unint64_t *)(*((_QWORD *)&v388 + 1) + 8);
              do
                v294 = __ldaxr(v293);
              while (__stlxr(v294 - 1, v293));
              if (!v294)
              {
                ((void (*)(std::__shared_weak_count *))v292->__on_zero_shared)(v292);
                std::__shared_weak_count::__release_weak(v292);
              }
            }
            sub_2241231D8((uint64_t)&v380);
            if (v283)
            {
              v295 = (unint64_t *)&v283->__shared_owners_;
              do
                v296 = __ldaxr(v295);
              while (__stlxr(v296 - 1, v295));
              if (!v296)
              {
                ((void (*)(std::__shared_weak_count *))v283->__on_zero_shared)(v283);
                std::__shared_weak_count::__release_weak(v283);
              }
            }
            sub_2241231D8((uint64_t)&v384);
            goto LABEL_431;
          }
LABEL_358:
          *(_QWORD *)v383 = 0;
          goto LABEL_359;
        }
        *(_OWORD *)__p = 0u;
        v374 = 0u;
        v375 = 728325616;
        kdebug_trace();
        if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v176 + 24))(v176)
          || (*(_QWORD *)&v379 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
              *((_QWORD *)&v379 + 1) = 2,
              v177 = sub_2241471F8(),
              !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v176 + 24))(v176)))
        {
LABEL_322:
          kdebug_trace();
          goto LABEL_323;
        }
        v371 = v177;
        *(_QWORD *)&v388 = &off_24EC24788;
        sub_2231F8D1C((_DWORD *)(a1 + 416), (_WORD *)&v388 + 4);
        v178 = *(_QWORD *)(a1 + 360);
        v179 = *(std::__shared_weak_count **)(a1 + 368);
        if (v179)
        {
          v180 = (unint64_t *)&v179->__shared_owners_;
          do
            v181 = __ldxr(v180);
          while (__stxr(v181 + 1, v180));
          do
            v182 = __ldaxr(v180);
          while (__stlxr(v182 - 1, v180));
          if (!v182)
          {
            ((void (*)(std::__shared_weak_count *))v179->__on_zero_shared)(v179);
            std::__shared_weak_count::__release_weak(v179);
          }
          if (!v178)
            goto LABEL_258;
          v178 = *(_QWORD *)(a1 + 360);
          v183 = *(std::__shared_weak_count **)(a1 + 368);
          if (v183)
          {
            v184 = (unint64_t *)&v183->__shared_owners_;
            do
              v185 = __ldxr(v184);
            while (__stxr(v185 + 1, v184));
            do
              v186 = __ldaxr(v184);
            while (__stlxr(v186 - 1, v184));
            if (!v186)
            {
              ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
              std::__shared_weak_count::__release_weak(v183);
            }
          }
        }
        else if (!v178)
        {
          goto LABEL_258;
        }
        if (*(_BYTE *)(a1 + 433))
        {
          (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v178 + 96))(v383, v178, 0);
          goto LABEL_259;
        }
LABEL_258:
        *(_QWORD *)v383 = 0;
LABEL_259:
        v187 = *((_QWORD *)&v388 + 1);
        v188 = (std::__shared_weak_count *)v389;
        if ((_QWORD)v389)
        {
          v189 = (unint64_t *)(v389 + 8);
          do
            v190 = __ldxr(v189);
          while (__stxr(v190 + 1, v189));
          do
            v191 = __ldaxr(v189);
          while (__stlxr(v191 - 1, v189));
          if (!v191)
          {
            ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
            std::__shared_weak_count::__release_weak(v188);
          }
        }
        if (v187)
        {
          if (v394)
            (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, uint64_t))(**((_QWORD **)&v388 + 1)
                                                                                            + 96))(&v380, *((_QWORD *)&v388 + 1), 1);
          else
            v380 = 0;
        }
        else
        {
          v380 = 0;
        }
        v192 = *(_DWORD *)(a1 + 416);
        if (v192)
        {
          v193 = *(_DWORD *)(a1 + 420);
          if (v193)
          {
            v194 = *(unsigned int *)(a1 + 424);
            v195 = *(unsigned int *)(a1 + 428);
            v196 = v391;
            v197 = v392;
            v198 = *(_BYTE **)(a1 + 408);
            v366 = *(_DWORD *)(a1 + 420);
            if (*(_BYTE *)(a1 + 432) && v198)
            {
              v200 = *(_QWORD *)(a1 + 360);
              v199 = *(std::__shared_weak_count **)(a1 + 368);
              if (v199)
              {
                v201 = (unint64_t *)&v199->__shared_owners_;
                do
                  v202 = __ldxr(v201);
                while (__stxr(v202 + 1, v201));
                do
                  v203 = __ldaxr(v201);
                while (__stlxr(v203 - 1, v201));
                if (!v203)
                {
                  v363 = v199;
                  ((void (*)(std::__shared_weak_count *))v199->__on_zero_shared)(v199);
                  std::__shared_weak_count::__release_weak(v363);
                }
              }
              (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v200 + 88))(v200, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
              v198 = *(_BYTE **)(a1 + 408);
              v193 = v366;
            }
            v204 = (_BYTE *)v390[0];
            if (v393 && v390[0])
            {
              (*(void (**)(_QWORD, uint64_t, const char *))(**((_QWORD **)&v388 + 1) + 88))(*((_QWORD *)&v388 + 1), 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
              v204 = (_BYTE *)v390[0];
              v193 = v366;
            }
            v205 = v192 - 1;
            v206 = v193 - 1;
            if (v206)
            {
              if (v192 == 1)
              {
                do
                {
                  *v204 = -*v198;
                  v198 += v195;
                  v204 += v197;
                  --v206;
                }
                while (v206);
              }
              else
              {
                for (i = 0; i != v206; ++i)
                {
                  v208 = v192 - 1;
                  v209 = v198;
                  v210 = v204;
                  do
                  {
                    *v210 = -*v209;
                    v209 += v194;
                    v210 += v196;
                    --v208;
                  }
                  while (v208);
                  *v210 = -*v209;
                  v198 += v195;
                  v204 += v197;
                }
              }
            }
            if (v192 != 1)
            {
              do
              {
                *v204 = -*v198;
                v198 += v194;
                v204 += v196;
                --v205;
              }
              while (v205);
            }
            *v204 = -*v198;
          }
        }
        v211 = v380;
        v380 = 0;
        if (v211)
          (*((void (**)(uint64_t (**)()))*v211 + 1))(v211);
        v212 = *(_QWORD *)v383;
        *(_QWORD *)v383 = 0;
        if (v212)
          (*(void (**)(uint64_t))(*(_QWORD *)v212 + 8))(v212);
        strcpy(v383, "ChangeMask");
        *(_QWORD *)&v383[11] = v387[0];
        *(_DWORD *)&v383[19] = v387[1];
        *(_WORD *)&v383[23] = 266;
        v387[0] = 0;
        LODWORD(v387[1]) = 0;
        sub_2233B3528((uint64_t)&v388, (__int128 *)v383, &v379, &v384);
        if (v383[24] && (v383[23] & 0x80000000) != 0)
          operator delete(*(void **)v383);
        sub_223167354((uint64_t)&v388 + 8);
        v213 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v176 + 56))(v176);
        v214 = *v213;
        v215 = (std::__shared_weak_count *)v213[1];
        if (v215)
        {
          v216 = (unint64_t *)&v215->__shared_owners_;
          do
            v217 = __ldxr(v216);
          while (__stxr(v217 + 1, v216));
        }
        v219 = v385;
        v218 = v386;
        v380 = &off_24EC6A3B8;
        v381 = v385;
        v382 = v386;
        v385 = 0;
        v386 = 0;
        *(_QWORD *)&v388 = v214;
        *((_QWORD *)&v388 + 1) = v215;
        if (v215)
        {
          v220 = (unint64_t *)&v215->__shared_owners_;
          do
            v221 = __ldxr(v220);
          while (__stxr(v221 + 1, v220));
        }
        *(_QWORD *)&v389 = &off_24EC6A3B8;
        *((_QWORD *)&v389 + 1) = v219;
        v390[0] = v218;
        if (v218)
        {
          v222 = (unint64_t *)(v218 + 8);
          do
            v223 = __ldxr(v222);
          while (__stxr(v223 + 1, v222));
        }
        (*(void (**)(uint64_t *, __int128 *))(*v371 + 16))(v371, &v388);
        sub_2241231D8((uint64_t)&v389);
        v224 = (std::__shared_weak_count *)*((_QWORD *)&v388 + 1);
        if (*((_QWORD *)&v388 + 1))
        {
          v225 = (unint64_t *)(*((_QWORD *)&v388 + 1) + 8);
          do
            v226 = __ldaxr(v225);
          while (__stlxr(v226 - 1, v225));
          if (!v226)
          {
            ((void (*)(std::__shared_weak_count *))v224->__on_zero_shared)(v224);
            std::__shared_weak_count::__release_weak(v224);
          }
        }
        sub_2241231D8((uint64_t)&v380);
        if (v215)
        {
          v227 = (unint64_t *)&v215->__shared_owners_;
          do
            v228 = __ldaxr(v227);
          while (__stlxr(v228 - 1, v227));
          if (!v228)
          {
            ((void (*)(std::__shared_weak_count *))v215->__on_zero_shared)(v215);
            std::__shared_weak_count::__release_weak(v215);
          }
        }
        sub_2241231D8((uint64_t)&v384);
        goto LABEL_322;
      }
      *(_OWORD *)__p = 0u;
      v374 = 0u;
      v375 = 728325616;
      kdebug_trace();
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v108 + 24))(v108)
        || (*(_QWORD *)&v379 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
            *((_QWORD *)&v379 + 1) = 2,
            v109 = sub_2241471F8(),
            !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v108 + 24))(v108)))
      {
LABEL_222:
        kdebug_trace();
        goto LABEL_223;
      }
      *(_QWORD *)&v388 = &off_24EC24788;
      sub_2231F8D1C((_DWORD *)(a1 + 768), (_WORD *)&v388 + 4);
      v110 = *(_QWORD *)(a1 + 712);
      v111 = *(std::__shared_weak_count **)(a1 + 720);
      if (v111)
      {
        v112 = (unint64_t *)&v111->__shared_owners_;
        do
          v113 = __ldxr(v112);
        while (__stxr(v113 + 1, v112));
        do
          v114 = __ldaxr(v112);
        while (__stlxr(v114 - 1, v112));
        if (!v114)
        {
          ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
          std::__shared_weak_count::__release_weak(v111);
        }
        if (!v110)
          goto LABEL_159;
        v115 = *(std::__shared_weak_count **)(a1 + 720);
        v110 = *(_QWORD *)(a1 + 712);
        if (v115)
        {
          v116 = (unint64_t *)&v115->__shared_owners_;
          do
            v117 = __ldxr(v116);
          while (__stxr(v117 + 1, v116));
          do
            v118 = __ldaxr(v116);
          while (__stlxr(v118 - 1, v116));
          if (!v118)
          {
            ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
            std::__shared_weak_count::__release_weak(v115);
          }
        }
      }
      else if (!v110)
      {
        goto LABEL_159;
      }
      if (*(_BYTE *)(a1 + 785))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v110 + 96))(v383, v110, 0);
        goto LABEL_160;
      }
LABEL_159:
      *(_QWORD *)v383 = 0;
LABEL_160:
      v119 = *((_QWORD *)&v388 + 1);
      v120 = (std::__shared_weak_count *)v389;
      if ((_QWORD)v389)
      {
        v121 = (unint64_t *)(v389 + 8);
        do
          v122 = __ldxr(v121);
        while (__stxr(v122 + 1, v121));
        do
          v123 = __ldaxr(v121);
        while (__stlxr(v123 - 1, v121));
        if (!v123)
        {
          ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
          std::__shared_weak_count::__release_weak(v120);
        }
      }
      if (v119 && v394)
        (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, uint64_t))(**((_QWORD **)&v388 + 1) + 96))(&v380, *((_QWORD *)&v388 + 1), 1);
      else
        v380 = 0;
      v124 = *(_DWORD *)(a1 + 768);
      if (v124)
      {
        v125 = *(_DWORD *)(a1 + 772);
        if (v125)
        {
          v368 = v109;
          v126 = *(unsigned int *)(a1 + 776);
          v128 = v391;
          v127 = v392;
          v129 = *(_QWORD *)(a1 + 760);
          v365 = *(unsigned int *)(a1 + 780);
          if (*(_BYTE *)(a1 + 784) && v129)
          {
            v362 = (std::__shared_weak_count *)*(unsigned int *)(a1 + 776);
            v130 = *(_DWORD *)(a1 + 772);
            v131 = *(_QWORD *)(a1 + 712);
            v132 = *(std::__shared_weak_count **)(a1 + 720);
            if (v132)
            {
              v133 = (unint64_t *)&v132->__shared_owners_;
              do
                v134 = __ldxr(v133);
              while (__stxr(v134 + 1, v133));
              do
                v135 = __ldaxr(v133);
              while (__stlxr(v135 - 1, v133));
              if (!v135)
              {
                ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
                std::__shared_weak_count::__release_weak(v132);
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v131 + 88))(v131, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
            v125 = v130;
            v109 = v368;
            v129 = *(_QWORD *)(a1 + 760);
            v126 = (unint64_t)v362;
          }
          v136 = (_BYTE *)v390[0];
          if (v393 && v390[0])
          {
            v137 = (std::__shared_weak_count *)v126;
            (*(void (**)(_QWORD, uint64_t, const char *))(**((_QWORD **)&v388 + 1) + 88))(*((_QWORD *)&v388 + 1), 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
            v136 = (_BYTE *)v390[0];
            v126 = (unint64_t)v137;
            v109 = v368;
          }
          v138 = v124 - 1;
          v139 = 4 * v126;
          v140 = v125 - 1;
          if (v125 != 1)
          {
            v141 = 4 * v365;
            if (v124 == 1)
            {
              do
              {
                *v136 = -1;
                v136 += v127;
                v129 += v141;
                --v140;
              }
              while (v140);
            }
            else
            {
              v142 = 0;
              do
              {
                v143 = v129;
                v144 = v124 - 1;
                v145 = v136;
                do
                {
                  *v145 = -1;
                  v145 += v128;
                  v143 += v139;
                  --v144;
                }
                while (v144);
                *v145 = -1;
                v129 += v141;
                v136 += v127;
                ++v142;
              }
              while (v142 != v140);
            }
          }
          if (v124 != 1)
          {
            do
            {
              *v136 = -1;
              v136 += v128;
              v129 += v139;
              --v138;
            }
            while (v138);
          }
          *v136 = -1;
        }
      }
      v146 = v380;
      v380 = 0;
      if (v146)
        (*((void (**)(uint64_t (**)()))*v146 + 1))(v146);
      v147 = *(_QWORD *)v383;
      *(_QWORD *)v383 = 0;
      if (v147)
        (*(void (**)(uint64_t))(*(_QWORD *)v147 + 8))(v147);
      strcpy(v383, "ActiveMask");
      *(_QWORD *)&v383[11] = v387[0];
      *(_DWORD *)&v383[19] = v387[1];
      *(_WORD *)&v383[23] = 266;
      v387[0] = 0;
      LODWORD(v387[1]) = 0;
      sub_2233B3528((uint64_t)&v388, (__int128 *)v383, &v379, &v384);
      if (v383[24] && (v383[23] & 0x80000000) != 0)
        operator delete(*(void **)v383);
      sub_223167354((uint64_t)&v388 + 8);
      v148 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v108 + 56))(v108);
      v149 = *v148;
      v150 = (std::__shared_weak_count *)v148[1];
      if (v150)
      {
        v151 = (unint64_t *)&v150->__shared_owners_;
        do
          v152 = __ldxr(v151);
        while (__stxr(v152 + 1, v151));
      }
      v154 = v385;
      v153 = v386;
      v380 = &off_24EC6A3B8;
      v381 = v385;
      v382 = v386;
      v385 = 0;
      v386 = 0;
      *(_QWORD *)&v388 = v149;
      *((_QWORD *)&v388 + 1) = v150;
      if (v150)
      {
        v155 = (unint64_t *)&v150->__shared_owners_;
        do
          v156 = __ldxr(v155);
        while (__stxr(v156 + 1, v155));
      }
      *(_QWORD *)&v389 = &off_24EC6A3B8;
      *((_QWORD *)&v389 + 1) = v154;
      v390[0] = v153;
      if (v153)
      {
        v157 = (unint64_t *)(v153 + 8);
        do
          v158 = __ldxr(v157);
        while (__stxr(v158 + 1, v157));
      }
      (*(void (**)(uint64_t *, __int128 *))(*v109 + 16))(v109, &v388);
      sub_2241231D8((uint64_t)&v389);
      v159 = (std::__shared_weak_count *)*((_QWORD *)&v388 + 1);
      if (*((_QWORD *)&v388 + 1))
      {
        v160 = (unint64_t *)(*((_QWORD *)&v388 + 1) + 8);
        do
          v161 = __ldaxr(v160);
        while (__stlxr(v161 - 1, v160));
        if (!v161)
        {
          ((void (*)(std::__shared_weak_count *))v159->__on_zero_shared)(v159);
          std::__shared_weak_count::__release_weak(v159);
        }
      }
      sub_2241231D8((uint64_t)&v380);
      if (v150)
      {
        v162 = (unint64_t *)&v150->__shared_owners_;
        do
          v163 = __ldaxr(v162);
        while (__stlxr(v163 - 1, v162));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
          std::__shared_weak_count::__release_weak(v150);
        }
      }
      sub_2241231D8((uint64_t)&v384);
      goto LABEL_222;
    }
  }
}

void sub_223905E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;
  void *v51;

  v51 = a39;
  a39 = 0;
  if (v51)
    (*(void (**)(void *))(*(_QWORD *)v51 + 8))(v51);
  sub_223167354(v49);
  sub_2231874DC((uint64_t)&a13);
  if (a27 < 0)
    operator delete(__p);
  if (a33 < 0)
    operator delete(a28);
  _Unwind_Resume(a1);
}

void sub_223906328(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  void *__p[2];
  char v7;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v7 = 11;
    *(_QWORD *)&v5 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v5 + 1) = 2;
    strcpy((char *)__p, "MappedDepth");
    v4 = sub_2241471F8();
    sub_22390B564((uint64_t)v4, a1, a2, (uint64_t)__p, &v5);
    if (v7 < 0)
      operator delete(__p[0]);
  }
}

void sub_2239063E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223906400(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  void *__p[2];
  char v7;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v7 = 11;
    *(_QWORD *)&v5 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v5 + 1) = 2;
    strcpy((char *)__p, "SensedDepth");
    v4 = sub_2241471F8();
    sub_22390BF54((uint64_t)v4, a1, a2, (uint64_t)__p, &v5);
    if (v7 < 0)
      operator delete(__p[0]);
  }
}

void sub_2239064BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2239064D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  char __p[17];
  char v7;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v7 = 16;
    strcpy(__p, "SensedConfidence");
    *(_QWORD *)&v5 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v5 + 1) = 2;
    v4 = sub_2241471F8();
    sub_22390BF54((uint64_t)v4, a1, a2, (uint64_t)__p, &v5);
    if (v7 < 0)
      operator delete(*(void **)__p);
  }
}

void sub_223906588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2239065A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  __int128 v5;
  void *__p[2];
  char v7;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v7 = 8;
    strcpy((char *)__p, "DepthErr");
    *(_QWORD *)&v5 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v5 + 1) = 2;
    v4 = sub_2241471F8();
    sub_22390C450((uint64_t)v4, a1, a2, (uint64_t)__p, &v5);
    if (v7 < 0)
      operator delete(__p[0]);
  }
}

void sub_223906658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_223906674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int32x4_t v13;
  double v15;
  double v16;
  __n128 v17;
  int v19;
  int v20;
  unint64_t v21;
  BOOL v22;
  size_t v23;
  const char *v24;
  uint64_t v25;
  unsigned __int8 v26;
  const char *v27;
  size_t v28;
  const char *v29;
  const char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  size_t v38;
  std::__shared_weak_count_vtbl *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  unint64_t *p_shared_owners;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  void *v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  uint64_t v75;
  float v76;
  uint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  __int16 *v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  unint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  _BYTE *v118;
  __int16 *v119;
  int v120;
  _BYTE *v121;
  _BOOL4 v127;
  _BOOL4 v131;
  _BYTE *v132;
  BOOL v136;
  uint64_t v137;
  _BYTE *v138;
  BOOL v142;
  BOOL v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  unsigned int v150;
  void *v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  __int16 v155;
  unint64_t v156;
  uint64_t v157;
  __int128 v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t i;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  uint64_t v187;
  uint64_t v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  __int16 v197;
  uint64_t v198;
  unint64_t v201;
  uint64_t v202;
  BOOL v203;
  unsigned int v204;
  uint64_t v205;
  BOOL v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  uint64_t v211;
  uint64_t v212;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  int v218;
  uint64_t v219;
  uint64_t v221;
  unint64_t v223;
  char v224;
  uint64_t v225;
  _QWORD v227[3];
  int v228;
  const char *v229;
  int v230;
  const char *v231;
  uint64_t v232;
  std::__shared_weak_count *v233;
  uint64_t v234;
  void *object;
  void *__p[2];
  _BYTE v237[24];
  size_t v238;
  unint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;

  LODWORD(object) = 0;
  sub_22390B1A0(a8, (int *)&object);
  v221 = a3;
  if (*(_DWORD *)(a3 + 32))
    _ZF = *(_DWORD *)(a3 + 36) == 0;
  else
    _ZF = 1;
  v19 = _ZF;
  if (_ZF)
  {
    sub_223903788(&v234);
    if (**(int **)(v234 + 56) > 3
      || ((v20 = *(unsigned __int8 *)(v234 + 72), v21 = sub_22322F254(v234, "OSLogSurrogateAppender", 1, 0), !v20)
        ? (v22 = v21 == 0)
        : (v22 = 0),
          v22))
    {
LABEL_99:
      v25 = 5;
      goto LABEL_100;
    }
    v223 = v21;
    v227[0] = &v234;
    v227[1] = std::chrono::steady_clock::now().__d_.__rep_;
    v227[2] = std::chrono::system_clock::now().__d_.__rep_;
    v228 = 3;
    v229 = "unknown file";
    v230 = 311;
    v232 = 0;
    v233 = 0;
    v231 = "unknown function";
    if (*(char *)(v234 + 39) < 0)
    {
      v24 = *(const char **)(v234 + 16);
      v23 = *(_QWORD *)(v234 + 24);
    }
    else
    {
      v23 = *(unsigned __int8 *)(v234 + 39);
      v24 = (const char *)(*(_QWORD *)v227[0] + 16);
    }
    v211 = *(_QWORD *)v227[0];
    v217 = v20;
    v214 = v234 + 16;
    v26 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v26 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)&object);
      sub_223199C58("com.apple.cv3d", (unint64_t)&object, byte_255788F40);
      if (v237[0] && SHIBYTE(__p[1]) < 0)
        operator delete(object);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
    if (byte_255788F40[23] >= 0)
      v27 = byte_255788F40;
    else
      v27 = *(const char **)byte_255788F40;
    if (byte_255788F40[23] >= 0)
      v28 = byte_255788F40[23];
    else
      v28 = *(_QWORD *)&byte_255788F40[8];
    v29 = v27;
    v30 = v24;
    object = os_log_create(v27, v24);
    v31 = __p;
    if (v28 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v28 >= 0x17)
    {
      v32 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v28 | 7) != 0x17)
        v32 = v28 | 7;
      v33 = v32 + 1;
      v31 = operator new(v32 + 1);
      __p[1] = (void *)v28;
      *(_QWORD *)v237 = v33 | 0x8000000000000000;
      __p[0] = v31;
    }
    else
    {
      v237[7] = v28;
      if (!v28)
      {
LABEL_32:
        *((_BYTE *)v31 + v28) = 0;
        v237[8] = 1;
        v34 = &v237[16];
        if (v23 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v23 >= 0x17)
        {
          v35 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v23 | 7) != 0x17)
            v35 = v23 | 7;
          v36 = v35 + 1;
          v34 = operator new(v35 + 1);
          v238 = v23;
          v239 = v36 | 0x8000000000000000;
          *(_QWORD *)&v237[16] = v34;
        }
        else
        {
          HIBYTE(v239) = v23;
          if (!v23)
            goto LABEL_40;
        }
        memmove(v34, v30, v23);
LABEL_40:
        v34[v23] = 0;
        v240 = 1;
        v37 = object;
        if (SHIBYTE(v239) < 0)
          operator delete(*(void **)&v237[16]);
        if (v237[8] && (v237[7] & 0x80000000) != 0)
          operator delete(__p[0]);
        if (object)
          os_release(object);
        if (v223 && *(_QWORD *)(v223 + 24))
        {
          v38 = _os_log_pack_size();
          v39 = (std::__shared_weak_count_vtbl *)operator new(v38, (std::align_val_t)8uLL);
          v40 = (std::__shared_weak_count *)operator new();
          v41 = v40;
          v40->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v40->__shared_owners_;
          v40->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v40->__shared_weak_owners_ = 0;
          v40[1].__vftable = v39;
          object = v39;
          __p[0] = v39;
          __p[1] = v40;
          do
            v43 = __ldxr(p_shared_owners);
          while (__stxr(v43 + 1, p_shared_owners));
          memset(v237, 0, sizeof(v237));
          do
            v44 = __ldaxr(p_shared_owners);
          while (__stlxr(v44 - 1, p_shared_owners));
          if (!v44)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v41);
          }
          v45 = object;
          *(_WORD *)_os_log_pack_fill() = 0;
          v46 = operator new();
          v47 = *(unsigned __int8 *)(v211 + 39);
          v48 = v214;
          if ((v47 & 0x80u) != 0)
          {
            v48 = *(_QWORD *)(v211 + 16);
            v47 = *(_QWORD *)(v211 + 24);
          }
          *(_QWORD *)v46 = v45;
          *(_OWORD *)(v46 + 8) = *(_OWORD *)__p;
          __p[0] = 0;
          __p[1] = 0;
          *(_OWORD *)(v46 + 24) = *(_OWORD *)v237;
          *(_OWORD *)v237 = 0uLL;
          *(_QWORD *)(v46 + 40) = v48;
          *(_QWORD *)(v46 + 48) = v47;
          *(_BYTE *)(v46 + 56) = 1;
          v241 = 0;
          v242 = v46;
          (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v223 + 24) + 40))(*(_QWORD *)(v223 + 24), &v242);
          v49 = v242;
          v242 = 0;
          v50 = v217;
          if (v49)
          {
            v51 = *(std::__shared_weak_count **)(v49 + 32);
            if (v51)
            {
              v52 = (unint64_t *)&v51->__shared_owners_;
              do
                v53 = __ldaxr(v52);
              while (__stlxr(v53 - 1, v52));
              if (!v53)
              {
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
              }
            }
            v54 = *(std::__shared_weak_count **)(v49 + 16);
            if (v54)
            {
              v55 = (unint64_t *)&v54->__shared_owners_;
              do
                v56 = __ldaxr(v55);
              while (__stlxr(v56 - 1, v55));
              if (!v56)
              {
                ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                std::__shared_weak_count::__release_weak(v54);
              }
            }
            MEMORY[0x227684CE8](v49, 0x10F0C40B62ED6C6);
            v57 = v241;
            v241 = 0;
            if (v57)
            {
              v58 = *(std::__shared_weak_count **)(v57 + 32);
              if (v58)
              {
                v59 = (unint64_t *)&v58->__shared_owners_;
                do
                  v60 = __ldaxr(v59);
                while (__stlxr(v60 - 1, v59));
                if (!v60)
                {
                  ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
                  std::__shared_weak_count::__release_weak(v58);
                }
              }
              v61 = *(std::__shared_weak_count **)(v57 + 16);
              if (v61)
              {
                v62 = (unint64_t *)&v61->__shared_owners_;
                do
                  v63 = __ldaxr(v62);
                while (__stlxr(v63 - 1, v62));
                if (!v63)
                {
                  ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
                  std::__shared_weak_count::__release_weak(v61);
                }
              }
              MEMORY[0x227684CE8](v57, 0x10F0C40B62ED6C6);
            }
          }
          v64 = *(std::__shared_weak_count **)&v237[8];
          if (*(_QWORD *)&v237[8])
          {
            v65 = (unint64_t *)(*(_QWORD *)&v237[8] + 8);
            do
              v66 = __ldaxr(v65);
            while (__stlxr(v66 - 1, v65));
            if (!v66)
            {
              ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
              std::__shared_weak_count::__release_weak(v64);
            }
          }
          v67 = (std::__shared_weak_count *)__p[1];
          if (__p[1])
          {
            v68 = (unint64_t *)((char *)__p[1] + 8);
            do
              v69 = __ldaxr(v68);
            while (__stlxr(v69 - 1, v68));
            if (!v69)
            {
              ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
              std::__shared_weak_count::__release_weak(v67);
            }
          }
        }
        else
        {
          os_log_type_enabled(v37, OS_LOG_TYPE_INFO);
          LOWORD(object) = 0;
          v70 = (void *)_os_log_send_and_compose_impl();
          v50 = v217;
          if (v70)
            free(v70);
        }
        if (v50)
        {
          sub_22322C138((uint64_t)v227, "Occupancy computation configured to use active depth mask, but, distance transform image not provided. Will consider all depth pixels as active. Note: expected on iOS.");
          sub_223182C08((uint64_t)v227);
        }
        sub_223182C08((uint64_t)v227);
        v71 = v233;
        if (v233)
        {
          v72 = (unint64_t *)&v233->__shared_owners_;
          do
            v73 = __ldaxr(v72);
          while (__stlxr(v73 - 1, v72));
          if (!v73)
          {
            ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
            std::__shared_weak_count::__release_weak(v71);
          }
        }
        goto LABEL_99;
      }
    }
    memmove(v31, v29, v28);
    goto LABEL_32;
  }
  v25 = 0;
LABEL_100:
  if (2 * v25 >= (unint64_t)*(unsigned int *)(a1 + 36)
    || 2 * v25 >= (unint64_t)*(unsigned int *)(a1 + 32))
  {
    v75 = 0;
  }
  else
  {
    v75 = v25;
  }
  v13.i32[0] = 0.75;
  if ((float)(*(float *)(a6 + 8) + 0.0) >= 0.75)
    v76 = *(float *)(a6 + 8) + 0.0;
  else
    v76 = 0.75;
  v77 = *(_QWORD *)(a5 + 8);
  if (!v77)
    goto LABEL_126;
  v78 = *(std::__shared_weak_count **)(a5 + 16);
  if (!v78)
    goto LABEL_122;
  v79 = (unint64_t *)&v78->__shared_owners_;
  do
    v80 = __ldxr(v79);
  while (__stxr(v80 + 1, v79));
  do
    v81 = __ldaxr(v79);
  while (__stlxr(v81 - 1, v79));
  if (v81)
  {
    v77 = *(_QWORD *)(a5 + 8);
    v82 = *(std::__shared_weak_count **)(a5 + 16);
    if (!v82)
      goto LABEL_122;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
    std::__shared_weak_count::__release_weak(v78);
    v77 = *(_QWORD *)(a5 + 8);
    v82 = *(std::__shared_weak_count **)(a5 + 16);
    if (!v82)
      goto LABEL_122;
  }
  v83 = (unint64_t *)&v82->__shared_owners_;
  do
    v84 = __ldxr(v83);
  while (__stxr(v84 + 1, v83));
  do
    v85 = __ldaxr(v83);
  while (__stlxr(v85 - 1, v83));
  if (v85)
  {
LABEL_122:
    if (*(_BYTE *)(a5 + 49))
      goto LABEL_123;
LABEL_126:
    object = 0;
    v86 = a1;
    v87 = *(_QWORD *)(a1 + 8);
    if (!v87)
      goto LABEL_143;
    goto LABEL_127;
  }
  ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
  std::__shared_weak_count::__release_weak(v82);
  if (!*(_BYTE *)(a5 + 49))
    goto LABEL_126;
LABEL_123:
  (*(void (**)(void **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v77 + 96))(&object, v77, 0);
  v86 = a1;
  v87 = *(_QWORD *)(a1 + 8);
  if (!v87)
    goto LABEL_143;
LABEL_127:
  v88 = *(std::__shared_weak_count **)(v86 + 16);
  if (v88)
  {
    v89 = (unint64_t *)&v88->__shared_owners_;
    do
      v90 = __ldxr(v89);
    while (__stxr(v90 + 1, v89));
    do
      v91 = __ldaxr(v89);
    while (__stlxr(v91 - 1, v89));
    if (!v91)
    {
      ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
      std::__shared_weak_count::__release_weak(v88);
    }
    v86 = a1;
    v87 = *(_QWORD *)(a1 + 8);
    v92 = *(std::__shared_weak_count **)(a1 + 16);
    if (v92)
    {
      v93 = (unint64_t *)&v92->__shared_owners_;
      do
        v94 = __ldxr(v93);
      while (__stxr(v94 + 1, v93));
      do
        v95 = __ldaxr(v93);
      while (__stlxr(v95 - 1, v93));
      if (!v95)
      {
        ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
        std::__shared_weak_count::__release_weak(v92);
      }
      v86 = a1;
    }
  }
  if (!*(_BYTE *)(v86 + 49))
  {
LABEL_143:
    v227[0] = 0;
    v224 = 0;
    v96 = *(_DWORD *)(a5 + 32);
    if (!v96)
      goto LABEL_208;
    goto LABEL_144;
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v87 + 96))(v227, v87, 0);
  v86 = a1;
  v224 = 0;
  v96 = *(_DWORD *)(a5 + 32);
  if (!v96)
    goto LABEL_208;
LABEL_144:
  v97 = *(_DWORD *)(a5 + 36);
  if (!v97)
    goto LABEL_208;
  v98 = *(unsigned int *)(a5 + 40);
  v99 = *(unsigned int *)(a5 + 44);
  v225 = *(unsigned int *)(v86 + 40);
  v215 = *(unsigned int *)(v86 + 44);
  v100 = *(_BYTE **)(a5 + 24);
  v218 = *(_DWORD *)(a5 + 36);
  if (*(_BYTE *)(a5 + 48) && v100)
  {
    v101 = *(_QWORD *)(a5 + 8);
    v102 = *(std::__shared_weak_count **)(a5 + 16);
    if (v102)
    {
      v103 = (unint64_t *)&v102->__shared_owners_;
      do
        v104 = __ldxr(v103);
      while (__stxr(v104 + 1, v103));
      do
        v105 = __ldaxr(v103);
      while (__stlxr(v105 - 1, v103));
      if (!v105)
      {
        ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
        std::__shared_weak_count::__release_weak(v102);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v101 + 88))(v101, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v100 = *(_BYTE **)(a5 + 24);
    v86 = a1;
    v97 = v218;
  }
  v106 = *(__int16 **)(v86 + 24);
  if (*(_BYTE *)(v86 + 48) && v106)
  {
    v107 = *(_QWORD *)(a1 + 8);
    v108 = *(std::__shared_weak_count **)(a1 + 16);
    if (v108)
    {
      v109 = (unint64_t *)&v108->__shared_owners_;
      do
        v110 = __ldxr(v109);
      while (__stxr(v110 + 1, v109));
      do
        v111 = __ldaxr(v109);
      while (__stlxr(v111 - 1, v109));
      if (!v111)
      {
        v212 = v107;
        ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
        std::__shared_weak_count::__release_weak(v108);
        v107 = v212;
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v107 + 88))(v107, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v106 = *(__int16 **)(a1 + 24);
    v97 = v218;
  }
  v112 = v96 - 1;
  v113 = v97 - 1;
  if (v97 != 1)
  {
    v114 = 2 * v215;
    v115 = 0;
    if (v96 == 1)
    {
      v137 = (v97 - 2) + 1;
      v138 = v100;
      do
      {
        _H1 = *v106;
        __asm { FCVT            S1, H1 }
        v142 = _S1 < 1.0 && *v138 == 10;
        LOBYTE(v115) = v115 | v142;
        v138 += v99;
        v106 = (__int16 *)((char *)v106 + v114);
        --v113;
      }
      while (v113);
      v100 += v137 * v99;
      goto LABEL_201;
    }
    v116 = 0;
    v117 = (v97 - 2) + 1;
    v118 = v100;
    do
    {
      v119 = v106;
      v120 = v96 - 1;
      v121 = v118;
      do
      {
        _H1 = *v119;
        __asm { FCVT            S1, H1 }
        v127 = _S1 < 1.0 && *v121 == 10;
        v115 |= v127;
        v121 += v98;
        v119 += v225;
        --v120;
      }
      while (v120);
      _H1 = *v119;
      __asm { FCVT            S1, H1 }
      v131 = _S1 < 1.0 && *v121 == 10;
      v115 |= v131;
      v118 += v99;
      v106 = (__int16 *)((char *)v106 + v114);
      ++v116;
    }
    while (v116 != v113);
    v100 += v117 * v99;
    goto LABEL_183;
  }
  LOBYTE(v115) = 0;
  if (v96 != 1)
  {
LABEL_183:
    v132 = v100;
    do
    {
      _H1 = *v106;
      __asm { FCVT            S1, H1 }
      v136 = _S1 < 1.0 && *v132 == 10;
      LOBYTE(v115) = v115 | v136;
      v132 += v98;
      v106 += v225;
      --v112;
    }
    while (v112);
    v100 += ((v96 - 2) + 1) * v98;
  }
LABEL_201:
  _H0 = *v106;
  __asm { FCVT            S0, H0 }
  v13.i32[0] = 1.0;
  v146 = _S0 < 1.0 && *v100 == 10;
  v224 = v115 | v146;
  v86 = a1;
LABEL_208:
  v147 = v227[0];
  v227[0] = 0;
  if (v147)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v147 + 8))(v147);
    v86 = a1;
  }
  v216 = a5;
  v148 = object;
  object = 0;
  if (v148)
  {
    (*(void (**)(void *))(*(_QWORD *)v148 + 8))(v148);
    v86 = a1;
  }
  v149 = *(unsigned int *)(v86 + 36) - v75;
  if (v75 != v149)
  {
    v219 = -2 * v75;
    v13.i32[0] = 1.0;
    for (i = v75; i != v149; ++i)
    {
      v164 = *(unsigned int *)(v86 + 32);
      if (v164 != 2 * v75)
      {
        v165 = *(_DWORD *)(v86 + 40);
        v166 = *(_QWORD *)(v86 + 24) + 2 * (*(_DWORD *)(v86 + 44) * i);
        v167 = *(_DWORD *)(a2 + 40);
        v168 = *(_QWORD *)(a2 + 24) + 2 * (*(_DWORD *)(a2 + 44) * i);
        v169 = *(_DWORD *)(a4 + 40);
        v170 = *(_QWORD *)(a4 + 24) + 4 * (*(_DWORD *)(a4 + 44) * i);
        v171 = *(_DWORD *)(a8 + 40);
        v172 = *(_QWORD *)(a8 + 24) + (*(_DWORD *)(a8 + 44) * i);
        v173 = *(_DWORD *)(v221 + 40);
        v174 = *(_QWORD *)(v221 + 24) + 4 * (*(_DWORD *)(v221 + 44) * i);
        if (v224)
        {
          v175 = *(_DWORD *)(v216 + 40);
          v176 = *(_QWORD *)(v216 + 24) + (*(_DWORD *)(v216 + 44) * i);
          v177 = v219 + v164;
          v178 = v75 * v173;
          v179 = v75 * v171;
          v180 = v75 * v175;
          v181 = v75 * v169;
          v182 = v75 * v165;
          v183 = v75 * v167;
          v86 = a1;
          while (1)
          {
            if ((v19 & 1) == 0)
            {
              LODWORD(_D2) = *(_DWORD *)(v174 + 4 * v178);
              if (*(float *)&_D2 > 10.0)
                goto LABEL_240;
            }
            _H2 = *(_WORD *)(v168 + 2 * v183);
            __asm { FCVT            S2, H2 }
            if (v76 > *(float *)&_D2)
              goto LABEL_240;
            _H2 = *(_WORD *)(v166 + 2 * v182);
            __asm { FCVT            S2, H2 }
            LODWORD(v15) = *(_DWORD *)a6;
            LODWORD(v16) = *(_DWORD *)(a6 + 4);
            if (*(float *)a6 >= *(float *)&_D2 || *(float *)&v16 <= *(float *)&_D2)
              goto LABEL_240;
            LODWORD(v15) = *(_DWORD *)(v170 + 4 * v181);
            LODWORD(v16) = -947920896;
            if (*(float *)&v15 > -65504.0)
              goto LABEL_240;
            if (*(float *)&_D2 < 1.0)
            {
              v187 = *(unsigned __int8 *)(v176 + v180);
              if (byte_25578E69A)
              {
                v86 = a1;
                if (v187 > 0x29)
                  goto LABEL_240;
              }
              else
              {
                v15 = dbl_22465472C;
                xmmword_25578E670 = xmmword_22465471C;
                unk_25578E680 = *(_OWORD *)&dbl_22465472C;
                _D2 = dbl_224654736[0];
                unk_25578E68A = *(_OWORD *)dbl_224654736;
                byte_25578E69A = 1;
                v86 = a1;
                if (v187 > 0x29)
                  goto LABEL_240;
              }
              if (!*((_BYTE *)&xmmword_25578E670 + v187))
                goto LABEL_240;
            }
            *(_BYTE *)(v172 + v179) = 1;
LABEL_240:
            v178 += v173;
            v179 += v171;
            v180 += v175;
            v181 += v169;
            v182 += v165;
            v183 += v167;
            if (!--v177)
              goto LABEL_235;
          }
        }
        v188 = v219 + v164;
        v189 = v75 * v173;
        v190 = v75 * v171;
        v191 = v75 * v169;
        v192 = v75 * v165;
        v193 = v75 * v167;
        v86 = a1;
        do
        {
          if ((v19 & 1) != 0 || (LODWORD(_D2) = *(_DWORD *)(v174 + 4 * v189), *(float *)&_D2 <= 10.0))
          {
            _H2 = *(_WORD *)(v168 + 2 * v193);
            __asm { FCVT            S2, H2 }
            if (v76 <= *(float *)&_D2)
            {
              _H2 = *(_WORD *)(v166 + 2 * v192);
              __asm { FCVT            S2, H2 }
              LODWORD(v15) = *(_DWORD *)a6;
              LODWORD(v16) = *(_DWORD *)(a6 + 4);
              if (*(float *)a6 < *(float *)&_D2 && *(float *)&v16 > *(float *)&_D2)
              {
                LODWORD(_D2) = *(_DWORD *)(v170 + 4 * v191);
                LODWORD(v15) = -947920896;
                if (*(float *)&_D2 <= -65504.0)
                  *(_BYTE *)(v172 + v190) = 1;
              }
            }
          }
          v189 += v173;
          v190 += v171;
          v191 += v169;
          v192 += v165;
          v193 += v167;
          --v188;
        }
        while (v188);
      }
LABEL_235:
      ;
    }
  }
  if (v19)
    v150 = 29;
  else
    v150 = 15;
  object = &off_24EC21420;
  v151 = *(void **)(a8 + 8);
  v152 = *(std::__shared_weak_count **)(a8 + 16);
  if (!v152)
  {
    v197 = *(_WORD *)(a8 + 48);
    v198 = *(_QWORD *)(a8 + 24);
    __p[0] = *(void **)(a8 + 8);
    __p[1] = 0;
    *(_QWORD *)v237 = v198;
    v158 = *(_OWORD *)(a8 + 32);
    *(_OWORD *)&v237[8] = v158;
    LOWORD(v238) = v197;
    if (v158 >= v150 && *(_DWORD *)&v237[12] >= v150)
      goto LABEL_280;
LABEL_288:
    v206 = 0;
    v207 = (std::__shared_weak_count *)__p[1];
    if (!__p[1])
      return v206;
    goto LABEL_294;
  }
  v153 = (unint64_t *)&v152->__shared_owners_;
  do
    v154 = __ldxr(v153);
  while (__stxr(v154 + 1, v153));
  v155 = *(_WORD *)(a8 + 48);
  do
    v156 = __ldxr(v153);
  while (__stxr(v156 + 1, v153));
  v157 = *(_QWORD *)(a8 + 24);
  v158 = *(_OWORD *)(a8 + 32);
  *(_OWORD *)&v237[8] = v158;
  do
    v159 = __ldxr(v153);
  while (__stxr(v159 + 1, v153));
  __p[0] = v151;
  __p[1] = v152;
  *(_QWORD *)v237 = v157;
  LOWORD(v238) = v155;
  do
    v160 = __ldaxr(v153);
  while (__stlxr(v160 - 1, v153));
  if (!v160)
  {
    ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
    std::__shared_weak_count::__release_weak(v152);
  }
  do
    v161 = __ldaxr(v153);
  while (__stlxr(v161 - 1, v153));
  if (!v161)
  {
    ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
    std::__shared_weak_count::__release_weak(v152);
    if (*(_DWORD *)&v237[8] >= v150 && *(_DWORD *)&v237[12] >= v150)
      goto LABEL_280;
    goto LABEL_288;
  }
  if (*(_DWORD *)&v237[8] < v150 || *(_DWORD *)&v237[12] < v150)
    goto LABEL_288;
LABEL_280:
  sub_2239090F4(a7, (uint64_t)&object, a9, v150, *(float *)&v158, v13, _D2, v15, v16, v17);
  v201 = *(unsigned int *)(a9 + 36);
  if ((_DWORD)v201)
  {
    if (!*(_DWORD *)(a9 + 32))
      goto LABEL_288;
    v202 = 0;
    v203 = 1;
LABEL_283:
    v204 = 0;
    v205 = *(unsigned int *)(a9 + 32);
    while (*(float *)(*(_QWORD *)(a9 + 24) + 4 * (*(_DWORD *)(a9 + 44) * v202) + 4 * v204) <= 0.8)
    {
      v204 += *(_DWORD *)(a9 + 40);
      if (!--v205)
      {
        v206 = 0;
        v203 = ++v202 < v201;
        if (v202 != v201)
          goto LABEL_283;
        goto LABEL_293;
      }
    }
    v206 = v203;
    v207 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
      goto LABEL_294;
  }
  else
  {
    v206 = 0;
LABEL_293:
    v207 = (std::__shared_weak_count *)__p[1];
    if (__p[1])
    {
LABEL_294:
      v208 = (unint64_t *)&v207->__shared_owners_;
      do
        v209 = __ldaxr(v208);
      while (__stlxr(v209 - 1, v208));
      if (!v209)
      {
        ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
        std::__shared_weak_count::__release_weak(v207);
      }
    }
  }
  return v206;
}

void sub_2239076CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37)
  {
    if (a36 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_22390770C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  sub_22319A054((uint64_t *)(v31 - 112));
  sub_22319A054((uint64_t *)(v31 - 120));
  sub_223199DE8((uint64_t)&a31);
  sub_223182DAC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_223907738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_223199DE8((uint64_t)&a31);
  sub_223182DAC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_223907754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  MEMORY[0x227684CE8](v13, 0x10D0C40B950D02ALL);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223907780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22390779C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_223182DAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2239077B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *object,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38)
{
  if (a38 && a37 < 0)
    operator delete(__p);
  if (object)
    os_release(object);
  sub_223182DAC((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_2239077F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (!a31)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a31 + 8))(a31);
  _Unwind_Resume(exception_object);
}

void sub_223907858(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  std::mutex *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void **v10;
  void *v11;
  void **v12;
  void *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  std::mutex *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  std::string *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t (**v62)();
  uint64_t v63;
  uint64_t (***v64)();
  uint64_t (**v65)();
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t *v78;
  unint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  std::mutex *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  std::string *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  unint64_t v117;
  _BYTE *v118;
  int v119;
  int v120;
  int v121;
  int v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t (**v125)();
  uint64_t v126;
  uint64_t (***v127)();
  uint64_t (**v128)();
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t *v136;
  unint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t *v141;
  unint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  std::mutex *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  std::string *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  unint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  uint64_t v165;
  unint64_t *v166;
  unint64_t v167;
  unint64_t v168;
  int v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  float *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  std::__shared_weak_count *v179;
  unint64_t *v180;
  unint64_t v181;
  unint64_t v182;
  float *v183;
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  float *v189;
  float *v190;
  int v191;
  float v192;
  float v193;
  float v194;
  float v195;
  float v196;
  uint64_t (**v197)();
  uint64_t v198;
  uint64_t (***v199)();
  uint64_t (**v200)();
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t *v206;
  unint64_t v207;
  unint64_t *v208;
  unint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t *v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  int v218;
  int v219;
  int v220;
  uint64_t *v221;
  uint64_t *v222;
  uint64_t *v223;
  uint64_t v224;
  void *__p[2];
  __int128 v226;
  int v227;
  std::string v228;
  __int128 v229;
  uint64_t (**v230)();
  uint64_t v231;
  uint64_t v232;
  _BYTE v233[23];
  __int16 v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  uint64_t (**v240)();
  uint64_t v241;
  const char *v242;
  uint64_t v243;
  _QWORD v244[5];
  unsigned int v245;
  unsigned int v246;
  char v247;
  char v248;
  uint64_t v249;

  v249 = *MEMORY[0x24BDAC8D0];
  sub_224569D7C();
  sub_224569A80();
  if (!os_variant_has_internal_diagnostics())
    return;
  v2 = sub_2241471F8();
  v3 = v2[2];
  if (!v3)
  {
    v4 = v2;
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v3 = v4[2];
  }
  v5 = *(_QWORD *)(v3 + 64);
  v6 = (std::mutex *)(v5 + 32);
  std::mutex::lock((std::mutex *)(v5 + 32));
  v8 = *(_QWORD *)(v5 + 96);
  v7 = *(_QWORD *)(v5 + 104);
  std::mutex::unlock(v6);
  if (v8 == v7)
    return;
  v240 = (uint64_t (**)())"cv3d.recon.";
  v241 = 11;
  v242 = "Monitoring";
  v243 = 10;
  sub_2231A9820((uint64_t)&v240, (uint64_t)v244, 0, 0, (std::string *)__p);
  v9 = (void *)BYTE7(v226);
  v10 = (void **)__p[0];
  v11 = __p[1];
  sub_2241471F8();
  if ((char)v9 >= 0)
    v12 = __p;
  else
    v12 = v10;
  if ((char)v9 >= 0)
    v13 = v9;
  else
    v13 = v11;
  v14 = (*(uint64_t (**)(uint64_t *, void **, void *))(qword_2557952E0 + 48))(&qword_2557952E0, v12, v13);
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14);
  v16 = v15;
  if (SBYTE7(v226) < 0)
  {
    operator delete(__p[0]);
    if ((v16 & 1) == 0)
      return;
  }
  else if ((v15 & 1) == 0)
  {
    return;
  }
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v17 = sub_2241471F8();
    v18 = v17[2];
    if (!v18)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v18 = v17[2];
    }
    v19 = *(_QWORD *)(v18 + 64);
    v20 = (std::mutex *)(v19 + 32);
    std::mutex::lock((std::mutex *)(v19 + 32));
    v22 = *(_QWORD *)(v19 + 96);
    v21 = *(_QWORD *)(v19 + 104);
    std::mutex::unlock(v20);
    if (v22 != v21)
    {
      v240 = (uint64_t (**)())"cv3d.recon.";
      v241 = 11;
      v242 = "Monitoring.Novelty.Occupancy";
      v243 = 28;
      sub_2231A9820((uint64_t)&v240, (uint64_t)v244, 0, 0, &v228);
      v23 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
      v24 = *(_OWORD *)&v228.__r_.__value_.__l.__data_;
      sub_2241471F8();
      if ((v23 & 0x80u) == 0)
        v25 = &v228;
      else
        v25 = (std::string *)v24;
      if ((v23 & 0x80u) == 0)
        v26 = v23;
      else
        v26 = *((_QWORD *)&v24 + 1);
      v27 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v25, v26);
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v27 + 24))(v27))
      {
LABEL_111:
        if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v228.__r_.__value_.__l.__data_);
        goto LABEL_113;
      }
      *(_OWORD *)__p = 0u;
      v226 = 0u;
      v227 = 728325616;
      kdebug_trace();
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v27 + 24))(v27)
        || (*(_QWORD *)&v229 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
            *((_QWORD *)&v229 + 1) = 2,
            v28 = sub_2241471F8(),
            !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v27 + 24))(v27)))
      {
LABEL_110:
        kdebug_trace();
        goto LABEL_111;
      }
      v240 = &off_24EC24788;
      sub_2231F8D1C((_DWORD *)(a1 + 64), &v241);
      v29 = *(_QWORD *)(a1 + 8);
      v30 = *(std::__shared_weak_count **)(a1 + 16);
      if (v30)
      {
        p_shared_owners = (unint64_t *)&v30->__shared_owners_;
        do
          v32 = __ldxr(p_shared_owners);
        while (__stxr(v32 + 1, p_shared_owners));
        do
          v33 = __ldaxr(p_shared_owners);
        while (__stlxr(v33 - 1, p_shared_owners));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
        if (!v29)
          goto LABEL_47;
        v29 = *(_QWORD *)(a1 + 8);
        v34 = *(std::__shared_weak_count **)(a1 + 16);
        if (v34)
        {
          v35 = (unint64_t *)&v34->__shared_owners_;
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
          do
            v37 = __ldaxr(v35);
          while (__stlxr(v37 - 1, v35));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
      }
      else if (!v29)
      {
        goto LABEL_47;
      }
      if (*(_BYTE *)(a1 + 81))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v29 + 96))(v233, v29, 0);
        goto LABEL_48;
      }
LABEL_47:
      *(_QWORD *)v233 = 0;
LABEL_48:
      v38 = v241;
      v39 = (std::__shared_weak_count *)v242;
      if (v242)
      {
        v40 = (unint64_t *)(v242 + 8);
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
      }
      if (v38 && v248)
        (*(void (**)(uint64_t (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v241 + 96))(&v230, v241, 1);
      else
        v230 = 0;
      v43 = *(_DWORD *)(a1 + 64);
      if (v43)
      {
        v44 = *(_DWORD *)(a1 + 68);
        if (v44)
        {
          v221 = v28;
          v46 = *(unsigned int *)(a1 + 72);
          v45 = *(unsigned int *)(a1 + 76);
          v47 = v245;
          v48 = v246;
          v49 = *(_BYTE **)(a1 + 56);
          v217 = *(_DWORD *)(a1 + 68);
          v219 = *(_DWORD *)(a1 + 64);
          if (*(_BYTE *)(a1 + 80) && v49)
          {
            v50 = *(_QWORD *)(a1 + 8);
            v51 = *(std::__shared_weak_count **)(a1 + 16);
            if (v51)
            {
              v52 = (unint64_t *)&v51->__shared_owners_;
              do
                v53 = __ldxr(v52);
              while (__stxr(v53 + 1, v52));
              do
                v54 = __ldaxr(v52);
              while (__stlxr(v54 - 1, v52));
              if (!v54)
              {
                v215 = v50;
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
                v50 = v215;
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v50 + 88))(v50, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
            v49 = *(_BYTE **)(a1 + 56);
            v44 = v217;
            v43 = v219;
          }
          v55 = (_BYTE *)v244[0];
          if (v247 && v244[0])
          {
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v241 + 88))(v241, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
            v55 = (_BYTE *)v244[0];
            v44 = v217;
            v43 = v219;
          }
          v56 = v43 - 1;
          v57 = v44 - 1;
          if (v44 != 1)
          {
            if (v56)
            {
              v58 = 0;
              do
              {
                v59 = v56;
                v60 = v49;
                v61 = v55;
                do
                {
                  *v61 = -*v60;
                  v60 += v46;
                  v61 += v47;
                  --v59;
                }
                while (v59);
                *v61 = -*v60;
                v49 += v45;
                v55 += v48;
                ++v58;
              }
              while (v58 != v57);
            }
            else
            {
              do
              {
                *v55 = -*v49;
                v49 += v45;
                v55 += v48;
                --v57;
              }
              while (v57);
            }
          }
          for (; v56; --v56)
          {
            *v55 = -*v49;
            v49 += v46;
            v55 += v47;
          }
          *v55 = -*v49;
          v28 = v221;
        }
      }
      v62 = v230;
      v230 = 0;
      if (v62)
        (*((void (**)(uint64_t (**)()))*v62 + 1))(v62);
      v63 = *(_QWORD *)v233;
      *(_QWORD *)v233 = 0;
      if (v63)
        (*(void (**)(uint64_t))(*(_QWORD *)v63 + 8))(v63);
      strcpy(v233, "ActiveMask");
      *(_QWORD *)&v233[11] = v238;
      *(_DWORD *)&v233[19] = v239;
      v234 = 266;
      v238 = 0;
      v239 = 0;
      sub_2233B3528((uint64_t)&v240, (__int128 *)v233, &v229, &v235);
      if (HIBYTE(v234) && (char)v234 < 0)
        operator delete(*(void **)v233);
      sub_223167354((uint64_t)&v241);
      v64 = (uint64_t (***)())(*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 56))(v27);
      v65 = *v64;
      v66 = (std::__shared_weak_count *)v64[1];
      if (v66)
      {
        v67 = (unint64_t *)&v66->__shared_owners_;
        do
          v68 = __ldxr(v67);
        while (__stxr(v68 + 1, v67));
      }
      v70 = v236;
      v69 = v237;
      v230 = &off_24EC6A3B8;
      v231 = v236;
      v232 = v237;
      v236 = 0;
      v237 = 0;
      v240 = v65;
      v241 = (uint64_t)v66;
      if (v66)
      {
        v71 = (unint64_t *)&v66->__shared_owners_;
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 1, v71));
      }
      v242 = (const char *)&off_24EC6A3B8;
      v243 = v70;
      v244[0] = v69;
      if (v69)
      {
        v73 = (unint64_t *)(v69 + 8);
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
      }
      (*(void (**)(uint64_t *, uint64_t (***)()))(*v28 + 16))(v28, &v240);
      sub_2241231D8((uint64_t)&v242);
      v75 = (std::__shared_weak_count *)v241;
      if (v241)
      {
        v76 = (unint64_t *)(v241 + 8);
        do
          v77 = __ldaxr(v76);
        while (__stlxr(v77 - 1, v76));
        if (!v77)
        {
          ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
          std::__shared_weak_count::__release_weak(v75);
        }
      }
      sub_2241231D8((uint64_t)&v230);
      if (v66)
      {
        v78 = (unint64_t *)&v66->__shared_owners_;
        do
          v79 = __ldaxr(v78);
        while (__stlxr(v79 - 1, v78));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
          std::__shared_weak_count::__release_weak(v66);
        }
      }
      sub_2241231D8((uint64_t)&v235);
      goto LABEL_110;
    }
  }
LABEL_113:
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v80 = sub_2241471F8();
    v81 = v80[2];
    if (!v81)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v81 = v80[2];
    }
    v82 = *(_QWORD *)(v81 + 64);
    v83 = (std::mutex *)(v82 + 32);
    std::mutex::lock((std::mutex *)(v82 + 32));
    v85 = *(_QWORD *)(v82 + 96);
    v84 = *(_QWORD *)(v82 + 104);
    std::mutex::unlock(v83);
    if (v85 != v84)
    {
      v240 = (uint64_t (**)())"cv3d.recon.";
      v241 = 11;
      v242 = "Monitoring.Novelty.Occupancy";
      v243 = 28;
      sub_2231A9820((uint64_t)&v240, (uint64_t)v244, 0, 0, &v228);
      v86 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
      v87 = *(_OWORD *)&v228.__r_.__value_.__l.__data_;
      sub_2241471F8();
      if ((v86 & 0x80u) == 0)
        v88 = &v228;
      else
        v88 = (std::string *)v87;
      if ((v86 & 0x80u) == 0)
        v89 = v86;
      else
        v89 = *((_QWORD *)&v87 + 1);
      v90 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v88, v89);
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v90 + 24))(v90))
      {
LABEL_208:
        if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v228.__r_.__value_.__l.__data_);
        goto LABEL_210;
      }
      *(_OWORD *)__p = 0u;
      v226 = 0u;
      v227 = 728325616;
      kdebug_trace();
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v90 + 24))(v90)
        || (*(_QWORD *)&v229 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
            *((_QWORD *)&v229 + 1) = 2,
            v91 = sub_2241471F8(),
            !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v90 + 24))(v90)))
      {
LABEL_207:
        kdebug_trace();
        goto LABEL_208;
      }
      v240 = &off_24EC24788;
      sub_2231F8D1C((_DWORD *)(a1 + 64), &v241);
      v92 = *(_QWORD *)(a1 + 8);
      v93 = *(std::__shared_weak_count **)(a1 + 16);
      if (v93)
      {
        v94 = (unint64_t *)&v93->__shared_owners_;
        do
          v95 = __ldxr(v94);
        while (__stxr(v95 + 1, v94));
        do
          v96 = __ldaxr(v94);
        while (__stlxr(v96 - 1, v94));
        if (!v96)
        {
          ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
          std::__shared_weak_count::__release_weak(v93);
        }
        if (!v92)
          goto LABEL_144;
        v92 = *(_QWORD *)(a1 + 8);
        v97 = *(std::__shared_weak_count **)(a1 + 16);
        if (v97)
        {
          v98 = (unint64_t *)&v97->__shared_owners_;
          do
            v99 = __ldxr(v98);
          while (__stxr(v99 + 1, v98));
          do
            v100 = __ldaxr(v98);
          while (__stlxr(v100 - 1, v98));
          if (!v100)
          {
            ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
            std::__shared_weak_count::__release_weak(v97);
          }
        }
      }
      else if (!v92)
      {
        goto LABEL_144;
      }
      if (*(_BYTE *)(a1 + 81))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v92 + 96))(v233, v92, 0);
        goto LABEL_145;
      }
LABEL_144:
      *(_QWORD *)v233 = 0;
LABEL_145:
      v101 = v241;
      v102 = (std::__shared_weak_count *)v242;
      if (v242)
      {
        v103 = (unint64_t *)(v242 + 8);
        do
          v104 = __ldxr(v103);
        while (__stxr(v104 + 1, v103));
        do
          v105 = __ldaxr(v103);
        while (__stlxr(v105 - 1, v103));
        if (!v105)
        {
          ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
          std::__shared_weak_count::__release_weak(v102);
        }
      }
      if (v101 && v248)
        (*(void (**)(uint64_t (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v241 + 96))(&v230, v241, 1);
      else
        v230 = 0;
      v106 = *(_DWORD *)(a1 + 64);
      if (v106)
      {
        v107 = *(_DWORD *)(a1 + 68);
        if (v107)
        {
          v222 = v91;
          v109 = *(unsigned int *)(a1 + 72);
          v108 = *(unsigned int *)(a1 + 76);
          v110 = v245;
          v111 = v246;
          v112 = *(_BYTE **)(a1 + 56);
          v218 = *(_DWORD *)(a1 + 68);
          v220 = *(_DWORD *)(a1 + 64);
          if (*(_BYTE *)(a1 + 80) && v112)
          {
            v113 = *(_QWORD *)(a1 + 8);
            v114 = *(std::__shared_weak_count **)(a1 + 16);
            if (v114)
            {
              v115 = (unint64_t *)&v114->__shared_owners_;
              do
                v116 = __ldxr(v115);
              while (__stxr(v116 + 1, v115));
              do
                v117 = __ldaxr(v115);
              while (__stlxr(v117 - 1, v115));
              if (!v117)
              {
                v216 = v113;
                ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                std::__shared_weak_count::__release_weak(v114);
                v113 = v216;
              }
            }
            (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v113 + 88))(v113, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
            v112 = *(_BYTE **)(a1 + 56);
            v107 = v218;
            v106 = v220;
          }
          v118 = (_BYTE *)v244[0];
          if (v247 && v244[0])
          {
            (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v241 + 88))(v241, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
            v118 = (_BYTE *)v244[0];
            v107 = v218;
            v106 = v220;
          }
          v119 = v106 - 1;
          v120 = v107 - 1;
          if (v107 != 1)
          {
            if (v119)
            {
              v121 = 0;
              do
              {
                v122 = v119;
                v123 = v112;
                v124 = v118;
                do
                {
                  *v124 = -*v123;
                  v123 += v109;
                  v124 += v110;
                  --v122;
                }
                while (v122);
                *v124 = -*v123;
                v112 += v108;
                v118 += v111;
                ++v121;
              }
              while (v121 != v120);
            }
            else
            {
              do
              {
                *v118 = -*v112;
                v112 += v108;
                v118 += v111;
                --v120;
              }
              while (v120);
            }
          }
          for (; v119; --v119)
          {
            *v118 = -*v112;
            v112 += v109;
            v118 += v110;
          }
          *v118 = -*v112;
          v91 = v222;
        }
      }
      v125 = v230;
      v230 = 0;
      if (v125)
        (*((void (**)(uint64_t (**)()))*v125 + 1))(v125);
      v126 = *(_QWORD *)v233;
      *(_QWORD *)v233 = 0;
      if (v126)
        (*(void (**)(uint64_t))(*(_QWORD *)v126 + 8))(v126);
      strcpy(v233, "ChangeMask");
      *(_QWORD *)&v233[11] = v238;
      *(_DWORD *)&v233[19] = v239;
      v234 = 266;
      v238 = 0;
      v239 = 0;
      sub_2233B3528((uint64_t)&v240, (__int128 *)v233, &v229, &v235);
      if (HIBYTE(v234) && (char)v234 < 0)
        operator delete(*(void **)v233);
      sub_223167354((uint64_t)&v241);
      v127 = (uint64_t (***)())(*(uint64_t (**)(uint64_t))(*(_QWORD *)v90 + 56))(v90);
      v128 = *v127;
      v129 = (std::__shared_weak_count *)v127[1];
      if (v129)
      {
        v130 = (unint64_t *)&v129->__shared_owners_;
        do
          v131 = __ldxr(v130);
        while (__stxr(v131 + 1, v130));
      }
      v133 = v236;
      v132 = v237;
      v230 = &off_24EC6A3B8;
      v231 = v236;
      v232 = v237;
      v236 = 0;
      v237 = 0;
      v240 = v128;
      v241 = (uint64_t)v129;
      if (v129)
      {
        v134 = (unint64_t *)&v129->__shared_owners_;
        do
          v135 = __ldxr(v134);
        while (__stxr(v135 + 1, v134));
      }
      v242 = (const char *)&off_24EC6A3B8;
      v243 = v133;
      v244[0] = v132;
      if (v132)
      {
        v136 = (unint64_t *)(v132 + 8);
        do
          v137 = __ldxr(v136);
        while (__stxr(v137 + 1, v136));
      }
      (*(void (**)(uint64_t *, uint64_t (***)()))(*v91 + 16))(v91, &v240);
      sub_2241231D8((uint64_t)&v242);
      v138 = (std::__shared_weak_count *)v241;
      if (v241)
      {
        v139 = (unint64_t *)(v241 + 8);
        do
          v140 = __ldaxr(v139);
        while (__stlxr(v140 - 1, v139));
        if (!v140)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
      }
      sub_2241231D8((uint64_t)&v230);
      if (v129)
      {
        v141 = (unint64_t *)&v129->__shared_owners_;
        do
          v142 = __ldaxr(v141);
        while (__stlxr(v142 - 1, v141));
        if (!v142)
        {
          ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
          std::__shared_weak_count::__release_weak(v129);
        }
      }
      sub_2241231D8((uint64_t)&v235);
      goto LABEL_207;
    }
  }
LABEL_210:
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v143 = sub_2241471F8();
    v144 = v143[2];
    if (!v144)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v144 = v143[2];
    }
    v145 = *(_QWORD *)(v144 + 64);
    v146 = (std::mutex *)(v145 + 32);
    std::mutex::lock((std::mutex *)(v145 + 32));
    v148 = *(_QWORD *)(v145 + 96);
    v147 = *(_QWORD *)(v145 + 104);
    std::mutex::unlock(v146);
    if (v148 != v147)
    {
      v240 = (uint64_t (**)())"cv3d.recon.";
      v241 = 11;
      v242 = "Monitoring.Novelty.Occupancy";
      v243 = 28;
      sub_2231A9820((uint64_t)&v240, (uint64_t)v244, 0, 0, &v228);
      v149 = HIBYTE(v228.__r_.__value_.__r.__words[2]);
      v150 = *(_OWORD *)&v228.__r_.__value_.__l.__data_;
      sub_2241471F8();
      if ((v149 & 0x80u) == 0)
        v151 = &v228;
      else
        v151 = (std::string *)v150;
      if ((v149 & 0x80u) == 0)
        v152 = v149;
      else
        v152 = *((_QWORD *)&v150 + 1);
      v153 = (*(uint64_t (**)(uint64_t *, std::string *, uint64_t))(qword_2557952E0 + 48))(&qword_2557952E0, v151, v152);
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v153 + 24))(v153))
        goto LABEL_315;
      *(_OWORD *)__p = 0u;
      v226 = 0u;
      v227 = 728325616;
      kdebug_trace();
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v153 + 24))(v153)
        || (qmemcpy(&v238, "Change", 6),
            *(_QWORD *)&v229 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
            *((_QWORD *)&v229 + 1) = 2,
            v154 = sub_2241471F8(),
            !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v153 + 24))(v153)))
      {
LABEL_314:
        kdebug_trace();
LABEL_315:
        if (SHIBYTE(v228.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v228.__r_.__value_.__l.__data_);
        return;
      }
      v240 = &off_24EC216B8;
      sub_2231FF60C((_DWORD *)(a1 + 152), &v241);
      v155 = *(_QWORD *)(a1 + 96);
      v156 = *(std::__shared_weak_count **)(a1 + 104);
      if (v156)
      {
        v157 = (unint64_t *)&v156->__shared_owners_;
        do
          v158 = __ldxr(v157);
        while (__stxr(v158 + 1, v157));
        do
          v159 = __ldaxr(v157);
        while (__stlxr(v159 - 1, v157));
        if (!v159)
        {
          ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
          std::__shared_weak_count::__release_weak(v156);
        }
        if (!v155)
          goto LABEL_241;
        v155 = *(_QWORD *)(a1 + 96);
        v160 = *(std::__shared_weak_count **)(a1 + 104);
        if (v160)
        {
          v161 = (unint64_t *)&v160->__shared_owners_;
          do
            v162 = __ldxr(v161);
          while (__stxr(v162 + 1, v161));
          do
            v163 = __ldaxr(v161);
          while (__stlxr(v163 - 1, v161));
          if (!v163)
          {
            ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
            std::__shared_weak_count::__release_weak(v160);
          }
        }
      }
      else if (!v155)
      {
        goto LABEL_241;
      }
      if (*(_BYTE *)(a1 + 169))
      {
        (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v155 + 96))(v233, v155, 0);
LABEL_242:
        v165 = v241;
        v164 = (std::__shared_weak_count *)v242;
        if (v242)
        {
          v166 = (unint64_t *)(v242 + 8);
          do
            v167 = __ldxr(v166);
          while (__stxr(v167 + 1, v166));
          do
            v168 = __ldaxr(v166);
          while (__stlxr(v168 - 1, v166));
          if (!v168)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
        if (v165 && v248)
          (*(void (**)(uint64_t (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v241 + 96))(&v230, v241, 1);
        else
          v230 = 0;
        v169 = *(_DWORD *)(a1 + 152);
        if (!v169)
          goto LABEL_287;
        v170 = *(_DWORD *)(a1 + 156);
        if (!v170)
          goto LABEL_287;
        v171 = *(unsigned int *)(a1 + 160);
        v172 = *(unsigned int *)(a1 + 164);
        v173 = v245;
        v224 = v246;
        v174 = *(float **)(a1 + 144);
        if (*(_BYTE *)(a1 + 168) && v174)
        {
          v223 = v154;
          v175 = *(unsigned int *)(a1 + 164);
          v176 = v245;
          v177 = *(unsigned int *)(a1 + 160);
          v178 = *(_QWORD *)(a1 + 96);
          v179 = *(std::__shared_weak_count **)(a1 + 104);
          if (v179)
          {
            v180 = (unint64_t *)&v179->__shared_owners_;
            do
              v181 = __ldxr(v180);
            while (__stxr(v181 + 1, v180));
            do
              v182 = __ldaxr(v180);
            while (__stlxr(v182 - 1, v180));
            if (!v182)
            {
              ((void (*)(std::__shared_weak_count *))v179->__on_zero_shared)(v179);
              std::__shared_weak_count::__release_weak(v179);
            }
          }
          (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v178 + 88))(v178, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1196");
          v171 = v177;
          v173 = v176;
          v172 = v175;
          v154 = v223;
          v174 = *(float **)(a1 + 144);
        }
        v183 = (float *)v244[0];
        if (v247 && v244[0])
        {
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v241 + 88))(v241, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
          v183 = (float *)v244[0];
        }
        v184 = v169 - 1;
        v185 = v170 - 1;
        if (v170 != 1)
        {
          v186 = 4 * v172;
          v187 = 4 * v224;
          if (v169 == 1)
          {
            do
            {
              v195 = *v174;
              if (*v174 > 0.8)
                v195 = *v174 + 1.0;
              *v183 = v195;
              v174 = (float *)((char *)v174 + v186);
              v183 = (float *)((char *)v183 + v187);
              --v185;
            }
            while (v185);
            goto LABEL_284;
          }
          v188 = 0;
          do
          {
            v189 = v183;
            v190 = v174;
            v191 = v169 - 1;
            do
            {
              v192 = *v190;
              if (*v190 > 0.8)
                v192 = *v190 + 1.0;
              *v189 = v192;
              v190 += v171;
              v189 += v173;
              --v191;
            }
            while (v191);
            v193 = *v190;
            if (*v190 > 0.8)
              v193 = *v190 + 1.0;
            *v189 = v193;
            v174 = (float *)((char *)v174 + v186);
            v183 = (float *)((char *)v183 + v187);
            ++v188;
          }
          while (v188 != v185);
        }
        if (v169 != 1)
        {
          do
          {
            v194 = *v174;
            if (*v174 > 0.8)
              v194 = *v174 + 1.0;
            *v183 = v194;
            v174 += v171;
            v183 += v173;
            --v184;
          }
          while (v184);
        }
LABEL_284:
        v196 = *v174;
        if (*v174 > 0.8)
          v196 = *v174 + 1.0;
        *v183 = v196;
LABEL_287:
        v197 = v230;
        v230 = 0;
        if (v197)
          (*((void (**)(uint64_t (**)()))*v197 + 1))(v197);
        v198 = *(_QWORD *)v233;
        *(_QWORD *)v233 = 0;
        if (v198)
          (*(void (**)(uint64_t))(*(_QWORD *)v198 + 8))(v198);
        *(_QWORD *)v233 = 0x64657265746C6946;
        *(_DWORD *)&v233[8] = v238;
        *(_WORD *)&v233[12] = WORD2(v238);
        v233[14] = 0;
        *(_QWORD *)&v233[15] = 0;
        v234 = 270;
        LODWORD(v238) = 0;
        WORD2(v238) = 0;
        sub_22321B368(&v240, (__int128 *)v233, &v229, &v235);
        if (HIBYTE(v234) && (char)v234 < 0)
          operator delete(*(void **)v233);
        sub_223167354((uint64_t)&v241);
        v199 = (uint64_t (***)())(*(uint64_t (**)(uint64_t))(*(_QWORD *)v153 + 56))(v153);
        v200 = *v199;
        v201 = (std::__shared_weak_count *)v199[1];
        if (v201)
        {
          v202 = (unint64_t *)&v201->__shared_owners_;
          do
            v203 = __ldxr(v202);
          while (__stxr(v203 + 1, v202));
        }
        v205 = v236;
        v204 = v237;
        v230 = &off_24EC6A3B8;
        v231 = v236;
        v232 = v237;
        v236 = 0;
        v237 = 0;
        v240 = v200;
        v241 = (uint64_t)v201;
        if (v201)
        {
          v206 = (unint64_t *)&v201->__shared_owners_;
          do
            v207 = __ldxr(v206);
          while (__stxr(v207 + 1, v206));
        }
        v242 = (const char *)&off_24EC6A3B8;
        v243 = v205;
        v244[0] = v204;
        if (v204)
        {
          v208 = (unint64_t *)(v204 + 8);
          do
            v209 = __ldxr(v208);
          while (__stxr(v209 + 1, v208));
        }
        (*(void (**)(uint64_t *, uint64_t (***)()))(*v154 + 16))(v154, &v240);
        sub_2241231D8((uint64_t)&v242);
        v210 = (std::__shared_weak_count *)v241;
        if (v241)
        {
          v211 = (unint64_t *)(v241 + 8);
          do
            v212 = __ldaxr(v211);
          while (__stlxr(v212 - 1, v211));
          if (!v212)
          {
            ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
            std::__shared_weak_count::__release_weak(v210);
          }
        }
        sub_2241231D8((uint64_t)&v230);
        if (v201)
        {
          v213 = (unint64_t *)&v201->__shared_owners_;
          do
            v214 = __ldaxr(v213);
          while (__stlxr(v214 - 1, v213));
          if (!v214)
          {
            ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
            std::__shared_weak_count::__release_weak(v201);
          }
        }
        sub_2241231D8((uint64_t)&v235);
        goto LABEL_314;
      }
LABEL_241:
      *(_QWORD *)v233 = 0;
      goto LABEL_242;
    }
  }
}

void sub_223908DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;
  void *v45;

  v45 = a33;
  a33 = 0;
  if (v45)
    (*(void (**)(void *))(*(_QWORD *)v45 + 8))(v45);
  sub_223167354(v43);
  sub_2231874DC((uint64_t)&a13);
  if (a27 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2239090F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, float a5, int32x4_t a6, double a7, double a8, double a9, __n128 a10)
{
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  void *v16;
  void *v17;
  unint64_t v18;
  void *v19;
  void *v20;
  int v21;
  _BYTE *v22;
  float *v23;
  float v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  float v30;
  float *v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  float *v37;
  int v38;
  unsigned int v39;
  float *v40;
  float *v41;
  int v42;
  _BYTE *v43;
  float v44;
  int v45;
  int v46;
  float v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  float32x4_t *v79;
  unsigned int v80;
  int32x4_t v81;
  int32x4_t v82;
  int32x4_t v83;
  unsigned int v84;
  uint64_t v85;
  int32x4_t v86;
  uint64_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t *v90;
  float32x4_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  BOOL v98;
  BOOL v99;
  BOOL v100;
  BOOL v101;
  BOOL v102;
  BOOL v103;
  float32x4_t *v105;
  int32x4_t v106;
  int32x4_t v107;
  int32x4_t v108;
  const float *v109;
  float32x4_t v110;
  const float *v111;
  float32x4_t v112;
  float32x4_t *v113;
  unsigned int v114;
  unsigned int v115;
  int32x4_t v116;
  float32x4_t v117;
  float32x4_t *v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  _DWORD *v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  float *v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  int v143;
  _DWORD *v144;
  unsigned int v145;
  unsigned int v146;
  uint64_t v147;
  int v148;
  unsigned int v149;
  unint64_t v150;
  char *v151;
  unint64_t v152;
  char *v153;
  BOOL v154;
  char v155;
  BOOL v156;
  float32x4_t *v157;
  unsigned int v158;
  int32x4_t v159;
  int32x4_t v160;
  const float *v161;
  float32x4_t v162;
  int v163;
  unsigned int v164;
  float32x4_t v165;
  float32x4_t *v166;
  int v167;
  int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  uint64_t v172;
  int32x4_t v173;
  int32x4_t v174;
  int32x4_t v175;
  float32x4_t *v176;
  float32x4_t v177;
  __n128 *v178;
  unsigned int v179;
  int v180;
  int v181;
  uint64_t v182;
  int v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int32x4_t v190;
  int32x4_t v191;
  int32x4_t v192;
  int32x4_t v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  int v202;
  uint64_t v203;
  unsigned int v204;
  uint64_t v205;
  unsigned int v206;
  uint64_t v207;
  float32x4_t *v208;
  int32x4_t v209;
  uint64_t v210;
  float32x4_t v211;
  float32x4_t v212;
  float32x4_t *v213;
  float32x4_t v214;
  unsigned int v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  uint64_t v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  uint64_t v227;
  char *v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  char *v232;
  unint64_t v233;
  char *v234;
  unint64_t v235;
  char *v236;
  unint64_t v237;
  BOOL v239;
  BOOL v241;
  BOOL v243;
  int32x4_t v245;
  const float *v246;
  const float *v247;
  float32x4_t v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int32x4_t v252;
  uint64_t v253;
  float32x4_t v254;
  float32x4_t v255;
  float32x4_t *v256;
  float32x4_t v257;
  float32x4_t v258;
  float32x4_t *v259;
  uint64_t v260;
  float32x4_t v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  float32x4_t *v265;
  float32x4_t *v266;
  uint64_t v267;
  float32x4_t v268;
  float32x4_t *v269;
  int v270;
  int v271;
  uint64_t v272;
  float *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  unsigned int v291;
  unsigned int v292;
  uint64_t v293;
  float32x4_t *v294;
  uint64_t v295;
  unsigned int v296;
  int32x4_t v297;
  int32x4_t v298;
  unsigned int v299;
  int32x4_t v300;
  uint64_t v301;
  float32x4_t v302;
  float32x4_t v303;
  unsigned int v304;
  int v305;
  int v306;
  unsigned int v307;
  int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  uint64_t v315;
  float32x4_t v316;
  unsigned int v317;
  float32x4_t *v318;
  unsigned int v319;
  unsigned int v320;
  float32x4_t *v321;
  uint64_t v322;
  float32x4_t v323;
  float32x4_t v324;
  float32x4_t *v325;
  float32x4_t v326;
  float32x4_t v327;
  float32x4_t *v328;
  unint64_t v329;
  unint64_t v330;
  BOOL v331;
  BOOL v332;
  BOOL v333;
  BOOL v334;
  BOOL v335;
  BOOL v336;
  int32x4_t v338;
  int32x4_t v339;
  const float *v340;
  float32x4_t v341;
  const float *v342;
  float32x4_t v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  int32x4_t v347;
  uint64_t v348;
  float32x4_t v349;
  float32x4_t v350;
  float32x4_t *v351;
  float32x4_t v352;
  float32x4_t v353;
  float32x4_t *v354;
  uint64_t v355;
  unsigned int v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  unsigned int v362;
  int v363;
  int v364;
  int v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  int v369;
  _DWORD *v370;
  unsigned int v371;
  unsigned int v372;
  uint64_t v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  unsigned int v385;
  uint64_t v386;
  int32x4_t v387;
  int32x4_t v388;
  float32x4_t *v389;
  float32x4_t v390;
  float32x4_t v391;
  float32x4_t v392;
  float32x4_t *v393;
  char *v394;
  float32x4_t v395;
  int v396;
  int v397;
  unsigned int v398;
  float32x4_t *v399;
  float32x4_t *v400;
  float32x4_t v401;
  float32x4_t v402;
  float32x4_t *v403;
  char *v404;
  unint64_t v405;
  char *v406;
  unint64_t v407;
  char *v408;
  char *v409;
  BOOL v410;
  BOOL v411;
  int32x4_t v413;
  int32x4_t v414;
  const float *v415;
  float32x4_t v416;
  int v417;
  int v418;
  int v419;
  float32x4_t *v420;
  float32x4_t v421;
  float32x4_t v422;
  float32x4_t *v423;
  uint64_t v424;
  uint64_t v425;
  float *v426;
  int v427;
  uint64_t v428;
  unint64_t v429;
  uint64_t v430;
  int v431;
  int v432;
  int v433;
  char *v434;
  int v435;
  uint64_t v436;
  unsigned int v437;
  unsigned int v438;
  uint64_t v439;
  unint64_t v440;
  unint64_t v441;
  uint64_t v442;
  BOOL v443;
  BOOL v444;
  BOOL v445;
  BOOL v446;
  BOOL v447;
  BOOL v448;
  uint64_t v450;
  int32x4_t v451;
  int32x4_t v452;
  int32x4_t v453;
  int32x4_t v454;
  const float *v455;
  float32x4_t v456;
  const float *v457;
  float32x4_t v458;
  int32x4_t v459;
  uint64_t v460;
  float32x4_t v461;
  float32x4_t v462;
  float32x4_t *v463;
  float32x4_t v464;
  float32x4_t v465;
  float32x4_t *v466;
  unsigned int v467;
  int v468;
  int v469;
  unsigned int v470;
  int v471;
  int v472;
  unsigned int v473;
  int v474;
  __n128 *v475;
  float32x4_t *v476;
  unsigned int v477;
  float32x4_t *v478;
  unsigned int v479;
  int v480;
  float32x4_t *v481;
  float *v482;
  int v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  int v490;
  unint64_t v491;
  unint64_t v492;
  float32x4_t *v493;
  float *v494;
  unint64_t v495;
  float *v496;
  uint64_t v497;
  uint64_t v498;
  float *v499;
  int v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  unsigned int v506;
  float *v507;
  uint64_t v508;
  float *v509;
  uint64_t v510;
  uint64_t v511;
  float *v512;
  float *v513;
  int v514;
  int v515;
  uint64_t v516;
  unint64_t v517;
  uint64_t v518;
  uint64_t v519;
  int v520;
  unint64_t v521;
  float *v522;
  uint64_t v523;
  float *v524;
  float *v525;
  int v526;
  uint64_t v527;
  float *v528;
  uint64_t v529;
  unint64_t v530;
  uint64_t v531;
  uint64_t v532;
  _DWORD *v533;
  unint64_t v534;
  uint64_t v535;
  unsigned int v536;
  unsigned int v537;
  uint64_t v538;
  char *v539;
  int v540;
  float *v541;
  int v542;
  float *v543;
  float *v544;
  unint64_t v545;
  unsigned int v546;
  float *v547;
  float *v548;
  uint64_t v549;
  unsigned int v550;
  int v551;
  int v552;
  unsigned int v553;
  uint64_t v554;
  int v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  unsigned int v560;
  int v561;
  uint64_t v562;
  unsigned int v563;
  float *v564;
  size_t v566;
  size_t v567;

  if ((a4 & 1) == 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/ImageProcessing/include/Kit/ImageProcessing/BoxFilter.h", 140, (uint64_t)"kernel_size % 2 == 1", 20, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (*(_DWORD *)(a2 + 32) != *(_DWORD *)(a3 + 32) || *(_DWORD *)(a2 + 36) != *(_DWORD *)(a3 + 36))&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/ImageProcessing/include/Kit/ImageProcessing/BoxFilter.h", 141, (uint64_t)"input.Size() == result.Size()", 29, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_DWORD *)(a1 + 8) == (_DWORD)v13 && *(_DWORD *)(a1 + 12) == HIDWORD(v13);
  if (!v14)
  {
    v15 = ((unint64_t)(((4 * (_DWORD)v13 + 15) & 0xFFFFFFF0) >> 4) << 36) | 4;
    v566 = ((4 * (_DWORD)v13 + 15) & 0xFFFFFFF0) * (unint64_t)HIDWORD(v13);
    if (v566)
    {
      v16 = malloc_type_malloc(v566, 0xAE2F145AuLL);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = v13;
      v17 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v15;
      *(_QWORD *)(a1 + 24) = v16;
      if (!v17)
        goto LABEL_13;
      goto LABEL_12;
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = v13;
    v17 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v15;
    *(_QWORD *)(a1 + 24) = 0;
    if (v17)
LABEL_12:
      free(v17);
  }
LABEL_13:
  if (*(_QWORD *)(a1 + 40) == v13)
    goto LABEL_17;
  v18 = ((unint64_t)(((4 * (_DWORD)v13 + 15) & 0xFFFFFFF0) >> 4) << 36) | 4;
  v567 = ((4 * (_DWORD)v13 + 15) & 0xFFFFFFF0) * (unint64_t)HIDWORD(v13);
  if (v567)
  {
    v19 = malloc_type_malloc(v567, 0xAE2F145AuLL);
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = v13;
    v20 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 48) = v18;
    *(_QWORD *)(a1 + 56) = v19;
    if (!v20)
      goto LABEL_17;
    goto LABEL_16;
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v13;
  v20 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v18;
  *(_QWORD *)(a1 + 56) = 0;
  if (v20)
LABEL_16:
    free(v20);
LABEL_17:
  v21 = *(_DWORD *)(a2 + 40);
  v22 = *(_BYTE **)(a2 + 24);
  v23 = *(float **)(a1 + 24);
  LOBYTE(a5) = *v22;
  v24 = (float)LODWORD(a5);
  *v23 = v24;
  if ((_DWORD)v13 == 1)
  {
    v25 = HIDWORD(v13) - 1;
    if (HIDWORD(v13) != 1)
    {
      v26 = 0;
      v27 = *(_DWORD *)(a2 + 44);
      v28 = *(_DWORD *)(a1 + 20);
      v29 = v27;
      do
      {
        v30 = *(float *)((char *)v23 + v26);
        v26 += v28;
        a6.i8[0] = v22[v29];
        *(float *)a6.i32 = (float)a6.u32[0];
        *(float *)((char *)v23 + v26) = v30 + *(float *)a6.i32;
        v29 += v27;
        --v25;
      }
      while (v25);
    }
  }
  else
  {
    v31 = v23 + 1;
    v32 = v21;
    v33 = v13 - 1;
    do
    {
      a6.i8[0] = v22[v32];
      *(float *)a6.i32 = (float)a6.u32[0];
      v24 = v24 + *(float *)a6.i32;
      *v31++ = v24;
      v32 += v21;
      --v33;
    }
    while (v33);
    if (HIDWORD(v13) != 1)
    {
      v34 = 0;
      v35 = *(_DWORD *)(a2 + 44);
      v36 = *(_DWORD *)(a1 + 20);
      v37 = v23 + 1;
      v38 = 1;
      v39 = v36;
      do
      {
        v40 = (float *)((char *)v37 + v39);
        v41 = (float *)((char *)v37 + v34);
        v42 = *(_DWORD *)(a2 + 40);
        v43 = &v22[v35 * v38];
        LOBYTE(v24) = *v43;
        v24 = (float)LODWORD(v24);
        v44 = *(float *)((char *)v23 + (v38 - 1) * v36) + v24;
        *(float *)((char *)v23 + v36 * v38) = v44;
        v45 = v42;
        v46 = v13 - 1;
        do
        {
          LOBYTE(v44) = v43[v45];
          v47 = *v41++;
          v24 = v24 + (float)LODWORD(v44);
          v44 = v47 + v24;
          *v40++ = v47 + v24;
          v45 += v42;
          --v46;
        }
        while (v46);
        ++v38;
        v39 += v36;
        v34 += v36;
      }
      while (v38 != HIDWORD(v13));
    }
  }
  v488 = a1;
  v48 = (float)((float)a4 * 0.5);
  v49 = *(_DWORD *)(a3 + 32);
  v50 = (v48 + 1);
  v564 = v23;
  if ((_DWORD)v48 != -1)
  {
    v125 = *(_DWORD *)(a1 + 20);
    v126 = *(_DWORD *)(a3 + 44);
    v127 = *(_DWORD **)(a3 + 24);
    v128 = v49 - v48;
    v551 = ~(_DWORD)v48;
    v129 = (v49 - 1);
    if ((_DWORD)v50 == v49 - (_DWORD)v48)
    {
      if (!(_DWORD)v48)
      {
        *v127 = *(_DWORD *)v23;
        goto LABEL_30;
      }
      v130 = 0;
      v131 = v128 - 2;
      v562 = (uint64_t)&v23[v131 + 1];
      v557 = (uint64_t)&v127[(v48 + 1) + 1 + v131];
      v132 = &v23[v129];
      v133 = v49 + ~(_DWORD)v48;
      v134 = v48 + 1;
      v135 = (v48 + 1) & 0x1FFFFFFF8;
      v136 = v133 & 0xFFFFFFF8;
      v541 = v23 + 4;
      v137 = v48 * v125;
      v138 = ~(_DWORD)v48;
      v139 = v48 + 1;
      v548 = &v23[v48];
      while (1)
      {
        v140 = (v125 * (v130 + v48));
        v141 = (char *)v23 + v140;
        v142 = (v126 * v130);
        v143 = *(_DWORD *)(a3 + 40);
        v144 = &v127[v142];
        v145 = v130 + v48 + 1;
        v146 = v145 * v48;
        if (v48 >= 7)
        {
          v147 = 0;
          if (v143 == 1
            && (v48 & 0x80000000) == 0
            && (char *)&v127[(v126 * v130)]
             - (char *)v548
             - (unint64_t)(v125 * (v130 + v48)) >= 0x20)
          {
            v172 = 0;
            v149 = v146 + (v50 + v130) * v135;
            v173 = vmlaq_s32(vdupq_n_s32(v146), vdupq_n_s32((int)v50 + (int)v130), (int32x4_t)xmmword_2246499B0);
            a6 = vdupq_n_s32(4 * ((int)v50 + (int)v130));
            v174 = vdupq_n_s32(v145);
            do
            {
              v175 = vaddq_s32(v173, a6);
              v176 = (float32x4_t *)&v141[4 * (v48 + v172)];
              v177 = vdivq_f32(*v176, vcvtq_f32_u32((uint32x4_t)vaddq_s32(v173, v174)));
              a10 = (__n128)vdivq_f32(v176[1], vcvtq_f32_u32((uint32x4_t)vaddq_s32(v175, v174)));
              v178 = (__n128 *)&v144[v172 & 0xFFFFFFF8];
              *v178 = (__n128)v177;
              v178[1] = a10;
              v172 += 8;
              v173 = vaddq_s32(v175, a6);
            }
            while (v135 != v172);
            v147 = (v48 + 1) & 0x1FFFFFFF8;
            v146 = v149;
            if (v134 == v135)
              goto LABEL_96;
          }
        }
        else
        {
          v147 = 0;
        }
        v148 = v143 * v147;
        do
        {
          v149 = v146 + v145;
          *(float *)&v144[v148] = *(float *)&v141[4 * (v48 + v147++)] / (float)(v139 + v146);
          v148 += v143;
          v146 += v145;
        }
        while (v134 != v147);
LABEL_96:
        if (v133 >= 8
          && v143 == 1
          && v129 >= v50
          && ((v150 = v562 + v140,
               v151 = (char *)&v127[(v48 + 1) + v142],
               v152 = (unint64_t)v132 + v140,
               v153 = (char *)v132 + v140 + 4,
               v152 < v557 + v142 * 4)
            ? (v154 = v151 >= v153)
            : (v154 = 1),
              v154 ? (v155 = 0) : (v155 = 1),
              (unint64_t)v151 < v150 ? (v156 = (unint64_t)v141 >= v557 + v142 * 4) : (v156 = 1),
              v156))
        {
          v23 = v564;
          if ((v155 & 1) != 0)
          {
            v167 = v48 + 1;
            v158 = v149;
          }
          else
          {
            v157 = (float32x4_t *)((char *)v541 + v137);
            v158 = v149 + v136 * (v551 - v130);
            a6 = vdupq_n_s32(4 * (v551 - (int)v130));
            v159 = vdupq_n_s32(v145);
            v160 = vmlaq_s32(vdupq_n_s32(v149), vdupq_n_s32(v551 - (int)v130), (int32x4_t)xmmword_2246499B0);
            v161 = (const float *)&v141[4 * v129];
            v162 = vld1q_dup_f32(v161);
            v163 = v48 + 1;
            v164 = v133 & 0xFFFFFFF8;
            do
            {
              a10 = (__n128)vaddq_s32(v160, a6);
              v165 = vdivq_f32(vsubq_f32(v162, *v157), vcvtq_f32_u32((uint32x4_t)vsubq_s32((int32x4_t)a10, v159)));
              v166 = (float32x4_t *)&v144[v163];
              *v166 = vdivq_f32(vsubq_f32(v162, v157[-1]), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v160, v159)));
              v166[1] = v165;
              v160 = vaddq_s32((int32x4_t)a10, a6);
              v157 += 2;
              v163 += 8;
              v164 -= 8;
            }
            while (v164);
            v167 = v50 + (v133 & 0xFFFFFFF8);
            if (v133 == v136)
              goto LABEL_91;
          }
        }
        else
        {
          v167 = v48 + 1;
          v158 = v149;
          v23 = v564;
        }
        v168 = v49 - v167;
        v169 = v167 * v143;
        v170 = ~(_DWORD)v48 + v167;
        v171 = v158 + v138;
        do
        {
          *(float *)&v144[v169] = (float)(*(float *)&v141[4 * v129] - *(float *)&v141[4 * v170]) / (float)v171;
          v169 += v143;
          ++v170;
          v171 += v138;
          --v168;
        }
        while (v168);
LABEL_91:
        ++v139;
        v137 += v125;
        --v138;
        v14 = v130++ == v48;
        if (v14)
          goto LABEL_30;
      }
    }
    if (!(_DWORD)v48)
    {
      v471 = *(_DWORD *)(a3 + 40);
      *v127 = *(_DWORD *)v23;
      v472 = v49 - 1;
      v473 = 1;
      if ((v49 - 1) < 0x14)
        goto LABEL_377;
      if (v471 != 1)
        goto LABEL_377;
      v474 = 0;
      if (v128 == 1)
        goto LABEL_377;
      v473 = 1;
      if ((unint64_t)((char *)(v127 + 1) - (char *)v23) < 0x20)
        goto LABEL_377;
      if ((unint64_t)((char *)v127 - (char *)v23) < 0x20)
        goto LABEL_377;
      v473 = v472 & 0xFFFFFFF8 | 1;
      v475 = (__n128 *)(v127 + 5);
      v476 = (float32x4_t *)(v23 + 5);
      v477 = v472 & 0xFFFFFFF8;
      do
      {
        v478 = (float32x4_t *)&v23[v474];
        a6 = (int32x4_t)vsubq_f32(*v476, v478[1]);
        v475[-1] = (__n128)vsubq_f32(v476[-1], *v478);
        *v475 = (__n128)a6;
        v475 += 2;
        v476 += 2;
        v474 += 8;
        v477 -= 8;
      }
      while (v477);
      if (v472 != (v472 & 0xFFFFFFF8))
      {
LABEL_377:
        v479 = v473 * v471;
        do
        {
          *(float *)&v127[v479] = v23[v473] - v23[v473 - 1];
          ++v473;
          v479 += v471;
        }
        while (v128 != v473);
      }
      goto LABEL_30;
    }
    v355 = 0;
    v356 = v49 + ~(2 * v48);
    v357 = v356;
    v543 = &v23[v357];
    v358 = (v48 - 1);
    v538 = (uint64_t)&v23[v358 + 1 + v357];
    v359 = (v49 - v48);
    v529 = (uint64_t)&v127[v359 + 1 + v358];
    v533 = &v127[v359];
    v525 = &v23[v129];
    v563 = v49 - 2 * v48 - 2;
    v516 = (uint64_t)&v23[(2 * v48) + 1];
    v360 = v48 + 1;
    v361 = (v48 + 1) & 0x1FFFFFFF8;
    v520 = v48 & 0xFFFFFFF8;
    v509 = v23 + 4;
    v362 = v48 * v125;
    v363 = ~(_DWORD)v48;
    v364 = ~(_DWORD)v48;
    v365 = v48 + 1;
    v547 = &v23[v48];
    do
    {
      v366 = (v125 * (v355 + v48));
      v367 = (char *)v23 + v366;
      v368 = (v126 * v355);
      v369 = *(_DWORD *)(a3 + 40);
      v370 = &v127[v368];
      v371 = v355 + v48 + 1;
      v372 = v371 * v48;
      if (v48 >= 7)
      {
        v373 = 0;
        if (v369 == 1
          && (v48 & 0x80000000) == 0
          && (unint64_t)((char *)&v127[(v126 * v355)]
                              - ((char *)v547
                               + (v125 * (v355 + v48)))) >= 0x20)
        {
          v386 = 0;
          v375 = v372 + (v50 + v355) * v361;
          v387 = vmlaq_s32(vdupq_n_s32(v372), vdupq_n_s32((int)v50 + (int)v355), (int32x4_t)xmmword_2246499B0);
          a6 = vdupq_n_s32(4 * ((int)v50 + (int)v355));
          v388 = vdupq_n_s32(v371);
          do
          {
            a10 = (__n128)vaddq_s32(v387, a6);
            v389 = (float32x4_t *)&v367[4 * (v48 + v386)];
            v390 = vcvtq_f32_u32((uint32x4_t)vaddq_s32((int32x4_t)a10, v388));
            v391 = vdivq_f32(*v389, vcvtq_f32_u32((uint32x4_t)vaddq_s32(v387, v388)));
            v392 = vdivq_f32(v389[1], v390);
            v393 = (float32x4_t *)&v370[v386 & 0xFFFFFFF8];
            *v393 = v391;
            v393[1] = v392;
            v386 += 8;
            v387 = vaddq_s32((int32x4_t)a10, a6);
          }
          while (v361 != v386);
          if (v360 == v361)
          {
            a6.i32[0] = v390.i32[3];
            v376 = v48 + 1;
            if (v356 >= 0xC)
              goto LABEL_296;
            goto LABEL_280;
          }
          v373 = (v48 + 1) & 0x1FFFFFFF8;
          v372 += (v50 + v355) * v361;
        }
      }
      else
      {
        v373 = 0;
      }
      v374 = v369 * v373;
      do
      {
        v375 = v372 + v371;
        *(float *)a6.i32 = (float)(v365 + v372);
        *(float *)&v370[v374] = *(float *)&v367[4 * (v48 + v373++)] / *(float *)a6.i32;
        v374 += v369;
        v372 += v371;
      }
      while (v360 != v373);
      v376 = v48 + 1;
      if (v356 >= 0xC)
      {
LABEL_296:
        v376 = v48 + 1;
        if (v369 == 1)
        {
          v376 = v48 + 1;
          if (-2 - (int)v48 >= v563)
          {
            v376 = v48 + 1;
            if (((2 * (_DWORD)v48) ^ 0xFFFFFFFE) >= v563)
            {
              v394 = (char *)&v127[v50 + (v126 * v355)];
              v376 = v48 + 1;
              if ((unint64_t)(v394 - v367) >= 0x20)
              {
                v376 = v48 + 1;
                if ((unint64_t)&v394[-v516 - v366] >= 0x20)
                {
                  v395 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
                  v396 = (2 * v48) | 1;
                  v397 = v48 + 1;
                  v398 = v356 & 0xFFFFFFF8;
                  v399 = (float32x4_t *)((char *)v509 + v362);
                  do
                  {
                    v400 = (float32x4_t *)&v367[4 * v396];
                    a10 = (__n128)v399[-1];
                    v401 = vdivq_f32(vsubq_f32(*v400, (float32x4_t)a10), v395);
                    v402 = vdivq_f32(vsubq_f32(v400[1], *v399), v395);
                    v403 = (float32x4_t *)&v370[v397];
                    *v403 = v401;
                    v403[1] = v402;
                    v399 += 2;
                    v397 += 8;
                    v396 += 8;
                    v398 -= 8;
                  }
                  while (v398);
                  v376 = v50 + (v356 & 0xFFFFFFF8);
                  if (v356 == (v356 & 0xFFFFFFF8))
                    goto LABEL_282;
                }
              }
            }
          }
        }
      }
LABEL_280:
      v377 = v48 + v376;
      v378 = v376 * v369;
      v379 = v363 + v376;
      do
      {
        *(float *)&v370[v378] = (float)(*(float *)&v367[4 * v377++] - *(float *)&v367[4 * v379]) / *(float *)a6.i32;
        v378 += v369;
        ++v379;
      }
      while (v49 != v377);
      if (v48 < 0xC
        || v369 != 1
        || v129 < v128
        || 2 * (int)v48 - v49 < (v48 - 1))
      {
        goto LABEL_283;
      }
LABEL_282:
      v404 = (char *)v543 + v366;
      v405 = v538 + v366;
      v406 = (char *)&v533[v368];
      v407 = v529 + v368 * 4;
      v408 = (char *)v525 + v366;
      v409 = (char *)v525 + v366 + 4;
      v410 = (unint64_t)v408 >= v407 || v406 >= v409;
      v411 = !v410;
      if ((unint64_t)v406 >= v405 || (unint64_t)v404 >= v407)
      {
        v23 = v564;
        if (v411)
        {
          v380 = v49 - v48;
          v381 = v375;
        }
        else
        {
          v381 = v375 + v520 * (v551 - v355);
          v413 = vmlaq_s32(vdupq_n_s32(v375), vdupq_n_s32(v551 - (int)v355), (int32x4_t)xmmword_2246499B0);
          a6 = vdupq_n_s32(4 * (v551 - (int)v355));
          v414 = vdupq_n_s32(v371);
          v415 = (const float *)&v367[4 * v129];
          v416 = vld1q_dup_f32(v415);
          v417 = v49 + ~(2 * v48);
          v418 = v49 - v48;
          v419 = v48 & 0xFFFFFFF8;
          do
          {
            a10 = (__n128)vaddq_s32(v413, a6);
            v420 = (float32x4_t *)&v367[4 * v417];
            v421 = vdivq_f32(vsubq_f32(v416, *v420), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v413, v414)));
            v422 = vdivq_f32(vsubq_f32(v416, v420[1]), vcvtq_f32_u32((uint32x4_t)vsubq_s32((int32x4_t)a10, v414)));
            v423 = (float32x4_t *)&v370[v418];
            *v423 = v421;
            v423[1] = v422;
            v413 = vaddq_s32((int32x4_t)a10, a6);
            v418 += 8;
            v417 += 8;
            v419 -= 8;
          }
          while (v419);
          v380 = v128 + (v48 & 0xFFFFFFF8);
          if (v520 == (_DWORD)v48)
            goto LABEL_286;
        }
      }
      else
      {
LABEL_283:
        v380 = v49 - v48;
        v381 = v375;
        v23 = v564;
      }
      v382 = v49 - v380;
      v383 = v380 * v369;
      v384 = v363 + v380;
      v385 = v381 + v364;
      do
      {
        *(float *)&v370[v383] = (float)(*(float *)&v367[4 * v129] - *(float *)&v367[4 * v384]) / (float)v385;
        v383 += v369;
        ++v384;
        v385 += v364;
        --v382;
      }
      while (v382);
LABEL_286:
      ++v365;
      v362 += v125;
      --v364;
      v14 = v355++ == v48;
    }
    while (!v14);
  }
LABEL_30:
  v555 = *(_DWORD *)(a3 + 36);
  v561 = v555 - v48;
  if ((_DWORD)v50 != v555 - (_DWORD)v48)
  {
    v179 = 0;
    v180 = 0;
    v181 = ~(_DWORD)v48;
    v182 = v48 * a4;
    v183 = *(_DWORD *)(v488 + 20);
    v184 = *(_DWORD *)(a3 + 44);
    v185 = *(_QWORD *)(a3 + 24);
    v186 = (v49 - 1 - 2 * v48);
    v507 = &v23[v186];
    v187 = (v48 - 1);
    v504 = (uint64_t)&v23[v187 + 1 + v186];
    v188 = 4 * (v49 - v48);
    v498 = v188 + v187 * 4 + v185 + 4;
    v501 = v185 + v188;
    v549 = (v49 - 1);
    v496 = &v23[v549];
    v494 = v496 + 1;
    v536 = v49 - 2 * v48 - 2;
    v518 = (uint64_t)&v23[(2 * v48) + 1];
    v189 = v48 + 1;
    v532 = (v48 + 1) & 0x1FFFFFFF8;
    a6 = vdupq_n_s32(a4);
    v190 = vmlaq_s32(vdupq_n_s32(v182), a6, (int32x4_t)xmmword_2246499B0);
    v191 = vdupq_n_s32(4 * a4);
    v546 = v49 + ~(2 * v48);
    v483 = v50 + (v546 & 0xFFFFFFF8);
    v192 = vmulq_s32(vdupq_n_s32(-a4), (int32x4_t)xmmword_2246499B0);
    v193 = vdupq_n_s32(-4 * a4);
    v560 = v49 - v48;
    v558 = v185;
    v511 = v185 + 16;
    v194 = v184 * v50;
    v482 = v23 + 4;
    v552 = (2 * v48) | 1;
    v195 = v183 * v552;
    v196 = v48 + 1;
    v528 = &v23[v48];
    v490 = v184;
    while (1)
    {
      v197 = 4 * (v184 * (v50 + v180));
      v198 = (v183 * v180);
      v199 = (v183 * (v552 + v180));
      v200 = (char *)v23 + ((v196 + v181) * v183);
      v201 = (char *)v23 + ((v196 + v48) * v183);
      v202 = *(_DWORD *)(a3 + 40);
      v203 = v558 + 4 * (v196 * v184);
      v204 = v182;
      if (!(_DWORD)v50)
        goto LABEL_142;
      v205 = 0;
      v204 = v182;
      if (v48 < 7 || v202 != 1 || (v48 & 0x80000000) != 0)
        goto LABEL_140;
      v205 = 0;
      if ((unint64_t)(v197 + v558 - ((_QWORD)v528 + v198)) < 0x20)
        break;
      v204 = v182;
      if ((unint64_t)(v197 + v558 - ((_QWORD)v528 + v199)) < 0x20)
        goto LABEL_140;
      v206 = (float)((float)a4 * 0.5);
      v207 = (v48 + 1) & 0x1FFFFFFF8;
      a10 = (__n128)v190;
      v208 = (float32x4_t *)(v511 + 4 * v194);
      do
      {
        v209 = vaddq_s32((int32x4_t)a10, v191);
        v210 = 4 * v206;
        v211 = *(float32x4_t *)&v201[v210];
        v212 = *(float32x4_t *)&v201[v210 + 16];
        v213 = (float32x4_t *)&v200[v210];
        v214 = vdivq_f32(vsubq_f32(v212, v213[1]), vcvtq_f32_u32((uint32x4_t)vaddq_s32(v209, a6)));
        v208[-1] = vdivq_f32(vsubq_f32(v211, *v213), vcvtq_f32_u32((uint32x4_t)vaddq_s32((int32x4_t)a10, a6)));
        *v208 = v214;
        a10 = (__n128)vaddq_s32(v209, v191);
        v208 += 2;
        v206 += 8;
        v207 -= 8;
      }
      while (v207);
      v205 = (v48 + 1) & 0x1FFFFFFF8;
      v204 = (v48 + v532) * a4;
      v23 = v564;
      if (v189 != v532)
        goto LABEL_140;
LABEL_142:
      if ((_DWORD)v50 != v560)
      {
        a10.n128_f32[0] = (float)v204;
        v216 = v50;
        if (v546 < 0xC)
          goto LABEL_144;
        v216 = v50;
        if (v202 != 1)
          goto LABEL_144;
        v216 = v50;
        if (-2 - (int)v48 < v536)
          goto LABEL_144;
        v216 = v50;
        if (((2 * (_DWORD)v48) ^ 0xFFFFFFFE) < v536)
          goto LABEL_144;
        v260 = v558 + 4 * (v50 + (v184 * (v50 + v180)));
        v216 = v50;
        if ((unint64_t)(v260 - ((_QWORD)v23 + v198)) < 0x20)
          goto LABEL_144;
        v216 = v50;
        if ((unint64_t)(v260 - (v518 + v198)) < 0x20)
          goto LABEL_144;
        v216 = v50;
        if ((unint64_t)(v260 - ((_QWORD)v23 + v199)) < 0x20)
          goto LABEL_144;
        v216 = v50;
        if ((unint64_t)(v260 - (v518 + v199)) < 0x20)
          goto LABEL_144;
        v261 = (float32x4_t)vdupq_lane_s32((int32x2_t)a10.n128_u64[0], 0);
        v262 = v546 & 0xFFFFFFF8;
        v263 = v50;
        v264 = (2 * v48) | 1;
        v265 = (float32x4_t *)((char *)v482 + v179);
        v266 = (float32x4_t *)((char *)v482 + v195);
        do
        {
          v267 = 4 * v264;
          v268 = vdivq_f32(vaddq_f32(vsubq_f32(vsubq_f32(*(float32x4_t *)&v201[v267 + 16], *v266), *(float32x4_t *)&v200[v267 + 16]), *v265), v261);
          v269 = (float32x4_t *)(v203 + 4 * v263);
          v264 += 8;
          *v269 = vdivq_f32(vaddq_f32(vsubq_f32(vsubq_f32(*(float32x4_t *)&v201[v267], v266[-1]), *(float32x4_t *)&v200[v267]), v265[-1]), v261);
          v269[1] = v268;
          v265 += 2;
          v263 += 8;
          v266 += 2;
          v262 -= 8;
        }
        while (v262);
        v216 = v483;
        v23 = v564;
        if (v546 != (v546 & 0xFFFFFFF8))
        {
LABEL_144:
          v217 = v48 + v216;
          v218 = v216 * v202;
          v219 = v181 + v216;
          do
          {
            *(float *)(v203 + 4 * v218) = (float)((float)((float)(*(float *)&v201[4 * v217] - *(float *)&v201[4 * v219])
                                                          - *(float *)&v200[4 * v217])
                                                  + *(float *)&v200[4 * v219])
                                          / a10.n128_f32[0];
            ++v217;
            v218 += v202;
            ++v219;
          }
          while (v49 != v217);
        }
      }
      if (!(_DWORD)v48)
        goto LABEL_128;
      v220 = 4 * v549;
      if (v48 < 0xC
        || v202 != 1
        || v549 < v560
        || (int)v48 - 1 > ~(v49 - 1 - 2 * v48))
      {
        v221 = v49 - v48;
        v222 = v204;
        goto LABEL_149;
      }
      v227 = v182;
      v228 = (char *)v507 + v198;
      v229 = v504 + v198;
      v230 = v501 + v197;
      v231 = v498 + v197;
      v232 = (char *)v496 + v198;
      v233 = (unint64_t)v494 + v198;
      v234 = (char *)v507 + v199;
      v235 = v504 + v199;
      v236 = (char *)v496 + v199;
      v237 = (unint64_t)v494 + v199;
      v239 = (unint64_t)v232 < v231 && v230 < v233;
      v241 = (unint64_t)v234 < v231 && v230 < v235;
      v243 = (unint64_t)v236 < v231 && v230 < v237;
      if (v230 < v229 && (unint64_t)v228 < v231)
      {
        v221 = v49 - v48;
        v222 = v204;
        v23 = v564;
        v182 = v227;
        goto LABEL_199;
      }
      v23 = v564;
      v182 = v227;
      if (v239)
      {
        v221 = v49 - v48;
        v222 = v204;
LABEL_199:
        v181 = ~(_DWORD)v48;
LABEL_200:
        v50 = (v48 + 1);
        v184 = v490;
        goto LABEL_149;
      }
      v181 = ~(_DWORD)v48;
      if (v241)
      {
        v221 = v49 - v48;
        v222 = v204;
        goto LABEL_200;
      }
      v50 = (v48 + 1);
      if (v243)
      {
        v221 = v49 - v48;
        v222 = v204;
        v184 = v490;
      }
      else
      {
        v222 = v204 - a4 * (v48 & 0xFFFFFFF8);
        v245 = vaddq_s32(vdupq_n_s32(v204), v192);
        v246 = (const float *)&v201[v220];
        a10 = (__n128)vld1q_dup_f32(v246);
        v247 = (const float *)&v200[v220];
        v248 = vld1q_dup_f32(v247);
        v249 = v49 + ~(2 * v48);
        v250 = v49 - v48;
        v184 = v490;
        v251 = v48 & 0xFFFFFFF8;
        do
        {
          v252 = vaddq_s32(v245, v193);
          v253 = 4 * v249;
          v254 = vsubq_f32(vsubq_f32((float32x4_t)a10, *(float32x4_t *)&v201[v253]), v248);
          v255 = vsubq_f32(vsubq_f32((float32x4_t)a10, *(float32x4_t *)&v201[v253 + 16]), v248);
          v256 = (float32x4_t *)&v200[v253];
          v257 = vdivq_f32(vaddq_f32(v254, *v256), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v245, a6)));
          v258 = vdivq_f32(vaddq_f32(v255, v256[1]), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v252, a6)));
          v259 = (float32x4_t *)(v203 + 4 * v250);
          *v259 = v257;
          v259[1] = v258;
          v245 = vaddq_s32(v252, v193);
          v250 += 8;
          v249 += 8;
          v251 -= 8;
        }
        while (v251);
        v221 = v560 + (v48 & 0xFFFFFFF8);
        if ((v48 & 0xFFFFFFF8) == (_DWORD)v48)
          goto LABEL_128;
      }
LABEL_149:
      v223 = v49 - v221;
      v224 = v221 * v202;
      v225 = v181 + v221;
      v226 = v222 - a4;
      do
      {
        *(float *)(v203 + 4 * v224) = (float)((float)((float)(*(float *)&v201[4 * v549] - *(float *)&v201[4 * v225])
                                                      - *(float *)&v200[4 * v549])
                                              + *(float *)&v200[4 * v225])
                                      / (float)v226;
        v224 += v202;
        ++v225;
        v226 -= a4;
        --v223;
      }
      while (v223);
LABEL_128:
      ++v196;
      ++v180;
      v194 += v184;
      v179 += v183;
      v195 += v183;
      if (v196 == v561)
        goto LABEL_31;
    }
    v204 = v182;
LABEL_140:
    v215 = v202 * v205;
    do
    {
      v204 += a4;
      *(float *)(v203 + 4 * v215) = (float)(*(float *)&v201[4 * (v48 + v205)]
                                            - *(float *)&v200[4 * (v48 + v205)])
                                    / (float)v204;
      ++v205;
      v215 += v202;
    }
    while (v189 != v205);
    goto LABEL_142;
  }
LABEL_31:
  v51 = v555;
  if (!(_DWORD)v48)
    return;
  v52 = ~(_DWORD)v48;
  v53 = *(unsigned int *)(v488 + 20);
  v54 = (v53 * (v555 - 1));
  v55 = (char *)v564 + v54;
  v56 = *(unsigned int *)(a3 + 44);
  v57 = *(_QWORD *)(a3 + 24);
  v58 = (v49 - v48);
  v59 = (v49 - 1);
  v545 = (unint64_t)&v564[v59] + v54;
  v556 = v59;
  v559 = v57;
  if ((_DWORD)v50 != (_DWORD)v58)
  {
    v270 = 0;
    v271 = 2 * v48;
    v272 = (v49 + ~(2 * v48));
    v273 = &v564[v272];
    v274 = (v48 - 1);
    v275 = (uint64_t)&v564[v274 + 1 + v272];
    v276 = 4 * (v49 - v48);
    v502 = v276 + v274 * 4 + v57 + 4;
    v505 = v57 + v276;
    v499 = &v564[v49 - 1];
    v508 = v275;
    v512 = v273;
    v495 = (unint64_t)v273 + v54;
    v492 = v275 + v54;
    v491 = (unint64_t)v499 + v54 + 4;
    v537 = v49 - 2 * v48 - 2;
    v487 = (uint64_t)&v564[(2 * v48) + 1];
    v485 = v487 + v54;
    v522 = &v564[v48];
    v486 = (uint64_t)v522 + v54;
    v277 = v48 + 1;
    v519 = (v48 + 1) & 0x1FFFFFFF8;
    v553 = v49 + ~(2 * v48);
    v481 = (float32x4_t *)((char *)v564 + v54 + 16);
    v489 = v48 & 0xFFFFFFF8;
    v480 = v58 + (v48 & 0xFFFFFFF8);
    v484 = v57 + 16;
    v278 = v555 - v48;
    v279 = v56 * v561;
    v542 = v555 + ~(2 * v48);
    v280 = v53 * v542;
    v281 = -2 * v48;
    v514 = 2 * v48;
    while (1)
    {
      v282 = v56;
      v283 = v58;
      v284 = 4 * (v282 * (v561 + v270));
      v285 = (v53 * (v542 + v270));
      v286 = v53;
      v287 = (char *)v564 + ((v278 + v52) * v53);
      v288 = *(_DWORD *)(a3 + 40);
      v289 = v282;
      v290 = v559 + 4 * (v278 * v282);
      v291 = v51 - v278 + v48;
      v292 = v291 * v48;
      if ((_DWORD)v50)
      {
        v293 = 0;
        if (v48 < 7)
          goto LABEL_214;
        if (v288 != 1)
          goto LABEL_214;
        if ((v48 & 0x80000000) != 0)
          goto LABEL_214;
        v293 = 0;
        if ((unint64_t)(v284 + v559 - ((_QWORD)v522 + v285)) < 0x20
          || (unint64_t)(v284 + v559 - v486) < 0x20)
        {
          goto LABEL_214;
        }
        v294 = (float32x4_t *)(v484 + 4 * v279);
        v295 = (v48 + 1) & 0x1FFFFFFF8;
        v296 = v292 + (v514 - v270) * v519;
        v297 = vmlaq_s32(vdupq_n_s32(v292), vdupq_n_s32(v514 - v270), (int32x4_t)xmmword_2246499B0);
        a6 = vdupq_n_s32(4 * (v514 - v270));
        v298 = vdupq_n_s32(v291);
        v299 = v48;
        do
        {
          v300 = vaddq_s32(v297, a6);
          v301 = 4 * v299;
          v302 = vcvtq_f32_u32((uint32x4_t)vaddq_s32(v300, v298));
          v303 = vdivq_f32(vsubq_f32(*(float32x4_t *)&v55[v301 + 16], *(float32x4_t *)&v287[v301 + 16]), v302);
          v294[-1] = vdivq_f32(vsubq_f32(*(float32x4_t *)&v55[v301], *(float32x4_t *)&v287[v301]), vcvtq_f32_u32((uint32x4_t)vaddq_s32(v297, v298)));
          *v294 = v303;
          v297 = vaddq_s32(v300, a6);
          v294 += 2;
          v299 += 8;
          v295 -= 8;
        }
        while (v295);
        v293 = (v48 + 1) & 0x1FFFFFFF8;
        if (v277 != v519)
        {
          v292 = v296;
LABEL_214:
          v304 = v288 * v293;
          do
          {
            v296 = v292 + v291;
            *(float *)a6.i32 = (float)(v271 + v292);
            *(float *)(v290 + 4 * v304) = (float)(*(float *)&v55[4 * (v48 + v293)]
                                                  - *(float *)&v287[4 * (v48 + v293)])
                                          / *(float *)a6.i32;
            ++v293;
            v304 += v288;
            v292 += v291;
          }
          while (v277 != v293);
          goto LABEL_216;
        }
        a6.i32[0] = v302.i32[3];
      }
      else
      {
        *(float *)a6.i32 = (float)v292;
        v296 = v291 * v48;
      }
LABEL_216:
      v305 = v50;
      if (v553 < 0xC)
        goto LABEL_217;
      v305 = v50;
      if (v288 != 1)
        goto LABEL_217;
      v305 = v50;
      if (-2 - (int)v48 < v537)
        goto LABEL_217;
      v305 = v50;
      if (((2 * (_DWORD)v48) ^ 0xFFFFFFFE) < v537)
        goto LABEL_217;
      v315 = v559 + 4 * (v50 + (v282 * (v561 + v270)));
      v305 = v50;
      if ((unint64_t)(v315 - ((_QWORD)v564 + v285)) < 0x20)
        goto LABEL_217;
      v305 = v50;
      if ((unint64_t)(v315 - (v487 + v285)) < 0x20)
        goto LABEL_217;
      v305 = v50;
      if ((unint64_t)(v315 - (_QWORD)v55) < 0x20)
        goto LABEL_217;
      v305 = v50;
      if ((unint64_t)(v315 - v485) < 0x20)
        goto LABEL_217;
      v316 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a6.i8, 0);
      v317 = v553 & 0xFFFFFFF8;
      v318 = v481;
      v319 = v50;
      v320 = (2 * v48) | 1;
      v321 = (float32x4_t *)((char *)v564 + v280 + 16);
      do
      {
        v322 = 4 * v320;
        v323 = vsubq_f32(*(float32x4_t *)&v55[v322], v318[-1]);
        v324 = vsubq_f32(*(float32x4_t *)&v55[v322 + 16], *v318);
        v325 = (float32x4_t *)&v287[v322];
        v326 = vdivq_f32(vaddq_f32(vsubq_f32(v323, *v325), v321[-1]), v316);
        v327 = vdivq_f32(vaddq_f32(vsubq_f32(v324, v325[1]), *v321), v316);
        v328 = (float32x4_t *)(v290 + 4 * v319);
        v320 += 8;
        *v328 = v326;
        v328[1] = v327;
        v321 += 2;
        v319 += 8;
        v318 += 2;
        v317 -= 8;
      }
      while (v317);
      v305 = v50 + (v553 & 0xFFFFFFF8);
      if (v553 != (v553 & 0xFFFFFFF8))
      {
LABEL_217:
        v306 = v48 + v305;
        v307 = v305 * v288;
        v308 = v52 + v305;
        do
        {
          *(float *)(v290 + 4 * v307) = (float)((float)((float)(*(float *)&v55[4 * v306] - *(float *)&v55[4 * v308])
                                                        - *(float *)&v287[4 * v306])
                                                + *(float *)&v287[4 * v308])
                                        / *(float *)a6.i32;
          ++v306;
          v307 += v288;
          ++v308;
        }
        while (v49 != v306);
      }
      if (v48 < 0xC)
        goto LABEL_220;
      v58 = v283;
      if (v288 != 1 || v556 < v283 || 2 * (int)v48 - v49 < (v48 - 1))
        goto LABEL_221;
      v329 = v505 + v284;
      v330 = v502 + v284;
      v331 = (unint64_t)v499 + v285 >= v502 + v284 || v329 >= (unint64_t)v499 + v285 + 4;
      v332 = !v331;
      v333 = v495 >= v330 || v329 >= v492;
      v334 = !v333;
      v335 = v545 >= v330 || v329 >= v491;
      v336 = !v335;
      if (v329 < v508 + v285 && (unint64_t)v512 + v285 < v330)
      {
LABEL_220:
        v58 = v283;
LABEL_221:
        v309 = v58;
        v310 = v296;
        v56 = v289;
LABEL_222:
        v53 = v286;
        goto LABEL_223;
      }
      v58 = v283;
      if (v332)
        goto LABEL_221;
      v56 = v289;
      if (v334)
      {
        v309 = v58;
        v310 = v296;
        goto LABEL_222;
      }
      v53 = v286;
      if (v336)
      {
        v309 = v58;
        v310 = v296;
      }
      else
      {
        v310 = v296 + v489 * (v270 - v514);
        v338 = vmlaq_s32(vdupq_n_s32(v296), vdupq_n_s32(v270 - v514), (int32x4_t)xmmword_2246499B0);
        a6 = vdupq_n_s32(4 * (v270 - v514));
        v339 = vdupq_n_s32(v291);
        v340 = (const float *)v545;
        v341 = vld1q_dup_f32(v340);
        v342 = (const float *)&v287[4 * v556];
        v343 = vld1q_dup_f32(v342);
        v344 = v49 + ~(2 * v48);
        v345 = v58;
        v346 = v48 & 0xFFFFFFF8;
        do
        {
          v347 = vaddq_s32(v338, a6);
          v348 = 4 * v344;
          v349 = vsubq_f32(vsubq_f32(v341, *(float32x4_t *)&v55[v348]), v343);
          v350 = vsubq_f32(vsubq_f32(v341, *(float32x4_t *)&v55[v348 + 16]), v343);
          v351 = (float32x4_t *)&v287[v348];
          v352 = vdivq_f32(vaddq_f32(v349, *v351), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v338, v339)));
          v353 = vdivq_f32(vaddq_f32(v350, v351[1]), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v347, v339)));
          v354 = (float32x4_t *)(v290 + 4 * v345);
          *v354 = v352;
          v354[1] = v353;
          v338 = vaddq_s32(v347, a6);
          v345 += 8;
          v344 += 8;
          v346 -= 8;
        }
        while (v346);
        v309 = v480;
        if (v489 == (_DWORD)v48)
          goto LABEL_225;
      }
LABEL_223:
      v311 = v49 - v309;
      v312 = v309 * v288;
      v313 = v52 + v309;
      v314 = v310 + v281;
      do
      {
        *(float *)(v290 + 4 * v312) = (float)((float)((float)(*(float *)&v55[4 * (v49 - 1)] - *(float *)&v55[4 * v313])
                                                      - *(float *)&v287[4 * (v49 - 1)])
                                              + *(float *)&v287[4 * v313])
                                      / (float)v314;
        v312 += v288;
        ++v313;
        v314 += v281;
        --v311;
      }
      while (v311);
LABEL_225:
      ++v278;
      ++v270;
      v279 += v56;
      --v271;
      v280 += v53;
      ++v281;
      v51 = v555;
      if (v278 == v555)
        return;
    }
  }
  if ((_DWORD)v50)
  {
    v60 = 0;
    v61 = (v555 + ~(2 * v48));
    v62 = (v58 - 2);
    v63 = 4 * v50;
    v527 = v62 * 4 + v63 + v57 + 4;
    v531 = v57 + v63;
    v64 = 4 * v59;
    v524 = &v564[v59];
    v535 = (uint64_t)&v564[v62 + 1];
    v521 = v535 + v54;
    v517 = (unint64_t)v524 + v54 + 4;
    v513 = &v564[v48];
    v503 = (uint64_t)v513 + v54;
    v65 = v48 + 1;
    v510 = (v48 + 1) & 0x1FFFFFFF8;
    v550 = v49 + ~(_DWORD)v48;
    v506 = v550 & 0xFFFFFFF8;
    v500 = v50 + (v550 & 0xFFFFFFF8);
    v497 = v57 + 16;
    v66 = v555 - v48;
    v67 = v56 * v561;
    v68 = v53 * v61;
    v493 = (float32x4_t *)((char *)v564 + v54 + 16);
    v69 = -2 * v48;
    v540 = 2 * v48;
    v70 = 2 * v48;
    v515 = *(_DWORD *)(v488 + 20);
    while (1)
    {
      v71 = 0;
      v72 = 4 * (v56 * (v561 + v60));
      v73 = (v53 * (v61 + v60));
      v74 = (char *)v564 + ((v66 + v52) * v53);
      v75 = *(_DWORD *)(a3 + 40);
      v76 = v559 + 4 * (v66 * v56);
      v77 = v51 - v66 + v48;
      v78 = v77 * v48;
      if (v48 < 7)
        goto LABEL_44;
      if (v75 != 1)
        goto LABEL_44;
      if ((v48 & 0x80000000) != 0)
        goto LABEL_44;
      v71 = 0;
      if ((unint64_t)(v72 + v559 - ((_QWORD)v513 + v73)) < 0x20)
        goto LABEL_44;
      if ((unint64_t)(v72 + v559 - v503) < 0x20)
        goto LABEL_44;
      v79 = (float32x4_t *)(v497 + 4 * v67);
      v80 = v78 + (v540 - v60) * v510;
      v81 = vmlaq_s32(vdupq_n_s32(v78), vdupq_n_s32(v540 - v60), (int32x4_t)xmmword_2246499B0);
      v82 = vdupq_n_s32(4 * (v540 - v60));
      v83 = vdupq_n_s32(v77);
      v84 = v48;
      v85 = (v48 + 1) & 0x1FFFFFFF8;
      do
      {
        v86 = vaddq_s32(v81, v82);
        v87 = 4 * v84;
        v88 = *(float32x4_t *)&v55[v87];
        v89 = *(float32x4_t *)&v55[v87 + 16];
        v90 = (float32x4_t *)&v74[v87];
        v91 = vdivq_f32(vsubq_f32(v89, v90[1]), vcvtq_f32_u32((uint32x4_t)vaddq_s32(v86, v83)));
        v79[-1] = vdivq_f32(vsubq_f32(v88, *v90), vcvtq_f32_u32((uint32x4_t)vaddq_s32(v81, v83)));
        *v79 = v91;
        v81 = vaddq_s32(v86, v82);
        v79 += 2;
        v84 += 8;
        v85 -= 8;
      }
      while (v85);
      v71 = (v48 + 1) & 0x1FFFFFFF8;
      v78 = v80;
      if (v65 != v510)
      {
LABEL_44:
        v92 = v75 * v71;
        do
        {
          v80 = v78 + v77;
          *(float *)(v76 + 4 * v92) = (float)(*(float *)&v55[4 * (v48 + v71)]
                                              - *(float *)&v74[4 * (v48 + v71)])
                                      / (float)(v70 + v78);
          ++v71;
          v92 += v75;
          v78 += v77;
        }
        while (v65 != v71);
      }
      if (v550 < 0xC || v75 != 1 || v556 < v50)
      {
        v123 = v50;
        v124 = v80;
        goto LABEL_80;
      }
      v53 = v50;
      v93 = v56;
      v94 = v52;
      v95 = v61;
      v96 = v531 + v72;
      v97 = v527 + v72;
      v98 = (unint64_t)v524 + v73 >= v527 + v72 || v96 >= (unint64_t)v524 + v73 + 4;
      v99 = !v98;
      v100 = (unint64_t)v55 >= v97 || v96 >= v521;
      v101 = !v100;
      v102 = v545 >= v97 || v96 >= v517;
      v103 = !v102;
      if (v96 < v535 + v73 && (unint64_t)v564 + v73 < v97)
        break;
      v61 = v95;
      if (v99)
      {
        v123 = v53;
        v124 = v80;
        goto LABEL_86;
      }
      v52 = v94;
      if (v101)
      {
        v123 = v53;
        v124 = v80;
LABEL_87:
        v56 = v93;
        v50 = v53;
        LODWORD(v53) = v515;
        goto LABEL_80;
      }
      v56 = v93;
      if (v103)
      {
        v50 = v53;
        v123 = v53;
        v124 = v80;
        LODWORD(v53) = v515;
      }
      else
      {
        v105 = (float32x4_t *)((char *)v564 + v68 + 16);
        v124 = v80 + v506 * (v60 - v540);
        v106 = vmlaq_s32(vdupq_n_s32(v80), vdupq_n_s32(v60 - v540), (int32x4_t)xmmword_2246499B0);
        v107 = vdupq_n_s32(4 * (v60 - v540));
        v108 = vdupq_n_s32(v77);
        v109 = (const float *)v545;
        v110 = vld1q_dup_f32(v109);
        v111 = (const float *)&v74[4 * v556];
        v112 = vld1q_dup_f32(v111);
        v113 = v493;
        v114 = v550 & 0xFFFFFFF8;
        v50 = v53;
        v115 = v53;
        do
        {
          v116 = vaddq_s32(v106, v107);
          v117 = vdivq_f32(vaddq_f32(vsubq_f32(vsubq_f32(v110, *v113), v112), *v105), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v116, v108)));
          v118 = (float32x4_t *)(v76 + 4 * v115);
          *v118 = vdivq_f32(vaddq_f32(vsubq_f32(vsubq_f32(v110, v113[-1]), v112), v105[-1]), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v106, v108)));
          v118[1] = v117;
          v106 = vaddq_s32(v116, v107);
          v115 += 8;
          v105 += 2;
          v113 += 2;
          v114 -= 8;
        }
        while (v114);
        v123 = v500;
        LODWORD(v53) = v515;
        if (v550 == v506)
          goto LABEL_35;
      }
LABEL_80:
      v119 = v49 - v123;
      v120 = v123 * v75;
      v121 = ~(_DWORD)v48 + v123;
      v122 = v124 + v69;
      do
      {
        *(float *)(v76 + 4 * v120) = (float)((float)((float)(*(float *)&v55[v64] - *(float *)&v55[4 * v121])
                                                     - *(float *)&v74[v64])
                                             + *(float *)&v74[4 * v121])
                                     / (float)v122;
        v120 += v75;
        ++v121;
        v122 += v69;
        --v119;
      }
      while (v119);
LABEL_35:
      ++v66;
      ++v60;
      v67 += v56;
      --v70;
      v68 += v53;
      ++v69;
      v51 = v555;
      if (v66 == v555)
        return;
    }
    v123 = v53;
    v124 = v80;
    v61 = v95;
LABEL_86:
    v52 = v94;
    goto LABEL_87;
  }
  v424 = 4 * v59;
  v425 = 4 * v59 + 4;
  v554 = v57 + v425;
  v426 = &v564[~(_DWORD)v48];
  v427 = v555;
  v428 = (uint64_t)&v426[v59 + 1];
  v539 = (char *)v564 + v425;
  v544 = &v564[v59];
  v534 = (unint64_t)v426 + v54;
  v530 = v428 + v54;
  v429 = (unint64_t)v544 + v54 + 4;
  v523 = v59 + 1;
  v430 = (v59 + 1) & 0x1FFFFFFF8;
  v526 = 2 * v48;
  v431 = -2 * v48;
  v432 = v555 - v48;
  do
  {
    v433 = 0;
    v434 = (char *)v564 + ((v432 + v52) * v53);
    v435 = *(_DWORD *)(a3 + 40);
    v436 = v559 + 4 * (v432 * v56);
    v437 = v427 - v432 + v48;
    v438 = v437 * v48;
    if (v556 < 0xB || v435 != 1 || v556 > v48)
      goto LABEL_364;
    v433 = 0;
    v439 = 4 * (v56 * (v561 + v50));
    v440 = v559 + v439;
    v441 = v554 + v439;
    v442 = (v53 * (v555 + ~(2 * v48) + v50));
    v443 = v559 + v439 >= (unint64_t)&v539[v442] || (unint64_t)v544 + v442 >= v441;
    v444 = !v443;
    v445 = v440 >= v530 || v534 >= v441;
    v446 = !v445;
    v447 = v440 >= v429 || v545 >= v441;
    v448 = !v447;
    if ((unint64_t)v426 + v442 < v441 && v440 < v428 + v442)
      goto LABEL_364;
    if (v444)
      goto LABEL_364;
    if (v446)
      goto LABEL_364;
    if (v448)
      goto LABEL_364;
    v450 = 0;
    v451 = vdupq_n_s32(v438);
    v438 += (v50 - v526) * v430;
    v452 = vdupq_n_s32(4 * ((int)v50 - v526));
    v453 = vdupq_n_s32(v437);
    v454 = vmlaq_s32(v451, vdupq_n_s32((int)v50 - v526), (int32x4_t)xmmword_2246499B0);
    v455 = (const float *)v545;
    v456 = vld1q_dup_f32(v455);
    v457 = (const float *)&v434[4 * v556];
    v458 = vld1q_dup_f32(v457);
    do
    {
      v459 = vaddq_s32(v454, v452);
      v460 = 4 * (v52 + v450);
      v461 = vsubq_f32(vsubq_f32(v456, *(float32x4_t *)&v55[v460]), v458);
      v462 = vsubq_f32(vsubq_f32(v456, *(float32x4_t *)&v55[v460 + 16]), v458);
      v463 = (float32x4_t *)&v434[v460];
      v464 = vdivq_f32(vaddq_f32(v461, *v463), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v454, v453)));
      v465 = vdivq_f32(vaddq_f32(v462, v463[1]), vcvtq_f32_u32((uint32x4_t)vsubq_s32(v459, v453)));
      v466 = (float32x4_t *)(v436 + 4 * (v450 & 0xFFFFFFF8));
      *v466 = v464;
      v466[1] = v465;
      v450 += 8;
      v454 = vaddq_s32(v459, v452);
    }
    while (v430 != v450);
    v433 = v430;
    if (v523 != v430)
    {
LABEL_364:
      v467 = v435 * v433;
      v468 = ~(_DWORD)v48 + v433;
      v469 = v49 - v433;
      v470 = v438 + v431;
      do
      {
        *(float *)(v436 + 4 * v467) = (float)((float)((float)(*(float *)&v55[v424] - *(float *)&v55[4 * v468])
                                                      - *(float *)&v434[v424])
                                              + *(float *)&v434[4 * v468])
                                      / (float)v470;
        v467 += v435;
        ++v468;
        v470 += v431;
        --v469;
      }
      while (v469);
    }
    ++v432;
    LODWORD(v50) = v50 + 1;
    ++v431;
    v427 = v555;
  }
  while (v432 != v555);
}

uint64_t sub_22390B1A0(uint64_t a1, int *a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  size_t v29;
  int v30;
  void *v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  size_t v37;
  int v38;
  int v39;
  char *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t result;
  uint64_t v48;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_39;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
LABEL_39:
    v48 = 0;
    v13 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v13 != 1)
      goto LABEL_16;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_39;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v48, v4, 1);
  v13 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v13 != 1)
  {
LABEL_16:
    v14 = *(_DWORD *)(a1 + 32);
    if (v14)
    {
      v15 = *(_DWORD *)(a1 + 36);
      if (v15)
      {
        v16 = *(unsigned int *)(a1 + 44);
        v17 = *(_BYTE **)(a1 + 24);
        if (*(_BYTE *)(a1 + 48) && v17)
        {
          v18 = *(_QWORD *)(a1 + 8);
          v19 = *(std::__shared_weak_count **)(a1 + 16);
          if (v19)
          {
            v20 = (unint64_t *)&v19->__shared_owners_;
            do
              v21 = __ldxr(v20);
            while (__stxr(v21 + 1, v20));
            do
              v22 = __ldaxr(v20);
            while (__stlxr(v22 - 1, v20));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
              std::__shared_weak_count::__release_weak(v19);
            }
          }
          (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v17 = *(_BYTE **)(a1 + 24);
        }
        v23 = v14 - 1;
        v24 = v15 - 1;
        if (v15 != 1)
        {
          if (v14 == 1)
          {
            do
            {
              *v17 = *a2;
              v17 += v16;
              --v24;
            }
            while (v24);
          }
          else
          {
            v25 = 0;
            do
            {
              v26 = v14 - 1;
              v27 = v17;
              do
              {
                *v27 = *a2;
                v27 += v13;
                --v26;
              }
              while (v26);
              *v27 = *a2;
              v17 += v16;
              ++v25;
            }
            while (v25 != v24);
          }
        }
        if (v14 != 1)
        {
          do
          {
            *v17 = *a2;
            v17 += v13;
            --v23;
          }
          while (v23);
        }
        *v17 = *a2;
      }
    }
    goto LABEL_66;
  }
LABEL_40:
  v28 = *(unsigned int *)(a1 + 44);
  v29 = *(unsigned int *)(a1 + 32);
  if ((_DWORD)v28 == (_DWORD)v29)
  {
    v30 = *(_DWORD *)(a1 + 36);
    v31 = *(void **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v31)
    {
      v32 = *(_QWORD *)(a1 + 8);
      v33 = *(std::__shared_weak_count **)(a1 + 16);
      if (v33)
      {
        v34 = (unint64_t *)&v33->__shared_owners_;
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
        do
          v36 = __ldaxr(v34);
        while (__stlxr(v36 - 1, v34));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v32 + 88))(v32, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v31 = *(void **)(a1 + 24);
    }
    v37 = (v30 * v28);
    v38 = *a2;
  }
  else
  {
    if (!(_DWORD)v29)
      goto LABEL_66;
    v39 = *(_DWORD *)(a1 + 36);
    if (!v39)
      goto LABEL_66;
    v40 = *(char **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v40)
    {
      v41 = *(_QWORD *)(a1 + 8);
      v42 = *(std::__shared_weak_count **)(a1 + 16);
      if (v42)
      {
        v43 = (unint64_t *)&v42->__shared_owners_;
        do
          v44 = __ldxr(v43);
        while (__stxr(v44 + 1, v43));
        do
          v45 = __ldaxr(v43);
        while (__stlxr(v45 - 1, v43));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v41 + 88))(v41, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v40 = *(char **)(a1 + 24);
    }
    v46 = v39 - 1;
    if (v39 != 1)
    {
      do
      {
        memset(v40, *a2, v29);
        v40 += v28;
        --v46;
      }
      while (v46);
    }
    v38 = *a2;
    v31 = v40;
    v37 = v29;
  }
  memset(v31, v38, v37);
LABEL_66:
  result = v48;
  v48 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_22390B540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22390B564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_22390B69C(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22390B668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22390B69C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v16[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v16[1] = 2;
  LOBYTE(v17) = 0;
  v19 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v17 = *a2;
    v18 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v19 = 1;
  }
  v20 = 0;
  v21 = 0;
  v22 = *a3;
  v23 = 1;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v10 = operator new();
  sub_22390B8CC(v10, a1, (uint64_t)v16);
  info = 0;
  *a4 = &off_24EC6A3B8;
  a4[1] = v10;
  v11 = (_QWORD *)operator new();
  *v11 = &off_24EC6A4B0;
  v11[1] = 0;
  v11[2] = 0;
  v11[3] = v10;
  a4[2] = v11;
  return sub_2231AD66C((uint64_t)v16);
}

void sub_22390B848(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_22390B860(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  _QWORD *v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD *);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_2231C35FC((_QWORD **)va);
  sub_2231AD66C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22390B88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  MEMORY[0x227684CE8](v3, 0x10F3C4035895BD5);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22390B8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22390B8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v14;
  _OWORD v15[2];
  uint64_t (**v16)();
  uint64_t v17;
  std::__shared_weak_count *v18;

  v16 = &off_24EC1F958;
  sub_22390BA60(a2, (uint64_t)&v17);
  sub_2231F9F68((uint64_t)&v16, (uint64_t)&v14);
  v5 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  *(_QWORD *)a1 = &off_24EC21AC8;
  *(_QWORD *)(a1 + 8) = &off_24EC219D8;
  v8 = v14;
  v9 = v15[0];
  v14 = 0uLL;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 46) = *(_OWORD *)((char *)v15 + 14);
  sub_2231AB0FC(a1 + 64, a3);
  *(_QWORD *)a1 = &off_24EC21A48;
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  *(_QWORD *)a1 = &off_24EC6A528;
  return a1;
}

void sub_22390B9FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a2);
  *(_QWORD *)(v2 + 8) = v3;
  v5 = *(std::__shared_weak_count **)(v2 + 24);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_2231C37EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22390BA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_22319B358((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22390BA60(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (**v14)();
  _QWORD *v15;
  uint64_t (**v16)();
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  int v23;
  __int16 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;
  int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  __int16 v40;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      v4 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    (*(void (**)(uint64_t (***__return_ptr)(), uint64_t))(*(_QWORD *)v4 + 32))(&v32, v4);
    v13 = (*((uint64_t (**)(uint64_t (**)()))*v32 + 6))(v32);
    v14 = v32;
    if (v32)
    {
      v15 = (_QWORD *)operator new();
      v16 = v32;
      *v15 = &off_24EC20DE8;
      v15[1] = 0;
      v15[2] = 0;
      v15[3] = v16;
    }
    else
    {
      v15 = 0;
    }
    v22 = *(_QWORD *)(a1 + 32);
    v23 = 4 * *(_DWORD *)(a1 + 44);
    v24 = *(_WORD *)(a1 + 48);
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v15;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = v22;
    *(_DWORD *)(a2 + 32) = v23;
    *(_QWORD *)(a2 + 40) = v13;
    *(_DWORD *)(a2 + 48) = 4;
    *(_WORD *)(a2 + 52) = v24;
  }
  else
  {
    v32 = &off_24EC216B8;
    sub_22390BCB0(a1, (uint64_t)&v33);
    v17 = v33;
    v18 = v34;
    if (v34)
    {
      v19 = (unint64_t *)&v34->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      v21 = v34;
    }
    else
    {
      v21 = 0;
    }
    v25 = 4 * v39;
    if (v36)
      v26 = (4 * v35) | 0x100000000;
    else
      v26 = 0;
    v27 = v38;
    v28 = v37;
    v29 = v40;
    *(_QWORD *)a2 = v17;
    *(_QWORD *)(a2 + 8) = v18;
    *(_QWORD *)(a2 + 16) = v26;
    *(_QWORD *)(a2 + 24) = v27;
    *(_DWORD *)(a2 + 32) = v25;
    *(_QWORD *)(a2 + 40) = v28;
    *(_DWORD *)(a2 + 48) = 4;
    *(_WORD *)(a2 + 52) = v29;
    if (v21)
    {
      v30 = (unint64_t *)&v21->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
  }
}

void sub_22390BC8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_22390BCB0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  std::__shared_weak_count_vtbl *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count_vtbl *v15;
  unint64_t *v16;
  __int16 v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count_vtbl *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  std::__shared_weak_count_vtbl *v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      v4 = *(_QWORD *)(a1 + 8);
      v9 = *(std::__shared_weak_count **)(a1 + 16);
      if (v9)
      {
        v10 = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
        do
          v12 = __ldaxr(v10);
        while (__stlxr(v12 - 1, v10));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    (*(void (**)(std::__shared_weak_count_vtbl **__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v30, v4);
    v13 = v30;
    if (v30)
    {
      v14 = (std::__shared_weak_count *)operator new();
      v15 = v30;
      v14->__shared_owners_ = 0;
      v16 = (unint64_t *)&v14->__shared_owners_;
      v14->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC20DE8;
      v14->__shared_weak_owners_ = 0;
      v14[1].__vftable = v15;
      v30 = 0;
      v17 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 8) = v14;
      do
        v18 = __ldxr(v16);
      while (__stxr(v18 + 1, v16));
    }
    else
    {
      v14 = 0;
      v30 = 0;
      v17 = *(_WORD *)(a1 + 48);
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    *(_QWORD *)(a2 + 16) = 0;
    (*((void (**)(uint64_t *__return_ptr, std::__shared_weak_count_vtbl *, uint64_t))v13->~__shared_weak_count
     + 8))(&v31, v13, 4);
    v21 = v31;
    v22 = *(_QWORD *)(v31 + 16);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)v31;
    *(_QWORD *)(a2 + 40) = v22;
    v31 = 0;
    MEMORY[0x227684CE8](v21, 0xC400A2AC0F1);
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a2 + 24);
    *(_OWORD *)(a2 + 56) = *(_OWORD *)(a2 + 32);
    *(_WORD *)(a2 + 72) = v17;
    if (v13)
    {
      v23 = (unint64_t *)&v14->__shared_owners_;
      do
        v24 = __ldaxr(v23);
      while (__stlxr(v24 - 1, v23));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    v25 = v30;
    v30 = 0;
    if (v25)
      (*((void (**)(std::__shared_weak_count_vtbl *))v25->~__shared_weak_count + 1))(v25);
  }
  else
  {
    v19 = a1 + 24;
    if (*(_BYTE *)(a1 + 48))
      v20 = *(_QWORD *)(a1 + 24) == 0;
    else
      v20 = 1;
    if (v20)
    {
      sub_2233B305C(v19, (uint64_t *)a2);
    }
    else
    {
      v26 = *(std::__shared_weak_count **)(a1 + 16);
      v27 = (unint64_t *)&v26->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
      do
        v29 = __ldaxr(v27);
      while (__stlxr(v29 - 1, v27));
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
      __break(1u);
    }
  }
}

void sub_22390BF18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    (*(void (**)(uint64_t))(*(_QWORD *)a11 + 8))(a11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22390BF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_22390C08C(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22390C058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22390C08C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v16[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v16[1] = 2;
  LOBYTE(v17) = 0;
  v19 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v17 = *a2;
    v18 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v19 = 1;
  }
  v20 = 0;
  v21 = 0;
  v22 = *a3;
  v23 = 1;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v10 = operator new();
  sub_22390C2BC(v10, a1, (uint64_t)v16);
  info = 0;
  *a4 = &off_24EC6A3B8;
  a4[1] = v10;
  v11 = (_QWORD *)operator new();
  *v11 = &off_24EC6A4B0;
  v11[1] = 0;
  v11[2] = 0;
  v11[3] = v10;
  a4[2] = v11;
  return sub_2231AD66C((uint64_t)v16);
}

void sub_22390C238(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_22390C250(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  _QWORD *v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD *);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_2231C35FC((_QWORD **)va);
  sub_2231AD66C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22390C27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  MEMORY[0x227684CE8](v3, 0x10F3C4035895BD5);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22390C2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22390C2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v14;
  _OWORD v15[2];
  uint64_t (**v16)();
  uint64_t v17;
  std::__shared_weak_count *v18;

  v16 = &off_24EC1F958;
  sub_223217FD0(a2, (uint64_t)&v17);
  sub_2231F9F68((uint64_t)&v16, (uint64_t)&v14);
  v5 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  *(_QWORD *)a1 = &off_24EC21AC8;
  *(_QWORD *)(a1 + 8) = &off_24EC219D8;
  v8 = v14;
  v9 = v15[0];
  v14 = 0uLL;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 46) = *(_OWORD *)((char *)v15 + 14);
  sub_2231AB0FC(a1 + 64, a3);
  *(_QWORD *)a1 = &off_24EC21A48;
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  *(_QWORD *)a1 = &off_24EC6A528;
  return a1;
}

void sub_22390C3EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a2);
  *(_QWORD *)(v2 + 8) = v3;
  v5 = *(std::__shared_weak_count **)(v2 + 24);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_2231C37EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22390C43C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_22319B358((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22390C450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_22390C588(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22390C554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22390C588@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v16[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v16[1] = 2;
  LOBYTE(v17) = 0;
  v19 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v17 = *a2;
    v18 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v19 = 1;
  }
  v20 = 0;
  v21 = 0;
  v22 = *a3;
  v23 = 1;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v10 = operator new();
  sub_22390C7B8(v10, a1, (uint64_t)v16);
  info = 0;
  *a4 = &off_24EC6A3B8;
  a4[1] = v10;
  v11 = (_QWORD *)operator new();
  *v11 = &off_24EC6A4B0;
  v11[1] = 0;
  v11[2] = 0;
  v11[3] = v10;
  a4[2] = v11;
  return sub_2231AD66C((uint64_t)v16);
}

void sub_22390C734(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_22390C74C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  _QWORD *v4;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD *);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_2231C35FC((_QWORD **)va);
  sub_2231AD66C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_22390C778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  MEMORY[0x227684CE8](v3, 0x10F3C4035895BD5);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22390C7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22390C7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v14;
  _OWORD v15[2];
  uint64_t (**v16)();
  uint64_t v17;
  std::__shared_weak_count *v18;

  v16 = &off_24EC1F958;
  sub_22390C94C(a2, (uint64_t)&v17);
  sub_2231F9F68((uint64_t)&v16, (uint64_t)&v14);
  v5 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  *(_QWORD *)a1 = &off_24EC21AC8;
  *(_QWORD *)(a1 + 8) = &off_24EC219D8;
  v8 = v14;
  v9 = v15[0];
  v14 = 0uLL;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 46) = *(_OWORD *)((char *)v15 + 14);
  sub_2231AB0FC(a1 + 64, a3);
  *(_QWORD *)a1 = &off_24EC21A48;
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
  if (*((_QWORD *)&v14 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  *(_QWORD *)a1 = &off_24EC6A528;
  return a1;
}

void sub_22390C8E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  va_list va;

  va_start(va, a2);
  *(_QWORD *)(v2 + 8) = v3;
  v5 = *(std::__shared_weak_count **)(v2 + 24);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_2231C37EC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22390C938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_22319B358((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_22390C94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v4 + 32))(&v17, v4);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 48))(v17);
  v10 = v17;
  if (v17)
  {
    result = (_QWORD *)operator new();
    v12 = v17;
    *result = &off_24EC20DE8;
    result[1] = 0;
    result[2] = 0;
    result[3] = v12;
  }
  else
  {
    result = 0;
  }
  if (*(_BYTE *)(a1 + 28))
    v13 = (4 * *(_DWORD *)(a1 + 24)) | 0x100000000;
  else
    v13 = 0;
  v14 = *(_QWORD *)(a1 + 64);
  v15 = 4 * *(_DWORD *)(a1 + 76);
  v16 = *(_WORD *)(a1 + 80);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = result;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v9;
  *(_DWORD *)(a2 + 48) = 4;
  *(_WORD *)(a2 + 52) = v16;
  return result;
}

void sub_22390CA6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22390CA90(uint64_t a1, _BYTE *a2)
{
  std::string::size_type size;
  char v3;
  uint64_t v6;
  int v7;
  void *v8;
  int v9;
  uint64_t context;
  uint64_t plan;
  _OWORD *v12;
  _DWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  int32x4_t v27;
  int v28;
  _BYTE v29[16];
  void *__p;
  __int128 v31;
  std::string __dst;
  char v33;
  _DWORD v34[2];

  *(_QWORD *)a1 = &off_24EC5CB20;
  *(_OWORD *)(a1 + 24) = 0u;
  v6 = a1 + 24;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 488) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  v7 = *a2;
  if (v7 == 2)
  {
    __p = operator new(0x40uLL);
    v31 = xmmword_2245C4420;
    strcpy((char *)__p, "monorecon_resource_private/7r7uj7d8ph_510000/model.espresso.net");
    sub_223CEFFD4((std::string::size_type)&__p, 0, 0, &__dst);
  }
  else if (v7 == 1)
  {
    __p = operator new(0x40uLL);
    v31 = xmmword_2245C4470;
    strcpy((char *)__p, "monorecon_resource_private/zmwu2uc7m2_10000/model.espresso.net");
    sub_223CEFFD4((std::string::size_type)&__p, 0, 0, &__dst);
  }
  else
  {
    if (*a2)
    {
      sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 44, (uint64_t)"", 0, (uint64_t)"Preset is not supported!", 24, (void (*)(void **))sub_22457406C);
      abort();
    }
    __p = operator new(0x40uLL);
    v31 = xmmword_2245C4470;
    strcpy((char *)__p, "monorecon_resource_public/r5tuyggaps_540000/model.espresso.net");
    sub_223CEFFD4((std::string::size_type)&__p, 0, 0, &__dst);
  }
  if (v33)
  {
    size = __dst.__r_.__value_.__l.__size_;
    v8 = (void *)__dst.__r_.__value_.__r.__words[0];
    v34[0] = __dst.__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v34 + 3) = *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3);
    v3 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    memset(&__dst, 0, sizeof(__dst));
    v9 = 1;
    if ((SHIBYTE(v31) & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  v8 = 0;
  v9 = 0;
  if (SHIBYTE(v31) < 0)
LABEL_9:
    operator delete(__p);
LABEL_10:
  if (!v9)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 47, (uint64_t)"net_path_opt", 12, (uint64_t)"Failed to access network file", 29, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    sub_22324A974();
  }
  if (v3 < 0)
  {
    sub_223197FA4(&__dst, v8, size);
  }
  else
  {
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    __dst.__r_.__value_.__l.__size_ = size;
    LODWORD(__dst.__r_.__value_.__r.__words[2]) = v34[0];
    *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v34 + 3);
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v3;
  }
  context = espresso_create_context();
  *(_QWORD *)(a1 + 8) = context;
  if (!context
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 52, (uint64_t)"ctx_ != NULL", 12, (uint64_t)"Error creating espresso context.", 32, (void (*)(void **))sub_22457406C)|| (plan = espresso_create_plan(), (*(_QWORD *)(a1 + 16) = plan) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 56, (uint64_t)"plan_ != NULL", 13, (uint64_t)"Error creating espresso plan.", 29, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (espresso_plan_add_network()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 62, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"Error adding depth network.", 27, (void (*)(void **))sub_22457406C)|| espresso_plan_build()&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 64, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"Error building espresso plan.", 29, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v12 = operator new(0x10uLL);
  __p = v12;
  *v12 = xmmword_224654750;
  *(_QWORD *)&v31 = v12 + 1;
  *((_QWORD *)&v31 + 1) = v12 + 1;
  v27.i64[0] = 0xF000000140;
  v27.i32[2] = 3;
  v28 = 0x10000;
  sub_223FE27B8("rgb_ref_b3hw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, v6);
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v13 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v13 + 5;
  *((_QWORD *)&v31 + 1) = v13 + 5;
  v13[4] = 320;
  *(_OWORD *)v13 = xmmword_2246547D0;
  __p = v13;
  v27 = (int32x4_t)xmmword_224654760;
  v28 = 0x10000;
  sub_223FE2A90("rgb_aux_bk3hw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 56));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v14 = operator new(0x10uLL);
  __p = v14;
  *v14 = xmmword_224654770;
  *(_QWORD *)&v31 = v14 + 1;
  *((_QWORD *)&v31 + 1) = v14 + 1;
  v27.i64[0] = 0x3C00000050;
  v27.i32[2] = 4;
  v28 = 0x10000;
  sub_223FE27B8("pose_RT_measure_bkhw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, a1 + 96);
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v15 = operator new(0x10uLL);
  __p = v15;
  *v15 = xmmword_224654770;
  *(_QWORD *)&v31 = v15 + 1;
  *((_QWORD *)&v31 + 1) = v15 + 1;
  v27.i64[0] = 0x3C00000050;
  v27.i32[2] = 4;
  v28 = 0x10000;
  sub_223FE27B8("pose_R_measure_bkhw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, a1 + 128);
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v16 = operator new(0x10uLL);
  __p = v16;
  *v16 = xmmword_224654770;
  *(_QWORD *)&v31 = v16 + 1;
  *((_QWORD *)&v31 + 1) = v16 + 1;
  v27.i64[0] = 0x3C00000050;
  v27.i32[2] = 4;
  v28 = 0x10000;
  sub_223FE27B8("pose_T_measure_bkhw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, a1 + 160);
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v17 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v17 + 5;
  *((_QWORD *)&v31 + 1) = v17 + 5;
  v17[4] = 80;
  *(_OWORD *)v17 = xmmword_22465480C;
  __p = v17;
  v27 = (int32x4_t)xmmword_224654780;
  v28 = 0x10000;
  sub_223FE2A90("depth_plane_aux_bdkhw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 192));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v18 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v18 + 5;
  *((_QWORD *)&v31 + 1) = v18 + 5;
  v18[4] = 80;
  *(_OWORD *)v18 = xmmword_2246547E4;
  __p = v18;
  v27.i64[0] = 0x3C00000050;
  v27.i32[2] = 32;
  v28 = 0x10000;
  sub_223FE27B8("depth_plane_ref_bd1hw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, a1 + 232);
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v19 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v19 + 5;
  *((_QWORD *)&v31 + 1) = v19 + 5;
  v19[4] = 80;
  *(_OWORD *)v19 = xmmword_22465480C;
  __p = v19;
  v27 = (int32x4_t)xmmword_224654780;
  v28 = 0x10000;
  sub_223FE2A90("mask_bdkhw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 264));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v20 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v20 + 5;
  *((_QWORD *)&v31 + 1) = v20 + 5;
  v20[4] = 2;
  *(_OWORD *)v20 = xmmword_2246547F8;
  __p = v20;
  v27 = (int32x4_t)xmmword_224654790;
  v28 = 0x10000;
  sub_223FE2A90("uv_coords_bChw2", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 304));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v21 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v21 + 5;
  *((_QWORD *)&v31 + 1) = v21 + 5;
  v21[4] = 80;
  *(_OWORD *)v21 = xmmword_22465480C;
  __p = v21;
  v27 = (int32x4_t)xmmword_224654780;
  v28 = 0x10000;
  sub_223FE2A90("ray_angles_bdkhw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 344));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v22 = operator new(0x14uLL);
  *(_QWORD *)&v31 = v22 + 5;
  *((_QWORD *)&v31 + 1) = v22 + 5;
  v22[4] = 80;
  *(_OWORD *)v22 = xmmword_224654820;
  __p = v22;
  v27 = (int32x4_t)xmmword_2246547A0;
  v28 = 0x10000;
  sub_223FE2A90("ray_vecs_bdchw", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 384));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  if (*a2 == 2)
  {
    v23 = operator new(0x14uLL);
    *(_QWORD *)&v31 = v23 + 5;
    *((_QWORD *)&v31 + 1) = v23 + 5;
    v23[4] = 320;
    *(_OWORD *)v23 = xmmword_224654834;
    __p = v23;
    v27.i64[0] = 0xF000000140;
    v28 = 0x10000;
    sub_223FE233C("lidar_image", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 424));
    if (__p)
    {
      *(_QWORD *)&v31 = __p;
      operator delete(__p);
    }
  }
  v24 = operator new(0x10uLL);
  __p = v24;
  *v24 = xmmword_2246547B0;
  *(_QWORD *)&v31 = v24 + 1;
  *((_QWORD *)&v31 + 1) = v24 + 1;
  v27.i64[0] = 0xF000000140;
  v28 = 0x20000;
  sub_223FE233C("depth", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 448));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  v25 = operator new(0x10uLL);
  __p = v25;
  *v25 = xmmword_2246547B0;
  *(_QWORD *)&v31 = v25 + 1;
  *((_QWORD *)&v31 + 1) = v25 + 1;
  v27.i64[0] = 0xF000000140;
  v28 = 0x20000;
  sub_223FE233C("uncertainty", (uint64_t)&__p, &v27, (uint64_t)v29, (uint64_t)&v28, (_QWORD *)(a1 + 472));
  if (__p)
  {
    *(_QWORD *)&v31 = __p;
    operator delete(__p);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((v3 & 0x80) == 0)
      return a1;
LABEL_57:
    operator delete(v8);
    return a1;
  }
  if (v3 < 0)
    goto LABEL_57;
  return a1;
}

void sub_22390D464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22390D610(_QWORD *a1)
{
  *a1 = &off_24EC5CB20;
  if (espresso_plan_destroy()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 182, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| espresso_context_destroy()&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 184, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  return a1;
}

void sub_22390D6CC(_QWORD *a1)
{
  sub_22390D610(a1);
  JUMPOUT(0x227684CE8);
}

__n128 sub_22390D6F0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;

  if (espresso_plan_execute_sync()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthNetwork.cpp", 190, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 448);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 456);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 472);
  result = *(__n128 *)(a1 + 480);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

void *sub_22390D778@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return memcpy(a2, (const void *)(a1 + 24), 0x1A8uLL);
}

uint64_t sub_22390D788()
{
  return 0xF000000140;
}

uint64_t sub_22390D794()
{
  return 0x3C00000050;
}

uint64_t sub_22390D7A0()
{
  return 0x40A000003E800000;
}

_QWORD *sub_22390D7B0(_QWORD *a1)
{
  void *v2;
  uint64_t v3;

  *a1 = &off_24EC5CB90;
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_22390D804(_QWORD *a1)
{
  void *v2;
  uint64_t v3;

  *a1 = &off_24EC5CB90;
  v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22390D868(uint64_t a1, uint64_t *a2, _BYTE *a3)
{
  uint64_t v5;
  int32x4_t **v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int32x2_t v11;
  int32x2_t v12;
  uint64_t v13;
  unint64_t v14;
  int32x4_t *v15;
  unint64_t v16;
  float v17;
  float v18;
  float v19;
  uint32x4_t v20;
  unint64_t v21;
  int32x4_t *v22;
  int32x4_t v23;
  float v24;
  int32x4_t v25;
  float v26;
  int32x4_t v27;
  float v28;
  uint64_t i;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  __int32 *v33;
  int v34;
  __int32 *v35;
  int v36;
  uint64_t v37;
  int v38;
  __int32 *v39;
  int v40;
  uint64_t v41;
  float32x4_t v43;
  float32x4_t v44;
  int32x2_t v45;
  float v46;
  int32x4_t v47;
  float v48;
  int32x4_t v49;
  int32x4_t v50;
  float32x4_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD v55[27];
  unint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t *v59;
  __int32 *v60;

  *(_QWORD *)a1 = &off_24EC5CB90;
  v5 = *a2;
  *a2 = 0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = 0;
  v6 = (int32x4_t **)(a1 + 16);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  v9 = v8;
  v10 = v7;
  *(_BYTE *)(a1 + 40) = *a3;
  *(float *)v11.i32 = logf(*(float *)&v7);
  v45 = v11;
  v46 = logf(*((float *)&v10 + 1) / *(float *)&v10);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = (*(_QWORD *)(a1 + 24) - v13) >> 2;
  if (v9 <= v14)
  {
    if (v9 < v14)
      *(_QWORD *)(a1 + 24) = v13 + 4 * v9;
  }
  else
  {
    sub_22391043C(a1 + 16, v9 - v14);
  }
  if (v9)
  {
    v15 = *v6;
    if (v9 < 4uLL)
    {
      v16 = 0;
      v18 = *(float *)v45.i32;
      v17 = v46;
      v19 = (float)v9 + -1.0;
      do
      {
LABEL_11:
        v28 = expf(v18 + (float)(v17 * (float)((float)v16 / v19)));
        v19 = (float)v9 + -1.0;
        v18 = *(float *)v45.i32;
        v17 = v46;
        *(float *)&v15->i32[v16++] = v28;
      }
      while (v9 != v16);
      goto LABEL_12;
    }
    v43 = (float32x4_t)vdupq_lane_s32(v45, 0);
    *(float *)v12.i32 = (float)v9 + -1.0;
    v44 = (float32x4_t)vdupq_lane_s32(v12, 0);
    v16 = v9 - (unint64_t)(v9 & 3);
    v20 = (uint32x4_t)xmmword_2246499B0;
    v21 = v16;
    v22 = *v6;
    v17 = v46;
    do
    {
      v47 = (int32x4_t)v20;
      v51 = vaddq_f32(v43, vmulq_n_f32(vdivq_f32(vcvtq_f32_u32(v20), v44), v17));
      v48 = expf(v51.f32[1]);
      *(float *)v23.i32 = expf(v51.f32[0]);
      *(float *)&v23.i32[1] = v48;
      v49 = v23;
      v24 = expf(v51.f32[2]);
      v25 = v49;
      *(float *)&v25.i32[2] = v24;
      v50 = v25;
      v26 = expf(v51.f32[3]);
      v27 = v50;
      *(float *)&v27.i32[3] = v26;
      v17 = v46;
      *v22++ = v27;
      v27.i64[0] = 0x400000004;
      v27.i64[1] = 0x400000004;
      v20 = (uint32x4_t)vaddq_s32(v47, v27);
      v21 -= 4;
    }
    while (v21);
    v19 = (float)v9 + -1.0;
    v18 = *(float *)v45.i32;
    if ((v9 & 3) != 0)
      goto LABEL_11;
  }
LABEL_12:
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 24))(v55);
  if (v9)
  {
    for (i = 0; i != v9; ++i)
    {
      v30 = v56;
      if ((_DWORD)v56)
        v31 = HIDWORD(v56) == 0;
      else
        v31 = 1;
      if (v31)
        v30 = 0;
      v52 = v55[26] + 4 * (v58 * i);
      v53 = v30;
      v54 = v57;
      if (HIDWORD(v30) * HIDWORD(v57) == -1)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v32 = v54;
        v33 = &(*v6)->i32[i];
        v59 = &v52;
        v60 = v33;
        if (v54 != 1)
        {
LABEL_26:
          if (!(_DWORD)v53 || !HIDWORD(v53))
            continue;
          v34 = v53 - 1;
          v35 = (__int32 *)v52;
          v36 = HIDWORD(v53) - 1;
          if (HIDWORD(v53) == 1)
          {
LABEL_34:
            if (v34)
            {
              v41 = 4 * v32;
              do
              {
                *v35 = *v33;
                v35 = (__int32 *)((char *)v35 + v41);
                --v34;
              }
              while (v34);
            }
          }
          else
          {
            v37 = 4 * HIDWORD(v54);
            if ((_DWORD)v53 != 1)
            {
              v38 = 0;
              do
              {
                v39 = v35;
                v40 = v34;
                do
                {
                  *v39 = *v33;
                  v39 += v32;
                  --v40;
                }
                while (v40);
                *v39 = *v33;
                v35 = (__int32 *)((char *)v35 + v37);
                ++v38;
              }
              while (v38 != v36);
              goto LABEL_34;
            }
            do
            {
              *v35 = *v33;
              v35 = (__int32 *)((char *)v35 + v37);
              --v36;
            }
            while (v36);
          }
          *v35 = *v33;
          continue;
        }
      }
      else
      {
        v32 = v57;
        v33 = &(*v6)->i32[i];
        v59 = &v52;
        v60 = v33;
        if (v57 != 1)
          goto LABEL_26;
      }
      sub_22346A684((uint64_t)&v59);
    }
  }
  return a1;
}

void sub_22390DC08(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void *v4;
  uint64_t v5;

  v4 = *v2;
  if (*v2)
  {
    *(_QWORD *)(v1 + 24) = v4;
    operator delete(v4);
    v5 = *(_QWORD *)(v1 + 8);
    *(_QWORD *)(v1 + 8) = 0;
    if (!v5)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 8);
    *(_QWORD *)(v1 + 8) = 0;
    if (!v5)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  _Unwind_Resume(exception_object);
}

float sub_22390DC60(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  BOOL v4;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  float *v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float *v17;
  int v18;
  float *v19;
  float *v20;
  float *v21;
  float *v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  float *v27;
  int v28;
  int v29;
  uint64_t v30;
  float *v31;
  int v32;
  uint64_t v33;
  float *v34;
  int v35;
  float result;

  v2 = *(_DWORD *)(a1 + 8);
  v1 = *(_DWORD *)(a1 + 12);
  v3 = *(_DWORD *)(a1 + 16);
  if (v2)
    v4 = v1 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v6 = v2 - 1;
    v7 = v1 - 1;
    v8 = *(unsigned int *)(a1 + 20);
    v9 = *(unsigned int *)(a1 + 24);
    v10 = *(float **)a1;
    v11 = v3 - 1;
    if (v11)
    {
      v12 = *(unsigned int *)(a1 + 28);
      if (!v7)
      {
        if (v6)
        {
          v29 = 0;
          v30 = 4 * v12;
          do
          {
            v31 = v10;
            v32 = v6;
            do
            {
              *v31 = *v31 + -0.5;
              v31 += v8;
              --v32;
            }
            while (v32);
            *v31 = *v31 + -0.5;
            v10 = (float *)((char *)v10 + v30);
            ++v29;
          }
          while (v29 != v11);
          goto LABEL_31;
        }
        do
        {
          *v10 = *v10 + -0.5;
          v10 += v12;
          --v11;
        }
        while (v11);
LABEL_41:
        result = *v10 + -0.5;
        *v10 = result;
        return result;
      }
      if (!v6)
      {
        v33 = 4 * v12;
        do
        {
          v34 = v10;
          v35 = v7;
          do
          {
            *v34 = *v34 + -0.5;
            v34 += v9;
            --v35;
          }
          while (v35);
          *v34 = *v34 + -0.5;
          v10 = (float *)((char *)v10 + v33);
          ++v6;
        }
        while (v6 != v11);
        do
        {
LABEL_38:
          *v10 = *v10 + -0.5;
          v10 += v9;
          --v7;
        }
        while (v7);
        goto LABEL_41;
      }
      v13 = 0;
      v14 = 4 * v12;
      v15 = v9;
      v16 = 4 * v8;
      v17 = &v10[v9];
      do
      {
        v18 = 0;
        v19 = v17;
        v20 = v10;
        do
        {
          v21 = v19;
          v22 = v20;
          v23 = v6;
          do
          {
            *v22 = *v22 + -0.5;
            v22 = (float *)((char *)v22 + v16);
            --v23;
          }
          while (v23);
          *v22 = *v22 + -0.5;
          v20 = (float *)((char *)v20 + v15 * 4);
          ++v18;
          v19 = &v21[v15];
        }
        while (v18 != v7);
        v24 = v6;
        do
        {
          *v21 = *v21 + -0.5;
          v21 = (float *)((char *)v21 + v16);
          --v24;
        }
        while (v24);
        *v21 = *v21 + -0.5;
        v10 = (float *)((char *)v10 + v14);
        ++v13;
        v17 = (float *)((char *)v17 + v14);
      }
      while (v13 != v11);
    }
    if (!v7)
    {
LABEL_31:
      while (v6)
      {
        *v10 = *v10 + -0.5;
        v10 += v8;
        --v6;
      }
      goto LABEL_41;
    }
    if (v6)
    {
      v25 = 0;
      v26 = 4 * v9;
      do
      {
        v27 = v10;
        v28 = v6;
        do
        {
          *v27 = *v27 + -0.5;
          v27 += v8;
          --v28;
        }
        while (v28);
        *v27 = *v27 + -0.5;
        v10 = (float *)((char *)v10 + v26);
        ++v25;
      }
      while (v25 != v7);
      goto LABEL_31;
    }
    goto LABEL_38;
  }
  return result;
}

void sub_22390DEB0(uint64_t a1, uint64_t a2, _QWORD *a3, int32x4_t *a4, uint64_t *a5, uint64_t a6, _QWORD *a7, uint64_t *a8)
{
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  __n128 v15;
  int32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  int v23;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float32x4_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int32x4_t v32;
  int8x16_t v33;
  unsigned __int32 v34;
  int8x16_t v35;
  float32x4_t v36;
  float32x2_t *v37;
  int8x16_t v38;
  float v39;
  float32x2_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  int v44;
  _DWORD *v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _DWORD *v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  BOOL v54;
  uint64_t v55;
  int v56;
  _DWORD *v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _DWORD *v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  BOOL v66;
  uint64_t v67;
  int v68;
  _DWORD *v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  _DWORD *v74;
  int v75;
  uint64_t v76;
  float v77;
  float v78;
  unsigned int v79;
  float v80;
  float v81;
  float v82;
  float v83;
  float v84;
  float v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  float v89;
  unsigned int v90;
  float v91;
  float v92;
  float v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  int v97;
  char *v98;
  __int128 v99;
  float32x2_t v100;
  float32x2_t v101;
  float32x2_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int32x4_t v111;
  int32x4_t v112;
  __int128 v113;
  float32x4_t v114;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  int32x4_t v119;
  int32x4_t v120;
  int32x4_t v121;
  int32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  float32x4_t v127;
  float32x4_t v128;
  float32x4_t v129;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t v132;
  float32x4_t v133;
  float32x4_t v134;
  float32x4_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int32x4_t v138;
  int8x16_t v139;
  float32x4_t v140;
  int8x16_t v141;
  unsigned __int32 v142;
  float32x4_t v143;
  float32x4_t v144;
  int32x4_t v145;
  float32x4_t v146;
  int32x4_t *v147;
  int8x16_t v148;
  int32x4_t v149;
  int8x16_t v150;
  unsigned __int32 v151;
  char *v152;
  uint64_t v153;
  char *v154;
  int32x4_t *v155;
  int32x4_t v156;
  uint64_t v157;
  float32x2_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  int v162;
  char *v163;
  uint64_t v168;
  uint64_t v169;
  int v170;
  BOOL v171;
  BOOL v172;
  int v173;
  unint64_t v174;
  int v175;
  unint64_t v176;
  uint64_t v177;
  BOOL v178;
  BOOL v179;
  int v180;
  int v181;
  unint64_t v182;
  uint64_t v183;
  BOOL v184;
  BOOL v185;
  int v186;
  int v187;
  uint64_t v188;
  unint64_t v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  BOOL v193;
  int v195;
  uint64_t v196;
  int v197;
  unint64_t v198;
  int v199;
  unint64_t v200;
  int v201;
  unint64_t v202;
  BOOL v204;
  BOOL v206;
  BOOL v208;
  unsigned __int8 v209;
  unsigned __int8 v210;
  unsigned __int8 v211;
  unsigned __int8 v212;
  unsigned __int8 v213;
  unsigned __int8 v214;
  unsigned __int8 v215;
  unsigned __int8 v216;
  unsigned __int8 v217;
  unsigned __int8 v218;
  unsigned __int8 v219;
  unsigned __int8 v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  float32x2_t *v225;
  int v226;
  uint64_t v227;
  int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  float32x2_t *v236;
  int v237;
  uint64_t v238;
  float32x2_t v239;
  float32x2_t v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  float v244;
  float v245;
  int8x16_t v246;
  float32x2_t v247;
  int8x16_t v248;
  float32x2_t v249;
  float32x2_t v250;
  float32x4_t v251;
  int8x16_t v252;
  float32x2_t v253;
  float32x4_t v254;
  int32x4_t v255;
  float32x4_t v256;
  float32x2_t v257;
  float32x2_t v258;
  float32x2_t v259;
  uint64_t v261;
  BOOL v262;
  float32x2_t v263;
  float32x2_t v264;
  uint64_t v265;
  uint64_t n;
  uint64_t v267;
  uint64_t ii;
  uint64_t v269;
  uint64_t jj;
  uint64_t v271;
  uint64_t j;
  uint64_t v273;
  uint64_t k;
  uint64_t v275;
  uint64_t m;
  char *v277;
  void *v278;
  char *v279;
  void (***v280)(char *);
  void (**v281)(char *);
  float32x2_t v282;
  unsigned int v283;
  unsigned int v284;
  float32x2_t v285;
  uint64_t v286;
  uint64_t v287;
  BOOL v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  unsigned int v293;
  _DWORD *v294;
  int v295;
  uint64_t v296;
  int v297;
  uint64_t v298;
  _DWORD *v299;
  unsigned int v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  size_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unsigned int v308;
  unsigned int v309;
  uint64_t v310;
  unint64_t v311;
  unsigned int v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  const double *v322;
  int32x4_t v323;
  int32x4_t v324;
  const double *v325;
  unsigned __int128 v326;
  const double *v327;
  unsigned __int128 v328;
  const double *v329;
  unsigned __int128 v330;
  unsigned __int128 v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  float v336;
  float v337;
  unsigned int v338;
  unsigned int v339;
  float *v340;
  float v341;
  float v342;
  float v343;
  BOOL v344;
  BOOL v346;
  char *v347;
  void *v348;
  char *v349;
  void (***v350)(char *);
  void (**v351)(char *);
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  int v359;
  int v360;
  int v361;
  int v362;
  uint64_t v363;
  int v364;
  int v365;
  BOOL v366;
  BOOL v367;
  BOOL v368;
  int v369;
  int v370;
  int v371;
  uint64_t v372;
  char *v373;
  int v374;
  int v375;
  int v376;
  int v377;
  uint64_t v378;
  _QWORD *v379;
  int v380;
  int v381;
  uint64_t v382;
  int v383;
  int v384;
  unint64_t v385;
  int v386;
  int v387;
  unsigned int v388;
  uint64_t v389;
  unsigned int v390;
  unint64_t v391;
  char *v392;
  unsigned int v393;
  float32x4_t v394;
  uint64_t v395;
  int v397;
  float32x2_t v398;
  uint32x2_t v399;
  void *v400;
  char *v401;
  uint64_t v402[5];
  unint64_t v403;
  int v404;
  unsigned int v405;
  uint64_t v406;
  int v407;
  int v408;
  uint64_t v409;
  unint64_t v410;
  uint64_t v411;
  int v412;
  uint64_t v413;
  unint64_t v414;
  uint64_t v415;
  int v416;
  uint64_t v417;
  unint64_t v418;
  uint64_t v419;
  int v420;
  uint64_t v421;
  unint64_t v422;
  int v423;
  uint64_t v424;
  int v425;
  int v426;
  uint64_t v427;
  unint64_t v428;
  int v429;
  uint64_t v430;
  int v431;
  int v432;
  uint64_t v433;
  int v434;
  int v435;
  int v436;
  int v437;
  uint64_t v438;
  unint64_t v439;
  int v440;
  uint64_t v441;
  int v442;
  int v443;
  uint64_t v444;
  unint64_t v445;
  int v446;
  uint64_t v447;
  int v448;
  int v449;
  void *v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  __int128 v455;
  void *__p;
  char *v457;
  char *v458;
  __int128 v459;
  _DWORD *v460;
  _BYTE v461[32];
  __int128 v462;
  __int128 v463;
  int v464;
  __int128 v465;
  __int128 v466;
  int v467;
  uint64_t v468;

  v468 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(a1 + 8) + 24))(v402);
  v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a3[1] - *a3) >> 4);
  v13 = v405;
  if (v12 != v405)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 347, (uint64_t)"rgb_aux.size() == depthnet_input.rgb_aux.Shape()[kNumAuxDim]", 60, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v12 = v405;
    v13 = v405;
  }
  if (v12 != (a5[1] - *a5) >> 6)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 348, (uint64_t)"camera_to_world_aux.size() == depthnet_input.rgb_aux.Shape()[kNumAuxDim]", 72, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v12 = v405;
    v13 = v405;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a7[1] - *a7) >> 5) != v12)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 349, (uint64_t)"camera_aux.size() == depthnet_input.rgb_aux.Shape()[kNumAuxDim]", 63, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v13 = v405;
  }
  v14 = v13;
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a3[1] - *a3) >> 4) != v13
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 137, (uint64_t)"k_num_aux == rgb_aux.size()", 27, (uint64_t)"Number of auxiliary frame mismatch", 34, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_2239105D8(a2, v402);
  v15.n128_f32[0] = sub_22390DC60((uint64_t)v402);
  if ((_DWORD)v14)
  {
    v20 = 0;
    for (i = 0; i != v14; ++i)
    {
      v22 = v403;
      v23 = v404;
      if (HIDWORD(v403))
        _ZF = (_DWORD)v403 == 0;
      else
        _ZF = 1;
      if (_ZF || v404 == 0)
      {
        v22 = 0;
        v23 = 0;
      }
      v460 = (_DWORD *)(v402[4] + 4 * (v408 * i));
      *(_QWORD *)v461 = v22;
      *(_QWORD *)&v461[12] = v406;
      *(_DWORD *)&v461[8] = v23;
      *(_DWORD *)&v461[20] = v407;
      if (v23 * v407 == -1
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      sub_2239105D8(*a3 + v20, (uint64_t *)&v460);
      v15.n128_f32[0] = sub_22390DC60((uint64_t)&v460);
      v20 += 80;
    }
  }
  v26 = a5[1] - *a5;
  if ((v26 & 0x3FFFFFFFC0) != 0)
  {
    v27 = 0;
    v28 = (v26 >> 6);
    while (1)
    {
      v16.i64[0] = a4->i64[0];
      v16.i32[2] = a4->i32[2];
      v17.i64[0] = a4[1].i64[0];
      v17.i32[2] = a4[1].i32[2];
      v18.i64[0] = a4[3].i64[0];
      v18.i32[2] = a4[3].i32[2];
      v29.i64[0] = vzip1q_s32(v16, (int32x4_t)v17).u64[0];
      v30 = (int8x16_t)vnegq_f32(v18);
      v19.i32[0] = a4[2].i32[2];
      v31 = (int8x16_t)vtrn2q_s32(v16, (int32x4_t)v17);
      v31.i32[2] = HIDWORD(a4[2].i64[0]);
      v32 = vzip2q_s32(v16, (int32x4_t)v17);
      v33 = (int8x16_t)v32;
      v33.i32[2] = v19.i32[0];
      v15.n128_u64[0] = (unint64_t)vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v29.f32, *(float *)v30.i32), *(float32x2_t *)v31.i8, *(float32x2_t *)v18.f32, 1), *(float32x2_t *)v32.i8, v18, 2);
      v34 = vdupq_laneq_s32((int32x4_t)v33, 2).u32[0];
      v15.n128_u64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)a4[2].i8, *(float32x2_t *)v30.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)a4[2].i8, 1), *(float32x2_t *)v18.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL), *(float32x2_t *)v19.f32).u32[0]);
      v35 = vextq_s8(vextq_s8(v31, v31, 0xCuLL), v33, 8uLL);
      v17.i64[0] = __PAIR64__(v35.u32[0], v31.u32[0]);
      v17.i64[1] = v35.u32[1];
      v36.i64[0] = v35.i64[1];
      v36.i64[1] = v34;
      v29.i64[1] = a4[2].i64[0];
      v37 = (float32x2_t *)(*a5 + (v27 << 6));
      v19 = *(float32x4_t *)v37[6].f32;
      *(float *)v31.i32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, COERCE_FLOAT(*(_OWORD *)v37->f32)), v17, *v37, 1), v36, *(float32x4_t *)v37->f32, 2), (float32x4_t)v15, *(float32x4_t *)v37->f32, 3).f32[0];
      v16 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, COERCE_FLOAT(*(_OWORD *)v37[2].f32)), v17, v37[2], 1), v36, *(float32x4_t *)v37[2].f32, 2), (float32x4_t)v15, *(float32x4_t *)v37[2].f32, 3);
      v18 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, COERCE_FLOAT(*(_OWORD *)v37[4].f32)), v17, v37[4], 1), v36, *(float32x4_t *)v37[4].f32, 2), (float32x4_t)v15, *(float32x4_t *)v37[4].f32, 3);
      v38 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v19.f32[0]), v17, *(float32x2_t *)v19.f32, 1), v36, v19, 2), (float32x4_t)v15, v19, 3);
      v15.n128_f32[0] = v18.f32[2] + (float)(*(float *)v31.i32 + *(float *)&v16.i32[1]);
      if (v15.n128_f32[0] >= 3.0)
        v39 = 0.0;
      else
        v39 = (float)(v15.n128_f32[3] - (float)(v15.n128_f32[0] / 3.0))
            + (float)(v15.n128_f32[3] - (float)(v15.n128_f32[0] / 3.0));
      v15.n128_f32[0] = sqrtf(v39);
      v17.i32[0] = v38.i32[0];
      v40 = (float32x2_t)vextq_s8(v38, v38, 8uLL).u64[0];
      __p = (void *)__PAIR64__(COERCE_UNSIGNED_INT(sqrtf(vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v17.f32, *(float32x2_t *)v17.f32), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v38.i8, 1), *(float32x2_t *)v38.i8, 1), v40, v40).f32[0])), v15.n128_u32[0]);
      LODWORD(v457) = sqrtf((float)(*((float *)&__p + 1) * *((float *)&__p + 1))+ (float)(v15.n128_f32[0] * v15.n128_f32[0]));
      v41 = v414;
      if ((_DWORD)v414)
        v42 = HIDWORD(v414) == 0;
      else
        v42 = 1;
      if (v42)
        v41 = 0;
      v460 = (_DWORD *)(v413 + 4 * (v416 * v27));
      *(_QWORD *)v461 = v41;
      *(_QWORD *)&v461[8] = v415;
      if (HIDWORD(v41) * HIDWORD(v415) == -1)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v43 = *(unsigned int *)&v461[8];
        *(_QWORD *)&v465 = &v460;
        *((_QWORD *)&v465 + 1) = &__p;
        if (*(unsigned int *)&v461[8] == 1)
        {
LABEL_39:
          sub_22346A684((uint64_t)&v465);
          goto LABEL_56;
        }
      }
      else
      {
        v43 = v415;
        *(_QWORD *)&v465 = &v460;
        *((_QWORD *)&v465 + 1) = &__p;
        if (v415 == 1)
          goto LABEL_39;
      }
      if (!*(_DWORD *)v461 || !*(_DWORD *)&v461[4])
        goto LABEL_56;
      v44 = *(_DWORD *)v461 - 1;
      v45 = v460;
      v46 = *(_DWORD *)&v461[4] - 1;
      if (*(_DWORD *)&v461[4] == 1)
        goto LABEL_50;
      v47 = *(unsigned int *)&v461[12];
      if (*(_DWORD *)v461 != 1)
        break;
      do
      {
        *v45 = (_DWORD)__p;
        v45 += v47;
        --v46;
      }
      while (v46);
LABEL_55:
      v15.n128_u32[0] = __p;
      *v45 = (_DWORD)__p;
LABEL_56:
      v53 = v418;
      if ((_DWORD)v418)
        v54 = HIDWORD(v418) == 0;
      else
        v54 = 1;
      if (v54)
        v53 = 0;
      v460 = (_DWORD *)(v417 + 4 * (v420 * v27));
      *(_QWORD *)v461 = v53;
      *(_QWORD *)&v461[8] = v419;
      if (HIDWORD(v53) * HIDWORD(v419) == -1)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v55 = *(unsigned int *)&v461[8];
        *(_QWORD *)&v465 = &v460;
        *((_QWORD *)&v465 + 1) = (char *)&__p + 4;
        if (*(unsigned int *)&v461[8] == 1)
        {
LABEL_63:
          sub_22346A684((uint64_t)&v465);
          goto LABEL_80;
        }
      }
      else
      {
        v55 = v419;
        *(_QWORD *)&v465 = &v460;
        *((_QWORD *)&v465 + 1) = (char *)&__p + 4;
        if (v419 == 1)
          goto LABEL_63;
      }
      if (!*(_DWORD *)v461 || !*(_DWORD *)&v461[4])
        goto LABEL_80;
      v56 = *(_DWORD *)v461 - 1;
      v57 = v460;
      v58 = *(_DWORD *)&v461[4] - 1;
      if (*(_DWORD *)&v461[4] == 1)
        goto LABEL_74;
      v59 = *(unsigned int *)&v461[12];
      if (*(_DWORD *)v461 != 1)
      {
        v60 = 0;
        v61 = 4 * *(unsigned int *)&v461[12];
        do
        {
          v62 = v57;
          v63 = v56;
          do
          {
            *v62 = HIDWORD(__p);
            v62 += v55;
            --v63;
          }
          while (v63);
          *v62 = HIDWORD(__p);
          v57 = (_DWORD *)((char *)v57 + v61);
          ++v60;
        }
        while (v60 != v58);
LABEL_74:
        if (v56)
        {
          v64 = 4 * v55;
          do
          {
            *v57 = HIDWORD(__p);
            v57 = (_DWORD *)((char *)v57 + v64);
            --v56;
          }
          while (v56);
        }
        goto LABEL_79;
      }
      do
      {
        *v57 = HIDWORD(__p);
        v57 += v59;
        --v58;
      }
      while (v58);
LABEL_79:
      v15.n128_u32[0] = HIDWORD(__p);
      *v57 = HIDWORD(__p);
LABEL_80:
      v65 = v410;
      if ((_DWORD)v410)
        v66 = HIDWORD(v410) == 0;
      else
        v66 = 1;
      if (v66)
        v65 = 0;
      v460 = (_DWORD *)(v409 + 4 * (v412 * v27));
      *(_QWORD *)v461 = v65;
      *(_QWORD *)&v461[8] = v411;
      if (HIDWORD(v65) * HIDWORD(v411) == -1)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v67 = *(unsigned int *)&v461[8];
        *(_QWORD *)&v465 = &v460;
        *((_QWORD *)&v465 + 1) = &v457;
        if (*(unsigned int *)&v461[8] != 1)
        {
LABEL_90:
          if (!*(_DWORD *)v461 || !*(_DWORD *)&v461[4])
            goto LABEL_28;
          v68 = *(_DWORD *)v461 - 1;
          v69 = v460;
          v70 = *(_DWORD *)&v461[4] - 1;
          if (*(_DWORD *)&v461[4] == 1)
          {
LABEL_98:
            if (v68)
            {
              v76 = 4 * v67;
              do
              {
                *v69 = (_DWORD)v457;
                v69 = (_DWORD *)((char *)v69 + v76);
                --v68;
              }
              while (v68);
            }
          }
          else
          {
            v71 = *(unsigned int *)&v461[12];
            if (*(_DWORD *)v461 != 1)
            {
              v72 = 0;
              v73 = 4 * *(unsigned int *)&v461[12];
              do
              {
                v74 = v69;
                v75 = v68;
                do
                {
                  *v74 = (_DWORD)v457;
                  v74 += v67;
                  --v75;
                }
                while (v75);
                *v74 = (_DWORD)v457;
                v69 = (_DWORD *)((char *)v69 + v73);
                ++v72;
              }
              while (v72 != v70);
              goto LABEL_98;
            }
            do
            {
              *v69 = (_DWORD)v457;
              v69 += v71;
              --v70;
            }
            while (v70);
          }
          v15.n128_u32[0] = v457;
          *v69 = (_DWORD)v457;
          goto LABEL_28;
        }
      }
      else
      {
        v67 = v411;
        *(_QWORD *)&v465 = &v460;
        *((_QWORD *)&v465 + 1) = &v457;
        if (v411 != 1)
          goto LABEL_90;
      }
      sub_22346A684((uint64_t)&v465);
LABEL_28:
      if (++v27 == v28)
        goto LABEL_104;
    }
    v48 = 0;
    v49 = 4 * *(unsigned int *)&v461[12];
    do
    {
      v50 = v45;
      v51 = v44;
      do
      {
        *v50 = (_DWORD)__p;
        v50 += v43;
        --v51;
      }
      while (v51);
      *v50 = (_DWORD)__p;
      v45 = (_DWORD *)((char *)v45 + v49);
      ++v48;
    }
    while (v48 != v46);
LABEL_50:
    if (v44)
    {
      v52 = 4 * v43;
      do
      {
        *v45 = (_DWORD)__p;
        v45 = (_DWORD *)((char *)v45 + v52);
        --v44;
      }
      while (v44);
    }
    goto LABEL_55;
  }
LABEL_104:
  v363 = (*(uint64_t (**)(_QWORD, __n128))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), v15);
  v77 = (float)v363 / (float)*(unsigned int *)(a6 + 88);
  v78 = (float)HIDWORD(v363) / (float)*(unsigned int *)(a6 + 92);
  *(float *)&v79 = v77 * *(float *)(a6 + 16);
  v80 = *(float *)(a6 + 28);
  v81 = (float)(v77 * (float)(*(float *)(a6 + 24) + 0.5)) + -0.5;
  *(_QWORD *)&v465 = __PAIR64__(v78 * *(float *)(a6 + 20), v79);
  *((float *)&v465 + 2) = v81;
  *((float *)&v465 + 3) = (float)(v78 * (float)(v80 + 0.5)) + -0.5;
  sub_223207E58(&v460, (int *)&v465);
  v82 = *(float *)&v461[16];
  v83 = *(float *)&v461[20];
  v84 = *(float *)&v461[24];
  v85 = *(float *)&v461[28];
  sub_2238B6690((int32x4_t **)&v400, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a7[1] - *a7) >> 5));
  if (a7[1] != *a7)
  {
    v86 = (a7[1] - *a7) / 96;
    v87 = 48;
    do
    {
      v88 = *a7 + v87;
      v89 = (float)v363 / (float)*(unsigned int *)(v88 + 40);
      *(float *)&v90 = v89 * *(float *)(v88 - 32);
      v91 = *(float *)(v88 - 20);
      v92 = (float)HIDWORD(v363) / (float)*(unsigned int *)(v88 + 44);
      v93 = (float)(v89 * (float)(*(float *)(v88 - 24) + 0.5)) + -0.5;
      __p = (void *)__PAIR64__(v92 * *(float *)(v88 - 28), v90);
      *(float *)&v457 = v93;
      *((float *)&v457 + 1) = (float)(v92 * (float)(v91 + 0.5)) + -0.5;
      sub_223207E58(&v460, (int *)&__p);
      v459 = *(_OWORD *)&v461[16];
      v94 = *(_OWORD *)&v461[16];
      v95 = v462;
      v96 = v463;
      v465 = v462;
      v466 = v463;
      v97 = v464;
      v467 = v464;
      v98 = (char *)v400 + v87;
      *((_OWORD *)v98 - 2) = *(_OWORD *)v461;
      *((_OWORD *)v98 - 1) = v94;
      *(_OWORD *)v98 = v95;
      *((_OWORD *)v98 + 1) = v96;
      *((_DWORD *)v98 + 8) = v97;
      v87 += 96;
      *((_QWORD *)v98 + 5) = v363;
      --v86;
    }
    while (v86);
  }
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8));
  v364 = v103;
  v104 = v405;
  if (0xAAAAAAAAAAAAAAABLL * ((v401 - (_BYTE *)v400) >> 5) != v405
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 239, (uint64_t)"num_aux == camera_aux.size()", 28, (uint64_t)"Number of auxiliary frames mismatch", 35, (void (*)(void **))sub_22457406C)|| v104 != (a5[1] - *a5) >> 6&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 240, (uint64_t)"num_aux == aux_to_world.size()", 30, (uint64_t)"Number of auxiliary frames mismatch", 35, (void (*)(void **))sub_22457406C)|| v364 != (uint64_t)(*(_QWORD *)(a1 + 24) - *(_QWORD *)(a1 + 16)) >> 2&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp",
         241,
         (uint64_t)"number_depth_bin == depth_of_bins_.size()",
         41,
         (uint64_t)"Number of bins mismatch",
         23,
         (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v372 = v104;
  if ((_DWORD)v104)
  {
    v105 = v104 << 6;
    v106 = (char *)operator new(v104 << 6);
    v107 = v106;
    v108 = 0;
    do
    {
      v109 = &v106[v108];
      *(_OWORD *)v109 = xmmword_2246548DC;
      *((_OWORD *)v109 + 1) = *(_OWORD *)algn_2246548EC;
      *((_OWORD *)v109 + 2) = xmmword_2246548FC;
      *((_OWORD *)v109 + 3) = unk_22465490C;
      v108 += 64;
    }
    while (v105 != v108);
    v110 = (char *)operator new(v104 << 6);
    v115 = v110;
    v116 = 0;
    do
    {
      v117 = &v110[v116];
      *(_OWORD *)v117 = xmmword_2246548DC;
      *((_OWORD *)v117 + 1) = *(_OWORD *)algn_2246548EC;
      *((_OWORD *)v117 + 2) = xmmword_2246548FC;
      *((_OWORD *)v117 + 3) = unk_22465490C;
      v116 += 64;
    }
    while (v105 != v116);
    v118 = 0;
    v119 = *a4;
    v120 = a4[1];
    v121 = a4[2];
    v122 = a4[3];
    v394 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a4->i8, 1);
    v123 = (float32x4_t)vdupq_laneq_s32(*a4, 2);
    v124 = (float32x4_t)vdupq_laneq_s32(*a4, 3);
    v125 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v120.i8, 1);
    v126 = (float32x4_t)vdupq_laneq_s32(v120, 2);
    v127 = (float32x4_t)vdupq_laneq_s32(v120, 3);
    v128 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v121.i8, 1);
    v129 = (float32x4_t)vdupq_laneq_s32(v121, 2);
    v130 = (float32x4_t)vdupq_laneq_s32(v121, 3);
    v131 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v122.i8, 1);
    v132 = *a5;
    v133 = (float32x4_t)vdupq_laneq_s32(v122, 2);
    v134 = (float32x4_t)vdupq_laneq_s32(v122, 3);
    do
    {
      v111.i64[0] = *(_QWORD *)(v132 + v118);
      v111.i32[2] = *(_DWORD *)(v132 + v118 + 8);
      v112.i64[0] = *(_QWORD *)(v132 + v118 + 16);
      v112.i32[2] = *(_DWORD *)(v132 + v118 + 24);
      LODWORD(v113) = *(_DWORD *)(v132 + v118 + 40);
      v135.i64[0] = vzip1q_s32(v111, v112).u64[0];
      v114.i64[0] = *(_QWORD *)(v132 + v118 + 48);
      v136 = (int8x16_t)vtrn2q_s32(v111, v112);
      v114.i32[2] = *(_DWORD *)(v132 + v118 + 56);
      v137 = (int8x16_t)vnegq_f32(v114);
      v136.i32[2] = HIDWORD(*(_QWORD *)(v132 + v118 + 32));
      v138 = vzip2q_s32(v111, v112);
      v139 = (int8x16_t)v138;
      v139.i32[2] = v113;
      *(float32x2_t *)v140.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v135.f32, *(float *)v137.i32), *(float32x2_t *)v136.i8, *(float32x2_t *)v114.f32, 1), *(float32x2_t *)v138.i8, v114, 2);
      v141 = vextq_s8(vextq_s8(v136, v136, 0xCuLL), v139, 8uLL);
      v142 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v132 + v118 + 32), *(float32x2_t *)v137.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v132 + v118 + 32), 1), *(float32x2_t *)v114.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v137, v137, 8uLL), *(float32x2_t *)&v113).u32[0];
      v143.i64[0] = __PAIR64__(v141.u32[0], v136.u32[0]);
      v140.i64[1] = __PAIR64__(1.0, v142);
      v144.i64[0] = v141.i64[1];
      v143.i64[1] = v141.u32[1];
      v144.i64[1] = vdupq_laneq_s32((int32x4_t)v139, 2).u32[0];
      v135.i64[1] = *(_QWORD *)(v132 + v118 + 32);
      v145 = (int32x4_t)vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v135, *(float *)v119.i32), v394, v143), v123, v144), v124, v140);
      v114 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v135, *(float *)v120.i32), v125, v143), v126, v144), v127, v140);
      v146 = vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v135, *(float *)v121.i32), v128, v143), v129, v144), v130, v140);
      v111 = (int32x4_t)vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_n_f32(v135, *(float *)v122.i32), v131, v143), v133, v144), v134, v140);
      v147 = (int32x4_t *)&v107[v118];
      *v147 = v145;
      v147[1] = (int32x4_t)v114;
      v145.i64[0] = *(_QWORD *)&v107[v118];
      v145.i32[2] = *(_DWORD *)&v107[v118 + 8];
      v143.i64[0] = *(_QWORD *)&v107[v118 + 16];
      v143.i32[2] = *(_DWORD *)&v107[v118 + 24];
      v147[2] = (int32x4_t)v146;
      v144.i32[0] = *(_DWORD *)&v107[v118 + 40];
      v146.i64[0] = vzip1q_s32(v145, (int32x4_t)v143).u64[0];
      v148 = (int8x16_t)vtrn2q_s32(v145, (int32x4_t)v143);
      v146.i32[2] = *(_QWORD *)&v107[v118 + 32];
      v148.i32[2] = HIDWORD(*(_QWORD *)&v107[v118 + 32]);
      v149 = vzip2q_s32(v145, (int32x4_t)v143);
      v150 = (int8x16_t)v149;
      v150.i32[2] = v144.i32[0];
      *(float32x2_t *)v137.i8 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v146.f32, COERCE_FLOAT(v111.i32[0] ^ 0x80000000)), *(float32x2_t *)v148.i8, (float32x2_t)(v111.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v149.i8, COERCE_FLOAT(v111.i32[2] ^ 0x80000000));
      v151 = vdupq_laneq_s32((int32x4_t)v150, 2).u32[0];
      v112 = (int32x4_t)vextq_s8(vextq_s8(v148, v148, 0xCuLL), v150, 8uLL);
      v137.i64[1] = __PAIR64__(1.0, vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)&v107[v118 + 32], (float32x2_t)(v111.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v111.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)&v107[v118 + 32], 1), (float32x2_t)(v111.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v144.f32).u32[0]);
      *(_QWORD *)&v113 = __PAIR64__(v112.u32[0], v148.u32[0]);
      v144.i64[0] = v112.i64[1];
      v144.i64[1] = v151;
      *((_QWORD *)&v113 + 1) = v112.u32[1];
      v147[3] = v111;
      v146.i64[1] = v146.u32[2];
      v152 = &v110[v118];
      *(float32x4_t *)v152 = v146;
      *((_OWORD *)v152 + 1) = v113;
      *((float32x4_t *)v152 + 2) = v144;
      *((int8x16_t *)v152 + 3) = v137;
      v118 += 64;
    }
    while (v105 != v118);
    v153 = 96 * v104;
    __p = operator new(96 * v104);
    v457 = (char *)__p;
    v154 = (char *)__p + 96 * v104;
    v458 = v154;
    v155 = (int32x4_t *)((char *)__p + 80);
    do
    {
      v155[-4].i64[0] = 0;
      v155[-4].i64[1] = 0;
      v156 = vdupq_n_s32(0x7FC00000u);
      v155[-3] = v156;
      v155[-2] = v156;
      v155[-1] = v156;
      v155->i64[0] = 0;
      v155->i64[1] = 0;
      v155->i32[0] = 2143289344;
      v155[-5].i64[0] = (uint64_t)&off_24EC37688;
      v155[-5].i64[1] = (uint64_t)&off_24EC20868;
      v155 += 6;
      v153 -= 96;
    }
    while (v153);
    v457 = v154;
    v157 = 96 * v104;
    do
    {
      v158 = vadd_f32(*(float32x2_t *)((char *)v400 + v153 + 24), (float32x2_t)0x3F0000003F000000);
      *(_QWORD *)&v459 = *(_QWORD *)((char *)v400 + v153 + 16);
      *((float32x2_t *)&v459 + 1) = v158;
      v159 = *(_QWORD *)((char *)v400 + v153 + 88);
      sub_223207E58(&v460, (int *)&v459);
      v455 = *(_OWORD *)&v461[16];
      v160 = *(_OWORD *)&v461[16];
      v161 = v462;
      v99 = v463;
      v465 = v462;
      v466 = v463;
      v162 = v464;
      v467 = v464;
      v163 = (char *)__p + v153;
      *((_OWORD *)v163 + 1) = *(_OWORD *)v461;
      *((_OWORD *)v163 + 2) = v160;
      *((_OWORD *)v163 + 3) = v161;
      *((_OWORD *)v163 + 4) = v99;
      *((_DWORD *)v163 + 20) = v162;
      v153 += 96;
      *((_QWORD *)v163 + 11) = v159;
    }
    while (v157 != v153);
    if (!v364)
      goto LABEL_334;
  }
  else
  {
    v115 = 0;
    v107 = 0;
    v457 = 0;
    __p = 0;
    v458 = 0;
    if (!v364)
      goto LABEL_334;
  }
  v355 = 0;
  __asm { FMOV            V0.4S, #1.0 }
  v395 = *((_QWORD *)&_Q0 + 1);
  __asm { FMOV            V14.2S, #-1.0 }
  v373 = v107;
  v379 = v115;
  do
  {
    v168 = v421;
    v169 = v424;
    v170 = v426;
    if (HIDWORD(v422))
      v171 = (_DWORD)v422 == 0;
    else
      v171 = 1;
    v172 = v171 || v423 == 0;
    v173 = v172;
    if (v172)
      v174 = 0;
    else
      v174 = v422;
    if (v172)
      v175 = 0;
    else
      v175 = v423;
    v361 = v425;
    if (v175 * v425 == -1
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v397 = v432;
    v389 = v427;
    v176 = v428;
    v177 = v430;
    if (HIDWORD(v428))
      v178 = (_DWORD)v428 == 0;
    else
      v178 = 1;
    v179 = v178 || v429 == 0;
    v180 = v179;
    if (v179)
      v176 = 0;
    v391 = v176;
    if (v179)
      v181 = 0;
    else
      v181 = v429;
    v360 = v431;
    if (v181 * v431 == -1
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v387 = v180;
    v383 = v443;
    v382 = v438;
    v182 = v439;
    v183 = v441;
    if (HIDWORD(v439))
      v184 = (_DWORD)v439 == 0;
    else
      v184 = 1;
    v185 = v184 || v440 == 0;
    v186 = v185;
    if (v185)
      v182 = 0;
    v385 = v182;
    if (v185)
      v187 = 0;
    else
      v187 = v440;
    v359 = v442;
    if (v187 * v442 == -1
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v380 = v186;
    v188 = v168;
    v381 = v173;
    v189 = v174;
    v190 = v449;
    v191 = v444;
    v192 = v447;
    if (v446)
      v193 = (_DWORD)v445 == 0;
    else
      v193 = 1;
    if (v193 || HIDWORD(v445) == 0)
      v195 = 0;
    else
      v195 = v446;
    v362 = v448;
    if (v195 * v448 == -1
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    if ((_DWORD)v372)
    {
      v378 = 0;
      v357 = v389 + 4 * (v397 * v355);
      v358 = v188 + 4 * (v170 * v355);
      v356 = v382 + 4 * (v383 * v355);
      v196 = v191 + 4 * (v190 * v355);
      LODWORD(_Q0) = *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v355);
      v398 = (float32x2_t)_Q0;
      v197 = v381;
      if (!(_DWORD)v189)
        v197 = 1;
      if (v197)
        v198 = 0;
      else
        v198 = v189;
      v371 = HIDWORD(v198) * HIDWORD(v169);
      v199 = v387;
      if (!(_DWORD)v391)
        v199 = 1;
      if (v199)
        v200 = 0;
      else
        v200 = v391;
      v370 = HIDWORD(v200) * HIDWORD(v177);
      v201 = v380;
      if (!(_DWORD)v385)
        v201 = 1;
      if (v201)
        v202 = 0;
      else
        v202 = v385;
      v369 = HIDWORD(v202) * HIDWORD(v183);
      v204 = (_DWORD)v198 == (_DWORD)v363 && HIDWORD(v198) == HIDWORD(v363);
      v368 = v204;
      v206 = (_DWORD)v200 == (_DWORD)v363 && HIDWORD(v200) == HIDWORD(v363);
      v208 = (_DWORD)v202 == (_DWORD)v363 && HIDWORD(v202) == HIDWORD(v363);
      v366 = v208;
      v367 = v206;
      v377 = 4 * v362;
      v376 = 5 * v362;
      v365 = 3 * v362;
      v374 = v355;
      v375 = 3 * v362;
      do
      {
        if (v371 == -1)
        {
          sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
          v209 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v209 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670 || byte_255795678)
          {
            v271 = qword_255795648;
            for (j = qword_255795650; v271 != j; v271 += 16)
              (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v271)(*(_QWORD *)(v271 + 8), "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
          }
          v210 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v210 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670)
            abort();
          qword_255795660(*(_QWORD *)algn_255795668, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
        }
        if (v370 == -1)
        {
          sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
          v211 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v211 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670 || byte_255795678)
          {
            v273 = qword_255795648;
            for (k = qword_255795650; v273 != k; v273 += 16)
              (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v273)(*(_QWORD *)(v273 + 8), "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
          }
          v212 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v212 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670)
            abort();
          qword_255795660(*(_QWORD *)algn_255795668, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
        }
        if (v369 == -1)
        {
          sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_22457406C);
          v213 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v213 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670 || byte_255795678)
          {
            v275 = qword_255795648;
            for (m = qword_255795650; v275 != m; v275 += 16)
              (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v275)(*(_QWORD *)(v275 + 8), "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
          }
          v214 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v214 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670)
            abort();
          qword_255795660(*(_QWORD *)algn_255795668, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
        }
        v392 = (char *)__p;
        if (!v368)
        {
          sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 171, (uint64_t)"aux_depth_2d.Shape() == image_shape", 35, (uint64_t)"Image shape does not match", 26, (void (*)(void **))sub_22457406C);
          v215 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v215 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670 || byte_255795678)
          {
            v265 = qword_255795648;
            for (n = qword_255795650; v265 != n; v265 += 16)
              (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v265)(*(_QWORD *)(v265 + 8), "aux_depth_2d.Shape() == image_shape", 35, "Image shape does not match", 26);
          }
          v216 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v216 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670)
LABEL_429:
            abort();
          qword_255795660(*(_QWORD *)algn_255795668, "aux_depth_2d.Shape() == image_shape", 35, "Image shape does not match", 26);
        }
        if (!v367)
        {
          sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 172, (uint64_t)"aux_mask_2d.Shape() == image_shape", 34, (uint64_t)"Image shape does not match", 26, (void (*)(void **))sub_22457406C);
          v217 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v217 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670 || byte_255795678)
          {
            v267 = qword_255795648;
            for (ii = qword_255795650; v267 != ii; v267 += 16)
              (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v267)(*(_QWORD *)(v267 + 8), "aux_mask_2d.Shape() == image_shape", 34, "Image shape does not match", 26);
          }
          v218 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v218 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670)
            goto LABEL_429;
          qword_255795660(*(_QWORD *)algn_255795668, "aux_mask_2d.Shape() == image_shape", 34, "Image shape does not match", 26);
        }
        if (!v366)
        {
          sub_2245739C8("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 173, (uint64_t)"ray_angle_2d.Shape() == image_shape", 35, (uint64_t)"Image shape does not match", 26, (void (*)(void **))sub_22457406C);
          v219 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v219 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670 || byte_255795678)
          {
            v269 = qword_255795648;
            for (jj = qword_255795650; v269 != jj; v269 += 16)
              (*(void (**)(_QWORD, const char *, uint64_t, const char *, uint64_t))v269)(*(_QWORD *)(v269 + 8), "ray_angle_2d.Shape() == image_shape", 35, "Image shape does not match", 26);
          }
          v220 = atomic_load((unsigned __int8 *)&qword_255795680);
          if ((v220 & 1) == 0 && __cxa_guard_acquire(&qword_255795680))
          {
            __cxa_atexit((void (*)(void *))sub_2245741EC, &qword_255795648, &dword_22314D000);
            __cxa_guard_release(&qword_255795680);
          }
          if (!byte_255795670)
            goto LABEL_429;
          qword_255795660(*(_QWORD *)algn_255795668, "ray_angle_2d.Shape() == image_shape", 35, "Image shape does not match", 26);
        }
        if (HIDWORD(v363) && (_DWORD)v363)
        {
          v221 = 0;
          v222 = 0;
          v223 = 0;
          v224 = 0;
          v225 = (float32x2_t *)&v392[96 * v378];
          v226 = v435;
          v384 = v436;
          v227 = v433;
          v228 = v375;
          v229 = 0;
          v230 = v434;
          v231 = v362;
          v232 = 2 * v362;
          v234 = v376;
          v233 = v377;
          v235 = v437 * v374;
          v236 = (float32x2_t *)&v373[64 * v378];
          do
          {
            v237 = 0;
            v238 = 0;
            *(float *)&_Q0 = v85 + (float)(v83 * (float)v224);
            v239 = v398;
            v240 = vmul_f32(v398, *(float32x2_t *)&_Q0);
            v393 = v222;
            v241 = v222;
            v386 = v235;
            v242 = v235;
            v390 = v223;
            v243 = v223;
            v388 = v229;
            do
            {
              *(float *)&v99 = v84 + (float)(v82 * (float)v238);
              v251.i64[1] = v395;
              v251.f32[0] = *(float *)&v99;
              v251.f32[1] = v85 + (float)(v83 * (float)v224);
              v252 = (int8x16_t)vmulq_n_f32(v251, v239.f32[0]);
              *(float32x2_t *)&v99 = vmul_f32(v239, *(float32x2_t *)&v99);
              v256 = (float32x4_t)vextq_s8(v252, v252, 8uLL);
              v253 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)&v99, *(float32x2_t *)v252.i8), v240, *(float32x2_t *)v252.i8, 1), *(float32x2_t *)v256.f32, v239);
              v253.f32[0] = 1.0 / sqrtf(v253.f32[0]);
              v254 = vmulq_n_f32((float32x4_t)v252, v253.f32[0]);
              *(_DWORD *)(v196 + 4 * (v221 + v237)) = v254.i32[0];
              *(_DWORD *)(v196 + 4 * (v231 + v237)) = v254.i32[1];
              *(_DWORD *)(v196 + 4 * (v232 + v237)) = v254.i32[2];
              v100.i32[0] = v236[1].i32[0];
              v101.i32[0] = v236[3].i32[0];
              v102.i32[0] = v236[5].i32[0];
              *(float32x2_t *)v254.f32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(*v236, *(float *)v252.i32), v236[2], *(float32x2_t *)v252.i8, 1), v236[4], (float32x4_t)v252, 2);
              *(float32x2_t *)&v254.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v100, *(float32x2_t *)v252.i8), v101, *(float32x2_t *)v252.i8, 1), *(float32x2_t *)v256.f32, v102);
              *(float32x2_t *)v256.f32 = v236[6];
              v256.i32[2] = v236[7].i32[0];
              v255 = (int32x4_t)vaddq_f32(v256, v254);
              *(_DWORD *)(v358 + 4 * (v361 * v378) + 4 * v241) = v255.i32[2];
              v256.i32[0] = 0;
              if (*(float *)&v255.i32[2] <= 0.000001)
              {
                v244 = 0.0;
                v245 = 0.0;
              }
              else
              {
                v257 = v225[11];
                v258 = vadd_f32(v225[3], vdiv_f32(vmul_f32(*(float32x2_t *)v255.i8, v225[2]), (float32x2_t)vdup_laneq_s32(v255, 2)));
                v259.f32[0] = (float)v257.u32[0];
                _NF = v258.f32[0] >= 0.0 && v258.f32[0] < v259.f32[0];
                v244 = 0.0;
                v245 = 0.0;
                if (_NF)
                {
                  v261 = HIDWORD(*(_QWORD *)&v257);
                  v262 = v258.f32[1] >= 0.0 && v258.f32[1] < (float)v261;
                  v259.f32[1] = (float)v261;
                  v263 = vdiv_f32(v258, v259);
                  v264 = vadd_f32(vadd_f32(v263, v263), _D14);
                  if (v262)
                    v256.f32[0] = 1.0;
                  else
                    v256.f32[0] = 0.0;
                  if (v262)
                    v244 = v264.f32[0];
                  else
                    v244 = 0.0;
                  if (v262)
                    v245 = v264.f32[1];
                  else
                    v245 = 0.0;
                }
              }
              *(float *)(v227 + 4 * v242) = v244;
              *(float *)(v227 + 4 * (v230 + v242)) = v245;
              *(_DWORD *)(v357 + 4 * (v360 * v378) + 4 * v243) = v256.i32[0];
              v256.i64[0] = v379[8 * v378 + 6];
              v256.i32[2] = v379[8 * v378 + 7];
              v246 = (int8x16_t)vsubq_f32((float32x4_t)v252, v256);
              v247 = (float32x2_t)vextq_s8(v246, v246, 8uLL).u64[0];
              v100 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v246.i8, *(float32x2_t *)v246.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v246.i8, 1), *(float32x2_t *)v246.i8, 1), v247, v247);
              v248 = (int8x16_t)vmulq_n_f32((float32x4_t)v246, 1.0 / sqrtf(v100.f32[0]));
              v249 = vmul_f32(*(float32x2_t *)&v99, v253);
              v250 = vmul_f32(v240, v253);
              v239 = v398;
              v253.f32[0] = v398.f32[0] * v253.f32[0];
              *(float32x2_t *)&v99 = vmla_f32(vmla_lane_f32(vmul_f32(v249, *(float32x2_t *)v248.i8), v250, *(float32x2_t *)v248.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v248, v248, 8uLL), v253);
              *(_DWORD *)(v356 + 4 * (v359 * v378) + 4 * v229) = v99;
              *(_DWORD *)(v196 + 4 * (v228 + v237)) = v248.i32[0];
              *(_DWORD *)(v196 + 4 * (v233 + v237)) = v248.i32[1];
              ++v238;
              v229 += v183;
              v243 += v177;
              *(_DWORD *)(v196 + 4 * (v234 + v237)) = v248.i32[2];
              v242 += v226;
              v241 += v169;
              v237 += v192;
            }
            while (v363 != v238);
            ++v224;
            v229 = v388 + HIDWORD(v183);
            v223 = v390 + HIDWORD(v177);
            v235 = v386 + v384;
            v222 = v393 + HIDWORD(v169);
            v234 += HIDWORD(v192);
            v233 += HIDWORD(v192);
            v228 += HIDWORD(v192);
            v232 += HIDWORD(v192);
            v231 += HIDWORD(v192);
            v221 += HIDWORD(v192);
          }
          while (v224 != HIDWORD(v363));
        }
        v374 += v364;
        v376 += v365;
        v377 += v365;
        v375 += v365;
        ++v378;
      }
      while (v378 != v372);
    }
    ++v355;
    v107 = v373;
    v115 = v379;
  }
  while (v355 != v364);
LABEL_334:
  v277 = (char *)__p;
  if (__p)
  {
    v278 = __p;
    if (v457 != __p)
    {
      v279 = v457 - 96;
      v280 = (void (***)(char *))(v457 - 96);
      do
      {
        v281 = *v280;
        v280 -= 12;
        (*v281)(v279);
        _ZF = v279 == v277;
        v279 = (char *)v280;
      }
      while (!_ZF);
      v278 = __p;
    }
    v457 = v277;
    operator delete(v278);
  }
  if (v115)
    operator delete(v115);
  if (v107)
    operator delete(v107);
  if (*(_BYTE *)(a1 + 40) == 2)
  {
    v399 = (uint32x2_t)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
    v282 = vdiv_f32(vcvt_f32_u32(v399), vcvt_f32_u32(*(uint32x2_t *)(a6 + 88)));
    *(float *)&v283 = *(float *)(a6 + 16) * v282.f32[0];
    *(float *)&v284 = vmuls_lane_f32(*(float *)(a6 + 20), v282, 1);
    v285 = vadd_f32(vmul_f32(v282, vadd_f32(*(float32x2_t *)(a6 + 24), (float32x2_t)0x3F0000003F000000)), (float32x2_t)0xBF000000BF000000);
    *(_QWORD *)&v465 = __PAIR64__(v284, v283);
    *((float32x2_t *)&v465 + 1) = v285;
    sub_223207E58(&v460, (int *)&v465);
    v286 = *(_QWORD *)v461;
    v287 = *(_QWORD *)&v461[8];
    v288 = v451 == v399.i32[0] && v452 == v399.i32[1];
    if (!v288
      && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/DepthPredictor.cpp", 293, (uint64_t)"camera_ref.ImageWidth() == image.Shape(0) && camera_ref.ImageHeight() == image.Shape(1)", 87, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      goto LABEL_376;
    }
    v289 = v453;
    if (v453 == 1)
    {
      v290 = v451;
      if (v454 == v451)
      {
        v291 = v452 * v454;
        v292 = (char *)v450;
        if (!(_DWORD)v291 || v450)
        {
          if (!(_DWORD)v291)
            goto LABEL_383;
        }
        else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_376;
        }
        v304 = 4 * v291;
        goto LABEL_382;
      }
      if (v451 && v452)
      {
        v292 = (char *)v450;
        v302 = v452 - 1;
        if (v452 == 1)
        {
LABEL_379:
          if (v292
            || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v304 = 4 * (v290 - ((_DWORD)v290 != 0)) + 4;
LABEL_382:
            bzero(v292, v304);
            goto LABEL_383;
          }
        }
        else
        {
          v303 = 4 * v454;
          while (v292
               || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            bzero(v292, 4 * v290);
            v292 += v303;
            if (!--v302)
              goto LABEL_379;
          }
        }
LABEL_376:
        abort();
      }
LABEL_383:
      v305 = *a8;
      v306 = a8[1];
      v307 = v306 - *a8;
      if (v306 != *a8)
        goto LABEL_384;
      goto LABEL_403;
    }
    if (!v451 || !v452)
      goto LABEL_383;
    v293 = v451 - 1;
    v294 = v450;
    v295 = v452 - 1;
    if (v452 != 1)
    {
      v296 = v454;
      if (v451 == 1)
      {
        do
        {
          *v294 = 0;
          v294 += v296;
          --v295;
        }
        while (v295);
        goto LABEL_402;
      }
      v297 = 0;
      v298 = 4 * v454;
      do
      {
        v299 = v294;
        v300 = v293;
        do
        {
          *v299 = 0;
          v299 += v289;
          --v300;
        }
        while (v300);
        *v299 = 0;
        v294 = (_DWORD *)((char *)v294 + v298);
        ++v297;
      }
      while (v297 != v295);
    }
    if (v293)
    {
      v301 = 4 * v289;
      do
      {
        *v294 = 0;
        v294 = (_DWORD *)((char *)v294 + v301);
        --v293;
      }
      while (v293);
    }
LABEL_402:
    *v294 = 0;
    v305 = *a8;
    v332 = a8[1];
    v307 = v332 - *a8;
    if (v332 != *a8)
    {
LABEL_384:
      v308 = 0;
      v309 = 0;
      v310 = 0;
      v311 = 0xCCCCCCCCCCCCCCCDLL * (v307 >> 3);
      __asm { FMOV            V1.2D, #0.5 }
      do
      {
        v314 = v305 + 40 * v310;
        v315 = *(_QWORD *)(v314 + 16);
        v316 = *(_QWORD *)(v314 + 24);
        if (v315 == v316)
        {
          v313 = 0;
        }
        else
        {
          v317 = v316 - v315 - 32;
          if (v317 >= 0x100)
          {
            v319 = (v317 >> 5) + 1;
            v320 = v319 & 7;
            if ((v319 & 7) == 0)
              v320 = 8;
            v321 = v319 - v320;
            v318 = v315 + 32 * v321;
            v322 = (const double *)(v315 + 144);
            v323 = 0uLL;
            v324 = 0uLL;
            do
            {
              v325 = v322 - 16;
              v326 = (unsigned __int128)vld4q_f64(v325);
              v327 = v322 - 8;
              v328 = (unsigned __int128)vld4q_f64(v327);
              v329 = v322;
              v330 = (unsigned __int128)vld4q_f64(v329);
              v329 += 8;
              v331 = (unsigned __int128)vld4q_f64(v329);
              v323 = vsubq_s32(v323, vuzp1q_s32((int32x4_t)vcgeq_f64((float64x2_t)v326, _Q1), (int32x4_t)vcgeq_f64((float64x2_t)v328, _Q1)));
              v324 = vsubq_s32(v324, vuzp1q_s32((int32x4_t)vcgeq_f64((float64x2_t)v330, _Q1), (int32x4_t)vcgeq_f64((float64x2_t)v331, _Q1)));
              v322 += 32;
              v321 -= 8;
            }
            while (v321);
            v313 = vaddvq_s32(vaddq_s32(v324, v323));
          }
          else
          {
            v313 = 0;
            v318 = v315;
          }
          do
          {
            if (*(double *)(v318 + 16) >= 0.5)
              ++v313;
            v318 += 32;
          }
          while (v318 != v316);
        }
        if (v313 > v308)
        {
          v309 = v310;
          v308 = v313;
        }
        ++v310;
      }
      while (v310 != v311);
      goto LABEL_404;
    }
LABEL_403:
    v309 = 0;
LABEL_404:
    v333 = v305 + 40 * v309;
    v334 = *(_QWORD *)(v333 + 16);
    v335 = *(_QWORD *)(v333 + 24);
    if (v334 != v335)
    {
      v338 = v453;
      v339 = v454;
      v340 = (float *)v450;
      do
      {
        if (*(double *)(v334 + 16) >= 0.5)
        {
          v341 = *(float *)(v334 + 8);
          if (v341 > 0.000001)
          {
            v342 = *(float *)&v287 + (float)((float)(*(float *)&v286 * *(float *)v334) / v341);
            v343 = *((float *)&v287 + 1) + (float)((float)(*((float *)&v286 + 1) * *(float *)(v334 + 4)) / v341);
            if (v342 >= -0.5)
            {
              v336 = (double)v399.u32[0] + -0.5;
              v344 = v342 < v336;
            }
            else
            {
              v344 = 0;
            }
            if (!v344 || v343 < -0.5)
            {
              v346 = 0;
            }
            else
            {
              v337 = (double)v399.u32[1] + -0.5;
              v346 = v343 < v337;
            }
            if (v346)
              v340[v339 * v343 + v338 * v342] = v341;
          }
        }
        v334 += 32;
      }
      while (v334 != v335);
    }
  }
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
  v347 = (char *)v400;
  if (v400)
  {
    v348 = v400;
    if (v401 != v400)
    {
      v349 = v401 - 96;
      v350 = (void (***)(char *))(v401 - 96);
      do
      {
        v351 = *v350;
        v350 -= 12;
        (*v351)(v349);
        _ZF = v349 == v347;
        v349 = (char *)v350;
      }
      while (!_ZF);
      v348 = v400;
    }
    v401 = v347;
    operator delete(v348);
  }
}

void sub_223910330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51)
{
  sub_2238B6838(&a51);
  _Unwind_Resume(a1);
}

void sub_2239103F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51)
{
  void *v51;
  void *v52;

  sub_2238B6838((void **)&STACK[0x328]);
  if (v51)
  {
    operator delete(v51);
    if (!v52)
    {
LABEL_3:
      sub_2238B6838(&a51);
      _Unwind_Resume(a1);
    }
  }
  else if (!v52)
  {
    goto LABEL_3;
  }
  operator delete(v52);
  sub_2238B6838(&a51);
  _Unwind_Resume(a1);
}

void sub_22391043C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  int v25;

  v5 = *(char **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = v5;
  if (a2 <= (v4 - (uint64_t)v5) >> 2)
  {
    if (a2)
    {
      bzero(v5, 4 * a2);
      v6 = &v5[4 * a2];
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    v7 = *(char **)a1;
    v8 = (uint64_t)&v5[-*(_QWORD *)a1];
    v9 = v8 >> 2;
    v10 = (v8 >> 2) + a2;
    if (v10 >> 62)
      sub_22316E078();
    v11 = v4 - (_QWORD)v7;
    if (v11 >> 1 > v10)
      v10 = v11 >> 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL)
      v12 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 >> 62)
        sub_223174E94();
      v13 = operator new(4 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[4 * v9];
    v15 = 4 * a2;
    v16 = &v13[4 * v12];
    bzero(v14, v15);
    v17 = &v14[v15];
    if (v5 != v7)
    {
      v18 = v5 - v7 - 4;
      if (v18 < 0x2C)
        goto LABEL_29;
      if ((unint64_t)(v5 - v13 - v8) < 0x20)
        goto LABEL_29;
      v19 = (v18 >> 2) + 1;
      v20 = 4 * (v19 & 0x7FFFFFFFFFFFFFF8);
      v6 = &v5[-v20];
      v14 -= v20;
      v21 = &v13[4 * v9 - 16];
      v22 = v5 - 16;
      v23 = v19 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 8;
      }
      while (v23);
      if (v19 != (v19 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_29:
        do
        {
          v25 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v14 - 1) = v25;
          v14 -= 4;
        }
        while (v6 != v7);
      }
    }
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v16;
    if (v7)
      operator delete(v7);
  }
}

void sub_2239105D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int v5;
  float v6;
  float v7;
  float v8;
  float v9;
  unsigned int i;
  uint64_t v11;
  float v12;
  float v13;
  float v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  float v21;
  float v22;
  float32x2_t v23;
  float32x2_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  unsigned int v28;
  float v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  float32x4_t v33;

  v4 = *((unsigned int *)a2 + 2);
  v5 = *((_DWORD *)a2 + 3);
  if (*((_DWORD *)a2 + 4) != 3
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/ImageUtils.cpp", 38, (uint64_t)"out_channel == kExpectedChannels", 32, (uint64_t)"Number of output channels and 3 mismatch.", 41, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v6 = (float)*(unsigned int *)(a1 + 60);
  v7 = (float)*(unsigned int *)(a1 + 56);
  v8 = nextafterf(v7 + -0.5, 0.0);
  v9 = nextafterf(v6 + -0.5, 0.0);
  if (v5 && (_DWORD)v4)
  {
    for (i = 0; i != v5; ++i)
    {
      v11 = 0;
      v12 = (float)(v6 / (float)v5) * (float)((float)i + 0.5);
      v13 = fmaxf(v12, 0.5);
      if (v9 >= v12)
        v14 = v13;
      else
        v14 = v9;
      v15 = *(_DWORD *)(a1 + 68);
      v16 = *(_QWORD *)(a1 + 24);
      v17 = *((_DWORD *)a2 + 5);
      v18 = *((_DWORD *)a2 + 6) * i;
      v19 = *a2;
      v20 = *((_DWORD *)a2 + 7);
      do
      {
        v21 = (float)(v7 / (float)v4) * (float)((float)v11 + 0.5);
        v22 = fmaxf(v21, 0.5);
        if (v8 >= v21)
          v23.f32[0] = v22;
        else
          v23.f32[0] = v8;
        v23.f32[1] = v14;
        v24 = vadd_f32(v23, (float32x2_t)0xBF000000BF000000);
        v25 = *(_QWORD *)(a1 + 56);
        v26 = v24.f32[0] >= 0.0 && v24.f32[0] < (float)((float)v25 + -1.0);
        if (!v26 || (v24.f32[1] >= 0.0 ? (v27 = v24.f32[1] < (float)((float)HIDWORD(v25) + -1.0)) : (v27 = 0), !v27))
          sub_22324A974();
        v28 = vcvtms_u32_f32(v24.f32[0]);
        v24.f32[0] = v24.f32[0] - (float)floorf(v24.f32[0]);
        v29 = v24.f32[1] - (float)floorf(v24.f32[1]);
        v30 = *(_DWORD *)(a1 + 48);
        v31 = v15 * vcvtms_u32_f32(v24.f32[1]);
        v32 = v30 * v28;
        v33 = vaddq_f32(vaddq_f32(vaddq_f32(vmulq_n_f32(*(float32x4_t *)(v16 + 4 * v31 + 4 * v32), (float)(v24.f32[0] * v29) + (float)((float)(1.0 - v24.f32[0]) - v29)), vmulq_n_f32(*(float32x4_t *)(v16 + 4 * (v15 + v31) + 4 * v32), v29 - (float)(v24.f32[0] * v29))), vmulq_n_f32(*(float32x4_t *)(v16 + 4 * v31 + 4 * (v30 + v32)), v24.f32[0] - (float)(v24.f32[0] * v29))), vmulq_n_f32(*(float32x4_t *)(v16 + 4 * (v15 + v31) + 4 * (v30 + v32)), v24.f32[0] * v29));
        *(_DWORD *)(v19 + 4 * v18) = v33.i32[0];
        *(_DWORD *)(v19 + 4 * (v20 + v18)) = v33.i32[1];
        *(_DWORD *)(v19 + 4 * (2 * v20 + v18)) = v33.i32[2];
        ++v11;
        v18 += v17;
      }
      while (v4 != v11);
    }
  }
}

uint64_t sub_223910808(uint64_t a1)
{
  uint64_t v2;
  uint64_t context;
  uint64_t plan;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  unsigned __int8 v15;
  uint64_t v16;
  const char *v17;
  NSObject *v18;
  uint64_t v19;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v21;
  int v22;
  const char *v23;
  int v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  std::string v30;
  char v31;
  char *category[2];
  void *__p;
  __int128 v34;
  char v35;
  _QWORD v36[4];
  _QWORD v37[2];

  *(_QWORD *)a1 = &off_24EC5CBE0;
  *(_OWORD *)(a1 + 40) = 0u;
  v2 = a1 + 40;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  __p = operator new(0x48uLL);
  v34 = xmmword_2245C4500;
  strcpy((char *)__p, "noveldepth_resource_public/realdata_5p4gh9air8/model.espresso.net");
  sub_223CEFFD4((std::string::size_type)&__p, 0, 0, &v30);
  if (SHIBYTE(v34) < 0)
  {
    operator delete(__p);
    if (v31)
      goto LABEL_7;
  }
  else if (v31)
  {
    goto LABEL_7;
  }
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 43, (uint64_t)"network_path_opt", 16, (uint64_t)"Failed to load network from resource", 36, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (!v31)
    sub_22324A974();
LABEL_7:
  context = espresso_create_context();
  *(_QWORD *)(a1 + 8) = context;
  if (!context
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 48, (uint64_t)"ctx_ != nullptr", 15, (uint64_t)"Failed to create espresso context.", 34, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (espresso_context_set_int_option()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 52, (uint64_t)"ESPRESSO_STATUS_SUCCESS == status", 33, (uint64_t)"Failed to specify engine option!", 32, (void (*)(void **))sub_22457406C)|| (plan = espresso_create_plan(), (*(_QWORD *)(a1 + 16) = plan) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 56, (uint64_t)"plan_ != nullptr", 16, (uint64_t)"Error creating espresso plan.", 29, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  if (espresso_plan_add_network()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 61, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"Error adding depth network.", 27, (void (*)(void **))sub_22457406C))
  {
LABEL_34:
    abort();
  }
  v29 = espresso_plan_build();
  if (v29)
  {
    sub_223910ECC(&v28);
    if (**(int **)(v28 + 56) <= 5)
    {
      v9 = *(unsigned __int8 *)(v28 + 72);
      v10 = sub_22322F254(v28, "OSLogSurrogateAppender", 1, 0);
      v11 = v10 ? v10 + 16 : 0;
      if (v9 || v10)
      {
        v19 = (uint64_t)&v28;
        rep = std::chrono::steady_clock::now().__d_.__rep_;
        v21 = std::chrono::system_clock::now().__d_.__rep_;
        v22 = 5;
        v23 = "unknown file";
        v24 = 64;
        v26 = 0;
        v27 = 0;
        v25 = "unknown function";
        v12 = (uint64_t *)(v28 + 16);
        if (*(char *)(v28 + 39) < 0)
        {
          v14 = *(char **)(v28 + 16);
          v13 = *(char **)(v28 + 24);
        }
        else
        {
          v13 = (char *)*(unsigned __int8 *)(v28 + 39);
          v14 = (char *)(*(_QWORD *)v19 + 16);
        }
        category[0] = v14;
        category[1] = v13;
        v15 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v15 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
        {
          sub_224568628((uint64_t)&__p);
          sub_223199C58("com.apple.cv3d", (unint64_t)&__p, &xmmword_255788F40);
          if (v35 && SHIBYTE(v34) < 0)
            operator delete(__p);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
          __cxa_guard_release(&qword_255788F58);
        }
        v16 = byte_255788F57;
        if (byte_255788F57 >= 0)
        {
          v17 = (const char *)&xmmword_255788F40;
        }
        else
        {
          v16 = *((_QWORD *)&xmmword_255788F40 + 1);
          v17 = (const char *)xmmword_255788F40;
        }
        v37[0] = v17;
        v37[1] = v16;
        __p = os_log_create(v17, category[0]);
        sub_223199D38(&v34, (uint64_t)v37);
        sub_223199D38(v36, (uint64_t)category);
        v18 = __p;
        sub_223199BDC((uint64_t)&__p);
        sub_2239119BC(v11, v12, v18, OS_LOG_TYPE_ERROR, &v29);
        if (v9)
        {
          sub_22322C138((uint64_t)&v19, "Error building espresso plan. Error code: %d", v29);
          sub_223182C08((uint64_t)&v19);
        }
        sub_223182DAC((uint64_t)&v19);
      }
    }
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 65, (uint64_t)"", 0, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    goto LABEL_34;
  }
  v5 = operator new(0x10uLL);
  __p = v5;
  *v5 = xmmword_224654750;
  *(_QWORD *)&v34 = v5 + 1;
  *((_QWORD *)&v34 + 1) = v5 + 1;
  v19 = 0xF000000140;
  LODWORD(rep) = 3;
  LODWORD(v37[0]) = 0x10000;
  sub_223FE27B8("pcl_color", (uint64_t)&__p, &v19, a1 + 24, (uint64_t)v37, v2);
  if (__p)
  {
    *(_QWORD *)&v34 = __p;
    operator delete(__p);
  }
  v6 = operator new(0x10uLL);
  __p = v6;
  *v6 = xmmword_2246547B0;
  *(_QWORD *)&v34 = v6 + 1;
  *((_QWORD *)&v34 + 1) = v6 + 1;
  v19 = 0xF000000140;
  LODWORD(v37[0]) = 0x10000;
  sub_223FE233C("pcl_depth", (uint64_t)&__p, &v19, a1 + 24, (uint64_t)v37, (_QWORD *)(a1 + 72));
  if (__p)
  {
    *(_QWORD *)&v34 = __p;
    operator delete(__p);
  }
  v7 = operator new(0x10uLL);
  __p = v7;
  *v7 = xmmword_224654920;
  *(_QWORD *)&v34 = v7 + 1;
  *((_QWORD *)&v34 + 1) = v7 + 1;
  v19 = 0x3C00000050;
  LODWORD(v37[0]) = 0x20000;
  sub_223FE233C("preds", (uint64_t)&__p, &v19, a1 + 24, (uint64_t)v37, (_QWORD *)(a1 + 96));
  if (__p)
  {
    *(_QWORD *)&v34 = __p;
    operator delete(__p);
  }
  if (v31 && SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
  return a1;
}

void sub_223910DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,uint64_t a29,uint64_t a30,void *__p,void *a32,int a33,__int16 a34,char a35,char a36,char a37,int a38,__int16 a39,char a40,char a41)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a11);
  if (a28)
  {
    if (a27 < 0)
      operator delete(a22);
  }
  _Unwind_Resume(a1);
}

void sub_223910ECC(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CCA38);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCA38))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CCA30);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CCA38);
  }
  *a1 = qword_2540CCA30;
}

void sub_223910F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CCA38);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CCA38);
  _Unwind_Resume(a1);
}

_QWORD *sub_223910FC0(_QWORD *a1)
{
  *a1 = &off_24EC5CBE0;
  if (espresso_plan_destroy()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 100, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"Failed to destroy espresso plan obj", 35, (void (*)(void **))sub_22457406C)|| espresso_context_destroy()&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 103, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"Failed to tear down espresso context", 36, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  return a1;
}

void sub_22391107C(_QWORD *a1)
{
  sub_223910FC0(a1);
  JUMPOUT(0x227684CE8);
}

__n128 sub_2239110A0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 72);
  *(__n128 *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 88);
  return result;
}

void sub_2239110C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::chrono::steady_clock::time_point v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  std::mutex *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float v12;
  char *v13;
  uint64_t *v14;
  std::string::size_type size;
  std::string *v16;
  std::string::size_type v17;
  std::string::size_type v18;
  int v19;
  __n128 *v22;
  std::string *v23;
  size_t v24;
  float v25;
  int v26;
  int v27;
  float *v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  size_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const void *v49;
  int v50;
  int v51;
  _BOOL8 v52;
  int v53;
  _DWORD *v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  int v63;
  int v64;
  char *v65;
  size_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  size_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *__dst;
  float v80;
  std::string v81;
  __int128 v82;
  void *__p;
  __int128 v84;
  void *memptr[2];
  __int128 v86;
  int v87[4];
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  v4.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  if (espresso_plan_execute_sync()
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthNetwork.cpp", 112, (uint64_t)"ret == ESPRESSO_STATUS_SUCCESS", 30, (uint64_t)"Failed to run espresso network", 30, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  memptr[0] = "cv3d.recon.";
  memptr[1] = (void *)11;
  *(_QWORD *)&v86 = "Stats.NovelDepthNetwork";
  *((_QWORD *)&v86 + 1) = 23;
  sub_2231A9820((uint64_t)memptr, (uint64_t)v87, 0, 0, &v81);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v5 = sub_2241471F8();
    v6 = v5[2];
    if (!v6)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v6 = v5[2];
    }
    v7 = *(_QWORD *)(v6 + 64);
    v8 = (std::mutex *)(v7 + 32);
    std::mutex::lock((std::mutex *)(v7 + 32));
    v10 = *(_QWORD *)(v7 + 96);
    v9 = *(_QWORD *)(v7 + 104);
    std::mutex::unlock(v8);
    if (v10 != v9)
    {
      sub_2241471F8();
      v11 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11))
      {
        *(_OWORD *)memptr = 0u;
        v86 = 0u;
        v87[0] = 728325608;
        kdebug_trace();
        v12 = (float)(std::chrono::steady_clock::now().__d_.__rep_ - v4.__d_.__rep_) / 1000000.0;
        v4.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
        v80 = v12;
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 24))(v11))
        {
          v13 = (char *)operator new(0x20uLL);
          v84 = xmmword_2245B8EA0;
          strcpy(v13, "espresso_plan_execute_sync (ms)");
          *(_QWORD *)&v82 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v82 + 1) = 2;
          __p = v13;
          v14 = sub_2241471F8();
          sub_2231FBBA8((uint64_t)v14, v11, &v80, (uint64_t)&__p, &v82);
          if (SHIBYTE(v84) < 0)
            operator delete(__p);
        }
        kdebug_trace();
      }
    }
  }
  *(_OWORD *)memptr = 0u;
  v86 = 0u;
  v87[0] = 728325624;
  kdebug_trace();
  size = HIBYTE(v81.__r_.__value_.__r.__words[2]);
  if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v81.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    v16 = &v81;
    if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v16 = (std::string *)v81.__r_.__value_.__r.__words[0];
    v17 = v16->__r_.__value_.__r.__words[0];
    v18 = v16->__r_.__value_.__l.__size_;
    v19 = v16->__r_.__value_.__s.__data_[16];
    if (v17 == 0x6365722E64337663 && v18 == 0x73746174532E6E6FLL && v19 == 46)
    {
      v22 = sub_223187510();
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = &v81;
      else
        v23 = (std::string *)v81.__r_.__value_.__r.__words[0];
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v24 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
      else
        v24 = v81.__r_.__value_.__l.__size_;
      v25 = (float)(std::chrono::steady_clock::now().__d_.__rep_ - v4.__d_.__rep_) / 1000000.0;
      std::chrono::steady_clock::now();
      *(float *)&__p = v25;
      sub_2231897A8((uint64_t *)v22, v23, v24, (float *)&__p, (uint64_t)"espresso_plan_execute_sync (ms)", 31);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v81.__r_.__value_.__l.__data_);
  v26 = *(_DWORD *)(a1 + 104);
  if (v26)
  {
    v27 = *(_DWORD *)(a1 + 108);
    if (v27)
    {
      v28 = *(float **)(a1 + 96);
      v29 = v27 - 1;
      if (v29)
      {
        v30 = 4 * *(unsigned int *)(a1 + 116);
        do
        {
          if (*v28 < 0.0)
            *v28 = 0.0;
          v28 = (float *)((char *)v28 + v30);
          --v29;
        }
        while (v29);
      }
      if (*v28 < 0.0)
        *v28 = 0.0;
    }
  }
  if (*(_DWORD *)(a1 + 108))
    v31 = v26 == 0;
  else
    v31 = 1;
  if (v31)
    v32 = 0;
  else
    v32 = *(_QWORD *)(a1 + 104);
  if (HIDWORD(v32))
    v33 = v32 << 32;
  else
    v33 = 0;
  if ((_DWORD)v32)
    v34 = HIDWORD(v32) == 0;
  else
    v34 = 1;
  if (v34)
    v35 = 0;
  else
    v35 = v32;
  v77 = v35;
  v36 = HIDWORD(v35) * (v33 >> 30);
  v37 = 3;
  if (((v33 >> 30) & ((v33 >> 30) - 1)) == 0)
    v37 = (v33 >> 30) - 1;
  v38 = v37 | (v37 >> 1) | ((v37 | (v37 >> 1)) >> 2);
  v39 = v38 | (v38 >> 4) | ((v38 | (v38 >> 4)) >> 8);
  v40 = v39 | (v39 >> 16) | ((v39 | (v39 >> 16)) >> 32);
  if (v40 + 1 > 8)
    v41 = v40 + 1;
  else
    v41 = 8;
  v42 = v36 & 0x3FFFFFFFCLL;
  v78 = v41;
  if ((v36 & 0x3FFFFFFFCLL) == 0)
  {
    __dst = 0;
    v44 = HIDWORD(v33);
    v45 = *(unsigned int *)(a1 + 112);
    if (!(_DWORD)v32)
      goto LABEL_76;
LABEL_69:
    if ((_DWORD)v45 != 1)
      goto LABEL_76;
    v46 = *(unsigned int *)(a1 + 116);
    v47 = *(unsigned int *)(a1 + 104);
    if ((_DWORD)v46 == (_DWORD)v44 && (_DWORD)v46 == (_DWORD)v47)
    {
      v48 = (*(_DWORD *)(a1 + 108) * v44);
      v49 = *(const void **)(a1 + 96);
      if (!(_DWORD)v48 || v49)
      {
        if (!(_DWORD)v48)
          goto LABEL_107;
      }
      else if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_92;
      }
      v71 = 4 * v48;
      v72 = __dst;
      v73 = v49;
LABEL_106:
      memmove(v72, v73, v71);
      goto LABEL_107;
    }
    if (!(_DWORD)v47)
      goto LABEL_107;
    v64 = *(_DWORD *)(a1 + 108);
    if (!v64)
      goto LABEL_107;
    v65 = *(char **)(a1 + 96);
    v66 = 4 * v47;
    v67 = v64 - 1;
    if (v64 == 1)
    {
      v70 = __dst;
LABEL_103:
      if (v65
        || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        v72 = v70;
        v73 = v65;
        v71 = v66;
        goto LABEL_106;
      }
    }
    else
    {
      v68 = 4 * v46;
      v69 = 4 * v44;
      v70 = __dst;
      while (v65
           || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        memmove(v70, v65, v66);
        v65 += v68;
        v70 += v69;
        if (!--v67)
          goto LABEL_103;
      }
    }
LABEL_92:
    abort();
  }
  memptr[0] = 0;
  v43 = malloc_type_posix_memalign(memptr, v41, v36 & 0x3FFFFFFFCLL, 0x1F88E90uLL);
  if (v43)
    sub_2244E2E20(v43, v78, v42);
  __dst = (char *)memptr[0];
  v44 = HIDWORD(v33);
  v45 = *(unsigned int *)(a1 + 112);
  if ((_DWORD)v32)
    goto LABEL_69;
LABEL_76:
  v50 = *(_DWORD *)(a1 + 104);
  if (v50)
  {
    v51 = *(_DWORD *)(a1 + 108);
    if (v51)
    {
      v52 = v32 != 0;
      v53 = v50 - 1;
      v54 = *(_DWORD **)(a1 + 96);
      v55 = v51 - 1;
      if (v55)
      {
        v56 = *(unsigned int *)(a1 + 116);
        if (!v53)
        {
          v75 = 4 * v44;
          v60 = __dst;
          do
          {
            *v60 = *v54;
            v54 += v56;
            v60 = (_DWORD *)((char *)v60 + v75);
            --v55;
          }
          while (v55);
          goto LABEL_101;
        }
        v57 = 0;
        v58 = 4 * v56;
        v59 = 4 * v44;
        v60 = __dst;
        do
        {
          v61 = v60;
          v62 = v54;
          v63 = v53;
          do
          {
            *v61 = *v62;
            v62 += v45;
            v61 += v52;
            --v63;
          }
          while (v63);
          *v61 = *v62;
          v54 = (_DWORD *)((char *)v54 + v58);
          v60 = (_DWORD *)((char *)v60 + v59);
          ++v57;
        }
        while (v57 != v55);
      }
      else
      {
        v60 = __dst;
        if (!v53)
        {
LABEL_101:
          *v60 = *v54;
          goto LABEL_107;
        }
      }
      v74 = 4 * v45;
      do
      {
        *v60 = *v54;
        v54 = (_DWORD *)((char *)v54 + v74);
        v60 += v52;
        --v53;
      }
      while (v53);
      goto LABEL_101;
    }
  }
LABEL_107:
  v76 = v33 | (v32 != 0);
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v76;
  *(_BYTE *)(a2 + 16) = 0;
  *(_DWORD *)(a2 + 17) = (_DWORD)__p;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&__p + 3);
  *(_BYTE *)(a2 + 24) = 0;
  *(_WORD *)(a2 + 25) = v81.__r_.__value_.__l.__data_;
  *(_BYTE *)(a2 + 27) = v81.__r_.__value_.__s.__data_[2];
  *(_QWORD *)(a2 + 32) = v42;
  *(_QWORD *)(a2 + 40) = __dst;
  *(_QWORD *)(a2 + 48) = v78;
  *(_QWORD *)(a2 + 56) = v77;
  *(_QWORD *)(a2 + 64) = 4 * v76;
}

void sub_2239118B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_223911940@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  double result;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  int v11;

  v5 = xmmword_224654930;
  sub_223207E58(&v6, (int *)&v5);
  v2 = v8;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v2;
  result = *(double *)&v9;
  v4 = v10;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = 0xF000000140;
  *(_QWORD *)a1 = &off_24EC37688;
  *(_QWORD *)(a1 + 8) = &off_24EC20868;
  return result;
}

void sub_2239119BC(uint64_t a1, uint64_t *a2, os_log_t oslog, os_log_type_t type, int *a5)
{
  size_t v9;
  std::__shared_weak_count_vtbl *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  int v35;
  void *v36;
  uint64_t v37;
  std::__shared_weak_count_vtbl *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  if (a1 && *(_QWORD *)(a1 + 8))
  {
    v9 = _os_log_pack_size();
    v10 = (std::__shared_weak_count_vtbl *)operator new(v9, (std::align_val_t)8uLL);
    v11 = (std::__shared_weak_count *)operator new();
    v12 = v11;
    v11->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v11->__shared_weak_owners_ = 0;
    v11[1].__vftable = v10;
    v38 = v10;
    *(_QWORD *)&v39 = v10;
    *((_QWORD *)&v39 + 1) = v11;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    v40 = 0uLL;
    v41 = 0;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v12);
    }
    v16 = v38;
    v17 = (_DWORD *)_os_log_pack_fill();
    v18 = *a5;
    *v17 = 67109120;
    v17[1] = v18;
    v19 = operator new();
    v20 = *((unsigned __int8 *)a2 + 23);
    if ((v20 & 0x80u) == 0)
      v21 = a2;
    else
      v21 = (uint64_t *)*a2;
    if ((v20 & 0x80u) != 0)
      v20 = a2[1];
    *(_QWORD *)v19 = v16;
    *(_OWORD *)(v19 + 8) = v39;
    v39 = 0uLL;
    *(_OWORD *)(v19 + 24) = v40;
    v40 = 0uLL;
    *(_QWORD *)(v19 + 40) = v21;
    *(_QWORD *)(v19 + 48) = v20;
    *(_BYTE *)(v19 + 56) = type;
    v37 = v19;
    (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8), &v37);
    v22 = v37;
    v37 = 0;
    if (v22)
    {
      v23 = *(std::__shared_weak_count **)(v22 + 32);
      if (v23)
      {
        v24 = (unint64_t *)&v23->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      v26 = *(std::__shared_weak_count **)(v22 + 16);
      if (v26)
      {
        v27 = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      MEMORY[0x227684CE8](v22, 0x10F0C40B62ED6C6);
    }
    v29 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
    if (*((_QWORD *)&v40 + 1))
    {
      v30 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    v32 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
    if (*((_QWORD *)&v39 + 1))
    {
      v33 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
      do
        v34 = __ldaxr(v33);
      while (__stlxr(v34 - 1, v33));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  else
  {
    os_log_type_enabled(oslog, type);
    v35 = *a5;
    LODWORD(v38) = 67109120;
    HIDWORD(v38) = v35;
    v36 = (void *)_os_log_send_and_compose_impl();
    if (v36)
      free(v36);
  }
}

void sub_223911DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v6 = va_arg(va2, _QWORD);
  sub_22319A054((uint64_t *)va1);
  sub_22319A054((uint64_t *)va);
  sub_223199DE8((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_223911DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223199DE8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223911DD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10D0C40B950D02ALL);
  _Unwind_Resume(a1);
}

_QWORD *sub_223911DFC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC5CC40;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_223911E3C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24EC5CC40;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  JUMPOUT(0x227684CE8);
}

void sub_223911E8C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  BOOL v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  float16x4_t *v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t *v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v66;
  float *v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  float *v71;
  unsigned int v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  float *v89;
  float *v90;
  float v91;
  float *v92;
  BOOL v93;
  int v94;
  unint64_t v95;
  float v96;
  int v97;
  unint64_t v98;
  uint64_t v99;
  size_t v100;
  const char *v101;
  unsigned __int8 v102;
  unsigned __int8 v103;
  const char *v104;
  size_t v105;
  _BYTE *v106;
  const char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  NSObject *v113;
  uint64_t v114;
  uint64_t v115;
  size_t v116;
  std::__shared_weak_count_vtbl *v117;
  std::__shared_weak_count *v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  double v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  uint64_t (**v138)();
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  std::__shared_weak_count *v145;
  unint64_t *v146;
  unint64_t v147;
  std::__shared_weak_count *v148;
  unint64_t *v149;
  unint64_t v150;
  double v151;
  double v152;
  void *v153;
  uint64_t v154;
  float *v155;
  uint64_t v156;
  BOOL v157;
  uint64_t v158;
  float v159;
  float *v160;
  float *v161;
  float *v162;
  BOOL v163;
  int v164;
  float *v165;
  unint64_t v166;
  float v167;
  int v168;
  unint64_t v169;
  float v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  uint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  uint64_t (**v178)();
  uint64_t (*v179)();
  uint64_t v180;
  unsigned __int8 v181;
  __int16 v182;
  unint64_t v183;
  unsigned int *v184;
  uint64_t v185;
  uint64_t v186;
  unsigned int v188;
  int v189;
  _DWORD *v190;
  _DWORD *v191;
  unsigned int v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  _DWORD *v198;
  _DWORD *v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  const void *v207;
  BOOL v208;
  unsigned int v209;
  BOOL v210;
  char *v211;
  char *v212;
  size_t v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  unint64_t v223;
  unsigned int v224;
  uint64_t v225;
  unint64_t v226;
  unsigned int v227;
  BOOL v228;
  uint64_t v229;
  BOOL v230;
  unint64_t v231;
  unint64_t v232;
  _BOOL8 v233;
  BOOL v234;
  uint64_t v235;
  uint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  unint64_t v240;
  unsigned int v241;
  uint64_t v242;
  unint64_t v243;
  unsigned int v244;
  unsigned int v245;
  uint64_t v246;
  int32x2_t v247;
  int32x2_t v248;
  uint64_t v249;
  std::__shared_weak_count *v250;
  unint64_t *v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t (**v257)();
  uint64_t (*v258)();
  int v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t *v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t *v266;
  unint64_t v267;
  unint64_t v268;
  float32x2_t v269;
  float32x2_t v270;
  int v271;
  unint64_t *v272;
  unint64_t v273;
  uint64_t v274;
  unsigned int v275;
  uint64_t v276;
  BOOL v277;
  unint64_t v278;
  std::__shared_weak_count *v279;
  unint64_t *v280;
  unint64_t v281;
  std::__shared_weak_count *v282;
  unint64_t *v283;
  unint64_t v284;
  void *v285;
  uint64_t v286;
  int v287;
  unint64_t v288;
  unint64_t v289;
  uint64_t v290;
  float *v291;
  uint64_t v292;
  BOOL v293;
  uint64_t v294;
  float *v295;
  unsigned int v296;
  uint64_t v297;
  int *v298;
  int v299;
  int v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  __int128 *v305;
  int *v306;
  int v307;
  int *v308;
  unsigned int v309;
  int v310;
  BOOL v311;
  unsigned int v312;
  uint64_t v313;
  __int128 *v314;
  __int128 v315;
  _OWORD *v316;
  float *v317;
  float *v318;
  float v319;
  float *v320;
  BOOL v321;
  int v322;
  unint64_t v323;
  float v324;
  int v325;
  unint64_t v326;
  uint64_t v327;
  size_t v328;
  const char *v329;
  unsigned __int8 v330;
  unsigned __int8 v331;
  const char *v332;
  size_t v333;
  _BYTE *v334;
  const char *v335;
  unint64_t v336;
  int v337;
  uint64_t v338;
  uint64_t v339;
  _BYTE *v340;
  NSObject *v341;
  uint64_t v342;
  uint64_t v343;
  size_t v344;
  std::__shared_weak_count_vtbl *v345;
  std::__shared_weak_count *v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  uint64_t v352;
  double v353;
  double v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  std::__shared_weak_count *v359;
  unint64_t *v360;
  unint64_t v361;
  std::__shared_weak_count *v362;
  unint64_t *v363;
  unint64_t v364;
  uint64_t (**v365)();
  std::__shared_weak_count *v366;
  unint64_t *v367;
  unint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  std::__shared_weak_count *v372;
  unint64_t *v373;
  unint64_t v374;
  std::__shared_weak_count *v375;
  unint64_t *v376;
  unint64_t v377;
  double v378;
  double v379;
  void *v380;
  uint64_t v381;
  float *v382;
  uint64_t v383;
  BOOL v384;
  uint64_t v385;
  float v386;
  float *v387;
  float *v388;
  float *v389;
  BOOL v390;
  int v391;
  float *v392;
  unint64_t v393;
  float v394;
  int v395;
  unint64_t v396;
  float v397;
  std::__shared_weak_count *v398;
  unint64_t *v399;
  unint64_t v400;
  std::__shared_weak_count *v401;
  unint64_t *v402;
  unint64_t v403;
  std::__shared_weak_count *v404;
  unint64_t *v405;
  unint64_t v406;
  _BYTE *v407;
  uint64_t v408;
  _BYTE *v409;
  uint64_t v410;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  int v418;
  uint64_t v419;
  _BYTE v420[28];
  unint64_t v421;
  uint64_t v422;
  uint64_t v423;
  __int128 v424;
  uint64_t v425;
  char v426[16];
  std::__shared_weak_count *v427;
  uint64_t v428;
  int v429;
  int v430;
  unint64_t v431;
  char v432[8];
  uint64_t v433;
  std::__shared_weak_count *v434;
  uint64_t v435;
  unsigned int v436;
  unint64_t v437;
  char v438;
  char v439;
  uint64_t v440;
  int v441;
  _QWORD v442[2];
  int v443;
  int v444;
  int v445;
  int v446;
  uint64_t v447;
  int v448;
  int v449;
  uint64_t *v450;
  _BYTE v451[32];
  __int128 v452;
  uint64_t v453;
  __int128 v454;
  char v455;
  char v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t (**v459)();
  _BYTE v460[24];
  _BYTE v461[32];
  unint64_t v462;
  __int128 v463;
  __int16 v464;
  uint64_t v465;

  v465 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v442);
  v440 = v442[1];
  v441 = v443;
  sub_2231D48A8(a2, (uint64_t)v432);
  v431 = v437;
  if ((_DWORD)v440 != (_DWORD)v437)
  {
    sub_22391452C((uint64_t)v460, (unsigned int *)&v440, (unsigned int *)&v431);
    if (v460[23] >= 0)
      v407 = v460;
    else
      v407 = *(_BYTE **)v460;
    if (v460[23] >= 0)
      v408 = v460[23];
    else
      v408 = *(_QWORD *)&v460[8];
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthPredictor.cpp", 45, (uint64_t)"", 0, (uint64_t)v407, v408, (void (*)(void **))sub_22457406C);
LABEL_559:
    if ((v460[23] & 0x80000000) != 0)
      operator delete(*(void **)v460);
    abort();
  }
  if (HIDWORD(v440) != HIDWORD(v437))
  {
    sub_22391472C((uint64_t)v460, (unsigned int *)&v440 + 1, (unsigned int *)&v431 + 1);
    if (v460[23] >= 0)
      v409 = v460;
    else
      v409 = *(_BYTE **)v460;
    if (v460[23] >= 0)
      v410 = v460[23];
    else
      v410 = *(_QWORD *)&v460[8];
    sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/DepthEstimation/src/NovelDepthPredictor.cpp", 48, (uint64_t)"", 0, (uint64_t)v409, v410, (void (*)(void **))sub_22457406C);
    goto LABEL_559;
  }
  v5 = v433;
  if (!v433)
    goto LABEL_20;
  v6 = v434;
  if (!v434)
    goto LABEL_16;
  p_shared_owners = (unint64_t *)&v434->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
    v5 = v433;
    v10 = v434;
    if (!v434)
      goto LABEL_16;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    v5 = v433;
    v10 = v434;
    if (!v434)
      goto LABEL_16;
  }
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
  {
LABEL_16:
    if (v439)
      goto LABEL_17;
    goto LABEL_20;
  }
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  if (v439)
  {
LABEL_17:
    (*(void (**)(_BYTE *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v5 + 96))(v460, v5, 0);
    v14 = v437;
    v15 = v435;
    v16 = HIDWORD(v437);
    if (!v438)
      goto LABEL_29;
    goto LABEL_21;
  }
LABEL_20:
  *(_QWORD *)v460 = 0;
  v14 = v437;
  v15 = v435;
  v16 = HIDWORD(v437);
  if (!v438)
    goto LABEL_29;
LABEL_21:
  if (v15)
  {
    v17 = v433;
    v18 = v434;
    if (v434)
    {
      v19 = (unint64_t *)&v434->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      do
        v21 = __ldaxr(v19);
      while (__stlxr(v21 - 1, v19));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v17 + 88))(v17, 0, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v15 = v435;
    LODWORD(v16) = HIDWORD(v437);
  }
LABEL_29:
  v22 = v436 * v16;
  if (v436 * (_DWORD)v16)
    _ZF = 4 * v14 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v72 = 0;
    v73 = v15 + 2 * v22;
    v74 = v444;
    v75 = v445;
    v76 = v442[0];
    v77 = v446;
    v78 = 2 * v446;
    v79 = 2 * v436;
    do
    {
      v80 = 0;
      v81 = v72;
      do
      {
        _H0 = *(_WORD *)(v15 + v80);
        __asm { FCVT            S0, H0 }
        *(_DWORD *)(v76 + 4 * v81) = _S0;
        LOWORD(_S0) = *(_WORD *)(v15 + v80 + 2);
        __asm { FCVT            S0, H0 }
        *(_DWORD *)(v76 + 4 * (v77 + v81)) = _S0;
        LOWORD(_S0) = *(_WORD *)(v15 + v80 + 4);
        __asm { FCVT            S0, H0 }
        *(_DWORD *)(v76 + 4 * (v78 + v81)) = _S0;
        LOWORD(_S0) = *(_WORD *)(v15 + v80);
        __asm { FCVT            S0, H0 }
        LOWORD(_S0) = *(_WORD *)(v15 + v80 + 2);
        __asm { FCVT            S0, H0 }
        LOWORD(_S0) = *(_WORD *)(v15 + v80 + 4);
        __asm { FCVT            S0, H0 }
        v80 += 8;
        v81 += v74;
      }
      while (8 * (v14 & 0x3FFFFFFF) != v80);
      v15 += v79;
      v72 += v75;
    }
    while (v15 != v73);
  }
  v24 = *(_QWORD *)v460;
  *(_QWORD *)v460 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  sub_2231D3D90(a2, (uint64_t)v426);
  v25 = HIDWORD(v440);
  if (HIDWORD(v440))
  {
    v26 = v440;
    if ((_DWORD)v440)
    {
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = v429;
      v31 = v430;
      v32 = v428;
      v33 = v448;
      v34 = v449;
      v35 = v447;
      v36 = v440 - 1;
      v37 = v447 + 4 * v440;
      v38 = v428 + 2 * v440;
      v40 = v448 != 1 || v429 != 1;
      while (v26 >= 0x10)
      {
        v41 = 0;
        v50 = __CFADD__(v31 * v29, (_DWORD)v36);
        v52 = __CFADD__(v34 * v29, (_DWORD)v36) || HIDWORD(v36) != 0 || v40;
        if (v50 || (v52 & 1) != 0)
          goto LABEL_46;
        v53 = 4 * (v34 * v29);
        v54 = 2 * (v31 * v29);
        if (v35 + v53 < (unint64_t)(v38 + v54) && v32 + v54 < (unint64_t)(v37 + v53))
          break;
        v55 = v27;
        v56 = v28;
        v57 = v26 & 0xFFFFFFF8;
        do
        {
          v58 = (float16x4_t *)(v32 + 2 * v55);
          v59 = (int8x16_t)vcvtq_f32_f16(*v58);
          v60 = (int8x16_t)vcvtq_f32_f16(v58[1]);
          v61 = (int8x16_t *)(v35 + 4 * v56);
          *v61 = vandq_s8(v59, (int8x16_t)vcgezq_f32((float32x4_t)v59));
          v61[1] = vandq_s8(v60, (int8x16_t)vcgezq_f32((float32x4_t)v60));
          v56 += 8;
          v55 += 8;
          v57 -= 8;
        }
        while (v57);
        v41 = v26 & 0xFFFFFFF8;
        if (v41 != v26)
          goto LABEL_46;
LABEL_50:
        ++v29;
        v28 += v34;
        v27 += v31;
        if (v29 == v25)
          goto LABEL_69;
      }
      v41 = 0;
LABEL_46:
      v42 = v26 - v41;
      v43 = v28 + v33 * v41;
      v44 = v27 + v30 * v41;
      do
      {
        _H1 = *(_WORD *)(v32 + 2 * v44);
        __asm { FCVT            S1, H1 }
        if (_S1 < 0.0)
          _S1 = 0.0;
        *(float *)(v35 + 4 * v43) = _S1;
        v43 += v33;
        v44 += v30;
        --v42;
      }
      while (v42);
      goto LABEL_50;
    }
  }
LABEL_69:
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8));
  sub_22391492C(&v458);
  if (**(int **)(v458 + 56) <= 2)
  {
    v62 = *(unsigned __int8 *)(v458 + 72);
    v63 = sub_22322F254(v458, "OSLogSurrogateAppender", 1, 0);
    v64 = v63;
    if (v62 || v63 != 0)
    {
      v450 = &v458;
      *(std::chrono::steady_clock::time_point *)v451 = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v451[8] = std::chrono::system_clock::now();
      *(_DWORD *)&v451[16] = 2;
      *(_QWORD *)&v451[24] = "unknown file";
      LODWORD(v452) = 78;
      v453 = 0;
      *(_QWORD *)&v454 = 0;
      *((_QWORD *)&v452 + 1) = "unknown function";
      v66 = *(_QWORD *)a3;
      v67 = (float *)*((_QWORD *)a3 + 5);
      v68 = (HIDWORD(*((_QWORD *)a3 + 1)) * HIDWORD(*(_QWORD *)a3));
      if ((_DWORD)v68
        && ((v69 = (_DWORD)v66 == 1, (_DWORD)v66 != 1)
          ? (v70 = *((_QWORD *)a3 + 1))
          : (v70 = HIDWORD(*((_QWORD *)a3 + 1))),
            v70 != v68))
      {
        v89 = &v67[v68];
        v90 = &v67[v70];
        v91 = *v67;
        v92 = v90;
        v93 = (_DWORD)v66 == 1;
        v94 = 1;
        v71 = (float *)*((_QWORD *)a3 + 5);
        do
        {
          if (*v92 < v91)
          {
            v71 = v92;
            v91 = *v92;
          }
          if (v93)
            v94 = 1;
          else
            ++v94;
          v93 = v94 == (_DWORD)v66;
          if (v94 == (_DWORD)v66)
            v95 = *((_QWORD *)a3 + 1)
                - (unint64_t)(*((_QWORD *)a3 + 1) * v66)
                + HIDWORD(*((_QWORD *)a3 + 1));
          else
            v95 = *((_QWORD *)a3 + 1);
          v92 += v95;
        }
        while (v92 != v89);
        v96 = *v67;
        v97 = 1;
        do
        {
          if (v96 < *v90)
          {
            v67 = v90;
            v96 = *v90;
          }
          if (v69)
            v97 = 1;
          else
            ++v97;
          v69 = v97 == (_DWORD)v66;
          if (v97 == (_DWORD)v66)
            v98 = *((_QWORD *)a3 + 1)
                - (unint64_t)(*((_QWORD *)a3 + 1) * v66)
                + HIDWORD(*((_QWORD *)a3 + 1));
          else
            v98 = *((_QWORD *)a3 + 1);
          v90 += v98;
        }
        while (v90 != v89);
      }
      else
      {
        v71 = (float *)*((_QWORD *)a3 + 5);
      }
      v99 = *v450;
      v415 = *v450;
      if (*(char *)(*v450 + 39) < 0)
      {
        v101 = *(const char **)(v99 + 16);
        v100 = *(_QWORD *)(v99 + 24);
        v413 = *v450 + 16;
        v418 = v62;
        v103 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v103 & 1) != 0)
          goto LABEL_108;
      }
      else
      {
        v100 = *(unsigned __int8 *)(*v450 + 39);
        v101 = (const char *)(*v450 + 16);
        v413 = (uint64_t)v101;
        v418 = v62;
        v102 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v102 & 1) != 0)
          goto LABEL_108;
      }
      if (__cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)v460);
        sub_223199C58("com.apple.cv3d", (unint64_t)v460, byte_255788F40);
        if (v461[0] && (v460[23] & 0x80000000) != 0)
          operator delete(*(void **)v460);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
LABEL_108:
      if (byte_255788F40[23] >= 0)
        v104 = byte_255788F40;
      else
        v104 = *(const char **)byte_255788F40;
      if (byte_255788F40[23] >= 0)
        v105 = byte_255788F40[23];
      else
        v105 = *(_QWORD *)&byte_255788F40[8];
      *(_QWORD *)v460 = os_log_create(v104, v101);
      v106 = &v460[8];
      if (v105 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v105 >= 0x17)
      {
        v107 = v101;
        v108 = v64;
        v109 = a2;
        v110 = (v105 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v105 | 7) != 0x17)
          v110 = v105 | 7;
        v111 = v110 + 1;
        v106 = operator new(v110 + 1);
        *(_QWORD *)&v460[16] = v105;
        *(_QWORD *)v461 = v111 | 0x8000000000000000;
        *(_QWORD *)&v460[8] = v106;
        a2 = v109;
        v64 = v108;
        v101 = v107;
      }
      else
      {
        v461[7] = v105;
        if (!v105)
        {
LABEL_122:
          v106[v105] = 0;
          v461[8] = 1;
          v112 = &v461[16];
          if (v100 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v100 >= 0x17)
          {
            v114 = (v100 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v100 | 7) != 0x17)
              v114 = v100 | 7;
            v115 = v114 + 1;
            v112 = operator new(v114 + 1);
            *(_QWORD *)&v461[24] = v100;
            v462 = v115 | 0x8000000000000000;
            *(_QWORD *)&v461[16] = v112;
          }
          else
          {
            HIBYTE(v462) = v100;
            if (!v100)
            {
              v461[16] = 0;
              LOBYTE(v463) = 1;
              v113 = *(NSObject **)v460;
              if ((SHIBYTE(v462) & 0x80000000) == 0)
                goto LABEL_126;
              goto LABEL_132;
            }
          }
          memmove(v112, v101, v100);
          v112[v100] = 0;
          LOBYTE(v463) = 1;
          v113 = *(NSObject **)v460;
          if ((SHIBYTE(v462) & 0x80000000) == 0)
          {
LABEL_126:
            if (!v461[8])
              goto LABEL_135;
            goto LABEL_133;
          }
LABEL_132:
          operator delete(*(void **)&v461[16]);
          if (!v461[8])
          {
LABEL_135:
            if (*(_QWORD *)v460)
              os_release(*(void **)v460);
            if (v64 && *(_QWORD *)(v64 + 24))
            {
              v116 = _os_log_pack_size();
              v117 = (std::__shared_weak_count_vtbl *)operator new(v116, (std::align_val_t)8uLL);
              v118 = (std::__shared_weak_count *)operator new();
              v119 = v118;
              v118->__shared_owners_ = 0;
              v120 = (unint64_t *)&v118->__shared_owners_;
              v118->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v118->__shared_weak_owners_ = 0;
              v118[1].__vftable = v117;
              *(_QWORD *)v460 = v117;
              *(_QWORD *)&v460[8] = v117;
              *(_QWORD *)&v460[16] = v118;
              do
                v121 = __ldxr(v120);
              while (__stxr(v121 + 1, v120));
              memset(v461, 0, 24);
              do
                v122 = __ldaxr(v120);
              while (__stlxr(v122 - 1, v120));
              if (!v122)
              {
                ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
                std::__shared_weak_count::__release_weak(v119);
              }
              v123 = *(_QWORD *)v460;
              v124 = _os_log_pack_fill();
              v125 = *v71;
              v126 = *v67;
              *(_DWORD *)v124 = 134218240;
              *(double *)(v124 + 4) = v125;
              *(_WORD *)(v124 + 12) = 2048;
              *(double *)(v124 + 14) = v126;
              v127 = operator new();
              v128 = *(unsigned __int8 *)(v415 + 39);
              v129 = v413;
              if ((v128 & 0x80u) != 0)
              {
                v129 = *(_QWORD *)(v415 + 16);
                v128 = *(_QWORD *)(v415 + 24);
              }
              *(_QWORD *)v127 = v123;
              *(_OWORD *)(v127 + 8) = *(_OWORD *)&v460[8];
              *(_QWORD *)&v460[8] = 0;
              *(_QWORD *)&v460[16] = 0;
              *(_OWORD *)(v127 + 24) = *(_OWORD *)v461;
              *(_QWORD *)v461 = 0;
              *(_QWORD *)&v461[8] = 0;
              *(_QWORD *)(v127 + 40) = v129;
              *(_QWORD *)(v127 + 48) = v128;
              *(_BYTE *)(v127 + 56) = 2;
              v459 = 0;
              *(_QWORD *)v420 = v127;
              (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v64 + 24) + 40))(*(_QWORD *)(v64 + 24), v420);
              v130 = *(_QWORD *)v420;
              *(_QWORD *)v420 = 0;
              v131 = v418;
              if (v130)
              {
                v132 = *(std::__shared_weak_count **)(v130 + 32);
                if (v132)
                {
                  v133 = (unint64_t *)&v132->__shared_owners_;
                  do
                    v134 = __ldaxr(v133);
                  while (__stlxr(v134 - 1, v133));
                  if (!v134)
                  {
                    ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
                    std::__shared_weak_count::__release_weak(v132);
                  }
                }
                v135 = *(std::__shared_weak_count **)(v130 + 16);
                if (v135)
                {
                  v136 = (unint64_t *)&v135->__shared_owners_;
                  do
                    v137 = __ldaxr(v136);
                  while (__stlxr(v137 - 1, v136));
                  if (!v137)
                  {
                    ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
                    std::__shared_weak_count::__release_weak(v135);
                  }
                }
                MEMORY[0x227684CE8](v130, 0x10F0C40B62ED6C6);
                v138 = v459;
                v459 = 0;
                if (v138)
                {
                  v139 = (std::__shared_weak_count *)v138[4];
                  if (v139)
                  {
                    v140 = (unint64_t *)&v139->__shared_owners_;
                    do
                      v141 = __ldaxr(v140);
                    while (__stlxr(v141 - 1, v140));
                    if (!v141)
                    {
                      ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
                      std::__shared_weak_count::__release_weak(v139);
                    }
                  }
                  v142 = (std::__shared_weak_count *)v138[2];
                  if (v142)
                  {
                    v143 = (unint64_t *)&v142->__shared_owners_;
                    do
                      v144 = __ldaxr(v143);
                    while (__stlxr(v144 - 1, v143));
                    if (!v144)
                    {
                      ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
                      std::__shared_weak_count::__release_weak(v142);
                    }
                  }
                  MEMORY[0x227684CE8](v138, 0x10F0C40B62ED6C6);
                }
              }
              v145 = *(std::__shared_weak_count **)&v461[8];
              if (*(_QWORD *)&v461[8])
              {
                v146 = (unint64_t *)(*(_QWORD *)&v461[8] + 8);
                do
                  v147 = __ldaxr(v146);
                while (__stlxr(v147 - 1, v146));
                if (!v147)
                {
                  ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
                  std::__shared_weak_count::__release_weak(v145);
                }
              }
              v148 = *(std::__shared_weak_count **)&v460[16];
              if (*(_QWORD *)&v460[16])
              {
                v149 = (unint64_t *)(*(_QWORD *)&v460[16] + 8);
                do
                  v150 = __ldaxr(v149);
                while (__stlxr(v150 - 1, v149));
                if (!v150)
                {
                  ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
                  std::__shared_weak_count::__release_weak(v148);
                }
              }
            }
            else
            {
              os_log_type_enabled(v113, OS_LOG_TYPE_DEBUG);
              v151 = *v71;
              v152 = *v67;
              *(_DWORD *)v460 = 134218240;
              *(double *)&v460[4] = v151;
              *(_WORD *)&v460[12] = 2048;
              *(double *)&v460[14] = v152;
              v153 = (void *)_os_log_send_and_compose_impl();
              v131 = v418;
              if (v153)
                free(v153);
            }
            if (v131)
            {
              v154 = *(_QWORD *)a3;
              v155 = (float *)*((_QWORD *)a3 + 5);
              v156 = (HIDWORD(*((_QWORD *)a3 + 1)) * HIDWORD(*(_QWORD *)a3));
              if ((_DWORD)v156)
              {
                v157 = (_DWORD)v154 == 1;
                if ((_DWORD)v154 == 1)
                  v158 = HIDWORD(*((_QWORD *)a3 + 1));
                else
                  v158 = *((_QWORD *)a3 + 1);
                v159 = *v155;
                if (v158 != v156)
                {
                  v160 = &v155[v156];
                  v161 = &v155[v158];
                  v162 = v161;
                  v163 = (_DWORD)v154 == 1;
                  v164 = 1;
                  v165 = (float *)*((_QWORD *)a3 + 5);
                  do
                  {
                    if (*v162 < v159)
                    {
                      v165 = v162;
                      v159 = *v162;
                    }
                    if (v163)
                      v164 = 1;
                    else
                      ++v164;
                    v163 = v164 == (_DWORD)v154;
                    if (v164 == (_DWORD)v154)
                      v166 = *((_QWORD *)a3 + 1)
                           - (unint64_t)(*((_QWORD *)a3 + 1) * v154)
                           + HIDWORD(*((_QWORD *)a3 + 1));
                    else
                      v166 = *((_QWORD *)a3 + 1);
                    v162 += v166;
                  }
                  while (v162 != v160);
                  v159 = *v165;
                  if (v158 != v156)
                  {
                    v167 = *v155;
                    v168 = 1;
                    do
                    {
                      if (v167 < *v161)
                      {
                        v155 = v161;
                        v167 = *v161;
                      }
                      if (v157)
                        v168 = 1;
                      else
                        ++v168;
                      v157 = v168 == (_DWORD)v154;
                      if (v168 == (_DWORD)v154)
                        v169 = *((_QWORD *)a3 + 1)
                             - (unint64_t)(*((_QWORD *)a3 + 1) * v154)
                             + HIDWORD(*((_QWORD *)a3 + 1));
                      else
                        v169 = *((_QWORD *)a3 + 1);
                      v161 += v169;
                    }
                    while (v161 != v160);
                  }
                }
                v170 = *v155;
              }
              else
              {
                v170 = *v155;
                v159 = *v155;
              }
              sub_22322C138((uint64_t)&v450, "====> (NovelDepthPredictor.InferDepth) min_depth, max_depth: %f, %f", v159, v170);
              sub_223182C08((uint64_t)&v450);
            }
            sub_223182C08((uint64_t)&v450);
            v171 = (std::__shared_weak_count *)v454;
            if ((_QWORD)v454)
            {
              v172 = (unint64_t *)(v454 + 8);
              do
                v173 = __ldaxr(v172);
              while (__stlxr(v173 - 1, v172));
              if (!v173)
              {
                ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
                std::__shared_weak_count::__release_weak(v171);
              }
            }
            goto LABEL_217;
          }
LABEL_133:
          if ((v461[7] & 0x80000000) != 0)
            operator delete(*(void **)&v460[8]);
          goto LABEL_135;
        }
      }
      memmove(v106, v104, v105);
      goto LABEL_122;
    }
  }
LABEL_217:
  v425 = sub_2231D021C(a2);
  v457 = *(_QWORD *)a3;
  v459 = &off_24EC217B0;
  *(_QWORD *)v460 = &off_24EC216B8;
  sub_224498F50(&v457, (uint64_t)&v450);
  v174 = operator new();
  *(_QWORD *)v174 = &off_24EC217F8;
  *(_OWORD *)(v174 + 8) = *(_OWORD *)v451;
  *(_OWORD *)(v174 + 20) = *(_OWORD *)&v451[12];
  *(_OWORD *)(v174 + 40) = v452;
  *(_QWORD *)(v174 + 56) = v453;
  *(_OWORD *)(v174 + 64) = v454;
  v458 = v174;
  v450 = (uint64_t *)v174;
  v175 = (std::__shared_weak_count *)operator new();
  v175->__shared_owners_ = 0;
  v176 = (unint64_t *)&v175->__shared_owners_;
  v175->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC21890;
  v175->__shared_weak_owners_ = 0;
  v175[1].__vftable = (std::__shared_weak_count_vtbl *)v174;
  *(_QWORD *)v451 = v175;
  v458 = 0;
  *(_QWORD *)&v460[8] = v174;
  *(_QWORD *)&v460[16] = v175;
  do
    v177 = __ldxr(v176);
  while (__stxr(v177 + 1, v176));
  *(_QWORD *)v461 = 0;
  (*(void (**)(uint64_t (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v174 + 64))(&v459, v174, 4);
  v178 = v459;
  v179 = v459[2];
  *(_OWORD *)&v461[8] = *(_OWORD *)v459;
  *(_QWORD *)&v461[24] = v179;
  v459 = 0;
  MEMORY[0x227684CE8](v178, 0xC400A2AC0F1);
  v462 = *(_QWORD *)&v461[8];
  v463 = *(_OWORD *)&v461[16];
  v180 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v174 + 104))(v174);
  v181 = v180;
  if ((v180 & 0xFFFFFF) <= 0x10000)
    v181 = 0;
  v182 = v180 & 0xFF00;
  if ((v180 & 0xFF0000) == 0)
    v182 = 0;
  v464 = v182 & 0xFF00 | v181;
  do
    v183 = __ldaxr(v176);
  while (__stlxr(v183 - 1, v176));
  if (v183)
  {
    v184 = a3;
    v185 = a3[2];
    v186 = *(unsigned int *)&v461[24];
    if ((_DWORD)v185 != 1 || *(_DWORD *)&v461[24] != 1)
      goto LABEL_230;
LABEL_247:
    v204 = v184[3];
    v205 = *v184;
    if ((_DWORD)v204 == *(_DWORD *)&v461[28] && (_DWORD)v204 == (_DWORD)v205)
    {
      v206 = a3[1] * v204;
      v207 = (const void *)*((_QWORD *)a3 + 5);
      if ((_DWORD)v206)
        v208 = v207 == 0;
      else
        v208 = 0;
      if (!v208)
      {
        if (!(_DWORD)v206)
          goto LABEL_272;
LABEL_266:
        memmove(*(void **)&v461[8], v207, 4 * v206);
        goto LABEL_272;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))goto LABEL_266;
    }
    else
    {
      v209 = a3[1];
      if ((_DWORD)v205)
        v210 = v209 == 0;
      else
        v210 = 1;
      if (v210)
        goto LABEL_272;
      v211 = *(char **)&v461[8];
      v212 = (char *)*((_QWORD *)a3 + 5);
      v213 = 4 * v205;
      v214 = v209 - 1;
      if (v209 == 1)
      {
LABEL_267:
        if (v212
          || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          memmove(v211, v212, v213);
          goto LABEL_272;
        }
      }
      else
      {
        v215 = 4 * v204;
        v216 = 4 * *(unsigned int *)&v461[28];
        while (v212
             || !sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          memmove(v211, v212, v213);
          v212 += v215;
          v211 += v216;
          if (!--v214)
            goto LABEL_267;
        }
      }
    }
    abort();
  }
  ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
  std::__shared_weak_count::__release_weak(v175);
  v184 = a3;
  v185 = a3[2];
  v186 = *(unsigned int *)&v461[24];
  if ((_DWORD)v185 == 1 && *(_DWORD *)&v461[24] == 1)
    goto LABEL_247;
LABEL_230:
  if (*v184)
  {
    v188 = a3[1];
    if (v188)
    {
      v189 = *v184 - 1;
      v190 = (_DWORD *)*((_QWORD *)a3 + 5);
      v191 = *(_DWORD **)&v461[8];
      v192 = v188 - 1;
      if (v192)
      {
        v193 = *(unsigned int *)&v461[28];
        v194 = a3[3];
        if (!v189)
        {
          do
          {
            *v191 = *v190;
            v190 += v194;
            v191 += v193;
            --v192;
          }
          while (v192);
LABEL_271:
          *v191 = *v190;
          goto LABEL_272;
        }
        v195 = 0;
        v196 = 4 * v194;
        v197 = 4 * *(unsigned int *)&v461[28];
        do
        {
          v198 = v191;
          v199 = v190;
          v200 = v189;
          do
          {
            *v198 = *v199;
            v199 += v185;
            v198 += v186;
            --v200;
          }
          while (v200);
          *v198 = *v199;
          v190 = (_DWORD *)((char *)v190 + v196);
          v191 = (_DWORD *)((char *)v191 + v197);
          ++v195;
        }
        while (v195 != v192);
      }
      if (v189)
      {
        v201 = 4 * v185;
        v202 = 4 * v186;
        do
        {
          *v191 = *v190;
          v190 = (_DWORD *)((char *)v190 + v201);
          v191 = (_DWORD *)((char *)v191 + v202);
          --v189;
        }
        while (v189);
      }
      goto LABEL_271;
    }
  }
LABEL_272:
  v217 = v458;
  if (v458)
  {
    v218 = *(void **)(v458 + 48);
    if (v218)
      free(v218);
    *(_QWORD *)(v217 + 48) = 0;
    MEMORY[0x227684CE8](v217, 0x1091C406A8758A4);
  }
  v450 = (uint64_t *)&off_24EC216B8;
  sub_2231FF60C(&v425, v451);
  v219 = *(_QWORD *)v451;
  v220 = *(std::__shared_weak_count **)&v451[8];
  if (!*(_QWORD *)&v451[8])
    goto LABEL_281;
  v221 = (unint64_t *)(*(_QWORD *)&v451[8] + 8);
  do
    v222 = __ldxr(v221);
  while (__stxr(v222 + 1, v221));
  do
    v223 = __ldaxr(v221);
  while (__stlxr(v223 - 1, v221));
  if (!v223)
  {
    ((void (*)(std::__shared_weak_count *))v220->__on_zero_shared)(v220);
    std::__shared_weak_count::__release_weak(v220);
    if (!v219)
      goto LABEL_286;
  }
  else
  {
LABEL_281:
    if (!v219)
      goto LABEL_286;
  }
  if (v456)
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)v451 + 96))(&v458, *(_QWORD *)v451, 1);
    v224 = v454;
    v225 = *(_QWORD *)&v451[24];
    v226 = DWORD1(v454);
    if (!v455)
      goto LABEL_289;
    goto LABEL_287;
  }
LABEL_286:
  v458 = 0;
  v224 = v454;
  v225 = *(_QWORD *)&v451[24];
  v226 = DWORD1(v454);
  if (!v455)
    goto LABEL_289;
LABEL_287:
  if (v225)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)v451 + 88))(*(_QWORD *)v451, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
    v225 = *(_QWORD *)&v451[24];
    LODWORD(v226) = DWORD1(v454);
  }
LABEL_289:
  v414 = HIDWORD(v454);
  v227 = HIDWORD(v454) * v226;
  v416 = v224;
  if (v227)
    v228 = v224 == 0;
  else
    v228 = 1;
  if (!v228)
  {
    v244 = 0;
    v412 = v225 + 4 * v227;
    do
    {
      v245 = 0;
      v246 = v225;
      do
      {
        v247 = (int32x2_t)v463;
        v248 = (int32x2_t)v425;
        v249 = *(_QWORD *)&v460[8];
        v250 = *(std::__shared_weak_count **)&v460[16];
        if (*(_QWORD *)&v460[16])
        {
          v251 = (unint64_t *)(*(_QWORD *)&v460[16] + 8);
          do
            v252 = __ldxr(v251);
          while (__stxr(v252 + 1, v251));
          do
            v253 = __ldxr(v251);
          while (__stxr(v253 + 1, v251));
          do
            v254 = __ldxr(v251);
          while (__stxr(v254 + 1, v251));
          do
            v255 = __ldxr(v251);
          while (__stxr(v255 + 1, v251));
          do
            v256 = __ldaxr(v251);
          while (__stlxr(v256 - 1, v251));
          if (!v256)
          {
            ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
            std::__shared_weak_count::__release_weak(v250);
          }
        }
        (*(void (**)(uint64_t (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v249 + 72))(&v459, v249, 4);
        v257 = v459;
        v258 = *v459;
        v259 = *((_DWORD *)v459 + 4);
        v260 = *((_DWORD *)v459 + 5);
        v459 = 0;
        MEMORY[0x227684CE8](v257, 0xC400A2AC0F1, v261, v262);
        if (v250)
        {
          v263 = (unint64_t *)&v250->__shared_owners_;
          do
            v264 = __ldxr(v263);
          while (__stxr(v264 + 1, v263));
          do
            v265 = __ldaxr(v263);
          while (__stlxr(v265 - 1, v263));
          if (!v265)
          {
            ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
            std::__shared_weak_count::__release_weak(v250);
          }
        }
        (*(void (**)(uint64_t))(*(_QWORD *)v249 + 104))(v249);
        if (v250)
        {
          v266 = (unint64_t *)&v250->__shared_owners_;
          do
            v267 = __ldaxr(v266);
          while (__stlxr(v267 - 1, v266));
          if (!v267)
          {
            ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
            std::__shared_weak_count::__release_weak(v250);
          }
          do
            v268 = __ldaxr(v266);
          while (__stlxr(v268 - 1, v266));
          if (!v268)
          {
            ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
            std::__shared_weak_count::__release_weak(v250);
          }
        }
        v269.f32[0] = (float)v245;
        v269.f32[1] = (float)v244;
        v270 = vadd_f32(vmul_f32(vdiv_f32(v269, vcvt_f32_u32((uint32x2_t)vadd_s32(v248, (int32x2_t)-1))), vcvt_f32_u32((uint32x2_t)vadd_s32(v247, (int32x2_t)-1))), (float32x2_t)0x3F0000003F000000);
        v271 = *((_DWORD *)v258 + v259 * v270.f32[0] + v260 * v270.f32[1]);
        if (v250)
        {
          v272 = (unint64_t *)&v250->__shared_owners_;
          do
            v273 = __ldaxr(v272);
          while (__stlxr(v273 - 1, v272));
          if (!v273)
          {
            ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
            std::__shared_weak_count::__release_weak(v250);
          }
        }
        *(_DWORD *)(*(_QWORD *)&v451[24] + 4 * (DWORD2(v454) * v245 + HIDWORD(v454) * v244)) = v271;
        v246 += 4;
        ++v245;
      }
      while (v246 != v225 + 4 * v416);
      v225 += 4 * v414;
      ++v244;
    }
    while (v225 != v412);
  }
  v229 = v458;
  v458 = 0;
  if (v229)
    (*(void (**)(uint64_t))(*(_QWORD *)v229 + 8))(v229);
  LODWORD(v457) = 0;
  if (HIDWORD(v425))
    v230 = (_DWORD)v425 == 0;
  else
    v230 = 1;
  v231 = v425;
  if (v230)
    v231 = 0;
  v232 = v231 << 32;
  if (!HIDWORD(v231))
    v232 = 0;
  v233 = v231 != 0;
  if ((_DWORD)v231)
    v234 = HIDWORD(v231) == 0;
  else
    v234 = 1;
  *(_QWORD *)v420 = v231;
  *(_QWORD *)&v420[8] = v232 | v233;
  v420[16] = 0;
  v420[24] = 0;
  if (v234)
    v231 = 0;
  v458 = v231;
  v459 = (uint64_t (**)())(v232 | v233);
  if (((v232 >> 30) & ((v232 >> 30) - 1)) != 0)
    v235 = 4;
  else
    v235 = v232 >> 30;
  sub_22346A424(&v421, &v458, (unint64_t *)&v459, 1, &v457, 1, v235);
  v236 = *(_QWORD *)v451;
  v237 = *(std::__shared_weak_count **)&v451[8];
  if (!*(_QWORD *)&v451[8])
    goto LABEL_316;
  v238 = (unint64_t *)(*(_QWORD *)&v451[8] + 8);
  do
    v239 = __ldxr(v238);
  while (__stxr(v239 + 1, v238));
  do
    v240 = __ldaxr(v238);
  while (__stlxr(v240 - 1, v238));
  if (!v240)
  {
    ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
    std::__shared_weak_count::__release_weak(v237);
    if (!v236)
      goto LABEL_352;
  }
  else
  {
LABEL_316:
    if (!v236)
      goto LABEL_352;
  }
  if (v456)
  {
    (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, uint64_t))(**(_QWORD **)v451 + 96))(&v459, *(_QWORD *)v451, 1);
    v241 = v454;
    v242 = *(_QWORD *)&v451[24];
    v243 = DWORD1(v454);
    if (!v455)
      goto LABEL_355;
    goto LABEL_353;
  }
LABEL_352:
  v459 = 0;
  v241 = v454;
  v242 = *(_QWORD *)&v451[24];
  v243 = DWORD1(v454);
  if (!v455)
    goto LABEL_355;
LABEL_353:
  if (v242)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)v451 + 88))(*(_QWORD *)v451, 1, "/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Image/include/Kit/Image/Image.h:1190");
    v242 = *(_QWORD *)&v451[24];
    LODWORD(v243) = DWORD1(v454);
  }
LABEL_355:
  v274 = HIDWORD(v454);
  v275 = HIDWORD(v454) * v243;
  v276 = v241;
  if (v275)
    v277 = v241 == 0;
  else
    v277 = 1;
  if (!v277)
  {
    v296 = 0;
    v297 = 0;
    v298 = (int *)(v242 + 4 * v275);
    v299 = *(_DWORD *)&v420[8];
    v300 = *(_DWORD *)&v420[12];
    v301 = v422;
    v302 = 4 * HIDWORD(v454);
    v303 = (v241 + 0x3FFFFFFFFFFFFFFFLL) & 0x3FFFFFFFFFFFFFFFLL;
    v304 = (v303 + 1) & 0x7FFFFFFFFFFFFFF8;
    v305 = (__int128 *)(v242 + 16);
    v306 = (int *)v242;
    do
    {
      if (v303 >= 0xB)
      {
        v307 = 0;
        v311 = __CFADD__(v300 * v297, v276 - 1);
        if (v299 == 1 && !v311 && ((v276 + 0x3FFFFFFFFFFFFFFFLL) & 0x3FFFFFFF00000000) == 0)
        {
          v308 = v306;
          if (v301 + 4 * (unint64_t)(v300 * v297) - (v242 + v302 * v297) >= 0x20)
          {
            v308 = &v306[v304];
            v312 = v296;
            v313 = (v303 + 1) & 0x7FFFFFFFFFFFFFF8;
            v314 = v305;
            do
            {
              v315 = *v314;
              v316 = (_OWORD *)(v301 + 4 * v312);
              *v316 = *(v314 - 1);
              v316[1] = v315;
              v314 += 2;
              v312 += 8;
              v313 -= 8;
            }
            while (v313);
            v307 = v276 & 0xFFFFFFF8;
            if (v303 + 1 == v304)
              goto LABEL_383;
          }
          goto LABEL_387;
        }
      }
      else
      {
        v307 = 0;
      }
      v308 = v306;
LABEL_387:
      v309 = v296 + v299 * v307;
      do
      {
        v310 = *v308++;
        *(_DWORD *)(v301 + 4 * v309) = v310;
        v309 += v299;
      }
      while (v308 != &v306[v276]);
LABEL_383:
      v306 += v274;
      ++v297;
      v305 = (__int128 *)((char *)v305 + v302);
      v296 += v300;
    }
    while (v306 != v298);
  }
  v278 = (unint64_t)v459;
  v459 = 0;
  if (v278)
    (*(void (**)(unint64_t))(*(_QWORD *)v278 + 8))(v278);
  v279 = *(std::__shared_weak_count **)&v451[8];
  if (*(_QWORD *)&v451[8])
  {
    v280 = (unint64_t *)(*(_QWORD *)&v451[8] + 8);
    do
      v281 = __ldaxr(v280);
    while (__stlxr(v281 - 1, v280));
    if (!v281)
    {
      ((void (*)(std::__shared_weak_count *))v279->__on_zero_shared)(v279);
      std::__shared_weak_count::__release_weak(v279);
    }
  }
  v282 = *(std::__shared_weak_count **)&v460[16];
  if (*(_QWORD *)&v460[16])
  {
    v283 = (unint64_t *)(*(_QWORD *)&v460[16] + 8);
    do
      v284 = __ldaxr(v283);
    while (__stlxr(v284 - 1, v283));
    if (!v284)
    {
      ((void (*)(std::__shared_weak_count *))v282->__on_zero_shared)(v282);
      std::__shared_weak_count::__release_weak(v282);
    }
  }
  *(_OWORD *)a3 = *(_OWORD *)v420;
  *(_OWORD *)(a3 + 3) = *(_OWORD *)&v420[12];
  *(_OWORD *)(a3 + 14) = v424;
  *((_QWORD *)a3 + 4) = v421;
  v285 = (void *)*((_QWORD *)a3 + 5);
  if (v285)
    free(v285);
  v286 = v423;
  *((_QWORD *)a3 + 5) = v422;
  *((_QWORD *)a3 + 6) = v286;
  sub_22391492C(&v458);
  if (**(int **)(v458 + 56) <= 2)
  {
    v287 = *(unsigned __int8 *)(v458 + 72);
    v288 = sub_22322F254(v458, "OSLogSurrogateAppender", 1, 0);
    v289 = v288;
    if (v287 || v288)
    {
      v450 = &v458;
      *(std::chrono::steady_clock::time_point *)v451 = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v451[8] = std::chrono::system_clock::now();
      *(_DWORD *)&v451[16] = 2;
      *(_QWORD *)&v451[24] = "unknown file";
      LODWORD(v452) = 85;
      v453 = 0;
      *(_QWORD *)&v454 = 0;
      *((_QWORD *)&v452 + 1) = "unknown function";
      v290 = *(_QWORD *)a3;
      v291 = (float *)*((_QWORD *)a3 + 5);
      v292 = (HIDWORD(*((_QWORD *)a3 + 1)) * HIDWORD(*(_QWORD *)a3));
      if ((_DWORD)v292
        && ((v293 = (_DWORD)v290 == 1, (_DWORD)v290 != 1)
          ? (v294 = *((_QWORD *)a3 + 1))
          : (v294 = HIDWORD(*((_QWORD *)a3 + 1))),
            v294 != v292))
      {
        v317 = &v291[v292];
        v318 = &v291[v294];
        v319 = *v291;
        v320 = v318;
        v321 = (_DWORD)v290 == 1;
        v322 = 1;
        v295 = (float *)*((_QWORD *)a3 + 5);
        do
        {
          if (*v320 < v319)
          {
            v295 = v320;
            v319 = *v320;
          }
          if (v321)
            v322 = 1;
          else
            ++v322;
          v321 = v322 == (_DWORD)v290;
          if (v322 == (_DWORD)v290)
            v323 = *((_QWORD *)a3 + 1)
                 - (unint64_t)(*((_QWORD *)a3 + 1) * v290)
                 + HIDWORD(*((_QWORD *)a3 + 1));
          else
            v323 = *((_QWORD *)a3 + 1);
          v320 += v323;
        }
        while (v320 != v317);
        v324 = *v291;
        v325 = 1;
        do
        {
          if (v324 < *v318)
          {
            v291 = v318;
            v324 = *v318;
          }
          if (v293)
            v325 = 1;
          else
            ++v325;
          v293 = v325 == (_DWORD)v290;
          if (v325 == (_DWORD)v290)
            v326 = *((_QWORD *)a3 + 1)
                 - (unint64_t)(*((_QWORD *)a3 + 1) * v290)
                 + HIDWORD(*((_QWORD *)a3 + 1));
          else
            v326 = *((_QWORD *)a3 + 1);
          v318 += v326;
        }
        while (v318 != v317);
      }
      else
      {
        v295 = (float *)*((_QWORD *)a3 + 5);
      }
      v327 = *v450;
      v419 = *v450;
      if (*(char *)(*v450 + 39) < 0)
      {
        v329 = *(const char **)(v327 + 16);
        v328 = *(_QWORD *)(v327 + 24);
        v417 = *v450 + 16;
        v331 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v331 & 1) != 0)
          goto LABEL_425;
      }
      else
      {
        v328 = *(unsigned __int8 *)(*v450 + 39);
        v329 = (const char *)(*v450 + 16);
        v417 = (uint64_t)v329;
        v330 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v330 & 1) != 0)
          goto LABEL_425;
      }
      if (__cxa_guard_acquire(&qword_255788F58))
      {
        sub_224568628((uint64_t)v460);
        sub_223199C58("com.apple.cv3d", (unint64_t)v460, byte_255788F40);
        if (v461[0] && (v460[23] & 0x80000000) != 0)
          operator delete(*(void **)v460);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
        __cxa_guard_release(&qword_255788F58);
      }
LABEL_425:
      if (byte_255788F40[23] >= 0)
        v332 = byte_255788F40;
      else
        v332 = *(const char **)byte_255788F40;
      if (byte_255788F40[23] >= 0)
        v333 = byte_255788F40[23];
      else
        v333 = *(_QWORD *)&byte_255788F40[8];
      *(_QWORD *)v460 = os_log_create(v332, v329);
      v334 = &v460[8];
      if (v333 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v333 >= 0x17)
      {
        v335 = v329;
        v336 = v289;
        v337 = v287;
        v338 = (v333 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v333 | 7) != 0x17)
          v338 = v333 | 7;
        v339 = v338 + 1;
        v334 = operator new(v338 + 1);
        *(_QWORD *)&v460[16] = v333;
        *(_QWORD *)v461 = v339 | 0x8000000000000000;
        *(_QWORD *)&v460[8] = v334;
        v287 = v337;
        v289 = v336;
        v329 = v335;
      }
      else
      {
        v461[7] = v333;
        if (!v333)
        {
LABEL_439:
          v334[v333] = 0;
          v461[8] = 1;
          v340 = &v461[16];
          if (v328 > 0x7FFFFFFFFFFFFFF7)
            sub_22316DBC0();
          if (v328 >= 0x17)
          {
            v342 = (v328 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v328 | 7) != 0x17)
              v342 = v328 | 7;
            v343 = v342 + 1;
            v340 = operator new(v342 + 1);
            *(_QWORD *)&v461[24] = v328;
            v462 = v343 | 0x8000000000000000;
            *(_QWORD *)&v461[16] = v340;
          }
          else
          {
            HIBYTE(v462) = v328;
            if (!v328)
            {
              v461[16] = 0;
              LOBYTE(v463) = 1;
              v341 = *(NSObject **)v460;
              if ((SHIBYTE(v462) & 0x80000000) == 0)
                goto LABEL_443;
              goto LABEL_449;
            }
          }
          memmove(v340, v329, v328);
          v340[v328] = 0;
          LOBYTE(v463) = 1;
          v341 = *(NSObject **)v460;
          if ((SHIBYTE(v462) & 0x80000000) == 0)
          {
LABEL_443:
            if (!v461[8])
              goto LABEL_452;
            goto LABEL_450;
          }
LABEL_449:
          operator delete(*(void **)&v461[16]);
          if (!v461[8])
          {
LABEL_452:
            if (*(_QWORD *)v460)
              os_release(*(void **)v460);
            if (v289 && *(_QWORD *)(v289 + 24))
            {
              v344 = _os_log_pack_size();
              v345 = (std::__shared_weak_count_vtbl *)operator new(v344, (std::align_val_t)8uLL);
              v346 = (std::__shared_weak_count *)operator new();
              v347 = v346;
              v346->__shared_owners_ = 0;
              v348 = (unint64_t *)&v346->__shared_owners_;
              v346->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
              v346->__shared_weak_owners_ = 0;
              v346[1].__vftable = v345;
              *(_QWORD *)v460 = v345;
              *(_QWORD *)&v460[8] = v345;
              *(_QWORD *)&v460[16] = v346;
              do
                v349 = __ldxr(v348);
              while (__stxr(v349 + 1, v348));
              memset(v461, 0, 24);
              do
                v350 = __ldaxr(v348);
              while (__stlxr(v350 - 1, v348));
              if (!v350)
              {
                ((void (*)(std::__shared_weak_count *))v346->__on_zero_shared)(v346);
                std::__shared_weak_count::__release_weak(v347);
              }
              v351 = *(_QWORD *)v460;
              v352 = _os_log_pack_fill();
              v353 = *v295;
              v354 = *v291;
              *(_DWORD *)v352 = 134218240;
              *(double *)(v352 + 4) = v353;
              *(_WORD *)(v352 + 12) = 2048;
              *(double *)(v352 + 14) = v354;
              v355 = operator new();
              v356 = *(unsigned __int8 *)(v419 + 39);
              v357 = v417;
              if ((v356 & 0x80u) != 0)
              {
                v357 = *(_QWORD *)(v419 + 16);
                v356 = *(_QWORD *)(v419 + 24);
              }
              *(_QWORD *)v355 = v351;
              *(_OWORD *)(v355 + 8) = *(_OWORD *)&v460[8];
              *(_QWORD *)&v460[8] = 0;
              *(_QWORD *)&v460[16] = 0;
              *(_OWORD *)(v355 + 24) = *(_OWORD *)v461;
              *(_QWORD *)v461 = 0;
              *(_QWORD *)&v461[8] = 0;
              *(_QWORD *)(v355 + 40) = v357;
              *(_QWORD *)(v355 + 48) = v356;
              *(_BYTE *)(v355 + 56) = 2;
              v459 = 0;
              *(_QWORD *)v420 = v355;
              (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v289 + 24) + 40))(*(_QWORD *)(v289 + 24), v420);
              v358 = *(_QWORD *)v420;
              *(_QWORD *)v420 = 0;
              if (v358)
              {
                v359 = *(std::__shared_weak_count **)(v358 + 32);
                if (v359)
                {
                  v360 = (unint64_t *)&v359->__shared_owners_;
                  do
                    v361 = __ldaxr(v360);
                  while (__stlxr(v361 - 1, v360));
                  if (!v361)
                  {
                    ((void (*)(std::__shared_weak_count *))v359->__on_zero_shared)(v359);
                    std::__shared_weak_count::__release_weak(v359);
                  }
                }
                v362 = *(std::__shared_weak_count **)(v358 + 16);
                if (v362)
                {
                  v363 = (unint64_t *)&v362->__shared_owners_;
                  do
                    v364 = __ldaxr(v363);
                  while (__stlxr(v364 - 1, v363));
                  if (!v364)
                  {
                    ((void (*)(std::__shared_weak_count *))v362->__on_zero_shared)(v362);
                    std::__shared_weak_count::__release_weak(v362);
                  }
                }
                MEMORY[0x227684CE8](v358, 0x10F0C40B62ED6C6);
                v365 = v459;
                v459 = 0;
                if (v365)
                {
                  v366 = (std::__shared_weak_count *)v365[4];
                  if (v366)
                  {
                    v367 = (unint64_t *)&v366->__shared_owners_;
                    do
                      v368 = __ldaxr(v367);
                    while (__stlxr(v368 - 1, v367));
                    if (!v368)
                    {
                      ((void (*)(std::__shared_weak_count *))v366->__on_zero_shared)(v366);
                      std::__shared_weak_count::__release_weak(v366);
                    }
                  }
                  v369 = (std::__shared_weak_count *)v365[2];
                  if (v369)
                  {
                    v370 = (unint64_t *)&v369->__shared_owners_;
                    do
                      v371 = __ldaxr(v370);
                    while (__stlxr(v371 - 1, v370));
                    if (!v371)
                    {
                      ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
                      std::__shared_weak_count::__release_weak(v369);
                    }
                  }
                  MEMORY[0x227684CE8](v365, 0x10F0C40B62ED6C6);
                }
              }
              v372 = *(std::__shared_weak_count **)&v461[8];
              if (*(_QWORD *)&v461[8])
              {
                v373 = (unint64_t *)(*(_QWORD *)&v461[8] + 8);
                do
                  v374 = __ldaxr(v373);
                while (__stlxr(v374 - 1, v373));
                if (!v374)
                {
                  ((void (*)(std::__shared_weak_count *))v372->__on_zero_shared)(v372);
                  std::__shared_weak_count::__release_weak(v372);
                }
              }
              v375 = *(std::__shared_weak_count **)&v460[16];
              if (*(_QWORD *)&v460[16])
              {
                v376 = (unint64_t *)(*(_QWORD *)&v460[16] + 8);
                do
                  v377 = __ldaxr(v376);
                while (__stlxr(v377 - 1, v376));
                if (!v377)
                {
                  ((void (*)(std::__shared_weak_count *))v375->__on_zero_shared)(v375);
                  std::__shared_weak_count::__release_weak(v375);
                }
              }
            }
            else
            {
              os_log_type_enabled(v341, OS_LOG_TYPE_DEBUG);
              v378 = *v295;
              v379 = *v291;
              *(_DWORD *)v460 = 134218240;
              *(double *)&v460[4] = v378;
              *(_WORD *)&v460[12] = 2048;
              *(double *)&v460[14] = v379;
              v380 = (void *)_os_log_send_and_compose_impl();
              if (v380)
                free(v380);
            }
            if (v287)
            {
              v381 = *(_QWORD *)a3;
              v382 = (float *)*((_QWORD *)a3 + 5);
              v383 = (HIDWORD(*((_QWORD *)a3 + 1)) * HIDWORD(*(_QWORD *)a3));
              if ((_DWORD)v383)
              {
                v384 = (_DWORD)v381 == 1;
                if ((_DWORD)v381 == 1)
                  v385 = HIDWORD(*((_QWORD *)a3 + 1));
                else
                  v385 = *((_QWORD *)a3 + 1);
                v386 = *v382;
                if (v385 != v383)
                {
                  v387 = &v382[v383];
                  v388 = &v382[v385];
                  v389 = v388;
                  v390 = (_DWORD)v381 == 1;
                  v391 = 1;
                  v392 = (float *)*((_QWORD *)a3 + 5);
                  do
                  {
                    if (*v389 < v386)
                    {
                      v392 = v389;
                      v386 = *v389;
                    }
                    if (v390)
                      v391 = 1;
                    else
                      ++v391;
                    v390 = v391 == (_DWORD)v381;
                    if (v391 == (_DWORD)v381)
                      v393 = *((_QWORD *)a3 + 1)
                           - (unint64_t)(*((_QWORD *)a3 + 1) * v381)
                           + HIDWORD(*((_QWORD *)a3 + 1));
                    else
                      v393 = *((_QWORD *)a3 + 1);
                    v389 += v393;
                  }
                  while (v389 != v387);
                  v386 = *v392;
                  if (v385 != v383)
                  {
                    v394 = *v382;
                    v395 = 1;
                    do
                    {
                      if (v394 < *v388)
                      {
                        v382 = v388;
                        v394 = *v388;
                      }
                      if (v384)
                        v395 = 1;
                      else
                        ++v395;
                      v384 = v395 == (_DWORD)v381;
                      if (v395 == (_DWORD)v381)
                        v396 = *((_QWORD *)a3 + 1)
                             - (unint64_t)(*((_QWORD *)a3 + 1) * v381)
                             + HIDWORD(*((_QWORD *)a3 + 1));
                      else
                        v396 = *((_QWORD *)a3 + 1);
                      v388 += v396;
                    }
                    while (v388 != v387);
                  }
                }
                v397 = *v382;
              }
              else
              {
                v397 = *v382;
                v386 = *v382;
              }
              sub_22322C138((uint64_t)&v450, "====> (NovelDepthPredictor.ScaleNetworkOutput) min_depth, max_depth: %f, %f", v386, v397);
              sub_223182C08((uint64_t)&v450);
            }
            sub_223182C08((uint64_t)&v450);
            v398 = (std::__shared_weak_count *)v454;
            if ((_QWORD)v454)
            {
              v399 = (unint64_t *)(v454 + 8);
              do
                v400 = __ldaxr(v399);
              while (__stlxr(v400 - 1, v399));
              if (!v400)
              {
                ((void (*)(std::__shared_weak_count *))v398->__on_zero_shared)(v398);
                std::__shared_weak_count::__release_weak(v398);
              }
            }
            goto LABEL_534;
          }
LABEL_450:
          if ((v461[7] & 0x80000000) != 0)
            operator delete(*(void **)&v460[8]);
          goto LABEL_452;
        }
      }
      memmove(v334, v332, v333);
      goto LABEL_439;
    }
  }
LABEL_534:
  v401 = v427;
  if (v427)
  {
    v402 = (unint64_t *)&v427->__shared_owners_;
    do
      v403 = __ldaxr(v402);
    while (__stlxr(v403 - 1, v402));
    if (!v403)
    {
      ((void (*)(std::__shared_weak_count *))v401->__on_zero_shared)(v401);
      std::__shared_weak_count::__release_weak(v401);
    }
  }
  v404 = v434;
  if (v434)
  {
    v405 = (unint64_t *)&v434->__shared_owners_;
    do
      v406 = __ldaxr(v405);
    while (__stlxr(v406 - 1, v405));
    if (!v406)
    {
      ((void (*)(std::__shared_weak_count *))v404->__on_zero_shared)(v404);
      std::__shared_weak_count::__release_weak(v404);
    }
  }
}

void sub_223914128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  uint64_t v63;
  void *v65;

  if (*(_BYTE *)(v63 - 200) && *(char *)(v63 - 201) < 0)
    operator delete(*(void **)(v63 - 224));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a57);
  v65 = *(void **)(a13 + 40);
  if (v65)
    free(v65);
  *(_QWORD *)(a13 + 40) = 0;
  sub_22319EF60((uint64_t)&a30);
  sub_2231D4840((uint64_t)&a38);
  _Unwind_Resume(a1);
}

uint64_t sub_22391452C(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result;
  _DWORD v6[6];
  int v7;
  std::string v8;
  std::string *v9;
  std::string *v10;
  _DWORD *v11;
  std::string *v12;
  std::string *v13;
  std::string **v14;

  v7 = 0;
  sub_2231A0C08(v6, "Images' width mismatch! ");
  std::to_string(&v8, *a2);
  v9 = (std::string *)v6;
  v10 = &v8;
  v11 = v6;
  v12 = &v8;
  v13 = &v8;
  if (v7 == -1)
    sub_22316DD70();
  v14 = &v9;
  ((void (*)(std::string ***, _DWORD *))off_24EC5CC98[v7])(&v14, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v8.__r_.__value_.__l.__data_);
  v9 = (std::string *)v6;
  v10 = (std::string *)" != ";
  v11 = v6;
  v12 = (std::string *)" != ";
  v13 = (std::string *)" != ";
  if (v7 == -1)
    sub_22316DD70();
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)&v9;
  ((void (*)(std::string *, _DWORD *))off_24EC5CCB0[v7])(&v8, v6);
  std::to_string(&v8, *a3);
  v9 = (std::string *)v6;
  v10 = &v8;
  v11 = v6;
  v12 = &v8;
  v13 = &v8;
  if (v7 == -1)
    sub_22316DD70();
  v14 = &v9;
  ((void (*)(std::string ***, _DWORD *))off_24EC5CC98[v7])(&v14, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v8.__r_.__value_.__l.__data_);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24EC5CCC8[v7])(&v9, v6);
  if (v7 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24EC5CC80[v7])(&v9, v6);
  return result;
}

void sub_2239146E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_22319B964((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_22391472C(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t result;
  _DWORD v6[6];
  int v7;
  std::string v8;
  std::string *v9;
  std::string *v10;
  _DWORD *v11;
  std::string *v12;
  std::string *v13;
  std::string **v14;

  v7 = 0;
  sub_223627410(v6, "Images' height mismatch! ");
  std::to_string(&v8, *a2);
  v9 = (std::string *)v6;
  v10 = &v8;
  v11 = v6;
  v12 = &v8;
  v13 = &v8;
  if (v7 == -1)
    sub_22316DD70();
  v14 = &v9;
  ((void (*)(std::string ***, _DWORD *))off_24EC5CC98[v7])(&v14, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v8.__r_.__value_.__l.__data_);
  v9 = (std::string *)v6;
  v10 = (std::string *)" != ";
  v11 = v6;
  v12 = (std::string *)" != ";
  v13 = (std::string *)" != ";
  if (v7 == -1)
    sub_22316DD70();
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)&v9;
  ((void (*)(std::string *, _DWORD *))off_24EC5CCB0[v7])(&v8, v6);
  std::to_string(&v8, *a3);
  v9 = (std::string *)v6;
  v10 = &v8;
  v11 = v6;
  v12 = &v8;
  v13 = &v8;
  if (v7 == -1)
    sub_22316DD70();
  v14 = &v9;
  ((void (*)(std::string ***, _DWORD *))off_24EC5CC98[v7])(&v14, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v8.__r_.__value_.__l.__data_);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24EC5CCC8[v7])(&v9, v6);
  if (v7 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24EC5CC80[v7])(&v9, v6);
  return result;
}

void sub_2239148E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_22319B964((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_22391492C(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CCA48);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCA48))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CCA40);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CCA48);
  }
  *a1 = qword_2540CCA40;
}

void sub_2239149C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CCA48);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CCA48);
  _Unwind_Resume(a1);
}

void sub_223914A20(uint64_t a1, uint64_t a2, float32x2_t *a3, float32x2_t *a4, uint64_t a5, char a6, double a7, float32x4_t a8, float32x4_t a9, double a10, float32x4_t a11, float32x2_t a12, float32x4_t a13, float32x2_t a14)
{
  float *v17;
  float *v18;
  float32x4_t v19;
  float32x2_t v20;
  float32x4_t v21;
  float32x2_t v22;
  float v23;
  float v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float v28;
  uint64_t v29;
  unsigned int v30;
  float v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  float v39;
  float32x4_t v40;
  uint64_t v41;
  float v42;
  float32x4_t v43;
  int8x16_t v44;
  int v45;
  int8x16_t v46;
  _BYTE v47[12];
  _BYTE v48[12];

  v17 = (float *)(a1 + 72);
  v18 = (float *)(a1 + 76);
  LODWORD(a7) = 3.0;
  a8.i32[0] = 3.0;
  a9.i32[0] = 4.0;
  sub_223CFF258(a2, a3, a4, (float *)(a1 + 72), (float *)(a1 + 68), (float *)(a1 + 76), (_BYTE *)(a1 + 64), (_BYTE *)(a1 + 65), a7, a8, a9, a10, a11, a12, a13, a14, (_BYTE *)(a1 + 67), a5, a6);
  if (!*(_BYTE *)a1)
    return;
  v23 = *v18;
  v24 = *v17;
  v20.i32[0] = a3[1].i32[0];
  *(float32x2_t *)v21.f32 = *a3;
  v25 = v21;
  v25.i32[2] = v20.i32[0];
  v22.i32[0] = a4[1].i32[0];
  *(float32x2_t *)v19.f32 = *a4;
  v19.i32[2] = v22.i32[0];
  v20.f32[0] = vmla_f32(vmla_lane_f32(vmul_f32(*a3, *a4), (float32x2_t)vdup_lane_s32((int32x2_t)*a4, 1), *a3, 1), v22, v20).f32[0]- *v17;
  v26 = vmlsq_lane_f32(v25, v19, v20, 0);
  *(_DWORD *)&v48[8] = v26.i32[2];
  *(_QWORD *)v48 = v26.i64[0];
  v27 = vabsq_f32(v19);
  v28 = v27.f32[1];
  v29 = v27.f32[1] > v27.f32[0];
  if (v27.f32[1] <= v27.f32[0])
    v28 = v27.f32[0];
  if (v28 < v27.f32[2])
    v29 = 2;
  if (!v29)
  {
    v30 = 0;
    if (v19.f32[0] < 0.0)
      goto LABEL_11;
LABEL_13:
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *(_DWORD *)&v47[8] = *(_DWORD *)&v48[8];
    v31 = v23 - v24;
    goto LABEL_14;
  }
  if (v29 != 1)
  {
    v30 = 2;
    if (a4->f32[v29] < 0.0)
      goto LABEL_11;
    goto LABEL_13;
  }
  v30 = 1;
  if (v19.f32[1] >= 0.0)
    goto LABEL_13;
LABEL_11:
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_DWORD *)&v47[8] = *(_DWORD *)&v48[8];
  v31 = -(float)(v23 - v24);
LABEL_14:
  *(float *)&v47[4 * v30] = v31 + *(float *)&v47[4 * v30];
  if (v30 < 2)
    v32 = 1;
  else
    v32 = -2;
  v33 = (unsigned __int16)(v30 - 1);
  v34 = 4 * (unsigned __int16)(v32 + v30);
  *(float *)&v48[v34] = *(float *)&v48[v34] + -6.0;
  v35 = v30 == 0;
  v36 = 2;
  if (!v35)
    v36 = v33;
  v37 = 4 * v36;
  *(float *)&v48[v37] = *(float *)&v48[v37] + -6.0;
  *(float *)&v47[v34] = *(float *)&v47[v34] + 6.0;
  *(float *)&v47[v37] = *(float *)&v47[v37] + 6.0;
  v38 = *(_DWORD *)v48;
  if (*(float *)v47 >= *(float *)v48)
    v39 = *(float *)v48;
  else
    v39 = *(float *)v47;
  v40.i64[0] = *(_QWORD *)&v47[4];
  v41 = *(_QWORD *)&v48[4];
  v42 = *(float *)&v48[8];
  v43.i64[0] = *(_QWORD *)&v48[4];
  v43.i32[2] = *(_DWORD *)v47;
  if (*(float *)&v48[8] < *(float *)&v47[8])
    v42 = *(float *)&v47[8];
  v44.i64[0] = *(_QWORD *)&v47[4];
  v44.i64[1] = *(_QWORD *)v47;
  v43.i32[3] = *(_DWORD *)&v47[4];
  v45 = *(unsigned __int8 *)(a1 + 40);
  v40.i64[1] = *(_QWORD *)v48;
  *(float *)(a1 + 16) = v39;
  v46.i64[0] = v41;
  v46.i64[1] = __PAIR64__(v41, v38);
  *(int8x16_t *)(a1 + 20) = vbslq_s8((int8x16_t)vcgtq_f32(v43, v40), v44, v46);
  *(float *)(a1 + 36) = v42;
  if (!v45)
    *(_BYTE *)(a1 + 40) = 1;
}

uint64_t sub_223914C94(uint64_t a1, unsigned int *a2, float32x2_t *a3, float32x2_t *a4, uint64_t a5, char a6, double a7, float32x4_t a8, float32x4_t a9, double a10, float32x4_t a11, float32x2_t a12, float32x4_t a13, float32x2_t a14)
{
  float v20;
  float v21;
  float32x2_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x2_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float v29;
  uint64_t v30;
  unsigned int v31;
  float v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  float v38;
  float32x4_t v39;
  float32x4_t v40;
  int8x16_t v41;
  int8x16_t v42;
  float v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  std::mutex *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  float32x4_t v52;
  uint64_t v53;
  uint64_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  uint64_t *v59;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v62;
  std::string::size_type v63;
  int v64;
  BOOL v65;
  float32x4_t v67;
  uint64_t v68;
  uint64_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  double v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  std::mutex *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  std::string::size_type v83;
  std::string *v84;
  std::string::size_type v85;
  std::string::size_type v86;
  int v87;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  std::mutex *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  float32x2_t v98;
  float32x2_t v99;
  float32x2_t v100;
  float32x2_t *i;
  float32x2_t *v102;
  float32x2_t v103;
  uint64_t *v104;
  std::string::size_type v105;
  std::string *v106;
  std::string::size_type v107;
  std::string::size_type v108;
  int v109;
  uint64_t v112;
  float32x2_t v113;
  float32x2_t v114;
  float32x2_t v115;
  float32x2_t *j;
  float32x2_t *v117;
  float32x2_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  std::mutex *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  std::string::size_type v127;
  std::string *v128;
  std::string::size_type v129;
  std::string::size_type v130;
  int v131;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  std::mutex *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  std::string::size_type v142;
  std::string *v143;
  std::string::size_type v144;
  std::string::size_type v145;
  int v146;
  __n128 *v149;
  std::string *v150;
  size_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  std::mutex *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  std::string::size_type v160;
  std::string *v161;
  std::string::size_type v162;
  std::string::size_type v163;
  int v164;
  __n128 *v167;
  std::string *v168;
  size_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  std::mutex *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  std::string::size_type v178;
  std::string *v179;
  std::string::size_type v180;
  std::string::size_type v181;
  int v182;
  __n128 *v185;
  std::string *v186;
  size_t v187;
  void *v189[4];
  int v190;
  std::string __p;
  _BYTE v192[20];
  __int32 v193;
  char v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  _DWORD v198[88];
  uint64_t v199;

  v199 = *MEMORY[0x24BDAC8D0];
  sub_223914A20(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  v20 = *(float *)(a1 + 76);
  v21 = *(float *)(a1 + 72);
  v22.i32[0] = a3[1].i32[0];
  *(float32x2_t *)v23.f32 = *a3;
  v24 = v23;
  v24.i32[2] = v22.i32[0];
  v25.i32[0] = a4[1].i32[0];
  *(float32x2_t *)v26.f32 = *a4;
  v26.i32[2] = v25.i32[0];
  v22.f32[0] = vmla_f32(vmla_lane_f32(vmul_f32(*a3, *a4), (float32x2_t)vdup_lane_s32((int32x2_t)*a4, 1), *a3, 1), v25, v22).f32[0]- v21;
  v27 = vmlsq_lane_f32(v24, v26, v22, 0);
  DWORD2(v196) = v27.i32[2];
  *(_QWORD *)&v196 = v27.i64[0];
  v28 = vabsq_f32(v26);
  v29 = v28.f32[1];
  v30 = v28.f32[1] > v28.f32[0];
  if (v28.f32[1] <= v28.f32[0])
    v29 = v28.f32[0];
  if (v29 < v28.f32[2])
    v30 = 2;
  if (v30)
  {
    if (v30 == 1)
    {
      v31 = 1;
      if (v26.f32[1] < 0.0)
      {
LABEL_8:
        v189[0] = (void *)v196;
        LODWORD(v189[1]) = DWORD2(v196);
        v32 = -(float)(v20 - v21);
        goto LABEL_11;
      }
    }
    else
    {
      v31 = 2;
      if (a4->f32[v30] < 0.0)
        goto LABEL_8;
    }
  }
  else
  {
    v31 = 0;
    if (v26.f32[0] < 0.0)
      goto LABEL_8;
  }
  v189[0] = (void *)v196;
  LODWORD(v189[1]) = DWORD2(v196);
  v32 = v20 - v21;
LABEL_11:
  *((float *)v189 + v31) = v32 + *((float *)v189 + v31);
  if (v31 < 2)
    v33 = 1;
  else
    v33 = -2;
  v34 = (unsigned __int16)(v31 - 1);
  v35 = 4 * (unsigned __int16)(v33 + v31);
  *(float *)((char *)&v196 + v35) = *(float *)((char *)&v196 + v35) + -7.0;
  v65 = v31 == 0;
  v36 = 2;
  if (!v65)
    v36 = v34;
  v37 = 4 * v36;
  *(float *)((char *)&v196 + v37) = *(float *)((char *)&v196 + v37) + -7.0;
  *(float *)((char *)v189 + v35) = *(float *)((char *)v189 + v35) + 7.0;
  *(float *)((char *)v189 + v37) = *(float *)((char *)v189 + v37) + 7.0;
  if (*(float *)v189 >= *(float *)&v196)
    v38 = *(float *)&v196;
  else
    v38 = *(float *)v189;
  v39.i64[0] = *(uint64_t *)((char *)v189 + 4);
  v40.i64[0] = *(_QWORD *)((char *)&v196 + 4);
  v40.i64[1] = (uint64_t)v189[0];
  *(float *)v192 = v38;
  v41.i64[0] = *(uint64_t *)((char *)v189 + 4);
  v41.i64[1] = (uint64_t)v189[0];
  v39.i64[1] = v196;
  v42.i64[0] = *(_QWORD *)((char *)&v196 + 4);
  v42.i64[1] = v196;
  *(int8x16_t *)&v192[4] = vbslq_s8((int8x16_t)vcgtq_f32(v40, v39), v41, v42);
  if (*((float *)&v196 + 2) >= *(float *)&v189[1])
    v43 = *((float *)&v196 + 2);
  else
    v43 = *(float *)&v189[1];
  v193 = LODWORD(v43);
  v194 = 1;
  kdebug_trace();
  *(_BYTE *)(a1 + 66) = -1;
  v44 = (unint64_t)v192 & 0xF0;
  if (!v194)
    v44 = 0;
  sub_2239B396C(*(_QWORD *)(a1 + 8), (uint64_t)a2, v44 | (unint64_t)v192 & 0xFFFFFFFFFFFFFF00, v194, (_BYTE *)(a1 + 66));
  if (a6)
  {
    if (v194)
    {
      *(_QWORD *)&v196 = "cv3d.recon.";
      *((_QWORD *)&v196 + 1) = 11;
      *(_QWORD *)&v197 = "SpatialSubdivision.BBox";
      *((_QWORD *)&v197 + 1) = 23;
      sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
      sub_224569D7C();
      sub_224569A80();
      if (os_variant_has_internal_diagnostics())
      {
        v45 = sub_2241471F8();
        v46 = v45[2];
        if (!v46)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v46 = v45[2];
        }
        v47 = *(_QWORD *)(v46 + 64);
        v48 = (std::mutex *)(v47 + 32);
        std::mutex::lock((std::mutex *)(v47 + 32));
        v50 = *(_QWORD *)(v47 + 96);
        v49 = *(_QWORD *)(v47 + 104);
        std::mutex::unlock(v48);
        if (v50 != v49)
        {
          sub_2241471F8();
          v51 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v51 + 24))(v51))
          {
            memset(v189, 0, sizeof(v189));
            v190 = 728325608;
            kdebug_trace();
            sub_22414CE34(0, (uint64_t)&v196);
            v54 = *((_QWORD *)&v196 + 1);
            v53 = v196;
            if ((_QWORD)v196 != *((_QWORD *)&v196 + 1))
            {
              v52.i64[0] = *(_QWORD *)&v192[12];
              v52.i32[2] = v193;
              v55.i32[3] = *(_DWORD *)&v192[12];
              v56.i64[0] = 0x3F0000003F000000;
              v56.i64[1] = 0x3F0000003F000000;
              v57 = vmulq_f32(vsubq_f32(v52, *(float32x4_t *)v192), v56);
              v58 = vmulq_f32(vaddq_f32(v52, *(float32x4_t *)v192), v56);
              do
              {
                v55.i64[0] = *(_QWORD *)v53;
                v55.i32[2] = *(_DWORD *)(v53 + 8);
                v55 = vaddq_f32(v58, vmulq_f32(v57, v55));
                *(_DWORD *)(v53 + 8) = v55.i32[2];
                *(_QWORD *)v53 = v55.i64[0];
                v53 += 12;
              }
              while (v53 != v54);
            }
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v51 + 24))(v51))
            {
              *(_QWORD *)&v195 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
              *((_QWORD *)&v195 + 1) = 2;
              v59 = sub_2241471F8();
              sub_2238BB49C((uint64_t)v59, v51, (uint64_t)&v196, (uint64_t)&unk_2245C9EFE, &v195);
            }
            sub_22316F8F4((uint64_t *)&v196);
            kdebug_trace();
          }
        }
      }
      memset(v189, 0, sizeof(v189));
      v190 = 728325624;
      kdebug_trace();
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = __p.__r_.__value_.__l.__size_;
      if (size >= 0x11)
      {
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        v62 = p_p->__r_.__value_.__r.__words[0];
        v63 = p_p->__r_.__value_.__l.__size_;
        v64 = p_p->__r_.__value_.__s.__data_[16];
        v65 = v62 == 0x6365722E64337663 && v63 == 0x73746174532E6E6FLL;
        if (v65 && v64 == 46)
        {
          sub_223187510();
          sub_22414CE34(0, (uint64_t)&v196);
          v69 = *((_QWORD *)&v196 + 1);
          v68 = v196;
          if ((_QWORD)v196 != *((_QWORD *)&v196 + 1))
          {
            v67.i64[0] = *(_QWORD *)&v192[12];
            v67.i32[2] = v193;
            v70.i32[3] = *(_DWORD *)&v192[12];
            v71.i64[0] = 0x3F0000003F000000;
            v71.i64[1] = 0x3F0000003F000000;
            v72 = vmulq_f32(vsubq_f32(v67, *(float32x4_t *)v192), v71);
            v73 = vmulq_f32(vaddq_f32(v67, *(float32x4_t *)v192), v71);
            do
            {
              v70.i64[0] = *(_QWORD *)v68;
              v70.i32[2] = *(_DWORD *)(v68 + 8);
              v70 = vaddq_f32(v73, vmulq_f32(v72, v70));
              *(_DWORD *)(v68 + 8) = v70.i32[2];
              *(_QWORD *)v68 = v70.i64[0];
              v68 += 12;
            }
            while (v68 != v69);
          }
          sub_22316F8F4((uint64_t *)&v196);
        }
      }
      kdebug_trace();
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    *(_QWORD *)&v196 = "cv3d.recon.";
    *((_QWORD *)&v196 + 1) = 11;
    *(_QWORD *)&v197 = "SpatialSubdivision.Points";
    *((_QWORD *)&v197 + 1) = 25;
    sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    v74 = (double)a5 / 1000000000.0;
    if (os_variant_has_internal_diagnostics())
    {
      v75 = sub_2241471F8();
      v76 = v75[2];
      if (!v76)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v76 = v75[2];
      }
      v77 = *(_QWORD *)(v76 + 64);
      v78 = (std::mutex *)(v77 + 32);
      std::mutex::lock((std::mutex *)(v77 + 32));
      v80 = *(_QWORD *)(v77 + 96);
      v79 = *(_QWORD *)(v77 + 104);
      std::mutex::unlock(v78);
      if (v80 != v79)
      {
        sub_2241471F8();
        v81 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v81 + 24))(v81))
        {
          memset(v189, 0, sizeof(v189));
          v190 = 728325608;
          kdebug_trace();
          sub_223CF9A48(a2, (uint64_t)&v196);
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v81 + 24))(v81))
          {
            *(_QWORD *)&v195 = (uint64_t)(v74 * 1000000000.0);
            *((_QWORD *)&v195 + 1) = 2;
            v82 = sub_2241471F8();
            sub_2238BB49C((uint64_t)v82, v81, (uint64_t)&v196, (uint64_t)&unk_2245C9EFE, &v195);
          }
          sub_22316F8F4((uint64_t *)&v196);
          kdebug_trace();
        }
      }
    }
    memset(v189, 0, sizeof(v189));
    v190 = 728325624;
    kdebug_trace();
    v83 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v83 = __p.__r_.__value_.__l.__size_;
    if (v83 >= 0x11)
    {
      v84 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v84 = (std::string *)__p.__r_.__value_.__r.__words[0];
      v85 = v84->__r_.__value_.__r.__words[0];
      v86 = v84->__r_.__value_.__l.__size_;
      v87 = v84->__r_.__value_.__s.__data_[16];
      if (v85 == 0x6365722E64337663 && v86 == 0x73746174532E6E6FLL && v87 == 46)
      {
        sub_223187510();
        sub_223CF9A48(a2, (uint64_t)&v196);
        sub_22316F8F4((uint64_t *)&v196);
      }
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)&v196 = "cv3d.recon.";
    *((_QWORD *)&v196 + 1) = 11;
    *(_QWORD *)&v197 = "SpatialSubdivision.Graph";
    *((_QWORD *)&v197 + 1) = 24;
    sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v90 = sub_2241471F8();
      v91 = v90[2];
      if (!v91)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v91 = v90[2];
      }
      v92 = *(_QWORD *)(v91 + 64);
      v93 = (std::mutex *)(v92 + 32);
      std::mutex::lock((std::mutex *)(v92 + 32));
      v95 = *(_QWORD *)(v92 + 96);
      v94 = *(_QWORD *)(v92 + 104);
      std::mutex::unlock(v93);
      if (v95 != v94)
      {
        sub_2241471F8();
        v96 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v96 + 24))(v96))
        {
          memset(v189, 0, sizeof(v189));
          v190 = 728325608;
          kdebug_trace();
          v97 = *(_QWORD *)(a1 + 8);
          sub_223A13904(v97 + 24, (uint64_t)&v196);
          v102 = (float32x2_t *)*((_QWORD *)&v196 + 1);
          for (i = (float32x2_t *)v196; i != v102; i = (float32x2_t *)((char *)i + 12))
          {
            v98.i32[0] = *(_DWORD *)(v97 + 1664);
            v99.i32[0] = *(_DWORD *)(v97 + 1676);
            v100.i32[0] = *(_DWORD *)(v97 + 1688);
            v103 = vmla_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)(v97 + 1656), COERCE_FLOAT(*i)), *(float32x2_t *)(v97 + 1668), *i, 1), 0, *(float32x2_t *)(v97 + 1680));
            v98 = vmla_f32(vmla_lane_f32(vmul_f32(v98, *i), v99, *i, 1), 0, v100);
            i[1].i32[0] = v98.i32[0];
            *i = v103;
          }
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v96 + 24))(v96))
          {
            *(_QWORD *)&v195 = (uint64_t)(v74 * 1000000000.0);
            *((_QWORD *)&v195 + 1) = 2;
            v104 = sub_2241471F8();
            sub_2238BB49C((uint64_t)v104, v96, (uint64_t)&v196, (uint64_t)&unk_2245C9EFE, &v195);
          }
          sub_22316F8F4((uint64_t *)&v196);
          kdebug_trace();
        }
      }
    }
    memset(v189, 0, sizeof(v189));
    v190 = 728325624;
    kdebug_trace();
    v105 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v105 = __p.__r_.__value_.__l.__size_;
    if (v105 >= 0x11)
    {
      v106 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v106 = (std::string *)__p.__r_.__value_.__r.__words[0];
      v107 = v106->__r_.__value_.__r.__words[0];
      v108 = v106->__r_.__value_.__l.__size_;
      v109 = v106->__r_.__value_.__s.__data_[16];
      if (v107 == 0x6365722E64337663 && v108 == 0x73746174532E6E6FLL && v109 == 46)
      {
        sub_223187510();
        v112 = *(_QWORD *)(a1 + 8);
        sub_223A13904(v112 + 24, (uint64_t)&v196);
        v117 = (float32x2_t *)*((_QWORD *)&v196 + 1);
        for (j = (float32x2_t *)v196; j != v117; j = (float32x2_t *)((char *)j + 12))
        {
          v113.i32[0] = *(_DWORD *)(v112 + 1664);
          v114.i32[0] = *(_DWORD *)(v112 + 1676);
          v115.i32[0] = *(_DWORD *)(v112 + 1688);
          v118 = vmla_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)(v112 + 1656), COERCE_FLOAT(*j)), *(float32x2_t *)(v112 + 1668), *j, 1), 0, *(float32x2_t *)(v112 + 1680));
          v113 = vmla_f32(vmla_lane_f32(vmul_f32(v113, *j), v114, *j, 1), 0, v115);
          j[1].i32[0] = v113.i32[0];
          *j = v118;
        }
        sub_22316F8F4((uint64_t *)&v196);
      }
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)&v196 = "cv3d.recon.";
    *((_QWORD *)&v196 + 1) = 11;
    *(_QWORD *)&v197 = "SpatialSubdivision.Result";
    *((_QWORD *)&v197 + 1) = 25;
    sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v119 = sub_2241471F8();
      v120 = v119[2];
      if (!v120)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v120 = v119[2];
      }
      v121 = *(_QWORD *)(v120 + 64);
      v122 = (std::mutex *)(v121 + 32);
      std::mutex::lock((std::mutex *)(v121 + 32));
      v124 = *(_QWORD *)(v121 + 96);
      v123 = *(_QWORD *)(v121 + 104);
      std::mutex::unlock(v122);
      if (v124 != v123)
      {
        sub_2241471F8();
        v125 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v125 + 24))(v125))
        {
          memset(v189, 0, sizeof(v189));
          v190 = 728325608;
          kdebug_trace();
          sub_223A20A50(*(_QWORD *)(a1 + 8) + 328, (uint64_t)&v196, 2.5);
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v125 + 24))(v125))
          {
            *(_QWORD *)&v195 = (uint64_t)(v74 * 1000000000.0);
            *((_QWORD *)&v195 + 1) = 2;
            v126 = sub_2241471F8();
            sub_2238BB49C((uint64_t)v126, v125, (uint64_t)&v196, (uint64_t)&unk_2245C9EFE, &v195);
          }
          sub_22316F8F4((uint64_t *)&v196);
          kdebug_trace();
        }
      }
    }
    memset(v189, 0, sizeof(v189));
    v190 = 728325624;
    kdebug_trace();
    v127 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v127 = __p.__r_.__value_.__l.__size_;
    if (v127 >= 0x11)
    {
      v128 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v128 = (std::string *)__p.__r_.__value_.__r.__words[0];
      v129 = v128->__r_.__value_.__r.__words[0];
      v130 = v128->__r_.__value_.__l.__size_;
      v131 = v128->__r_.__value_.__s.__data_[16];
      if (v129 == 0x6365722E64337663 && v130 == 0x73746174532E6E6FLL && v131 == 46)
      {
        sub_223187510();
        sub_223A20A50(*(_QWORD *)(a1 + 8) + 328, (uint64_t)&v196, 2.5);
        sub_22316F8F4((uint64_t *)&v196);
      }
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)&v196 = "cv3d.recon.";
    *((_QWORD *)&v196 + 1) = 11;
    *(_QWORD *)&v197 = "Stats.PRR.FloorAndCeilingEstimation.Floor.Height";
    *((_QWORD *)&v197 + 1) = 48;
    sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v134 = sub_2241471F8();
      v135 = v134[2];
      if (!v135)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v135 = v134[2];
      }
      v136 = *(_QWORD *)(v135 + 64);
      v137 = (std::mutex *)(v136 + 32);
      std::mutex::lock((std::mutex *)(v136 + 32));
      v139 = *(_QWORD *)(v136 + 96);
      v138 = *(_QWORD *)(v136 + 104);
      std::mutex::unlock(v137);
      if (v139 != v138)
      {
        sub_2241471F8();
        v140 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v140 + 24))(v140))
        {
          v196 = 0u;
          v197 = 0u;
          v198[0] = 728325608;
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v140 + 24))(v140))
          {
            HIBYTE(v189[2]) = 21;
            strcpy((char *)v189, "denoised floor height");
            *(_QWORD *)&v195 = (uint64_t)(v74 * 1000000000.0);
            *((_QWORD *)&v195 + 1) = 2;
            v141 = sub_2241471F8();
            sub_2231AF940((uint64_t)v141, v140, (float *)(a1 + 72), (uint64_t)v189, &v195);
            if (SHIBYTE(v189[2]) < 0)
              operator delete(v189[0]);
          }
          kdebug_trace();
        }
      }
    }
    v196 = 0u;
    v197 = 0u;
    v198[0] = 728325624;
    kdebug_trace();
    v142 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v142 = __p.__r_.__value_.__l.__size_;
    if (v142 >= 0x11)
    {
      v143 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v143 = (std::string *)__p.__r_.__value_.__r.__words[0];
      v144 = v143->__r_.__value_.__r.__words[0];
      v145 = v143->__r_.__value_.__l.__size_;
      v146 = v143->__r_.__value_.__s.__data_[16];
      if (v144 == 0x6365722E64337663 && v145 == 0x73746174532E6E6FLL && v146 == 46)
      {
        v149 = sub_223187510();
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v150 = &__p;
        else
          v150 = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v151 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v151 = __p.__r_.__value_.__l.__size_;
        sub_2231897A8((uint64_t *)v149, v150, v151, (float *)(a1 + 72), (uint64_t)"denoised floor height", 21);
      }
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)&v196 = "cv3d.recon.";
    *((_QWORD *)&v196 + 1) = 11;
    *(_QWORD *)&v197 = "Stats.PRR.FloorAndCeilingEstimation.Floor.Height";
    *((_QWORD *)&v197 + 1) = 48;
    sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v152 = sub_2241471F8();
      v153 = v152[2];
      if (!v153)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v153 = v152[2];
      }
      v154 = *(_QWORD *)(v153 + 64);
      v155 = (std::mutex *)(v154 + 32);
      std::mutex::lock((std::mutex *)(v154 + 32));
      v157 = *(_QWORD *)(v154 + 96);
      v156 = *(_QWORD *)(v154 + 104);
      std::mutex::unlock(v155);
      if (v157 != v156)
      {
        sub_2241471F8();
        v158 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v158 + 24))(v158))
        {
          v196 = 0u;
          v197 = 0u;
          v198[0] = 728325608;
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v158 + 24))(v158))
          {
            v189[0] = operator new(0x20uLL);
            *(_OWORD *)&v189[1] = xmmword_2245B8E30;
            strcpy((char *)v189[0], "denoised floor height (lower)");
            *(_QWORD *)&v195 = (uint64_t)(v74 * 1000000000.0);
            *((_QWORD *)&v195 + 1) = 2;
            v159 = sub_2241471F8();
            sub_2231AF940((uint64_t)v159, v158, (float *)(a1 + 68), (uint64_t)v189, &v195);
            if (SHIBYTE(v189[2]) < 0)
              operator delete(v189[0]);
          }
          kdebug_trace();
        }
      }
    }
    v196 = 0u;
    v197 = 0u;
    v198[0] = 728325624;
    kdebug_trace();
    v160 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v160 = __p.__r_.__value_.__l.__size_;
    if (v160 >= 0x11)
    {
      v161 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v161 = (std::string *)__p.__r_.__value_.__r.__words[0];
      v162 = v161->__r_.__value_.__r.__words[0];
      v163 = v161->__r_.__value_.__l.__size_;
      v164 = v161->__r_.__value_.__s.__data_[16];
      if (v162 == 0x6365722E64337663 && v163 == 0x73746174532E6E6FLL && v164 == 46)
      {
        v167 = sub_223187510();
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v168 = &__p;
        else
          v168 = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v169 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v169 = __p.__r_.__value_.__l.__size_;
        sub_2231897A8((uint64_t *)v167, v168, v169, (float *)(a1 + 68), (uint64_t)"denoised floor height (lower)", 29);
      }
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)&v196 = "cv3d.recon.";
    *((_QWORD *)&v196 + 1) = 11;
    *(_QWORD *)&v197 = "Stats.PRR.FloorAndCeilingEstimation.Ceiling.Height";
    *((_QWORD *)&v197 + 1) = 50;
    sub_2231A9820((uint64_t)&v196, (uint64_t)v198, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v170 = sub_2241471F8();
      v171 = v170[2];
      if (!v171)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v171 = v170[2];
      }
      v172 = *(_QWORD *)(v171 + 64);
      v173 = (std::mutex *)(v172 + 32);
      std::mutex::lock((std::mutex *)(v172 + 32));
      v175 = *(_QWORD *)(v172 + 96);
      v174 = *(_QWORD *)(v172 + 104);
      std::mutex::unlock(v173);
      if (v175 != v174)
      {
        sub_2241471F8();
        v176 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v176 + 24))(v176))
        {
          v196 = 0u;
          v197 = 0u;
          v198[0] = 728325608;
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v176 + 24))(v176))
          {
            v189[0] = operator new(0x19uLL);
            *(_OWORD *)&v189[1] = xmmword_2245B9430;
            strcpy((char *)v189[0], "denoised ceiling height");
            *(_QWORD *)&v195 = (uint64_t)(v74 * 1000000000.0);
            *((_QWORD *)&v195 + 1) = 2;
            v177 = sub_2241471F8();
            sub_2231AF940((uint64_t)v177, v176, (float *)(a1 + 76), (uint64_t)v189, &v195);
            if (SHIBYTE(v189[2]) < 0)
              operator delete(v189[0]);
          }
          kdebug_trace();
        }
      }
    }
    v196 = 0u;
    v197 = 0u;
    v198[0] = 728325624;
    kdebug_trace();
    v178 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v178 = __p.__r_.__value_.__l.__size_;
    if (v178 >= 0x11)
    {
      v179 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v179 = (std::string *)__p.__r_.__value_.__r.__words[0];
      v180 = v179->__r_.__value_.__r.__words[0];
      v181 = v179->__r_.__value_.__l.__size_;
      v182 = v179->__r_.__value_.__s.__data_[16];
      if (v180 == 0x6365722E64337663 && v181 == 0x73746174532E6E6FLL && v182 == 46)
      {
        v185 = sub_223187510();
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v186 = &__p;
        else
          v186 = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v187 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          v187 = __p.__r_.__value_.__l.__size_;
        sub_2231897A8((uint64_t *)v185, v186, v187, (float *)(a1 + 76), (uint64_t)"denoised ceiling height", 23);
      }
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(_QWORD *)(a1 + 48) = a5;
  *(_BYTE *)(a1 + 56) = a6;
  return kdebug_trace();
}

void sub_223916480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2239165F8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v25;
  void *v26;

  v2 = *(std::__shared_weak_count **)(a1 + 288);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(_QWORD **)(a1 + 256);
    if (!v5)
      goto LABEL_7;
  }
  else
  {
LABEL_5:
    v5 = *(_QWORD **)(a1 + 256);
    if (!v5)
      goto LABEL_7;
  }
  do
  {
    v6 = (_QWORD *)*v5;
    operator delete(v5);
    v5 = v6;
  }
  while (v6);
LABEL_7:
  v7 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = 0;
  if (v7)
    operator delete(v7);
  v8 = *(_QWORD **)(a1 + 208);
  if (v8)
  {
    do
    {
      v9 = (_QWORD *)*v8;
      operator delete(v8);
      v8 = v9;
    }
    while (v9);
  }
  v10 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = 0;
  if (v10)
    operator delete(v10);
  v11 = *(_QWORD **)(a1 + 168);
  if (v11)
  {
    do
    {
      v25 = (_QWORD *)*v11;
      v26 = (void *)v11[4];
      if (v26)
      {
        v11[5] = v26;
        operator delete(v26);
      }
      operator delete(v11);
      v11 = v25;
    }
    while (v25);
  }
  v12 = *(void **)(a1 + 152);
  *(_QWORD *)(a1 + 152) = 0;
  if (v12)
    operator delete(v12);
  v13 = *(_QWORD **)(a1 + 128);
  if (v13)
  {
    v14 = *(_QWORD **)(a1 + 136);
    v15 = *(void **)(a1 + 128);
    if (v14 != v13)
    {
      do
        v14 = sub_22391679C(v14 - 18);
      while (v14 != v13);
      v15 = *(void **)(a1 + 128);
    }
    *(_QWORD *)(a1 + 136) = v13;
    operator delete(v15);
  }
  v16 = *(void **)(a1 + 104);
  if (v16)
  {
    *(_QWORD *)(a1 + 112) = v16;
    operator delete(v16);
  }
  v17 = *(void **)(a1 + 80);
  if (v17)
  {
    *(_QWORD *)(a1 + 88) = v17;
    operator delete(v17);
  }
  v18 = *(_QWORD **)(a1 + 56);
  if (v18)
  {
    do
    {
      v19 = (_QWORD *)*v18;
      operator delete(v18);
      v18 = v19;
    }
    while (v19);
  }
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v20)
    operator delete(v20);
  v21 = *(_QWORD **)(a1 + 16);
  if (v21)
  {
    do
    {
      v22 = (_QWORD *)*v21;
      operator delete(v21);
      v21 = v22;
    }
    while (v22);
  }
  v23 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v23)
    operator delete(v23);
  return a1;
}

_QWORD *sub_22391679C(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v2 = (void *)a1[15];
  if (v2)
  {
    v3 = a1[16];
    v4 = v2;
    if ((void *)v3 != v2)
    {
      do
        v3 = sub_22391679C(v3 - 144);
      while ((void *)v3 != v2);
      v4 = (void *)a1[15];
    }
    a1[16] = v2;
    operator delete(v4);
  }
  v5 = a1[10];
  if (v5)
  {
    v6 = a1[11];
    v7 = (void *)a1[10];
    if (v6 != v5)
    {
      v8 = a1[11];
      do
      {
        v10 = *(void **)(v8 - 24);
        v8 -= 24;
        v9 = v10;
        if (v10)
        {
          *(_QWORD *)(v6 - 16) = v9;
          operator delete(v9);
        }
        v6 = v8;
      }
      while (v8 != v5);
      v7 = (void *)a1[10];
    }
    a1[11] = v5;
    operator delete(v7);
  }
  v11 = (void *)a1[7];
  if (v11)
  {
    a1[8] = v11;
    operator delete(v11);
  }
  v12 = (void *)a1[4];
  if (v12)
  {
    a1[5] = v12;
    operator delete(v12);
  }
  v13 = (void *)a1[1];
  if (v13)
  {
    a1[2] = v13;
    operator delete(v13);
  }
  return a1;
}

uint64_t sub_22391687C()
{
  return 0;
}

void sub_223916890()
{
  JUMPOUT(0x227684CE8);
}

void sub_2239168A8(uint64_t a1, uint64_t *a2, char a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  std::mutex *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  int32x4_t v22;
  int32x4_t v23;
  float32x4_t v24;
  float32x2_t v25;
  int v26;
  __int128 v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int32x4_t v31;
  float32x2_t v32;
  float32x2_t v33;
  float32x2_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  std::mutex *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t *p_p;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unsigned int v53;
  uint64_t v54;
  int v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61[48];
  void *v62;
  __int128 v63;
  _OWORD v64[3];
  float32x2_t v65;
  unsigned __int32 v66;
  int v67;
  int v68;
  uint64_t v69;
  __int128 v70;
  void *__p;
  uint64_t (**v72)(_QWORD);
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  int v84;
  __int128 v85;
  __int128 v86;
  _DWORD v87[90];
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  v5 = operator new(0x20uLL);
  v62 = v5;
  v63 = xmmword_2245C6420;
  strcpy((char *)v5, "PRR.IOFilter.IOFilterKeyframes");
  sub_2241498F4((uint64_t)v61, 0);
  v60 = 0;
  v59 = 0;
  v6 = *a2;
  v7 = a2[1];
  if (*a2 != v7)
  {
    v58 = a1;
    while (1)
    {
      if ((*(_BYTE *)(v6 + 240) & 0x30) != 0)
        goto LABEL_3;
      v8 = sub_2231D04FC(*(_QWORD *)(v6 + 16));
      v9 = *(_DWORD *)(v8 + 4);
      if (!*(_DWORD *)v8 || v9 == 0)
        goto LABEL_3;
      if (*(_DWORD *)v8 != 1)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/KeyframeOnlyIndoorOutdoorFilter.cpp", 71, (uint64_t)"scene_type_ref.Shape()(0) == 1", 30, (uint64_t)"Invalid scene type width", 24, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_84;
        }
        v9 = *(_DWORD *)(v8 + 4);
      }
      if (v9 != 1
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/KeyframeOnlyIndoorOutdoorFilter.cpp", 72, (uint64_t)"scene_type_ref.Shape()(1) == 1", 30, (uint64_t)"Invalid scene type height", 25, (void (*)(void **))sub_22457406C))
      {
LABEL_84:
        abort();
      }
      v11 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 40) + 164);
      if ((v11 - 1) <= 1)
        ++*((_DWORD *)&v59 + v11);
      sub_224569D7C();
      sub_224569A80();
      if (!os_variant_has_internal_diagnostics())
        goto LABEL_3;
      v12 = sub_2241471F8();
      v13 = v12[2];
      if (!v13)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v13 = v12[2];
      }
      v14 = *(_QWORD *)(v13 + 64);
      v15 = (std::mutex *)(v14 + 32);
      std::mutex::lock((std::mutex *)(v14 + 32));
      v16 = *(_QWORD *)(v14 + 96);
      v17 = *(_QWORD *)(v14 + 104);
      std::mutex::unlock(v15);
      if (v16 == v17)
        goto LABEL_3;
      *(_QWORD *)&v85 = "cv3d.recon.";
      *((_QWORD *)&v85 + 1) = 11;
      v18 = HIBYTE(v63);
      if (v63 >= 0)
        v19 = &v62;
      else
        v19 = v62;
      if (v63 < 0)
        v18 = v63;
      *(_QWORD *)&v86 = v19;
      *((_QWORD *)&v86 + 1) = v18;
      sub_2231A9820((uint64_t)&v85, (uint64_t)v87, 0, 0, (std::string *)&__p);
      sub_2241471F8();
      v20 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 24))(v20);
      v26 = v21;
      if (SBYTE7(v73) < 0)
      {
        operator delete(__p);
        if (v26)
        {
LABEL_30:
          if ((_DWORD)v11 == 2)
          {
            v68 = 0;
            v22.i64[0] = 1065353216;
          }
          else if ((_DWORD)v11 == 1)
          {
            v68 = 0;
            v22.i64[0] = 0x3F80000000000000;
          }
          else
          {
            v68 = 1065353216;
            v22.i64[0] = 0;
          }
          v69 = v22.i64[0];
          v22.i64[0] = *(_QWORD *)(v6 + 32);
          v22.i32[2] = *(_DWORD *)(v6 + 40);
          v23.i64[0] = *(_QWORD *)(v6 + 48);
          v23.i32[2] = *(_DWORD *)(v6 + 56);
          v24.i64[0] = *(_QWORD *)(v6 + 80);
          v24.i32[2] = *(_DWORD *)(v6 + 88);
          *(_QWORD *)&v27 = vzip1q_s32(v22, v23).u64[0];
          v28 = (int8x16_t)vnegq_f32(v24);
          v25.i32[0] = *(_DWORD *)(v6 + 72);
          v29 = (int8x16_t)vtrn2q_s32(v22, v23);
          v29.i32[2] = HIDWORD(*(_QWORD *)(v6 + 64));
          v30 = (int8x16_t)vzip2q_s32(v22, v23);
          v31 = (int32x4_t)v30;
          v31.i32[2] = v25.i32[0];
          v32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v27, *(float *)v28.i32), *(float32x2_t *)v29.i8, *(float32x2_t *)v24.f32, 1), *(float32x2_t *)v30.i8, v24, 2);
          v33 = vmls_lane_f32(vmul_f32(*(float32x2_t *)(v6 + 64), *(float32x2_t *)v28.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v6 + 64), 1), *(float32x2_t *)v24.f32, 1);
          v34 = (float32x2_t)vextq_s8(v28, v28, 8uLL).u64[0];
          *((_QWORD *)&v27 + 1) = *(_QWORD *)(v6 + 64);
          v28.i32[3] = 0;
          v28.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v29, 0).i32[3];
          *(uint64_t *)((char *)v28.i64 + 4) = vextq_s8(v29, v30, 4uLL).u64[0];
          v31.i64[1] = vdupq_laneq_s32(v31, 2).u32[0];
          v64[0] = v27;
          v64[2] = v31;
          v64[1] = v28;
          v65 = v32;
          v66 = vmla_f32(v33, v34, v25).u32[0];
          v67 = 1065353216;
          v70 = xmmword_224651370;
          sub_223207E58(&v79, (int *)&v70);
          v73 = v80;
          v74 = v81;
          v75 = v82;
          v76 = v83;
          v77 = v84;
          v78 = 0xA0000000ALL;
          v72 = &off_24EC20868;
          __p = &off_24EC207B8;
          sub_224002D14((uint64_t)&__p, (int32x2_t *)v64, (uint64_t *)&v68, (uint64_t)&v85, 1.0);
          sub_22414E9E0((uint64_t)v61, (uint64_t)&v85);
          sub_22316F8F4((uint64_t *)&v85);
        }
      }
      else if (v21)
      {
        goto LABEL_30;
      }
LABEL_3:
      v6 += 248;
      if (v6 == v7)
      {
        LODWORD(v35) = HIBYTE(v63);
        v5 = v62;
        v36 = v63;
        a1 = v58;
        goto LABEL_38;
      }
    }
  }
  LODWORD(v35) = 128;
  v36 = 30;
LABEL_38:
  *(_QWORD *)&v85 = "cv3d.recon.";
  *((_QWORD *)&v85 + 1) = 11;
  v35 = v35;
  if ((v35 & 0x80u) == 0)
    v37 = &v62;
  else
    v37 = (void **)v5;
  if ((v35 & 0x80u) != 0)
    v35 = v36;
  *(_QWORD *)&v86 = v37;
  *((_QWORD *)&v86 + 1) = v35;
  sub_2231A9820((uint64_t)&v85, (uint64_t)v87, 0, 0, (std::string *)&__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v38 = sub_2241471F8();
    v39 = v38[2];
    if (!v39)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v39 = v38[2];
    }
    v40 = *(_QWORD *)(v39 + 64);
    v41 = (std::mutex *)(v40 + 32);
    std::mutex::lock((std::mutex *)(v40 + 32));
    v43 = *(_QWORD *)(v40 + 96);
    v42 = *(_QWORD *)(v40 + 104);
    std::mutex::unlock(v41);
    if (v43 != v42)
    {
      sub_2241471F8();
      v44 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v44 + 24))(v44))
      {
        v85 = 0u;
        v86 = 0u;
        v87[0] = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v44 + 24))(v44))
        {
          v79 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *(_QWORD *)&v80 = 2;
          v45 = sub_2241471F8();
          sub_223917190((uint64_t)v45, v44, (uint64_t)v61, (uint64_t)&unk_2245C9EFE, (__int128 *)&v79);
        }
        kdebug_trace();
      }
    }
  }
  v85 = 0u;
  v86 = 0u;
  v87[0] = 728325624;
  kdebug_trace();
  v46 = BYTE7(v73);
  if (SBYTE7(v73) < 0)
    v46 = (unint64_t)v72;
  if (v46 >= 0x11)
  {
    p_p = (uint64_t *)&__p;
    if (SBYTE7(v73) < 0)
      p_p = (uint64_t *)__p;
    v48 = *p_p;
    v49 = p_p[1];
    v50 = *((unsigned __int8 *)p_p + 16);
    if (v48 == 0x6365722E64337663 && v49 == 0x73746174532E6E6FLL && v50 == 46)
      sub_223187510();
  }
  kdebug_trace();
  if (SBYTE7(v73) < 0)
    operator delete(__p);
  if (v59 <= HIDWORD(v59))
    v53 = HIDWORD(v59);
  else
    v53 = v59;
  v54 = 4 * (v59 < HIDWORD(v59));
  if (v53 < v60)
    v54 = 8;
  v55 = *(_DWORD *)((char *)&v59 + v54);
  if (v55)
  {
    if (v60 == v55)
    {
      v56 = 2;
      goto LABEL_82;
    }
    if (HIDWORD(v59) == v55)
    {
      v56 = 1;
      goto LABEL_82;
    }
  }
  if (!*(_BYTE *)(a1 + 9))
  {
    v56 = a3;
LABEL_82:
    *(_BYTE *)(a1 + 9) = v56;
    sub_22316F8F4(v61);
    if (SHIBYTE(v63) < 0)
      goto LABEL_83;
    return;
  }
  sub_22316F8F4(v61);
  if (SHIBYTE(v63) < 0)
LABEL_83:
    operator delete(v62);
}

void sub_2239170BC(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

uint64_t sub_223917158(uint64_t result)
{
  *(_BYTE *)(result + 9) = 0;
  return result;
}

void sub_223917164()
{
  JUMPOUT(0x227684CE8);
}

uint64_t sub_223917178()
{
  return 0;
}

uint64_t sub_223917184(uint64_t result)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 9);
  return result;
}

uint64_t sub_223917190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 __p;
  char v15;
  char v16;
  _QWORD v17[2];
  std::__shared_weak_count *v18;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v9 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    LOBYTE(__p) = 0;
    v16 = 0;
    sub_22329D8A4(a3, &__p, a5, v17);
    sub_2231AA5A4(a1, v9, (uint64_t)v17);
    v10 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    if (v16 && v15 < 0)
      operator delete((void *)__p);
  }
  return a1;
}

void sub_223917270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, int a17, __int16 a18, char a19, char a20)
{
  sub_2241231D8((uint64_t)&a18);
  if (a16)
  {
    if (a15 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2239172A4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  if (!v1)
    sub_223198474();
  if ((*(float (**)(uint64_t))(*(_QWORD *)v1 + 48))(v1) <= 0.0)
    return 1;
  else
    return 2;
}

_QWORD *sub_2239172D8(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = &off_24EC5CDB0;
  v2 = a1 + 1;
  v3 = (_QWORD *)a1[4];
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_223917334(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *a1 = &off_24EC5CDB0;
  v1 = a1 + 1;
  v2 = (_QWORD *)a1[4];
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x227684CE8);
}

void sub_2239173A0()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/OccupancyMappedStateProvider.h", 61, (uint64_t)"", 0, (uint64_t)"ComputeMeshState is not supported by OccupancyMappedStateProvider", 65, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_2239173DC()
{
  sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/OccupancyMappedStateProvider.h", 56, (uint64_t)"", 0, (uint64_t)"ComputeMeshStates is not supported by OccupancyMappedStateProvider", 66, (void (*)(void **))sub_22457406C);
  abort();
}

void sub_223917418(uint64_t *a1, uint64_t a2, float32x4_t a3)
{
  float32x4_t v4;
  float v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  float v12;
  float v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  char *v35;
  void *v36;
  uint64_t v37;
  char *v38;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a3.i64[0] = *(_QWORD *)(a2 + 24);
  a3.i32[2] = *(_DWORD *)(a2 + 32);
  v4 = vabsq_f32(a3);
  v5 = v4.f32[1];
  v6 = v4.f32[1] > v4.f32[0];
  if (v4.f32[1] <= v4.f32[0])
    v5 = v4.f32[0];
  if (v5 < v4.f32[2])
    v6 = 2;
  if (v6 == 1)
  {
    if (a3.f32[1] < 0.0)
      v7 = 2;
    else
      v7 = 3;
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    if (v8 != v9)
      goto LABEL_18;
  }
  else
  {
    if (!v6)
    {
      v7 = a3.f32[0] >= 0.0;
      v8 = *(_QWORD *)(a2 + 40);
      v9 = *(_QWORD *)(a2 + 48);
      if (v8 == v9)
        return;
      goto LABEL_18;
    }
    if (*(float *)(a2 + 24 + 4 * v6) < 0.0)
      v7 = 4;
    else
      v7 = 5;
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    if (v8 != v9)
    {
LABEL_18:
      v10 = 0;
      v11 = (unint64_t *)(a1 + 2);
      do
      {
        if (!*(_BYTE *)(v8 + 148) || !*(_BYTE *)(v8 + 156))
          goto LABEL_21;
        v12 = *(float *)(v8 + 144);
        v13 = *(float *)(v8 + 152) - v12;
        if (v10 < *v11)
        {
          sub_223EB22AC(v10, v8 + 8, v7, *(float *)(v8 + 144), v13);
          v10 += 144;
          a1[1] = v10;
        }
        else
        {
          v14 = 0x8E38E38E38E38E39 * ((uint64_t)(v10 - *a1) >> 4);
          v15 = v14 + 1;
          if (v14 + 1 > 0x1C71C71C71C71C7)
            sub_22316E078();
          if (0x1C71C71C71C71C72 * ((uint64_t)(*v11 - *a1) >> 4) > v15)
            v15 = 0x1C71C71C71C71C72 * ((uint64_t)(*v11 - *a1) >> 4);
          if (0x8E38E38E38E38E39 * ((uint64_t)(*v11 - *a1) >> 4) >= 0xE38E38E38E38E3)
            v16 = 0x1C71C71C71C71C7;
          else
            v16 = v15;
          if (v16)
          {
            if (v16 > 0x1C71C71C71C71C7)
              sub_223174E94();
            v17 = (char *)operator new(144 * v16);
          }
          else
          {
            v17 = 0;
          }
          v37 = (uint64_t)&v17[144 * v14];
          v38 = &v17[144 * v16];
          sub_223EB22AC(v37, v8 + 8, v7, v12, v13);
          v18 = v37;
          v10 = v37 + 144;
          v19 = (char *)*a1;
          v20 = (char *)a1[1];
          if (v20 != (char *)*a1)
          {
            do
            {
              *(_QWORD *)(v18 - 144) = 0;
              *(_QWORD *)(v18 - 136) = 0;
              v18 -= 144;
              *(_QWORD *)(v18 + 16) = 0;
              v21 = *((_OWORD *)v20 - 9);
              v20 -= 144;
              *(_OWORD *)v18 = v21;
              *(_QWORD *)(v18 + 16) = *((_QWORD *)v20 + 2);
              *(_QWORD *)v20 = 0;
              *((_QWORD *)v20 + 1) = 0;
              *((_QWORD *)v20 + 2) = 0;
              *(_QWORD *)(v18 + 24) = 0;
              *(_QWORD *)(v18 + 32) = 0;
              *(_QWORD *)(v18 + 40) = 0;
              *(_OWORD *)(v18 + 24) = *(_OWORD *)(v20 + 24);
              *(_QWORD *)(v18 + 40) = *((_QWORD *)v20 + 5);
              *((_QWORD *)v20 + 3) = 0;
              *((_QWORD *)v20 + 4) = 0;
              *((_QWORD *)v20 + 5) = 0;
              *(_QWORD *)(v18 + 48) = 0;
              *(_QWORD *)(v18 + 56) = 0;
              *(_QWORD *)(v18 + 64) = 0;
              *(_OWORD *)(v18 + 48) = *((_OWORD *)v20 + 3);
              *(_QWORD *)(v18 + 64) = *((_QWORD *)v20 + 8);
              *((_QWORD *)v20 + 6) = 0;
              *((_QWORD *)v20 + 7) = 0;
              *((_QWORD *)v20 + 8) = 0;
              v22 = *((_QWORD *)v20 + 9);
              *(_DWORD *)(v18 + 80) = *((_DWORD *)v20 + 20);
              *(_QWORD *)(v18 + 72) = v22;
              v23 = *(_QWORD *)(v20 + 84);
              *(_DWORD *)(v18 + 92) = *((_DWORD *)v20 + 23);
              *(_QWORD *)(v18 + 84) = v23;
              v24 = *((_QWORD *)v20 + 12);
              *(_DWORD *)(v18 + 104) = *((_DWORD *)v20 + 26);
              *(_QWORD *)(v18 + 96) = v24;
              v25 = *(_OWORD *)(v20 + 108);
              v26 = *(_OWORD *)(v20 + 124);
              *(_DWORD *)(v18 + 140) = *((_DWORD *)v20 + 35);
              *(_OWORD *)(v18 + 124) = v26;
              *(_OWORD *)(v18 + 108) = v25;
            }
            while (v20 != v19);
            v20 = (char *)*a1;
            v27 = (char *)a1[1];
            *a1 = v18;
            a1[1] = v10;
            a1[2] = (uint64_t)v38;
            if (v27 != v20)
            {
              do
              {
                v28 = (void *)*((_QWORD *)v27 - 12);
                if (v28)
                {
                  *((_QWORD *)v27 - 11) = v28;
                  operator delete(v28);
                }
                v29 = *((_QWORD *)v27 - 15);
                if (v29)
                {
                  v30 = *((_QWORD *)v27 - 14);
                  v31 = (void *)*((_QWORD *)v27 - 15);
                  if (v30 != v29)
                  {
                    v32 = *((_QWORD *)v27 - 14);
                    do
                    {
                      v34 = *(void **)(v32 - 24);
                      v32 -= 24;
                      v33 = v34;
                      if (v34)
                      {
                        *(_QWORD *)(v30 - 16) = v33;
                        operator delete(v33);
                      }
                      v30 = v32;
                    }
                    while (v32 != v29);
                    v31 = (void *)*((_QWORD *)v27 - 15);
                  }
                  *((_QWORD *)v27 - 14) = v29;
                  operator delete(v31);
                }
                v35 = v27 - 144;
                v36 = (void *)*((_QWORD *)v27 - 18);
                if (v36)
                {
                  *((_QWORD *)v27 - 17) = v36;
                  operator delete(v36);
                }
                v27 -= 144;
              }
              while (v35 != v20);
            }
            if (!v20)
              goto LABEL_20;
LABEL_54:
            operator delete(v20);
            goto LABEL_20;
          }
          *a1 = v37;
          a1[1] = v10;
          a1[2] = (uint64_t)v38;
          if (v20)
            goto LABEL_54;
        }
LABEL_20:
        a1[1] = v10;
LABEL_21:
        v8 += 160;
      }
      while (v8 != v9);
    }
  }
}

void sub_223917810(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22391786C(v1);
  _Unwind_Resume(a1);
}

void sub_223917824(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1[1] = v2;
  sub_22391786C(v1);
  _Unwind_Resume(a1);
}

void sub_22391783C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t *v2;
  va_list va;

  va_start(va, a2);
  sub_2239360CC((void **)va);
  sub_22391786C(v2);
  _Unwind_Resume(a1);
}

void sub_223917858(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22391786C(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_22391786C(uint64_t *a1)
{
  if (*a1)
  {
    sub_2238891A0(a1);
    operator delete((void *)*a1);
  }
  return a1;
}

void sub_2239178A4(uint64_t a1, float32x2_t *a2, int32x4_t a3, int32x4_t a4, double a5, double a6, double a7, float32x2_t a8)
{
  float32x2_t v10;
  float32x2_t v11;
  float32x4_t v17;
  float32x4_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  std::mutex *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *p_shared_owners;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  std::mutex *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  int32x4_t v61;
  int32x4_t v62;
  float32x2_t v63;
  float32x4_t v64;
  __int128 v65;
  int8x16_t v66;
  int8x16_t v67;
  int32x4_t v68;
  float32x2_t v69;
  float32x2_t v70;
  float32x2_t v71;
  uint64_t *v72;
  uint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  uint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t *v92;
  unint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  std::string v97;
  __int128 v98;
  void *__p[2];
  char v100;
  char v101;
  void *v102;
  uint64_t v103;
  std::__shared_weak_count *v104;
  uint64_t v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  __int128 v108;
  int8x16_t v109;
  int32x4_t v110;
  float32x2_t v111;
  unsigned __int32 v112;
  int v113;
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  *(float32x2_t *)a3.i8 = a2[8];
  *(float32x2_t *)a4.i8 = a2[10];
  v10 = (float32x2_t)vzip1_s32(*(int32x2_t *)a3.i8, *(int32x2_t *)a4.i8);
  a3.i32[2] = a2[9].i32[0];
  a4.i32[2] = a2[11].i32[0];
  a8.i32[0] = a2[13].i32[0];
  a4.i64[0] = vtrn2q_s32(a3, a4).u64[0];
  a3.i32[3] = a4.i32[2];
  v11 = vmla_f32(vmul_f32(v10, 0), 0, (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)vdupq_lane_s32(*(int32x2_t *)a4.i8, 0), (int8x16_t)vdupq_lane_s32(*(int32x2_t *)a4.i8, 1), 0xCuLL));
  __asm { FMOV            V1.2S, #-1.0 }
  *(float32x2_t *)v17.f32 = vmla_f32(v11, _D1, (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a3, (int8x16_t)a3, 8uLL));
  *(float32x2_t *)&v17.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(a2[12], 0), 0, a2[12], 1), _D1, a8);
  v18 = vnegq_f32(v17);
  *(_DWORD *)(a1 + 8) = v18.i32[2];
  *(_QWORD *)a1 = v18.i64[0];
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v19 = sub_2241471F8();
    v20 = v19[2];
    if (!v20)
    {
      v21 = v19;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v20 = v21[2];
    }
    v22 = *(_QWORD *)(v20 + 64);
    v23 = (std::mutex *)(v22 + 32);
    std::mutex::lock((std::mutex *)(v22 + 32));
    v25 = *(_QWORD *)(v22 + 96);
    v24 = *(_QWORD *)(v22 + 104);
    std::mutex::unlock(v23);
    if (v25 != v24)
    {
      *(_QWORD *)&v108 = "cv3d.recon.";
      *((_QWORD *)&v108 + 1) = 11;
      v109.i64[0] = (uint64_t)"Stats.Occupancy.MeshingWorldUp";
      v109.i64[1] = 30;
      sub_2231A9820((uint64_t)&v108, (uint64_t)&v110, 0, 0, &v97);
      sub_2241471F8();
      v26 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v26 + 24))(v26))
      {
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v26 + 24))(v26))
        {
          *(_QWORD *)&v98 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v98 + 1) = 2;
          v27 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v26 + 24))(v26))
          {
            sub_223938204((uint64_t *)a1);
            LOBYTE(__p[0]) = 0;
            v101 = 0;
            sub_223937C0C((uint64_t)&v108, (__int128 *)__p, &v98, &v105);
            if (v101 && v100 < 0)
              operator delete(__p[0]);
            if (v109.i8[7] < 0)
              operator delete((void *)v108);
            v28 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 56))(v26);
            v29 = *v28;
            v30 = (std::__shared_weak_count *)v28[1];
            if (v30)
            {
              p_shared_owners = (unint64_t *)&v30->__shared_owners_;
              do
                v32 = __ldxr(p_shared_owners);
              while (__stxr(v32 + 1, p_shared_owners));
            }
            v34 = v106;
            v33 = v107;
            v102 = &off_24EC6A3B8;
            v103 = v106;
            v104 = v107;
            v106 = 0;
            v107 = 0;
            *(_QWORD *)&v108 = v29;
            *((_QWORD *)&v108 + 1) = v30;
            if (v30)
            {
              v35 = (unint64_t *)&v30->__shared_owners_;
              do
                v36 = __ldxr(v35);
              while (__stxr(v36 + 1, v35));
            }
            v109.i64[0] = (uint64_t)&off_24EC6A3B8;
            v109.i64[1] = v34;
            v110.i64[0] = (uint64_t)v33;
            if (v33)
            {
              v37 = (unint64_t *)&v33->__shared_owners_;
              do
                v38 = __ldxr(v37);
              while (__stxr(v38 + 1, v37));
            }
            (*(void (**)(uint64_t *, __int128 *))(*v27 + 16))(v27, &v108);
            v39 = (std::__shared_weak_count *)v110.i64[0];
            if (v110.i64[0])
            {
              v40 = (unint64_t *)(v110.i64[0] + 8);
              do
                v41 = __ldaxr(v40);
              while (__stlxr(v41 - 1, v40));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            v42 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
            if (*((_QWORD *)&v108 + 1))
            {
              v43 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
              do
                v44 = __ldaxr(v43);
              while (__stlxr(v44 - 1, v43));
              if (!v44)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            v45 = v104;
            if (v104)
            {
              v46 = (unint64_t *)&v104->__shared_owners_;
              do
                v47 = __ldaxr(v46);
              while (__stlxr(v47 - 1, v46));
              if (!v47)
              {
                ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
                std::__shared_weak_count::__release_weak(v45);
              }
            }
            if (v30)
            {
              v48 = (unint64_t *)&v30->__shared_owners_;
              do
                v49 = __ldaxr(v48);
              while (__stlxr(v49 - 1, v48));
              if (!v49)
              {
                ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
                std::__shared_weak_count::__release_weak(v30);
              }
            }
            v50 = v107;
            if (v107)
            {
              v51 = (unint64_t *)&v107->__shared_owners_;
              do
                v52 = __ldaxr(v51);
              while (__stlxr(v52 - 1, v51));
              if (!v52)
              {
                ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
                std::__shared_weak_count::__release_weak(v50);
              }
            }
          }
        }
        kdebug_trace();
      }
      if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v97.__r_.__value_.__l.__data_);
    }
  }
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v53 = sub_2241471F8();
    v54 = v53[2];
    if (!v54)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v54 = v53[2];
    }
    v55 = *(_QWORD *)(v54 + 64);
    v56 = (std::mutex *)(v55 + 32);
    std::mutex::lock((std::mutex *)(v55 + 32));
    v58 = *(_QWORD *)(v55 + 96);
    v57 = *(_QWORD *)(v55 + 104);
    std::mutex::unlock(v56);
    if (v58 != v57)
    {
      *(_QWORD *)&v108 = "cv3d.recon.";
      *((_QWORD *)&v108 + 1) = 11;
      v109.i64[0] = (uint64_t)"Stats.Occupancy.VisionWorldToUserWorld";
      v109.i64[1] = 38;
      sub_2231A9820((uint64_t)&v108, (uint64_t)&v110, 0, 0, &v97);
      sub_2241471F8();
      v59 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v59 + 24))(v59))
      {
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v59 + 24))(v59))
        {
          *(_QWORD *)&v98 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v98 + 1) = 2;
          v60 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v59 + 24))(v59))
          {
            *(float32x2_t *)v61.i8 = *a2;
            v61.i32[2] = a2[1].i32[0];
            *(float32x2_t *)v62.i8 = a2[2];
            v62.i32[2] = a2[3].i32[0];
            v63.i32[0] = a2[5].i32[0];
            *(float32x2_t *)v64.f32 = a2[6];
            v64.i32[2] = a2[7].i32[0];
            *(_QWORD *)&v65 = vzip1q_s32(v61, v62).u64[0];
            v66 = (int8x16_t)vnegq_f32(v64);
            v67 = (int8x16_t)vtrn2q_s32(v61, v62);
            v67.i32[2] = HIDWORD(*(_QWORD *)&a2[4]);
            v68 = vzip2q_s32(v61, v62);
            v69 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v65, *(float *)v66.i32), *(float32x2_t *)v67.i8, *(float32x2_t *)v64.f32, 1), *(float32x2_t *)v68.i8, v64, 2);
            v68.i32[2] = v63.i32[0];
            v70 = vmls_lane_f32(vmul_f32(a2[4], *(float32x2_t *)v66.i8), (float32x2_t)vdup_lane_s32((int32x2_t)a2[4], 1), *(float32x2_t *)v64.f32, 1);
            v71 = (float32x2_t)vextq_s8(v66, v66, 8uLL).u64[0];
            *((_QWORD *)&v65 + 1) = *(_QWORD *)&a2[4];
            v66.i32[3] = 0;
            v66.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v67, 0).i32[3];
            *(uint64_t *)((char *)v66.i64 + 4) = vextq_s8(v67, (int8x16_t)v68, 4uLL).u64[0];
            v68.i64[1] = vdupq_laneq_s32(v68, 2).u32[0];
            v109 = v66;
            v110 = v68;
            v108 = v65;
            v111 = v69;
            v112 = vmla_f32(v70, v71, v63).u32[0];
            v113 = 1065353216;
            sub_2238C5614(&v108);
            LOBYTE(__p[0]) = 0;
            v101 = 0;
            sub_223937C0C((uint64_t)&v102, (__int128 *)__p, &v98, &v105);
            if (v101 && v100 < 0)
              operator delete(__p[0]);
            if (SHIBYTE(v104) < 0)
              operator delete(v102);
            v72 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 56))(v59);
            v73 = *v72;
            v74 = (std::__shared_weak_count *)v72[1];
            if (v74)
            {
              v75 = (unint64_t *)&v74->__shared_owners_;
              do
                v76 = __ldxr(v75);
              while (__stxr(v76 + 1, v75));
            }
            v78 = v106;
            v77 = v107;
            v102 = &off_24EC6A3B8;
            v103 = v106;
            v104 = v107;
            v106 = 0;
            v107 = 0;
            *(_QWORD *)&v108 = v73;
            *((_QWORD *)&v108 + 1) = v74;
            if (v74)
            {
              v79 = (unint64_t *)&v74->__shared_owners_;
              do
                v80 = __ldxr(v79);
              while (__stxr(v80 + 1, v79));
            }
            v109.i64[0] = (uint64_t)&off_24EC6A3B8;
            v109.i64[1] = v78;
            v110.i64[0] = (uint64_t)v77;
            if (v77)
            {
              v81 = (unint64_t *)&v77->__shared_owners_;
              do
                v82 = __ldxr(v81);
              while (__stxr(v82 + 1, v81));
            }
            (*(void (**)(uint64_t *, __int128 *))(*v60 + 16))(v60, &v108);
            v83 = (std::__shared_weak_count *)v110.i64[0];
            if (v110.i64[0])
            {
              v84 = (unint64_t *)(v110.i64[0] + 8);
              do
                v85 = __ldaxr(v84);
              while (__stlxr(v85 - 1, v84));
              if (!v85)
              {
                ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
                std::__shared_weak_count::__release_weak(v83);
              }
            }
            v86 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
            if (*((_QWORD *)&v108 + 1))
            {
              v87 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
              do
                v88 = __ldaxr(v87);
              while (__stlxr(v88 - 1, v87));
              if (!v88)
              {
                ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                std::__shared_weak_count::__release_weak(v86);
              }
            }
            v89 = v104;
            if (v104)
            {
              v90 = (unint64_t *)&v104->__shared_owners_;
              do
                v91 = __ldaxr(v90);
              while (__stlxr(v91 - 1, v90));
              if (!v91)
              {
                ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
                std::__shared_weak_count::__release_weak(v89);
              }
            }
            if (v74)
            {
              v92 = (unint64_t *)&v74->__shared_owners_;
              do
                v93 = __ldaxr(v92);
              while (__stlxr(v93 - 1, v92));
              if (!v93)
              {
                ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
                std::__shared_weak_count::__release_weak(v74);
              }
            }
            v94 = v107;
            if (v107)
            {
              v95 = (unint64_t *)&v107->__shared_owners_;
              do
                v96 = __ldaxr(v95);
              while (__stlxr(v96 - 1, v95));
              if (!v96)
              {
                ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
                std::__shared_weak_count::__release_weak(v94);
              }
            }
          }
        }
        kdebug_trace();
      }
      if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v97.__r_.__value_.__l.__data_);
    }
  }
}

void sub_2239181D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36)
{
  std::__shared_weak_count *v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;

  sub_2241231D8(v37);
  v40 = *(std::__shared_weak_count **)(v38 - 128);
  if (v40)
  {
    p_shared_owners = (unint64_t *)&v40->__shared_owners_;
    do
      v42 = __ldaxr(p_shared_owners);
    while (__stlxr(v42 - 1, p_shared_owners));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  sub_2241231D8((uint64_t)&a30);
  if (v36)
  {
    v43 = (unint64_t *)&v36->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  sub_2241231D8((uint64_t)&a36);
  sub_2231874DC((uint64_t)&a9);
  if (a20 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_223918394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  BOOL v6;
  BOOL v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD *v25;
  double v26;
  double v27;
  double v28;
  float32x2_t v29;
  float v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  float32x2_t v45;
  __int32 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &off_24EC5CE00;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 88);
  v4 = a1 + 16;
  memcpy((void *)(a1 + 16), (const void *)(a2 + 280), 0x118uLL);
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 92);
  v5 = *(unsigned __int8 *)(a2 + 880);
  v6 = 0;
  if (*(_BYTE *)(a1 + 287) && *(_BYTE *)(a2 + 880) && *(_BYTE *)(a2 + 816))
  {
    v6 = *(_BYTE *)(a2 + 828) != 0;
    v5 = 1;
  }
  v7 = 0;
  v8 = (uint64_t *)(a1 + 40560);
  *(_BYTE *)(a1 + 297) = v6;
  if (v5 && *(_BYTE *)(a2 + 816) && *(_BYTE *)(a2 + 828))
    v7 = *(_BYTE *)(a1 + 288) != 0;
  *(_BYTE *)(a1 + 298) = v7;
  sub_223CF713C(a1 + 304, (float)((float)(*(float *)(a1 + 216) + *(float *)(a1 + 216)) / 3.6864) << 8, 8u, 0.03);
  v9 = 0;
  *(_BYTE *)(a1 + 2888) = 0;
  *(_QWORD *)(a1 + 2896) = 0;
  *(_QWORD *)(a1 + 2912) = 0;
  *(_QWORD *)(a1 + 2904) = 0;
  *(_DWORD *)(a1 + 2920) = 0;
  *(_QWORD *)(a1 + 3000) = 0;
  *(_OWORD *)(a1 + 2928) = 0u;
  *(_OWORD *)(a1 + 2944) = 0u;
  v10 = 144;
  *(_OWORD *)(a1 + 2960) = 0u;
  *(_OWORD *)(a1 + 2969) = 0u;
  do
  {
    v11 = a1 + v9;
    *(_QWORD *)(v11 + 3056) = 0;
    *(_DWORD *)(v11 + 3064) = 0;
    *(_QWORD *)(v11 + 3072) = 0;
    *(_DWORD *)(v11 + 3080) = 0;
    *(_DWORD *)(v11 + 3084) = 0xFFFF;
    *(_BYTE *)(v11 + 3088) = 0;
    v12 = a1 + v9 + 3092;
    *(_QWORD *)(v11 + 3120) = 0;
    *(_DWORD *)(v11 + 3128) = 0;
    *(_QWORD *)v12 = 0;
    *(_OWORD *)(v12 + 8) = 0uLL;
    *(_DWORD *)(v11 + 3132) = 0xFFFF;
    *(_BYTE *)(v11 + 3136) = 0;
    v13 = a1 + v9 + 3140;
    *(_QWORD *)(v11 + 3168) = 0;
    *(_DWORD *)(v11 + 3176) = 0;
    *(_QWORD *)v13 = 0;
    *(_OWORD *)(v13 + 8) = 0uLL;
    *(_DWORD *)(v11 + 3180) = 0xFFFF;
    *(_BYTE *)(v11 + 3184) = 0;
    v14 = a1 + v9 + 3188;
    *(_QWORD *)(v11 + 3216) = 0;
    *(_DWORD *)(v11 + 3224) = 0;
    *(_QWORD *)(v14 + 16) = 0;
    *(_OWORD *)v14 = 0uLL;
    *(_DWORD *)(v11 + 3228) = 0xFFFF;
    *(_BYTE *)(v11 + 3232) = 0;
    *(_QWORD *)(a1 + v9 + 3236) = 0;
    v9 += 192;
    *(_DWORD *)(v11 + 3244) = 0;
    --v10;
  }
  while (v10);
  v15 = -4608;
  do
  {
    v16 = a1 + 30736 + v15;
    *(_QWORD *)(v16 + 4576) = 0;
    *(_QWORD *)(v16 + 4608) = 0;
    *(_DWORD *)(v16 + 4584) = 0;
    *(_DWORD *)(v16 + 4616) = 0;
    v15 += 64;
  }
  while (v15);
  v17 = -4608;
  do
  {
    v18 = a1 + 35344 + v17;
    *(_QWORD *)(v18 + 4576) = 0;
    *(_QWORD *)(v18 + 4608) = 0;
    *(_DWORD *)(v18 + 4584) = 0;
    *(_DWORD *)(v18 + 4616) = 0;
    v17 += 64;
  }
  while (v17);
  *(_OWORD *)(a1 + 39936) = 0u;
  *(_OWORD *)(a1 + 39920) = 0u;
  *(_DWORD *)(a1 + 39952) = 1065353216;
  *(_OWORD *)(a1 + 39960) = 0u;
  *(_OWORD *)(a1 + 39976) = 0u;
  *(_DWORD *)(a1 + 39992) = 1065353216;
  *(_WORD *)(a1 + 40000) = 0;
  sub_22351A5C4(a1 + 40008, 1638826033);
  *(_QWORD *)(a1 + 40120) = 0;
  *(_OWORD *)(a1 + 40072) = 0u;
  *(_OWORD *)(a1 + 40088) = 0u;
  *(_QWORD *)(a1 + 40112) = a1 + 40120;
  *(_DWORD *)(a1 + 40104) = 1065353216;
  *(_QWORD *)(a1 + 40128) = 0;
  *(_QWORD *)(a1 + 40136) = 0x8000000080000000;
  *(_DWORD *)(a1 + 40144) = 0x7FFFFFFF;
  v19 = *(_OWORD *)(a2 + 144);
  v20 = *(_OWORD *)(a2 + 160);
  v21 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 40196) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 40180) = v21;
  *(_OWORD *)(a1 + 40164) = v20;
  *(_OWORD *)(a1 + 40148) = v19;
  v22 = *(_OWORD *)(a2 + 208);
  v23 = *(_OWORD *)(a2 + 224);
  v24 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 40244) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 40260) = v24;
  *(_OWORD *)(a1 + 40212) = v22;
  *(_OWORD *)(a1 + 40228) = v23;
  v25 = (_QWORD *)operator new();
  *v25 = &off_24EC65BF8;
  v25[1] = &off_24EC5D028;
  v25[4] = v25 + 1;
  v25[5] = &off_24EC5D0B8;
  v25[2] = a1;
  v25[8] = v25 + 5;
  v25[6] = a1;
  v25[9] = &off_24EC5D148;
  v25[12] = v25 + 9;
  v25[10] = a1;
  *(_QWORD *)(a1 + 40280) = v25;
  sub_22391991C((_QWORD *)(a1 + 40288), a1);
  *(_OWORD *)(a1 + 40496) = xmmword_224655854;
  *(_OWORD *)(a1 + 40512) = *(_OWORD *)algn_224655864;
  *(_OWORD *)(a1 + 40528) = xmmword_224655874;
  *(_BYTE *)(a1 + 40296) = 0;
  *(_BYTE *)(a1 + 40376) = 0;
  *(_BYTE *)(a1 + 40384) = 0;
  *(_BYTE *)(a1 + 40464) = 0;
  *(_BYTE *)(a1 + 40472) = 0;
  *(_DWORD *)(a1 + 40476) = 1065353216;
  *(_QWORD *)(a1 + 40480) = 0;
  *(_QWORD *)(a1 + 40488) = 0;
  *(int32x4_t *)(a1 + 40544) = xmmword_224655884[0];
  sub_2239178A4(a1 + 40560, (float32x2_t *)(a1 + 40148), (int32x4_t)xmmword_224655874, xmmword_224655884[0], v26, v27, v28, v29);
  v30 = *(float *)(a1 + 448);
  v31 = *(unsigned __int8 *)(a1 + 161);
  v32 = operator new();
  *(_BYTE *)v32 = v31 > 5;
  v33 = operator new();
  v34.i64[0] = *v8;
  v34.i32[2] = *(_DWORD *)(a1 + 40568);
  v35 = vnegq_f32(v34);
  v46 = v35.i32[2];
  v45 = *(float32x2_t *)v35.f32;
  sub_2239AF698(v33, 1, &v45, v30);
  *(_QWORD *)(v32 + 8) = v33;
  *(_BYTE *)(v32 + 16) = 0;
  *(_BYTE *)(v32 + 40) = 0;
  *(_BYTE *)(v32 + 48) = 0;
  *(_BYTE *)(v32 + 56) = 0;
  *(_QWORD *)(v32 + 64) = 0xFFFFFFFFLL;
  *(_QWORD *)(v32 + 72) = 0;
  *(_QWORD *)(a1 + 40576) = v32;
  v36.i64[0] = *v8;
  v36.i32[2] = *(_DWORD *)(a1 + 40568);
  v37 = vabsq_f32(v36);
  v38 = v37.f32[1];
  v39 = v37.f32[1] > v37.f32[0];
  if (v37.f32[1] <= v37.f32[0])
    v38 = v37.f32[0];
  if (v38 < v37.f32[2])
    v39 = 2;
  if (v39 == 1)
  {
    if (v36.f32[1] < 0.0)
      v40 = 2;
    else
      v40 = 3;
  }
  else if (v39)
  {
    if (*((float *)v8 + v39) < 0.0)
      v40 = 4;
    else
      v40 = 5;
  }
  else
  {
    v40 = v36.f32[0] >= 0.0;
  }
  v41 = operator new();
  sub_223CC8F38(v41, v40, *(unsigned __int8 *)(a1 + 286));
  *(_QWORD *)(a1 + 40584) = v41;
  v42 = (_QWORD *)operator new();
  *v42 = &off_24EC5D238;
  v42[1] = 0;
  v43 = operator new();
  sub_223985894(v43, v4);
  v44 = v42[1];
  v42[1] = v43;
  if (v44)
    (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
  *(_QWORD *)(a1 + 40592) = v42;
  *(_BYTE *)(a1 + 40600) = 0;
  *(_BYTE *)(a1 + 40608) = 0;
  *(_WORD *)(a1 + 40616) = 0;
  *(_BYTE *)(a1 + 40618) = 0;
  *(_OWORD *)(a1 + 40624) = 0u;
  *(_OWORD *)(a1 + 40640) = 0u;
  *(_DWORD *)(a1 + 40656) = 1065353216;
  *(_OWORD *)(a1 + 40664) = 0u;
  *(_OWORD *)(a1 + 40680) = 0u;
  *(_DWORD *)(a1 + 40696) = 1065353216;
  __asm { BR              X10 }
}

uint64_t sub_22391898C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v10;
  _QWORD *v11;
  int v12;
  unint64_t v13;
  size_t v14;
  const char *v15;
  unsigned __int8 v16;
  const char *v17;
  size_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  NSObject *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  size_t v28;
  std::__shared_weak_count_vtbl *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  int v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  unint64_t v70;
  char *v71;
  float v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  int v89;
  const char *v90;
  unint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  int *v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t *v98;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v100;
  int v101;
  const char *v102;
  int v103;
  const char *v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v7 = (_QWORD *)operator new();
  *v7 = &off_24EC5CD50;
  v7[1] = 0;
  *(_QWORD *)(v1 + 144) = v7;
  v8 = (_QWORD *)operator new();
  sub_223A8F27C(v8, 0, -0.4, 0.4);
  *(_QWORD *)(v1 + 152) = v8;
  *(_QWORD *)(v0 + 40728) = 0;
  *(_QWORD *)(v0 + 40736) = 0;
  *(_QWORD *)(v0 + 40720) = 0;
  v9 = operator new(0x198uLL);
  v97 = (uint64_t *)(v1 + 184);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = &off_24EC1F0A0;
  *(_QWORD *)(v1 + 184) = sub_2241498F4((uint64_t)(v9 + 3), 0);
  *(_QWORD *)(v1 + 192) = v9;
  *(_DWORD *)(v1 + 200) = 4;
  HIDWORD(v10) = 0;
  *(_OWORD *)(v0 + 40768) = 0u;
  *(_OWORD *)(v0 + 40784) = 0u;
  *(_BYTE *)(v0 + 40800) = 0;
  *(_BYTE *)(v1 + 241) = 1;
  *(_OWORD *)(v0 + 40888) = 0u;
  *(_OWORD *)(v0 + 40904) = 0u;
  *(_OWORD *)(v0 + 40856) = 0u;
  *(_OWORD *)(v0 + 40872) = 0u;
  *(_OWORD *)(v0 + 40808) = 0u;
  *(_OWORD *)(v0 + 40824) = 0u;
  *(_OWORD *)(v0 + 40840) = 0u;
  *(_DWORD *)v2 = 1065353216;
  *(_DWORD *)(v2 + 20) = 1065353216;
  *(_DWORD *)(v2 + 40) = 1065353216;
  *(_DWORD *)(v2 + 60) = 1065353216;
  *(_QWORD *)&v10 = *(_QWORD *)(v4 + 196);
  DWORD2(v10) = *(_DWORD *)(v4 + 204);
  v94 = v10;
  *(_BYTE *)(v2 + 64) = 0;
  *(_QWORD *)&v10 = *(_QWORD *)(v4 + 212);
  DWORD2(v10) = *(_DWORD *)(v4 + 220);
  v93 = v10;
  *(_BYTE *)(v2 + 80) = 0;
  *(_QWORD *)&v10 = *(_QWORD *)(v4 + 228);
  DWORD2(v10) = *(_DWORD *)(v4 + 236);
  v92 = v10;
  sub_223919B38(&v107);
  v11 = v96;
  if (**(int **)(v107 + 56) > 3)
    goto LABEL_89;
  v12 = *(unsigned __int8 *)(v107 + 72);
  v13 = sub_22322F254(v107, "OSLogSurrogateAppender", 1, 0);
  if (!v12 && !v13)
    goto LABEL_89;
  v91 = v13;
  v98 = &v107;
  rep = std::chrono::steady_clock::now().__d_.__rep_;
  v100 = std::chrono::system_clock::now().__d_.__rep_;
  v101 = 3;
  v102 = "unknown file";
  v103 = 261;
  v105 = 0;
  v106 = 0;
  v104 = "unknown function";
  if (*(char *)(v107 + 39) < 0)
  {
    v15 = *(const char **)(v107 + 16);
    v14 = *(_QWORD *)(v107 + 24);
  }
  else
  {
    v14 = *(unsigned __int8 *)(v107 + 39);
    v15 = (const char *)(*v98 + 16);
  }
  v87 = *v98 + 16;
  v88 = v107;
  v89 = v12;
  v16 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628(v6 - 256);
    sub_223199C58("com.apple.cv3d", v6 - 256, &xmmword_255788F40);
    if (*(_BYTE *)(v6 - 232) && *(char *)(v6 - 233) < 0)
      operator delete(*(void **)(v6 - 256));
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F57 >= 0)
    v17 = (const char *)&xmmword_255788F40;
  else
    v17 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v18 = byte_255788F57;
  else
    v18 = *((_QWORD *)&xmmword_255788F40 + 1);
  v90 = v15;
  *(_QWORD *)(v6 - 256) = os_log_create(v17, v15);
  v19 = (void *)(v6 - 248);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v18 >= 0x17)
  {
    v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v20 = v18 | 7;
    v21 = v20 + 1;
    v19 = operator new(v20 + 1);
    *(_QWORD *)(v6 - 240) = v18;
    *(_QWORD *)(v6 - 232) = v21 | 0x8000000000000000;
    *(_QWORD *)(v6 - 248) = v19;
    goto LABEL_21;
  }
  *(_BYTE *)(v6 - 225) = v18;
  if (v18)
LABEL_21:
    memmove(v19, v17, v18);
  *((_BYTE *)v19 + v18) = 0;
  *(_BYTE *)(v6 - 224) = 1;
  v22 = (_BYTE *)(v6 - 216);
  if (v14 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v14 >= 0x17)
  {
    v25 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v25 = v14 | 7;
    v26 = v25 + 1;
    v22 = operator new(v25 + 1);
    *(_QWORD *)(v6 - 208) = v14;
    *(_QWORD *)(v6 - 200) = v26 | 0x8000000000000000;
    *(_QWORD *)(v6 - 216) = v22;
  }
  else
  {
    *(_BYTE *)(v6 - 193) = v14;
    if (!v14)
    {
      *v22 = 0;
      *(_BYTE *)(v6 - 192) = 1;
      v23 = *(NSObject **)(v6 - 256);
      if ((*(char *)(v6 - 193) & 0x80000000) == 0)
        goto LABEL_26;
      goto LABEL_32;
    }
  }
  memmove(v22, v90, v14);
  v22[v14] = 0;
  *(_BYTE *)(v6 - 192) = 1;
  v23 = *(NSObject **)(v6 - 256);
  if ((*(char *)(v6 - 193) & 0x80000000) == 0)
  {
LABEL_26:
    v11 = v96;
    v24 = v91;
    if (!*(_BYTE *)(v6 - 224))
      goto LABEL_35;
LABEL_33:
    if (*(char *)(v6 - 225) < 0)
      operator delete(*(void **)(v6 - 248));
    goto LABEL_35;
  }
LABEL_32:
  operator delete(*(void **)(v6 - 216));
  v11 = v96;
  v24 = v91;
  if (*(_BYTE *)(v6 - 224))
    goto LABEL_33;
LABEL_35:
  v27 = *(void **)(v6 - 256);
  if (v27)
    os_release(v27);
  if (v24 && *(_QWORD *)(v24 + 24))
  {
    v28 = _os_log_pack_size();
    v29 = (std::__shared_weak_count_vtbl *)operator new(v28, (std::align_val_t)8uLL);
    v30 = (std::__shared_weak_count *)operator new();
    v31 = v30;
    v30->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v30->__shared_owners_;
    v30->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v30->__shared_weak_owners_ = 0;
    v30[1].__vftable = v29;
    *(_QWORD *)(v6 - 256) = v29;
    *(_QWORD *)(v6 - 248) = v29;
    *(_QWORD *)(v6 - 240) = v30;
    do
      v33 = __ldxr(p_shared_owners);
    while (__stxr(v33 + 1, p_shared_owners));
    *(_QWORD *)(v6 - 232) = 0;
    *(_QWORD *)(v6 - 224) = 0;
    *(_QWORD *)(v6 - 216) = 0;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v31);
    }
    v35 = *(_QWORD *)(v6 - 256);
    v36 = _os_log_pack_fill();
    *(_DWORD *)v36 = 134220032;
    *(double *)(v36 + 4) = *(float *)&v94;
    *(_WORD *)(v36 + 12) = 2048;
    *(double *)(v36 + 14) = *((float *)&v94 + 1);
    *(_WORD *)(v36 + 22) = 2048;
    *(double *)(v36 + 24) = *((float *)&v94 + 2);
    *(_WORD *)(v36 + 32) = 2048;
    *(double *)(v36 + 34) = *(float *)&v93;
    *(_WORD *)(v36 + 42) = 2048;
    *(double *)(v36 + 44) = *((float *)&v93 + 1);
    *(_WORD *)(v36 + 52) = 2048;
    *(double *)(v36 + 54) = *((float *)&v93 + 2);
    *(_WORD *)(v36 + 62) = 2048;
    *(double *)(v36 + 64) = *(float *)&v92;
    *(_WORD *)(v36 + 72) = 2048;
    *(double *)(v36 + 74) = *((float *)&v92 + 1);
    *(_WORD *)(v36 + 82) = 2048;
    *(double *)(v36 + 84) = *((float *)&v92 + 2);
    v37 = operator new();
    v38 = *(unsigned __int8 *)(v88 + 39);
    v39 = v87;
    if ((v38 & 0x80u) != 0)
    {
      v39 = *(_QWORD *)(v88 + 16);
      v38 = *(_QWORD *)(v88 + 24);
    }
    *(_QWORD *)v37 = v35;
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v6 - 248);
    *(_QWORD *)(v6 - 248) = 0;
    *(_QWORD *)(v6 - 240) = 0;
    *(_OWORD *)(v37 + 24) = *(_OWORD *)(v6 - 232);
    *(_QWORD *)(v6 - 232) = 0;
    *(_QWORD *)(v6 - 224) = 0;
    *(_QWORD *)(v37 + 40) = v39;
    *(_QWORD *)(v37 + 48) = v38;
    *(_BYTE *)(v37 + 56) = 1;
    v108 = 0;
    v109 = v37;
    (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v91 + 24) + 40))(*(_QWORD *)(v91 + 24), &v109);
    v40 = v109;
    v109 = 0;
    v11 = v96;
    if (v40)
    {
      v41 = *(std::__shared_weak_count **)(v40 + 32);
      if (v41)
      {
        v42 = (unint64_t *)&v41->__shared_owners_;
        do
          v43 = __ldaxr(v42);
        while (__stlxr(v43 - 1, v42));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
          std::__shared_weak_count::__release_weak(v41);
        }
      }
      v44 = *(std::__shared_weak_count **)(v40 + 16);
      if (v44)
      {
        v45 = (unint64_t *)&v44->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
      MEMORY[0x227684CE8](v40, 0x10F0C40B62ED6C6);
      v47 = v108;
      v108 = 0;
      if (v47)
      {
        v48 = *(std::__shared_weak_count **)(v47 + 32);
        if (v48)
        {
          v49 = (unint64_t *)&v48->__shared_owners_;
          do
            v50 = __ldaxr(v49);
          while (__stlxr(v50 - 1, v49));
          if (!v50)
          {
            ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
            std::__shared_weak_count::__release_weak(v48);
          }
        }
        v51 = *(std::__shared_weak_count **)(v47 + 16);
        if (v51)
        {
          v52 = (unint64_t *)&v51->__shared_owners_;
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
        MEMORY[0x227684CE8](v47, 0x10F0C40B62ED6C6);
      }
    }
    v54 = *(std::__shared_weak_count **)(v6 - 224);
    v55 = v89;
    if (v54)
    {
      v56 = (unint64_t *)&v54->__shared_owners_;
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
        std::__shared_weak_count::__release_weak(v54);
      }
    }
    v58 = *(std::__shared_weak_count **)(v6 - 240);
    if (v58)
    {
      v59 = (unint64_t *)&v58->__shared_owners_;
      do
        v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
  }
  else
  {
    os_log_type_enabled(v23, OS_LOG_TYPE_INFO);
    *(_DWORD *)(v6 - 256) = 134220032;
    *(double *)(v6 - 252) = *(float *)&v94;
    *(_WORD *)(v6 - 244) = 2048;
    *(double *)(v6 - 242) = *((float *)&v94 + 1);
    *(_WORD *)(v6 - 234) = 2048;
    *(double *)(v6 - 232) = *((float *)&v94 + 2);
    *(_WORD *)(v6 - 224) = 2048;
    v61 = v6 - 256;
    *(double *)(v61 + 34) = *(float *)&v93;
    *(_WORD *)(v6 - 214) = 2048;
    *(double *)(v61 + 44) = *((float *)&v93 + 1);
    *(_WORD *)(v6 - 204) = 2048;
    *(double *)(v61 + 54) = *((float *)&v93 + 2);
    *(_WORD *)(v6 - 194) = 2048;
    *(double *)(v6 - 192) = *(float *)&v92;
    *(_WORD *)(v6 - 184) = 2048;
    *(double *)(v61 + 74) = *((float *)&v92 + 1);
    *(_WORD *)(v6 - 174) = 2048;
    *(double *)(v61 + 84) = *((float *)&v92 + 2);
    v62 = (void *)_os_log_send_and_compose_impl();
    v55 = v89;
    if (v62)
      free(v62);
  }
  if (v55)
  {
    sub_22322C138((uint64_t)&v98, "OCP:Initializing,VWTUW:%f,%f,%f,%f,%f,%f,%f,%f,%f", *(float *)&v94, *((float *)&v94 + 1), *((float *)&v94 + 2), *(float *)&v93, *((float *)&v93 + 1), *((float *)&v93 + 2), *(float *)&v92, *((float *)&v92 + 1), *((float *)&v92 + 2));
    sub_223182C08((uint64_t)&v98);
  }
  sub_223182C08((uint64_t)&v98);
  v63 = v106;
  if (v106)
  {
    v64 = (unint64_t *)&v106->__shared_owners_;
    do
      v65 = __ldaxr(v64);
    while (__stlxr(v65 - 1, v64));
    if (!v65)
    {
      ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
      std::__shared_weak_count::__release_weak(v63);
    }
  }
LABEL_89:
  v98 = 0;
  LODWORD(rep) = 0;
  *(_QWORD *)(v6 - 256) = sub_223919C2C(v11, (int *)&v98);
  *(_QWORD *)(v6 - 248) = v66;
  v67 = *(_QWORD *)(v1 + 168);
  if (v67 >= *(_QWORD *)(v1 + 176))
  {
    v71 = sub_22347343C((char **)(v0 + 40720), (_OWORD *)(v6 - 256), v97);
  }
  else
  {
    *(_OWORD *)v67 = *(_OWORD *)(v6 - 256);
    *(_QWORD *)(v67 + 16) = *(_QWORD *)(v1 + 184);
    v68 = *(_QWORD *)(v1 + 192);
    *(_QWORD *)(v67 + 24) = v68;
    if (v68)
    {
      v69 = (unint64_t *)(v68 + 8);
      do
        v70 = __ldxr(v69);
      while (__stxr(v70 + 1, v69));
    }
    *(_BYTE *)(v67 + 32) = 0;
    *(_BYTE *)(v67 + 96) = 0;
    *(_BYTE *)(v67 + 100) = 0;
    v71 = (char *)(v67 + 120);
    *(_BYTE *)(v67 + 116) = 0;
  }
  *(_QWORD *)(v1 + 168) = v71;
  sub_223919C2C(v11, v95);
  if (*(_BYTE *)(v0 + 200))
  {
    v72 = ceilf((float)((float)(*(float *)(v0 + 204) + *(float *)(v0 + 204)) / 0.24) + 0.001);
    v73 = (float)((float)((float)(v72 + 1.0) * (float)(v72 + 1.0))
                              * (float)(ceilf((float)((float)(*(float *)(v0 + 208) + *(float *)(v0 + 212)) / 0.24) + 0.001)
                                      + 1.0));
    v74 = *(void **)(v0 + 2896);
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v0 + 2912) - (_QWORD)v74) >> 3) < v73)
    {
      v75 = *(_QWORD *)(v0 + 2904);
      v76 = (char *)operator new(24 * v73);
      v77 = &v76[v75 - (_QWORD)v74];
      v78 = v77;
      if ((void *)v75 != v74)
      {
        v78 = &v76[v75 - (_QWORD)v74];
        do
        {
          v79 = *(_QWORD *)(v75 - 24);
          v75 -= 24;
          v80 = *(_DWORD *)(v75 + 8);
          *((_QWORD *)v78 - 3) = v79;
          v78 -= 24;
          *((_DWORD *)v78 + 2) = v80;
          v81 = *(_QWORD *)(v75 + 12);
          *((_DWORD *)v78 + 5) = *(_DWORD *)(v75 + 20);
          *(_QWORD *)(v78 + 12) = v81;
        }
        while ((void *)v75 != v74);
      }
      *(_QWORD *)(v0 + 2896) = v78;
      *(_QWORD *)(v0 + 2904) = v77;
      *(_QWORD *)(v0 + 2912) = &v76[24 * v73];
      if (v74)
        operator delete(v74);
    }
  }
  sub_22339E3C8(*v97, 0x240uLL);
  v82 = -4608;
  do
  {
    v83 = v5 + v82;
    *(_OWORD *)(v83 + 4608) = 0uLL;
    *(_QWORD *)(v5 + v82 + 4621) = 0;
    *(_QWORD *)(v83 + 4632) = 0;
    v82 += 32;
  }
  while (v82);
  v84 = -4608;
  do
  {
    v85 = v3 + v84;
    *(_OWORD *)(v85 + 4608) = 0uLL;
    *(_QWORD *)(v3 + v84 + 4621) = 0;
    *(_QWORD *)(v85 + 4632) = 0;
    v84 += 32;
  }
  while (v84);
  return v0;
}

void sub_2239195D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t *a26,_QWORD **a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void **a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  if (*(_BYTE *)(v48 - 232) && *(char *)(v48 - 233) < 0)
    operator delete(*(void **)(v48 - 256));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a45);
  sub_22386E26C(a24);
  sub_223167354(v45 + 40784);
  sub_223167354(a44);
  sub_223295868(a32);
  v50 = v46[19];
  v46[19] = 0;
  if (v50)
    (*(void (**)(uint64_t))(*(_QWORD *)v50 + 8))(v50);
  v51 = v46[18];
  v46[18] = 0;
  if (v51)
    (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  sub_22322E828(a25);
  sub_22322E828(a23);
  v52 = v46[4];
  v46[4] = 0;
  if (v52)
    (*(void (**)(uint64_t))(*(_QWORD *)v52 + 8))(v52);
  sub_223919D14(v46 + 3);
  sub_223919D98(v46 + 2);
  sub_2232559C8(a41);
  v53 = *a26;
  *a26 = 0;
  if (v53)
    (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  v54 = *(_QWORD *)(v47 + 328);
  *(_QWORD *)(v47 + 328) = 0;
  if (v54)
    (*(void (**)(uint64_t))(*(_QWORD *)v54 + 8))(v54);
  sub_223198030(a42, *a27);
  sub_223919E54(a28);
  sub_223515074(a43);
  sub_223530D14(a29);
  sub_223530D14(v45 + 39920);
  sub_223919EBC(a30);
  sub_223CF7630(a31);
  _Unwind_Resume(a1);
}

_QWORD *sub_22391991C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  _QWORD v12[3];
  _QWORD *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v10[0] = &off_24EC5CF98;
  v10[1] = a2;
  v11 = v10;
  v3 = (_QWORD *)operator new();
  v4 = v11;
  if (!v11)
  {
LABEL_4:
    v13 = v4;
    *v3 = &off_24EC5CDB0;
    v5 = v3 + 1;
    if (!v4)
      goto LABEL_9;
    goto LABEL_7;
  }
  if (v11 != v10)
  {
    v4 = (_QWORD *)(*(uint64_t (**)(void))(*v11 + 16))();
    goto LABEL_4;
  }
  v13 = v12;
  (*(void (**)(_QWORD *, _QWORD *))(v10[0] + 24))(v10, v12);
  v4 = v13;
  *v3 = &off_24EC5CDB0;
  v5 = v3 + 1;
  if (!v4)
  {
LABEL_9:
    v3[4] = v4;
    goto LABEL_11;
  }
LABEL_7:
  if (v4 != v12)
  {
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *))(*v4 + 16))(v4, v5);
    goto LABEL_9;
  }
  v3[4] = v5;
  (*(void (**)(_QWORD *))(v12[0] + 24))(v12);
LABEL_11:
  v6 = v13;
  if (v13 == v12)
  {
    v7 = 4;
    v6 = v12;
  }
  else
  {
    if (!v13)
      goto LABEL_16;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_16:
  *a1 = v3;
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_223919AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  uint64_t v17;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v19 = a17;
  if (a17 == &a14)
  {
    v20 = 4;
    v19 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_6;
    v20 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v19 + 8 * v20))();
LABEL_6:
  MEMORY[0x227684CE8](v17, 0x10A1C400AA0B987);
  v21 = a13;
  if (a13 == &a10)
  {
    v22 = 4;
    v21 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_11;
    v22 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v21 + 8 * v22))();
LABEL_11:
  _Unwind_Resume(a1);
}

void sub_223919B38(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CCA58);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCA58))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3dapi.recon3d");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CCA50);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CCA58);
  }
  *a1 = qword_2540CCA50;
}

void sub_223919BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CCA58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CCA58);
  _Unwind_Resume(a1);
}

unint64_t sub_223919C2C(_QWORD *a1, int *a2)
{
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  unsigned int v12;

  v4 = sub_22393835C(a1, a2);
  if (v4)
    return *(uint64_t *)((char *)v4 + 28);
  v9 = a1[5];
  sub_2232D69F0((unsigned int *)&v10, &v9);
  v5 = (v10 | ((unint64_t)BYTE4(v10) << 32) | ((unint64_t)BYTE5(v10) << 40)) & 0xFFFFFFFFFFFFFFLL | ((unint64_t)HIBYTE(v10) << 56) | ((unint64_t)(HIWORD(HIDWORD(v10)) & 0xF | 0x40u) << 48);
  v6 = ((unint64_t)v12 << 32) | ((unint64_t)BYTE1(v12) << 40) | v11 & 0xFFFFFF00 | ((unint64_t)v12 << 32) & 0xFF00000000000000 | ((unint64_t)BYTE2(v12) << 48) | v11 & 0x3F | 0x80;
  v10 = (uint64_t *)a2;
  v7 = sub_223533948((uint64_t)a1, a2, (uint64_t)&unk_2245BA939, &v10);
  *(uint64_t *)((char *)v7 + 28) = v5;
  *(uint64_t *)((char *)v7 + 36) = v6;
  return v5;
}

uint64_t *sub_223919D14(uint64_t *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(std::__shared_weak_count **)(v2 + 80);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    MEMORY[0x227684CE8](v2, 0x10F0C401ED89F8CLL);
  }
  return a1;
}

uint64_t *sub_223919D98(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v2 + 8) = 0;
    if (v3)
    {
      sub_223198030(v3 + 1632, *(_QWORD **)(v3 + 1640));
      v4 = *(_QWORD **)(v3 + 368);
      if (v4)
      {
        v5 = *(_QWORD **)(v3 + 376);
        v6 = *(void **)(v3 + 368);
        if (v5 != v4)
        {
          do
            v5 = sub_2232959C0(v5 - 20);
          while (v5 != v4);
          v6 = *(void **)(v3 + 368);
        }
        *(_QWORD *)(v3 + 376) = v4;
        operator delete(v6);
      }
      sub_2239165F8(v3 + 24);
      MEMORY[0x227684CE8](v3, 0x10B0C4058F6C091);
    }
    MEMORY[0x227684CE8](v2, 0x1020C40E5D6B702);
  }
  return a1;
}

uint64_t sub_223919E54(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v5;
  void *v6;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v5 = (_QWORD *)*v2;
      v6 = (void *)v2[4];
      if (v6)
      {
        v2[5] = v6;
        operator delete(v6);
      }
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

uint64_t sub_223919EBC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *v9;

  v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(_QWORD *)(a1 + 64) = v2;
    operator delete(v2);
  }
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v4 = *(_QWORD *)(a1 + 40);
    v5 = *(void **)(a1 + 32);
    if (v4 != v3)
    {
      do
      {
        v6 = *(std::__shared_weak_count **)(v4 - 96);
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldaxr(p_shared_owners);
          while (__stlxr(v8 - 1, p_shared_owners));
          if (!v8)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = *(void **)(a1 + 32);
    }
    *(_QWORD *)(a1 + 40) = v3;
    operator delete(v5);
  }
  v9 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v9;
    operator delete(v9);
  }
  return a1;
}

uint64_t sub_223919F74(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  std::mutex *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v16;
  std::string::size_type v17;
  int v18;
  __n128 *v21;
  std::string *v22;
  size_t v23;
  std::string __p;
  int v26;
  uint64_t v27[3];
  void *v28[2];
  char v29;
  _QWORD v30[2];
  char v31;
  __int128 v32;
  __int128 v33;
  int v34;
  __int128 v35;
  __int128 v36;
  int v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v32 = 0u;
  v33 = 0u;
  v34 = 728305600;
  kdebug_trace();
  strcpy((char *)v27, "OccupancyMeshing");
  HIBYTE(v27[2]) = 16;
  v28[0] = (void *)0x636E61707563634FLL;
  v28[1] = (void *)121;
  v29 = 9;
  v30[1] = 0;
  v30[0] = std::chrono::steady_clock::now().__d_.__rep_;
  v31 = 1;
  sub_223D01AA0(a1 + 304, (_QWORD *)(a1 + 39920));
  sub_223198030(a1 + 40112, *(_QWORD **)(a1 + 40120));
  *(_QWORD *)(a1 + 40112) = a1 + 40120;
  *(_QWORD *)(a1 + 40128) = 0;
  *(_QWORD *)(a1 + 40120) = 0;
  v26 = 0;
  v2 = *(_QWORD **)(a1 + 2808);
  if (v2 != (_QWORD *)(a1 + 2816))
  {
    do
    {
      *(_QWORD *)&v35 = *(_QWORD *)((char *)v2 + 28);
      DWORD2(v35) = *((_DWORD *)v2 + 9);
      if (*(_BYTE *)(a1 + 221))
        sub_22391D0F0(a1, (int8x8_t *)&v35);
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v35;
      v3 = sub_223939EBC(a1 + 39920, (int *)&v35, (uint64_t)&unk_2245BA939, (uint64_t **)&__p);
      sub_223D01024(a1 + 304, (uint64_t)&v35, 1, 0, (uint64_t)(v3 + 4), 0, 0);
      v4 = v3[18] != v3[19] && *((_DWORD *)v3 + 96) == 1;
      if (v4 && *(_DWORD *)(a1 + 52) == 2)
        sub_223CE8414((uint64_t)(v3 + 4));
      ++v26;
      v5 = (_QWORD *)v2[1];
      if (v5)
      {
        do
        {
          v6 = v5;
          v5 = (_QWORD *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (_QWORD *)v2[2];
          v4 = *v6 == (_QWORD)v2;
          v2 = v6;
        }
        while (!v4);
      }
      v2 = v6;
    }
    while (v6 != (_QWORD *)(a1 + 2816));
  }
  *(_QWORD *)&v35 = "cv3d.recon.";
  *((_QWORD *)&v35 + 1) = 11;
  *(_QWORD *)&v36 = "Stats.Occupancy.ChunksMeshed";
  *((_QWORD *)&v36 + 1) = 28;
  sub_2231A9820((uint64_t)&v35, (uint64_t)&v37, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v7 = sub_2241471F8();
    v8 = v7[2];
    if (!v8)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v8 = v7[2];
    }
    v9 = *(_QWORD *)(v8 + 64);
    v10 = (std::mutex *)(v9 + 32);
    std::mutex::lock((std::mutex *)(v9 + 32));
    v12 = *(_QWORD *)(v9 + 96);
    v11 = *(_QWORD *)(v9 + 104);
    std::mutex::unlock(v10);
    if (v12 != v11)
    {
      sub_2241471F8();
      v13 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v13 + 24))(v13))
      {
        v35 = 0u;
        v36 = 0u;
        v37 = 728325608;
        kdebug_trace();
        sub_223822198((double *)&qword_255788F20, v13, &v26, "# of chunks meshed");
        kdebug_trace();
      }
    }
  }
  v35 = 0u;
  v36 = 0u;
  v37 = 728325624;
  kdebug_trace();
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v16 = p_p->__r_.__value_.__r.__words[0];
    v17 = p_p->__r_.__value_.__l.__size_;
    v18 = p_p->__r_.__value_.__s.__data_[16];
    if (v16 == 0x6365722E64337663 && v17 == 0x73746174532E6E6FLL && v18 == 46)
    {
      v21 = sub_223187510();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v22 = &__p;
      else
        v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v23 = __p.__r_.__value_.__l.__size_;
      sub_223532E4C(v21, v22, v23, (unsigned int *)&v26, (uint64_t)"# of chunks meshed", 18);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_22391CC34(v27, (uint64_t *)v28, (uint64_t)v30);
  if (v29 < 0)
  {
    operator delete(v28[0]);
    if ((SHIBYTE(v27[2]) & 0x80000000) == 0)
      return kdebug_trace();
LABEL_52:
    operator delete((void *)v27[0]);
    return kdebug_trace();
  }
  if (SHIBYTE(v27[2]) < 0)
    goto LABEL_52;
  return kdebug_trace();
}

void sub_22391A484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22391A500(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void *v38;
  void **v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  void *v55;
  _QWORD *v56;
  _QWORD *v57;
  void *v58;
  _QWORD *v59;
  _QWORD *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  void *v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  void *v71;

  v2 = a1 + 40624;
  *(_QWORD *)a1 = &off_24EC5CE00;
  v3 = *(_QWORD **)(a1 + 40832);
  if (v3)
  {
    v4 = *(_QWORD **)(a1 + 40840);
    v5 = v3;
    if (v4 != v3)
    {
      do
        v4 = sub_223173E64(v4 - 45);
      while (v4 != v3);
      v5 = *(void **)(v2 + 208);
    }
    *(_QWORD *)(v2 + 216) = v3;
    operator delete(v5);
  }
  v6 = *(_QWORD **)(v2 + 184);
  if (v6)
  {
    v7 = *(_QWORD **)(v2 + 192);
    v8 = *(void **)(v2 + 184);
    if (v7 != v6)
    {
      do
        v7 = sub_223173E64(v7 - 45);
      while (v7 != v6);
      v8 = *(void **)(v2 + 184);
    }
    *(_QWORD *)(v2 + 192) = v6;
    operator delete(v8);
  }
  v9 = *(std::__shared_weak_count **)(v2 + 168);
  if (!v9)
    goto LABEL_15;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    v12 = *(std::__shared_weak_count **)(v2 + 128);
    if (!v12)
      goto LABEL_21;
  }
  else
  {
LABEL_15:
    v12 = *(std::__shared_weak_count **)(v2 + 128);
    if (!v12)
      goto LABEL_21;
  }
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
LABEL_21:
  v15 = *(_QWORD *)(v2 + 96);
  if (v15)
  {
    v16 = *(_QWORD *)(v2 + 104);
    v17 = *(void **)(v2 + 96);
    if (v16 != v15)
    {
      do
      {
        v18 = *(std::__shared_weak_count **)(v16 - 96);
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldaxr(v19);
          while (__stlxr(v20 - 1, v19));
          if (!v20)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
        v16 -= 120;
      }
      while (v16 != v15);
      v17 = *(void **)(v2 + 96);
    }
    *(_QWORD *)(v2 + 104) = v15;
    operator delete(v17);
  }
  v21 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 88) = 0;
  if (v21)
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  v22 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = 0;
  if (v22)
    (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  v23 = *(_QWORD **)(v2 + 56);
  if (v23)
  {
    do
    {
      v24 = (_QWORD *)*v23;
      operator delete(v23);
      v23 = v24;
    }
    while (v24);
  }
  v25 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;
  if (v25)
    operator delete(v25);
  v26 = *(_QWORD **)(v2 + 16);
  if (v26)
  {
    do
    {
      v27 = (_QWORD *)*v26;
      operator delete(v26);
      v26 = v27;
    }
    while (v27);
  }
  v28 = *(void **)v2;
  *(_QWORD *)v2 = 0;
  if (v28)
    operator delete(v28);
  v29 = *(_QWORD *)(a1 + 40592);
  *(_QWORD *)(a1 + 40592) = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  v30 = *(_QWORD *)(a1 + 40584);
  *(_QWORD *)(a1 + 40584) = 0;
  if (v30)
  {
    v31 = *(std::__shared_weak_count **)(v30 + 80);
    if (v31)
    {
      v32 = (unint64_t *)&v31->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    MEMORY[0x227684CE8](v30, 0x10F0C401ED89F8CLL);
  }
  v34 = *(_QWORD *)(a1 + 40576);
  *(_QWORD *)(a1 + 40576) = 0;
  if (v34)
  {
    v35 = *(_QWORD *)(v34 + 8);
    *(_QWORD *)(v34 + 8) = 0;
    if (v35)
    {
      sub_223198030(v35 + 1632, *(_QWORD **)(v35 + 1640));
      v36 = *(_QWORD **)(v35 + 368);
      if (v36)
      {
        v37 = *(_QWORD **)(v35 + 376);
        v38 = *(void **)(v35 + 368);
        if (v37 != v36)
        {
          do
            v37 = sub_2232959C0(v37 - 20);
          while (v37 != v36);
          v38 = *(void **)(v35 + 368);
        }
        *(_QWORD *)(v35 + 376) = v36;
        operator delete(v38);
      }
      sub_2239165F8(v35 + 24);
      MEMORY[0x227684CE8](v35, 0x10B0C4058F6C091);
    }
    MEMORY[0x227684CE8](v34, 0x1020C40E5D6B702);
  }
  v39 = (void **)(a1 + 39920);
  if (*(_BYTE *)(a1 + 40464))
  {
    *(_QWORD *)(a1 + 40384) = &off_24EC26EB0;
    v40 = *(std::__shared_weak_count **)(a1 + 40400);
    if (v40)
    {
      v41 = (unint64_t *)&v40->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
  }
  if (*(_BYTE *)(a1 + 40376))
  {
    *(_QWORD *)(a1 + 40296) = &off_24EC27290;
    v43 = *(std::__shared_weak_count **)(a1 + 40312);
    if (v43)
    {
      v44 = (unint64_t *)&v43->__shared_owners_;
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 - 1, v44));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
  }
  v46 = *(_QWORD *)(a1 + 40288);
  *(_QWORD *)(a1 + 40288) = 0;
  if (v46)
    (*(void (**)(uint64_t))(*(_QWORD *)v46 + 8))(v46);
  v47 = *(_QWORD *)(a1 + 40280);
  *(_QWORD *)(a1 + 40280) = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  sub_223198030(a1 + 40112, *(_QWORD **)(a1 + 40120));
  v48 = *(_QWORD **)(a1 + 40088);
  if (v48)
  {
    do
    {
      v66 = (_QWORD *)*v48;
      v67 = (void *)v48[4];
      if (v67)
      {
        v48[5] = v67;
        operator delete(v67);
      }
      operator delete(v48);
      v48 = v66;
    }
    while (v66);
  }
  v49 = *(void **)(a1 + 40072);
  *(_QWORD *)(a1 + 40072) = 0;
  if (v49)
    operator delete(v49);
  v50 = *(std::__shared_weak_count **)(a1 + 40056);
  if (!v50)
    goto LABEL_85;
  v51 = (unint64_t *)&v50->__shared_owners_;
  do
    v52 = __ldaxr(v51);
  while (__stlxr(v52 - 1, v51));
  if (!v52)
  {
    ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
    std::__shared_weak_count::__release_weak(v50);
    v53 = *(_QWORD **)(a1 + 40024);
    if (!v53)
      goto LABEL_87;
  }
  else
  {
LABEL_85:
    v53 = *(_QWORD **)(a1 + 40024);
    if (!v53)
      goto LABEL_87;
  }
  do
  {
    v54 = (_QWORD *)*v53;
    operator delete(v53);
    v53 = v54;
  }
  while (v54);
LABEL_87:
  v55 = *(void **)(a1 + 40008);
  *(_QWORD *)(a1 + 40008) = 0;
  if (v55)
    operator delete(v55);
  v56 = *(_QWORD **)(a1 + 39976);
  if (v56)
  {
    do
    {
      v57 = (_QWORD *)*v56;
      sub_22316F8F4(v56 + 4);
      operator delete(v56);
      v56 = v57;
    }
    while (v57);
  }
  v58 = *(void **)(a1 + 39960);
  *(_QWORD *)(a1 + 39960) = 0;
  if (v58)
    operator delete(v58);
  v59 = *(_QWORD **)(a1 + 39936);
  if (v59)
  {
    do
    {
      v60 = (_QWORD *)*v59;
      sub_22316F8F4(v59 + 4);
      operator delete(v59);
      v59 = v60;
    }
    while (v60);
  }
  v61 = *v39;
  *v39 = 0;
  if (v61)
    operator delete(v61);
  v62 = *(void **)(a1 + 2952);
  if (v62)
  {
    *(_QWORD *)(a1 + 2960) = v62;
    operator delete(v62);
  }
  v63 = *(_QWORD *)(a1 + 2928);
  if (v63)
  {
    v64 = *(_QWORD *)(a1 + 2936);
    v65 = *(void **)(a1 + 2928);
    if (v64 != v63)
    {
      do
      {
        v68 = *(std::__shared_weak_count **)(v64 - 96);
        if (v68)
        {
          v69 = (unint64_t *)&v68->__shared_owners_;
          do
            v70 = __ldaxr(v69);
          while (__stlxr(v70 - 1, v69));
          if (!v70)
          {
            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
            std::__shared_weak_count::__release_weak(v68);
          }
        }
        v64 -= 120;
      }
      while (v64 != v63);
      v65 = *(void **)(a1 + 2928);
    }
    *(_QWORD *)(a1 + 2936) = v63;
    operator delete(v65);
  }
  v71 = *(void **)(a1 + 2896);
  if (v71)
  {
    *(_QWORD *)(a1 + 2904) = v71;
    operator delete(v71);
  }
  sub_223CF7630(a1 + 304);
  return a1;
}

void sub_22391AAC0(uint64_t a1)
{
  sub_22391A500(a1);
  JUMPOUT(0x227684CE8);
}

void sub_22391AAE4(uint64_t a1, __int128 *a2, __n128 a3)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  size_t v10;
  const char *v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  const char *v14;
  size_t v15;
  _BYTE *v16;
  unint64_t v17;
  const char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  std::__shared_weak_count_vtbl *v27;
  std::__shared_weak_count *v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  void *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  int v62;
  int v63;
  _QWORD *v64;
  float *v65;
  uint64_t v66;
  unint64_t i;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t j;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t k;
  _QWORD *v77;
  uint64_t v78;
  uint64_t m;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int32x4_t v95;
  int32x4_t v96;
  double v97;
  double v98;
  double v99;
  float32x2_t v100;
  float v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  void *v112;
  float32x4_t v113;
  float v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  void **v127;
  _QWORD *v128;
  _QWORD *v129;
  void *v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  __n128 v137;
  __n128 v138;
  uint64_t v139;
  char v140;
  _QWORD v141[2];
  __int128 v142;
  __int128 v143;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v145;
  const char *v146;
  int v147;
  const char *v148;
  uint64_t v149;
  std::__shared_weak_count *v150;
  _BYTE v151[64];
  double v152;
  __int16 v153;
  double v154;
  __int16 v155;
  double v156;
  uint64_t v157;

  v157 = *MEMORY[0x24BDAC8D0];
  a3.n128_u64[0] = *(_QWORD *)a2;
  a3.n128_u32[2] = *((_DWORD *)a2 + 2);
  v138 = a3;
  a3.n128_u64[0] = *((_QWORD *)a2 + 2);
  a3.n128_u32[2] = *((_DWORD *)a2 + 6);
  v137 = a3;
  a3.n128_u64[0] = *((_QWORD *)a2 + 4);
  a3.n128_u32[2] = *((_DWORD *)a2 + 10);
  v136 = a3;
  sub_223919B38(&v139);
  if (**(int **)(v139 + 56) > 3)
    goto LABEL_91;
  v5 = *(unsigned __int8 *)(v139 + 72);
  v6 = sub_22322F254(v139, "OSLogSurrogateAppender", 1, 0);
  v7 = v6;
  if (!v5 && v6 == 0)
    goto LABEL_91;
  *(_QWORD *)&v143 = &v139;
  *((std::chrono::steady_clock::time_point *)&v143 + 1) = std::chrono::steady_clock::now();
  rep = std::chrono::system_clock::now().__d_.__rep_;
  v145 = 3;
  v146 = "unknown file";
  v147 = 382;
  v149 = 0;
  v150 = 0;
  v148 = "unknown function";
  v9 = *(_QWORD *)v143;
  v135 = *(_QWORD *)v143;
  if (*(char *)(*(_QWORD *)v143 + 39) < 0)
  {
    v11 = *(const char **)(v9 + 16);
    v10 = *(_QWORD *)(v9 + 24);
    v134 = *(_QWORD *)v143 + 16;
    v13 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v13 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    v10 = *(unsigned __int8 *)(*(_QWORD *)v143 + 39);
    v11 = (const char *)(*(_QWORD *)v143 + 16);
    v134 = (uint64_t)v11;
    v12 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v12 & 1) != 0)
      goto LABEL_10;
  }
  if (__cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v151);
    sub_223199C58("com.apple.cv3d", (unint64_t)v151, byte_255788F40);
    if (v151[24] && (v151[23] & 0x80000000) != 0)
      operator delete(*(void **)v151);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
LABEL_10:
  if (byte_255788F40[23] >= 0)
    v14 = byte_255788F40;
  else
    v14 = *(const char **)byte_255788F40;
  if (byte_255788F40[23] >= 0)
    v15 = byte_255788F40[23];
  else
    v15 = *(_QWORD *)&byte_255788F40[8];
  *(_QWORD *)v151 = os_log_create(v14, v11);
  v16 = &v151[8];
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v15 >= 0x17)
  {
    v17 = v7;
    v18 = v11;
    v19 = v5;
    v20 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v20 = v15 | 7;
    v21 = v20 + 1;
    v16 = operator new(v20 + 1);
    *(_QWORD *)&v151[16] = v15;
    *(_QWORD *)&v151[24] = v21 | 0x8000000000000000;
    *(_QWORD *)&v151[8] = v16;
    v5 = v19;
    v11 = v18;
    v7 = v17;
    goto LABEL_23;
  }
  v151[31] = v15;
  if (v15)
LABEL_23:
    memmove(v16, v14, v15);
  v16[v15] = 0;
  v151[32] = 1;
  v22 = &v151[40];
  if (v10 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v10 >= 0x17)
  {
    v24 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v24 = v10 | 7;
    v25 = v24 + 1;
    v22 = operator new(v24 + 1);
    *(_QWORD *)&v151[48] = v10;
    *(_QWORD *)&v151[56] = v25 | 0x8000000000000000;
    *(_QWORD *)&v151[40] = v22;
  }
  else
  {
    v151[63] = v10;
    if (!v10)
    {
      v151[40] = 0;
      LOBYTE(v152) = 1;
      v23 = *(NSObject **)v151;
      if ((v151[63] & 0x80000000) == 0)
        goto LABEL_28;
      goto LABEL_34;
    }
  }
  memmove(v22, v11, v10);
  v22[v10] = 0;
  LOBYTE(v152) = 1;
  v23 = *(NSObject **)v151;
  if ((v151[63] & 0x80000000) == 0)
  {
LABEL_28:
    if (!v151[32])
      goto LABEL_37;
LABEL_35:
    if ((v151[31] & 0x80000000) != 0)
      operator delete(*(void **)&v151[8]);
    goto LABEL_37;
  }
LABEL_34:
  operator delete(*(void **)&v151[40]);
  if (v151[32])
    goto LABEL_35;
LABEL_37:
  if (*(_QWORD *)v151)
    os_release(*(void **)v151);
  if (v7 && *(_QWORD *)(v7 + 24))
  {
    v26 = _os_log_pack_size();
    v27 = (std::__shared_weak_count_vtbl *)operator new(v26, (std::align_val_t)8uLL);
    v28 = (std::__shared_weak_count *)operator new();
    v29 = v28;
    v28->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    v28->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v28->__shared_weak_owners_ = 0;
    v28[1].__vftable = v27;
    *(_QWORD *)v151 = v27;
    *(_QWORD *)&v151[8] = v27;
    *(_QWORD *)&v151[16] = v28;
    do
      v31 = __ldxr(p_shared_owners);
    while (__stxr(v31 + 1, p_shared_owners));
    memset(&v151[24], 0, 24);
    do
      v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v29);
    }
    v33 = *(_QWORD *)v151;
    v34 = _os_log_pack_fill();
    *(_DWORD *)v34 = 134220032;
    *(double *)(v34 + 4) = v138.n128_f32[0];
    *(_WORD *)(v34 + 12) = 2048;
    *(double *)(v34 + 14) = v138.n128_f32[1];
    *(_WORD *)(v34 + 22) = 2048;
    *(double *)(v34 + 24) = v138.n128_f32[2];
    *(_WORD *)(v34 + 32) = 2048;
    *(double *)(v34 + 34) = v137.n128_f32[0];
    *(_WORD *)(v34 + 42) = 2048;
    *(double *)(v34 + 44) = v137.n128_f32[1];
    *(_WORD *)(v34 + 52) = 2048;
    *(double *)(v34 + 54) = v137.n128_f32[2];
    *(_WORD *)(v34 + 62) = 2048;
    *(double *)(v34 + 64) = v136.n128_f32[0];
    *(_WORD *)(v34 + 72) = 2048;
    *(double *)(v34 + 74) = v136.n128_f32[1];
    *(_WORD *)(v34 + 82) = 2048;
    *(double *)(v34 + 84) = v136.n128_f32[2];
    v35 = operator new();
    v36 = *(unsigned __int8 *)(v135 + 39);
    v37 = v134;
    if ((v36 & 0x80u) != 0)
    {
      v37 = *(_QWORD *)(v135 + 16);
      v36 = *(_QWORD *)(v135 + 24);
    }
    *(_QWORD *)v35 = v33;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)&v151[8];
    *(_QWORD *)&v151[8] = 0;
    *(_QWORD *)&v151[16] = 0;
    *(_OWORD *)(v35 + 24) = *(_OWORD *)&v151[24];
    *(_QWORD *)&v151[24] = 0;
    *(_QWORD *)&v151[32] = 0;
    *(_QWORD *)(v35 + 40) = v37;
    *(_QWORD *)(v35 + 48) = v36;
    *(_BYTE *)(v35 + 56) = 1;
    v141[0] = 0;
    *(_QWORD *)&v142 = v35;
    (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v7 + 24) + 40))(*(_QWORD *)(v7 + 24), &v142);
    v38 = v142;
    *(_QWORD *)&v142 = 0;
    if (v38)
    {
      v39 = *(std::__shared_weak_count **)(v38 + 32);
      if (v39)
      {
        v40 = (unint64_t *)&v39->__shared_owners_;
        do
          v41 = __ldaxr(v40);
        while (__stlxr(v41 - 1, v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
      }
      v42 = *(std::__shared_weak_count **)(v38 + 16);
      if (v42)
      {
        v43 = (unint64_t *)&v42->__shared_owners_;
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
      MEMORY[0x227684CE8](v38, 0x10F0C40B62ED6C6);
      v45 = v141[0];
      v141[0] = 0;
      if (v45)
      {
        v46 = *(std::__shared_weak_count **)(v45 + 32);
        if (v46)
        {
          v47 = (unint64_t *)&v46->__shared_owners_;
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        v49 = *(std::__shared_weak_count **)(v45 + 16);
        if (v49)
        {
          v50 = (unint64_t *)&v49->__shared_owners_;
          do
            v51 = __ldaxr(v50);
          while (__stlxr(v51 - 1, v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
            std::__shared_weak_count::__release_weak(v49);
          }
        }
        MEMORY[0x227684CE8](v45, 0x10F0C40B62ED6C6);
      }
    }
    v52 = *(std::__shared_weak_count **)&v151[32];
    if (*(_QWORD *)&v151[32])
    {
      v53 = (unint64_t *)(*(_QWORD *)&v151[32] + 8);
      do
        v54 = __ldaxr(v53);
      while (__stlxr(v54 - 1, v53));
      if (!v54)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
    v55 = *(std::__shared_weak_count **)&v151[16];
    if (*(_QWORD *)&v151[16])
    {
      v56 = (unint64_t *)(*(_QWORD *)&v151[16] + 8);
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
  }
  else
  {
    os_log_type_enabled(v23, OS_LOG_TYPE_INFO);
    *(_DWORD *)v151 = 134220032;
    *(double *)&v151[4] = v138.n128_f32[0];
    *(_WORD *)&v151[12] = 2048;
    *(double *)&v151[14] = v138.n128_f32[1];
    *(_WORD *)&v151[22] = 2048;
    *(double *)&v151[24] = v138.n128_f32[2];
    *(_WORD *)&v151[32] = 2048;
    *(double *)&v151[34] = v137.n128_f32[0];
    *(_WORD *)&v151[42] = 2048;
    *(double *)&v151[44] = v137.n128_f32[1];
    *(_WORD *)&v151[52] = 2048;
    *(double *)&v151[54] = v137.n128_f32[2];
    *(_WORD *)&v151[62] = 2048;
    v152 = v136.n128_f32[0];
    v153 = 2048;
    v154 = v136.n128_f32[1];
    v155 = 2048;
    v156 = v136.n128_f32[2];
    v58 = (void *)_os_log_send_and_compose_impl();
    if (v58)
      free(v58);
  }
  if (v5)
  {
    sub_22322C138((uint64_t)&v143, "OCP:Reset,VWTUW:%f,%f,%f,%f,%f,%f,%f,%f,%f", v138.n128_f32[0], v138.n128_f32[1], v138.n128_f32[2], v137.n128_f32[0], v137.n128_f32[1], v137.n128_f32[2], v136.n128_f32[0], v136.n128_f32[1], v136.n128_f32[2]);
    sub_223182C08((uint64_t)&v143);
  }
  sub_223182C08((uint64_t)&v143);
  v59 = v150;
  if (v150)
  {
    v60 = (unint64_t *)&v150->__shared_owners_;
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }
LABEL_91:
  v141[0] = a1;
  *(_QWORD *)&v142 = v141;
  *(_QWORD *)&v143 = &v142;
  v140 = 1;
  v62 = *(_DWORD *)(a1 + 496);
  if ((v62 & 0x80000000) == 0)
  {
    v63 = *(_DWORD *)(a1 + 500);
    *(_QWORD *)v151 = &v139;
    *(_QWORD *)&v151[8] = &v143;
    *(_QWORD *)&v151[16] = &v140;
    sub_2239384E0((uint64_t *)(a1 + 320), v63, v62, (__int128 *)v151);
  }
  v64 = (_QWORD *)(a1 + 40832);
  v65 = (float *)(a1 + 40560);
  *(_BYTE *)(a1 + 2888) = 0;
  *(_BYTE *)(a1 + 2984) = 0;
  *(_QWORD *)(a1 + 3000) = 0;
  *(_QWORD *)(a1 + 2904) = *(_QWORD *)(a1 + 2896);
  *(_DWORD *)(a1 + 2920) = 0;
  v66 = 3056;
  for (i = 145; i > 1; --i)
  {
    v68 = a1 + v66;
    *(_QWORD *)v68 = 0;
    *(_DWORD *)(v68 + 8) = 0;
    *(_QWORD *)(v68 + 16) = 0;
    *(_DWORD *)(v68 + 24) = 0;
    *(_DWORD *)(v68 + 28) = 0xFFFF;
    *(_BYTE *)(v68 + 32) = 0;
    *(_QWORD *)(v68 + 64) = 0;
    *(_DWORD *)(v68 + 72) = 0;
    *(_QWORD *)(v68 + 36) = 0;
    *(_QWORD *)(v68 + 52) = 0;
    *(_QWORD *)(v68 + 44) = 0;
    *(_DWORD *)(v68 + 76) = 0xFFFF;
    *(_BYTE *)(v68 + 80) = 0;
    *(_QWORD *)(v68 + 112) = 0;
    *(_DWORD *)(v68 + 120) = 0;
    *(_QWORD *)(v68 + 84) = 0;
    *(_QWORD *)(v68 + 100) = 0;
    *(_QWORD *)(v68 + 92) = 0;
    *(_DWORD *)(v68 + 124) = 0xFFFF;
    *(_BYTE *)(v68 + 128) = 0;
    *(_QWORD *)(v68 + 160) = 0;
    *(_DWORD *)(v68 + 168) = 0;
    *(_QWORD *)(v68 + 148) = 0;
    *(_QWORD *)(v68 + 132) = 0;
    *(_QWORD *)(v68 + 140) = 0;
    *(_DWORD *)(v68 + 172) = 0xFFFF;
    *(_BYTE *)(v68 + 176) = 0;
    *(_DWORD *)(v68 + 180) = 0;
    *(_QWORD *)(v68 + 184) = 0;
    v66 += 192;
  }
  *(_DWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 496) = 0x80000000;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a1 + 504);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 552) = 0;
  *(_QWORD *)(a1 + 568) = 0;
  *(_QWORD *)(a1 + 560) = 0;
  *(_DWORD *)(a1 + 576) = 0;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a1 + 352);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a1 + 376);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 2656) = *(_QWORD *)(a1 + 2648);
  *(_QWORD *)(a1 + 2680) = *(_QWORD *)(a1 + 2672);
  sub_223198030(a1 + 2696, *(_QWORD **)(a1 + 2704));
  *(_QWORD *)(a1 + 2696) = a1 + 2704;
  *(_QWORD *)(a1 + 2712) = 0;
  *(_QWORD *)(a1 + 2704) = 0;
  *(_QWORD *)(a1 + 2760) = *(_QWORD *)(a1 + 2752);
  *(_QWORD *)(a1 + 2792) = *(_QWORD *)(a1 + 2784);
  sub_223198030(a1 + 2808, *(_QWORD **)(a1 + 2816));
  *(_QWORD *)(a1 + 2808) = a1 + 2816;
  *(_QWORD *)(a1 + 2824) = 0;
  *(_QWORD *)(a1 + 2816) = 0;
  *(_OWORD *)(a1 + 2856) = 0u;
  *(_OWORD *)(a1 + 2872) = 0u;
  if (*(_QWORD *)(a1 + 39944))
  {
    v69 = *(_QWORD **)(a1 + 39936);
    if (v69)
    {
      do
      {
        v70 = (_QWORD *)*v69;
        sub_22316F8F4(v69 + 4);
        operator delete(v69);
        v69 = v70;
      }
      while (v70);
    }
    *(_QWORD *)(a1 + 39936) = 0;
    v71 = *(_QWORD *)(a1 + 39928);
    if (v71)
    {
      for (j = 0; j != v71; ++j)
        *(_QWORD *)(*(_QWORD *)(a1 + 39920) + 8 * j) = 0;
    }
    *(_QWORD *)(a1 + 39944) = 0;
  }
  if (*(_QWORD *)(a1 + 39984))
  {
    v73 = *(_QWORD **)(a1 + 39976);
    if (v73)
    {
      do
      {
        v74 = (_QWORD *)*v73;
        sub_22316F8F4(v73 + 4);
        operator delete(v73);
        v73 = v74;
      }
      while (v74);
    }
    *(_QWORD *)(a1 + 39976) = 0;
    v75 = *(_QWORD *)(a1 + 39968);
    if (v75)
    {
      for (k = 0; k != v75; ++k)
        *(_QWORD *)(*(_QWORD *)(a1 + 39960) + 8 * k) = 0;
    }
    *(_QWORD *)(a1 + 39984) = 0;
  }
  if (*(_QWORD *)(a1 + 40096))
  {
    v77 = *(_QWORD **)(a1 + 40088);
    if (v77)
    {
      do
      {
        v117 = (_QWORD *)*v77;
        v118 = (void *)v77[4];
        if (v118)
        {
          v77[5] = v118;
          operator delete(v118);
        }
        operator delete(v77);
        v77 = v117;
      }
      while (v117);
    }
    *(_QWORD *)(a1 + 40088) = 0;
    v78 = *(_QWORD *)(a1 + 40080);
    if (v78)
    {
      for (m = 0; m != v78; ++m)
        *(_QWORD *)(*(_QWORD *)(a1 + 40072) + 8 * m) = 0;
    }
    *(_QWORD *)(a1 + 40096) = 0;
  }
  sub_223198030(a1 + 40112, *(_QWORD **)(a1 + 40120));
  *(_QWORD *)(a1 + 40112) = a1 + 40120;
  *(_QWORD *)(a1 + 40120) = 0;
  *(_QWORD *)(a1 + 40128) = 0;
  v80 = a1 + 30704;
  v81 = -4608;
  do
  {
    v82 = v80 + v81;
    *(_OWORD *)(v82 + 4608) = 0uLL;
    *(_QWORD *)(v80 + v81 + 4621) = 0;
    *(_QWORD *)(v82 + 4632) = 0;
    v81 += 32;
  }
  while (v81);
  v83 = a1 + 35312;
  v84 = -4608;
  do
  {
    v85 = v83 + v84;
    *(_OWORD *)(v85 + 4608) = 0uLL;
    *(_QWORD *)(v83 + v84 + 4621) = 0;
    *(_QWORD *)(v85 + 4632) = 0;
    v84 += 32;
  }
  while (v84);
  v86 = *a2;
  v87 = a2[1];
  v88 = a2[3];
  *(_OWORD *)(a1 + 40180) = a2[2];
  *(_OWORD *)(a1 + 40196) = v88;
  *(_OWORD *)(a1 + 40148) = v86;
  *(_OWORD *)(a1 + 40164) = v87;
  v89 = a2[4];
  v90 = a2[5];
  v91 = a2[7];
  *(_OWORD *)(a1 + 40244) = a2[6];
  *(_OWORD *)(a1 + 40260) = v91;
  *(_OWORD *)(a1 + 40212) = v89;
  *(_OWORD *)(a1 + 40228) = v90;
  v92 = (_QWORD *)operator new();
  *v92 = &off_24EC65BF8;
  v92[1] = &off_24EC5D028;
  v92[4] = v92 + 1;
  v92[5] = &off_24EC5D0B8;
  v92[2] = a1;
  v92[8] = v92 + 5;
  v92[6] = a1;
  v92[9] = &off_24EC5D148;
  v92[12] = v92 + 9;
  v92[10] = a1;
  v93 = *(_QWORD *)(a1 + 40280);
  *(_QWORD *)(a1 + 40280) = v92;
  if (v93)
    (*(void (**)(uint64_t))(*(_QWORD *)v93 + 8))(v93);
  sub_22391991C(v151, a1);
  v94 = *(_QWORD *)(a1 + 40288);
  *(_QWORD *)(a1 + 40288) = *(_QWORD *)v151;
  if (v94)
    (*(void (**)(uint64_t))(*(_QWORD *)v94 + 8))(v94);
  *(double *)v95.i64 = (*(double (**)(_QWORD))(**(_QWORD **)(a1 + 40704) + 48))(*(_QWORD *)(a1 + 40704));
  sub_2239178A4((uint64_t)v151, (float32x2_t *)(a1 + 40148), v95, v96, v97, v98, v99, v100);
  *(_QWORD *)v65 = *(_QWORD *)v151;
  *(_DWORD *)(a1 + 40568) = *(_DWORD *)&v151[8];
  v101 = *(float *)(a1 + 448);
  v102 = *(unsigned __int8 *)(a1 + 161) > 5u;
  v103 = operator new();
  *(_BYTE *)v103 = v102;
  v104 = operator new();
  v105.i64[0] = *(_QWORD *)v65;
  v105.i32[2] = *(_DWORD *)(a1 + 40568);
  v106 = vnegq_f32(v105);
  *(_DWORD *)&v151[8] = v106.i32[2];
  *(_QWORD *)v151 = v106.i64[0];
  sub_2239AF698(v104, 1, (float32x2_t *)v151, v101);
  *(_QWORD *)(v103 + 8) = v104;
  *(_BYTE *)(v103 + 16) = 0;
  *(_BYTE *)(v103 + 40) = 0;
  *(_BYTE *)(v103 + 48) = 0;
  *(_BYTE *)(v103 + 56) = 0;
  *(_QWORD *)(v103 + 64) = 0xFFFFFFFFLL;
  *(_QWORD *)(v103 + 72) = 0;
  v108 = *(_QWORD *)(a1 + 40576);
  *(_QWORD *)(a1 + 40576) = v103;
  if (v108)
  {
    v109 = *(_QWORD *)(v108 + 8);
    *(_QWORD *)(v108 + 8) = 0;
    if (v109)
    {
      sub_223198030(v109 + 1632, *(_QWORD **)(v109 + 1640));
      v110 = *(_QWORD **)(v109 + 368);
      if (v110)
      {
        v111 = *(_QWORD **)(v109 + 376);
        v112 = *(void **)(v109 + 368);
        if (v111 != v110)
        {
          do
            v111 = sub_2232959C0(v111 - 20);
          while (v111 != v110);
          v112 = *(void **)(v109 + 368);
        }
        *(_QWORD *)(v109 + 376) = v110;
        operator delete(v112);
      }
      sub_2239165F8(v109 + 24);
      MEMORY[0x227684CE8](v109, 0x10B0C4058F6C091);
    }
    v107 = (float32x4_t)MEMORY[0x227684CE8](v108, 0x1020C40E5D6B702);
  }
  v107.i64[0] = *(_QWORD *)v65;
  v107.i32[2] = *(_DWORD *)(a1 + 40568);
  v113 = vabsq_f32(v107);
  v114 = v113.f32[1];
  v115 = v113.f32[1] > v113.f32[0];
  if (v113.f32[1] <= v113.f32[0])
    v114 = v113.f32[0];
  if (v114 < v113.f32[2])
    v115 = 2;
  if (v115 == 1)
  {
    if (v107.f32[1] < 0.0)
      v116 = 2;
    else
      v116 = 3;
  }
  else if (v115)
  {
    if (v65[v115] < 0.0)
      v116 = 4;
    else
      v116 = 5;
  }
  else
  {
    v116 = v107.f32[0] >= 0.0;
  }
  v119 = operator new();
  sub_223CC8F38(v119, v116, *(unsigned __int8 *)(a1 + 286));
  v120 = *(_QWORD *)(a1 + 40584);
  *(_QWORD *)(a1 + 40584) = v119;
  if (v120)
  {
    v121 = *(std::__shared_weak_count **)(v120 + 80);
    if (v121)
    {
      v122 = (unint64_t *)&v121->__shared_owners_;
      do
        v123 = __ldaxr(v122);
      while (__stlxr(v123 - 1, v122));
      if (!v123)
      {
        ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
        std::__shared_weak_count::__release_weak(v121);
      }
    }
    MEMORY[0x227684CE8](v120, 0x10F0C401ED89F8CLL);
  }
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 40592) + 16))(*(_QWORD *)(a1 + 40592), a1 + 16);
  *(_WORD *)(a1 + 40616) = 0;
  if (*(_BYTE *)(a1 + 40608))
    *(_BYTE *)(a1 + 40608) = 0;
  *(_OWORD *)(a1 + 40768) = 0u;
  *(_DWORD *)(a1 + 40760) = 4;
  v124 = *(std::__shared_weak_count **)(a1 + 40792);
  *(_OWORD *)(a1 + 40784) = 0u;
  if (v124)
  {
    v125 = (unint64_t *)&v124->__shared_owners_;
    do
      v126 = __ldaxr(v125);
    while (__stlxr(v126 - 1, v125));
    if (!v126)
    {
      ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
      std::__shared_weak_count::__release_weak(v124);
    }
  }
  *(_WORD *)(a1 + 40800) = 256;
  *(_BYTE *)(a1 + 40618) = 0;
  *(_OWORD *)v151 = 0uLL;
  v143 = 0uLL;
  v142 = 0uLL;
  v127 = (void **)(a1 + 40808);
  v128 = *(_QWORD **)(a1 + 40808);
  if (v128)
  {
    v129 = *(_QWORD **)(a1 + 40816);
    v130 = *(void **)(a1 + 40808);
    if (v129 != v128)
    {
      do
        v129 = sub_223173E64(v129 - 45);
      while (v129 != v128);
      v130 = *v127;
    }
    *(_QWORD *)(a1 + 40816) = v128;
    operator delete(v130);
    *v127 = 0;
    *(_QWORD *)(a1 + 40816) = 0;
    *(_QWORD *)(a1 + 40824) = 0;
  }
  *v127 = 0;
  *(_QWORD *)(a1 + 40816) = 0;
  *(_QWORD *)(a1 + 40824) = 0;
  v131 = (_QWORD *)*v64;
  if (*v64)
  {
    v132 = *(_QWORD **)(a1 + 40840);
    v133 = (_QWORD *)*v64;
    if (v132 != v131)
    {
      do
        v132 = sub_223173E64(v132 - 45);
      while (v132 != v131);
      v133 = (_QWORD *)*v64;
    }
    *(_QWORD *)(a1 + 40840) = v131;
    operator delete(v133);
    *v64 = 0;
    *(_QWORD *)(a1 + 40840) = 0;
    *(_QWORD *)(a1 + 40848) = 0;
  }
  *v64 = 0;
  *(_QWORD *)(a1 + 40840) = 0;
  *(_QWORD *)(a1 + 40848) = 0;
  *(_DWORD *)(a1 + 40856) = 1065353216;
  *(_OWORD *)(a1 + 40860) = *(_OWORD *)v151;
  *(_DWORD *)(a1 + 40876) = 1065353216;
  *(_OWORD *)(a1 + 40880) = v143;
  *(_DWORD *)(a1 + 40896) = 1065353216;
  *(_OWORD *)(a1 + 40900) = v142;
  *(_DWORD *)(a1 + 40916) = 1065353216;
  *(_BYTE *)(a1 + 40920) = 0;
  *(_QWORD *)(a1 + 40921) = v141[0];
  *(_QWORD *)(a1 + 40928) = *(_QWORD *)((char *)v141 + 7);
  *(_BYTE *)(a1 + 40936) = 0;
}

void sub_22391BB90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  if (*(_BYTE *)(v34 - 232))
  {
    if (*(char *)(v34 - 233) < 0)
      operator delete(*(void **)(v34 - 256));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_22391BBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  sub_22319A054(&a32);
  sub_22319A054(&a30);
  sub_223199DE8(v34 - 256);
  sub_223182DAC((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_22391BC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  MEMORY[0x227684CE8](v34, 0x10D0C40B950D02ALL);
  sub_223182DAC((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_22391BC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_223182DAC((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_22391BC44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22391BD28(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t i;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t *v31;
  double v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  int8x16_t v38;
  int8x16_t v39;
  uint64_t v40;
  void *v41;
  int v42;
  int v43;
  __int128 *v44;
  __int128 *v45;
  BOOL v46;
  uint64_t v47;
  int32x2_t *j;
  _QWORD *v49;
  __n128 v50;
  float32x4_t v51;
  double v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  int8x16_t v56;
  int8x16_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  std::mutex *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  std::mutex *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  void *v77;
  void **v78;
  void *v79;
  void **v80;
  uint64_t v81;
  uint64_t v83;
  void *v84;
  __int128 v85;
  std::string v86;
  void *__p[4];
  int v88;
  _QWORD v89[2];
  char v90;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  _QWORD *v92;
  char v93;
  void *v94[4];
  int v95;
  char v96;
  _QWORD v97[2];
  char v98;
  _OWORD v99[2];
  int v100;
  uint64_t v101;

  v8 = a1;
  v101 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a1 + 298))
  {
    v9 = (uint64_t *)(a1 + 40808);
    if (v8 + 40808 != a4)
    {
      sub_2239361BC(v9, *(__int128 **)a4, *(__int128 **)(a4 + 8), 0x4FA4FA4FA4FA4FA5 * ((uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 3));
      sub_2239361BC((uint64_t *)(v8 + 40832), *(__int128 **)(a4 + 24), *(__int128 **)(a4 + 32), 0x4FA4FA4FA4FA4FA5 * ((uint64_t)(*(_QWORD *)(a4 + 32) - *(_QWORD *)(a4 + 24)) >> 3));
    }
    v10 = *(_OWORD *)(a4 + 48);
    v11 = *(_OWORD *)(a4 + 64);
    v12 = *(_OWORD *)(a4 + 96);
    *(_OWORD *)(v8 + 40888) = *(_OWORD *)(a4 + 80);
    *(_OWORD *)(v8 + 40904) = v12;
    *(_OWORD *)(v8 + 40856) = v10;
    *(_OWORD *)(v8 + 40872) = v11;
    v13 = *(_OWORD *)(a4 + 112);
    *(_BYTE *)(v8 + 40936) = *(_BYTE *)(a4 + 128);
    *(_OWORD *)(v8 + 40920) = v13;
  }
  if (!*(_BYTE *)(v8 + 152) || !*(_BYTE *)(v8 + 297))
    return;
  v97[1] = 0;
  v97[0] = std::chrono::steady_clock::now().__d_.__rep_;
  v98 = 1;
  kdebug_trace();
  v14 = *a2;
  v15 = a2[1];
  if (v15)
  {
    v16 = (unint64_t *)(v15 + 8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v18 = *(std::__shared_weak_count **)(v8 + 40792);
  *(_QWORD *)(v8 + 40784) = v14;
  *(_QWORD *)(v8 + 40792) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v81 = v8 + 40624;
  if (*(_QWORD *)(v8 + 40648))
  {
    v21 = *(_QWORD **)(v8 + 40640);
    if (v21)
    {
      do
      {
        v22 = (_QWORD *)*v21;
        operator delete(v21);
        v21 = v22;
      }
      while (v22);
    }
    *(_QWORD *)(v8 + 40640) = 0;
    v23 = *(_QWORD *)(v8 + 40632);
    if (v23)
    {
      for (i = 0; i != v23; ++i)
        *(_QWORD *)(*(_QWORD *)v81 + 8 * i) = 0;
    }
    *(_QWORD *)(v8 + 40648) = 0;
  }
  sub_223198030(v8 + 40112, *(_QWORD **)(v8 + 40120));
  *(_QWORD *)(v8 + 40112) = v8 + 40120;
  *(_QWORD *)(v8 + 40128) = 0;
  *(_QWORD *)(v8 + 40120) = 0;
  *(_BYTE *)(v8 + 2888) = 1;
  *(_BYTE *)(v8 + 2984) = a3[2] != 0;
  v25 = (_QWORD *)*a3;
  v26 = a3 + 1;
  v83 = v8;
  if ((_QWORD *)*a3 != a3 + 1)
  {
    v27 = v8 + 39920;
    v28 = v8 + 40664;
    do
    {
      v94[0] = (char *)v25 + 28;
      sub_223939EBC(v27, (int *)v25 + 7, (uint64_t)&unk_2245BA939, (uint64_t **)v94);
      memset(v94, 0, 17);
      v94[0] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
      LOBYTE(v94[2]) = 1;
      kdebug_trace();
      sub_223B0C2F8();
      kdebug_trace();
      __p[0] = operator new(0x20uLL);
      *(_OWORD *)&__p[1] = xmmword_2245B8D00;
      strcpy((char *)__p[0], "OccupancyMeshingKFOSBlock");
      *(_QWORD *)&v99[0] = operator new(0x20uLL);
      *(_OWORD *)((char *)v99 + 8) = xmmword_2245C6420;
      strcpy(*(char **)&v99[0], "Occupancy.OccupancyMeshingKFOS");
      sub_22391CC34((uint64_t *)__p, (uint64_t *)v99, (uint64_t)v94);
      if (SBYTE7(v99[1]) < 0)
      {
        operator delete(*(void **)&v99[0]);
        if (SHIBYTE(__p[2]) < 0)
LABEL_36:
          operator delete(__p[0]);
      }
      else if (SHIBYTE(__p[2]) < 0)
      {
        goto LABEL_36;
      }
      sub_22390246C(v81, (int *)v25 + 7, (uint64_t)v25 + 28);
      sub_22390246C(v28, (int *)v25 + 7, (uint64_t)v25 + 28);
      v8 = v83;
      if (*(_BYTE *)(v83 + 221))
      {
        sub_22391D0F0(v83, (int8x8_t *)((char *)v25 + 28));
        v8 = v83;
      }
      v29 = (_QWORD *)v25[1];
      if (v29)
      {
        do
        {
          v30 = v29;
          v29 = (_QWORD *)*v29;
        }
        while (v29);
      }
      else
      {
        do
        {
          v30 = (_QWORD *)v25[2];
          v46 = *v30 == (_QWORD)v25;
          v25 = v30;
        }
        while (!v46);
      }
      v25 = v30;
    }
    while (v30 != v26);
  }
  kdebug_trace();
  HIBYTE(v94[2]) = 20;
  strcpy((char *)v94, "OccupancyMeshingKFOS");
  HIBYTE(__p[2]) = 9;
  strcpy((char *)__p, "Occupancy");
  sub_22391CC34((uint64_t *)v94, (uint64_t *)__p, (uint64_t)v97);
  v31 = a5;
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v94[2]) & 0x80000000) == 0)
      goto LABEL_39;
  }
  else if ((SHIBYTE(v94[2]) & 0x80000000) == 0)
  {
    goto LABEL_39;
  }
  operator delete(v94[0]);
LABEL_39:
  HIBYTE(v94[2]) = 9;
  strcpy((char *)v94, "Occupancy");
  sub_22391D400(v8, (uint64_t *)v94, a5);
  if (SHIBYTE(v94[2]) < 0)
    operator delete(v94[0]);
  v40 = *a2;
  v41 = (void *)(*a2 + 184);
  LOBYTE(v99[0]) = 0;
  LOBYTE(v99[1]) = 0;
  v89[0] = a4;
  v86.__r_.__value_.__r.__words[0] = v8;
  __p[0] = v41;
  __p[1] = v99;
  __p[2] = &v86;
  rep = (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep)v41;
  v92 = v89;
  LOBYTE(v84) = 1;
  v42 = *(_DWORD *)(v40 + 360);
  if ((v42 & 0x80000000) == 0)
  {
    v43 = *(_DWORD *)(v40 + 364);
    v94[0] = &rep;
    v94[1] = __p;
    v94[2] = &v84;
    sub_22393A25C((uint64_t)v41, v43, v42, 0, v94, v32, v33, v34, v35, v36, v37, v38, v39);
    v8 = v83;
    v31 = a5;
  }
  *(_BYTE *)(v81 + 177) = 1;
  if (!*(_BYTE *)(a4 + 128) || (v44 = *(__int128 **)a4, v45 = *(__int128 **)(a4 + 8), *(__int128 **)a4 == v45))
  {
LABEL_50:
    v47 = *v31;
    if (*v31 < *(_QWORD *)(v81 + 144))
      return;
LABEL_51:
    *(_QWORD *)(v81 + 144) = v47 + (uint64_t)(*(double *)(v8 + 168) * 1000000000.0);
    memset(v94, 0, sizeof(v94));
    v95 = 1065353216;
    rep = 0;
    v92 = 0;
    v93 = 0;
    rep = std::chrono::steady_clock::now().__d_.__rep_;
    v93 = 1;
    kdebug_trace();
    v89[0] = 0;
    v89[1] = 0;
    v90 = 0;
    v89[0] = std::chrono::steady_clock::now().__d_.__rep_;
    v90 = 1;
    kdebug_trace();
    memset(__p, 0, sizeof(__p));
    v88 = 1065353216;
    for (j = *(int32x2_t **)(v81 + 56); j; j = (int32x2_t *)*j)
    {
      *(_QWORD *)&v99[0] = j + 2;
      v49 = sub_223939EBC((uint64_t)__p, (int *)&j[2], (uint64_t)&unk_2245BA939, (uint64_t **)v99) + 4;
      if (*(_QWORD *)a4 == *(_QWORD *)(a4 + 8))
      {
        *(_QWORD *)&v99[0] = j + 2;
        v58 = sub_223939EBC(v83 + 39920, (int *)&j[2], (uint64_t)&unk_2245BA939, (uint64_t **)v99);
        sub_22316B5A4((uint64_t)v49, (uint64_t)(v58 + 4));
        continue;
      }
      memset(v99, 0, 17);
      *(std::chrono::steady_clock::time_point *)&v99[0] = std::chrono::steady_clock::now();
      LOBYTE(v99[1]) = 1;
      kdebug_trace();
      sub_223B10DAC(*a2, j + 2, 1, (uint64_t *)a4, (uint64_t)v49, v50, v51, v52, v53, v54, v55, v56, v57);
      kdebug_trace();
      v86.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x20uLL);
      *(_OWORD *)&v86.__r_.__value_.__r.__words[1] = xmmword_2245C6440;
      strcpy(v86.__r_.__value_.__l.__data_, "RslExtractOccupancyMeshBlock");
      v84 = operator new(0x28uLL);
      v85 = xmmword_2245B9440;
      strcpy((char *)v84, "RoomScanLite.ExtractOccupancyMesh.Block");
      sub_22391CC34((uint64_t *)&v86, (uint64_t *)&v84, (uint64_t)v99);
      if (SHIBYTE(v85) < 0)
      {
        operator delete(v84);
        if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
          goto LABEL_58;
      }
      else if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_58:
        operator delete(v86.__r_.__value_.__l.__data_);
      }
    }
    kdebug_trace();
    *(_QWORD *)&v99[0] = operator new(0x19uLL);
    *(_OWORD *)((char *)v99 + 8) = xmmword_2245B9430;
    strcpy(*(char **)&v99[0], "RslExtractOccupancyMesh");
    v86.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
    *(_OWORD *)&v86.__r_.__value_.__r.__words[1] = xmmword_2245C6450;
    strcpy(v86.__r_.__value_.__l.__data_, "RoomScanLite.ExtractOccupancyMesh");
    sub_22391CC34((uint64_t *)v99, (uint64_t *)&v86, (uint64_t)v89);
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v86.__r_.__value_.__l.__data_);
      if ((SBYTE7(v99[1]) & 0x80000000) == 0)
        goto LABEL_62;
    }
    else if ((SBYTE7(v99[1]) & 0x80000000) == 0)
    {
      goto LABEL_62;
    }
    operator delete(*(void **)&v99[0]);
LABEL_62:
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v59 = sub_2241471F8();
      v60 = v59[2];
      if (!v60)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_102;
        }
        v60 = v59[2];
      }
      v61 = *(_QWORD *)(v60 + 64);
      v62 = (std::mutex *)(v61 + 32);
      std::mutex::lock((std::mutex *)(v61 + 32));
      v64 = *(_QWORD *)(v61 + 96);
      v63 = *(_QWORD *)(v61 + 104);
      std::mutex::unlock(v62);
      if (v64 != v63)
      {
        *(_QWORD *)&v99[0] = "cv3d.recon.";
        *((_QWORD *)&v99[0] + 1) = 11;
        *(_QWORD *)&v99[1] = "PRR.UpdatedBlocks";
        *((_QWORD *)&v99[1] + 1) = 17;
        sub_2231A9820((uint64_t)v99, (uint64_t)&v100, 0, 0, &v86);
        sub_2241471F8();
        v65 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v65 + 24))(v65))
        {
          memset(v99, 0, sizeof(v99));
          v100 = 728325616;
          kdebug_trace();
          sub_22391DB04(v65, v83, (uint64_t)a2);
          sub_2231874DC((uint64_t)v99);
        }
        if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v86.__r_.__value_.__l.__data_);
      }
    }
    sub_223999020(0.2, 1.0, (uint64_t)&v96, v83 + 304, (uint64_t)__p, v94, 0);
    v66 = (int *)__p[2];
    if (__p[2])
    {
      do
      {
        *(_QWORD *)&v99[0] = v66 + 4;
        v67 = sub_223939EBC(v83 + 39960, v66 + 4, (uint64_t)&unk_2245BA939, (uint64_t **)v99);
        sub_22316B5A4((uint64_t)(v67 + 4), (uint64_t)(v66 + 8));
        v66 = *(int **)v66;
      }
      while (v66);
    }
    kdebug_trace();
    BYTE7(v99[1]) = 12;
    strcpy((char *)v99, "RoomScanLite");
    *((_BYTE *)&v86.__r_.__value_.__s + 23) = 9;
    strcpy((char *)&v86, "Occupancy");
    sub_22391CC34((uint64_t *)v99, (uint64_t *)&v86, (uint64_t)&rep);
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v86.__r_.__value_.__l.__data_);
      if ((SBYTE7(v99[1]) & 0x80000000) == 0)
        goto LABEL_75;
    }
    else if ((SBYTE7(v99[1]) & 0x80000000) == 0)
    {
LABEL_75:
      sub_224569D7C();
      sub_224569A80();
      if (!os_variant_has_internal_diagnostics())
      {
LABEL_84:
        *(_BYTE *)(v81 + 176) = 1;
        v75 = __p[2];
        if (__p[2])
        {
          do
          {
            v76 = (_QWORD *)*v75;
            sub_22316F8F4(v75 + 4);
            operator delete(v75);
            v75 = v76;
          }
          while (v76);
        }
        v77 = __p[0];
        __p[0] = 0;
        if (v77)
          operator delete(v77);
        v78 = (void **)v94[2];
        if (v94[2])
        {
          do
          {
            v80 = (void **)*v78;
            if (v78[7])
              operator delete(v78[4]);
            operator delete(v78);
            v78 = v80;
          }
          while (v80);
        }
        v79 = v94[0];
        v94[0] = 0;
        if (v79)
          operator delete(v79);
        return;
      }
      v68 = sub_2241471F8();
      v69 = v68[2];
      if (v69)
      {
LABEL_79:
        v70 = *(_QWORD *)(v69 + 64);
        v71 = (std::mutex *)(v70 + 32);
        std::mutex::lock((std::mutex *)(v70 + 32));
        v73 = *(_QWORD *)(v70 + 96);
        v72 = *(_QWORD *)(v70 + 104);
        std::mutex::unlock(v71);
        if (v73 != v72)
        {
          *(_QWORD *)&v99[0] = "cv3d.recon.";
          *((_QWORD *)&v99[0] + 1) = 11;
          *(_QWORD *)&v99[1] = "PRR.OccupancyMesh";
          *((_QWORD *)&v99[1] + 1) = 17;
          sub_2231A9820((uint64_t)v99, (uint64_t)&v100, 0, 0, &v86);
          sub_2241471F8();
          v74 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v74 + 24))(v74))
          {
            memset(v99, 0, sizeof(v99));
            v100 = 728325616;
            kdebug_trace();
            sub_22391E25C(v74, v83);
            sub_2231874DC((uint64_t)v99);
          }
          if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v86.__r_.__value_.__l.__data_);
        }
        goto LABEL_84;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        v69 = v68[2];
        goto LABEL_79;
      }
LABEL_102:
      abort();
    }
    operator delete(*(void **)&v99[0]);
    goto LABEL_75;
  }
  while (1)
  {
    v46 = *(_QWORD *)v44 == *(_QWORD *)(a4 + 112) && *((_QWORD *)v44 + 1) == *(_QWORD *)(a4 + 120);
    if (v46)
      break;
    v44 = (__int128 *)((char *)v44 + 360);
    if (v44 == v45)
      goto LABEL_50;
  }
  *(_BYTE *)(v81 + 177) = *((_BYTE *)v44 + 16) == 1;
  v47 = *v31;
  if (*v31 >= *(_QWORD *)(v81 + 144))
    goto LABEL_51;
}

void sub_22391CAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51)
{
  uint64_t v51;

  sub_2231874DC(v51 - 160);
  if (a30 < 0)
  {
    operator delete(__p);
    sub_223530D14((uint64_t)&a31);
    sub_22391E5EC((uint64_t)&a46);
    _Unwind_Resume(a1);
  }
  sub_223530D14((uint64_t)&a31);
  sub_22391E5EC((uint64_t)&a46);
  _Unwind_Resume(a1);
}

void sub_22391CBE0(uint64_t a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  JUMPOUT(0x22391CC2CLL);
}

void sub_22391CBF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22391CC34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  std::string::size_type size;
  std::string *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  std::mutex *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v16;
  std::string::size_type v17;
  std::string *p_p;
  std::string::size_type v19;
  std::string::size_type v20;
  int v21;
  __n128 *v24;
  std::string *v25;
  size_t v26;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v27;
  std::string *v28;
  std::string::size_type v29;
  double v30;
  std::string __p;
  std::string v32;
  std::string v33;
  __int128 v34;
  __int128 v35;
  int v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  if (*((char *)a2 + 23) >= 0)
    v5 = a2;
  else
    v5 = (uint64_t *)*a2;
  sub_22456D250("Stats.%s.Time", &v33, v5);
  if (*((char *)a1 + 23) >= 0)
    v6 = a1;
  else
    v6 = (uint64_t *)*a1;
  sub_22456D250("%s (ms)", &v32, v6);
  *(_QWORD *)&v34 = "cv3d.recon.";
  *((_QWORD *)&v34 + 1) = 11;
  size = HIBYTE(v33.__r_.__value_.__r.__words[2]);
  v8 = &v33;
  if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    size = v33.__r_.__value_.__l.__size_;
    v8 = (std::string *)v33.__r_.__value_.__r.__words[0];
  }
  *(_QWORD *)&v35 = v8;
  *((_QWORD *)&v35 + 1) = size;
  sub_2231A9820((uint64_t)&v34, (uint64_t)&v36, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v9 = sub_2241471F8();
    v10 = v9[2];
    if (!v10)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = v9[2];
    }
    v11 = *(_QWORD *)(v10 + 64);
    v12 = (std::mutex *)(v11 + 32);
    std::mutex::lock((std::mutex *)(v11 + 32));
    v14 = *(_QWORD *)(v11 + 96);
    v13 = *(_QWORD *)(v11 + 104);
    std::mutex::unlock(v12);
    if (v14 != v13)
    {
      sub_2241471F8();
      v15 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v15 + 24))(v15))
      {
        v34 = 0u;
        v35 = 0u;
        v36 = 728325608;
        kdebug_trace();
        if (*(_BYTE *)(a3 + 16))
          v16 = std::chrono::steady_clock::now().__d_.__rep_ - *(_QWORD *)a3 + *(_QWORD *)(a3 + 8);
        else
          v16 = *(_QWORD *)(a3 + 8);
        v30 = (double)v16 / 1000000.0;
        sub_223936460((double *)&qword_255788F20, v15, &v30, (uint64_t)&v32);
        kdebug_trace();
      }
    }
  }
  v34 = 0u;
  v35 = 0u;
  v36 = 728325624;
  kdebug_trace();
  v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v17 = __p.__r_.__value_.__l.__size_;
  if (v17 >= 0x11)
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v19 = p_p->__r_.__value_.__r.__words[0];
    v20 = p_p->__r_.__value_.__l.__size_;
    v21 = p_p->__r_.__value_.__s.__data_[16];
    if (v19 == 0x6365722E64337663 && v20 == 0x73746174532E6E6FLL && v21 == 46)
    {
      v24 = sub_223187510();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v25 = &__p;
      else
        v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v26 = __p.__r_.__value_.__l.__size_;
      if (*(_BYTE *)(a3 + 16))
        v27 = std::chrono::steady_clock::now().__d_.__rep_ - *(_QWORD *)a3 + *(_QWORD *)(a3 + 8);
      else
        v27 = *(_QWORD *)(a3 + 8);
      v30 = (double)v27 / 1000000.0;
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v28 = &v32;
      else
        v28 = (std::string *)v32.__r_.__value_.__r.__words[0];
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v29 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
      else
        v29 = v32.__r_.__value_.__l.__size_;
      sub_2231AA374((uint64_t *)v24, v25, v26, (uint64_t *)&v30, (uint64_t)v28, v29);
    }
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_54:
      operator delete(v33.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    goto LABEL_54;
}

void sub_22391D040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22391D0F0(uint64_t a1, int8x8_t *a2)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int8x8_t v19;
  char *v20;
  _BYTE *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int8x8_t *v27;
  int8x8_t v28;
  __int32 v29;
  int8x8_t v30;
  int v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v4 = -(unsigned __int16)(1 << *(_BYTE *)(a1 + 40760));
  v5 = a2[1].i32[0] & v4;
  v30 = vand_s8(*a2, (int8x8_t)vdup_n_s32(v4));
  v31 = v5;
  *(_QWORD *)&v33 = sub_223919C2C((_QWORD *)(a1 + 40008), (int *)&v30);
  *((_QWORD *)&v33 + 1) = v6;
  sub_2231A9984((uint64_t **)(a1 + 40112), (unsigned __int8 *)&v33, &v33);
  v32 = &v33;
  v7 = sub_22394FF60((uint64_t *)(a1 + 40072), (uint64_t)&v33, &v32);
  v8 = v7;
  v10 = (char *)v7[4];
  v11 = (char *)v7[5];
  v9 = (void **)(v7 + 4);
  if (v10 == v11)
    goto LABEL_10;
  v12 = (char *)v7[4];
  while (*(_DWORD *)v12 != a2->i32[0] || *((_DWORD *)v12 + 1) != a2->i32[1] || *((_DWORD *)v12 + 2) != a2[1].i32[0])
  {
    v12 += 12;
    if (v12 == v11)
    {
      v12 = (char *)v7[5];
      break;
    }
  }
  if (v12 == v11)
  {
LABEL_10:
    v13 = (char *)v7[6];
    if (0xAAAAAAAAAAAAAAABLL * ((v13 - v10) >> 2) > 7)
    {
      v15 = (char *)v7[5];
      if (v11 < v13)
      {
LABEL_17:
        v19 = *a2;
        *((_DWORD *)v15 + 2) = a2[1].i32[0];
        *(int8x8_t *)v15 = v19;
        v20 = v15 + 12;
LABEL_34:
        v8[5] = v20;
        return;
      }
    }
    else
    {
      v14 = (char *)operator new(0x60uLL);
      v15 = &v14[12 * ((v11 - v10) / 12)];
      v13 = v14 + 96;
      v16 = v15;
      if (v11 != v10)
      {
        v16 = &v14[12 * ((v11 - v10) / 12)];
        do
        {
          v17 = *(_QWORD *)(v11 - 12);
          v11 -= 12;
          v18 = *((_DWORD *)v11 + 2);
          *(_QWORD *)(v16 - 12) = v17;
          v16 -= 12;
          *((_DWORD *)v16 + 2) = v18;
        }
        while (v11 != v10);
      }
      v8[4] = v16;
      v8[5] = v15;
      v8[6] = v13;
      if (v10)
      {
        operator delete(v10);
        v15 = (char *)v8[5];
        v13 = (char *)v8[6];
      }
      if (v15 < v13)
        goto LABEL_17;
    }
    v21 = *v9;
    v22 = 0xAAAAAAAAAAAAAAABLL * ((v15 - (_BYTE *)*v9) >> 2);
    v23 = v22 + 1;
    if (v22 + 1 > 0x1555555555555555)
      sub_22316E078();
    v24 = 0xAAAAAAAAAAAAAAABLL * ((v13 - v21) >> 2);
    if (2 * v24 > v23)
      v23 = 2 * v24;
    if (v24 >= 0xAAAAAAAAAAAAAAALL)
      v25 = 0x1555555555555555;
    else
      v25 = v23;
    if (v25)
    {
      if (v25 > 0x1555555555555555)
        sub_223174E94();
      v26 = (char *)operator new(12 * v25);
    }
    else
    {
      v26 = 0;
    }
    v27 = (int8x8_t *)&v26[12 * v22];
    *v27 = *a2;
    v27[1].i32[0] = a2[1].i32[0];
    v20 = (char *)&v27[1] + 4;
    if (v15 != v21)
    {
      do
      {
        v28 = *(int8x8_t *)(v15 - 12);
        v15 -= 12;
        v29 = *((_DWORD *)v15 + 2);
        *(int8x8_t *)((char *)v27 - 12) = v28;
        v27 = (int8x8_t *)((char *)v27 - 12);
        v27[1].i32[0] = v29;
      }
      while (v15 != v21);
      v15 = (char *)*v9;
    }
    v8[4] = v27;
    v8[5] = v20;
    v8[6] = &v26[12 * v25];
    if (v15)
      operator delete(v15);
    goto LABEL_34;
  }
}

void sub_22391D400(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  std::mutex *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t *v18;
  uint64_t **v19;
  uint64_t *v20;
  std::string::size_type size;
  std::string *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  std::mutex *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  std::string::size_type v32;
  std::string *v33;
  std::string::size_type v34;
  std::string::size_type v35;
  int v36;
  uint64_t *v39;
  std::string v40;
  std::string v41;
  __int128 v42;
  std::string v43;
  void *__p[2];
  __int128 v45;
  int v46[4];
  __int128 v47;
  __int128 v48;
  int v49[4];
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v6 = sub_2241471F8();
    v7 = v6[2];
    if (!v7)
    {
      v8 = v6;
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = v8[2];
    }
    v9 = *(_QWORD *)(v7 + 64);
    v10 = (std::mutex *)(v9 + 32);
    std::mutex::lock((std::mutex *)(v9 + 32));
    v12 = *(_QWORD *)(v9 + 96);
    v11 = *(_QWORD *)(v9 + 104);
    std::mutex::unlock(v10);
    if (v12 != v11)
    {
      *(_QWORD *)&v47 = "cv3d.recon.";
      *((_QWORD *)&v47 + 1) = 11;
      v13 = *((unsigned __int8 *)a2 + 23);
      if ((v13 & 0x80u) == 0)
        v14 = a2;
      else
        v14 = (uint64_t *)*a2;
      if ((v13 & 0x80u) != 0)
        v13 = a2[1];
      *(_QWORD *)&v48 = v14;
      *((_QWORD *)&v48 + 1) = v13;
      sub_2231A9820((uint64_t)&v47, (uint64_t)v49, 0, 0, (std::string *)__p);
      sub_2241471F8();
      v15 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 24))(v15);
      v17 = v16;
      if (SBYTE7(v45) < 0)
      {
        operator delete(__p[0]);
        if ((v17 & 1) == 0)
          return;
      }
      else if ((v16 & 1) == 0)
      {
        return;
      }
      v47 = 0u;
      v48 = 0u;
      v49[0] = 728305656;
      kdebug_trace();
      if (*((char *)a2 + 23) >= 0)
        v18 = a2;
      else
        v18 = (uint64_t *)*a2;
      sub_22456D250("%s.Octree", (std::string *)__p, v18);
      sub_223CFADA8((unsigned int *)(a1 + 304), (uint64_t)__p, a3);
      if (SBYTE7(v45) < 0)
      {
        operator delete(__p[0]);
        v19 = *(uint64_t ***)(a1 + 39936);
        if (v19)
          goto LABEL_20;
      }
      else
      {
        v19 = *(uint64_t ***)(a1 + 39936);
        if (v19)
        {
LABEL_20:
          v39 = a3;
          while (1)
          {
            if (*((char *)a2 + 23) >= 0)
              v20 = a2;
            else
              v20 = (uint64_t *)*a2;
            sub_22456D250("%s.OccupancyMesh", &v43, v20);
            __p[0] = "cv3d.recon.";
            __p[1] = (void *)11;
            size = HIBYTE(v43.__r_.__value_.__r.__words[2]);
            v22 = &v43;
            if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            {
              size = v43.__r_.__value_.__l.__size_;
              v22 = (std::string *)v43.__r_.__value_.__r.__words[0];
            }
            *(_QWORD *)&v45 = v22;
            *((_QWORD *)&v45 + 1) = size;
            sub_2231A9820((uint64_t)__p, (uint64_t)v46, 0, 0, &v41);
            if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v43.__r_.__value_.__l.__data_);
            sub_224569D7C();
            sub_224569A80();
            if (!os_variant_has_internal_diagnostics())
              goto LABEL_40;
            v23 = sub_2241471F8();
            v24 = v23[2];
            if (!v24)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v24 = v23[2];
            }
            v25 = *(_QWORD *)(v24 + 64);
            v26 = (std::mutex *)(v25 + 32);
            std::mutex::lock((std::mutex *)(v25 + 32));
            v27 = *(_QWORD *)(v25 + 96);
            v28 = *(_QWORD *)(v25 + 104);
            std::mutex::unlock(v26);
            if (v27 == v28)
              goto LABEL_40;
            sub_2241471F8();
            v29 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
            if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v29 + 24))(v29))
              goto LABEL_40;
            *(_OWORD *)__p = 0u;
            v45 = 0u;
            v46[0] = 728325608;
            kdebug_trace();
            v30 = *v39;
            sub_22456D250("[%d_%d_%d]", &v40, *((unsigned int *)v19 + 4), *((unsigned int *)v19 + 5), *((unsigned int *)v19 + 6));
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v29 + 24))(v29))
            {
              v43 = v40;
              memset(&v40, 0, sizeof(v40));
              *(_QWORD *)&v42 = (uint64_t)((double)v30 / 1000000000.0 * 1000000000.0);
              *((_QWORD *)&v42 + 1) = 2;
              v31 = sub_2241471F8();
              sub_22393B200((uint64_t)v31, v29, (uint64_t)(v19 + 4), (uint64_t)&v43, &v42);
              if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
                break;
            }
            if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
              goto LABEL_38;
LABEL_39:
            kdebug_trace();
LABEL_40:
            *(_OWORD *)__p = 0u;
            v45 = 0u;
            v46[0] = 728325624;
            kdebug_trace();
            v32 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
            if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v32 = v41.__r_.__value_.__l.__size_;
            if (v32 >= 0x11)
            {
              v33 = &v41;
              if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                v33 = (std::string *)v41.__r_.__value_.__r.__words[0];
              v34 = v33->__r_.__value_.__r.__words[0];
              v35 = v33->__r_.__value_.__l.__size_;
              v36 = v33->__r_.__value_.__s.__data_[16];
              if (v34 == 0x6365722E64337663 && v35 == 0x73746174532E6E6FLL && v36 == 46)
              {
                sub_223187510();
                sub_22456D250("[%d_%d_%d]", &v43, *((unsigned int *)v19 + 4), *((unsigned int *)v19 + 5), *((unsigned int *)v19 + 6));
                if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v43.__r_.__value_.__l.__data_);
              }
            }
            kdebug_trace();
            if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v41.__r_.__value_.__l.__data_);
            v19 = (uint64_t **)*v19;
            if (!v19)
              goto LABEL_61;
          }
          operator delete(v43.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v40.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_39;
LABEL_38:
          operator delete(v40.__r_.__value_.__l.__data_);
          goto LABEL_39;
        }
      }
LABEL_61:
      kdebug_trace();
    }
  }
}

void sub_22391D9D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_22316DC48(exception_object);
}

void sub_22391DB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  int32x2_t *v7;
  float32x4_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t v11;
  float32x4_t v12;
  float32x4_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t (**v26)();
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t *v54;
  float32x4_t v55;
  __int128 v56;
  uint64_t v57[2];
  std::__shared_weak_count *v58;
  uint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  std::__shared_weak_count *v62;
  std::__shared_weak_count *v63;
  uint64_t (**v64)();
  uint64_t v65;
  std::__shared_weak_count *v66;
  __int128 v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  int *v71;
  __int128 *v72;
  int v73;
  __int128 **v74;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    *(_QWORD *)&v56 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v56 + 1) = 2;
    v6 = sub_2241471F8();
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
    {
      v54 = v6;
      sub_2241498F4((uint64_t)v57, 0);
      v7 = *(int32x2_t **)(a2 + 40680);
      if (v7)
      {
        while (1)
        {
          sub_22414CF6C(0, (uint64_t)&v62);
          HIDWORD(v69) = 0;
          v68 = 0;
          v67 = 0uLL;
          sub_22339E3C8((uint64_t)&v67, 0xAAAAAAAAAAAAAAABLL * (((char *)v63 - (char *)v62) >> 2));
          v9 = (uint64_t)v62;
          v10 = v63;
          if (v62 != v63)
            break;
          v11 = *((_QWORD *)&v67 + 1);
          v28 = v67;
          v26 = (uint64_t (**)())v68;
          v27 = v69;
          if (v62)
            goto LABEL_28;
LABEL_30:
          v62 = (std::__shared_weak_count *)v28;
          v63 = (std::__shared_weak_count *)v11;
          v64 = v26;
          v65 = v27;
          sub_22414E9E0((uint64_t)v57, (uint64_t)&v62);
          sub_22316F8F4((uint64_t *)&v62);
          v7 = (int32x2_t *)*v7;
          if (!v7)
            goto LABEL_31;
        }
        v11 = *((_QWORD *)&v67 + 1);
        do
        {
          v8.i64[0] = *(_QWORD *)v9;
          v8.i32[2] = *(_DWORD *)(v9 + 8);
          v12.i64[0] = 0x4100000041000000;
          v12.i64[1] = 0x4100000041000000;
          v13 = vmulq_f32(v8, v12);
          *(float32x2_t *)v12.f32 = vcvt_f32_s32(v7[2]);
          v12.f32[2] = (float)v7[3].i32[0];
          v8 = vmulq_n_f32(vaddq_f32(v13, v12), *(float *)(*(_QWORD *)a3 + 312));
          if (v11 < v68)
          {
            *(_DWORD *)(v11 + 8) = v8.i32[2];
            *(_QWORD *)v11 = v8.i64[0];
            v11 += 12;
          }
          else
          {
            v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v67) >> 2);
            v15 = v14 + 1;
            if (v14 + 1 > 0x1555555555555555)
              sub_22316E078();
            if (0x5555555555555556 * ((uint64_t)(v68 - v67) >> 2) > v15)
              v15 = 0x5555555555555556 * ((uint64_t)(v68 - v67) >> 2);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v68 - v67) >> 2) >= 0xAAAAAAAAAAAAAAALL)
              v16 = 0x1555555555555555;
            else
              v16 = v15;
            if (v16)
            {
              v55 = v8;
              v70 = v16;
              if (HIDWORD(v69) == -1)
                sub_22316DD70();
              v71 = &v70;
              v17 = ((uint64_t (*)(int **, uint64_t *))off_24EC5CE50[HIDWORD(v69)])(&v71, &v69);
              v8 = v55;
            }
            else
            {
              v17 = 0;
              v18 = 0;
            }
            v19 = v17 + 12 * v14;
            *(_QWORD *)v19 = v8.i64[0];
            *(_DWORD *)(v19 + 8) = v8.i32[2];
            v20 = *((_QWORD *)&v67 + 1);
            v21 = v67;
            v22 = v19;
            if (*((_QWORD *)&v67 + 1) != (_QWORD)v67)
            {
              do
              {
                v23 = *(_QWORD *)(v20 - 12);
                v20 -= 12;
                v24 = *(_DWORD *)(v20 + 8);
                *(_QWORD *)(v22 - 12) = v23;
                v22 -= 12;
                *(_DWORD *)(v22 + 8) = v24;
              }
              while (v20 != v21);
              v20 = v67;
            }
            v11 = v19 + 12;
            *(_QWORD *)&v67 = v22;
            *((_QWORD *)&v67 + 1) = v19 + 12;
            v25 = v68;
            v68 = v17 + 12 * v18;
            if (v20)
            {
              v72 = (__int128 *)v20;
              v73 = -1431655765 * ((v25 - v20) >> 2);
              if (HIDWORD(v69) == -1)
                sub_22316DD70();
              v74 = &v72;
              ((void (*)(__int128 ***, uint64_t *))off_24EC5CE60[HIDWORD(v69)])(&v74, &v69);
            }
          }
          *((_QWORD *)&v67 + 1) = v11;
          v9 += 12;
        }
        while ((std::__shared_weak_count *)v9 != v10);
        v9 = (uint64_t)v62;
        v26 = (uint64_t (**)())v68;
        v27 = v69;
        v28 = v67;
        if (!v62)
          goto LABEL_30;
LABEL_28:
        v63 = (std::__shared_weak_count *)v9;
        *(_QWORD *)&v67 = v9;
        DWORD2(v67) = -1431655765 * (((unint64_t)v64 - v9) >> 2);
        if (HIDWORD(v65) == -1)
          sub_22316DD70();
        v72 = &v67;
        ((void (*)(__int128 **, uint64_t *))off_24EC5CE60[HIDWORD(v65)])(&v72, &v65);
        goto LABEL_30;
      }
LABEL_31:
      LOBYTE(v67) = 0;
      LOBYTE(v69) = 0;
      sub_22329F414((uint64_t)v57, &v67, &v56, &v59);
      if ((_BYTE)v69 && SHIBYTE(v68) < 0)
        operator delete((void *)v67);
      sub_22316F8F4(v57);
      v29 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
      v30 = *v29;
      v31 = (std::__shared_weak_count *)v29[1];
      if (v31)
      {
        p_shared_owners = (unint64_t *)&v31->__shared_owners_;
        do
          v33 = __ldxr(p_shared_owners);
        while (__stxr(v33 + 1, p_shared_owners));
      }
      v35 = v60;
      v34 = v61;
      v57[0] = (uint64_t)&off_24EC6A3B8;
      v57[1] = v60;
      v58 = v61;
      v60 = 0;
      v61 = 0;
      v62 = (std::__shared_weak_count *)v30;
      v63 = v31;
      if (v31)
      {
        v36 = (unint64_t *)&v31->__shared_owners_;
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 1, v36));
      }
      v64 = &off_24EC6A3B8;
      v65 = v35;
      v66 = v34;
      if (v34)
      {
        v38 = (unint64_t *)&v34->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
      }
      (*(void (**)(uint64_t *, std::__shared_weak_count **))(*v54 + 16))(v54, &v62);
      v40 = v66;
      if (v66)
      {
        v41 = (unint64_t *)&v66->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
      v43 = v63;
      if (v63)
      {
        v44 = (unint64_t *)&v63->__shared_owners_;
        do
          v45 = __ldaxr(v44);
        while (__stlxr(v45 - 1, v44));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
      v46 = v58;
      if (v58)
      {
        v47 = (unint64_t *)&v58->__shared_owners_;
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      if (v31)
      {
        v49 = (unint64_t *)&v31->__shared_owners_;
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
      v51 = v61;
      if (v61)
      {
        v52 = (unint64_t *)&v61->__shared_owners_;
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
    }
  }
}

void sub_22391E06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  std::__shared_weak_count *a70;
  std::__shared_weak_count *v70;
  uint64_t v71;
  std::__shared_weak_count *v73;
  unint64_t *p_shared_owners;
  unint64_t v75;
  unint64_t *v76;
  unint64_t v77;

  sub_2241231D8(v71);
  v73 = a70;
  if (a70)
  {
    p_shared_owners = (unint64_t *)&a70->__shared_owners_;
    do
      v75 = __ldaxr(p_shared_owners);
    while (__stlxr(v75 - 1, p_shared_owners));
    if (!v75)
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
    }
  }
  sub_2241231D8((uint64_t)&a18);
  if (v70)
  {
    v76 = (unint64_t *)&v70->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
      sub_2241231D8((uint64_t)&a66);
      _Unwind_Resume(a1);
    }
  }
  sub_2241231D8((uint64_t)&a66);
  _Unwind_Resume(a1);
}

void sub_22391E110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  if (*(_BYTE *)(v10 - 136))
  {
    if (*(char *)(v10 - 137) < 0)
    {
      operator delete(*(void **)(v10 - 160));
      sub_22316F8F4((uint64_t *)va);
      _Unwind_Resume(a1);
    }
  }
  sub_22316F8F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_22391E25C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  _QWORD *i;
  uint64_t *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  uint64_t (**v32)();
  uint64_t v33;
  std::__shared_weak_count *v34;
  __int128 __p;
  char v36;
  char v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t (**v40)();
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  uint64_t v44;
  std::__shared_weak_count *v45;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    *(_QWORD *)&v31 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v31 + 1) = 2;
    v4 = sub_2241471F8();
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
    {
      sub_2241498F4((uint64_t)&v38, 0);
      for (i = (_QWORD *)(a2 + 39936); ; sub_22414E9E0((uint64_t)&v38, (uint64_t)(i + 4)))
      {
        i = (_QWORD *)*i;
        if (!i)
          break;
      }
      LOBYTE(__p) = 0;
      v37 = 0;
      sub_22329F414((uint64_t)&v38, &__p, &v31, &v43);
      if (v37 && v36 < 0)
        operator delete((void *)__p);
      sub_22316F8F4(&v38);
      v6 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
      v7 = *v6;
      v8 = (std::__shared_weak_count *)v6[1];
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(p_shared_owners);
        while (__stxr(v10 + 1, p_shared_owners));
      }
      v12 = v44;
      v11 = v45;
      v32 = &off_24EC6A3B8;
      v33 = v44;
      v34 = v45;
      v44 = 0;
      v45 = 0;
      v38 = v7;
      v39 = v8;
      if (v8)
      {
        v13 = (unint64_t *)&v8->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      v40 = &off_24EC6A3B8;
      v41 = v12;
      v42 = v11;
      if (v11)
      {
        v15 = (unint64_t *)&v11->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
      }
      (*(void (**)(uint64_t *, uint64_t *))(*v4 + 16))(v4, &v38);
      v17 = v42;
      if (v42)
      {
        v18 = (unint64_t *)&v42->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v20 = v39;
      if (v39)
      {
        v21 = (unint64_t *)&v39->__shared_owners_;
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v23 = v34;
      if (v34)
      {
        v24 = (unint64_t *)&v34->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      if (v8)
      {
        v26 = (unint64_t *)&v8->__shared_owners_;
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v28 = v45;
      if (v45)
      {
        v29 = (unint64_t *)&v45->__shared_owners_;
        do
          v30 = __ldaxr(v29);
        while (__stlxr(v30 - 1, v29));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
    }
  }
}

void sub_22391E508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19)
{
  std::__shared_weak_count *v19;
  uint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;

  sub_2241231D8(v20);
  v23 = a19;
  if (a19)
  {
    p_shared_owners = (unint64_t *)&a19->__shared_owners_;
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  sub_2241231D8((uint64_t)&a11);
  if (v19)
  {
    v26 = (unint64_t *)&v19->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      sub_2241231D8(v21 - 56);
      _Unwind_Resume(a1);
    }
  }
  sub_2241231D8(v21 - 56);
  _Unwind_Resume(a1);
}

void sub_22391E5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,int a21,uint64_t a22)
{
  if (a20)
  {
    if (a19 < 0)
    {
      operator delete(__p);
      sub_22316F8F4(&a22);
      _Unwind_Resume(a1);
    }
  }
  sub_22316F8F4(&a22);
  _Unwind_Resume(a1);
}

uint64_t sub_22391E5EC(uint64_t a1)
{
  void **v2;
  void *v3;
  void **v5;

  v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      v5 = (void **)*v2;
      if (v2[7])
        operator delete(v2[4]);
      operator delete(v2);
      v2 = v5;
    }
    while (v5);
  }
  v3 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v3)
    operator delete(v3);
  return a1;
}

void sub_22391E654(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  std::chrono::steady_clock::time_point v12;
  _OWORD *v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float v30;
  BOOL v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  char v43;
  int v44;
  unint64_t v45;
  size_t v46;
  const char *v47;
  unsigned __int8 v48;
  const char *v49;
  size_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  size_t v60;
  std::__shared_weak_count_vtbl *v61;
  std::__shared_weak_count *v62;
  std::__shared_weak_count *v63;
  unint64_t *p_shared_owners;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  int *v72;
  int *v73;
  std::string::size_type v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  std::string::size_type v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  int v94;
  int v95;
  void *v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  int8x16_t v100;
  float32x4_t v101;
  int32x4_t v102;
  int32x4_t v103;
  float32x4_t v104;
  int8x16_t v105;
  float32x4_t v106;
  int8x16_t v107;
  float32x2_t v108;
  int32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  int32x4_t v112;
  int32x4_t v113;
  int8x16_t v114;
  float32x4_t v115;
  int8x16_t v116;
  int8x16_t v117;
  int8x16_t v118;
  float32x4_t v119;
  unsigned __int8 *v120;
  int v121;
  unsigned __int8 v122;
  int v123;
  double v124;
  float32x4_t v125;
  float32x4_t v126;
  double v127;
  float32x4_t v128;
  float32x2_t v129;
  float32x4_t v130;
  float32x2_t v131;
  uint64_t v132;
  _BOOL4 v133;
  char v134;
  float32x2_t *v135;
  unsigned int *v136;
  __n128 v137;
  uint64_t v138;
  float32x4_t v139;
  float v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  char v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  std::mutex *v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  std::string *v159;
  std::string *v160;
  uint64_t v161;
  uint64_t *v162;
  std::string::size_type size;
  std::string *v164;
  std::string::size_type v165;
  std::string::size_type v166;
  int v167;
  __n128 *v170;
  std::string *v171;
  size_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  std::mutex *v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  _BYTE *v180;
  _BYTE *v181;
  uint64_t v182;
  unint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  __n128 *v190;
  _BYTE *v191;
  size_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  std::mutex *v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  std::string::size_type v200;
  std::string *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  __int128 v205;
  __int128 v206;
  uint64_t *v207;
  uint64_t v208;
  std::__shared_weak_count *v209;
  unint64_t *v210;
  unint64_t v211;
  __int128 v212;
  unint64_t *v213;
  unint64_t v214;
  unint64_t *v215;
  unint64_t v216;
  std::__shared_weak_count *v217;
  unint64_t *v218;
  unint64_t v219;
  unint64_t *v220;
  unint64_t v221;
  int32x2_t *v222;
  float32x2_t v223;
  float32x4_t v224;
  float32x2_t v225;
  float32x2_t v226;
  float32x2_t v227;
  int8x16_t v228;
  float32x4_t v229;
  float32x4_t v230;
  float32x2_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t v235;
  float32x4_t v236;
  float32x4_t v237;
  float32x4_t v238;
  int32x4_t v239;
  int32x4_t v240;
  int8x16_t v241;
  float32x4_t v242;
  int8x16_t v243;
  float32x2_t v244;
  float32x2_t v245;
  BOOL v246;
  uint64_t v247;
  float32x4_t v248;
  float32x4_t v249;
  const float *v250;
  int v251;
  float32x4_t v252;
  float32x4_t v253;
  uint64_t *v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  std::mutex *v258;
  uint64_t v259;
  uint64_t v260;
  char v261;
  std::string *v262;
  std::string *v263;
  uint64_t v264;
  uint64_t *v265;
  std::string::size_type v266;
  std::string *v267;
  std::string::size_type v268;
  std::string::size_type v269;
  int v270;
  __n128 *v273;
  std::string *v274;
  size_t v275;
  uint64_t *v276;
  uint64_t v277;
  uint64_t v278;
  std::mutex *v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  std::string *v283;
  std::string *v284;
  uint64_t v285;
  uint64_t *v286;
  std::string::size_type v287;
  std::string *v288;
  std::string::size_type v289;
  std::string::size_type v290;
  int v291;
  __n128 *v294;
  std::string *v295;
  size_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  std::mutex *v300;
  uint64_t v301;
  uint64_t v302;
  char v303;
  std::string *v304;
  std::string *v305;
  uint64_t v306;
  uint64_t *v307;
  std::string::size_type v308;
  std::string *v309;
  std::string::size_type v310;
  std::string::size_type v311;
  int v312;
  __n128 *v315;
  std::string *v316;
  size_t v317;
  uint64_t *v318;
  uint64_t v319;
  uint64_t v320;
  std::mutex *v321;
  uint64_t v322;
  uint64_t v323;
  char v324;
  std::string *v325;
  std::string *v326;
  uint64_t v327;
  uint64_t *v328;
  std::string::size_type v329;
  std::string *v330;
  std::string::size_type v331;
  std::string::size_type v332;
  int v333;
  __n128 *v336;
  std::string *v337;
  size_t v338;
  float32x2_t v339;
  float32x4_t v340;
  float32x2_t v341;
  float32x2_t v342;
  float32x2_t v343;
  int8x16_t v344;
  float32x4_t v345;
  float32x4_t v346;
  float32x2_t v347;
  float32x4_t v348;
  float32x4_t v349;
  float32x4_t v350;
  float32x4_t v351;
  float32x4_t v352;
  float32x4_t v353;
  float32x4_t v354;
  int32x4_t v355;
  int32x4_t v356;
  int8x16_t v357;
  float32x4_t v358;
  int8x16_t v359;
  float32x2_t v360;
  double v361;
  float32x2_t v362;
  float32x4_t v363;
  float32x2_t v364;
  double v365;
  uint64_t v366;
  uint64_t *v367;
  uint64_t v368;
  uint64_t v369;
  std::mutex *v370;
  uint64_t v371;
  uint64_t v372;
  char v373;
  std::string *v374;
  std::string *v375;
  uint64_t v376;
  float v377;
  uint64_t *v378;
  std::string::size_type v379;
  std::string *v380;
  std::string::size_type v381;
  std::string::size_type v382;
  int v383;
  __n128 *v386;
  std::string *v387;
  size_t v388;
  float v389;
  uint64_t *v390;
  uint64_t v391;
  uint64_t v392;
  std::mutex *v393;
  uint64_t v394;
  uint64_t v395;
  char v396;
  std::string *v397;
  std::string *v398;
  uint64_t v399;
  uint64_t *v400;
  std::string::size_type v401;
  std::string *v402;
  std::string::size_type v403;
  std::string::size_type v404;
  int v405;
  __n128 *v408;
  std::string *v409;
  size_t v410;
  const char *v411;
  uint64_t v412;
  int **v413;
  int v414;
  uint64_t v415;
  int v416;
  int v417;
  uint64_t v418;
  uint64_t v419;
  unsigned __int8 *v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  float32x2_t v424;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  uint64_t *v426;
  uint64_t v427;
  uint64_t v428;
  std::string v429;
  _QWORD **v430;
  _QWORD *v431;
  uint64_t v432;
  _BYTE __p[32];
  const char *v434;
  int v435;
  const char *v436;
  uint64_t v437;
  std::__shared_weak_count *v438;
  _QWORD v439[2];
  char v440;
  __int128 v441;
  std::string v442;
  char v443;
  int **v444;
  __int128 v445;
  std::string v446;
  _BYTE v447[48];
  _BYTE v448[18];
  uint64_t v449;
  float32x2x3_t v450;

  v449 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a2 + 1848))
    v8 = *(_QWORD *)(a2 + 1256);
  else
    v8 = 0;
  v439[1] = 0;
  v439[0] = std::chrono::steady_clock::now().__d_.__rep_;
  v440 = 1;
  v9 = (double)v8 / 1000000000.0;
  kdebug_trace();
  v10 = a1 + 40496;
  v11 = (char *)(a1 + 40000);
  v12.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  v13 = (_OWORD *)(a1 + 40212);
  v14 = vsubq_f32(*(float32x4_t *)(a1 + 40148), *(float32x4_t *)(a4 + 8));
  v15 = vsubq_f32(*(float32x4_t *)(a1 + 40164), *(float32x4_t *)(a4 + 24));
  v16 = vsubq_f32(*(float32x4_t *)(a1 + 40180), *(float32x4_t *)(a4 + 40));
  v17 = vsubq_f32(*(float32x4_t *)(a1 + 40196), *(float32x4_t *)(a4 + 56));
  v18 = vmulq_f32(v17, v17);
  v19 = vmulq_f32(v16, v16);
  v20 = vmulq_f32(v15, v15);
  v21 = vmulq_f32(v14, v14);
  v21.f32[0] = v18.f32[3]
             + (float)(v18.f32[2]
                     + (float)(v18.f32[1]
                             + (float)(v18.f32[0]
                                     + (float)(v19.f32[3]
                                             + (float)(v19.f32[2]
                                                     + (float)(v19.f32[1]
                                                             + (float)(v19.f32[0]
                                                                     + (float)(v20.f32[3]
                                                                             + (float)(v20.f32[2]
                                                                                     + (float)(v20.f32[1]
                                                                                             + (float)(v20.f32[0] + (float)(v21.f32[3] + (float)(v21.f32[2] + vaddv_f32(*(float32x2_t *)v21.f32))))))))))))));
  v22 = vsubq_f32(*(float32x4_t *)(a1 + 40212), *(float32x4_t *)(a4 + 72));
  v23 = vsubq_f32(*(float32x4_t *)(a1 + 40228), *(float32x4_t *)(a4 + 88));
  v24 = vsubq_f32(*(float32x4_t *)(a1 + 40244), *(float32x4_t *)(a4 + 104));
  v25 = vsubq_f32(*(float32x4_t *)(a1 + 40260), *(float32x4_t *)(a4 + 120));
  v26 = vmulq_f32(v25, v25);
  v27 = vmulq_f32(v24, v24);
  v28 = vmulq_f32(v23, v23);
  v29 = vmulq_f32(v22, v22);
  v30 = v21.f32[0]
      + (float)(v26.f32[3]
              + (float)(v26.f32[2]
                      + (float)(v26.f32[1]
                              + (float)(v26.f32[0]
                                      + (float)(v27.f32[3]
                                              + (float)(v27.f32[2]
                                                      + (float)(v27.f32[1]
                                                              + (float)(v27.f32[0]
                                                                      + (float)(v28.f32[3]
                                                                              + (float)(v28.f32[2]
                                                                                      + (float)(v28.f32[1]
                                                                                              + (float)(v28.f32[0] + (float)(v29.f32[3] + (float)(v29.f32[2] + vaddv_f32(*(float32x2_t *)v29.f32)))))))))))))));
  v31 = v30 == 0.0;
  if (v30 < 0.0)
    v30 = 0.0 - v30;
  if (!v31 && v30 > 0.000001)
  {
    *(_BYTE *)(a1 + 40618) = 1;
    v33 = *(_OWORD *)(a4 + 8);
    v34 = *(_OWORD *)(a4 + 24);
    v35 = *(_OWORD *)(a4 + 56);
    *(_OWORD *)(a1 + 40180) = *(_OWORD *)(a4 + 40);
    *(_OWORD *)(a1 + 40196) = v35;
    *(_OWORD *)(a1 + 40148) = v33;
    *(_OWORD *)(a1 + 40164) = v34;
    v36 = *(_OWORD *)(a4 + 72);
    v37 = *(_OWORD *)(a4 + 88);
    v38 = *(_OWORD *)(a4 + 120);
    *(_OWORD *)(a1 + 40244) = *(_OWORD *)(a4 + 104);
    *(_OWORD *)(a1 + 40260) = v38;
    *v13 = v36;
    *(_OWORD *)(a1 + 40228) = v37;
    if (!*(_BYTE *)(a2 + 1848))
      goto LABEL_14;
    goto LABEL_13;
  }
  *(_BYTE *)(a1 + 40618) = 0;
  if (*(_BYTE *)(a2 + 1848))
  {
LABEL_13:
    *(_QWORD *)(a1 + 40488) = *(_QWORD *)(a2 + 1256);
    sub_223482CFC(a1 + 40296, a2 + 1064);
    sub_223482418(a1 + 40384, a2 + 1152);
    *(_OWORD *)(a1 + 40472) = *(_OWORD *)(a2 + 1240);
    v39 = *(_OWORD *)(a2 + 1360);
    v40 = *(_OWORD *)(a2 + 1376);
    v41 = *(_OWORD *)(a2 + 1392);
    *(_OWORD *)(a1 + 40544) = *(_OWORD *)(a2 + 1408);
    *(_OWORD *)(a1 + 40528) = v41;
    *(_OWORD *)(a1 + 40512) = v40;
    *(_OWORD *)(a1 + 40496) = v39;
  }
LABEL_14:
  if (*(_BYTE *)(a4 + 2))
  {
    v42 = 0;
    v43 = 1;
  }
  else
  {
    if (!*(_BYTE *)(a4 + 1))
      goto LABEL_19;
    v43 = 0;
    v42 = 1;
  }
  *v11 = v43;
  *(_BYTE *)(a1 + 40001) = v42;
LABEL_19:
  if (!*(_BYTE *)(a1 + 297))
  {
    sub_223919B38(&v444);
    v428 = a1 + 40496;
    rep = v12.__d_.__rep_;
    v426 = a3;
    if (*v444[7] > 3)
      goto LABEL_113;
    v44 = *((unsigned __int8 *)v444 + 72);
    v45 = sub_22322F254((uint64_t)v444, "OSLogSurrogateAppender", 1, 0);
    if (!v44 && !v45)
      goto LABEL_113;
    v422 = v45;
    v415 = v8;
    *(_QWORD *)__p = &v444;
    *(std::chrono::steady_clock::time_point *)&__p[8] = std::chrono::steady_clock::now();
    *(std::chrono::system_clock::time_point *)&__p[16] = std::chrono::system_clock::now();
    *(_DWORD *)&__p[24] = 3;
    v434 = "unknown file";
    v435 = 680;
    v437 = 0;
    v438 = 0;
    v436 = "unknown function";
    if (*((char *)v444 + 39) < 0)
    {
      v47 = (const char *)v444[2];
      v46 = (size_t)v444[3];
    }
    else
    {
      v46 = *((unsigned __int8 *)v444 + 39);
      v47 = (const char *)(**(_QWORD **)__p + 16);
    }
    v412 = **(_QWORD **)__p + 16;
    v413 = v444;
    v414 = v44;
    v420 = *(unsigned __int8 **)a2;
    v421 = *(_QWORD *)(a2 + 8);
    v416 = *(unsigned __int8 *)(a2 + 1848);
    v417 = *(unsigned __int8 *)(a2 + 1880);
    v418 = *(_QWORD *)(a4 + 200);
    v419 = *(_QWORD *)(a4 + 224);
    v48 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v48 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)v447);
      sub_223199C58("com.apple.cv3d", (unint64_t)v447, &xmmword_255788F40);
      if (v447[24] && (v447[23] & 0x80000000) != 0)
        operator delete(*(void **)v447);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
    if (byte_255788F57 >= 0)
      v49 = (const char *)&xmmword_255788F40;
    else
      v49 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v50 = byte_255788F57;
    else
      v50 = *((_QWORD *)&xmmword_255788F40 + 1);
    *(_QWORD *)v447 = os_log_create(v49, v47);
    v51 = &v447[8];
    if (v50 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v50 >= 0x17)
    {
      v411 = v47;
      v52 = a1;
      v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v50 | 7) != 0x17)
        v53 = v50 | 7;
      v54 = v53 + 1;
      v51 = operator new(v53 + 1);
      *(_QWORD *)&v447[16] = v50;
      *(_QWORD *)&v447[24] = v54 | 0x8000000000000000;
      *(_QWORD *)&v447[8] = v51;
      a1 = v52;
      v47 = v411;
    }
    else
    {
      v447[31] = v50;
      if (!v50)
      {
LABEL_46:
        v51[v50] = 0;
        v447[32] = 1;
        v55 = &v447[40];
        if (v46 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v46 >= 0x17)
        {
          v56 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v46 | 7) != 0x17)
            v56 = v46 | 7;
          v57 = v56 + 1;
          v55 = operator new(v56 + 1);
          *(_QWORD *)v448 = v46;
          *(_QWORD *)&v448[8] = v57 | 0x8000000000000000;
          *(_QWORD *)&v447[40] = v55;
        }
        else
        {
          v448[15] = v46;
          if (!v46)
            goto LABEL_54;
        }
        memmove(v55, v47, v46);
LABEL_54:
        v55[v46] = 0;
        v448[16] = 1;
        v58 = *(NSObject **)v447;
        if ((v448[15] & 0x80000000) != 0)
          operator delete(*(void **)&v447[40]);
        if (v447[32] && (v447[31] & 0x80000000) != 0)
          operator delete(*(void **)&v447[8]);
        v59 = a1;
        if (*(_QWORD *)v447)
          os_release(*(void **)v447);
        if (v422 && *(_QWORD *)(v422 + 24))
        {
          v60 = _os_log_pack_size();
          v61 = (std::__shared_weak_count_vtbl *)operator new(v60, (std::align_val_t)8uLL);
          v62 = (std::__shared_weak_count *)operator new();
          v63 = v62;
          v62->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v62->__shared_owners_;
          v62->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v62->__shared_weak_owners_ = 0;
          v62[1].__vftable = v61;
          *(_QWORD *)v447 = v61;
          *(_QWORD *)&v447[8] = v61;
          *(_QWORD *)&v447[16] = v62;
          do
            v65 = __ldxr(p_shared_owners);
          while (__stxr(v65 + 1, p_shared_owners));
          memset(&v447[24], 0, 24);
          do
            v66 = __ldaxr(p_shared_owners);
          while (__stlxr(v66 - 1, p_shared_owners));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v63);
          }
          v67 = *(_QWORD *)v447;
          v68 = _os_log_pack_fill();
          v69 = *v11;
          v70 = v11[1];
          *(_DWORD *)v68 = 134219776;
          *(double *)(v68 + 4) = v9;
          *(_WORD *)(v68 + 12) = 1024;
          *(_DWORD *)(v68 + 14) = v69;
          *(_WORD *)(v68 + 18) = 1024;
          *(_DWORD *)(v68 + 20) = v70;
          *(_WORD *)(v68 + 24) = 1024;
          *(_DWORD *)(v68 + 26) = v416;
          *(_WORD *)(v68 + 30) = 1024;
          *(_DWORD *)(v68 + 32) = v417;
          *(_WORD *)(v68 + 36) = 2048;
          *(_QWORD *)(v68 + 38) = v418;
          *(_WORD *)(v68 + 46) = 2048;
          *(_QWORD *)(v68 + 48) = v419;
          *(_WORD *)(v68 + 56) = 2048;
          *(_QWORD *)(v68 + 58) = 0xEF7BDEF7BDEF7BDFLL * ((v421 - (uint64_t)v420) >> 3);
          v71 = operator new();
          v72 = (int *)*((unsigned __int8 *)v413 + 39);
          v73 = (int *)v412;
          if ((char)v72 < 0)
          {
            v73 = v413[2];
            v72 = v413[3];
          }
          *(_QWORD *)v71 = v67;
          *(_OWORD *)(v71 + 8) = *(_OWORD *)&v447[8];
          *(_QWORD *)&v447[8] = 0;
          *(_QWORD *)&v447[16] = 0;
          *(_OWORD *)(v71 + 24) = *(_OWORD *)&v447[24];
          *(_QWORD *)&v447[24] = 0;
          *(_QWORD *)&v447[32] = 0;
          *(_QWORD *)(v71 + 40) = v73;
          *(_QWORD *)(v71 + 48) = v72;
          *(_BYTE *)(v71 + 56) = 1;
          v446.__r_.__value_.__r.__words[0] = 0;
          v442.__r_.__value_.__r.__words[0] = v71;
          (*(void (**)(_QWORD, std::string *))(**(_QWORD **)(v422 + 24) + 40))(*(_QWORD *)(v422 + 24), &v442);
          v8 = v415;
          v74 = v442.__r_.__value_.__r.__words[0];
          v442.__r_.__value_.__r.__words[0] = 0;
          if (v74)
          {
            v75 = *(std::__shared_weak_count **)(v74 + 32);
            if (v75)
            {
              v76 = (unint64_t *)&v75->__shared_owners_;
              do
                v77 = __ldaxr(v76);
              while (__stlxr(v77 - 1, v76));
              if (!v77)
              {
                ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                std::__shared_weak_count::__release_weak(v75);
              }
            }
            v78 = *(std::__shared_weak_count **)(v74 + 16);
            if (v78)
            {
              v79 = (unint64_t *)&v78->__shared_owners_;
              do
                v80 = __ldaxr(v79);
              while (__stlxr(v80 - 1, v79));
              if (!v80)
              {
                ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
                std::__shared_weak_count::__release_weak(v78);
              }
            }
            MEMORY[0x227684CE8](v74, 0x10F0C40B62ED6C6);
            v81 = v446.__r_.__value_.__r.__words[0];
            v446.__r_.__value_.__r.__words[0] = 0;
            if (v81)
            {
              v82 = *(std::__shared_weak_count **)(v81 + 32);
              if (v82)
              {
                v83 = (unint64_t *)&v82->__shared_owners_;
                do
                  v84 = __ldaxr(v83);
                while (__stlxr(v84 - 1, v83));
                if (!v84)
                {
                  ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                  std::__shared_weak_count::__release_weak(v82);
                }
              }
              v85 = *(std::__shared_weak_count **)(v81 + 16);
              if (v85)
              {
                v86 = (unint64_t *)&v85->__shared_owners_;
                do
                  v87 = __ldaxr(v86);
                while (__stlxr(v87 - 1, v86));
                if (!v87)
                {
                  ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
                  std::__shared_weak_count::__release_weak(v85);
                }
              }
              MEMORY[0x227684CE8](v81, 0x10F0C40B62ED6C6);
            }
          }
          v88 = *(std::__shared_weak_count **)&v447[32];
          a1 = v59;
          v10 = v428;
          if (*(_QWORD *)&v447[32])
          {
            v89 = (unint64_t *)(*(_QWORD *)&v447[32] + 8);
            do
              v90 = __ldaxr(v89);
            while (__stlxr(v90 - 1, v89));
            if (!v90)
            {
              ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
              std::__shared_weak_count::__release_weak(v88);
            }
          }
          v91 = *(std::__shared_weak_count **)&v447[16];
          if (*(_QWORD *)&v447[16])
          {
            v92 = (unint64_t *)(*(_QWORD *)&v447[16] + 8);
            do
              v93 = __ldaxr(v92);
            while (__stlxr(v93 - 1, v92));
            if (!v93)
            {
              ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
              std::__shared_weak_count::__release_weak(v91);
            }
          }
        }
        else
        {
          os_log_type_enabled(v58, OS_LOG_TYPE_INFO);
          v94 = *v11;
          v95 = v11[1];
          *(_DWORD *)v447 = 134219776;
          *(double *)&v447[4] = v9;
          *(_WORD *)&v447[12] = 1024;
          *(_DWORD *)&v447[14] = v94;
          *(_WORD *)&v447[18] = 1024;
          *(_DWORD *)&v447[20] = v95;
          *(_WORD *)&v447[24] = 1024;
          *(_DWORD *)&v447[26] = v416;
          *(_WORD *)&v447[30] = 1024;
          *(_DWORD *)&v447[32] = v417;
          *(_WORD *)&v447[36] = 2048;
          *(_QWORD *)&v447[38] = v418;
          *(_WORD *)&v447[46] = 2048;
          *(_QWORD *)v448 = v419;
          *(_WORD *)&v448[8] = 2048;
          *(_QWORD *)&v448[10] = 0xEF7BDEF7BDEF7BDFLL * ((v421 - (uint64_t)v420) >> 3);
          v96 = (void *)_os_log_send_and_compose_impl();
          v10 = v428;
          v8 = v415;
          if (v96)
            free(v96);
        }
        if (v414)
        {
          sub_22322C138((uint64_t)__p, "OCP:KF:t:%f, HA:%i RA: %i IF:%d IJ:%d PR:%lu LC:%lu TT:%lu", v9, *v11, v11[1], *(unsigned __int8 *)(a2 + 1848), *(unsigned __int8 *)(a2 + 1880), *(_QWORD *)(a4 + 200), *(_QWORD *)(a4 + 224), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
          sub_223182C08((uint64_t)__p);
        }
        sub_223182C08((uint64_t)__p);
        v97 = v438;
        if (v438)
        {
          v98 = (unint64_t *)&v438->__shared_owners_;
          do
            v99 = __ldaxr(v98);
          while (__stlxr(v99 - 1, v98));
          if (!v99)
          {
            ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
            std::__shared_weak_count::__release_weak(v97);
          }
        }
LABEL_113:
        v431 = 0;
        v432 = 0;
        v430 = &v431;
        sub_223475C18(&v430, *(unsigned __int8 **)(a4 + 136), (unsigned __int8 *)(a4 + 144));
        sub_223475C18(&v430, *(unsigned __int8 **)(a4 + 160), (unsigned __int8 *)(a4 + 168));
        sub_223475C18(&v430, *(unsigned __int8 **)(a4 + 328), (unsigned __int8 *)(a4 + 336));
        if ((*(_BYTE *)(a1 + 296) & 0x20) == 0)
          goto LABEL_202;
        memset(&v442, 0, 17);
        v442.__r_.__value_.__l.__data_ = (std::string::pointer)std::chrono::steady_clock::now().__d_.__rep_;
        v442.__r_.__value_.__s.__data_[16] = 1;
        kdebug_trace();
        v100.i32[0] = *(_DWORD *)(v10 + 8);
        v101.i64[0] = *(_QWORD *)(v10 + 48);
        v101.i32[2] = *(_DWORD *)(v10 + 56);
        v100.i32[1] = *(_DWORD *)(v10 + 24);
        v102.i64[0] = *(_QWORD *)(v11 + 148);
        v102.i32[2] = *((_DWORD *)v11 + 39);
        v103.i64[0] = *(_QWORD *)(v11 + 164);
        v103.i32[2] = *((_DWORD *)v11 + 43);
        v104.i64[0] = *(_QWORD *)(v11 + 196);
        v104.i32[2] = *((_DWORD *)v11 + 51);
        v105 = (int8x16_t)vnegq_f32(v104);
        v106.i64[0] = vzip1q_s32(v102, v103).u64[0];
        v107 = (int8x16_t)vtrn2q_s32(v102, v103);
        v107.i32[2] = HIDWORD(*(_QWORD *)(v11 + 180));
        v108.i32[0] = *((_DWORD *)v11 + 47);
        v109 = vzip2q_s32(v102, v103);
        *(float32x2_t *)v110.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v106.f32, *(float *)v105.i32), *(float32x2_t *)v107.i8, *(float32x2_t *)v104.f32, 1), *(float32x2_t *)v109.i8, v104, 2);
        v111 = (float32x4_t)v109;
        v111.i32[2] = v108.i32[0];
        v109.i64[0] = vdupq_laneq_s32((int32x4_t)v111, 2).u64[0];
        v110.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v11 + 180), *(float32x2_t *)v105.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v11 + 180), 1), *(float32x2_t *)v104.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v105, v105, 8uLL), v108).u32[0]);
        v106.i64[1] = *(_QWORD *)(v11 + 180);
        v104.i32[3] = 0;
        v104.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v107, 0).i32[3];
        *(uint64_t *)((char *)v104.i64 + 4) = vextq_s8(v107, v100, 4uLL).u64[0];
        v111.i64[1] = v109.u32[0];
        v109.i32[0] = *(_DWORD *)(v10 + 40);
        v112 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v106, COERCE_FLOAT(*(_OWORD *)(v11 + 212))), v104, *(float32x2_t *)(v11 + 212), 1), v111, *(float32x4_t *)(v11 + 212), 2), v110, *(float32x4_t *)(v11 + 212), 3);
        v113 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v106, COERCE_FLOAT(*(_OWORD *)(v11 + 228))), v104, *(float32x2_t *)(v11 + 228), 1), v111, *(float32x4_t *)(v11 + 228), 2), v110, *(float32x4_t *)(v11 + 228), 3);
        v114 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v106, COERCE_FLOAT(*(_OWORD *)(v11 + 244))), v104, *(float32x2_t *)(v11 + 244), 1), v111, *(float32x4_t *)(v11 + 244), 2), v110, *(float32x4_t *)(v11 + 244), 3);
        v115 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v106, COERCE_FLOAT(*(_OWORD *)(v11 + 260))), v104, *(float32x2_t *)(v11 + 260), 1), v111, *(float32x4_t *)(v11 + 260), 2), v110, *(float32x4_t *)(v11 + 260), 3);
        v110.i64[0] = vtrn2q_s32(v112, v113).u64[0];
        v116 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v110.f32, 1);
        v105.i64[0] = vzip2q_s32(v112, v113).u64[0];
        v117 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v110.f32, 0);
        *(int32x2_t *)v112.i8 = vzip1_s32(*(int32x2_t *)v112.i8, *(int32x2_t *)v113.i8);
        *(float32x2_t *)v111.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v112.i8, COERCE_FLOAT(v115.i32[0] ^ 0x80000000)), *(float32x2_t *)v110.f32, (float32x2_t)(v115.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v105.i8, COERCE_FLOAT(v115.i32[2] ^ 0x80000000));
        v107.i64[0] = vextq_s8(v114, v114, 8uLL).u64[0];
        *(float32x2_t *)v110.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v114.i8, (float32x2_t)(v115.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v115.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v114.i8, 1), (float32x2_t)(v115.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v107.i8);
        v115.i64[0] = vextq_s8(v117, v116, 0xCuLL).u64[0];
        v111.i64[1] = v110.i64[0];
        v118 = (int8x16_t)vnegq_f32(v101);
        *(float32x2_t *)v116.i8 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v10, *(int32x2_t *)(v10 + 16)), *(float *)v118.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)v10, *(int32x2_t *)(v10 + 16)), *(float32x2_t *)v101.f32, 1), *(float32x2_t *)v100.i8, v101, 2);
        *(float32x2_t *)v100.i8 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v10 + 32), *(float32x2_t *)v118.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v10 + 32), 1), *(float32x2_t *)v101.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v118, v118, 8uLL), *(float32x2_t *)v109.i8);
        *(float32x2_t *)v101.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v112.i8, *(float *)v116.i32), *(float32x2_t *)v115.f32, *(float32x2_t *)v116.i8, 1), *(float32x2_t *)v105.i8, *(float *)v100.i32);
        *(float32x2_t *)&v101.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v114.i8, *(float32x2_t *)v116.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v116.i8, 1), *(float32x2_t *)v114.i8, 1), *(float32x2_t *)v100.i8, *(float32x2_t *)v107.i8);
        v119 = vaddq_f32(v101, v111);
        LODWORD(v429.__r_.__value_.__r.__words[1]) = v119.i32[2];
        v429.__r_.__value_.__r.__words[0] = v119.i64[0];
        v120 = *(unsigned __int8 **)(v10 + 208);
        v121 = v120[8];
        if (*(_BYTE *)(a2 + 1848))
          v122 = *(_BYTE *)(a2 + 1240);
        else
          v122 = 0;
        (*(void (**)(unsigned __int8 *, uint64_t, _QWORD))(*(_QWORD *)v120 + 16))(v120, a2, v122);
        if (!*(_BYTE *)(a2 + 1848) || *(_BYTE *)(a2 + 1424) != 1)
        {
LABEL_159:
          (*(void (**)(_QWORD, std::string *, uint64_t, uint64_t))(**(_QWORD **)(v10 + 208) + 40))(*(_QWORD *)(v10 + 208), &v429, v8, 1);
          if (v121)
            v150 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 208) + 8) == v121;
          else
            v150 = 1;
          v151 = !v150;
          *(_BYTE *)(v10 + 121) |= v151;
          *(_QWORD *)v447 = "cv3d.recon.";
          *(_QWORD *)&v447[8] = 11;
          *(_QWORD *)&v447[16] = "Stats.Occupancy.IOClassification";
          *(_QWORD *)&v447[24] = 32;
          sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v446);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v152 = sub_2241471F8();
            v153 = v152[2];
            if (!v153)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v153 = v152[2];
            }
            v154 = *(_QWORD *)(v153 + 64);
            v155 = (std::mutex *)(v154 + 32);
            std::mutex::lock((std::mutex *)(v154 + 32));
            v157 = *(_QWORD *)(v154 + 96);
            v156 = *(_QWORD *)(v154 + 104);
            std::mutex::unlock(v155);
            if (v157 != v156)
            {
              v158 = HIBYTE(v446.__r_.__value_.__r.__words[2]);
              v159 = (std::string *)v446.__r_.__value_.__r.__words[0];
              sub_2241471F8();
              v160 = v158 >= 0 ? &v446 : v159;
              v161 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v160);
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v161 + 24))(v161))
              {
                memset(v447, 0, 32);
                *(_DWORD *)&v447[32] = 728325608;
                kdebug_trace();
                *(_QWORD *)&v441 = v432;
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v161 + 24))(v161))
                {
                  *(_QWORD *)__p = operator new(0x28uLL);
                  *(_OWORD *)&__p[8] = xmmword_2245B8D20;
                  strcpy(*(char **)__p, "new_or_content_update_keyframes count");
                  v444 = (int **)(uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                  *(_QWORD *)&v445 = 2;
                  v162 = sub_2241471F8();
                  sub_2231AD778((uint64_t)v162, v161, (uint64_t *)&v441, (uint64_t)__p, (__int128 *)&v444);
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                }
                kdebug_trace();
              }
            }
          }
          memset(v447, 0, 32);
          *(_DWORD *)&v447[32] = 728325624;
          kdebug_trace();
          size = HIBYTE(v446.__r_.__value_.__r.__words[2]);
          if ((v446.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            size = v446.__r_.__value_.__l.__size_;
          v10 = v428;
          if (size >= 0x11)
          {
            v164 = &v446;
            if ((v446.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v164 = (std::string *)v446.__r_.__value_.__r.__words[0];
            v165 = v164->__r_.__value_.__r.__words[0];
            v166 = v164->__r_.__value_.__l.__size_;
            v167 = v164->__r_.__value_.__s.__data_[16];
            if (v165 == 0x6365722E64337663 && v166 == 0x73746174532E6E6FLL && v167 == 46)
            {
              v170 = sub_223187510();
              if ((v446.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v171 = &v446;
              else
                v171 = (std::string *)v446.__r_.__value_.__r.__words[0];
              if ((v446.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v172 = HIBYTE(v446.__r_.__value_.__r.__words[2]);
              else
                v172 = v446.__r_.__value_.__l.__size_;
              *(_QWORD *)__p = v432;
              sub_22318760C((uint64_t *)v170, v171, v172, (uint64_t *)__p, (uint64_t)"new_or_content_update_keyframes count", 37);
            }
          }
          kdebug_trace();
          if (SHIBYTE(v446.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v446.__r_.__value_.__l.__data_);
          kdebug_trace();
          *(_QWORD *)v447 = operator new(0x20uLL);
          *(_OWORD *)&v447[8] = xmmword_2245C6440;
          strcpy(*(char **)v447, "OccupancyIndoorOutdoorFilter");
          __p[23] = 9;
          strcpy(__p, "Occupancy");
          sub_22391CC34((uint64_t *)v447, (uint64_t *)__p, (uint64_t)&v442);
          if ((__p[23] & 0x80000000) != 0)
          {
            operator delete(*(void **)__p);
            if ((v447[23] & 0x80000000) == 0)
              goto LABEL_202;
          }
          else if ((v447[23] & 0x80000000) == 0)
          {
            goto LABEL_202;
          }
          operator delete(*(void **)v447);
LABEL_202:
          *(_QWORD *)v447 = "cv3d.recon.";
          *(_QWORD *)&v447[8] = 11;
          *(_QWORD *)&v447[16] = "Stats.Occupancy.IOClassification";
          *(_QWORD *)&v447[24] = 32;
          sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, (std::string *)__p);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v173 = sub_2241471F8();
            v174 = v173[2];
            if (!v174)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v174 = v173[2];
            }
            v175 = *(_QWORD *)(v174 + 64);
            v176 = (std::mutex *)(v175 + 32);
            std::mutex::lock((std::mutex *)(v175 + 32));
            v178 = *(_QWORD *)(v175 + 96);
            v177 = *(_QWORD *)(v175 + 104);
            std::mutex::unlock(v176);
            v31 = v178 == v177;
            v10 = v428;
            if (!v31)
            {
              v179 = __p[23];
              v180 = *(_BYTE **)__p;
              sub_2241471F8();
              v181 = v179 >= 0 ? __p : v180;
              v182 = (*(uint64_t (**)(uint64_t *, _BYTE *))(qword_2557952E0 + 48))(&qword_2557952E0, v181);
              v10 = v428;
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v182 + 24))(v182))
              {
                memset(v447, 0, 32);
                *(_DWORD *)&v447[32] = 728325608;
                kdebug_trace();
                v442.__r_.__value_.__s.__data_[0] = *(_BYTE *)(*(_QWORD *)(v428 + 208) + 8);
                sub_223921D44(v182, (char *)&v442);
                kdebug_trace();
              }
            }
          }
          memset(v447, 0, 32);
          *(_DWORD *)&v447[32] = 728325624;
          kdebug_trace();
          v183 = __p[23];
          if (__p[23] < 0)
            v183 = *(_QWORD *)&__p[8];
          if (v183 >= 0x11)
          {
            v184 = __p;
            if (__p[23] < 0)
              v184 = *(_BYTE **)__p;
            v185 = *(_QWORD *)v184;
            v186 = *((_QWORD *)v184 + 1);
            v187 = v184[16];
            if (v185 == 0x6365722E64337663 && v186 == 0x73746174532E6E6FLL && v187 == 46)
            {
              v190 = sub_223187510();
              if (__p[23] >= 0)
                v191 = __p;
              else
                v191 = *(_BYTE **)__p;
              if (__p[23] >= 0)
                v192 = __p[23];
              else
                v192 = *(_QWORD *)&__p[8];
              v442.__r_.__value_.__s.__data_[0] = *(_BYTE *)(*(_QWORD *)(v10 + 208) + 8);
              sub_22387FA8C(v190, v191, v192, (unsigned __int8 *)&v442, (uint64_t)"filtered indoor/outdoor label", 29);
            }
          }
          kdebug_trace();
          if ((__p[23] & 0x80000000) != 0)
            operator delete(*(void **)__p);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v193 = sub_2241471F8();
            v194 = v193[2];
            if (!v194)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v194 = v193[2];
            }
            v195 = *(_QWORD *)(v194 + 64);
            v196 = (std::mutex *)(v195 + 32);
            std::mutex::lock((std::mutex *)(v195 + 32));
            v198 = *(_QWORD *)(v195 + 96);
            v197 = *(_QWORD *)(v195 + 104);
            std::mutex::unlock(v196);
            if (v198 != v197)
            {
              *(_QWORD *)v447 = "cv3d.recon.";
              *(_QWORD *)&v447[8] = 11;
              *(_QWORD *)&v447[16] = "Stats.Occupancy.Transformer";
              *(_QWORD *)&v447[24] = 27;
              sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v429);
              v199 = HIBYTE(v429.__r_.__value_.__r.__words[2]);
              v200 = v429.__r_.__value_.__r.__words[0];
              sub_2241471F8();
              if (v199 >= 0)
                v201 = &v429;
              else
                v201 = (std::string *)v200;
              v202 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v201);
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v202 + 24))(v202))
              {
                v203 = a1;
                memset(__p, 0, sizeof(__p));
                LODWORD(v434) = 728325616;
                kdebug_trace();
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v202 + 24))(v202)
                  && (*(_QWORD *)&v441 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0),
                      *((_QWORD *)&v441 + 1) = 2,
                      v204 = sub_2241471F8(),
                      (*(unsigned int (**)(uint64_t))(*(_QWORD *)v202 + 24))(v202)))
                {
                  v205 = v13[1];
                  *(_OWORD *)v447 = *v13;
                  *(_OWORD *)&v447[16] = v205;
                  v206 = v13[3];
                  *(_OWORD *)&v447[32] = v13[2];
                  *(_OWORD *)v448 = v206;
                  sub_2238C5614(v447);
                  v442.__r_.__value_.__s.__data_[0] = 0;
                  v443 = 0;
                  sub_223937C0C((uint64_t)&v444, (__int128 *)&v442, &v441, &v446);
                  if (v443 && SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v442.__r_.__value_.__l.__data_);
                  if (SHIBYTE(v445) < 0)
                    operator delete(v444);
                  v207 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v202 + 56))(v202);
                  v208 = *v207;
                  v209 = (std::__shared_weak_count *)v207[1];
                  if (v209)
                  {
                    v210 = (unint64_t *)&v209->__shared_owners_;
                    do
                      v211 = __ldxr(v210);
                    while (__stxr(v211 + 1, v210));
                  }
                  v212 = *(_OWORD *)&v446.__r_.__value_.__r.__words[1];
                  v444 = (int **)&off_24EC6A3B8;
                  v445 = *(_OWORD *)&v446.__r_.__value_.__r.__words[1];
                  *(_OWORD *)&v446.__r_.__value_.__r.__words[1] = 0uLL;
                  *(_QWORD *)v447 = v208;
                  *(_QWORD *)&v447[8] = v209;
                  if (v209)
                  {
                    v213 = (unint64_t *)&v209->__shared_owners_;
                    do
                      v214 = __ldxr(v213);
                    while (__stxr(v214 + 1, v213));
                  }
                  *(_QWORD *)&v447[16] = &off_24EC6A3B8;
                  *(_OWORD *)&v447[24] = v212;
                  if (*((_QWORD *)&v212 + 1))
                  {
                    v215 = (unint64_t *)(*((_QWORD *)&v212 + 1) + 8);
                    do
                      v216 = __ldxr(v215);
                    while (__stxr(v216 + 1, v215));
                  }
                  (*(void (**)(uint64_t *, _BYTE *))(*v204 + 16))(v204, v447);
                  sub_2241231D8((uint64_t)&v447[16]);
                  v217 = *(std::__shared_weak_count **)&v447[8];
                  a1 = v203;
                  if (*(_QWORD *)&v447[8])
                  {
                    v218 = (unint64_t *)(*(_QWORD *)&v447[8] + 8);
                    do
                      v219 = __ldaxr(v218);
                    while (__stlxr(v219 - 1, v218));
                    if (!v219)
                    {
                      ((void (*)(std::__shared_weak_count *))v217->__on_zero_shared)(v217);
                      std::__shared_weak_count::__release_weak(v217);
                    }
                  }
                  sub_2241231D8((uint64_t)&v444);
                  if (v209)
                  {
                    v220 = (unint64_t *)&v209->__shared_owners_;
                    do
                      v221 = __ldaxr(v220);
                    while (__stlxr(v221 - 1, v220));
                    if (!v221)
                    {
                      ((void (*)(std::__shared_weak_count *))v209->__on_zero_shared)(v209);
                      std::__shared_weak_count::__release_weak(v209);
                    }
                  }
                  sub_2241231D8((uint64_t)&v446);
                }
                else
                {
                  a1 = v203;
                }
                kdebug_trace();
              }
              if (SHIBYTE(v429.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v429.__r_.__value_.__l.__data_);
            }
          }
          v222 = (int32x2_t *)(a2 + 1640);
          if (*(_BYTE *)(a1 + 152))
          {
            sub_223921E28(a1, (unsigned __int8 **)a2, a4 + 184, a4 + 208, v426);
            v447[23] = 9;
            strcpy(v447, "Occupancy");
            sub_22391D400(a1, (uint64_t *)v447, (uint64_t *)(a1 + 40488));
            if ((v447[23] & 0x80000000) != 0)
            {
              operator delete(*(void **)v447);
              if (!*(_BYTE *)(a2 + 1848))
                goto LABEL_435;
            }
            else if (!*(_BYTE *)(a2 + 1848))
            {
LABEL_435:
              *(_QWORD *)v447 = "cv3d.recon.";
              *(_QWORD *)&v447[8] = 11;
              *(_QWORD *)&v447[16] = "Stats.Occupancy.TimeOccupancyMapper";
              *(_QWORD *)&v447[24] = 35;
              sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v442);
              sub_224569D7C();
              sub_224569A80();
              if (os_variant_has_internal_diagnostics())
              {
                v367 = sub_2241471F8();
                v368 = v367[2];
                if (!v368)
                {
                  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
                  {
                    abort();
                  }
                  v368 = v367[2];
                }
                v369 = *(_QWORD *)(v368 + 64);
                v370 = (std::mutex *)(v369 + 32);
                std::mutex::lock((std::mutex *)(v369 + 32));
                v372 = *(_QWORD *)(v369 + 96);
                v371 = *(_QWORD *)(v369 + 104);
                std::mutex::unlock(v370);
                if (v372 != v371)
                {
                  v373 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
                  v374 = (std::string *)v442.__r_.__value_.__r.__words[0];
                  sub_2241471F8();
                  v375 = v373 >= 0 ? &v442 : v374;
                  v376 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v375);
                  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v376 + 24))(v376))
                  {
                    memset(v447, 0, 32);
                    *(_DWORD *)&v447[32] = 728325608;
                    kdebug_trace();
                    v377 = (float)(std::chrono::steady_clock::now().__d_.__rep_ - rep) / 1000000.0;
                    rep = std::chrono::steady_clock::now().__d_.__rep_;
                    *(float *)&v444 = v377;
                    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v376 + 24))(v376))
                    {
                      *(_QWORD *)__p = operator new(0x28uLL);
                      *(_OWORD *)&__p[8] = xmmword_2245B8D40;
                      strcpy(*(char **)__p, "Func-AllocateAndIntegrateKeyframes");
                      v446.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                      v446.__r_.__value_.__l.__size_ = 2;
                      v378 = sub_2241471F8();
                      sub_2231FBBA8((uint64_t)v378, v376, (float *)&v444, (uint64_t)__p, (__int128 *)&v446);
                      if ((__p[23] & 0x80000000) != 0)
                        operator delete(*(void **)__p);
                    }
                    kdebug_trace();
                  }
                }
              }
              memset(v447, 0, 32);
              *(_DWORD *)&v447[32] = 728325624;
              kdebug_trace();
              v379 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                v379 = v442.__r_.__value_.__l.__size_;
              if (v379 >= 0x11)
              {
                v380 = &v442;
                if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  v380 = (std::string *)v442.__r_.__value_.__r.__words[0];
                v381 = v380->__r_.__value_.__r.__words[0];
                v382 = v380->__r_.__value_.__l.__size_;
                v383 = v380->__r_.__value_.__s.__data_[16];
                if (v381 == 0x6365722E64337663 && v382 == 0x73746174532E6E6FLL && v383 == 46)
                {
                  v386 = sub_223187510();
                  if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v387 = &v442;
                  else
                    v387 = (std::string *)v442.__r_.__value_.__r.__words[0];
                  if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v388 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
                  else
                    v388 = v442.__r_.__value_.__l.__size_;
                  v389 = (float)(std::chrono::steady_clock::now().__d_.__rep_ - rep) / 1000000.0;
                  std::chrono::steady_clock::now();
                  *(float *)__p = v389;
                  sub_2231897A8((uint64_t *)v386, v387, v388, (float *)__p, (uint64_t)"Func-AllocateAndIntegrateKeyframes", 34);
                }
              }
              kdebug_trace();
              if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v442.__r_.__value_.__l.__data_);
              *(_QWORD *)v447 = "cv3d.recon.";
              *(_QWORD *)&v447[8] = 11;
              *(_QWORD *)&v447[16] = "Stats.PRR.Execution";
              *(_QWORD *)&v447[24] = 19;
              sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v442);
              sub_224569D7C();
              sub_224569A80();
              if (os_variant_has_internal_diagnostics())
              {
                v390 = sub_2241471F8();
                v391 = v390[2];
                if (!v391)
                {
                  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
                  {
                    abort();
                  }
                  v391 = v390[2];
                }
                v392 = *(_QWORD *)(v391 + 64);
                v393 = (std::mutex *)(v392 + 32);
                std::mutex::lock((std::mutex *)(v392 + 32));
                v395 = *(_QWORD *)(v392 + 96);
                v394 = *(_QWORD *)(v392 + 104);
                std::mutex::unlock(v393);
                if (v395 != v394)
                {
                  v396 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
                  v397 = (std::string *)v442.__r_.__value_.__r.__words[0];
                  sub_2241471F8();
                  v398 = v396 >= 0 ? &v442 : v397;
                  v399 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v398);
                  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v399 + 24))(v399))
                  {
                    memset(v447, 0, 32);
                    *(_DWORD *)&v447[32] = 728325608;
                    kdebug_trace();
                    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v399 + 24))(v399))
                    {
                      __p[23] = 14;
                      strcpy(__p, "should run PRR");
                      v446.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                      v446.__r_.__value_.__l.__size_ = 2;
                      v400 = sub_2241471F8();
                      sub_22393AEE8((uint64_t)v400, v399, (char *)(a1 + 40616), (uint64_t)__p, (__int128 *)&v446);
                      if ((__p[23] & 0x80000000) != 0)
                        operator delete(*(void **)__p);
                    }
                    kdebug_trace();
                  }
                }
              }
              memset(v447, 0, 32);
              *(_DWORD *)&v447[32] = 728325624;
              kdebug_trace();
              v401 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                v401 = v442.__r_.__value_.__l.__size_;
              if (v401 >= 0x11)
              {
                v402 = &v442;
                if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                  v402 = (std::string *)v442.__r_.__value_.__r.__words[0];
                v403 = v402->__r_.__value_.__r.__words[0];
                v404 = v402->__r_.__value_.__l.__size_;
                v405 = v402->__r_.__value_.__s.__data_[16];
                if (v403 == 0x6365722E64337663 && v404 == 0x73746174532E6E6FLL && v405 == 46)
                {
                  v408 = sub_223187510();
                  if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v409 = &v442;
                  else
                    v409 = (std::string *)v442.__r_.__value_.__r.__words[0];
                  if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v410 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
                  else
                    v410 = v442.__r_.__value_.__l.__size_;
                  sub_223189538((uint64_t *)v408, v409, v410, (char *)(a1 + 40616), (uint64_t)"should run PRR", 14);
                }
              }
              kdebug_trace();
              if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v442.__r_.__value_.__l.__data_);
              kdebug_trace();
              v447[23] = 16;
              strcpy(v447, "OccupancyCompute");
              __p[23] = 9;
              strcpy(__p, "Occupancy");
              sub_22391CC34((uint64_t *)v447, (uint64_t *)__p, (uint64_t)v439);
              if ((__p[23] & 0x80000000) != 0)
              {
                operator delete(*(void **)__p);
                if ((v447[23] & 0x80000000) == 0)
                  goto LABEL_507;
              }
              else if ((v447[23] & 0x80000000) == 0)
              {
LABEL_507:
                sub_223198030((uint64_t)&v430, v431);
                return;
              }
              operator delete(*(void **)v447);
              goto LABEL_507;
            }
            if (*(_BYTE *)(a2 + 1768))
            {
              v225.i32[0] = *(_DWORD *)(a2 + 1648);
              v226 = *(float32x2_t *)(a2 + 1656);
              v227 = *(float32x2_t *)(a2 + 1672);
              v223.i32[0] = *(_DWORD *)(a2 + 1680);
              v224.i64[0] = *(_QWORD *)(a2 + 1688);
              v224.i32[2] = *(_DWORD *)(a2 + 1696);
              v228 = (int8x16_t)vnegq_f32(v224);
              v229 = *(float32x4_t *)(a2 + 1360);
              v230 = vmulq_n_f32(v229, v225.f32[0]);
              v225.i32[1] = *(_DWORD *)(a2 + 1664);
              v231 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*v222, (int32x2_t)v226), *(float *)v228.i32), (float32x2_t)vzip2_s32(*v222, (int32x2_t)v226), *(float32x2_t *)v224.f32, 1), v225, v224, 2);
              v225.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v227, *(float32x2_t *)v228.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v227, 1), *(float32x2_t *)v224.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v228, v228, 8uLL), v223).u32[0];
              v232 = *(float32x4_t *)(a2 + 1376);
              v233 = *(float32x4_t *)(a2 + 1392);
              v234 = *(float32x4_t *)(a2 + 1408);
              v235 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v229, COERCE_FLOAT(*v222)), v232, v226.f32[0]), v233, v227.f32[0]), (float32x4_t)0, v234);
              v236 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v229, (float32x2_t)*v222, 1), v232, v226, 1), v233, v227, 1), (float32x4_t)0, v234);
              v237 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v230, v232, v225.f32[1]), v233, v223.f32[0]), (float32x4_t)0, v234);
              v238 = vaddq_f32(v234, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v229, v231.f32[0]), v232, v231, 1), v233, v225.f32[0]));
              v239 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v235, COERCE_FLOAT(*(_OWORD *)(a2 + 1704))), v236, *(float32x2_t *)(a2 + 1704), 1), v237, *(float32x4_t *)(a2 + 1704), 2), v238, *(float32x4_t *)(a2 + 1704), 3);
              v240 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v235, COERCE_FLOAT(*(_OWORD *)(a2 + 1720))), v236, *(float32x2_t *)(a2 + 1720), 1), v237, *(float32x4_t *)(a2 + 1720), 2), v238, *(float32x4_t *)(a2 + 1720), 3);
              v241 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v235, COERCE_FLOAT(*(_OWORD *)(a2 + 1736))), v236, *(float32x2_t *)(a2 + 1736), 1), v237, *(float32x4_t *)(a2 + 1736), 2), v238, *(float32x4_t *)(a2 + 1736), 3);
              v242 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v235, COERCE_FLOAT(*(_OWORD *)(a2 + 1752))), v236, *(float32x2_t *)(a2 + 1752), 1), v237, *(float32x4_t *)(a2 + 1752), 2), v238, *(float32x4_t *)(a2 + 1752), 3);
            }
            else
            {
              v239 = *(int32x4_t *)(a2 + 1360);
              v240 = *(int32x4_t *)(a2 + 1376);
              v241 = *(int8x16_t *)(a2 + 1392);
              v242 = *(float32x4_t *)(a2 + 1408);
            }
            v243 = (int8x16_t)vnegq_f32(v242);
            v244 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v239.i8, *(int32x2_t *)v240.i8), *(float *)v243.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)v239.i8, *(int32x2_t *)v240.i8), *(float32x2_t *)v242.f32, 1), (float32x2_t)*(_OWORD *)&vzip2q_s32(v239, v240), v242, 2);
            v245 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)v241.i8, *(float32x2_t *)v243.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v241.i8, 1), *(float32x2_t *)v242.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v243, v243, 8uLL), (float32x2_t)*(_OWORD *)&vextq_s8(v241, v241, 8uLL));
            v427 = (uint64_t)v245;
            v246 = (v244.i32[0] & 0x7FFFFFFFu) < 0x7F800000;
            v424 = v244;
            if ((v244.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
            {
              v246 = (v244.i32[1] & 0x7FFFFFFFu) < 0x7F800000;
              if ((v244.i32[1] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                v246 = (v245.i32[0] & 0x7FFFFFFFu) < 0x7F800000;
            }
            v247 = *(_QWORD *)(*(_QWORD *)(v428 + 80) + 8);
            if (!v246
              && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 372, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
            {
              abort();
            }
            *(float32x2_t *)v248.f32 = v424;
            v248.i64[1] = v427;
            v249 = vmulq_n_f32(v248, COERCE_FLOAT(*(_QWORD *)(a1 + 452)));
            v250 = (const float *)(v247 + 1656);
            v251 = *(_DWORD *)(v247 + 8);
            v249.f32[0] = (float)((int)vcvtms_s32_f32(v249.f32[0]) / v251);
            v249.f32[1] = (float)((int)vcvtms_s32_f32(v249.f32[1]) / v251);
            v249.f32[2] = (float)((int)vcvtms_s32_f32(v249.f32[2]) / v251);
            v252.i64[0] = 0x3F0000003F000000;
            v252.i64[1] = 0x3F0000003F000000;
            v450 = vld3_f32(v250);
            v253 = vaddq_f32(v249, v252);
            *(int32x2_t *)v447 = vcvt_s32_f32(vadd_f32(vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(v450.val[0], v253.f32[0]), v450.val[1], *(float32x2_t *)v253.f32, 1), v450.val[2], v253, 2), (float32x2_t)0xBF000000BF000000));
            *(_DWORD *)&v447[8] = 0;
            *(_QWORD *)__p = v447;
            v254 = sub_223A18044((float *)(v247 + 216), (int *)v447, (uint64_t)&unk_2245BA939, (uint64_t **)__p);
            *(uint64_t *)((char *)v254 + 28) = (uint64_t)vmla_n_f32(vmla_lane_f32(vmul_n_f32(v450.val[0], v424.f32[0]), v450.val[1], v424, 1), v450.val[2], *(float *)&v427);
            *((_BYTE *)v254 + 36) = 0;
          }
          if (!*(_BYTE *)(a2 + 1848))
            goto LABEL_435;
          *(_QWORD *)v447 = "cv3d.recon.";
          *(_QWORD *)&v447[8] = 11;
          *(_QWORD *)&v447[16] = "Stats.Occupancy.IOClassification";
          *(_QWORD *)&v447[24] = 32;
          sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v442);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v255 = sub_2241471F8();
            v256 = v255[2];
            if (!v256)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v256 = v255[2];
            }
            v257 = *(_QWORD *)(v256 + 64);
            v258 = (std::mutex *)(v257 + 32);
            std::mutex::lock((std::mutex *)(v257 + 32));
            v260 = *(_QWORD *)(v257 + 96);
            v259 = *(_QWORD *)(v257 + 104);
            std::mutex::unlock(v258);
            if (v260 != v259)
            {
              v261 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              v262 = (std::string *)v442.__r_.__value_.__r.__words[0];
              sub_2241471F8();
              v263 = v261 >= 0 ? &v442 : v262;
              v264 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v263);
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v264 + 24))(v264))
              {
                memset(v447, 0, 32);
                *(_DWORD *)&v447[32] = 728325608;
                kdebug_trace();
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v264 + 24))(v264))
                {
                  *(_QWORD *)__p = operator new(0x28uLL);
                  *(_OWORD *)&__p[8] = xmmword_2245C77E0;
                  strcpy(*(char **)__p, "input_frame indoor/outdoor label");
                  v446.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                  v446.__r_.__value_.__l.__size_ = 2;
                  v265 = sub_2241471F8();
                  sub_2238FB548((uint64_t)v265, v264, (char *)(a2 + 1240), (uint64_t)__p, (__int128 *)&v446);
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                }
                kdebug_trace();
              }
            }
          }
          memset(v447, 0, 32);
          *(_DWORD *)&v447[32] = 728325624;
          kdebug_trace();
          v266 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
          if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v266 = v442.__r_.__value_.__l.__size_;
          if (v266 >= 0x11)
          {
            v267 = &v442;
            if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v267 = (std::string *)v442.__r_.__value_.__r.__words[0];
            v268 = v267->__r_.__value_.__r.__words[0];
            v269 = v267->__r_.__value_.__l.__size_;
            v270 = v267->__r_.__value_.__s.__data_[16];
            if (v268 == 0x6365722E64337663 && v269 == 0x73746174532E6E6FLL && v270 == 46)
            {
              v273 = sub_223187510();
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v274 = &v442;
              else
                v274 = (std::string *)v442.__r_.__value_.__r.__words[0];
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v275 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              else
                v275 = v442.__r_.__value_.__l.__size_;
              sub_22387FA8C(v273, v274, v275, (unsigned __int8 *)(a2 + 1240), (uint64_t)"input_frame indoor/outdoor label", 32);
            }
          }
          kdebug_trace();
          if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v442.__r_.__value_.__l.__data_);
          *(_QWORD *)v447 = "cv3d.recon.";
          *(_QWORD *)&v447[8] = 11;
          *(_QWORD *)&v447[16] = "Stats.Occupancy.IOClassification";
          *(_QWORD *)&v447[24] = 32;
          sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v442);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v276 = sub_2241471F8();
            v277 = v276[2];
            if (!v277)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v277 = v276[2];
            }
            v278 = *(_QWORD *)(v277 + 64);
            v279 = (std::mutex *)(v278 + 32);
            std::mutex::lock((std::mutex *)(v278 + 32));
            v281 = *(_QWORD *)(v278 + 96);
            v280 = *(_QWORD *)(v278 + 104);
            std::mutex::unlock(v279);
            if (v281 != v280)
            {
              v282 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              v283 = (std::string *)v442.__r_.__value_.__r.__words[0];
              sub_2241471F8();
              v284 = v282 >= 0 ? &v442 : v283;
              v285 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v284);
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v285 + 24))(v285))
              {
                memset(v447, 0, 32);
                *(_DWORD *)&v447[32] = 728325608;
                kdebug_trace();
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v285 + 24))(v285))
                {
                  *(_QWORD *)__p = operator new(0x20uLL);
                  *(_OWORD *)&__p[8] = xmmword_2245B8D70;
                  strcpy(*(char **)__p, "input_frame io_prob indoor");
                  v446.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                  v446.__r_.__value_.__l.__size_ = 2;
                  v286 = sub_2241471F8();
                  sub_22361FE58((uint64_t)v286, v285, (int *)(a2 + 1248), (uint64_t)__p, (__int128 *)&v446);
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                }
                kdebug_trace();
              }
            }
          }
          memset(v447, 0, 32);
          *(_DWORD *)&v447[32] = 728325624;
          kdebug_trace();
          v287 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
          if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v287 = v442.__r_.__value_.__l.__size_;
          if (v287 >= 0x11)
          {
            v288 = &v442;
            if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v288 = (std::string *)v442.__r_.__value_.__r.__words[0];
            v289 = v288->__r_.__value_.__r.__words[0];
            v290 = v288->__r_.__value_.__l.__size_;
            v291 = v288->__r_.__value_.__s.__data_[16];
            if (v289 == 0x6365722E64337663 && v290 == 0x73746174532E6E6FLL && v291 == 46)
            {
              v294 = sub_223187510();
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v295 = &v442;
              else
                v295 = (std::string *)v442.__r_.__value_.__r.__words[0];
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v296 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              else
                v296 = v442.__r_.__value_.__l.__size_;
              sub_2231897A8((uint64_t *)v294, v295, v296, (float *)(a2 + 1248), (uint64_t)"input_frame io_prob indoor", 26);
            }
          }
          kdebug_trace();
          if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v442.__r_.__value_.__l.__data_);
          *(_QWORD *)v447 = "cv3d.recon.";
          *(_QWORD *)&v447[8] = 11;
          *(_QWORD *)&v447[16] = "Stats.Occupancy.IOClassification";
          *(_QWORD *)&v447[24] = 32;
          sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v442);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v297 = sub_2241471F8();
            v298 = v297[2];
            if (!v298)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v298 = v297[2];
            }
            v299 = *(_QWORD *)(v298 + 64);
            v300 = (std::mutex *)(v299 + 32);
            std::mutex::lock((std::mutex *)(v299 + 32));
            v302 = *(_QWORD *)(v299 + 96);
            v301 = *(_QWORD *)(v299 + 104);
            std::mutex::unlock(v300);
            if (v302 != v301)
            {
              v303 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              v304 = (std::string *)v442.__r_.__value_.__r.__words[0];
              sub_2241471F8();
              v305 = v303 >= 0 ? &v442 : v304;
              v306 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v305);
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v306 + 24))(v306))
              {
                memset(v447, 0, 32);
                *(_DWORD *)&v447[32] = 728325608;
                kdebug_trace();
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v306 + 24))(v306))
                {
                  *(_QWORD *)__p = operator new(0x20uLL);
                  *(_OWORD *)&__p[8] = xmmword_2245B8D50;
                  strcpy(*(char **)__p, "input_frame io_prob outdoor");
                  v446.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                  v446.__r_.__value_.__l.__size_ = 2;
                  v307 = sub_2241471F8();
                  sub_22361FE58((uint64_t)v307, v306, (int *)(a2 + 1252), (uint64_t)__p, (__int128 *)&v446);
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                }
                kdebug_trace();
              }
            }
          }
          memset(v447, 0, 32);
          *(_DWORD *)&v447[32] = 728325624;
          kdebug_trace();
          v308 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
          if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v308 = v442.__r_.__value_.__l.__size_;
          if (v308 >= 0x11)
          {
            v309 = &v442;
            if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v309 = (std::string *)v442.__r_.__value_.__r.__words[0];
            v310 = v309->__r_.__value_.__r.__words[0];
            v311 = v309->__r_.__value_.__l.__size_;
            v312 = v309->__r_.__value_.__s.__data_[16];
            if (v310 == 0x6365722E64337663 && v311 == 0x73746174532E6E6FLL && v312 == 46)
            {
              v315 = sub_223187510();
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v316 = &v442;
              else
                v316 = (std::string *)v442.__r_.__value_.__r.__words[0];
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v317 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              else
                v317 = v442.__r_.__value_.__l.__size_;
              sub_2231897A8((uint64_t *)v315, v316, v317, (float *)(a2 + 1252), (uint64_t)"input_frame io_prob outdoor", 27);
            }
          }
          kdebug_trace();
          if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v442.__r_.__value_.__l.__data_);
          *(_QWORD *)v447 = "cv3d.recon.";
          *(_QWORD *)&v447[8] = 11;
          *(_QWORD *)&v447[16] = "Stats.Occupancy.IOClassification";
          *(_QWORD *)&v447[24] = 32;
          sub_2231A9820((uint64_t)v447, (uint64_t)&v447[32], 0, 0, &v442);
          sub_224569D7C();
          sub_224569A80();
          if (os_variant_has_internal_diagnostics())
          {
            v318 = sub_2241471F8();
            v319 = v318[2];
            if (!v319)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v319 = v318[2];
            }
            v320 = *(_QWORD *)(v319 + 64);
            v321 = (std::mutex *)(v320 + 32);
            std::mutex::lock((std::mutex *)(v320 + 32));
            v323 = *(_QWORD *)(v320 + 96);
            v322 = *(_QWORD *)(v320 + 104);
            std::mutex::unlock(v321);
            if (v323 != v322)
            {
              v324 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              v325 = (std::string *)v442.__r_.__value_.__r.__words[0];
              sub_2241471F8();
              v326 = v324 >= 0 ? &v442 : v325;
              v327 = (*(uint64_t (**)(uint64_t *, std::string *))(qword_2557952E0 + 48))(&qword_2557952E0, v326);
              if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v327 + 24))(v327))
              {
                memset(v447, 0, 32);
                *(_DWORD *)&v447[32] = 728325608;
                kdebug_trace();
                if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v327 + 24))(v327))
                {
                  *(_QWORD *)__p = operator new(0x20uLL);
                  *(_OWORD *)&__p[8] = xmmword_2245C6420;
                  strcpy(*(char **)__p, "input_frame io_prob no_context");
                  v446.__r_.__value_.__r.__words[0] = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
                  v446.__r_.__value_.__l.__size_ = 2;
                  v328 = sub_2241471F8();
                  sub_22361FE58((uint64_t)v328, v327, (int *)(a2 + 1244), (uint64_t)__p, (__int128 *)&v446);
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                }
                kdebug_trace();
              }
            }
          }
          memset(v447, 0, 32);
          *(_DWORD *)&v447[32] = 728325624;
          kdebug_trace();
          v329 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
          if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v329 = v442.__r_.__value_.__l.__size_;
          if (v329 >= 0x11)
          {
            v330 = &v442;
            if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v330 = (std::string *)v442.__r_.__value_.__r.__words[0];
            v331 = v330->__r_.__value_.__r.__words[0];
            v332 = v330->__r_.__value_.__l.__size_;
            v333 = v330->__r_.__value_.__s.__data_[16];
            if (v331 == 0x6365722E64337663 && v332 == 0x73746174532E6E6FLL && v333 == 46)
            {
              v336 = sub_223187510();
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v337 = &v442;
              else
                v337 = (std::string *)v442.__r_.__value_.__r.__words[0];
              if ((v442.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v338 = HIBYTE(v442.__r_.__value_.__r.__words[2]);
              else
                v338 = v442.__r_.__value_.__l.__size_;
              sub_2231897A8((uint64_t *)v336, v337, v338, (float *)(a2 + 1244), (uint64_t)"input_frame io_prob no_context", 30);
            }
          }
          kdebug_trace();
          if (SHIBYTE(v442.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v442.__r_.__value_.__l.__data_);
            if (*(_BYTE *)(a2 + 1768))
              goto LABEL_431;
          }
          else if (*(_BYTE *)(a2 + 1768))
          {
LABEL_431:
            v341.i32[0] = *(_DWORD *)(a2 + 1648);
            v342 = *(float32x2_t *)(a2 + 1656);
            v343 = *(float32x2_t *)(a2 + 1672);
            v339.i32[0] = *(_DWORD *)(a2 + 1680);
            v340.i64[0] = *(_QWORD *)(a2 + 1688);
            v340.i32[2] = *(_DWORD *)(a2 + 1696);
            v344 = (int8x16_t)vnegq_f32(v340);
            v345 = *(float32x4_t *)(a2 + 1360);
            v346 = vmulq_n_f32(v345, v341.f32[0]);
            v341.i32[1] = *(_DWORD *)(a2 + 1664);
            v347 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*v222, (int32x2_t)v342), *(float *)v344.i32), (float32x2_t)vzip2_s32(*v222, (int32x2_t)v342), *(float32x2_t *)v340.f32, 1), v341, v340, 2);
            v341.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v343, *(float32x2_t *)v344.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v343, 1), *(float32x2_t *)v340.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v344, v344, 8uLL), v339).u32[0];
            v348 = *(float32x4_t *)(a2 + 1376);
            v349 = *(float32x4_t *)(a2 + 1392);
            v350 = *(float32x4_t *)(a2 + 1408);
            v351 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v345, COERCE_FLOAT(*v222)), v348, v342.f32[0]), v349, v343.f32[0]), (float32x4_t)0, v350);
            v352 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v345, (float32x2_t)*v222, 1), v348, v342, 1), v349, v343, 1), (float32x4_t)0, v350);
            v353 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v346, v348, v341.f32[1]), v349, v339.f32[0]), (float32x4_t)0, v350);
            v354 = vaddq_f32(v350, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v345, v347.f32[0]), v348, v347, 1), v349, v341.f32[0]));
            v355 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v351, COERCE_FLOAT(*(_OWORD *)(a2 + 1704))), v352, *(float32x2_t *)(a2 + 1704), 1), v353, *(float32x4_t *)(a2 + 1704), 2), v354, *(float32x4_t *)(a2 + 1704), 3);
            v356 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v351, COERCE_FLOAT(*(_OWORD *)(a2 + 1720))), v352, *(float32x2_t *)(a2 + 1720), 1), v353, *(float32x4_t *)(a2 + 1720), 2), v354, *(float32x4_t *)(a2 + 1720), 3);
            v357 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v351, COERCE_FLOAT(*(_OWORD *)(a2 + 1736))), v352, *(float32x2_t *)(a2 + 1736), 1), v353, *(float32x4_t *)(a2 + 1736), 2), v354, *(float32x4_t *)(a2 + 1736), 3);
            v358 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v351, COERCE_FLOAT(*(_OWORD *)(a2 + 1752))), v352, *(float32x2_t *)(a2 + 1752), 1), v353, *(float32x4_t *)(a2 + 1752), 2), v354, *(float32x4_t *)(a2 + 1752), 3);
LABEL_434:
            v359 = (int8x16_t)vnegq_f32(v358);
            v360 = (float32x2_t)vzip2_s32(*(int32x2_t *)v355.i8, *(int32x2_t *)v356.i8);
            v361 = COERCE_DOUBLE(vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v355.i8, *(int32x2_t *)v356.i8), *(float *)v359.i32), v360, *(float32x2_t *)v358.f32, 1), (float32x2_t)*(_OWORD *)&vzip2q_s32(v355, v356), v358, 2));
            v362 = vmls_lane_f32(vmul_f32(*(float32x2_t *)v357.i8, *(float32x2_t *)v359.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v357.i8, 1), *(float32x2_t *)v358.f32, 1);
            v363 = (float32x4_t)vextq_s8(v357, v357, 8uLL);
            v364 = (float32x2_t)vextq_s8(v359, v359, 8uLL).u64[0];
            v365 = COERCE_DOUBLE(vmla_f32(v362, v364, *(float32x2_t *)v363.f32));
            v366 = *(_QWORD *)(v428 + 80);
            *(_DWORD *)&v447[8] = LODWORD(v365);
            *(double *)v447 = v361;
            sub_2239AF8C4(*(void **)(v366 + 8), a1 + 304, v447, v365, v363, *(double *)&v364, *(double *)v358.i64, *(double *)v359.i64, v361, v360);
            goto LABEL_435;
          }
          v355 = *(int32x4_t *)(a2 + 1360);
          v356 = *(int32x4_t *)(a2 + 1376);
          v357 = *(int8x16_t *)(a2 + 1392);
          v358 = *(float32x4_t *)(a2 + 1408);
          goto LABEL_434;
        }
        v123 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 208) + 24))(*(_QWORD *)(v10 + 208));
        v132 = *(_QWORD *)(v10 + 80);
        if (*(_BYTE *)(v132 + 56))
        {
          v124 = (double)(v8 - *(_QWORD *)(v132 + 48));
          v126.i64[0] = 0x41CDCD6500000000;
          *(double *)v125.i64 = *(double *)(a1 + 168) * 1000000000.0;
          v133 = *(double *)v125.i64 < v124;
          v134 = *(_BYTE *)(v132 + 40);
          if (!v134)
            goto LABEL_129;
        }
        else
        {
          v133 = 1;
          v134 = *(_BYTE *)(v132 + 40);
          if (!v134)
          {
LABEL_129:
            if ((v123 & v133) == 1 && (v134 & 1) == 0)
            {
              v135 = (float32x2_t *)(a1 + 40560);
              v136 = (unsigned int *)(a1 + 304);
              if (*(_BYTE *)(a1 + 298))
                sub_223914A20(v132, (uint64_t)v136, (float32x2_t *)&v429, v135, v8, 1, v124, v125, v126, v127, v128, v129, v130, v131);
              else
                sub_223914C94(v132, v136, (float32x2_t *)&v429, v135, v8, 1, v124, v125, v126, v127, v128, v129, v130, v131);
              v138 = *(_QWORD *)(*(_QWORD *)(v10 + 80) + 8);
              v137.n128_u64[0] = *(_QWORD *)(v138 + 352);
              v137.n128_u32[2] = *(_DWORD *)(v138 + 360);
              v139 = vabsq_f32((float32x4_t)v137);
              v140 = v139.f32[1];
              v141 = v139.f32[1] > v139.f32[0];
              if (v139.f32[1] <= v139.f32[0])
                v140 = v139.f32[0];
              if (v140 < v139.f32[2])
                v141 = 2;
              v142 = a1;
              if (v141 == 1)
              {
                v137.n128_u32[0] = v137.n128_u32[1];
                if (v137.n128_f32[1] < 0.0)
                  v143 = 2;
                else
                  v143 = 3;
              }
              else if (v141)
              {
                v137.n128_u32[0] = *(_DWORD *)(v138 + 352 + 4 * v141);
                if (v137.n128_f32[0] < 0.0)
                  v143 = 4;
                else
                  v143 = 5;
              }
              else
              {
                v143 = v137.n128_f32[0] >= 0.0;
              }
              if (*(_BYTE *)(v142 + 298))
              {
                v423 = v142;
                memset(v447, 0, 24);
                v144 = *(_QWORD *)(v142 + 40808);
                v145 = *(_QWORD *)(v142 + 40816);
                if (v144 != v145)
                {
                  v146 = 0;
                  do
                  {
                    v147 = *(_QWORD *)(v144 + 88);
                    if (v147)
                    {
                      if (v146 >= *(_QWORD *)&v447[16])
                      {
                        v146 = sub_22393654C((uint64_t *)v447, v147);
                      }
                      else
                      {
                        sub_2239367D8(v146, v147);
                        v146 += 144;
                      }
                      *(_QWORD *)&v447[8] = v146;
                    }
                    v144 += 360;
                  }
                  while (v144 != v145);
                }
                v10 = v428;
                (*(void (**)(_QWORD, _BYTE *, uint64_t, __n128))(**(_QWORD **)(v428 + 208) + 32))(*(_QWORD *)(v428 + 208), v447, v143, v137);
                a1 = v423;
                if (*(_QWORD *)v447)
                {
                  sub_2238891A0((uint64_t *)v447);
                  operator delete(*(void **)v447);
                }
              }
              else
              {
                v148 = v142;
                v149 = *(_QWORD *)(v428 + 208);
                sub_223917418((uint64_t *)v447, v138 + 328, (float32x4_t)v137);
                (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)v149 + 32))(v149, v447, v143);
                sub_22391786C((uint64_t *)v447);
                a1 = v148;
                v10 = v428;
              }
            }
            goto LABEL_159;
          }
        }
        v134 = 0;
        LODWORD(v124) = v429.__r_.__value_.__l.__data_;
        v125.i32[0] = *(_DWORD *)(v132 + 16);
        if (*(float *)&v429.__r_.__value_.__l.__data_ >= v125.f32[0])
        {
          v125.i32[0] = *(_DWORD *)(v132 + 28);
          if (*(float *)&v429.__r_.__value_.__l.__data_ <= v125.f32[0])
          {
            v134 = 0;
            LODWORD(v124) = HIDWORD(v429.__r_.__value_.__r.__words[0]);
            v125.i32[0] = *(_DWORD *)(v132 + 20);
            if (*((float *)v429.__r_.__value_.__r.__words + 1) >= v125.f32[0])
            {
              v125.i32[0] = *(_DWORD *)(v132 + 32);
              if (*((float *)v429.__r_.__value_.__r.__words + 1) <= v125.f32[0])
              {
                LODWORD(v124) = v429.__r_.__value_.__r.__words[1];
                v125.i32[0] = *(_DWORD *)(v132 + 24);
                v126.i32[0] = *(_DWORD *)(v132 + 36);
                v134 = *(float *)&v429.__r_.__value_.__r.__words[1] >= v125.f32[0];
                if (*(float *)&v429.__r_.__value_.__r.__words[1] > v126.f32[0])
                  v134 = 0;
              }
            }
          }
        }
        goto LABEL_129;
      }
    }
    memmove(v51, v49, v50);
    goto LABEL_46;
  }
  kdebug_trace();
  v447[23] = 16;
  strcpy(v447, "OccupancyCompute");
  __p[23] = 9;
  strcpy(__p, "Occupancy");
  sub_22391CC34((uint64_t *)v447, (uint64_t *)__p, (uint64_t)v439);
  if ((__p[23] & 0x80000000) == 0)
  {
    if ((v447[23] & 0x80000000) == 0)
      return;
LABEL_29:
    operator delete(*(void **)v447);
    return;
  }
  operator delete(*(void **)__p);
  if ((v447[23] & 0x80000000) != 0)
    goto LABEL_29;
}

void sub_223921808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  if (*(_BYTE *)(v41 - 184))
  {
    if (*(char *)(v41 - 185) < 0)
      operator delete(*(void **)(v41 - 208));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_223921848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41,uint64_t a42,uint64_t a43,void *a44)
{
  uint64_t v44;
  std::__shared_weak_count *v45;
  uint64_t v46;
  std::__shared_weak_count *v48;
  unint64_t *p_shared_owners;
  unint64_t v50;
  unint64_t *v51;
  unint64_t v52;

  sub_2241231D8(v44);
  v48 = *(std::__shared_weak_count **)(v46 - 200);
  if (v48)
  {
    p_shared_owners = (unint64_t *)&v48->__shared_owners_;
    do
      v50 = __ldaxr(p_shared_owners);
    while (__stlxr(v50 - 1, p_shared_owners));
    if (!v50)
    {
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
    }
  }
  sub_2241231D8(v46 - 256);
  if (v45)
  {
    v51 = (unint64_t *)&v45->__shared_owners_;
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
    }
  }
  sub_2241231D8(v46 - 232);
  sub_2231874DC((uint64_t)&a44);
  if (a40 < 0)
  {
    operator delete(__p);
    sub_223198030((uint64_t)&a41, (_QWORD *)a42);
    _Unwind_Resume(a1);
  }
  sub_223198030((uint64_t)&a41, (_QWORD *)a42);
  _Unwind_Resume(a1);
}

void sub_223921D44(uint64_t a1, char *a2)
{
  char *v4;
  uint64_t *v5;
  __int128 v6;
  void *__p;
  __int128 v8;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v4 = (char *)operator new(0x20uLL);
    v8 = xmmword_2245B8E30;
    strcpy(v4, "filtered indoor/outdoor label");
    *(_QWORD *)&v6 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v6 + 1) = 2;
    __p = v4;
    v5 = sub_2241471F8();
    sub_22389549C((uint64_t)v5, a1, a2, (uint64_t)&__p, &v6);
    if (SHIBYTE(v8) < 0)
      operator delete(__p);
  }
}

void sub_223921E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_223921E28(uint64_t a1, unsigned __int8 **a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  float32x2_t v10;
  float32x4_t v11;
  _QWORD *v12;
  int32x2_t *v13;
  int v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  int8x16_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x2_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  int32x4_t v28;
  int32x4_t v29;
  int8x16_t v30;
  float32x4_t v31;
  int v32;
  __int128 v33;
  int8x16_t v34;
  int8x16_t v35;
  int8x16_t v36;
  float32x2_t v37;
  unint64_t v38;
  int32x4_t v39;
  float32x2_t v40;
  __int128 v41;
  float32x2_t v42;
  float32x2_t v43;
  float32x2_t v44;
  int8x16_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x2_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  __int128 v60;
  int8x16_t v61;
  float32x4_t v62;
  float32x4_t v63;
  unsigned int v64;
  float32x4_t *v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  int v68;
  unint64_t *p_shared_owners;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  float32x4_t *v83;
  unsigned __int8 *v84;
  int v85;
  uint64_t **v86;
  unsigned int v87;
  unsigned int v88;
  BOOL v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  uint64_t **v93;
  unsigned int v94;
  unsigned int v95;
  BOOL v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  void *v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  int v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  const char *v108;
  size_t v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  const char *v112;
  size_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  NSObject *v118;
  uint64_t v119;
  uint64_t v120;
  size_t v121;
  std::__shared_weak_count_vtbl *v122;
  std::__shared_weak_count *v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  const char *v131;
  uint64_t v132;
  std::__shared_weak_count *v133;
  unint64_t *v134;
  unint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  uint64_t (**v139)();
  std::__shared_weak_count *v140;
  unint64_t *v141;
  unint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  std::__shared_weak_count *v146;
  unint64_t *v147;
  unint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  void *v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  int32x4_t v156;
  int32x4_t v157;
  float32x2_t v158;
  float32x4_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  int v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  const char *v167;
  size_t v168;
  unsigned __int8 v169;
  unsigned __int8 v170;
  const char *v171;
  size_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  NSObject *v177;
  uint64_t v178;
  uint64_t v179;
  size_t v180;
  std::__shared_weak_count_vtbl *v181;
  std::__shared_weak_count *v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  const char *v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  uint64_t (**v198)();
  std::__shared_weak_count *v199;
  unint64_t *v200;
  unint64_t v201;
  std::__shared_weak_count *v202;
  unint64_t *v203;
  unint64_t v204;
  std::__shared_weak_count *v205;
  unint64_t *v206;
  unint64_t v207;
  std::__shared_weak_count *v208;
  unint64_t *v209;
  unint64_t v210;
  void *v211;
  std::__shared_weak_count *v212;
  unint64_t *v213;
  unint64_t v214;
  float32x4_t v215;
  int8x16_t v216;
  int8x16_t v217;
  float32x4_t v218;
  int8x16_t v219;
  float32x4_t v220;
  float32x4_t v221;
  float32x4_t v222;
  float32x4_t v223;
  float32x4_t v224;
  float32x4_t v225;
  float32x4_t v226;
  float32x4_t v227;
  uint64_t *v228;
  float32x2_t *v229;
  int32x4_t v230;
  int32x4_t v231;
  float32x4_t v232;
  int8x16_t v233;
  float32x4_t v234;
  int8x16_t v235;
  int8x16_t v236;
  float32x2_t v237;
  float32x4_t v238;
  uint64_t v239;
  float32x4_t v240;
  float32x4_t v241;
  float32x4_t v242;
  int8x16_t v243;
  float32x4_t v244;
  int32x4_t v245;
  int32x4_t v246;
  int8x16_t v247;
  float32x4_t v248;
  float32x4_t v249;
  uint64_t v250;
  int8x16_t v251;
  int32x4_t v252;
  int32x4_t v253;
  __int128 v254;
  unint64_t v255;
  std::__shared_weak_count *v256;
  unint64_t *v257;
  unint64_t v258;
  __int16 v259;
  unint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  uint64_t v265;
  std::__shared_weak_count *v266;
  unint64_t *v267;
  unint64_t v268;
  __int16 v269;
  unint64_t v270;
  uint64_t v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  uint64_t v275;
  unsigned int v276;
  int v277;
  BOOL v278;
  __int8 v279;
  int v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  const char *v285;
  size_t v286;
  unsigned __int8 v287;
  std::__shared_weak_count *v288;
  unint64_t *v289;
  unint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  std::__shared_weak_count *v294;
  unint64_t *v295;
  unint64_t v296;
  std::__shared_weak_count *v297;
  unint64_t *v298;
  unint64_t v299;
  std::__shared_weak_count *v300;
  unint64_t *v301;
  unint64_t v302;
  std::__shared_weak_count *v303;
  unint64_t *v304;
  unint64_t v305;
  std::__shared_weak_count *v306;
  unint64_t *v307;
  unint64_t v308;
  unsigned __int8 v309;
  const char *v310;
  size_t v311;
  _BYTE *v312;
  uint64_t v313;
  uint64_t v314;
  _BYTE *v315;
  NSObject *v316;
  uint64_t v317;
  uint64_t v318;
  size_t v319;
  std::__shared_weak_count_vtbl *v320;
  std::__shared_weak_count *v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  unint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  const char *v329;
  void *v330;
  std::__shared_weak_count *v331;
  unint64_t *v332;
  unint64_t v333;
  std::__shared_weak_count *v334;
  unint64_t *v335;
  unint64_t v336;
  uint64_t v337;
  std::__shared_weak_count *v338;
  unint64_t *v339;
  unint64_t v340;
  std::__shared_weak_count *v341;
  unint64_t *v342;
  unint64_t v343;
  std::__shared_weak_count *v344;
  unint64_t *v345;
  unint64_t v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  void *v350;
  std::__shared_weak_count *v351;
  unint64_t *v352;
  unint64_t v353;
  _QWORD *v354;
  _QWORD *v355;
  uint64_t v356;
  uint64_t i;
  _QWORD *v358;
  _QWORD *v359;
  __int32 v360;
  _QWORD *v361;
  _QWORD *v362;
  uint64_t *v363;
  uint64_t v364;
  uint64_t v365;
  std::mutex *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  std::string::size_type size;
  std::string *v371;
  std::string::size_type v372;
  std::string::size_type v373;
  int v374;
  __n128 *v377;
  std::string *v378;
  size_t v379;
  const char *v380;
  uint64_t v381;
  const char *v382;
  const char *v383;
  int v384;
  uint64_t v385;
  _BYTE *v386;
  uint64_t *v387;
  uint64_t v388;
  unsigned __int8 *v389;
  uint64_t v390;
  uint64_t v391;
  unsigned int v392;
  char v393[8];
  uint64_t v394;
  std::__shared_weak_count *v395;
  uint64_t v396;
  __int128 v397;
  __int16 v398;
  uint64_t (**v399)();
  uint64_t v400;
  std::__shared_weak_count *v401;
  uint64_t v402;
  __int128 v403;
  __int16 v404;
  char v405;
  uint64_t (**v406)();
  __int128 v407;
  _BYTE v408[26];
  char v409;
  _BYTE v410[64];
  std::__shared_weak_count *v411;
  _BYTE oslog[48];
  size_t v413;
  unint64_t v414;
  char v415;
  char v416[8];
  unint64_t v417;
  std::__shared_weak_count *v418;
  uint64_t v419;
  __int128 v420;
  __int16 v421;
  void *v422;
  uint64_t (**v423)();
  __int128 v424;
  _OWORD v425[2];
  char v426;
  _BYTE v427[56];
  unsigned __int32 v428;
  int v429;
  std::string v430;
  _OWORD v431[3];
  char v432;
  _BYTE object[48];
  float32x4_t v434;
  std::__shared_weak_count *v435;
  uint64_t v436;
  void *v437[2];
  char v438;
  char v439;
  uint64_t v440;
  int32x2_t v441[4];
  int v442[12];
  char v443;
  uint64_t v444;

  v444 = *MEMORY[0x24BDAC8D0];
  kdebug_trace();
  *(_DWORD *)(a1 + 2880) = 0;
  *(_QWORD *)(a1 + 2872) = 0;
  *(_OWORD *)(a1 + 2856) = 0u;
  kdebug_trace();
  v12 = (_QWORD *)(a1 + 40616);
  v386 = (_BYTE *)(a1 + 40616);
  if (!*((_BYTE *)a2 + 1880) || !*((_BYTE *)a2 + 1848))
  {
    v32 = 0;
    goto LABEL_62;
  }
  v13 = (int32x2_t *)(a2 + 205);
  v14 = *((unsigned __int8 *)a2 + 1768);
  if (*((_BYTE *)a2 + 1768))
  {
    v15.i32[0] = *((_DWORD *)a2 + 412);
    v16 = (float32x2_t)a2[207];
    v17 = (float32x2_t)a2[209];
    v10.i32[0] = *((_DWORD *)a2 + 420);
    v11.i64[0] = (uint64_t)a2[211];
    v11.i32[2] = *((_DWORD *)a2 + 424);
    v18 = (int8x16_t)vnegq_f32(v11);
    v19 = *((float32x4_t *)a2 + 85);
    v20 = vmulq_n_f32(v19, v15.f32[0]);
    v15.i32[1] = *((_DWORD *)a2 + 416);
    v21 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*v13, (int32x2_t)v16), *(float *)v18.i32), (float32x2_t)vzip2_s32(*v13, (int32x2_t)v16), *(float32x2_t *)v11.f32, 1), v15, v11, 2);
    v15.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v17, *(float32x2_t *)v18.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v17, 1), *(float32x2_t *)v11.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL), v10).u32[0];
    v11 = *((float32x4_t *)a2 + 86);
    v22 = *((float32x4_t *)a2 + 87);
    v23 = *((float32x4_t *)a2 + 88);
    v24 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v19, COERCE_FLOAT(*v13)), v11, v16.f32[0]), v22, v17.f32[0]), (float32x4_t)0, v23);
    v25 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v19, (float32x2_t)*v13, 1), v11, v16, 1), v22, v17, 1), (float32x4_t)0, v23);
    v26 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v20, v11, v15.f32[1]), v22, v10.f32[0]), (float32x4_t)0, v23);
    v27 = vaddq_f32(v23, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v19, v21.f32[0]), v11, v21, 1), v22, v15.f32[0]));
    v28 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v24, COERCE_FLOAT(*(_OWORD *)(a2 + 213))), v25, (float32x2_t)a2[213], 1), v26, *(float32x4_t *)(a2 + 213), 2), v27, *(float32x4_t *)(a2 + 213), 3);
    v29 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v24, COERCE_FLOAT(*(_OWORD *)(a2 + 215))), v25, (float32x2_t)a2[215], 1), v26, *(float32x4_t *)(a2 + 215), 2), v27, *(float32x4_t *)(a2 + 215), 3);
    v30 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v24, COERCE_FLOAT(*(_OWORD *)(a2 + 217))), v25, (float32x2_t)a2[217], 1), v26, *(float32x4_t *)(a2 + 217), 2), v27, *(float32x4_t *)(a2 + 217), 3);
    v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v24, COERCE_FLOAT(*(_OWORD *)(a2 + 219))), v25, (float32x2_t)a2[219], 1), v26, *(float32x4_t *)(a2 + 219), 2), v27, *(float32x4_t *)(a2 + 219), 3);
  }
  else
  {
    v28 = *((int32x4_t *)a2 + 85);
    v29 = *((int32x4_t *)a2 + 86);
    v30 = *((int8x16_t *)a2 + 87);
    v31 = *((float32x4_t *)a2 + 88);
  }
  *(_QWORD *)&v33 = vzip1q_s32(v28, v29).u64[0];
  v34 = (int8x16_t)vnegq_f32(v31);
  *((_QWORD *)&v33 + 1) = v30.u32[0];
  v35 = (int8x16_t)vtrn2q_s32(v28, v29);
  v35.i32[2] = v30.i32[1];
  v36 = (int8x16_t)vzip2q_s32(v28, v29);
  v37 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v33, *(float *)v34.i32), *(float32x2_t *)v35.i8, *(float32x2_t *)v31.f32, 1), *(float32x2_t *)v36.i8, v31, 2);
  v36.i32[2] = v30.i32[2];
  v38 = vextq_s8(v35, v36, 4uLL).u64[0];
  v39 = vdupq_lane_s32(*(int32x2_t *)v35.i8, 0);
  v40 = vmls_lane_f32(vmul_f32(*(float32x2_t *)v30.i8, *(float32x2_t *)v34.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v30.i8, 1), *(float32x2_t *)v31.f32, 1);
  HIDWORD(v41) = 0;
  LODWORD(v41) = v39.i32[3];
  *(_QWORD *)((char *)&v41 + 4) = v38;
  v36.i64[1] = vdupq_laneq_s32((int32x4_t)v36, 2).u32[0];
  *(_OWORD *)&oslog[16] = v41;
  *(int8x16_t *)&oslog[32] = v36;
  *(_OWORD *)oslog = v33;
  v413 = (size_t)v37;
  LODWORD(v414) = vmla_f32(v40, (float32x2_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL), (float32x2_t)*(_OWORD *)&vextq_s8(v30, v30, 8uLL)).u32[0];
  HIDWORD(v414) = 1065353216;
  if (v14)
  {
    v42.i32[0] = *((_DWORD *)a2 + 412);
    v43 = (float32x2_t)a2[207];
    v44 = (float32x2_t)a2[209];
    v11.i64[0] = (uint64_t)a2[211];
    v11.i32[2] = *((_DWORD *)a2 + 424);
    v39.i32[0] = *((_DWORD *)a2 + 420);
    v45 = (int8x16_t)vnegq_f32(v11);
    v46 = *((float32x4_t *)a2 + 85);
    v47 = vmulq_n_f32(v46, v42.f32[0]);
    v42.i32[1] = *((_DWORD *)a2 + 416);
    v48 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*v13, (int32x2_t)v43), *(float *)v45.i32), (float32x2_t)vzip2_s32(*v13, (int32x2_t)v43), *(float32x2_t *)v11.f32, 1), v42, v11, 2);
    v42.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v44, *(float32x2_t *)v45.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v44, 1), *(float32x2_t *)v11.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), *(float32x2_t *)v39.i8).u32[0];
    v49 = *((float32x4_t *)a2 + 86);
    v50 = *((float32x4_t *)a2 + 87);
    v51 = *((float32x4_t *)a2 + 88);
    v52 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v46, COERCE_FLOAT(*v13)), v49, v43.f32[0]), v50, v44.f32[0]), (float32x4_t)0, v51);
    v53 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v46, (float32x2_t)*v13, 1), v49, v43, 1), v50, v44, 1), (float32x4_t)0, v51);
    v54 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v47, v49, v42.f32[1]), v50, *(float *)v39.i32), (float32x4_t)0, v51);
    v55 = vaddq_f32(v51, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v46, v48.f32[0]), v49, v48, 1), v50, v42.f32[0]));
    v56 = *(float32x4_t *)(a2 + 219);
    v57 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)(a2 + 215))), v53, (float32x2_t)a2[215], 1), v54, *(float32x4_t *)(a2 + 215), 2), v55, *(float32x4_t *)(a2 + 215), 3);
    v58 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)(a2 + 217))), v53, (float32x2_t)a2[217], 1), v54, *(float32x4_t *)(a2 + 217), 2), v55, *(float32x4_t *)(a2 + 217), 3);
    *(float32x4_t *)object = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, COERCE_FLOAT(*(_OWORD *)(a2 + 213))), v53, (float32x2_t)a2[213], 1), v54, *(float32x4_t *)(a2 + 213), 2), v55, *(float32x4_t *)(a2 + 213), 3);
    *(float32x4_t *)&object[16] = v57;
    v59 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v52, v56.f32[0]), v53, *(float32x2_t *)v56.f32, 1), v54, v56, 2), v55, v56, 3);
    *(float32x4_t *)&object[32] = v58;
    v434 = v59;
  }
  else
  {
    v59 = *((float32x4_t *)a2 + 88);
    v60 = *((_OWORD *)a2 + 86);
    *(_OWORD *)object = *((_OWORD *)a2 + 85);
    *(_OWORD *)&object[16] = v60;
    *(_OWORD *)&object[32] = *((_OWORD *)a2 + 87);
    v434 = v59;
  }
  v32 = 0;
  v61 = (int8x16_t)vnegq_f32(v59);
  *(float32x2_t *)v62.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)object, *(int32x2_t *)&object[16]), *(float *)v61.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)object, *(int32x2_t *)&object[16]), *(float32x2_t *)v59.f32, 1), (float32x2_t)*(_OWORD *)&vzip2q_s32(*(int32x4_t *)object, *(int32x4_t *)&object[16]), v59, 2);
  *(float32x2_t *)&v62.u32[2] = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)&object[32], *(float32x2_t *)v61.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)&object[32], 1), *(float32x2_t *)v59.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL), (float32x2_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)&object[32], *(int8x16_t *)&object[32], 8uLL));
  v63 = vmulq_n_f32(v62, *(float *)(a1 + 452));
  v64 = -*(unsigned __int16 *)(a1 + 456);
  *(int8x8_t *)(a1 + 580) = vand_s8((int8x8_t)vdup_n_s32(v64), (int8x8_t)vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v63.f32)));
  *(_DWORD *)(a1 + 588) = vcvtms_s32_f32(v63.f32[2]) & v64;
  v65 = (float32x4_t *)a2[157];
  if ((uint64_t)v65 >= *(_QWORD *)(a1 + 40776))
  {
    v390 = a3;
    v66 = a4;
    v67 = (std::__shared_weak_count *)(a2 + 3);
    *(_QWORD *)(a1 + 40776) = (char *)v65 + (uint64_t)(*(double *)(a1 + 224) * 1000000000.0);
    sub_223C41A24((uint64_t)(a2 + 3), (uint64_t)v441);
    if (*((_BYTE *)a2 + 376))
    {
      if ((!*((_DWORD *)a2 + 88) || !*((_DWORD *)a2 + 89))
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Frame/src/FrameBundle.cpp", 1187, (uint64_t)"!semantic.confidence->Empty()", 29, (uint64_t)"Semantic confidence buffer not valid", 36, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      sub_223C3BF78((uint64_t)(a2 + 40), (uint64_t)&v430);
      *(_QWORD *)v410 = &off_24EC200A8;
      *(_OWORD *)&v410[8] = *(_OWORD *)&v430.__r_.__value_.__r.__words[1];
      *(_OWORD *)&v410[24] = v431[0];
      *(_OWORD *)&v410[34] = *(_OWORD *)((char *)v431 + 10);
      v410[56] = 1;
    }
    else
    {
      v410[0] = 0;
      v410[56] = 0;
    }
    sub_223C41BC8((uint64_t)(a2 + 3), (uint64_t)&v430);
    if (*((_BYTE *)a2 + 80))
    {
      if ((!*((_DWORD *)a2 + 14) || !*((_DWORD *)a2 + 15))
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Frame/src/FrameBundle.cpp", 1145, (uint64_t)"!depth.depth->Empty()", 21, (uint64_t)"Depth buffer not valid", 22, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      sub_223C3BF78((uint64_t)(a2 + 3), (uint64_t)&v423);
      *(_QWORD *)v427 = &off_24EC200A8;
      *(_OWORD *)&v427[8] = v424;
      *(_OWORD *)&v427[24] = v425[0];
      *(_OWORD *)&v427[34] = *(_OWORD *)((char *)v425 + 10);
      LOBYTE(v428) = 1;
      v68 = *((unsigned __int8 *)a2 + 144);
      if (*((_BYTE *)a2 + 144))
        goto LABEL_22;
    }
    else
    {
      v427[0] = 0;
      LOBYTE(v428) = 0;
      v68 = *((unsigned __int8 *)a2 + 144);
      if (*((_BYTE *)a2 + 144))
      {
LABEL_22:
        if ((!*((_DWORD *)a2 + 30) || !*((_DWORD *)a2 + 31))
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Frame/src/FrameBundle.cpp", 1151, (uint64_t)"!depth.confidence->Empty()", 26, (uint64_t)"Confidence buffer not valid", 27, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        sub_223C3BF78((uint64_t)(a2 + 11), (uint64_t)&v406);
        v67 = (std::__shared_weak_count *)*((_QWORD *)&v407 + 1);
        v423 = &off_24EC200A8;
        v424 = v407;
        v425[0] = *(_OWORD *)v408;
        *(_OWORD *)((char *)v425 + 10) = *(_OWORD *)&v408[10];
        v426 = 1;
        goto LABEL_28;
      }
    }
    LOBYTE(v423) = 0;
    v426 = 0;
LABEL_28:
    sub_2239250C4(a1, (uint64_t *)a2 + 232, (float32x2_t *)oslog, (float32x2_t *)a2 + 158, (float32x2_t *)object, v441, (int32x2_t *)v410, (uint64_t)&v430, (int32x2_t *)v427, (int32x2_t *)&v423, (void **)a2 + 157, 0, a5, *((_BYTE *)a2 + 1240), 0);
    if (v68)
    {
      if (v67)
      {
        p_shared_owners = (unint64_t *)&v67->__shared_owners_;
        do
          v70 = __ldaxr(p_shared_owners);
        while (__stlxr(v70 - 1, p_shared_owners));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
          std::__shared_weak_count::__release_weak(v67);
        }
      }
    }
    v12 = (_QWORD *)(a1 + 40616);
    if ((_BYTE)v428)
    {
      v71 = *(std::__shared_weak_count **)&v427[16];
      if (*(_QWORD *)&v427[16])
      {
        v72 = (unint64_t *)(*(_QWORD *)&v427[16] + 8);
        do
          v73 = __ldaxr(v72);
        while (__stlxr(v73 - 1, v72));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
          std::__shared_weak_count::__release_weak(v71);
        }
      }
    }
    if (v432)
    {
      v74 = (std::__shared_weak_count *)v430.__r_.__value_.__r.__words[2];
      if (v430.__r_.__value_.__r.__words[2])
      {
        v75 = (unint64_t *)(v430.__r_.__value_.__r.__words[2] + 8);
        do
          v76 = __ldaxr(v75);
        while (__stlxr(v76 - 1, v75));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
          std::__shared_weak_count::__release_weak(v74);
        }
      }
    }
    if (v410[56])
    {
      v77 = *(std::__shared_weak_count **)&v410[16];
      if (*(_QWORD *)&v410[16])
      {
        v78 = (unint64_t *)(*(_QWORD *)&v410[16] + 8);
        do
          v79 = __ldaxr(v78);
        while (__stlxr(v79 - 1, v78));
        if (!v79)
        {
          ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
          std::__shared_weak_count::__release_weak(v77);
        }
      }
    }
    if (v443)
    {
      v80 = (std::__shared_weak_count *)v441[2];
      if (v441[2])
      {
        v81 = (unint64_t *)(*(_QWORD *)&v441[2] + 8);
        do
          v82 = __ldaxr(v81);
        while (__stlxr(v82 - 1, v81));
        if (!v82)
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
      }
    }
    memcpy((void *)(a1 + 35312), (const void *)(a1 + 30704), 0x1200uLL);
    if (*((_BYTE *)a2 + 1424) == 2 || *(_BYTE *)(a1 + 40617))
    {
      v32 = 1;
      *v386 = 1;
    }
    else
    {
      v32 = 1;
    }
    a4 = v66;
    a3 = v390;
  }
LABEL_62:
  kdebug_trace();
  v83 = (float32x4_t *)*a2;
  v84 = a2[1];
  if (*a2 != v84)
  {
    v385 = a1;
    v387 = a5;
    v388 = a4;
    v85 = v32;
    v389 = v84;
    v391 = a3;
    while (1)
    {
      v86 = *(uint64_t ***)(a3 + 8);
      if (!v86)
      {
LABEL_104:
        v93 = *(uint64_t ***)(a4 + 8);
        if (!v93)
          goto LABEL_65;
        v94 = v83->u8[0];
        while (2)
        {
          v95 = *((unsigned __int8 *)v93 + 25);
          v96 = v94 >= v95;
          if (v94 == v95)
          {
            v97 = v83->u8[1];
            v95 = *((unsigned __int8 *)v93 + 26);
            v96 = v97 >= v95;
            if (v97 == v95)
            {
              v97 = v83->u8[2];
              v95 = *((unsigned __int8 *)v93 + 27);
              v96 = v97 >= v95;
              if (v97 == v95)
              {
                v97 = v83->u8[3];
                v95 = *((unsigned __int8 *)v93 + 28);
                v96 = v97 >= v95;
                if (v97 == v95)
                {
                  v98 = v83->u8[4];
                  v99 = *((unsigned __int8 *)v93 + 29);
                  if (v98 == v99)
                  {
                    v98 = v83->u8[5];
                    v99 = *((unsigned __int8 *)v93 + 30);
                    if (v98 == v99)
                    {
                      v98 = v83->u8[6];
                      v99 = *((unsigned __int8 *)v93 + 31);
                      if (v98 == v99)
                      {
                        v98 = v83->u8[7];
                        v99 = *((unsigned __int8 *)v93 + 32);
                        if (v98 == v99)
                        {
                          v98 = v83->u8[8];
                          v99 = *((unsigned __int8 *)v93 + 33);
                          if (v98 == v99)
                          {
                            v98 = v83->u8[9];
                            v99 = *((unsigned __int8 *)v93 + 34);
                            if (v98 == v99)
                            {
                              v98 = v83->u8[10];
                              v99 = *((unsigned __int8 *)v93 + 35);
                              if (v98 == v99)
                              {
                                v98 = v83->u8[11];
                                v99 = *((unsigned __int8 *)v93 + 36);
                                if (v98 == v99)
                                {
                                  v98 = v83->u8[12];
                                  v99 = *((unsigned __int8 *)v93 + 37);
                                  if (v98 == v99)
                                  {
                                    v98 = v83->u8[13];
                                    v99 = *((unsigned __int8 *)v93 + 38);
                                    if (v98 == v99)
                                    {
                                      v98 = v83->u8[14];
                                      v99 = *((unsigned __int8 *)v93 + 39);
                                      if (v98 == v99)
                                      {
                                        v98 = v83->u8[15];
                                        v99 = *((unsigned __int8 *)v93 + 40);
                                        if (v98 == v99)
                                          goto LABEL_126;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  if (v98 >= v99)
                  {
LABEL_126:
                    v95 = *((unsigned __int8 *)v93 + 29);
                    v97 = v83->u8[4];
                    if (v95 == v97)
                    {
                      v95 = *((unsigned __int8 *)v93 + 30);
                      v97 = v83->u8[5];
                      if (v95 == v97)
                      {
                        v95 = *((unsigned __int8 *)v93 + 31);
                        v97 = v83->u8[6];
                        if (v95 == v97)
                        {
                          v95 = *((unsigned __int8 *)v93 + 32);
                          v97 = v83->u8[7];
                          if (v95 == v97)
                          {
                            v95 = *((unsigned __int8 *)v93 + 33);
                            v97 = v83->u8[8];
                            if (v95 == v97)
                            {
                              v95 = *((unsigned __int8 *)v93 + 34);
                              v97 = v83->u8[9];
                              if (v95 == v97)
                              {
                                v95 = *((unsigned __int8 *)v93 + 35);
                                v97 = v83->u8[10];
                                if (v95 == v97)
                                {
                                  v95 = *((unsigned __int8 *)v93 + 36);
                                  v97 = v83->u8[11];
                                  if (v95 == v97)
                                  {
                                    v95 = *((unsigned __int8 *)v93 + 37);
                                    v97 = v83->u8[12];
                                    if (v95 == v97)
                                    {
                                      v95 = *((unsigned __int8 *)v93 + 38);
                                      v97 = v83->u8[13];
                                      if (v95 == v97)
                                      {
                                        v95 = *((unsigned __int8 *)v93 + 39);
                                        v97 = v83->u8[14];
                                        if (v95 == v97)
                                        {
                                          v95 = *((unsigned __int8 *)v93 + 40);
                                          v97 = v83->u8[15];
                                          if (v95 == v97)
                                          {
LABEL_143:
                                            v100 = (void *)v83[6].i64[1];
                                            goto LABEL_144;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
LABEL_106:
                    if (v95 >= v97)
                      goto LABEL_143;
                    ++v93;
                  }
LABEL_108:
                  v93 = (uint64_t **)*v93;
                  if (!v93)
                    goto LABEL_65;
                  continue;
                }
              }
            }
          }
          else
          {
            v97 = v83->u8[0];
          }
          break;
        }
        if (v96)
          goto LABEL_106;
        goto LABEL_108;
      }
      v87 = v83->u8[0];
      while (1)
      {
        v88 = *((unsigned __int8 *)v86 + 25);
        v89 = v87 >= v88;
        if (v87 != v88)
        {
          v90 = v83->u8[0];
          goto LABEL_102;
        }
        v90 = v83->u8[1];
        v88 = *((unsigned __int8 *)v86 + 26);
        v89 = v90 >= v88;
        if (v90 == v88)
        {
          v90 = v83->u8[2];
          v88 = *((unsigned __int8 *)v86 + 27);
          v89 = v90 >= v88;
          if (v90 == v88)
          {
            v90 = v83->u8[3];
            v88 = *((unsigned __int8 *)v86 + 28);
            v89 = v90 >= v88;
            if (v90 == v88)
              break;
          }
        }
LABEL_102:
        if (v89)
          goto LABEL_68;
LABEL_70:
        v86 = (uint64_t **)*v86;
        if (!v86)
          goto LABEL_104;
      }
      v91 = v83->u8[4];
      v92 = *((unsigned __int8 *)v86 + 29);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[5];
      v92 = *((unsigned __int8 *)v86 + 30);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[6];
      v92 = *((unsigned __int8 *)v86 + 31);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[7];
      v92 = *((unsigned __int8 *)v86 + 32);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[8];
      v92 = *((unsigned __int8 *)v86 + 33);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[9];
      v92 = *((unsigned __int8 *)v86 + 34);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[10];
      v92 = *((unsigned __int8 *)v86 + 35);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[11];
      v92 = *((unsigned __int8 *)v86 + 36);
      if (v91 != v92)
        goto LABEL_87;
      v91 = v83->u8[12];
      v92 = *((unsigned __int8 *)v86 + 37);
      if (v91 != v92
        || (v91 = v83->u8[13], v92 = *((unsigned __int8 *)v86 + 38), v91 != v92)
        || (v91 = v83->u8[14], v92 = *((unsigned __int8 *)v86 + 39), v91 != v92)
        || (v91 = v83->u8[15], v92 = *((unsigned __int8 *)v86 + 40), v91 != v92))
      {
LABEL_87:
        if (v91 < v92)
          goto LABEL_70;
      }
      v88 = *((unsigned __int8 *)v86 + 29);
      v90 = v83->u8[4];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 30);
      v90 = v83->u8[5];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 31);
      v90 = v83->u8[6];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 32);
      v90 = v83->u8[7];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 33);
      v90 = v83->u8[8];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 34);
      v90 = v83->u8[9];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 35);
      v90 = v83->u8[10];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 36);
      v90 = v83->u8[11];
      if (v88 != v90)
        goto LABEL_68;
      v88 = *((unsigned __int8 *)v86 + 37);
      v90 = v83->u8[12];
      if (v88 != v90
        || (v88 = *((unsigned __int8 *)v86 + 38), v90 = v83->u8[13], v88 != v90)
        || (v88 = *((unsigned __int8 *)v86 + 39), v90 = v83->u8[14], v88 != v90)
        || (v88 = *((unsigned __int8 *)v86 + 40), v90 = v83->u8[15], v88 != v90))
      {
LABEL_68:
        if (v88 >= v90)
          goto LABEL_142;
        ++v86;
        goto LABEL_70;
      }
LABEL_142:
      v100 = (void *)(v83[6].i64[1] - 20000000000);
LABEL_144:
      v422 = v100;
      kdebug_trace();
      sub_2231CC34C(v83[1].i64[0], (uint64_t)v416);
      v441[0].i8[0] = 0;
      v443 = 0;
      v430.__r_.__value_.__s.__data_[0] = 0;
      v432 = 0;
      sub_2231CDAE0(v83[1].i64[0], (uint64_t)oslog);
      v392 = v85;
      if (!(_DWORD)v414 || !HIDWORD(v414))
      {
LABEL_148:
        v101 = *(std::__shared_weak_count **)&oslog[16];
        if (*(_QWORD *)&oslog[16])
          goto LABEL_149;
        goto LABEL_241;
      }
      if (v414 == (_QWORD)v420)
      {
        sub_22392A594((uint64_t)v441, (uint64_t)oslog);
        goto LABEL_148;
      }
      sub_22392A7E8(&v406);
      if (*(int *)v406[7] > 5)
        goto LABEL_240;
      v104 = *((unsigned __int8 *)v406 + 72);
      v105 = sub_22322F254((uint64_t)v406, "OSLogSurrogateAppender", 1, 0);
      v106 = v105;
      if (!v104 && !v105)
        goto LABEL_240;
      *(_QWORD *)v410 = &v406;
      *(std::chrono::steady_clock::time_point *)&v410[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v410[16] = std::chrono::system_clock::now();
      *(_DWORD *)&v410[24] = 5;
      *(_QWORD *)&v410[32] = "unknown file";
      *(_DWORD *)&v410[40] = 912;
      *(_QWORD *)&v410[48] = "unknown function";
      *(_QWORD *)&v410[56] = 0;
      v411 = 0;
      v107 = **(_QWORD **)v410;
      v108 = (const char *)(**(_QWORD **)v410 + 16);
      v382 = v108;
      if (*(char *)(**(_QWORD **)v410 + 39) < 0)
      {
        v108 = *(const char **)(v107 + 16);
        v109 = *(_QWORD *)(v107 + 24);
        v111 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v111 & 1) == 0)
        {
LABEL_512:
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)v427);
            sub_223199C58("com.apple.cv3d", (unint64_t)v427, &xmmword_255788F40);
            if (v427[24] && (v427[23] & 0x80000000) != 0)
              operator delete(*(void **)v427);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
            v12 = v386;
          }
        }
      }
      else
      {
        v109 = *(unsigned __int8 *)(**(_QWORD **)v410 + 39);
        v110 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v110 & 1) == 0)
          goto LABEL_512;
      }
      if (byte_255788F57 >= 0)
        v112 = (const char *)&xmmword_255788F40;
      else
        v112 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v113 = byte_255788F57;
      else
        v113 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)object = os_log_create(v112, v108);
      if (v113 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v113 >= 0x17)
      {
        v115 = (v113 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v113 | 7) != 0x17)
          v115 = v113 | 7;
        v116 = v115 + 1;
        v114 = operator new(v115 + 1);
        *(_QWORD *)&object[24] = v116 | 0x8000000000000000;
        *(_QWORD *)&object[8] = v114;
        *(_QWORD *)&object[16] = v113;
        v12 = v386;
LABEL_173:
        memmove(v114, v112, v113);
        goto LABEL_174;
      }
      object[31] = v113;
      v114 = &object[8];
      if (v113)
        goto LABEL_173;
LABEL_174:
      v114[v113] = 0;
      object[32] = 1;
      if (v109 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v109 >= 0x17)
      {
        v119 = (v109 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v109 | 7) != 0x17)
          v119 = v109 | 7;
        v120 = v119 + 1;
        v117 = operator new(v119 + 1);
        v434.i64[1] = v120 | 0x8000000000000000;
        *(_QWORD *)&object[40] = v117;
        v434.i64[0] = v109;
        v12 = v386;
      }
      else
      {
        v434.i8[15] = v109;
        v117 = &object[40];
        if (!v109)
        {
          object[40] = 0;
          LOBYTE(v435) = 1;
          v118 = *(NSObject **)object;
          if ((v434.i8[15] & 0x80000000) == 0)
            goto LABEL_178;
LABEL_184:
          operator delete(*(void **)&object[40]);
          a1 = v385;
          if (object[32])
            goto LABEL_185;
          goto LABEL_187;
        }
      }
      memmove(v117, v108, v109);
      v117[v109] = 0;
      LOBYTE(v435) = 1;
      v118 = *(NSObject **)object;
      if (v434.i8[15] < 0)
        goto LABEL_184;
LABEL_178:
      a1 = v385;
      if (object[32])
      {
LABEL_185:
        if ((object[31] & 0x80000000) != 0)
          operator delete(*(void **)&object[8]);
      }
LABEL_187:
      if (*(_QWORD *)object)
        os_release(*(void **)object);
      if (v106 && *(_QWORD *)(v106 + 24))
      {
        v121 = _os_log_pack_size();
        v122 = (std::__shared_weak_count_vtbl *)operator new(v121, (std::align_val_t)8uLL);
        v123 = (std::__shared_weak_count *)operator new();
        v124 = v123;
        v123->__shared_owners_ = 0;
        v125 = (unint64_t *)&v123->__shared_owners_;
        v123->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
        v123->__shared_weak_owners_ = 0;
        v123[1].__vftable = v122;
        *(_QWORD *)object = v122;
        *(_QWORD *)&object[8] = v122;
        *(_QWORD *)&object[16] = v123;
        do
          v126 = __ldxr(v125);
        while (__stxr(v126 + 1, v125));
        memset(&object[24], 0, 24);
        do
          v127 = __ldaxr(v125);
        while (__stlxr(v127 - 1, v125));
        if (!v127)
        {
          ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
          std::__shared_weak_count::__release_weak(v124);
        }
        v128 = *(_QWORD *)object;
        *(_WORD *)_os_log_pack_fill() = 0;
        v129 = operator new();
        v130 = *(unsigned __int8 *)(v107 + 39);
        v131 = v382;
        if ((v130 & 0x80u) != 0)
        {
          v131 = *(const char **)(v107 + 16);
          v130 = *(_QWORD *)(v107 + 24);
        }
        *(_QWORD *)v129 = v128;
        *(_OWORD *)(v129 + 8) = *(_OWORD *)&object[8];
        *(_QWORD *)&object[8] = 0;
        *(_QWORD *)&object[16] = 0;
        *(_OWORD *)(v129 + 24) = *(_OWORD *)&object[24];
        *(_QWORD *)&object[24] = 0;
        *(_QWORD *)&object[32] = 0;
        *(_QWORD *)(v129 + 40) = v131;
        *(_QWORD *)(v129 + 48) = v130;
        *(_BYTE *)(v129 + 56) = 16;
        v423 = 0;
        *(_QWORD *)v427 = v129;
        (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v106 + 24) + 40))(*(_QWORD *)(v106 + 24), v427);
        v132 = *(_QWORD *)v427;
        *(_QWORD *)v427 = 0;
        if (v132)
        {
          v133 = *(std::__shared_weak_count **)(v132 + 32);
          if (v133)
          {
            v134 = (unint64_t *)&v133->__shared_owners_;
            do
              v135 = __ldaxr(v134);
            while (__stlxr(v135 - 1, v134));
            if (!v135)
            {
              ((void (*)(std::__shared_weak_count *))v133->__on_zero_shared)(v133);
              std::__shared_weak_count::__release_weak(v133);
            }
          }
          v136 = *(std::__shared_weak_count **)(v132 + 16);
          if (v136)
          {
            v137 = (unint64_t *)&v136->__shared_owners_;
            do
              v138 = __ldaxr(v137);
            while (__stlxr(v138 - 1, v137));
            if (!v138)
            {
              ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
              std::__shared_weak_count::__release_weak(v136);
            }
          }
          MEMORY[0x227684CE8](v132, 0x10F0C40B62ED6C6);
          v139 = v423;
          v423 = 0;
          if (v139)
          {
            v140 = (std::__shared_weak_count *)v139[4];
            if (v140)
            {
              v141 = (unint64_t *)&v140->__shared_owners_;
              do
                v142 = __ldaxr(v141);
              while (__stlxr(v142 - 1, v141));
              if (!v142)
              {
                ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
                std::__shared_weak_count::__release_weak(v140);
              }
            }
            v143 = (std::__shared_weak_count *)v139[2];
            if (v143)
            {
              v144 = (unint64_t *)&v143->__shared_owners_;
              do
                v145 = __ldaxr(v144);
              while (__stlxr(v145 - 1, v144));
              if (!v145)
              {
                ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
                std::__shared_weak_count::__release_weak(v143);
              }
            }
            MEMORY[0x227684CE8](v139, 0x10F0C40B62ED6C6);
          }
        }
        v146 = *(std::__shared_weak_count **)&object[32];
        if (*(_QWORD *)&object[32])
        {
          v147 = (unint64_t *)(*(_QWORD *)&object[32] + 8);
          do
            v148 = __ldaxr(v147);
          while (__stlxr(v148 - 1, v147));
          if (!v148)
          {
            ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
            std::__shared_weak_count::__release_weak(v146);
          }
        }
        v149 = *(std::__shared_weak_count **)&object[16];
        if (*(_QWORD *)&object[16])
        {
          v150 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
          do
            v151 = __ldaxr(v150);
          while (__stlxr(v151 - 1, v150));
          if (!v151)
          {
            ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
            std::__shared_weak_count::__release_weak(v149);
          }
        }
      }
      else
      {
        os_log_type_enabled(v118, OS_LOG_TYPE_ERROR);
        *(_WORD *)object = 0;
        v152 = (void *)_os_log_send_and_compose_impl();
        if (v152)
          free(v152);
      }
      if (v104)
      {
        sub_22322C138((uint64_t)v410, "Semantic view and depth view have different size");
        sub_223182C08((uint64_t)v410);
      }
      sub_223182C08((uint64_t)v410);
      v153 = v411;
      if (!v411)
        goto LABEL_240;
      v154 = (unint64_t *)&v411->__shared_owners_;
      do
        v155 = __ldaxr(v154);
      while (__stlxr(v155 - 1, v154));
      if (!v155)
      {
        ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
        std::__shared_weak_count::__release_weak(v153);
        a5 = v387;
        v101 = *(std::__shared_weak_count **)&oslog[16];
        if (!*(_QWORD *)&oslog[16])
          goto LABEL_241;
      }
      else
      {
LABEL_240:
        a5 = v387;
        v101 = *(std::__shared_weak_count **)&oslog[16];
        if (!*(_QWORD *)&oslog[16])
          goto LABEL_241;
      }
LABEL_149:
      v102 = (unint64_t *)&v101->__shared_owners_;
      do
        v103 = __ldaxr(v102);
      while (__stlxr(v103 - 1, v102));
      if (!v103)
      {
        ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
        std::__shared_weak_count::__release_weak(v101);
      }
LABEL_241:
      sub_2231CDCA4(v83[1].i64[0], (uint64_t)oslog);
      if (!(_DWORD)v414 || !HIDWORD(v414))
      {
LABEL_245:
        v160 = *(std::__shared_weak_count **)&oslog[16];
        if (!*(_QWORD *)&oslog[16])
          goto LABEL_338;
        goto LABEL_246;
      }
      if (v414 == (_QWORD)v420)
      {
        sub_22392A594((uint64_t)&v430, (uint64_t)oslog);
        goto LABEL_245;
      }
      sub_22392A7E8(&v406);
      if (*(int *)v406[7] > 5)
        goto LABEL_337;
      v163 = *((unsigned __int8 *)v406 + 72);
      v164 = sub_22322F254((uint64_t)v406, "OSLogSurrogateAppender", 1, 0);
      v165 = v164;
      if (!v163 && !v164)
        goto LABEL_337;
      *(_QWORD *)v410 = &v406;
      *(std::chrono::steady_clock::time_point *)&v410[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&v410[16] = std::chrono::system_clock::now();
      *(_DWORD *)&v410[24] = 5;
      *(_QWORD *)&v410[32] = "unknown file";
      *(_DWORD *)&v410[40] = 921;
      *(_QWORD *)&v410[48] = "unknown function";
      *(_QWORD *)&v410[56] = 0;
      v411 = 0;
      v166 = **(_QWORD **)v410;
      v167 = (const char *)(**(_QWORD **)v410 + 16);
      v383 = v167;
      if (*(char *)(**(_QWORD **)v410 + 39) < 0)
      {
        v167 = *(const char **)(v166 + 16);
        v168 = *(_QWORD *)(v166 + 24);
        v170 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v170 & 1) == 0)
        {
LABEL_517:
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)v427);
            sub_223199C58("com.apple.cv3d", (unint64_t)v427, &xmmword_255788F40);
            if (v427[24] && (v427[23] & 0x80000000) != 0)
              operator delete(*(void **)v427);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
            v12 = v386;
          }
        }
      }
      else
      {
        v168 = *(unsigned __int8 *)(**(_QWORD **)v410 + 39);
        v169 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v169 & 1) == 0)
          goto LABEL_517;
      }
      if (byte_255788F57 >= 0)
        v171 = (const char *)&xmmword_255788F40;
      else
        v171 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v172 = byte_255788F57;
      else
        v172 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)object = os_log_create(v171, v167);
      if (v172 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v172 >= 0x17)
      {
        v174 = (v172 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v172 | 7) != 0x17)
          v174 = v172 | 7;
        v175 = v174 + 1;
        v173 = operator new(v174 + 1);
        *(_QWORD *)&object[24] = v175 | 0x8000000000000000;
        *(_QWORD *)&object[8] = v173;
        *(_QWORD *)&object[16] = v172;
        v12 = v386;
LABEL_270:
        memmove(v173, v171, v172);
        goto LABEL_271;
      }
      object[31] = v172;
      v173 = &object[8];
      if (v172)
        goto LABEL_270;
LABEL_271:
      v173[v172] = 0;
      object[32] = 1;
      if (v168 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v168 >= 0x17)
      {
        v178 = (v168 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v168 | 7) != 0x17)
          v178 = v168 | 7;
        v179 = v178 + 1;
        v176 = operator new(v178 + 1);
        v434.i64[1] = v179 | 0x8000000000000000;
        *(_QWORD *)&object[40] = v176;
        v434.i64[0] = v168;
        v12 = v386;
      }
      else
      {
        v434.i8[15] = v168;
        v176 = &object[40];
        if (!v168)
        {
          object[40] = 0;
          LOBYTE(v435) = 1;
          v177 = *(NSObject **)object;
          if ((v434.i8[15] & 0x80000000) == 0)
            goto LABEL_275;
LABEL_281:
          operator delete(*(void **)&object[40]);
          a1 = v385;
          if (object[32])
            goto LABEL_282;
          goto LABEL_284;
        }
      }
      memmove(v176, v167, v168);
      v176[v168] = 0;
      LOBYTE(v435) = 1;
      v177 = *(NSObject **)object;
      if (v434.i8[15] < 0)
        goto LABEL_281;
LABEL_275:
      a1 = v385;
      if (object[32])
      {
LABEL_282:
        if ((object[31] & 0x80000000) != 0)
          operator delete(*(void **)&object[8]);
      }
LABEL_284:
      if (*(_QWORD *)object)
        os_release(*(void **)object);
      if (v165 && *(_QWORD *)(v165 + 24))
      {
        v180 = _os_log_pack_size();
        v181 = (std::__shared_weak_count_vtbl *)operator new(v180, (std::align_val_t)8uLL);
        v182 = (std::__shared_weak_count *)operator new();
        v183 = v182;
        v182->__shared_owners_ = 0;
        v184 = (unint64_t *)&v182->__shared_owners_;
        v182->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
        v182->__shared_weak_owners_ = 0;
        v182[1].__vftable = v181;
        *(_QWORD *)object = v181;
        *(_QWORD *)&object[8] = v181;
        *(_QWORD *)&object[16] = v182;
        do
          v185 = __ldxr(v184);
        while (__stxr(v185 + 1, v184));
        memset(&object[24], 0, 24);
        do
          v186 = __ldaxr(v184);
        while (__stlxr(v186 - 1, v184));
        if (!v186)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v183);
        }
        v187 = *(_QWORD *)object;
        *(_WORD *)_os_log_pack_fill() = 0;
        v188 = operator new();
        v189 = *(unsigned __int8 *)(v166 + 39);
        v190 = v383;
        if ((v189 & 0x80u) != 0)
        {
          v190 = *(const char **)(v166 + 16);
          v189 = *(_QWORD *)(v166 + 24);
        }
        *(_QWORD *)v188 = v187;
        *(_OWORD *)(v188 + 8) = *(_OWORD *)&object[8];
        *(_QWORD *)&object[8] = 0;
        *(_QWORD *)&object[16] = 0;
        *(_OWORD *)(v188 + 24) = *(_OWORD *)&object[24];
        *(_QWORD *)&object[24] = 0;
        *(_QWORD *)&object[32] = 0;
        *(_QWORD *)(v188 + 40) = v190;
        *(_QWORD *)(v188 + 48) = v189;
        *(_BYTE *)(v188 + 56) = 16;
        v423 = 0;
        *(_QWORD *)v427 = v188;
        (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v165 + 24) + 40))(*(_QWORD *)(v165 + 24), v427);
        v191 = *(_QWORD *)v427;
        *(_QWORD *)v427 = 0;
        if (v191)
        {
          v192 = *(std::__shared_weak_count **)(v191 + 32);
          if (v192)
          {
            v193 = (unint64_t *)&v192->__shared_owners_;
            do
              v194 = __ldaxr(v193);
            while (__stlxr(v194 - 1, v193));
            if (!v194)
            {
              ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
              std::__shared_weak_count::__release_weak(v192);
            }
          }
          v195 = *(std::__shared_weak_count **)(v191 + 16);
          if (v195)
          {
            v196 = (unint64_t *)&v195->__shared_owners_;
            do
              v197 = __ldaxr(v196);
            while (__stlxr(v197 - 1, v196));
            if (!v197)
            {
              ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
              std::__shared_weak_count::__release_weak(v195);
            }
          }
          MEMORY[0x227684CE8](v191, 0x10F0C40B62ED6C6);
          v198 = v423;
          v423 = 0;
          if (v198)
          {
            v199 = (std::__shared_weak_count *)v198[4];
            if (v199)
            {
              v200 = (unint64_t *)&v199->__shared_owners_;
              do
                v201 = __ldaxr(v200);
              while (__stlxr(v201 - 1, v200));
              if (!v201)
              {
                ((void (*)(std::__shared_weak_count *))v199->__on_zero_shared)(v199);
                std::__shared_weak_count::__release_weak(v199);
              }
            }
            v202 = (std::__shared_weak_count *)v198[2];
            if (v202)
            {
              v203 = (unint64_t *)&v202->__shared_owners_;
              do
                v204 = __ldaxr(v203);
              while (__stlxr(v204 - 1, v203));
              if (!v204)
              {
                ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
                std::__shared_weak_count::__release_weak(v202);
              }
            }
            MEMORY[0x227684CE8](v198, 0x10F0C40B62ED6C6);
          }
        }
        v205 = *(std::__shared_weak_count **)&object[32];
        if (*(_QWORD *)&object[32])
        {
          v206 = (unint64_t *)(*(_QWORD *)&object[32] + 8);
          do
            v207 = __ldaxr(v206);
          while (__stlxr(v207 - 1, v206));
          if (!v207)
          {
            ((void (*)(std::__shared_weak_count *))v205->__on_zero_shared)(v205);
            std::__shared_weak_count::__release_weak(v205);
          }
        }
        v208 = *(std::__shared_weak_count **)&object[16];
        if (*(_QWORD *)&object[16])
        {
          v209 = (unint64_t *)(*(_QWORD *)&object[16] + 8);
          do
            v210 = __ldaxr(v209);
          while (__stlxr(v210 - 1, v209));
          if (!v210)
          {
            ((void (*)(std::__shared_weak_count *))v208->__on_zero_shared)(v208);
            std::__shared_weak_count::__release_weak(v208);
          }
        }
      }
      else
      {
        os_log_type_enabled(v177, OS_LOG_TYPE_ERROR);
        *(_WORD *)object = 0;
        v211 = (void *)_os_log_send_and_compose_impl();
        if (v211)
          free(v211);
      }
      if (v163)
      {
        sub_22322C138((uint64_t)v410, "Material view and depth view have different size");
        sub_223182C08((uint64_t)v410);
      }
      sub_223182C08((uint64_t)v410);
      v212 = v411;
      if (!v411)
        goto LABEL_337;
      v213 = (unint64_t *)&v411->__shared_owners_;
      do
        v214 = __ldaxr(v213);
      while (__stlxr(v214 - 1, v213));
      if (!v214)
      {
        ((void (*)(std::__shared_weak_count *))v212->__on_zero_shared)(v212);
        std::__shared_weak_count::__release_weak(v212);
        a5 = v387;
        v160 = *(std::__shared_weak_count **)&oslog[16];
        if (*(_QWORD *)&oslog[16])
          goto LABEL_246;
      }
      else
      {
LABEL_337:
        a5 = v387;
        v160 = *(std::__shared_weak_count **)&oslog[16];
        if (!*(_QWORD *)&oslog[16])
          goto LABEL_338;
LABEL_246:
        v161 = (unint64_t *)&v160->__shared_owners_;
        do
          v162 = __ldaxr(v161);
        while (__stlxr(v162 - 1, v161));
        if (!v162)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
      }
LABEL_338:
      v156.i64[0] = v83[11].i64[0];
      v156.i32[2] = v83[11].i32[2];
      v157.i64[0] = v83[12].i64[0];
      v157.i32[2] = v83[12].i32[2];
      v158.i32[0] = v83[13].i32[2];
      v159.i64[0] = v83[14].i64[0];
      v159.i32[2] = v83[14].i32[2];
      v215.i64[0] = vzip1q_s32(v156, v157).u64[0];
      v216 = (int8x16_t)vnegq_f32(v159);
      v217 = (int8x16_t)vtrn2q_s32(v156, v157);
      v217.i32[2] = HIDWORD(v83[13].i64[0]);
      v218 = (float32x4_t)vzip2q_s32(v156, v157);
      *(float32x2_t *)v219.i8 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v215.f32, *(float *)v216.i32), *(float32x2_t *)v217.i8, *(float32x2_t *)v159.f32, 1), *(float32x2_t *)v218.f32, v159, 2);
      v218.i32[2] = v158.i32[0];
      v219.u64[1] = (unint64_t)vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)v83[13].f32, *(float32x2_t *)v216.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v83[13].f32, 1), *(float32x2_t *)v159.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v216, v216, 8uLL), v158);
      v215.i64[1] = v83[13].i64[0];
      v220.i32[3] = 0;
      v220.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v217, 0).i32[3];
      *(uint64_t *)((char *)v220.i64 + 4) = vextq_s8(v217, v219, 4uLL).u64[0];
      v218.i64[1] = vdupq_laneq_s32((int32x4_t)v218, 2).u32[0];
      v219.i32[3] = 1.0;
      v221 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v215, COERCE_FLOAT(*(_OWORD *)&v83[7])), v220, *(float32x2_t *)v83[7].f32, 1), v218, v83[7], 2), (float32x4_t)v219, v83[7], 3);
      v222 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v215, COERCE_FLOAT(*(_OWORD *)&v83[8])), v220, *(float32x2_t *)v83[8].f32, 1), v218, v83[8], 2), (float32x4_t)v219, v83[8], 3);
      v223 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v215, COERCE_FLOAT(*(_OWORD *)&v83[9])), v220, *(float32x2_t *)v83[9].f32, 1), v218, v83[9], 2), (float32x4_t)v219, v83[9], 3);
      v224 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v215, COERCE_FLOAT(*(_OWORD *)&v83[10])), v220, *(float32x2_t *)v83[10].f32, 1), v218, v83[10], 2), (float32x4_t)v219, v83[10], 3);
      v225 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v221, COERCE_FLOAT(*(_OWORD *)&v83[3])), v222, *(float32x2_t *)v83[3].f32, 1), v223, v83[3], 2), v224, v83[3], 3);
      v226 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v221, COERCE_FLOAT(*(_OWORD *)&v83[4])), v222, *(float32x2_t *)v83[4].f32, 1), v223, v83[4], 2), v224, v83[4], 3);
      v227 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v221, COERCE_FLOAT(*(_OWORD *)&v83[5])), v222, *(float32x2_t *)v83[5].f32, 1), v223, v83[5], 2), v224, v83[5], 3);
      *(float32x4_t *)v410 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v221, COERCE_FLOAT(*(_OWORD *)&v83[2])), v222, *(float32x2_t *)v83[2].f32, 1), v223, v83[2], 2), v224, v83[2], 3);
      *(float32x4_t *)&v410[16] = v225;
      *(float32x4_t *)&v410[32] = v226;
      *(float32x4_t *)&v410[48] = v227;
      v228 = (uint64_t *)sub_2231D0424(v83[1].i64[0]);
      v229 = (float32x2_t *)sub_2231D0224(v83[1].i64[0]);
      v230.i64[0] = v83[11].i64[0];
      v230.i32[2] = v83[11].i32[2];
      v231.i64[0] = v83[12].i64[0];
      v231.i32[2] = v83[12].i32[2];
      v232 = (float32x4_t)vzip1q_s32(v230, v231);
      v233 = (int8x16_t)v232;
      v233.i32[2] = v83[13].i64[0];
      v234.i64[0] = v83[14].i64[0];
      v234.i32[2] = v83[14].i32[2];
      v235 = (int8x16_t)vnegq_f32(v234);
      v236 = (int8x16_t)vtrn2q_s32(v230, v231);
      v236.i32[2] = HIDWORD(v83[13].i64[0]);
      v237.i32[0] = v83[13].i32[2];
      v238 = (float32x4_t)vzip2q_s32(v230, v231);
      *(float32x2_t *)v232.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v232.f32, *(float *)v235.i32), *(float32x2_t *)v236.i8, *(float32x2_t *)v234.f32, 1), *(float32x2_t *)v238.f32, v234, 2);
      v238.i32[2] = v237.i32[0];
      v232.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)v83[13].f32, *(float32x2_t *)v235.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v83[13].f32, 1), *(float32x2_t *)v234.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v235, v235, 8uLL), v237).u32[0]);
      v239 = vextq_s8(v236, v233, 4uLL).u64[0];
      v233.i32[3] = 0;
      v234.i32[3] = 0;
      v234.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v236, 0).i32[3];
      *(uint64_t *)((char *)v234.i64 + 4) = v239;
      v238.i64[1] = vdupq_laneq_s32((int32x4_t)v238, 2).u32[0];
      v240 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v233, COERCE_FLOAT(*(_OWORD *)&v83[7])), v234, *(float32x2_t *)v83[7].f32, 1), v238, v83[7], 2), v232, v83[7], 3);
      v241 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v233, COERCE_FLOAT(*(_OWORD *)&v83[8])), v234, *(float32x2_t *)v83[8].f32, 1), v238, v83[8], 2), v232, v83[8], 3);
      v242 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v233, COERCE_FLOAT(*(_OWORD *)&v83[9])), v234, *(float32x2_t *)v83[9].f32, 1), v238, v83[9], 2), v232, v83[9], 3);
      v243 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v233, COERCE_FLOAT(*(_OWORD *)&v83[10])), v234, *(float32x2_t *)v83[10].f32, 1), v238, v83[10], 2), v232, v83[10], 3);
      v244 = v83[5];
      v245 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v240, COERCE_FLOAT(*(_OWORD *)&v83[2])), v241, *(float32x2_t *)v83[2].f32, 1), v242, v83[2], 2), (float32x4_t)v243, v83[2], 3);
      v246 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v240, COERCE_FLOAT(*(_OWORD *)&v83[3])), v241, *(float32x2_t *)v83[3].f32, 1), v242, v83[3], 2), (float32x4_t)v243, v83[3], 3);
      v247 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v240, COERCE_FLOAT(*(_OWORD *)&v83[4])), v241, *(float32x2_t *)v83[4].f32, 1), v242, v83[4], 2), (float32x4_t)v243, v83[4], 3);
      v248 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v240, v244.f32[0]), v241, *(float32x2_t *)v244.f32, 1), v242, v244, 2);
      v242.i64[0] = vzip1q_s32(v245, v246).u64[0];
      v242.i64[1] = v247.u32[0];
      v249 = vmlaq_laneq_f32(v248, (float32x4_t)v243, v244, 3);
      v250 = v249.i64[1];
      v243.i64[0] = v249.i64[0] ^ 0x8000000080000000;
      *(float32x2_t *)v241.f32 = vmul_n_f32(*(float32x2_t *)v242.f32, COERCE_FLOAT(v249.i32[0] ^ 0x80000000));
      v251 = (int8x16_t)vtrn2q_s32(v245, v246);
      v251.i32[2] = v247.i32[1];
      v252 = vzip2q_s32(v245, v246);
      v253 = v252;
      v253.i32[2] = v247.i32[2];
      HIDWORD(v254) = 0;
      LODWORD(v254) = vdupq_lane_s32(*(int32x2_t *)&v251, 0).i32[3];
      *(_QWORD *)((char *)&v254 + 4) = vextq_s8(v251, v243, 4uLL).u64[0];
      v253.i64[1] = vdupq_laneq_s32(v253, 2).u32[0];
      *(int32x4_t *)&v427[32] = v253;
      *(float32x4_t *)v427 = v242;
      *(_OWORD *)&v427[16] = v254;
      *(float32x2_t *)&v427[48] = vmla_n_f32(vmla_lane_f32(*(float32x2_t *)v241.f32, *(float32x2_t *)v251.i8, *(float32x2_t *)v243.i8, 1), *(float32x2_t *)v252.i8, COERCE_FLOAT(v250 ^ 0x80000000));
      v428 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v247.i8, *(float32x2_t *)v243.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v243.i8, 1), *(float32x2_t *)v247.i8, 1), (float32x2_t)(v250 ^ 0xFFFFFFFF80000000), (float32x2_t)*(_OWORD *)&vextq_s8(v247, v247, 8uLL)).u32[0];
      v429 = 1065353216;
      LOBYTE(v423) = 0;
      v426 = 0;
      v406 = &off_24EC200A8;
      v255 = v417;
      v256 = v418;
      if (v418)
      {
        v257 = (unint64_t *)&v418->__shared_owners_;
        do
          v258 = __ldxr(v257);
        while (__stxr(v258 + 1, v257));
        v259 = v421;
        do
          v260 = __ldxr(v257);
        while (__stxr(v260 + 1, v257));
        v261 = v419;
        *(_OWORD *)&v408[8] = v420;
        do
          v262 = __ldxr(v257);
        while (__stxr(v262 + 1, v257));
        *(_QWORD *)&v407 = v255;
        *((_QWORD *)&v407 + 1) = v256;
        *(_QWORD *)v408 = v261;
        *(_WORD *)&v408[24] = v259;
        do
          v263 = __ldaxr(v257);
        while (__stlxr(v263 - 1, v257));
        if (!v263)
        {
          ((void (*)(std::__shared_weak_count *))v256->__on_zero_shared)(v256);
          std::__shared_weak_count::__release_weak(v256);
        }
        do
          v264 = __ldaxr(v257);
        while (__stlxr(v264 - 1, v257));
        if (!v264)
        {
          ((void (*)(std::__shared_weak_count *))v256->__on_zero_shared)(v256);
          std::__shared_weak_count::__release_weak(v256);
        }
      }
      else
      {
        v407 = v417;
        *(_QWORD *)v408 = v419;
        *(_OWORD *)&v408[8] = v420;
        *(_WORD *)&v408[24] = v421;
      }
      v409 = 1;
      sub_2231CC3F0(v83[1].i64[0], (uint64_t)v393);
      v399 = &off_24EC200A8;
      v265 = v394;
      v266 = v395;
      if (v395)
      {
        v267 = (unint64_t *)&v395->__shared_owners_;
        do
          v268 = __ldxr(v267);
        while (__stxr(v268 + 1, v267));
        v269 = v398;
        do
          v270 = __ldxr(v267);
        while (__stxr(v270 + 1, v267));
        v271 = v396;
        v403 = v397;
        do
          v272 = __ldxr(v267);
        while (__stxr(v272 + 1, v267));
        v400 = v265;
        v401 = v266;
        v402 = v271;
        v404 = v269;
        do
          v273 = __ldaxr(v267);
        while (__stlxr(v273 - 1, v267));
        if (!v273)
        {
          ((void (*)(std::__shared_weak_count *))v266->__on_zero_shared)(v266);
          std::__shared_weak_count::__release_weak(v266);
        }
        do
          v274 = __ldaxr(v267);
        while (__stlxr(v274 - 1, v267));
        if (!v274)
        {
          ((void (*)(std::__shared_weak_count *))v266->__on_zero_shared)(v266);
          std::__shared_weak_count::__release_weak(v266);
        }
      }
      else
      {
        v400 = v394;
        v401 = 0;
        v402 = v396;
        v403 = v397;
        v404 = v398;
      }
      v405 = 1;
      v275 = sub_2231D04FC(v83[1].i64[0]);
      v276 = v392;
      v277 = *(_DWORD *)(v275 + 4);
      if (*(_DWORD *)v275)
        v278 = v277 == 0;
      else
        v278 = 1;
      if (v278)
        goto LABEL_373;
      if (*(_DWORD *)v275 == 1 && v277 == 1)
      {
        v279 = *(_BYTE *)(*(_QWORD *)(v275 + 40) + 164);
        goto LABEL_385;
      }
      sub_22392A7E8(&v436);
      if (**(int **)(v436 + 56) > 5)
        goto LABEL_373;
      v281 = *(unsigned __int8 *)(v436 + 72);
      v282 = sub_22322F254(v436, "OSLogSurrogateAppender", 1, 0);
      v283 = v282;
      if (!v281 && !v282)
        goto LABEL_373;
      *(_QWORD *)object = &v436;
      *(std::chrono::steady_clock::time_point *)&object[8] = std::chrono::steady_clock::now();
      *(std::chrono::system_clock::time_point *)&object[16] = std::chrono::system_clock::now();
      *(_DWORD *)&object[24] = 5;
      *(_QWORD *)&object[32] = "unknown file";
      *(_DWORD *)&object[40] = 66;
      v434.i64[0] = (uint64_t)"unknown function";
      v434.i64[1] = 0;
      v435 = 0;
      v284 = **(_QWORD **)object;
      v285 = (const char *)(**(_QWORD **)object + 16);
      v380 = v285;
      if (*(char *)(**(_QWORD **)object + 39) < 0)
      {
        v285 = *(const char **)(v284 + 16);
        v286 = *(_QWORD *)(v284 + 24);
        v381 = **(_QWORD **)object;
        v384 = v281;
        v309 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v309 & 1) == 0)
        {
LABEL_522:
          if (__cxa_guard_acquire(&qword_255788F58))
          {
            sub_224568628((uint64_t)v437);
            sub_223199C58("com.apple.cv3d", (unint64_t)v437, &xmmword_255788F40);
            if (v439 && v438 < 0)
              operator delete(v437[0]);
            __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
            __cxa_guard_release(&qword_255788F58);
            a5 = v387;
          }
        }
      }
      else
      {
        v286 = *(unsigned __int8 *)(**(_QWORD **)object + 39);
        v381 = **(_QWORD **)object;
        v384 = v281;
        v287 = atomic_load((unsigned __int8 *)&qword_255788F58);
        if ((v287 & 1) == 0)
          goto LABEL_522;
      }
      if (byte_255788F57 >= 0)
        v310 = (const char *)&xmmword_255788F40;
      else
        v310 = (const char *)xmmword_255788F40;
      if (byte_255788F57 >= 0)
        v311 = byte_255788F57;
      else
        v311 = *((_QWORD *)&xmmword_255788F40 + 1);
      *(_QWORD *)oslog = os_log_create(v310, v285);
      if (v311 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v311 >= 0x17)
      {
        v313 = (v311 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v311 | 7) != 0x17)
          v313 = v311 | 7;
        v314 = v313 + 1;
        v312 = operator new(v313 + 1);
        *(_QWORD *)&oslog[24] = v314 | 0x8000000000000000;
        *(_QWORD *)&oslog[8] = v312;
        *(_QWORD *)&oslog[16] = v311;
        a5 = v387;
LABEL_440:
        memmove(v312, v310, v311);
        goto LABEL_441;
      }
      oslog[31] = v311;
      v312 = &oslog[8];
      if (v311)
        goto LABEL_440;
LABEL_441:
      v312[v311] = 0;
      oslog[32] = 1;
      if (v286 > 0x7FFFFFFFFFFFFFF7)
        sub_22316DBC0();
      if (v286 >= 0x17)
      {
        v317 = (v286 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v286 | 7) != 0x17)
          v317 = v286 | 7;
        v318 = v317 + 1;
        v315 = operator new(v317 + 1);
        v414 = v318 | 0x8000000000000000;
        *(_QWORD *)&oslog[40] = v315;
        v413 = v286;
        v12 = v386;
      }
      else
      {
        HIBYTE(v414) = v286;
        v315 = &oslog[40];
        v12 = v386;
        if (!v286)
        {
          oslog[40] = 0;
          v415 = 1;
          v316 = *(NSObject **)oslog;
          if ((SHIBYTE(v414) & 0x80000000) == 0)
            goto LABEL_445;
LABEL_451:
          operator delete(*(void **)&oslog[40]);
          a1 = v385;
          if (oslog[32])
            goto LABEL_452;
          goto LABEL_454;
        }
      }
      memmove(v315, v285, v286);
      v315[v286] = 0;
      v415 = 1;
      v316 = *(NSObject **)oslog;
      if (SHIBYTE(v414) < 0)
        goto LABEL_451;
LABEL_445:
      a1 = v385;
      if (oslog[32])
      {
LABEL_452:
        if ((oslog[31] & 0x80000000) != 0)
          operator delete(*(void **)&oslog[8]);
      }
LABEL_454:
      if (*(_QWORD *)oslog)
        os_release(*(void **)oslog);
      if (v283 && *(_QWORD *)(v283 + 24))
      {
        v319 = _os_log_pack_size();
        v320 = (std::__shared_weak_count_vtbl *)operator new(v319, (std::align_val_t)8uLL);
        v321 = (std::__shared_weak_count *)operator new();
        v322 = v321;
        v321->__shared_owners_ = 0;
        v323 = (unint64_t *)&v321->__shared_owners_;
        v321->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
        v321->__shared_weak_owners_ = 0;
        v321[1].__vftable = v320;
        *(_QWORD *)oslog = v320;
        *(_QWORD *)&oslog[8] = v320;
        *(_QWORD *)&oslog[16] = v321;
        do
          v324 = __ldxr(v323);
        while (__stxr(v324 + 1, v323));
        memset(&oslog[24], 0, 24);
        do
          v325 = __ldaxr(v323);
        while (__stlxr(v325 - 1, v323));
        if (!v325)
        {
          ((void (*)(std::__shared_weak_count *))v321->__on_zero_shared)(v321);
          std::__shared_weak_count::__release_weak(v322);
        }
        v326 = *(_QWORD *)oslog;
        *(_WORD *)_os_log_pack_fill() = 0;
        v327 = (char *)operator new();
        v328 = *(unsigned __int8 *)(v381 + 39);
        v329 = v380;
        if ((v328 & 0x80u) != 0)
        {
          v329 = *(const char **)(v381 + 16);
          v328 = *(_QWORD *)(v381 + 24);
        }
        *(_QWORD *)v327 = v326;
        *(_OWORD *)(v327 + 8) = *(_OWORD *)&oslog[8];
        *(_QWORD *)&oslog[8] = 0;
        *(_QWORD *)&oslog[16] = 0;
        *(_OWORD *)(v327 + 24) = *(_OWORD *)&oslog[24];
        *(_QWORD *)&oslog[24] = 0;
        *(_QWORD *)&oslog[32] = 0;
        *((_QWORD *)v327 + 5) = v329;
        *((_QWORD *)v327 + 6) = v328;
        v327[56] = 16;
        v440 = 0;
        v437[0] = v327;
        (*(void (**)(_QWORD, void **))(**(_QWORD **)(v283 + 24) + 40))(*(_QWORD *)(v283 + 24), v437);
        v330 = v437[0];
        v437[0] = 0;
        if (v330)
        {
          v331 = (std::__shared_weak_count *)*((_QWORD *)v330 + 4);
          if (v331)
          {
            v332 = (unint64_t *)&v331->__shared_owners_;
            do
              v333 = __ldaxr(v332);
            while (__stlxr(v333 - 1, v332));
            if (!v333)
            {
              ((void (*)(std::__shared_weak_count *))v331->__on_zero_shared)(v331);
              std::__shared_weak_count::__release_weak(v331);
            }
          }
          v334 = (std::__shared_weak_count *)*((_QWORD *)v330 + 2);
          if (v334)
          {
            v335 = (unint64_t *)&v334->__shared_owners_;
            do
              v336 = __ldaxr(v335);
            while (__stlxr(v336 - 1, v335));
            if (!v336)
            {
              ((void (*)(std::__shared_weak_count *))v334->__on_zero_shared)(v334);
              std::__shared_weak_count::__release_weak(v334);
            }
          }
          MEMORY[0x227684CE8](v330, 0x10F0C40B62ED6C6);
          v337 = v440;
          v440 = 0;
          if (v337)
          {
            v338 = *(std::__shared_weak_count **)(v337 + 32);
            if (v338)
            {
              v339 = (unint64_t *)&v338->__shared_owners_;
              do
                v340 = __ldaxr(v339);
              while (__stlxr(v340 - 1, v339));
              if (!v340)
              {
                ((void (*)(std::__shared_weak_count *))v338->__on_zero_shared)(v338);
                std::__shared_weak_count::__release_weak(v338);
              }
            }
            v341 = *(std::__shared_weak_count **)(v337 + 16);
            if (v341)
            {
              v342 = (unint64_t *)&v341->__shared_owners_;
              do
                v343 = __ldaxr(v342);
              while (__stlxr(v343 - 1, v342));
              if (!v343)
              {
                ((void (*)(std::__shared_weak_count *))v341->__on_zero_shared)(v341);
                std::__shared_weak_count::__release_weak(v341);
              }
            }
            MEMORY[0x227684CE8](v337, 0x10F0C40B62ED6C6);
          }
        }
        v344 = *(std::__shared_weak_count **)&oslog[32];
        v276 = v392;
        if (*(_QWORD *)&oslog[32])
        {
          v345 = (unint64_t *)(*(_QWORD *)&oslog[32] + 8);
          do
            v346 = __ldaxr(v345);
          while (__stlxr(v346 - 1, v345));
          if (!v346)
          {
            ((void (*)(std::__shared_weak_count *))v344->__on_zero_shared)(v344);
            std::__shared_weak_count::__release_weak(v344);
          }
        }
        v347 = *(std::__shared_weak_count **)&oslog[16];
        if (*(_QWORD *)&oslog[16])
        {
          v348 = (unint64_t *)(*(_QWORD *)&oslog[16] + 8);
          do
            v349 = __ldaxr(v348);
          while (__stlxr(v349 - 1, v348));
          if (!v349)
          {
            ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
            std::__shared_weak_count::__release_weak(v347);
          }
        }
      }
      else
      {
        os_log_type_enabled(v316, OS_LOG_TYPE_ERROR);
        *(_WORD *)oslog = 0;
        v350 = (void *)_os_log_send_and_compose_impl();
        v276 = v392;
        if (v350)
          free(v350);
      }
      if (v384)
      {
        sub_22322C138((uint64_t)object, "Unexpected scene type size in GetIndoorOutdoorLabel");
        sub_223182C08((uint64_t)object);
      }
      sub_223182C08((uint64_t)object);
      v351 = v435;
      if (v435)
      {
        v352 = (unint64_t *)&v435->__shared_owners_;
        do
          v353 = __ldaxr(v352);
        while (__stlxr(v353 - 1, v352));
        if (!v353)
        {
          ((void (*)(std::__shared_weak_count *))v351->__on_zero_shared)(v351);
          std::__shared_weak_count::__release_weak(v351);
        }
      }
LABEL_373:
      v279 = 0;
LABEL_385:
      sub_2239250C4(a1, v228, (float32x2_t *)v410, v229, (float32x2_t *)v427, v441, (int32x2_t *)&v423, (uint64_t)&v430, (int32x2_t *)&v406, (int32x2_t *)&v399, &v422, v276, a5, v279, 1);
      a3 = v391;
      v84 = v389;
      if (!v405)
        goto LABEL_390;
      v288 = v401;
      if (!v401)
        goto LABEL_390;
      v289 = (unint64_t *)&v401->__shared_owners_;
      do
        v290 = __ldaxr(v289);
      while (__stlxr(v290 - 1, v289));
      if (!v290)
      {
        ((void (*)(std::__shared_weak_count *))v288->__on_zero_shared)(v288);
        std::__shared_weak_count::__release_weak(v288);
        v291 = v395;
        if (v395)
        {
LABEL_391:
          v292 = (unint64_t *)&v291->__shared_owners_;
          do
            v293 = __ldaxr(v292);
          while (__stlxr(v293 - 1, v292));
          if (!v293)
          {
            ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
            std::__shared_weak_count::__release_weak(v291);
          }
        }
      }
      else
      {
LABEL_390:
        v291 = v395;
        if (v395)
          goto LABEL_391;
      }
      if (!v409)
        goto LABEL_400;
      v294 = (std::__shared_weak_count *)*((_QWORD *)&v407 + 1);
      if (!*((_QWORD *)&v407 + 1))
        goto LABEL_400;
      v295 = (unint64_t *)(*((_QWORD *)&v407 + 1) + 8);
      do
        v296 = __ldaxr(v295);
      while (__stlxr(v296 - 1, v295));
      if (!v296)
      {
        ((void (*)(std::__shared_weak_count *))v294->__on_zero_shared)(v294);
        std::__shared_weak_count::__release_weak(v294);
        if (v426)
        {
LABEL_401:
          v297 = (std::__shared_weak_count *)*((_QWORD *)&v424 + 1);
          if (*((_QWORD *)&v424 + 1))
          {
            v298 = (unint64_t *)(*((_QWORD *)&v424 + 1) + 8);
            do
              v299 = __ldaxr(v298);
            while (__stlxr(v299 - 1, v298));
            if (!v299)
            {
              ((void (*)(std::__shared_weak_count *))v297->__on_zero_shared)(v297);
              std::__shared_weak_count::__release_weak(v297);
            }
          }
        }
      }
      else
      {
LABEL_400:
        if (v426)
          goto LABEL_401;
      }
      kdebug_trace();
      if (!v432)
        goto LABEL_414;
      v300 = (std::__shared_weak_count *)v430.__r_.__value_.__r.__words[2];
      if (!v430.__r_.__value_.__r.__words[2])
        goto LABEL_414;
      v301 = (unint64_t *)(v430.__r_.__value_.__r.__words[2] + 8);
      do
        v302 = __ldaxr(v301);
      while (__stlxr(v302 - 1, v301));
      if (!v302)
      {
        ((void (*)(std::__shared_weak_count *))v300->__on_zero_shared)(v300);
        std::__shared_weak_count::__release_weak(v300);
        if (v443)
        {
LABEL_415:
          v303 = (std::__shared_weak_count *)v441[2];
          if (v441[2])
          {
            v304 = (unint64_t *)(*(_QWORD *)&v441[2] + 8);
            do
              v305 = __ldaxr(v304);
            while (__stlxr(v305 - 1, v304));
            if (!v305)
            {
              ((void (*)(std::__shared_weak_count *))v303->__on_zero_shared)(v303);
              std::__shared_weak_count::__release_weak(v303);
            }
          }
        }
      }
      else
      {
LABEL_414:
        if (v443)
          goto LABEL_415;
      }
      v306 = v418;
      if (v418)
      {
        v307 = (unint64_t *)&v418->__shared_owners_;
        do
          v308 = __ldaxr(v307);
        while (__stlxr(v308 - 1, v307));
        if (!v308)
        {
          ((void (*)(std::__shared_weak_count *))v306->__on_zero_shared)(v306);
          std::__shared_weak_count::__release_weak(v306);
        }
      }
      v85 = v276 + 1;
      a4 = v388;
LABEL_65:
      v83 = (float32x4_t *)((char *)v83 + 248);
      if (v83 == (float32x4_t *)v84)
        goto LABEL_528;
    }
  }
  v85 = v32;
LABEL_528:
  kdebug_trace();
  if (v85)
    sub_223919F74(a1);
  if (v12[4])
  {
    v354 = (_QWORD *)v12[3];
    if (v354)
    {
      do
      {
        v355 = (_QWORD *)*v354;
        operator delete(v354);
        v354 = v355;
      }
      while (v355);
    }
    v12[3] = 0;
    v356 = v12[2];
    if (v356)
    {
      for (i = 0; i != v356; ++i)
        *(_QWORD *)(v12[1] + 8 * i) = 0;
    }
    v12[4] = 0;
  }
  v358 = *(_QWORD **)(a1 + 2808);
  v359 = (_QWORD *)(a1 + 2816);
  if (v358 != (_QWORD *)(a1 + 2816))
  {
    do
    {
      v441[0] = *(int32x2_t *)((char *)v358 + 28);
      v360 = *((_DWORD *)v358 + 9);
      *(int32x2_t *)((char *)&v441[1] + 4) = vadd_s32(*(int32x2_t *)((char *)v358 + 28), (int32x2_t)0x800000008);
      v441[1].i32[0] = v360;
      v441[2].i32[1] = v360 + 8;
      sub_22390246C((uint64_t)(v12 + 1), (int *)v441, (uint64_t)v441);
      sub_22390246C(a1 + 40664, (int *)v441, (uint64_t)v441);
      v361 = (_QWORD *)v358[1];
      if (v361)
      {
        do
        {
          v362 = v361;
          v361 = (_QWORD *)*v361;
        }
        while (v361);
      }
      else
      {
        do
        {
          v362 = (_QWORD *)v358[2];
          v278 = *v362 == (_QWORD)v358;
          v358 = v362;
        }
        while (!v278);
      }
      v358 = v362;
    }
    while (v362 != v359);
  }
  sub_223198030(a1 + 2808, *(_QWORD **)(a1 + 2816));
  *(_QWORD *)(a1 + 2808) = v359;
  *(_OWORD *)(a1 + 2816) = 0u;
  sub_223198030(a1 + 2696, *(_QWORD **)(a1 + 2704));
  *(_QWORD *)(a1 + 2696) = a1 + 2704;
  *(_QWORD *)(a1 + 2712) = 0;
  *(_QWORD *)(a1 + 2704) = 0;
  sub_223E9798C(a1 + 320, 1);
  *(_DWORD *)oslog = v85;
  v441[0] = (int32x2_t)"cv3d.recon.";
  v441[1] = (int32x2_t)11;
  v441[2] = (int32x2_t)"Stats.Occupancy.Jasper_Occupancy";
  v441[3] = (int32x2_t)32;
  sub_2231A9820((uint64_t)v441, (uint64_t)v442, 0, 0, &v430);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v363 = sub_2241471F8();
    v364 = v363[2];
    if (!v364)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v364 = v363[2];
    }
    v365 = *(_QWORD *)(v364 + 64);
    v366 = (std::mutex *)(v365 + 32);
    std::mutex::lock((std::mutex *)(v365 + 32));
    v368 = *(_QWORD *)(v365 + 96);
    v367 = *(_QWORD *)(v365 + 104);
    std::mutex::unlock(v366);
    if (v368 != v367)
    {
      sub_2241471F8();
      v369 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v369 + 24))(v369))
      {
        memset(v441, 0, sizeof(v441));
        v442[0] = 728325608;
        kdebug_trace();
        sub_22392AA84((double *)&qword_255788F20, v369, (int *)oslog, "jasper clouds");
        kdebug_trace();
      }
    }
  }
  memset(v441, 0, sizeof(v441));
  v442[0] = 728325624;
  kdebug_trace();
  size = HIBYTE(v430.__r_.__value_.__r.__words[2]);
  if ((v430.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v430.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    v371 = &v430;
    if ((v430.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v371 = (std::string *)v430.__r_.__value_.__r.__words[0];
    v372 = v371->__r_.__value_.__r.__words[0];
    v373 = v371->__r_.__value_.__l.__size_;
    v374 = v371->__r_.__value_.__s.__data_[16];
    if (v372 == 0x6365722E64337663 && v373 == 0x73746174532E6E6FLL && v374 == 46)
    {
      v377 = sub_223187510();
      if ((v430.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v378 = &v430;
      else
        v378 = (std::string *)v430.__r_.__value_.__r.__words[0];
      if ((v430.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v379 = HIBYTE(v430.__r_.__value_.__r.__words[2]);
      else
        v379 = v430.__r_.__value_.__l.__size_;
      sub_223532E4C(v377, v378, v379, (unsigned int *)oslog, (uint64_t)"jasper clouds", 13);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v430.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v430.__r_.__value_.__l.__data_);
  v441[0] = (int32x2_t)operator new(0x28uLL);
  *(_OWORD *)v441[1].i8 = xmmword_2245C77E0;
  strcpy(*(char **)v441, "Stats.Occupancy.Occupancy_Octree");
  sub_223CFC5B0(a1 + 304, (uint64_t *)v441);
  if (v441[2].i8[7] < 0)
    operator delete(*(void **)v441);
}

void sub_223924C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  uint64_t v53;
  std::__shared_weak_count *v55;
  unint64_t *p_shared_owners;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;

  if (*(_BYTE *)(v53 - 224) && *(char *)(v53 - 225) < 0)
    operator delete(*(void **)(v53 - 248));
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&STACK[0x360]);
  sub_2231BD90C((uint64_t)&a45);
  sub_2231BD974((uint64_t)&a38);
  sub_2231BD90C((uint64_t)&a53);
  sub_2231BD90C((uint64_t)&STACK[0x288]);
  if (LOBYTE(STACK[0x358]))
  {
    v55 = (std::__shared_weak_count *)STACK[0x318];
    if (STACK[0x318])
    {
      p_shared_owners = (unint64_t *)&v55->__shared_owners_;
      do
        v57 = __ldaxr(p_shared_owners);
      while (__stlxr(v57 - 1, p_shared_owners));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
  }
  if (*(_BYTE *)(v53 - 128))
  {
    v58 = *(std::__shared_weak_count **)(v53 - 192);
    if (v58)
    {
      v59 = (unint64_t *)&v58->__shared_owners_;
      do
        v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
  }
  v61 = (std::__shared_weak_count *)STACK[0x258];
  if (STACK[0x258])
  {
    v62 = (unint64_t *)&v61->__shared_owners_;
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2239250C4(uint64_t a1, uint64_t *a2, float32x2_t *a3, float32x2_t *a4, float32x2_t *a5, int32x2_t *a6, int32x2_t *a7, uint64_t a8, int32x2_t *a9, int32x2_t *a10, void **a11, unsigned int a12, uint64_t *a13, __int8 a14, char a15)
{
  float32x2_t v15;
  int32x4_t v22;
  int32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  uint64_t v26;
  uint64_t v27;
  int v29;
  unint64_t v30;
  uint64_t *v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  size_t v35;
  _BYTE *v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  float v40;
  int32x2_t *v41;
  float32x2_t v42;
  float32x2_t v43;
  int32x2_t *v44;
  float32x2_t v45;
  float32x2_t v46;
  float32x2_t *v47;
  float32x2_t v48;
  int32x2_t *v49;
  unint64_t v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  size_t v56;
  const char *v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  const char *v60;
  size_t v61;
  const char *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  size_t v70;
  std::__shared_weak_count_vtbl *v71;
  std::__shared_weak_count *v72;
  int v73;
  size_t v74;
  size_t v75;
  _BYTE *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  std::string::size_type v83;
  std::__shared_weak_count *v84;
  unint64_t *p_shared_owners;
  unint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  std::__shared_weak_count *v117;
  unint64_t *v118;
  unint64_t v119;
  const char *v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  uint64_t v124;
  unsigned int v125;
  uint64_t v126;
  int v127;
  _QWORD *v128;
  size_t v129;
  _BYTE *v130;
  unint64_t v131;
  const void **v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  const char *v136;
  uint64_t v137;
  size_t v138;
  const char *v139;
  unsigned __int8 v140;
  const char *v141;
  size_t v142;
  _BYTE *v143;
  uint64_t v144;
  const char *v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  NSObject *v152;
  size_t v153;
  std::__shared_weak_count_vtbl *v154;
  std::__shared_weak_count *v155;
  size_t v156;
  size_t v157;
  _BYTE *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  char *v164;
  std::string::size_type v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  char *v169;
  uint64_t *v170;
  unint64_t v171;
  std::__shared_weak_count *v172;
  uint64_t *v173;
  unint64_t v174;
  unint64_t v175;
  std::__shared_weak_count *v176;
  uint64_t *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  std::__shared_weak_count *v189;
  unint64_t *v190;
  unint64_t v191;
  uint64_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  std::__shared_weak_count *v199;
  unint64_t *v200;
  unint64_t v201;
  std::__shared_weak_count *v202;
  unint64_t *v203;
  unint64_t v204;
  const char *v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  unint64_t v208;
  uint64_t v209;
  __int128 v210;
  int8x16_t v211;
  int8x16_t v212;
  unsigned __int32 v214;
  __int128 v215;
  int8x16_t v216;
  void *v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  std::__shared_weak_count *v234;
  unint64_t *v235;
  unint64_t v236;
  std::__shared_weak_count *v237;
  uint64_t *v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  int8x16_t v245;
  float32x2_t v246;
  BOOL v247;
  float32x2_t v248;
  float32x2_t v249;
  float32x4_t v250;
  uint64_t v251;
  float32x2_t *v252;
  char *v253;
  float32x2_t v254;
  int v255;
  unint64_t v256;
  BOOL v257;
  uint64_t v258;
  size_t v259;
  const char *v260;
  unsigned __int8 v261;
  const char *v262;
  size_t v263;
  _BYTE *v264;
  int v265;
  const char *v266;
  uint64_t v267;
  uint64_t v268;
  __int128 *v269;
  uint64_t v270;
  uint64_t v271;
  NSObject *v272;
  float v273;
  size_t v274;
  std::__shared_weak_count_vtbl *v275;
  std::__shared_weak_count *v276;
  std::__shared_weak_count *v277;
  unint64_t *v278;
  unint64_t v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  float32x2_t v286;
  uint64_t v287;
  std::__shared_weak_count *v288;
  unint64_t *v289;
  unint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  std::string::size_type v294;
  std::__shared_weak_count *v295;
  unint64_t *v296;
  unint64_t v297;
  std::__shared_weak_count *v298;
  unint64_t *v299;
  unint64_t v300;
  std::__shared_weak_count *v301;
  unint64_t *v302;
  unint64_t v303;
  std::__shared_weak_count *v304;
  unint64_t *v305;
  unint64_t v306;
  void *v307;
  std::__shared_weak_count *v308;
  unint64_t *v309;
  unint64_t v310;
  uint64_t v311;
  unint64_t v312;
  uint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  _BYTE *v318;
  unsigned int v319;
  uint64_t v320;
  float32x2_t *v321;
  uint64_t v322;
  float32x2_t v323;
  float32x2_t v324;
  _BOOL4 v325;
  float32x4_t v326;
  float32x4_t v327;
  uint64_t v329;
  float32x2_t v330;
  float v331;
  char v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  float32x2_t v336;
  char v337;
  BOOL v339;
  uint64_t v340;
  uint64_t v341;
  uint32x2_t v342;
  _BOOL4 v343;
  int32x2_t v344;
  unint64_t v345;
  unint64_t v346;
  unsigned __int16 v347;
  uint64_t v348;
  uint64_t v350;
  float32x4_t v351;
  BOOL v352;
  int8x16_t v353;
  int32x2_t v354;
  int v355;
  int32x2_t *v356;
  uint64_t v357;
  _BOOL4 v359;
  void **v360;
  _BOOL4 v364;
  int32x2_t v365;
  float32x2_t v366;
  int8x16_t v367;
  int v368;
  BOOL v370;
  void **v371;
  int v376;
  BOOL v377;
  void **v378;
  int8x16_t v383;
  float32x2_t v384;
  float32x2_t v385;
  float32x2_t v386;
  float32x2_t v387;
  float32x2_t v388;
  float32x2_t v389;
  float32x2_t v390;
  float32x2_t v391;
  float32x2_t v392;
  float32x2_t v393;
  float32x2_t v394;
  float32x2_t v395;
  uint64_t v396;
  uint64_t v398;
  int8x16_t v399;
  float32x4_t v400;
  uint64_t *v401;
  uint64_t v402;
  uint64_t v403;
  std::mutex *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  _BYTE *v408;
  uint64_t v409;
  int v410;
  uint64_t *v411;
  uint64_t *v412;
  float32x4_t v413;
  unsigned int v414;
  float v415;
  uint64_t *v416;
  uint64_t v417;
  unint64_t v418;
  uint64_t *v419;
  uint64_t v420;
  unint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  unint64_t v425;
  uint64_t v426;
  char *v427;
  char *v428;
  uint64_t v429;
  uint64_t v430;
  unint64_t v431;
  uint64_t *v432;
  uint64_t v433;
  uint64_t v434;
  unint64_t v435;
  uint64_t *v436;
  uint64_t *v437;
  uint64_t v438;
  std::__shared_weak_count *v439;
  unint64_t *v440;
  unint64_t v441;
  std::__shared_weak_count *v442;
  uint64_t v443;
  unint64_t *v444;
  unint64_t v445;
  unint64_t *v446;
  unint64_t v447;
  std::__shared_weak_count *v448;
  unint64_t *v449;
  unint64_t v450;
  std::__shared_weak_count *v451;
  unint64_t *v452;
  unint64_t v453;
  std::__shared_weak_count *v454;
  unint64_t *v455;
  unint64_t v456;
  unint64_t *v457;
  unint64_t v458;
  std::__shared_weak_count *v459;
  unint64_t *v460;
  unint64_t v461;
  int v462;
  uint64_t v463;
  uint64_t v464;
  float32x2_t v465;
  float32x2_t v466;
  float32x2_t v467;
  float32x2_t v468;
  uint64_t v469;
  _BYTE *v470;
  uint64_t *v471;
  uint64_t v472;
  uint64_t v473;
  std::mutex *v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t *v478;
  std::string::size_type size;
  std::string *v480;
  std::string::size_type v481;
  std::string::size_type v482;
  int v483;
  __n128 *v486;
  std::string *v487;
  size_t v488;
  int32x2_t *v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  std::mutex *v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  unint64_t v497;
  uint64_t *v498;
  void **v499;
  void *v500;
  void *v501;
  int v502;
  __n128 *v505;
  void **v506;
  size_t v507;
  float32x4_t v508;
  int32x4_t v509;
  int32x4_t v510;
  float32x2_t v511;
  __int128 v512;
  float32x4_t v513;
  int8x16_t v514;
  int8x16_t v515;
  int8x16_t v516;
  __int128 v517;
  __int128 v518;
  _OWORD *v519;
  uint64_t v520;
  int32x2_t *v521;
  int32x2_t v522;
  unint64_t v523;
  uint64_t v524;
  unint64_t v525;
  unint64_t v526;
  unint64_t v527;
  unint64_t v528;
  unint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  unint64_t v534;
  int32x2_t v535;
  uint64_t v536;
  uint64_t v537;
  unint64_t v538;
  uint64_t v539;
  int v540;
  uint64_t v541;
  uint64_t v542;
  int32x2_t *v543;
  uint64_t v544;
  int32x2_t *v545;
  int32x2_t v546;
  uint64_t v547;
  int32x2_t v548;
  int32x2_t *v549;
  int32x2_t v550;
  uint64_t v551;
  int32x2_t v552;
  uint64_t i;
  float32x4_t v554;
  uint64_t v555;
  uint64_t v556;
  int v557;
  BOOL v558;
  float32x4_t v559;
  uint64_t v560;
  uint64_t v561;
  int v562;
  BOOL v563;
  float32x4_t v564;
  uint64_t v565;
  uint64_t v566;
  int v567;
  BOOL v568;
  float32x4_t v569;
  uint64_t v570;
  uint64_t v571;
  int v572;
  BOOL v573;
  _DWORD *v574;
  float32x4_t v575;
  float32x4_t v576;
  int8x16_t v577;
  float32x4_t v578;
  uint64_t *v579;
  int32x2_t *v580;
  int32x2_t *v581;
  uint64_t v582;
  int v583;
  int v584;
  int v585;
  int v586;
  char *v587;
  float32x4_t v588;
  uint64_t v589;
  int v590;
  char *v591;
  float32x4_t v592;
  int v593;
  char *v594;
  float32x4_t v595;
  int v596;
  char *v597;
  float32x4_t v598;
  float v599;
  float v600;
  uint64_t v601;
  uint64_t v602;
  float32x2_t v603;
  float v604;
  int v605;
  int v606;
  int v607;
  uint64_t v608;
  float32x4_t v609;
  double v610;
  float32x4_t v611;
  double v612;
  double v613;
  double v614;
  float32x4_t v615;
  float32x4_t v616;
  int32x2_t *v617;
  int32x2_t v618;
  int v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  int v623;
  __int32 v624;
  int v626;
  uint64_t v627;
  int32x2_t *v628;
  uint64_t v629;
  int32x2_t *v630;
  uint64_t v631;
  int32x2_t *v632;
  char v633;
  int v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t *v638;
  unsigned int v639;
  void *v640[2];
  void *v641;
  uint64_t v642;
  uint64_t v643;
  int32x2_t *v644;
  float32x4_t v645;
  uint64_t v647;
  uint64_t v648;
  float32x4_t v650;
  int v651;
  const char *v652;
  unint64_t v653;
  float32x4_t v654;
  uint64_t v655;
  char *__s;
  int __sa;
  uint64_t *__sb;
  unint64_t v659;
  unint64_t v660;
  uint64_t *v661;
  uint64_t *v662;
  _BYTE v663[4];
  void *__p[2];
  _BYTE v665[24];
  __int128 v666;
  __int128 v667;
  __int16 v668;
  void *v669;
  uint64_t v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  __int16 v674;
  uint64_t v675;
  uint64_t v676;
  _OWORD v677[2];
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  uint64_t v682;
  uint64_t v683;
  __int128 v684;
  __int128 v685;
  __int128 v686;
  int v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  _OWORD v692[2];
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  __int128 v699;
  _OWORD v700[2];
  __int128 v701;
  std::__shared_weak_count *v702;
  char *v703;
  std::__shared_weak_count *v704;
  std::__shared_weak_count *v705;
  std::__shared_weak_count *v706;
  _QWORD v707[2];
  uint64_t v708;
  __int128 v709;
  __int128 v710;
  __int128 v711;
  unint64_t v712;
  uint64_t (**v713)();
  void *v714;
  uint64_t v715;
  __int128 v716;
  _OWORD v717[2];
  __int16 v718;
  uint64_t (**v719)();
  uint64_t v720;
  uint64_t v721;
  _OWORD v722[6];
  uint64_t (**v723)();
  uint64_t (**v724)(_QWORD);
  uint64_t v725;
  uint64_t v726;
  __int128 v727;
  __int128 v728;
  __int128 v729;
  int v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t (**v733)();
  uint64_t v734;
  uint64_t v735;
  _OWORD v736[2];
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  __int128 v743;
  _OWORD v744[2];
  char v745;
  _BYTE v746[32];
  int8x16_t v747;
  float32x4_t v748;
  __int128 v749;
  __int128 v750;
  int v751;
  std::string v752;
  _BYTE __dst[32];
  int v754;
  std::string v755;
  __int128 v756;
  _QWORD v757[2];
  std::__shared_weak_count *v758;
  __int128 v759;
  std::__shared_weak_count *v760;
  uint64_t v761;
  int v762;
  _BYTE v763[40];
  __int128 v764;
  __int128 v765;
  __int16 v766;
  uint64_t (**v767)();
  void *v768;
  uint64_t v769;
  __int128 v770;
  __int128 v771;
  __int128 v772;
  __int16 v773;
  uint64_t (**v774)();
  uint64_t v775;
  uint64_t v776;
  _OWORD v777[6];
  uint64_t (**v778)();
  uint64_t (**v779)(_QWORD);
  uint64_t v780;
  uint64_t v781;
  __int128 v782;
  __int128 v783;
  __int128 v784;
  int v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t (**v788)();
  uint64_t v789;
  uint64_t v790;
  _OWORD v791[2];
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  __int128 v798;
  _OWORD v799[2];
  char v800;
  _QWORD v801[2];
  std::string v802;
  char v803;
  uint64_t v804;

  v804 = *MEMORY[0x24BDAC8D0];
  v749 = 0u;
  v750 = 0u;
  v751 = 728305624;
  kdebug_trace();
  v26 = *a2;
  v27 = a2[1];
  v661 = a2;
  if (*a2 == v27)
    return kdebug_trace();
  v632 = a6;
  v630 = a7;
  if (a9[7].i8[0])
    _ZF = a10[7].i8[0] == 0;
  else
    _ZF = 1;
  v29 = _ZF;
  v634 = v29;
  v30 = 0xCCCCCCCCCCCCCCCDLL * ((v27 - v26) >> 3);
  v655 = a1;
  v628 = (int32x2_t *)a8;
  if ((v30 & 3) != 0)
  {
    sub_22392A7E8(&v759);
    v31 = a2;
    if (**(int **)(v759 + 56) > 3)
      goto LABEL_154;
    v32 = *(unsigned __int8 *)(v759 + 72);
    v33 = sub_22322F254(v759, "OSLogSurrogateAppender", 1, 0);
    v34 = v33;
    if (!v32 && !v33)
      goto LABEL_154;
    sub_223195210((uint64_t)v707);
    sub_2231813E8(&v708, (uint64_t)"The number of jasper cloud entries is not divisible by ", 55);
    std::ostream::operator<<();
    v659 = v34;
    v651 = v32;
    if ((v717[0] & 0x10) != 0)
    {
      v50 = *((_QWORD *)&v716 + 1);
      if (*((_QWORD *)&v716 + 1) < v712)
      {
        *((_QWORD *)&v716 + 1) = v712;
        v50 = v712;
      }
      v51 = (const void *)*((_QWORD *)&v711 + 1);
      v35 = v50 - *((_QWORD *)&v711 + 1);
      if (v50 - *((_QWORD *)&v711 + 1) > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_76;
    }
    else
    {
      if ((v717[0] & 8) == 0)
      {
        v35 = 0;
        __dst[23] = 0;
        v36 = __dst;
        goto LABEL_32;
      }
      v51 = (const void *)v710;
      v35 = v711 - v710;
      if ((_QWORD)v711 - (_QWORD)v710 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_76:
        sub_22316DBC0();
    }
    if (v35 >= 0x17)
    {
      v52 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v35 | 7) != 0x17)
        v52 = v35 | 7;
      v53 = v52 + 1;
      v36 = operator new(v52 + 1);
      *(_QWORD *)&__dst[8] = v35;
      *(_QWORD *)&__dst[16] = v53 | 0x8000000000000000;
      *(_QWORD *)__dst = v36;
      v31 = a2;
    }
    else
    {
      __dst[23] = v35;
      v36 = __dst;
      if (!v35)
      {
LABEL_32:
        v36[v35] = 0;
        __p[0] = &v759;
        __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
        *(std::chrono::system_clock::time_point *)v665 = std::chrono::system_clock::now();
        *(_DWORD *)&v665[8] = 3;
        *(_QWORD *)&v665[16] = "unknown file";
        LODWORD(v666) = 1096;
        v667 = 0uLL;
        *((_QWORD *)&v666 + 1) = "unknown function";
        v54 = __dst;
        if (__dst[23] < 0)
          v54 = *(char **)__dst;
        __s = v54;
        v55 = *(_QWORD *)__p[0];
        if (*(char *)(*(_QWORD *)__p[0] + 39) < 0)
        {
          v57 = *(const char **)(v55 + 16);
          v56 = *(_QWORD *)(v55 + 24);
          v647 = *(_QWORD *)__p[0] + 16;
          v59 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v59 & 1) != 0)
            goto LABEL_38;
        }
        else
        {
          v56 = *(unsigned __int8 *)(*(_QWORD *)__p[0] + 39);
          v57 = (const char *)(*(_QWORD *)__p[0] + 16);
          v647 = (uint64_t)v57;
          v58 = atomic_load((unsigned __int8 *)&qword_255788F58);
          if ((v58 & 1) != 0)
            goto LABEL_38;
        }
        if (__cxa_guard_acquire(&qword_255788F58))
        {
          sub_224568628((uint64_t)v763);
          sub_223199C58("com.apple.cv3d", (unint64_t)v763, &xmmword_255788F40);
          if (v763[24] && (v763[23] & 0x80000000) != 0)
            operator delete(*(void **)v763);
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
          __cxa_guard_release(&qword_255788F58);
          v31 = a2;
        }
LABEL_38:
        if (byte_255788F57 >= 0)
          v60 = (const char *)&xmmword_255788F40;
        else
          v60 = (const char *)xmmword_255788F40;
        if (byte_255788F57 >= 0)
          v61 = byte_255788F57;
        else
          v61 = *((_QWORD *)&xmmword_255788F40 + 1);
        v62 = v57;
        *(_QWORD *)v763 = os_log_create(v60, v57);
        v63 = &v763[8];
        if (v61 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v61 >= 0x17)
        {
          v64 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v61 | 7) != 0x17)
            v64 = v61 | 7;
          v65 = v64 + 1;
          v63 = operator new(v64 + 1);
          *(_QWORD *)&v763[16] = v61;
          *(_QWORD *)&v763[24] = v65 | 0x8000000000000000;
          *(_QWORD *)&v763[8] = v63;
          v31 = v661;
        }
        else
        {
          v763[31] = v61;
          if (!v61)
          {
LABEL_52:
            v63[v61] = 0;
            v763[32] = 1;
            v66 = &v764;
            if (v56 > 0x7FFFFFFFFFFFFFF7)
              sub_22316DBC0();
            if (v56 >= 0x17)
            {
              v67 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v56 | 7) != 0x17)
                v67 = v56 | 7;
              v68 = v67 + 1;
              v66 = (__int128 *)operator new(v67 + 1);
              *((_QWORD *)&v764 + 1) = v56;
              *(_QWORD *)&v765 = v68 | 0x8000000000000000;
              *(_QWORD *)&v764 = v66;
            }
            else
            {
              BYTE7(v765) = v56;
              if (!v56)
              {
LABEL_60:
                *((_BYTE *)v66 + v56) = 0;
                BYTE8(v765) = 1;
                v69 = *(NSObject **)v763;
                if (SBYTE7(v765) < 0)
                  operator delete((void *)v764);
                if (v763[32] && (v763[31] & 0x80000000) != 0)
                  operator delete(*(void **)&v763[8]);
                if (*(_QWORD *)v763)
                  os_release(*(void **)v763);
                if (!v659 || !*(_QWORD *)(v659 + 24))
                {
                  os_log_type_enabled(v69, OS_LOG_TYPE_INFO);
                  *(_DWORD *)v763 = 136315138;
                  *(_QWORD *)&v763[4] = __s;
                  v626 = 12;
                  v77 = (void *)_os_log_send_and_compose_impl();
                  a8 = (uint64_t)v628;
                  v73 = v651;
                  if (v77)
                    free(v77);
                  goto LABEL_140;
                }
                v70 = _os_log_pack_size();
                v71 = (std::__shared_weak_count_vtbl *)operator new(v70, (std::align_val_t)8uLL);
                v72 = (std::__shared_weak_count *)operator new();
                v73 = v651;
                v72->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
                v72->__shared_owners_ = 0;
                v72->__shared_weak_owners_ = 0;
                v72[1].__vftable = v71;
                *(_QWORD *)&v701 = v71;
                *((_QWORD *)&v701 + 1) = v71;
                v702 = v72;
                v704 = 0;
                v703 = 0;
                v74 = strlen(__s);
                if (v74 > 0x7FFFFFFFFFFFFFF7)
                  sub_22316DBC0();
                v75 = v74;
                if (v74 >= 0x17)
                {
                  v78 = (v74 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v74 | 7) != 0x17)
                    v78 = v74 | 7;
                  v79 = v78 + 1;
                  v76 = operator new(v78 + 1);
                  *(_QWORD *)v746 = v76;
                  *(_QWORD *)&v746[16] = v79 | 0x8000000000000000;
                  *(_QWORD *)&v746[8] = v75;
                }
                else
                {
                  v746[23] = v74;
                  v76 = v746;
                  if (!v74)
                  {
LABEL_81:
                    v76[v75] = 0;
                    v80 = *(_QWORD *)v746;
                    v802.__r_.__value_.__r.__words[0] = *(_QWORD *)&v746[8];
                    *(std::string::size_type *)((char *)v802.__r_.__value_.__r.__words + 7) = *(_QWORD *)&v746[15];
                    v81 = v746[23];
                    v82 = (char *)operator new(0x38uLL);
                    *((_QWORD *)v82 + 1) = 0;
                    *((_QWORD *)v82 + 2) = 0;
                    *((_QWORD *)v82 + 3) = off_24EC1FA48;
                    *(_QWORD *)v82 = &off_24EC1F9F8;
                    v83 = v802.__r_.__value_.__r.__words[0];
                    *((_QWORD *)v82 + 4) = v80;
                    *((_QWORD *)v82 + 5) = v83;
                    *(_QWORD *)(v82 + 47) = *(std::string::size_type *)((char *)v802.__r_.__value_.__r.__words + 7);
                    v82[55] = v81;
                    v802.__r_.__value_.__r.__words[0] = 0;
                    *(std::string::size_type *)((char *)v802.__r_.__value_.__r.__words + 7) = 0;
                    v703 = v82 + 24;
                    v84 = v704;
                    v704 = (std::__shared_weak_count *)v82;
                    if (v84)
                    {
                      p_shared_owners = (unint64_t *)&v84->__shared_owners_;
                      do
                        v86 = __ldaxr(p_shared_owners);
                      while (__stlxr(v86 - 1, p_shared_owners));
                      if (!v86)
                      {
                        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
                        std::__shared_weak_count::__release_weak(v84);
                      }
                    }
                    *(_OWORD *)v763 = v701;
                    *(_QWORD *)&v763[16] = v702;
                    if (v702)
                    {
                      v87 = &v702->__shared_owners_;
                      do
                        v88 = __ldxr((unint64_t *)v87);
                      while (__stxr(v88 + 1, (unint64_t *)v87));
                    }
                    *(_QWORD *)&v763[24] = v703;
                    *(_QWORD *)&v763[32] = v704;
                    if (v704)
                    {
                      v89 = &v704->__shared_owners_;
                      do
                        v90 = __ldxr((unint64_t *)v89);
                      while (__stxr(v90 + 1, (unint64_t *)v89));
                      *(_QWORD *)&v764 = v703;
                      do
                        v91 = __ldaxr((unint64_t *)v89);
                      while (__stlxr(v91 - 1, (unint64_t *)v89));
                      if (!v91)
                      {
                        ((void (*)(std::__shared_weak_count *))v704->__on_zero_shared)(v704);
                        std::__shared_weak_count::__release_weak(v704);
                      }
                    }
                    else
                    {
                      *(_QWORD *)&v764 = v703;
                    }
                    if (v702)
                    {
                      v92 = &v702->__shared_owners_;
                      do
                        v93 = __ldaxr((unint64_t *)v92);
                      while (__stlxr(v93 - 1, (unint64_t *)v92));
                      if (!v93)
                      {
                        ((void (*)(std::__shared_weak_count *))v702->__on_zero_shared)(v702);
                        std::__shared_weak_count::__release_weak(v702);
                      }
                    }
                    if (*(char *)(v764 + 31) >= 0)
                      v94 = v764 + 8;
                    else
                      v94 = *(_QWORD *)(v764 + 8);
                    v95 = *(_QWORD *)v763;
                    v96 = _os_log_pack_fill();
                    *(_DWORD *)v96 = 136315138;
                    *(_QWORD *)(v96 + 4) = v94;
                    v97 = operator new();
                    v98 = *(unsigned __int8 *)(v55 + 39);
                    v99 = v647;
                    if ((v98 & 0x80u) != 0)
                    {
                      v99 = *(_QWORD *)(v55 + 16);
                      v98 = *(_QWORD *)(v55 + 24);
                    }
                    *(_QWORD *)v97 = v95;
                    *(_OWORD *)(v97 + 8) = *(_OWORD *)&v763[8];
                    *(_QWORD *)&v763[8] = 0;
                    *(_QWORD *)&v763[16] = 0;
                    *(_OWORD *)(v97 + 24) = *(_OWORD *)&v763[24];
                    *(_QWORD *)&v763[24] = 0;
                    *(_QWORD *)&v763[32] = 0;
                    *(_QWORD *)(v97 + 40) = v99;
                    *(_QWORD *)(v97 + 48) = v98;
                    *(_BYTE *)(v97 + 56) = 1;
                    *(_QWORD *)v746 = 0;
                    *(_QWORD *)&v701 = v97;
                    (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v659 + 24) + 40))(*(_QWORD *)(v659 + 24), &v701);
                    a8 = (uint64_t)v628;
                    v100 = v701;
                    *(_QWORD *)&v701 = 0;
                    v31 = v661;
                    if (v100)
                    {
                      v101 = *(std::__shared_weak_count **)(v100 + 32);
                      if (v101)
                      {
                        v102 = (unint64_t *)&v101->__shared_owners_;
                        do
                          v103 = __ldaxr(v102);
                        while (__stlxr(v103 - 1, v102));
                        if (!v103)
                        {
                          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
                          std::__shared_weak_count::__release_weak(v101);
                        }
                      }
                      v104 = *(std::__shared_weak_count **)(v100 + 16);
                      if (v104)
                      {
                        v105 = (unint64_t *)&v104->__shared_owners_;
                        do
                          v106 = __ldaxr(v105);
                        while (__stlxr(v106 - 1, v105));
                        if (!v106)
                        {
                          ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
                          std::__shared_weak_count::__release_weak(v104);
                        }
                      }
                      MEMORY[0x227684CE8](v100, 0x10F0C40B62ED6C6);
                      v107 = *(_QWORD *)v746;
                      *(_QWORD *)v746 = 0;
                      if (v107)
                      {
                        v108 = *(std::__shared_weak_count **)(v107 + 32);
                        if (v108)
                        {
                          v109 = (unint64_t *)&v108->__shared_owners_;
                          do
                            v110 = __ldaxr(v109);
                          while (__stlxr(v110 - 1, v109));
                          if (!v110)
                          {
                            ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
                            std::__shared_weak_count::__release_weak(v108);
                          }
                        }
                        v111 = *(std::__shared_weak_count **)(v107 + 16);
                        if (v111)
                        {
                          v112 = (unint64_t *)&v111->__shared_owners_;
                          do
                            v113 = __ldaxr(v112);
                          while (__stlxr(v113 - 1, v112));
                          if (!v113)
                          {
                            ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
                            std::__shared_weak_count::__release_weak(v111);
                          }
                        }
                        MEMORY[0x227684CE8](v107, 0x10F0C40B62ED6C6);
                      }
                    }
                    v114 = *(std::__shared_weak_count **)&v763[32];
                    if (*(_QWORD *)&v763[32])
                    {
                      v115 = (unint64_t *)(*(_QWORD *)&v763[32] + 8);
                      do
                        v116 = __ldaxr(v115);
                      while (__stlxr(v116 - 1, v115));
                      if (!v116)
                      {
                        ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
                        std::__shared_weak_count::__release_weak(v114);
                      }
                    }
                    v117 = *(std::__shared_weak_count **)&v763[16];
                    if (*(_QWORD *)&v763[16])
                    {
                      v118 = (unint64_t *)(*(_QWORD *)&v763[16] + 8);
                      do
                        v119 = __ldaxr(v118);
                      while (__stlxr(v119 - 1, v118));
                      if (!v119)
                      {
                        ((void (*)(std::__shared_weak_count *))v117->__on_zero_shared)(v117);
                        std::__shared_weak_count::__release_weak(v117);
                      }
                    }
LABEL_140:
                    if (v73)
                    {
                      v120 = __dst;
                      if (__dst[23] < 0)
                        v120 = *(const char **)__dst;
                      sub_22322C138((uint64_t)__p, "%s", v120);
                      sub_223182C08((uint64_t)__p);
                    }
                    sub_223182C08((uint64_t)__p);
                    v121 = (std::__shared_weak_count *)*((_QWORD *)&v667 + 1);
                    if (*((_QWORD *)&v667 + 1))
                    {
                      v122 = (unint64_t *)(*((_QWORD *)&v667 + 1) + 8);
                      do
                        v123 = __ldaxr(v122);
                      while (__stlxr(v123 - 1, v122));
                      if (!v123)
                      {
                        ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
                        std::__shared_weak_count::__release_weak(v121);
                      }
                    }
                    if ((__dst[23] & 0x80000000) != 0)
                      operator delete(*(void **)__dst);
                    v707[0] = *MEMORY[0x24BEDB7F0];
                    v124 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
                    *(_QWORD *)((char *)v707 + *(_QWORD *)(v707[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
                    v708 = v124;
                    *(_QWORD *)&v709 = MEMORY[0x24BEDB848] + 16;
                    if (SBYTE7(v716) < 0)
                      operator delete(v714);
                    std::streambuf::~streambuf();
                    std::iostream::~basic_iostream();
                    MEMORY[0x227684BE0]((char *)v717 + 8);
                    a1 = v655;
LABEL_154:
                    v26 = *v31;
                    v30 = 0xCCCCCCCCCCCCCCCDLL * ((v31[1] - *v31) >> 3);
                    if (v30 < 4)
                      goto LABEL_155;
                    goto LABEL_17;
                  }
                }
                memcpy(v76, __s, v75);
                goto LABEL_81;
              }
            }
            memmove(v66, v62, v56);
            goto LABEL_60;
          }
        }
        memmove(v63, v60, v61);
        goto LABEL_52;
      }
    }
    memmove(v36, v51, v35);
    goto LABEL_32;
  }
  v31 = a2;
  if (v30 < 4)
  {
LABEL_155:
    v38 = 0;
    goto LABEL_156;
  }
LABEL_17:
  v37 = 0;
  v38 = 0;
  v39 = v30 >> 2;
  v40 = 3.4028e38;
  do
  {
    v41 = (int32x2_t *)(v26 + 40 * v37);
    v23.i32[0] = v41[1].i32[0];
    v42 = (float32x2_t)vdup_lane_s32(*v41, 1);
    v43 = vmla_f32(vmla_lane_f32(vmul_f32((float32x2_t)*v41, (float32x2_t)*v41), v42, (float32x2_t)*v41, 1), *(float32x2_t *)v23.i8, *(float32x2_t *)v23.i8);
    v44 = (int32x2_t *)(v26 + 40 * (v37 | 1));
    v45 = (float32x2_t)vdup_lane_s32(*v44, 1);
    v42.i32[0] = v44[1].i32[0];
    v46 = vadd_f32(v43, vmla_f32(vmla_lane_f32(vmul_f32((float32x2_t)*v44, (float32x2_t)*v44), v45, (float32x2_t)*v44, 1), v42, v42));
    v47 = (float32x2_t *)(v26 + 40 * (v37 | 2));
    v45.i32[0] = v47[1].i32[0];
    v48 = vadd_f32(v46, vmla_f32(vmla_lane_f32(vmul_f32(*v47, *v47), (float32x2_t)vdup_lane_s32((int32x2_t)*v47, 1), *v47, 1), v45, v45));
    v49 = (int32x2_t *)(v26 + 40 * (v37 | 3));
    v45.i32[0] = v49[1].i32[0];
    *(int32x2_t *)v24.f32 = *v49;
    *(float32x2_t *)v23.i8 = vadd_f32(v48, vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v24.f32, *(float32x2_t *)v24.f32), (float32x2_t)vdup_lane_s32(*v49, 1), (float32x2_t)*v49, 1), v45, v45));
    if (*(float *)v23.i32 < v40)
    {
      v40 = *(float *)v23.i32;
      v38 = v37;
    }
    v37 += 4;
    --v39;
  }
  while (v39);
LABEL_156:
  v639 = v38;
  v125 = v30 - v38;
  if (v30 - v38 >= 4)
    v126 = 4;
  else
    v126 = v125;
  v648 = v126;
  if (v125 > 3)
    goto LABEL_300;
  sub_22392A7E8(&v759);
  if (**(int **)(v759 + 56) > 3)
    goto LABEL_300;
  v127 = *(unsigned __int8 *)(v759 + 72);
  v660 = sub_22322F254(v759, "OSLogSurrogateAppender", 1, 0);
  if (!v127 && !v660)
    goto LABEL_300;
  sub_223195210((uint64_t)v707);
  sub_2231813E8(&v708, (uint64_t)"Unexpected number of jasper cloud banks (", 41);
  v128 = (_QWORD *)std::ostream::operator<<();
  sub_2231813E8(v128, (uint64_t)")", 1);
  __sa = v127;
  if ((v717[0] & 0x10) != 0)
  {
    v131 = *((_QWORD *)&v716 + 1);
    if (*((_QWORD *)&v716 + 1) < v712)
    {
      *((_QWORD *)&v716 + 1) = v712;
      v131 = v712;
    }
    v132 = (const void **)&v711 + 1;
  }
  else
  {
    if ((v717[0] & 8) == 0)
    {
      v129 = 0;
      __dst[23] = 0;
      v130 = __dst;
      goto LABEL_178;
    }
    v132 = (const void **)&v710;
    v131 = v711;
  }
  v133 = *v132;
  v129 = v131 - (_QWORD)*v132;
  if (v129 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v129 >= 0x17)
  {
    v134 = (v129 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v129 | 7) != 0x17)
      v134 = v129 | 7;
    v135 = v134 + 1;
    v130 = operator new(v134 + 1);
    *(_QWORD *)&__dst[8] = v129;
    *(_QWORD *)&__dst[16] = v135 | 0x8000000000000000;
    *(_QWORD *)__dst = v130;
    goto LABEL_177;
  }
  __dst[23] = v131 - *(_BYTE *)v132;
  v130 = __dst;
  if (v129)
LABEL_177:
    memmove(v130, v133, v129);
LABEL_178:
  v130[v129] = 0;
  __p[0] = &v759;
  __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
  *(std::chrono::system_clock::time_point *)v665 = std::chrono::system_clock::now();
  *(_DWORD *)&v665[8] = 3;
  *(_QWORD *)&v665[16] = "unknown file";
  LODWORD(v666) = 1124;
  v667 = 0uLL;
  *((_QWORD *)&v666 + 1) = "unknown function";
  v136 = __dst;
  if (__dst[23] < 0)
    v136 = *(const char **)__dst;
  v652 = v136;
  v137 = *(_QWORD *)__p[0];
  if (*(char *)(*(_QWORD *)__p[0] + 39) < 0)
  {
    v139 = *(const char **)(v137 + 16);
    v138 = *(_QWORD *)(v137 + 24);
  }
  else
  {
    v138 = *(unsigned __int8 *)(*(_QWORD *)__p[0] + 39);
    v139 = (const char *)(*(_QWORD *)__p[0] + 16);
  }
  v645.i64[0] = *(_QWORD *)__p[0] + 16;
  v140 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v140 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v763);
    sub_223199C58("com.apple.cv3d", (unint64_t)v763, &xmmword_255788F40);
    if (v763[24] && (v763[23] & 0x80000000) != 0)
      operator delete(*(void **)v763);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F57 >= 0)
    v141 = (const char *)&xmmword_255788F40;
  else
    v141 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v142 = byte_255788F57;
  else
    v142 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)v763 = os_log_create(v141, v139);
  v143 = &v763[8];
  if (v142 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v142 >= 0x17)
  {
    v144 = v137;
    v145 = v139;
    v146 = (v142 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v142 | 7) != 0x17)
      v146 = v142 | 7;
    v147 = v146 + 1;
    v143 = operator new(v146 + 1);
    *(_QWORD *)&v763[16] = v142;
    *(_QWORD *)&v763[24] = v147 | 0x8000000000000000;
    *(_QWORD *)&v763[8] = v143;
    v139 = v145;
    v137 = v144;
    goto LABEL_197;
  }
  v763[31] = v142;
  if (v142)
LABEL_197:
    memmove(v143, v141, v142);
  v143[v142] = 0;
  v763[32] = 1;
  v148 = &v764;
  v126 = v648;
  if (v138 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v138 >= 0x17)
  {
    v150 = (v138 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v138 | 7) != 0x17)
      v150 = v138 | 7;
    v151 = v150 + 1;
    v148 = (__int128 *)operator new(v150 + 1);
    *((_QWORD *)&v764 + 1) = v138;
    *(_QWORD *)&v765 = v151 | 0x8000000000000000;
    *(_QWORD *)&v764 = v148;
    v149 = v660;
    goto LABEL_205;
  }
  BYTE7(v765) = v138;
  v149 = v660;
  if (v138)
LABEL_205:
    memmove(v148, v139, v138);
  *((_BYTE *)v148 + v138) = 0;
  BYTE8(v765) = 1;
  v152 = *(NSObject **)v763;
  if (SBYTE7(v765) < 0)
    operator delete((void *)v764);
  v31 = v661;
  if (v763[32] && (v763[31] & 0x80000000) != 0)
    operator delete(*(void **)&v763[8]);
  if (*(_QWORD *)v763)
    os_release(*(void **)v763);
  if (v149 && *(_QWORD *)(v149 + 24))
  {
    v153 = _os_log_pack_size();
    v154 = (std::__shared_weak_count_vtbl *)operator new(v153, (std::align_val_t)8uLL);
    v155 = (std::__shared_weak_count *)operator new();
    v155->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v155->__shared_owners_ = 0;
    v155->__shared_weak_owners_ = 0;
    v155[1].__vftable = v154;
    *(_QWORD *)&v701 = v154;
    *((_QWORD *)&v701 + 1) = v154;
    v702 = v155;
    v704 = 0;
    v703 = 0;
    v156 = strlen(v652);
    if (v156 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    v157 = v156;
    if (v156 >= 0x17)
    {
      v160 = (v156 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v156 | 7) != 0x17)
        v160 = v156 | 7;
      v161 = v160 + 1;
      v158 = operator new(v160 + 1);
      *(_QWORD *)&v746[8] = v157;
      *(_QWORD *)&v746[16] = v161 | 0x8000000000000000;
      *(_QWORD *)v746 = v158;
    }
    else
    {
      v746[23] = v156;
      v158 = v746;
      if (!v156)
        goto LABEL_227;
    }
    memcpy(v158, v652, v157);
LABEL_227:
    v158[v157] = 0;
    v162 = *(_QWORD *)v746;
    v802.__r_.__value_.__r.__words[0] = *(_QWORD *)&v746[8];
    *(std::string::size_type *)((char *)v802.__r_.__value_.__r.__words + 7) = *(_QWORD *)&v746[15];
    v163 = v746[23];
    v164 = (char *)operator new(0x38uLL);
    *((_QWORD *)v164 + 1) = 0;
    *((_QWORD *)v164 + 2) = 0;
    *((_QWORD *)v164 + 3) = off_24EC1FA48;
    *(_QWORD *)v164 = &off_24EC1F9F8;
    v165 = v802.__r_.__value_.__r.__words[0];
    *((_QWORD *)v164 + 4) = v162;
    *((_QWORD *)v164 + 5) = v165;
    *(_QWORD *)(v164 + 47) = *(std::string::size_type *)((char *)v802.__r_.__value_.__r.__words + 7);
    v164[55] = v163;
    v802.__r_.__value_.__r.__words[0] = 0;
    *(std::string::size_type *)((char *)v802.__r_.__value_.__r.__words + 7) = 0;
    v703 = v164 + 24;
    v166 = v704;
    v704 = (std::__shared_weak_count *)v164;
    a8 = (uint64_t)v628;
    if (v166)
    {
      v167 = (unint64_t *)&v166->__shared_owners_;
      do
        v168 = __ldaxr(v167);
      while (__stlxr(v168 - 1, v167));
      if (!v168)
      {
        ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
        std::__shared_weak_count::__release_weak(v166);
      }
    }
    v169 = v703;
    *(_OWORD *)v763 = v701;
    *(_QWORD *)&v763[16] = v702;
    if (v702)
    {
      v170 = &v702->__shared_owners_;
      do
        v171 = __ldxr((unint64_t *)v170);
      while (__stxr(v171 + 1, (unint64_t *)v170));
    }
    v172 = v704;
    *(_QWORD *)&v763[24] = v169;
    *(_QWORD *)&v763[32] = v704;
    if (v704)
    {
      v173 = &v704->__shared_owners_;
      do
        v174 = __ldxr((unint64_t *)v173);
      while (__stxr(v174 + 1, (unint64_t *)v173));
      *(_QWORD *)&v764 = v169;
      do
        v175 = __ldaxr((unint64_t *)v173);
      while (__stlxr(v175 - 1, (unint64_t *)v173));
      if (!v175)
      {
        ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
        std::__shared_weak_count::__release_weak(v172);
      }
    }
    else
    {
      *(_QWORD *)&v764 = v169;
    }
    v176 = v702;
    if (v702)
    {
      v177 = &v702->__shared_owners_;
      do
        v178 = __ldaxr((unint64_t *)v177);
      while (__stlxr(v178 - 1, (unint64_t *)v177));
      if (!v178)
      {
        ((void (*)(std::__shared_weak_count *))v176->__on_zero_shared)(v176);
        std::__shared_weak_count::__release_weak(v176);
      }
    }
    if (*(char *)(v764 + 31) >= 0)
      v179 = v764 + 8;
    else
      v179 = *(_QWORD *)(v764 + 8);
    v180 = *(_QWORD *)v763;
    v181 = _os_log_pack_fill();
    *(_DWORD *)v181 = 136315138;
    *(_QWORD *)(v181 + 4) = v179;
    v182 = operator new();
    v183 = *(unsigned __int8 *)(v137 + 39);
    v184 = v645.i64[0];
    if ((v183 & 0x80u) != 0)
    {
      v184 = *(_QWORD *)(v137 + 16);
      v183 = *(_QWORD *)(v137 + 24);
    }
    *(_QWORD *)v182 = v180;
    *(_OWORD *)(v182 + 8) = *(_OWORD *)&v763[8];
    *(_QWORD *)&v763[8] = 0;
    *(_QWORD *)&v763[16] = 0;
    *(_OWORD *)(v182 + 24) = *(_OWORD *)&v763[24];
    *(_QWORD *)&v763[24] = 0;
    *(_QWORD *)&v763[32] = 0;
    *(_QWORD *)(v182 + 40) = v184;
    *(_QWORD *)(v182 + 48) = v183;
    *(_BYTE *)(v182 + 56) = 1;
    *(_QWORD *)v746 = 0;
    *(_QWORD *)&v701 = v182;
    (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v660 + 24) + 40))(*(_QWORD *)(v660 + 24), &v701);
    v31 = v661;
    v185 = v701;
    *(_QWORD *)&v701 = 0;
    if (v185)
    {
      v186 = *(std::__shared_weak_count **)(v185 + 32);
      if (v186)
      {
        v187 = (unint64_t *)&v186->__shared_owners_;
        do
          v188 = __ldaxr(v187);
        while (__stlxr(v188 - 1, v187));
        if (!v188)
        {
          ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
          std::__shared_weak_count::__release_weak(v186);
        }
      }
      v189 = *(std::__shared_weak_count **)(v185 + 16);
      if (v189)
      {
        v190 = (unint64_t *)&v189->__shared_owners_;
        do
          v191 = __ldaxr(v190);
        while (__stlxr(v191 - 1, v190));
        if (!v191)
        {
          ((void (*)(std::__shared_weak_count *))v189->__on_zero_shared)(v189);
          std::__shared_weak_count::__release_weak(v189);
        }
      }
      MEMORY[0x227684CE8](v185, 0x10F0C40B62ED6C6);
      v192 = *(_QWORD *)v746;
      *(_QWORD *)v746 = 0;
      if (v192)
      {
        v193 = *(std::__shared_weak_count **)(v192 + 32);
        if (v193)
        {
          v194 = (unint64_t *)&v193->__shared_owners_;
          do
            v195 = __ldaxr(v194);
          while (__stlxr(v195 - 1, v194));
          if (!v195)
          {
            ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
            std::__shared_weak_count::__release_weak(v193);
          }
        }
        v196 = *(std::__shared_weak_count **)(v192 + 16);
        if (v196)
        {
          v197 = (unint64_t *)&v196->__shared_owners_;
          do
            v198 = __ldaxr(v197);
          while (__stlxr(v198 - 1, v197));
          if (!v198)
          {
            ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
            std::__shared_weak_count::__release_weak(v196);
          }
        }
        MEMORY[0x227684CE8](v192, 0x10F0C40B62ED6C6);
      }
    }
    v199 = *(std::__shared_weak_count **)&v763[32];
    if (*(_QWORD *)&v763[32])
    {
      v200 = (unint64_t *)(*(_QWORD *)&v763[32] + 8);
      do
        v201 = __ldaxr(v200);
      while (__stlxr(v201 - 1, v200));
      if (!v201)
      {
        ((void (*)(std::__shared_weak_count *))v199->__on_zero_shared)(v199);
        std::__shared_weak_count::__release_weak(v199);
      }
    }
    v202 = *(std::__shared_weak_count **)&v763[16];
    if (*(_QWORD *)&v763[16])
    {
      v203 = (unint64_t *)(*(_QWORD *)&v763[16] + 8);
      do
        v204 = __ldaxr(v203);
      while (__stlxr(v204 - 1, v203));
      if (!v204)
      {
        ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
        std::__shared_weak_count::__release_weak(v202);
      }
    }
    if (!__sa)
      goto LABEL_290;
    goto LABEL_287;
  }
  os_log_type_enabled(v152, OS_LOG_TYPE_INFO);
  *(_DWORD *)v763 = 136315138;
  *(_QWORD *)&v763[4] = v652;
  v626 = 12;
  v159 = (void *)_os_log_send_and_compose_impl();
  a8 = (uint64_t)v628;
  if (v159)
    free(v159);
  if (!__sa)
    goto LABEL_290;
LABEL_287:
  v205 = __dst;
  if (__dst[23] < 0)
    v205 = *(const char **)__dst;
  sub_22322C138((uint64_t)__p, "%s", v205);
  sub_223182C08((uint64_t)__p);
LABEL_290:
  sub_223182C08((uint64_t)__p);
  v206 = (std::__shared_weak_count *)*((_QWORD *)&v667 + 1);
  if (*((_QWORD *)&v667 + 1))
  {
    v207 = (unint64_t *)(*((_QWORD *)&v667 + 1) + 8);
    do
      v208 = __ldaxr(v207);
    while (__stlxr(v208 - 1, v207));
    if (!v208)
    {
      ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
      std::__shared_weak_count::__release_weak(v206);
    }
  }
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  v707[0] = *MEMORY[0x24BEDB7F0];
  v209 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v707 + *(_QWORD *)(v707[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v708 = v209;
  *(_QWORD *)&v709 = MEMORY[0x24BEDB848] + 16;
  if (SBYTE7(v716) < 0)
    operator delete(v714);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0]((char *)v717 + 8);
  a1 = v655;
LABEL_300:
  __sb = (uint64_t *)(a1 + 40584);
  *(float32x2_t *)v22.i8 = *a5;
  v22.i32[2] = a5[1].i32[0];
  *(float32x2_t *)v23.i8 = a5[2];
  v23.i32[2] = a5[3].i32[0];
  v24.i32[0] = a5[5].i32[0];
  *(_QWORD *)&v210 = vzip1q_s32(v22, v23).u64[0];
  *(float32x2_t *)v25.f32 = a5[6];
  v25.i32[2] = a5[7].i32[0];
  v211 = (int8x16_t)vnegq_f32(v25);
  v212 = (int8x16_t)vtrn2q_s32(v22, v23);
  v212.i32[2] = HIDWORD(*(_QWORD *)&a5[4]);
  v216 = (int8x16_t)vzip2q_s32(v22, v23);
  v216.i32[2] = v24.i32[0];
  _Q1 = (int8x16_t)vdupq_laneq_s32((int32x4_t)v216, 2);
  v214 = vmla_f32(vmls_lane_f32(vmul_f32(a5[4], *(float32x2_t *)v211.i8), (float32x2_t)vdup_lane_s32((int32x2_t)a5[4], 1), *(float32x2_t *)v25.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v211, v211, 8uLL), *(float32x2_t *)v24.f32).u32[0];
  *((_QWORD *)&v210 + 1) = *(_QWORD *)&a5[4];
  HIDWORD(v215) = 0;
  LODWORD(v215) = vdupq_lane_s32(*(int32x2_t *)&v212, 0).i32[3];
  *(_QWORD *)((char *)&v215 + 4) = vextq_s8(v212, v216, 4uLL).u64[0];
  v216.i64[1] = _Q1.u32[0];
  *(_OWORD *)&v746[16] = v215;
  v747 = v216;
  *(_OWORD *)v746 = v210;
  *(float32x2_t *)v748.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v210, *(float *)v211.i32), *(float32x2_t *)v212.i8, *(float32x2_t *)v25.f32, 1), *(float32x2_t *)v216.i8, v25, 2);
  v748.i64[1] = v214 | 0x3F80000000000000;
  LOBYTE(v707[0]) = 0;
  v745 = 0;
  if ((*(_BYTE *)(a1 + 286) & 1) != 0 && v632[10].i8[0] && *(_BYTE *)(a8 + 80) && a9[7].i8[0] && (a15 & 1) == 0)
  {
    sub_223936990((uint64_t)&v701, (uint64_t)v632, a8, (uint64_t)a9);
    sub_223CC8F3C(*__sb, (uint64_t)&v701, (float32x2_t *)v746, (uint64_t)a4, (uint64_t)__p);
    v217 = __p[1];
    v218 = *(_QWORD *)v665;
    *(_QWORD *)v763 = &off_24EC204C0;
    *(void **)&v763[8] = __p[1];
    *(_QWORD *)&v763[16] = *(_QWORD *)v665;
    __p[1] = 0;
    *(_QWORD *)v665 = 0;
    *(_OWORD *)&v763[24] = *(_OWORD *)&v665[8];
    v764 = v666;
    v765 = v667;
    v766 = v668;
    v219 = v669;
    v220 = v670;
    v767 = &off_24EC204C0;
    v768 = v669;
    v769 = v670;
    v669 = 0;
    v670 = 0;
    v773 = v674;
    v772 = v673;
    v771 = v672;
    v770 = v671;
    v221 = v675;
    v222 = v676;
    v774 = &off_24EC200A8;
    v775 = v675;
    v776 = v676;
    v675 = 0;
    v676 = 0;
    *(_OWORD *)((char *)v777 + 10) = *(_OWORD *)((char *)v677 + 10);
    v777[0] = v677[0];
    v777[5] = v681;
    v777[4] = v680;
    v777[3] = v679;
    v777[2] = v678;
    v780 = v682;
    v781 = v683;
    v783 = v685;
    v784 = v686;
    v782 = v684;
    v785 = v687;
    v778 = &off_24EC207B8;
    v779 = &off_24EC20868;
    v786 = v688;
    v787 = v689;
    v224 = v690;
    v223 = v691;
    v788 = &off_24EC22138;
    v789 = v690;
    v790 = v691;
    v690 = 0;
    v691 = 0;
    *(_OWORD *)((char *)v791 + 10) = *(_OWORD *)((char *)v692 + 10);
    v791[0] = v692[0];
    v225 = v693;
    v226 = v694;
    v792 = v693;
    v793 = v694;
    v693 = 0;
    v694 = 0;
    v227 = v695;
    v228 = v696;
    v794 = v695;
    v795 = v696;
    v229 = v697;
    v230 = v698;
    v796 = v697;
    v797 = v698;
    v695 = 0;
    v696 = 0;
    v697 = 0;
    v698 = 0;
    *(_OWORD *)((char *)v799 + 9) = *(_OWORD *)((char *)v700 + 9);
    v798 = v699;
    v799[0] = v700[0];
    v800 = 1;
    if (v745)
    {
      sub_223936D84((uint64_t)v707, (uint64_t)v763);
      if (!v800)
      {
LABEL_310:
        sub_223937070(__p);
        v665[7] = 11;
        strcpy((char *)__p, "FrameBundle");
        a1 = v655;
        v126 = v648;
        v31 = v661;
        *(_QWORD *)v763 = operator new(0x20uLL);
        *(_OWORD *)&v763[8] = xmmword_2245B8D50;
        strcpy(*(char **)v763, "Stats.DepthCorrection.Frame");
        v763[24] = 1;
        sub_223CCC000((uint64_t)v707, (uint64_t)__p, (uint64_t *)v763);
        if (v763[24] && (v763[23] & 0x80000000) != 0)
          operator delete(*(void **)v763);
        if ((v665[7] & 0x80000000) != 0)
          operator delete(__p[0]);
        v231 = v706;
        if (v706)
        {
          v232 = (unint64_t *)&v706->__shared_owners_;
          do
            v233 = __ldaxr(v232);
          while (__stlxr(v233 - 1, v232));
          if (!v233)
          {
            ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
            std::__shared_weak_count::__release_weak(v231);
          }
        }
        v234 = v705;
        if (v705)
        {
          v235 = (unint64_t *)&v705->__shared_owners_;
          do
            v236 = __ldaxr(v235);
          while (__stlxr(v236 - 1, v235));
          if (!v236)
          {
            ((void (*)(std::__shared_weak_count *))v234->__on_zero_shared)(v234);
            std::__shared_weak_count::__release_weak(v234);
          }
        }
        v237 = v702;
        if (v702)
        {
          v238 = &v702->__shared_owners_;
          do
            v239 = __ldaxr((unint64_t *)v238);
          while (__stlxr(v239 - 1, (unint64_t *)v238));
          if (!v239)
          {
            ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
            std::__shared_weak_count::__release_weak(v237);
          }
        }
        goto LABEL_330;
      }
    }
    else
    {
      v707[1] = v217;
      v708 = v218;
      *(_QWORD *)&v763[8] = 0;
      *(_QWORD *)&v763[16] = 0;
      LOWORD(v712) = v668;
      v707[0] = &off_24EC204C0;
      v713 = &off_24EC204C0;
      v714 = v219;
      v715 = v220;
      v768 = 0;
      v769 = 0;
      v718 = v674;
      v719 = &off_24EC200A8;
      v720 = v221;
      v721 = v222;
      v775 = 0;
      v776 = 0;
      v722[5] = v681;
      v728 = v685;
      v729 = v686;
      v727 = v684;
      *(_OWORD *)((char *)v736 + 10) = *(_OWORD *)((char *)v692 + 10);
      v736[0] = v692[0];
      *(_OWORD *)((char *)v744 + 9) = *(_OWORD *)((char *)v700 + 9);
      v743 = v699;
      v744[0] = v700[0];
      v725 = v682;
      v726 = v683;
      v730 = v687;
      v723 = &off_24EC207B8;
      v724 = &off_24EC20868;
      v731 = v688;
      v732 = v689;
      v733 = &off_24EC22138;
      v734 = v224;
      v735 = v223;
      v789 = 0;
      v790 = 0;
      v737 = v225;
      v738 = v226;
      v792 = 0;
      v793 = 0;
      v794 = 0;
      v739 = v227;
      v740 = v228;
      v741 = v229;
      v742 = v230;
      v795 = 0;
      v796 = 0;
      v797 = 0;
      v745 = 1;
      v709 = *(_OWORD *)&v665[8];
      v710 = v666;
      v711 = v667;
      v716 = v671;
      v717[0] = v672;
      v717[1] = v673;
      v722[0] = v677[0];
      *(_OWORD *)((char *)v722 + 10) = *(_OWORD *)((char *)v677 + 10);
      v722[4] = v680;
      v722[3] = v679;
      v722[2] = v678;
    }
    sub_223937070(v763);
    goto LABEL_310;
  }
LABEL_330:
  if ((_DWORD)v126)
  {
    v240 = 0;
    v241 = a1 + 3008;
    v216.i32[3] = 0;
    __asm { FMOV            V10.2S, #-1.0 }
    v635 = a1 + 3008;
    while (1)
    {
      v252 = (float32x2_t *)(*v31 + 40 * (v639 + v240));
      v253 = (char *)&v701 + 12 * v240;
      v254 = *v252;
      *(float32x2_t *)v253 = *v252;
      *((_DWORD *)v253 + 2) = v252[1].i32[0];
      *(float32x2_t *)v216.i8 = v254;
      _Q1.i32[0] = v252[1].i32[0];
      if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v254, 1), v254, 1), *(float32x2_t *)_Q1.i8, *(float32x2_t *)_Q1.i8).f32[0] > 1.0)break;
      v216.i32[2] = v252[1].i32[0];
LABEL_333:
      v245 = (int8x16_t)vaddq_f32((float32x4_t)v216, (float32x4_t)xmmword_224656610);
      v246 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v245.i8, 1);
      v24 = (float32x4_t)vextq_s8(v245, v245, 8uLL);
      v246.f32[0] = sqrtf(vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v245.i8, *(float32x2_t *)v245.i8), v246, *(float32x2_t *)v245.i8, 1), *(float32x2_t *)v24.f32, *(float32x2_t *)v24.f32).f32[0]);
      v247 = v246.f32[0] > 0.001;
      v248 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v245.i8, 0), 0, *(float32x2_t *)v245.i8, 1), _D10, *(float32x2_t *)v24.f32);
      if ((float)(v248.f32[0] / v246.f32[0]) < 0.996)
        v247 = 0;
      v663[v240] = v247;
      v246.i32[0] = a3[1].i32[0];
      *(float32x2_t *)v24.f32 = a3[2];
      v248.i32[0] = a3[3].i32[0];
      *(float32x2_t *)v25.f32 = a3[4];
      v211.i32[0] = a3[5].i32[0];
      *(float32x2_t *)_Q1.i8 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(*a3, *(float *)v216.i32), *(float32x2_t *)v24.f32, *(float32x2_t *)v216.i8, 1), *(float32x2_t *)v25.f32, (float32x4_t)v216, 2);
      v249 = vmla_lane_f32(vmul_f32(v246, *(float32x2_t *)v216.i8), v248, *(float32x2_t *)v216.i8, 1);
      v250 = (float32x4_t)vextq_s8(v216, v216, 8uLL);
      _Q1.u64[1] = (unint64_t)vmla_f32(v249, *(float32x2_t *)v250.f32, *(float32x2_t *)v211.i8);
      *(float32x2_t *)v250.f32 = a3[6];
      v250.i32[2] = a3[7].i32[0];
      v216 = (int8x16_t)vaddq_f32((float32x4_t)_Q1, v250);
      v251 = v241 + 12 * v240;
      *(_DWORD *)(v251 + 8) = v216.i32[2];
      *(_QWORD *)v251 = v216.i64[0];
      ++v240;
      v126 = v648;
      if (v240 == v648)
        goto LABEL_433;
    }
    sub_22392A7E8(&v759);
    if (**(int **)(v759 + 56) > 2
      || ((v255 = *(unsigned __int8 *)(v759 + 72),
           v256 = sub_22322F254(v759, "OSLogSurrogateAppender", 1, 0),
           v653 = v256,
           !v255)
        ? (v257 = v256 == 0)
        : (v257 = 0),
          v257))
    {
LABEL_427:
      *(float32x2_t *)v216.i8 = *v252;
      v216.i32[2] = v252[1].i32[0];
      goto LABEL_333;
    }
    __p[0] = &v759;
    __p[1] = (void *)std::chrono::steady_clock::now().__d_.__rep_;
    *(std::chrono::system_clock::time_point *)v665 = std::chrono::system_clock::now();
    *(_DWORD *)&v665[8] = 2;
    *(_QWORD *)&v665[16] = "unknown file";
    LODWORD(v666) = 1158;
    *((_QWORD *)&v666 + 1) = "unknown function";
    v667 = 0uLL;
    v258 = *(_QWORD *)__p[0];
    v643 = *(_QWORD *)__p[0];
    if (*(char *)(*(_QWORD *)__p[0] + 39) < 0)
    {
      v260 = *(const char **)(v258 + 16);
      v259 = *(_QWORD *)(v258 + 24);
    }
    else
    {
      v259 = *(unsigned __int8 *)(*(_QWORD *)__p[0] + 39);
      v260 = (const char *)(*(_QWORD *)__p[0] + 16);
    }
    v642 = *(_QWORD *)__p[0] + 16;
    *(float32x2_t *)v645.f32 = *v252;
    v15.i32[0] = v252[1].i32[0];
    v261 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v261 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)__dst);
      sub_223199C58("com.apple.cv3d", (unint64_t)__dst, &xmmword_255788F40);
      if (__dst[24] && (__dst[23] & 0x80000000) != 0)
        operator delete(*(void **)__dst);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
    if (byte_255788F57 >= 0)
      v262 = (const char *)&xmmword_255788F40;
    else
      v262 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v263 = byte_255788F57;
    else
      v263 = *((_QWORD *)&xmmword_255788F40 + 1);
    *(_QWORD *)v763 = os_log_create(v262, v260);
    if (v263 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v263 >= 0x17)
    {
      v265 = v255;
      v266 = v260;
      v267 = (v263 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v263 | 7) != 0x17)
        v267 = v263 | 7;
      v268 = v267 + 1;
      v264 = operator new(v267 + 1);
      *(_QWORD *)&v763[16] = v263;
      *(_QWORD *)&v763[24] = v268 | 0x8000000000000000;
      *(_QWORD *)&v763[8] = v264;
      v260 = v266;
      v255 = v265;
    }
    else
    {
      v763[31] = v263;
      v264 = &v763[8];
      if (!v263)
      {
LABEL_360:
        v264[v263] = 0;
        v763[32] = 1;
        if (v259 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        v31 = v661;
        if (v259 >= 0x17)
        {
          v270 = (v259 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v259 | 7) != 0x17)
            v270 = v259 | 7;
          v271 = v270 + 1;
          v269 = (__int128 *)operator new(v270 + 1);
          *((_QWORD *)&v764 + 1) = v259;
          *(_QWORD *)&v765 = v271 | 0x8000000000000000;
          *(_QWORD *)&v764 = v269;
        }
        else
        {
          BYTE7(v765) = v259;
          v269 = &v764;
          if (!v259)
            goto LABEL_368;
        }
        memmove(v269, v260, v259);
LABEL_368:
        *((_BYTE *)v269 + v259) = 0;
        BYTE8(v765) = 1;
        v272 = *(NSObject **)v763;
        if (SBYTE7(v765) < 0)
          operator delete((void *)v764);
        if (v763[32] && (v763[31] & 0x80000000) != 0)
          operator delete(*(void **)&v763[8]);
        if (*(_QWORD *)v763)
          os_release(*(void **)v763);
        v273 = sqrtf(vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v645.f32, *(float32x2_t *)v645.f32), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v645.f32, 1), *(float32x2_t *)v645.f32, 1), v15, v15).f32[0]);
        if (v653 && *(_QWORD *)(v653 + 24))
        {
          v274 = _os_log_pack_size();
          v275 = (std::__shared_weak_count_vtbl *)operator new(v274, (std::align_val_t)8uLL);
          v276 = (std::__shared_weak_count *)operator new();
          v277 = v276;
          v276->__shared_owners_ = 0;
          v278 = (unint64_t *)&v276->__shared_owners_;
          v276->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v276->__shared_weak_owners_ = 0;
          v276[1].__vftable = v275;
          *(_QWORD *)v763 = v275;
          *(_QWORD *)&v763[8] = v275;
          *(_QWORD *)&v763[16] = v276;
          do
            v279 = __ldxr(v278);
          while (__stxr(v279 + 1, v278));
          *(_QWORD *)&v763[24] = 0;
          *(_QWORD *)&v763[32] = 0;
          *(_QWORD *)&v764 = 0;
          v31 = v661;
          do
            v280 = __ldaxr(v278);
          while (__stlxr(v280 - 1, v278));
          if (!v280)
          {
            ((void (*)(std::__shared_weak_count *))v276->__on_zero_shared)(v276);
            std::__shared_weak_count::__release_weak(v277);
          }
          v281 = *(_QWORD *)v763;
          v282 = _os_log_pack_fill();
          *(_DWORD *)v282 = 134217984;
          *(double *)(v282 + 4) = v273;
          v283 = operator new();
          v284 = *(unsigned __int8 *)(v643 + 39);
          v285 = v642;
          if ((v284 & 0x80u) != 0)
          {
            v285 = *(_QWORD *)(v643 + 16);
            v284 = *(_QWORD *)(v643 + 24);
          }
          *(_QWORD *)v283 = v281;
          *(_OWORD *)(v283 + 8) = *(_OWORD *)&v763[8];
          *(_QWORD *)&v763[8] = 0;
          *(_QWORD *)&v763[16] = 0;
          *(_OWORD *)(v283 + 24) = *(_OWORD *)&v763[24];
          *(_QWORD *)&v763[24] = 0;
          *(_QWORD *)&v763[32] = 0;
          *(_QWORD *)(v283 + 40) = v285;
          *(_QWORD *)(v283 + 48) = v284;
          *(_BYTE *)(v283 + 56) = 2;
          v802.__r_.__value_.__r.__words[0] = 0;
          *(_QWORD *)__dst = v283;
          (*(void (**)(_QWORD, _BYTE *))(**(_QWORD **)(v653 + 24) + 40))(*(_QWORD *)(v653 + 24), __dst);
          v287 = *(_QWORD *)__dst;
          *(_QWORD *)__dst = 0;
          if (v287)
          {
            v288 = *(std::__shared_weak_count **)(v287 + 32);
            if (v288)
            {
              v289 = (unint64_t *)&v288->__shared_owners_;
              do
                v290 = __ldaxr(v289);
              while (__stlxr(v290 - 1, v289));
              if (!v290)
              {
                ((void (*)(std::__shared_weak_count *))v288->__on_zero_shared)(v288);
                std::__shared_weak_count::__release_weak(v288);
              }
            }
            v291 = *(std::__shared_weak_count **)(v287 + 16);
            if (v291)
            {
              v292 = (unint64_t *)&v291->__shared_owners_;
              do
                v293 = __ldaxr(v292);
              while (__stlxr(v293 - 1, v292));
              if (!v293)
              {
                ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
                std::__shared_weak_count::__release_weak(v291);
              }
            }
            MEMORY[0x227684CE8](v287, 0x10F0C40B62ED6C6);
            v294 = v802.__r_.__value_.__r.__words[0];
            v802.__r_.__value_.__r.__words[0] = 0;
            if (v294)
            {
              v295 = *(std::__shared_weak_count **)(v294 + 32);
              if (v295)
              {
                v296 = (unint64_t *)&v295->__shared_owners_;
                do
                  v297 = __ldaxr(v296);
                while (__stlxr(v297 - 1, v296));
                if (!v297)
                {
                  ((void (*)(std::__shared_weak_count *))v295->__on_zero_shared)(v295);
                  std::__shared_weak_count::__release_weak(v295);
                }
              }
              v298 = *(std::__shared_weak_count **)(v294 + 16);
              if (v298)
              {
                v299 = (unint64_t *)&v298->__shared_owners_;
                do
                  v300 = __ldaxr(v299);
                while (__stlxr(v300 - 1, v299));
                if (!v300)
                {
                  ((void (*)(std::__shared_weak_count *))v298->__on_zero_shared)(v298);
                  std::__shared_weak_count::__release_weak(v298);
                }
              }
              MEMORY[0x227684CE8](v294, 0x10F0C40B62ED6C6);
            }
          }
          v301 = *(std::__shared_weak_count **)&v763[32];
          a1 = v655;
          if (*(_QWORD *)&v763[32])
          {
            v302 = (unint64_t *)(*(_QWORD *)&v763[32] + 8);
            do
              v303 = __ldaxr(v302);
            while (__stlxr(v303 - 1, v302));
            if (!v303)
            {
              ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
              std::__shared_weak_count::__release_weak(v301);
            }
          }
          v304 = *(std::__shared_weak_count **)&v763[16];
          v241 = v635;
          if (*(_QWORD *)&v763[16])
          {
            v305 = (unint64_t *)(*(_QWORD *)&v763[16] + 8);
            do
              v306 = __ldaxr(v305);
            while (__stlxr(v306 - 1, v305));
            if (!v306)
            {
              ((void (*)(std::__shared_weak_count *))v304->__on_zero_shared)(v304);
              std::__shared_weak_count::__release_weak(v304);
            }
          }
        }
        else
        {
          os_log_type_enabled(v272, OS_LOG_TYPE_DEBUG);
          *(_DWORD *)v763 = 134217984;
          *(double *)&v763[4] = v273;
          v626 = 12;
          v307 = (void *)_os_log_send_and_compose_impl();
          a1 = v655;
          v241 = v635;
          if (v307)
            free(v307);
        }
        if (v255)
        {
          v286.i32[0] = v252[1].i32[0];
          sub_22322C138((uint64_t)__p, "Ocp Lidar bank is %fm away from keyframe", sqrtf(vmla_f32(vmla_lane_f32(vmul_f32(*v252, *v252), (float32x2_t)vdup_lane_s32((int32x2_t)*v252, 1), *v252, 1), v286, v286).f32[0]));
          sub_223182C08((uint64_t)__p);
        }
        sub_223182C08((uint64_t)__p);
        v308 = (std::__shared_weak_count *)*((_QWORD *)&v667 + 1);
        if (*((_QWORD *)&v667 + 1))
        {
          v309 = (unint64_t *)(*((_QWORD *)&v667 + 1) + 8);
          do
            v310 = __ldaxr(v309);
          while (__stlxr(v310 - 1, v309));
          if (!v310)
          {
            ((void (*)(std::__shared_weak_count *))v308->__on_zero_shared)(v308);
            std::__shared_weak_count::__release_weak(v308);
          }
        }
        goto LABEL_427;
      }
    }
    memmove(v264, v262, v263);
    goto LABEL_360;
  }
LABEL_433:
  v627 = a1 + 40212;
  v631 = a1 + 2856;
  v311 = a1 + 3056;
  v312 = 145;
  v629 = a1 + 3056;
  do
  {
    *(_QWORD *)v311 = 0;
    *(_DWORD *)(v311 + 8) = 0;
    *(_QWORD *)(v311 + 16) = 0;
    *(_DWORD *)(v311 + 24) = 0;
    *(_DWORD *)(v311 + 28) = 0xFFFF;
    *(_BYTE *)(v311 + 32) = 0;
    *(_QWORD *)(v311 + 64) = 0;
    *(_DWORD *)(v311 + 72) = 0;
    *(_QWORD *)(v311 + 36) = 0;
    *(_QWORD *)(v311 + 52) = 0;
    *(_QWORD *)(v311 + 44) = 0;
    *(_DWORD *)(v311 + 76) = 0xFFFF;
    *(_BYTE *)(v311 + 80) = 0;
    *(_QWORD *)(v311 + 112) = 0;
    *(_DWORD *)(v311 + 120) = 0;
    *(_QWORD *)(v311 + 84) = 0;
    *(_QWORD *)(v311 + 100) = 0;
    *(_QWORD *)(v311 + 92) = 0;
    *(_DWORD *)(v311 + 124) = 0xFFFF;
    *(_BYTE *)(v311 + 128) = 0;
    *(_QWORD *)(v311 + 160) = 0;
    *(_DWORD *)(v311 + 168) = 0;
    *(_QWORD *)(v311 + 148) = 0;
    *(_QWORD *)(v311 + 132) = 0;
    *(_QWORD *)(v311 + 140) = 0;
    *(_DWORD *)(v311 + 172) = 0xFFFF;
    *(_BYTE *)(v311 + 176) = 0;
    --v312;
    *(_DWORD *)(v311 + 180) = 0;
    *(_QWORD *)(v311 + 184) = 0;
    v311 += 192;
  }
  while (v312 > 1);
  v644 = (int32x2_t *)(a1 + 30704);
  if ((_DWORD)v126)
  {
    v313 = 0;
    v314 = 0;
    v315 = 12 * v126;
    v316 = a1 + 3056;
    do
    {
      v636 = v316;
      v637 = v313;
      v317 = 0;
      v318 = v663;
      v319 = v639;
      do
      {
        v320 = *(_QWORD *)(*v661 + 40 * v319 + 16);
        if (v314 < (*(_QWORD *)(*v661 + 40 * v319 + 24) - v320) >> 5)
        {
          v321 = (float32x2_t *)(v320 + 32 * v314);
          v322 = a1 + v313;
          _Q1.i32[0] = a3[1].i32[0];
          v24.i32[0] = a3[3].i32[0];
          v25.i32[0] = a3[5].i32[0];
          v211.i32[0] = v321[1].i32[0];
          v323 = *v321;
          v324 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*a3, COERCE_FLOAT(*v321)), a3[2], *v321, 1), a3[4], *(float *)v211.i32);
          v216.u64[1] = (unint64_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)_Q1.i8, *v321), *(float32x2_t *)v24.f32, *v321, 1), *(float32x2_t *)v211.i8, *(float32x2_t *)v25.f32);
          *(float32x2_t *)_Q1.i8 = a3[6];
          _Q1.i32[2] = a3[7].i32[0];
          _Q1 = (int8x16_t)vaddq_f32((float32x4_t)v216, (float32x4_t)_Q1);
          *(_DWORD *)(a1 + v313 + 3064) = _Q1.i32[2];
          *(_QWORD *)(v322 + 3056) = _Q1.i64[0];
          *(float32x2_t *)v216.i8 = v321[2];
          *(_QWORD *)(v322 + 3072) = v216.i64[0];
          *(_DWORD *)(v322 + 3080) = v321[3].i32[0];
          v325 = (_Q1.i32[0] & 0x7FFFFFFFu) < 0x7F800000;
          if ((_Q1.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          {
            v325 = (*(_DWORD *)(v322 + 3060) & 0x7FFFFFFFu) < 0x7F800000;
            if ((*(_DWORD *)(v322 + 3060) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              v325 = (*(_DWORD *)(a1 + v313 + 3064) & 0x7FFFFFFFu) < 0x7F800000;
          }
          if (v325)
          {
            v24.i32[0] = a5[1].i32[0];
            v25.i32[0] = a5[3].i32[0];
            *(float32x2_t *)v211.i8 = a5[4];
            v323.i32[0] = a5[5].i32[0];
            *(float32x2_t *)v326.f32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(*a5, *(float *)_Q1.i32), a5[2], *(float32x2_t *)_Q1.i8, 1), *(float32x2_t *)v211.i8, (float32x4_t)_Q1, 2);
            *(float32x2_t *)&v326.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v24.f32, *(float32x2_t *)_Q1.i8), *(float32x2_t *)v25.f32, *(float32x2_t *)_Q1.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(_Q1, _Q1, 8uLL), v323);
            *(float32x2_t *)v24.f32 = a5[6];
            v24.i32[2] = a5[7].i32[0];
            v327 = vaddq_f32(v326, v24);
            v654 = v327;
            _S14 = v327.f32[2];
            if (v327.f32[2] >= 0.0)
            {
              v329 = a1 + v317;
              v327.i64[0] = *(_QWORD *)(a1 + v317 + 3008);
              v327.i32[2] = *(_DWORD *)(a1 + v317 + 3016);
              _Q1 = (int8x16_t)vsubq_f32((float32x4_t)_Q1, v327);
              v645 = (float32x4_t)_Q1;
              if (*(double *)v216.i64 < 0.640000045
                || (v330 = (float32x2_t)vextq_s8(_Q1, _Q1, 8uLL).u64[0],
                    v331 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)_Q1.i8, *(float32x2_t *)_Q1.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)_Q1.i8, 1), *(float32x2_t *)_Q1.i8, 1), v330, v330).f32[0], v331 >= 100.0)|| (v332 = 1, *(double *)v216.i64 < 0.800000012) && v331 < 25.0)
              {
                v332 = 0;
              }
              v333 = a1;
              v334 = a1 + v313;
              *(_BYTE *)(v334 + 3086) = v332;
              v24 = v654;
              *(float32x2_t *)v327.f32 = a4[3];
              v335 = (unint64_t)vmul_f32(*(float32x2_t *)v654.f32, a4[2]);
              v336 = vdiv_f32((float32x2_t)v335, (float32x2_t)vdup_laneq_s32((int32x4_t)v654, 2));
              if (*(_BYTE *)(v333 + 222))
                v337 = v332;
              else
                v337 = 1;
              *(float32x2_t *)v216.i8 = vadd_f32(*(float32x2_t *)v327.f32, v336);
              LODWORD(v335) = a4[11].i32[0];
              *(double *)_Q1.i64 = (double)v335 + -0.5;
              *(float *)_Q1.i32 = *(double *)_Q1.i64;
              _NF = *(float *)v216.i32 >= -0.5 && *(float *)v216.i32 < *(float *)_Q1.i32;
              if (!_NF
                || ((_Q1.i32[0] = a4[11].i32[1],
                     *(double *)_Q1.i64 = (double)_Q1.u64[0] + -0.5,
                     *(float *)_Q1.i32 = *(double *)_Q1.i64,
                     v327.i32[0] = v216.i32[1],
                     *(float *)&v216.i32[1] >= -0.5)
                  ? (v339 = *(float *)&v216.i32[1] < *(float *)_Q1.i32)
                  : (v339 = 0),
                    !v339))
              {
                *(_BYTE *)(v334 + 3087) = v332;
                *(_BYTE *)(v334 + 3086) = 0;
                a1 = v655;
                goto LABEL_441;
              }
              *(int32x2_t *)v216.i8 = vcvt_s32_f32(vrndm_f32(vadd_f32(*(float32x2_t *)v216.i8, (float32x2_t)0x3F0000003F000000)));
              *(int8x16_t *)v640 = v216;
              if (!v745 || (v341 = v737, v340 = v738, v737 == v738))
              {
                v343 = 0;
              }
              else
              {
                v633 = v337;
                v342 = vcgt_u32(*(uint32x2_t *)((char *)v736 + 8), *(uint32x2_t *)v216.i8);
                if ((v342.i32[0] & v342.i32[1] & 1) == 0)
                {
                  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/ImageProcessing/src/DepthCorrection/SpecularRegions.cpp", 41, (uint64_t)"idx[0] >= 0 && idx[1] >= 0 && idx[0] < regions_buffer_.Width() && idx[1] < regions_buffer_.Height()", 99, (uint64_t)&unk_2245A741E, 0, (void (*)(void **))sub_22457406C))
                  {
                    abort();
                  }
                  v341 = v737;
                  v340 = v738;
                }
                _Q1.i64[1] = (uint64_t)v640[1];
                v344 = vmul_s32(*(int32x2_t *)&v736[1], (int32x2_t)v640[0]);
                *(int32x2_t *)_Q1.i8 = vdup_lane_s32(v344, 1);
                v345 = *(unsigned __int8 *)(*(_QWORD *)&v736[0] + vadd_s32(*(int32x2_t *)_Q1.i8, v344).u32[0]);
                v346 = 0xCCCCCCCCCCCCCCCDLL * ((v340 - v341) >> 3);
                v347 = v345 - 100;
                if (v346 > v345)
                  v347 = v345;
                v343 = v346 > v347;
                v337 = v633;
              }
              v348 = v322 + 3056;
              *(_BYTE *)(v655 + v313 + 3088) = v343;
              if (((v634 | v343) & 1) != 0)
                goto LABEL_479;
              if (!*(_BYTE *)(v655 + 222))
              {
                _Q1.i64[1] = (uint64_t)v640[1];
                _D0 = vmul_s32(a10[5], (int32x2_t)v640[0]);
                *(int32x2_t *)_Q1.i8 = vdup_lane_s32(_D0, 1);
                _D0.i16[0] = *(_WORD *)(*(_QWORD *)&a10[3] + 2 * vadd_s32(_D0, *(int32x2_t *)_Q1.i8).u32[0]);
                _Q1.i32[0] = *(_DWORD *)(v655 + 8);
                __asm { FCVT            S0, H0 }
                if (*(float *)_Q1.i32 > *(float *)_D0.i32)
                  goto LABEL_479;
              }
              _Q1.i64[1] = (uint64_t)v640[1];
              _D0 = vmul_s32(a9[5], (int32x2_t)v640[0]);
              *(int32x2_t *)_Q1.i8 = vdup_lane_s32(_D0, 1);
              v360 = (void **)(*(_QWORD *)&a9[3] + 2 * vadd_s32(*(int32x2_t *)_Q1.i8, _D0).u32[0]);
              _D0.i16[0] = *(_WORD *)v360;
              __asm { FCVT            S1, H0 }
              if (*(float *)_Q1.i32 < 0.0 || (_Q1.i32[0] & 0x7FFFFFFFu) > 0x7F7FFFFF)
              {
LABEL_479:
                if (!v343)
                {
                  *(_BYTE *)(v655 + v313 + 3087) = *(_BYTE *)(v334 + 3086);
                  *(_BYTE *)(v334 + 3086) = 0;
                  a1 = v655;
                  goto LABEL_441;
                }
                v350 = sub_223CCAF1C((uint64_t)v707, LODWORD(v640[0]) | ((unint64_t)HIDWORD(v640[0]) << 32), (float32x2_t)v640[0], (float32x4_t)_Q1, *(double *)v327.i64, *(double *)v24.i64);
                v352 = (v350 & 0xFF00000000) != 0;
                *(_BYTE *)(v655 + v313 + 3087) = v352;
                *(_BYTE *)(v334 + 3086) = v352;
                a1 = v655;
                if ((v350 & 0xFF00000000) == 0)
                  goto LABEL_441;
                if (_S14 > *(float *)&v350)
                {
                  v351.i64[0] = *(_QWORD *)((char *)&v701 + v317);
                  v351.i32[2] = *(_DWORD *)((char *)&v701 + v317 + 8);
                  v353 = (int8x16_t)vmlaq_n_f32(v351, vsubq_f32(v654, v351), (float)(*(float *)&v350 - v351.f32[2]) / (float)(_S14 - v351.f32[2]));
                  *(float32x2_t *)v24.f32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v746, *(float *)v353.i32), *(float32x2_t *)&v746[16], *(float32x2_t *)v353.i8, 1), *(float32x2_t *)v747.i8, (float32x4_t)v353, 2);
                  _Q1 = vextq_s8(v747, v747, 8uLL);
                  *(float32x2_t *)&v24.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32((float32x2_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)v746, *(int8x16_t *)v746, 8uLL), *(float32x2_t *)v353.i8), (float32x2_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)&v746[16], *(int8x16_t *)&v746[16], 8uLL), *(float32x2_t *)v353.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v353, v353, 8uLL), *(float32x2_t *)_Q1.i8);
                  v216 = (int8x16_t)vaddq_f32(v748, v24);
                  *(_DWORD *)(v348 + 8) = v216.i32[2];
                  *(_QWORD *)v348 = v216.i64[0];
                }
LABEL_483:
                if (v632[10].i8[0])
                {
                  _Q1.i32[3] = HIDWORD(v640[1]);
                  v354 = vmul_s32(v632[8], (int32x2_t)v640[0]);
                  *(int32x2_t *)_Q1.i8 = vdup_lane_s32(v354, 1);
                  v355 = *(unsigned __int8 *)(*(_QWORD *)&v632[3] + 2 * vadd_s32(*(int32x2_t *)_Q1.i8, v354).u32[0] + 1);
                  v356 = v630;
                  v357 = a1 + v313;
                  *(_BYTE *)(a1 + v313 + 3084) = v355;
                  if (v630[7].i8[0])
                    goto LABEL_485;
LABEL_496:
                  v359 = 1;
                  if ((v355 | 2) == 3)
                    goto LABEL_497;
                }
                else
                {
                  v355 = 254;
                  v356 = v630;
                  v357 = a1 + v313;
                  *(_BYTE *)(a1 + v313 + 3084) = -2;
                  if (!v630[7].i8[0])
                    goto LABEL_496;
LABEL_485:
                  _Q1.i32[3] = HIDWORD(v640[1]);
                  _D0 = vmul_s32(v356[5], (int32x2_t)v640[0]);
                  *(int32x2_t *)_Q1.i8 = vdup_lane_s32(_D0, 1);
                  _D0.i16[0] = *(_WORD *)(*(_QWORD *)&v356[3] + 2 * vadd_s32(*(int32x2_t *)_Q1.i8, _D0).u32[0]);
                  __asm { FCVT            S0, H0 }
                  v359 = *(float *)_D0.i32 > 0.0;
                  if ((v355 | 2) == 3)
                  {
LABEL_497:
                    if (!v359)
                      *(_BYTE *)(v357 + 3084) = -2;
                  }
                }
                if (a14 == 2)
                {
                  *(_BYTE *)(a1 + v313 + 3085) = 25;
                }
                else
                {
                  if (v628[10].i8[0])
                    v364 = v359;
                  else
                    v364 = 0;
                  if (v364)
                  {
                    _Q1.i32[3] = HIDWORD(v640[1]);
                    v365 = vmul_s32(v628[8], (int32x2_t)v640[0]);
                    *(int32x2_t *)_Q1.i8 = vdup_lane_s32(v365, 1);
                    *(_BYTE *)(a1 + v313 + 3085) = *(_BYTE *)(*(_QWORD *)&v628[3]
                                                            + 2 * vadd_s32(*(int32x2_t *)_Q1.i8, v365).u32[0]
                                                            + 1);
                  }
                  else
                  {
                    *(_BYTE *)(a1 + v313 + 3085) = -2;
                  }
                }
                goto LABEL_441;
              }
              *(_BYTE *)(v655 + v313 + 3087) = 1;
              if (*v318)
              {
                _S2 = vabds_f32(_S14, *(float *)_Q1.i32);
                if (_S2 <= 0.2)
                {
                  v368 = *(unsigned __int8 *)(v334 + 3086);
                  a1 = v655;
                  if (v368)
                    goto LABEL_483;
                }
                else
                {
                  *(_BYTE *)(v334 + 3086) = 0;
                  __asm
                  {
                    FCVT            H2, S14
                    FCVT            S3, H2
                  }
                  if (*(float *)_Q1.i32 >= _S3)
                    *(float *)_D0.i32 = _S2;
                  a1 = v655;
                }
                if ((v337 & 1) != 0)
                {
                  *(_WORD *)v763 = _D0.i16[0];
                  LOWORD(__p[0]) = 17664;
                  __asm { FCVT            S0, H0 }
                  v370 = _S0 <= 5.0;
                  v360 = (void **)v763;
                  v371 = __p;
                }
                else
                {
                  *(_WORD *)v763 = 18688;
                  _H0 = *(_WORD *)v360;
                  __asm { FCVT            S0, H0 }
                  v370 = _S0 <= 10.0;
                  v371 = (void **)v763;
                }
                if (!v370)
                  v360 = v371;
                _H0 = *(_WORD *)v360;
                __asm { FCVT            S0, H0 }
                _Q1.i64[0] = *(_QWORD *)(v329 + 3008);
                _Q1.i32[2] = *(_DWORD *)(v329 + 3016);
                _Q1 = (int8x16_t)vmlaq_n_f32((float32x4_t)_Q1, v645, (float)(_S0 - *(float *)((char *)&v701 + v317 + 8)) / _S14);
                *(_DWORD *)(v348 + 8) = _Q1.i32[2];
                *(_QWORD *)v348 = _Q1.i64[0];
              }
              else
              {
                v366 = vadd_f32(vmul_f32(a4[4], vcvt_f32_s32((int32x2_t)v640[0])), a4[5]);
                v24.i64[1] = __PAIR64__(HIDWORD(v640[1]), 1.0);
                v367 = (int8x16_t)vmlaq_n_f32(vnegq_f32(v654), v24, *(float *)_Q1.i32);
                *(int32x2_t *)v24.f32 = vdup_lane_s32(*(int32x2_t *)v367.i8, 1);
                v25.i64[0] = vextq_s8(v367, v367, 8uLL).u64[0];
                *(float32x2_t *)v211.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v367.i8, *(float32x2_t *)v367.i8), *(float32x2_t *)v24.f32, *(float32x2_t *)v367.i8, 1), *(float32x2_t *)v25.f32, *(float32x2_t *)v25.f32);
                if (*(float *)v211.i32 <= (float)((float)(*(float *)(v655 + 448) * 0.5)
                                                 * (float)(*(float *)(v655 + 448) * 0.5)))
                {
                  v376 = *(unsigned __int8 *)(v334 + 3086);
                  a1 = v655;
                  if (v376)
                    goto LABEL_483;
                }
                else
                {
                  *(_BYTE *)(v334 + 3086) = 0;
                  a1 = v655;
                }
                if ((v337 & 1) != 0)
                {
                  *(_WORD *)v763 = _D0.i16[0];
                  LOWORD(__p[0]) = 17664;
                  v377 = *(float *)_Q1.i32 <= 5.0;
                  v360 = (void **)v763;
                  v378 = __p;
                }
                else
                {
                  *(_WORD *)v763 = 18688;
                  _H0 = *(_WORD *)v360;
                  __asm { FCVT            S0, H0 }
                  v377 = _S0 <= 10.0;
                  v378 = (void **)v763;
                }
                if (!v377)
                  v360 = v378;
                _H0 = *(_WORD *)v360;
                __asm { FCVT            S0, H0 }
                if (_S14 > _S0)
                {
                  v327.i64[0] = *(_QWORD *)((char *)&v701 + v317);
                  v327.i32[2] = *(_DWORD *)((char *)&v701 + v317 + 8);
                  v383 = (int8x16_t)vmlaq_n_f32(v327, vsubq_f32(v654, v327), (float)(_S0 - v327.f32[2]) / (float)(_S14 - v327.f32[2]));
                  *(float32x2_t *)v24.f32 = vmla_laneq_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v746, *(float *)v383.i32), *(float32x2_t *)&v746[16], *(float32x2_t *)v383.i8, 1), *(float32x2_t *)v747.i8, (float32x4_t)v383, 2);
                  _Q1 = vextq_s8(v747, v747, 8uLL);
                  *(float32x2_t *)&v24.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32((float32x2_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)v746, *(int8x16_t *)v746, 8uLL), *(float32x2_t *)v383.i8), (float32x2_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)&v746[16], *(int8x16_t *)&v746[16], 8uLL), *(float32x2_t *)v383.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v383, v383, 8uLL), *(float32x2_t *)_Q1.i8);
                  v216 = (int8x16_t)vaddq_f32(v748, v24);
                  *(_DWORD *)(v348 + 8) = v216.i32[2];
                  *(_QWORD *)v348 = v216.i64[0];
                }
              }
            }
          }
        }
LABEL_441:
        v317 += 12;
        ++v319;
        v313 += 48;
        ++v318;
      }
      while (v315 != v317);
      v126 = v648;
      if (v648 > 1)
      {
        if (*(_BYTE *)(v636 + 31))
        {
          if (!*(_BYTE *)(v636 + 79))
            goto LABEL_528;
          v216.i64[0] = *(_QWORD *)v636;
          v216.i32[2] = *(_DWORD *)(v636 + 8);
          _Q1.i64[0] = *(_QWORD *)(v636 + 48);
          _Q1.i32[2] = *(_DWORD *)(v636 + 56);
          v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
          *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
          v384 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
          *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v384, v384);
          if (v24.f32[0] >= 0.25)
          {
LABEL_528:
            if ((_DWORD)v648 == 2)
              goto LABEL_534;
            if (!*(_BYTE *)(v636 + 127))
              goto LABEL_883;
            v216.i64[0] = *(_QWORD *)v636;
            v216.i32[2] = *(_DWORD *)(v636 + 8);
            _Q1.i64[0] = *(_QWORD *)(v636 + 96);
            _Q1.i32[2] = *(_DWORD *)(v636 + 104);
            v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
            *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
            v385 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
            *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v385, v385);
            if (v24.f32[0] >= 0.25)
            {
LABEL_883:
              if ((_DWORD)v648 == 3)
                goto LABEL_534;
              if (!*(_BYTE *)(v636 + 175))
                goto LABEL_534;
              v216.i64[0] = *(_QWORD *)v636;
              v216.i32[2] = *(_DWORD *)(v636 + 8);
              _Q1.i64[0] = *(_QWORD *)(v636 + 144);
              _Q1.i32[2] = *(_DWORD *)(v636 + 152);
              v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
              *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
              v386 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
              *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v386, v386);
              if (v24.f32[0] >= 0.25)
LABEL_534:
                *(_WORD *)(v636 + 30) = 0;
            }
          }
        }
        if (*(_BYTE *)(v636 + 79))
        {
          if (!*(_BYTE *)(v636 + 31))
            goto LABEL_538;
          v216.i64[0] = *(_QWORD *)(v636 + 48);
          v216.i32[2] = *(_DWORD *)(v636 + 56);
          _Q1.i64[0] = *(_QWORD *)v636;
          _Q1.i32[2] = *(_DWORD *)(v636 + 8);
          v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
          *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
          v387 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
          *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v387, v387);
          if (v24.f32[0] >= 0.25)
          {
LABEL_538:
            if ((v648 - 1) < 2)
              goto LABEL_544;
            if (!*(_BYTE *)(v636 + 127))
              goto LABEL_884;
            v216.i64[0] = *(_QWORD *)(v636 + 48);
            v216.i32[2] = *(_DWORD *)(v636 + 56);
            _Q1.i64[0] = *(_QWORD *)(v636 + 96);
            _Q1.i32[2] = *(_DWORD *)(v636 + 104);
            v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
            *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
            v388 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
            *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v388, v388);
            if (v24.f32[0] >= 0.25)
            {
LABEL_884:
              if ((_DWORD)v648 == 3)
                goto LABEL_544;
              if (!*(_BYTE *)(v636 + 175))
                goto LABEL_544;
              v216.i64[0] = *(_QWORD *)(v636 + 48);
              v216.i32[2] = *(_DWORD *)(v636 + 56);
              _Q1.i64[0] = *(_QWORD *)(v636 + 144);
              _Q1.i32[2] = *(_DWORD *)(v636 + 152);
              v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
              *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
              v389 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
              *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v389, v389);
              if (v24.f32[0] >= 0.25)
LABEL_544:
                *(_WORD *)(v636 + 78) = 0;
            }
          }
        }
        if ((_DWORD)v648 != 2)
        {
          if (*(_BYTE *)(v636 + 127))
          {
            if (!*(_BYTE *)(v636 + 31))
              goto LABEL_887;
            v216.i64[0] = *(_QWORD *)(v636 + 96);
            v216.i32[2] = *(_DWORD *)(v636 + 104);
            _Q1.i64[0] = *(_QWORD *)v636;
            _Q1.i32[2] = *(_DWORD *)(v636 + 8);
            v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
            *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
            v390 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
            *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v390, v390);
            if (v24.f32[0] >= 0.25)
            {
LABEL_887:
              if (!*(_BYTE *)(v636 + 79))
                goto LABEL_885;
              v216.i64[0] = *(_QWORD *)(v636 + 96);
              v216.i32[2] = *(_DWORD *)(v636 + 104);
              _Q1.i64[0] = *(_QWORD *)(v636 + 48);
              _Q1.i32[2] = *(_DWORD *)(v636 + 56);
              v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
              *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
              v391 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
              *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v391, v391);
              if (v24.f32[0] >= 0.25)
              {
LABEL_885:
                if ((v648 - 2) < 2)
                  goto LABEL_554;
                if (!*(_BYTE *)(v636 + 175))
                  goto LABEL_554;
                v216.i64[0] = *(_QWORD *)(v636 + 96);
                v216.i32[2] = *(_DWORD *)(v636 + 104);
                _Q1.i64[0] = *(_QWORD *)(v636 + 144);
                _Q1.i32[2] = *(_DWORD *)(v636 + 152);
                v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
                *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
                v392 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
                *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v392, v392);
                if (v24.f32[0] >= 0.25)
LABEL_554:
                  *(_WORD *)(v636 + 126) = 0;
              }
            }
          }
          if ((_DWORD)v648 != 3)
          {
            if (*(_BYTE *)(v636 + 175))
            {
              if (!*(_BYTE *)(v636 + 31))
                goto LABEL_888;
              v216.i64[0] = *(_QWORD *)(v636 + 144);
              v216.i32[2] = *(_DWORD *)(v636 + 152);
              _Q1.i64[0] = *(_QWORD *)v636;
              _Q1.i32[2] = *(_DWORD *)(v636 + 8);
              v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
              *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
              v393 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
              *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v393, v393);
              if (v24.f32[0] >= 0.25)
              {
LABEL_888:
                if (!*(_BYTE *)(v636 + 79))
                  goto LABEL_886;
                v216.i64[0] = *(_QWORD *)(v636 + 144);
                v216.i32[2] = *(_DWORD *)(v636 + 152);
                _Q1.i64[0] = *(_QWORD *)(v636 + 48);
                _Q1.i32[2] = *(_DWORD *)(v636 + 56);
                v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
                *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
                v394 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
                *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v394, v394);
                if (v24.f32[0] >= 0.25)
                {
LABEL_886:
                  if (!*(_BYTE *)(v636 + 127))
                    goto LABEL_437;
                  v216.i64[0] = *(_QWORD *)(v636 + 144);
                  v216.i32[2] = *(_DWORD *)(v636 + 152);
                  _Q1.i64[0] = *(_QWORD *)(v636 + 96);
                  _Q1.i32[2] = *(_DWORD *)(v636 + 104);
                  v216 = (int8x16_t)vsubq_f32((float32x4_t)v216, (float32x4_t)_Q1);
                  *(int32x2_t *)_Q1.i8 = vdup_lane_s32(*(int32x2_t *)v216.i8, 1);
                  v395 = (float32x2_t)vextq_s8(v216, v216, 8uLL).u64[0];
                  *(float32x2_t *)v24.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v216.i8, *(float32x2_t *)v216.i8), *(float32x2_t *)_Q1.i8, *(float32x2_t *)v216.i8, 1), v395, v395);
                  if (v24.f32[0] >= 0.25)
LABEL_437:
                    *(_WORD *)(v636 + 174) = 0;
                }
              }
            }
          }
        }
      }
      ++v314;
      v316 = v636 + 192;
      v313 = v637 + 192;
    }
    while ((int32x2_t *)(v636 + 192) != v644);
  }
  *(_OWORD *)__p = 0u;
  *(_OWORD *)v665 = 0u;
  *(_DWORD *)&v665[16] = 728305648;
  kdebug_trace();
  v662 = (uint64_t *)(v631 + 152);
  if (!(_DWORD)v126)
  {
    v462 = 0;
    goto LABEL_673;
  }
  v396 = 0;
  __asm { FMOV            V8.2S, #1.0 }
  v650 = (float32x4_t)vdupq_n_s32(0x437F0000u);
  v398 = v629;
  while (2)
  {
    sub_224569D7C();
    sub_224569A80();
    if (!os_variant_has_internal_diagnostics())
      goto LABEL_566;
    v401 = sub_2241471F8();
    v402 = v401[2];
    if (!v402)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v402 = v401[2];
    }
    v403 = *(_QWORD *)(v402 + 64);
    v404 = (std::mutex *)(v403 + 32);
    std::mutex::lock((std::mutex *)(v403 + 32));
    v406 = *(_QWORD *)(v403 + 96);
    v405 = *(_QWORD *)(v403 + 104);
    std::mutex::unlock(v404);
    if (v406 == v405)
      goto LABEL_566;
    sub_22456D250("Occupancy.JasperCloud.Bundle-%i", (std::string *)__dst, a12);
    *(_QWORD *)v763 = "cv3d.recon.";
    *(_QWORD *)&v763[8] = 11;
    v407 = __dst[23];
    v408 = __dst;
    if (__dst[23] < 0)
    {
      v408 = *(_BYTE **)__dst;
      v407 = *(_QWORD *)&__dst[8];
    }
    *(_QWORD *)&v763[16] = v408;
    *(_QWORD *)&v763[24] = v407;
    sub_2231A9820((uint64_t)v763, (uint64_t)&v763[32], 0, 0, &v755);
    if ((__dst[23] & 0x80000000) != 0)
      operator delete(*(void **)__dst);
    sub_2241471F8();
    v409 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v409 + 24))(v409))
      goto LABEL_585;
    memset(__dst, 0, sizeof(__dst));
    v754 = 728325616;
    kdebug_trace();
    sub_22456D250("Bank-%i", &v752, v396);
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v409 + 24))(v409))
    {
      if (SHIBYTE(v752.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_583;
      goto LABEL_584;
    }
    v801[0] = v752.__r_.__value_.__l.__size_;
    v641 = (void *)v752.__r_.__value_.__r.__words[0];
    *(_QWORD *)((char *)v801 + 7) = *(std::string::size_type *)((char *)&v752.__r_.__value_.__r.__words[1] + 7);
    v410 = SHIBYTE(v752.__r_.__value_.__r.__words[2]);
    memset(&v752, 0, sizeof(v752));
    *(_QWORD *)&v756 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
    *((_QWORD *)&v756 + 1) = v645.i64[0] & 0xFFFFFFFFFFFFFF00 | 2;
    v411 = sub_2241471F8();
    v645.i64[0] = v645.i64[0] & 0xFFFFFFFFFFFFFF00 | 2;
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v409 + 24))(v409))
    {
      if ((v410 & 0x80000000) == 0)
        goto LABEL_649;
      operator delete(v641);
      if ((SHIBYTE(v752.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_584;
LABEL_583:
      operator delete(v752.__r_.__value_.__l.__data_);
      goto LABEL_584;
    }
    v638 = v411;
    v412 = (uint64_t *)((char *)v662 + 12 * v396);
    sub_2241498F4((uint64_t)v763, 0);
    v416 = *(uint64_t **)&v763[8];
    if (*(_QWORD *)&v763[8] >= *(_QWORD *)&v763[16])
    {
      v418 = sub_2233B2B48((unint64_t *)v763, v412);
    }
    else
    {
      v417 = *v412;
      *(_DWORD *)(*(_QWORD *)&v763[8] + 8) = *((_DWORD *)v412 + 2);
      *v416 = v417;
      v418 = (unint64_t)v416 + 12;
    }
    *(_QWORD *)&v763[8] = v418;
    v761 = _D8;
    v762 = 1065353216;
    v419 = (uint64_t *)v764;
    if ((unint64_t)v764 >= *((_QWORD *)&v764 + 1))
    {
      v421 = sub_2233B2838((unint64_t *)&v763[32], &v761);
    }
    else
    {
      v420 = v761;
      *(_DWORD *)(v764 + 8) = v762;
      *v419 = v420;
      v421 = (unint64_t)v419 + 12;
    }
    *(_QWORD *)&v764 = v421;
    DWORD2(v765) = 1;
    v422 = 27648;
    v423 = v398;
    do
    {
      if (*(_BYTE *)(v423 + 30))
      {
        v426 = *(unsigned __int8 *)(v423 + 28);
        v427 = &byte_2245C3FE4[3 * v426];
        _CF = v426 >= 0x2A;
        v428 = &byte_2245C9FE2;
        if (!_CF)
          v428 = v427;
        v413.i8[0] = *v428;
        v413.f32[0] = (float)v413.u32[0];
        LOBYTE(v414) = v428[1];
        LOBYTE(v415) = v428[2];
        v415 = (float)LODWORD(v415);
        v413.f32[1] = (float)v414;
        v413.f32[2] = v415;
        v414 = v650.i32[0];
        v413 = vdivq_f32(v413, v650);
        v762 = v413.i32[2];
        v761 = v413.i64[0];
        v429 = v764;
        if ((unint64_t)v764 >= *((_QWORD *)&v764 + 1))
        {
          v431 = sub_2233B2B48((unint64_t *)&v763[32], &v761);
          goto LABEL_609;
        }
        v430 = v761;
      }
      else
      {
        if (!*(_BYTE *)(v423 + 31))
          goto LABEL_597;
        v761 = 0;
        v762 = 0;
        v429 = v764;
        if ((unint64_t)v764 >= *((_QWORD *)&v764 + 1))
        {
          v431 = sub_2233B2838((unint64_t *)&v763[32], &v761);
          goto LABEL_609;
        }
        v430 = v761;
      }
      *(_DWORD *)(v429 + 8) = v762;
      *(_QWORD *)v429 = v430;
      v431 = v429 + 12;
LABEL_609:
      *(_QWORD *)&v764 = v431;
      v433 = *(_QWORD *)v763;
      v432 = *(uint64_t **)&v763[8];
      if (*(_QWORD *)&v763[8] >= *(_QWORD *)&v763[16])
      {
        v435 = sub_2233B2B48((unint64_t *)v763, (uint64_t *)v423);
      }
      else
      {
        v434 = *(_QWORD *)v423;
        *(_DWORD *)(*(_QWORD *)&v763[8] + 8) = *(_DWORD *)(v423 + 8);
        *v432 = v434;
        v435 = (unint64_t)v432 + 12;
      }
      *(_QWORD *)&v763[8] = v435;
      LODWORD(v761) = 0;
      HIDWORD(v761) = -1431655765 * (((uint64_t)v432 - v433) >> 2);
      v762 = 0;
      v436 = (uint64_t *)v771;
      if ((unint64_t)v771 < *((_QWORD *)&v771 + 1))
      {
        v424 = v761;
        *(_DWORD *)(v771 + 8) = v762;
        *v436 = v424;
        v425 = (unint64_t)v436 + 12;
      }
      else
      {
        v425 = sub_2233B29C0((unint64_t *)&v770 + 1, &v761);
      }
      v126 = v648;
      *(_QWORD *)&v771 = v425;
LABEL_597:
      v423 += 192;
      v422 -= 192;
    }
    while (v422);
    v802.__r_.__value_.__r.__words[0] = (std::string::size_type)v641;
    v802.__r_.__value_.__l.__size_ = v801[0];
    *(std::string::size_type *)((char *)&v802.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v801 + 7);
    *((_BYTE *)&v802.__r_.__value_.__s + 23) = v410;
    v801[0] = 0;
    *(_QWORD *)((char *)v801 + 7) = 0;
    v803 = 1;
    sub_22329F414((uint64_t)v763, (__int128 *)&v802, &v756, &v759);
    if (v803 && SHIBYTE(v802.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v802.__r_.__value_.__l.__data_);
    sub_22316F8F4((uint64_t *)v763);
    v437 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v409 + 56))(v409);
    v438 = *v437;
    v439 = (std::__shared_weak_count *)v437[1];
    if (v439)
    {
      v440 = (unint64_t *)&v439->__shared_owners_;
      do
        v441 = __ldxr(v440);
      while (__stxr(v441 + 1, v440));
    }
    v443 = *((_QWORD *)&v759 + 1);
    v442 = v760;
    v757[0] = &off_24EC6A3B8;
    v757[1] = *((_QWORD *)&v759 + 1);
    v758 = v760;
    *((_QWORD *)&v759 + 1) = 0;
    v760 = 0;
    *(_QWORD *)v763 = v438;
    *(_QWORD *)&v763[8] = v439;
    if (v439)
    {
      v444 = (unint64_t *)&v439->__shared_owners_;
      do
        v445 = __ldxr(v444);
      while (__stxr(v445 + 1, v444));
    }
    *(_QWORD *)&v763[16] = &off_24EC6A3B8;
    *(_QWORD *)&v763[24] = v443;
    *(_QWORD *)&v763[32] = v442;
    if (v442)
    {
      v446 = (unint64_t *)&v442->__shared_owners_;
      do
        v447 = __ldxr(v446);
      while (__stxr(v447 + 1, v446));
    }
    (*(void (**)(uint64_t *, _BYTE *))(*v638 + 16))(v638, v763);
    v448 = *(std::__shared_weak_count **)&v763[32];
    if (*(_QWORD *)&v763[32])
    {
      v449 = (unint64_t *)(*(_QWORD *)&v763[32] + 8);
      do
        v450 = __ldaxr(v449);
      while (__stlxr(v450 - 1, v449));
      if (!v450)
      {
        ((void (*)(std::__shared_weak_count *))v448->__on_zero_shared)(v448);
        std::__shared_weak_count::__release_weak(v448);
      }
    }
    v451 = *(std::__shared_weak_count **)&v763[8];
    if (*(_QWORD *)&v763[8])
    {
      v452 = (unint64_t *)(*(_QWORD *)&v763[8] + 8);
      do
        v453 = __ldaxr(v452);
      while (__stlxr(v453 - 1, v452));
      if (!v453)
      {
        ((void (*)(std::__shared_weak_count *))v451->__on_zero_shared)(v451);
        std::__shared_weak_count::__release_weak(v451);
      }
    }
    v454 = v758;
    if (v758)
    {
      v455 = (unint64_t *)&v758->__shared_owners_;
      do
        v456 = __ldaxr(v455);
      while (__stlxr(v456 - 1, v455));
      if (!v456)
      {
        ((void (*)(std::__shared_weak_count *))v454->__on_zero_shared)(v454);
        std::__shared_weak_count::__release_weak(v454);
      }
    }
    if (v439)
    {
      v457 = (unint64_t *)&v439->__shared_owners_;
      do
        v458 = __ldaxr(v457);
      while (__stlxr(v458 - 1, v457));
      if (!v458)
      {
        ((void (*)(std::__shared_weak_count *))v439->__on_zero_shared)(v439);
        std::__shared_weak_count::__release_weak(v439);
        v459 = v760;
        if (v760)
          goto LABEL_646;
        goto LABEL_649;
      }
    }
    v459 = v760;
    if (!v760)
      goto LABEL_649;
LABEL_646:
    v460 = (unint64_t *)&v459->__shared_owners_;
    do
      v461 = __ldaxr(v460);
    while (__stlxr(v461 - 1, v460));
    if (!v461)
    {
      ((void (*)(std::__shared_weak_count *))v459->__on_zero_shared)(v459);
      std::__shared_weak_count::__release_weak(v459);
      if ((SHIBYTE(v752.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_584;
      goto LABEL_583;
    }
LABEL_649:
    if (SHIBYTE(v752.__r_.__value_.__r.__words[2]) < 0)
      goto LABEL_583;
LABEL_584:
    kdebug_trace();
LABEL_585:
    if (SHIBYTE(v755.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v755.__r_.__value_.__l.__data_);
LABEL_566:
    ++v396;
    v398 += 48;
    if (v396 != v126)
      continue;
    break;
  }
  v462 = 0;
  v463 = 27648;
  v464 = v629;
  do
  {
    if (*(_BYTE *)(v464 + 31))
    {
      v399.i64[0] = *(_QWORD *)v464;
      v399.i32[2] = *(_DWORD *)(v464 + 8);
      v400.i64[0] = *v662;
      v400.i32[2] = *(_DWORD *)(v631 + 160);
      v399 = (int8x16_t)vsubq_f32((float32x4_t)v399, v400);
      v465 = (float32x2_t)vextq_s8(v399, v399, 8uLL).u64[0];
      if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v399.i8, *(float32x2_t *)v399.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v399.i8, 1), *(float32x2_t *)v399.i8, 1), v465, v465).f32[0] > 100.0)
      {
        ++v462;
        *(_WORD *)(v464 + 30) = 0;
      }
    }
    if ((_DWORD)v126 != 1)
    {
      if (*(_BYTE *)(v464 + 79))
      {
        v399.i64[0] = *(_QWORD *)(v464 + 48);
        v399.i32[2] = *(_DWORD *)(v464 + 56);
        v400.i64[0] = *(_QWORD *)(v631 + 164);
        v400.i32[2] = *(_DWORD *)(v631 + 172);
        v399 = (int8x16_t)vsubq_f32((float32x4_t)v399, v400);
        v466 = (float32x2_t)vextq_s8(v399, v399, 8uLL).u64[0];
        if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v399.i8, *(float32x2_t *)v399.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v399.i8, 1), *(float32x2_t *)v399.i8, 1), v466, v466).f32[0] > 100.0)
        {
          ++v462;
          *(_WORD *)(v464 + 78) = 0;
        }
      }
      if ((_DWORD)v126 != 2)
      {
        if (*(_BYTE *)(v464 + 127))
        {
          v399.i64[0] = *(_QWORD *)(v464 + 96);
          v399.i32[2] = *(_DWORD *)(v464 + 104);
          v400.i64[0] = *(_QWORD *)(v631 + 176);
          v400.i32[2] = *(_DWORD *)(v631 + 184);
          v399 = (int8x16_t)vsubq_f32((float32x4_t)v399, v400);
          v467 = (float32x2_t)vextq_s8(v399, v399, 8uLL).u64[0];
          if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v399.i8, *(float32x2_t *)v399.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v399.i8, 1), *(float32x2_t *)v399.i8, 1), v467, v467).f32[0] > 100.0)
          {
            ++v462;
            *(_WORD *)(v464 + 126) = 0;
          }
        }
        if ((_DWORD)v126 != 3)
        {
          if (*(_BYTE *)(v464 + 175))
          {
            v399.i64[0] = *(_QWORD *)(v464 + 144);
            v399.i32[2] = *(_DWORD *)(v464 + 152);
            v400.i64[0] = *(_QWORD *)(v631 + 188);
            v400.i32[2] = *(_DWORD *)(v631 + 196);
            v399 = (int8x16_t)vsubq_f32((float32x4_t)v399, v400);
            v468 = (float32x2_t)vextq_s8(v399, v399, 8uLL).u64[0];
            if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v399.i8, *(float32x2_t *)v399.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v399.i8, 1), *(float32x2_t *)v399.i8, 1), v468, v468).f32[0] > 100.0)
            {
              ++v462;
              *(_WORD *)(v464 + 174) = 0;
            }
          }
        }
      }
    }
    v464 += 192;
    v463 -= 192;
  }
  while (v463);
LABEL_673:
  LODWORD(v757[0]) = v462;
  sub_22456D250("Stats.Occupancy.FilteredEchos-%i", (std::string *)__dst, a12, v626);
  *(_QWORD *)v763 = "cv3d.recon.";
  *(_QWORD *)&v763[8] = 11;
  v469 = __dst[23];
  if (__dst[23] >= 0)
    v470 = __dst;
  else
    v470 = *(_BYTE **)__dst;
  if (__dst[23] < 0)
    v469 = *(_QWORD *)&__dst[8];
  *(_QWORD *)&v763[16] = v470;
  *(_QWORD *)&v763[24] = v469;
  sub_2231A9820((uint64_t)v763, (uint64_t)&v763[32], 0, 0, &v802);
  if ((__dst[23] & 0x80000000) != 0)
    operator delete(*(void **)__dst);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v471 = sub_2241471F8();
    v472 = v471[2];
    if (!v472)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v472 = v471[2];
    }
    v473 = *(_QWORD *)(v472 + 64);
    v474 = (std::mutex *)(v473 + 32);
    std::mutex::lock((std::mutex *)(v473 + 32));
    v476 = *(_QWORD *)(v473 + 96);
    v475 = *(_QWORD *)(v473 + 104);
    std::mutex::unlock(v474);
    if (v476 != v475)
    {
      sub_2241471F8();
      v477 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v477 + 24))(v477))
      {
        memset(v763, 0, 32);
        *(_DWORD *)&v763[32] = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v477 + 24))(v477))
        {
          __dst[23] = 19;
          strcpy(__dst, "# of filtered echos");
          *(_QWORD *)&v759 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v759 + 1) = 2;
          v478 = sub_2241471F8();
          sub_22356F6DC((uint64_t)v478, v477, (int *)v757, (uint64_t)__dst, &v759);
          if ((__dst[23] & 0x80000000) != 0)
            operator delete(*(void **)__dst);
        }
        kdebug_trace();
      }
    }
  }
  memset(v763, 0, 32);
  *(_DWORD *)&v763[32] = 728325624;
  kdebug_trace();
  size = HIBYTE(v802.__r_.__value_.__r.__words[2]);
  if ((v802.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v802.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    v480 = &v802;
    if ((v802.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v480 = (std::string *)v802.__r_.__value_.__r.__words[0];
    v481 = v480->__r_.__value_.__r.__words[0];
    v482 = v480->__r_.__value_.__l.__size_;
    v483 = v480->__r_.__value_.__s.__data_[16];
    if (v481 == 0x6365722E64337663 && v482 == 0x73746174532E6E6FLL && v483 == 46)
    {
      v486 = sub_223187510();
      if ((v802.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v487 = &v802;
      else
        v487 = (std::string *)v802.__r_.__value_.__r.__words[0];
      if ((v802.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v488 = HIBYTE(v802.__r_.__value_.__r.__words[2]);
      else
        v488 = v802.__r_.__value_.__l.__size_;
      sub_223532E4C(v486, v487, v488, (unsigned int *)v757, (uint64_t)"# of filtered echos", 19);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v802.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v802.__r_.__value_.__l.__data_);
  kdebug_trace();
  *(_QWORD *)v763 = "cv3d.recon.";
  *(_QWORD *)&v763[8] = 11;
  *(_QWORD *)&v763[16] = "Stats.Occupancy.PlaneSnapping";
  *(_QWORD *)&v763[24] = 29;
  sub_2231A9820((uint64_t)v763, (uint64_t)&v763[32], 0, 0, (std::string *)__p);
  v489 = (int32x2_t *)v629;
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v490 = sub_2241471F8();
    v491 = v490[2];
    if (!v491)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v491 = v490[2];
    }
    v492 = *(_QWORD *)(v491 + 64);
    v493 = (std::mutex *)(v492 + 32);
    std::mutex::lock((std::mutex *)(v492 + 32));
    v495 = *(_QWORD *)(v492 + 96);
    v494 = *(_QWORD *)(v492 + 104);
    std::mutex::unlock(v493);
    if (v495 != v494)
    {
      sub_2241471F8();
      v496 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v496 + 24))(v496))
      {
        memset(v763, 0, 32);
        *(_DWORD *)&v763[32] = 728325608;
        kdebug_trace();
        *(_QWORD *)__dst = 0x34F72C234F72C235 * ((a13[1] - *a13) >> 4);
        sub_223197768((double *)&qword_255788F20, v496, (uint64_t *)__dst, "plane count");
        kdebug_trace();
      }
    }
  }
  memset(v763, 0, 32);
  *(_DWORD *)&v763[32] = 728325624;
  kdebug_trace();
  v497 = v665[7];
  if (v665[7] < 0)
    v497 = (unint64_t)__p[1];
  v498 = __sb;
  if (v497 >= 0x11)
  {
    v499 = __p;
    if (v665[7] < 0)
      v499 = (void **)__p[0];
    v500 = *v499;
    v501 = v499[1];
    v502 = *((unsigned __int8 *)v499 + 16);
    if (v500 == (void *)0x6365722E64337663 && v501 == (void *)0x73746174532E6E6FLL && v502 == 46)
    {
      v505 = sub_223187510();
      if (v665[7] >= 0)
        v506 = __p;
      else
        v506 = (void **)__p[0];
      if (v665[7] >= 0)
        v507 = v665[7];
      else
        v507 = (size_t)__p[1];
      *(_QWORD *)__dst = 0x34F72C234F72C235 * ((a13[1] - *a13) >> 4);
      sub_22318760C((uint64_t *)v505, v506, v507, (uint64_t *)__dst, (uint64_t)"plane count", 11);
    }
  }
  kdebug_trace();
  if ((v665[7] & 0x80000000) == 0)
  {
    if (*a13 == a13[1])
      goto LABEL_767;
LABEL_743:
    sub_223A9062C(*(uint64_t **)(__sb[16] + 8), a13);
    v509.i64[0] = *(_QWORD *)v627;
    v509.i32[2] = *(_DWORD *)(v627 + 8);
    v510.i64[0] = *(_QWORD *)(v627 + 16);
    v510.i32[2] = *(_DWORD *)(v627 + 24);
    v511.i32[0] = *(_DWORD *)(v627 + 40);
    *(_QWORD *)&v512 = vzip1q_s32(v509, v510).u64[0];
    v513.i64[0] = *(_QWORD *)(v627 + 48);
    v513.i32[2] = *(_DWORD *)(v627 + 56);
    v514 = (int8x16_t)vnegq_f32(v513);
    v515 = (int8x16_t)vtrn2q_s32(v509, v510);
    v515.i32[2] = HIDWORD(*(_QWORD *)(v627 + 32));
    v516 = (int8x16_t)vzip2q_s32(v509, v510);
    *(float32x2_t *)&v517 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)&v512, *(float *)v514.i32), *(float32x2_t *)v515.i8, *(float32x2_t *)v513.f32, 1), *(float32x2_t *)v516.i8, v513, 2);
    v516.i32[2] = v511.i32[0];
    *((_QWORD *)&v517 + 1) = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v627 + 32), *(float32x2_t *)v514.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v627 + 32), 1), *(float32x2_t *)v513.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v514, v514, 8uLL), v511).u32[0]);
    *((_QWORD *)&v512 + 1) = *(_QWORD *)(v627 + 32);
    HIDWORD(v518) = 0;
    LODWORD(v518) = vdupq_lane_s32(*(int32x2_t *)&v515, 0).i32[3];
    *(_QWORD *)((char *)&v518 + 4) = vextq_s8(v515, v516, 4uLL).u64[0];
    v516.i64[1] = vdupq_laneq_s32((int32x4_t)v516, 2).u32[0];
    v519 = (_OWORD *)(*(_QWORD *)(__sb[16] + 8) + 324);
    *v519 = v512;
    v519[1] = v518;
    v519[2] = v516;
    v519[3] = v517;
    *(_QWORD *)(__sb[20] + 8) = *(_QWORD *)__sb[20];
    do
    {
      v520 = 0;
      v521 = v489;
      do
      {
        v524 = v498[20];
        v526 = *(_QWORD *)(v524 + 8);
        v525 = *(_QWORD *)(v524 + 16);
        if (v526 < v525)
        {
          v522 = *v521;
          *(_DWORD *)(v526 + 8) = v521[1].i32[0];
          *(int32x2_t *)v526 = v522;
          v523 = v526 + 12;
        }
        else
        {
          v527 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v526 - *(_QWORD *)v524) >> 2);
          v528 = v527 + 1;
          if (v527 + 1 > 0x1555555555555555)
            sub_22316E078();
          v529 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v525 - *(_QWORD *)v524) >> 2);
          if (2 * v529 > v528)
            v528 = 2 * v529;
          if (v529 >= 0xAAAAAAAAAAAAAAALL)
            v530 = 0x1555555555555555;
          else
            v530 = v528;
          if (v530)
          {
            LODWORD(__p[0]) = v530;
            v531 = *(unsigned int *)(v524 + 28);
            if ((_DWORD)v531 == -1)
              sub_22316DD70();
            *(_QWORD *)v763 = __p;
            v532 = ((uint64_t (*)(_BYTE *, uint64_t))off_24EC5CE50[v531])(v763, v524 + 24);
          }
          else
          {
            v532 = 0;
            v533 = 0;
          }
          v534 = v532 + 12 * v527;
          v535 = *v521;
          *(_DWORD *)(v534 + 8) = v521[1].i32[0];
          *(int32x2_t *)v534 = v535;
          v537 = *(_QWORD *)v524;
          v536 = *(_QWORD *)(v524 + 8);
          v538 = v534;
          if (v536 != *(_QWORD *)v524)
          {
            do
            {
              v539 = *(_QWORD *)(v536 - 12);
              v536 -= 12;
              v540 = *(_DWORD *)(v536 + 8);
              *(_QWORD *)(v538 - 12) = v539;
              v538 -= 12;
              *(_DWORD *)(v538 + 8) = v540;
            }
            while (v536 != v537);
            v536 = *(_QWORD *)v524;
          }
          v523 = v534 + 12;
          *(_QWORD *)v524 = v538;
          *(_QWORD *)(v524 + 8) = v534 + 12;
          v541 = *(_QWORD *)(v524 + 16);
          *(_QWORD *)(v524 + 16) = v532 + 12 * v533;
          if (v536)
          {
            *(_QWORD *)v763 = v536;
            *(_DWORD *)&v763[8] = -1431655765 * ((unint64_t)(v541 - v536) >> 2);
            v542 = *(unsigned int *)(v524 + 28);
            if ((_DWORD)v542 == -1)
              sub_22316DD70();
            __p[0] = v763;
            ((void (*)(void **, uint64_t))off_24EC5CE60[v542])(__p, v524 + 24);
          }
        }
        *(_QWORD *)(v524 + 8) = v523;
        ++v520;
        v521 = &v489[6 * v520];
        v498 = __sb;
      }
      while (v520 != 4);
      v489 += 24;
    }
    while (v489 != v644);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)__sb[16] + 16))(__sb[16], v655 + 40720);
    v543 = (int32x2_t *)v629;
    v544 = 0;
    do
    {
      v545 = (int32x2_t *)(*(_QWORD *)__sb[20] + v544);
      v546 = *v545;
      v543[1].i32[0] = v545[1].i32[0];
      *v543 = v546;
      v547 = *(_QWORD *)__sb[20] + v544;
      v548 = *(int32x2_t *)(v547 + 12);
      v543[7].i32[0] = *(_DWORD *)(v547 + 20);
      v543[6] = v548;
      v549 = (int32x2_t *)(*(_QWORD *)__sb[20] + v544);
      v550 = v549[3];
      v543[13].i32[0] = v549[4].i32[0];
      v543[12] = v550;
      v551 = *(_QWORD *)__sb[20] + v544;
      v552 = *(int32x2_t *)(v551 + 36);
      v543[19].i32[0] = *(_DWORD *)(v551 + 44);
      v543[18] = v552;
      v544 += 48;
      v543 += 24;
    }
    while (v543 != v644);
    goto LABEL_767;
  }
  operator delete(__p[0]);
  if (*a13 != a13[1])
    goto LABEL_743;
LABEL_767:
  for (i = 0; i != 27648; i += 192)
  {
    v555 = v655 + i;
    if (*(_BYTE *)(v655 + i + 3086) || *(_BYTE *)(v555 + 3087))
    {
      v556 = v555 + 3056;
      v557 = *(_DWORD *)(v555 + 3056) & 0x7FFFFFFF;
      v558 = v557 < 0x7F800000;
      if (v557 <= 2139095039)
      {
        v558 = (*(_DWORD *)(v655 + i + 3060) & 0x7FFFFFFFu) < 0x7F800000;
        if ((*(_DWORD *)(v655 + i + 3060) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          v558 = (*(_DWORD *)(v655 + i + 3064) & 0x7FFFFFFFu) < 0x7F800000;
      }
      if (!v558
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 372, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
      {
LABEL_801:
        abort();
      }
      v508.i64[0] = *(_QWORD *)v556;
      v508.i32[2] = *(_DWORD *)(v556 + 8);
      v559 = vmulq_n_f32(v508, *(float *)(v655 + 452));
      *(int32x2_t *)(v655 + i + 3092) = vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v559.f32));
      *(_DWORD *)(v655 + i + 3100) = vcvtms_s32_f32(v559.f32[2]);
    }
    v560 = v655 + i;
    if (*(_BYTE *)(v655 + i + 3134) || *(_BYTE *)(v560 + 3135))
    {
      v561 = v560 + 3104;
      v562 = *(_DWORD *)(v560 + 3104) & 0x7FFFFFFF;
      v563 = v562 < 0x7F800000;
      if (v562 <= 2139095039)
      {
        v563 = (*(_DWORD *)(v655 + i + 3108) & 0x7FFFFFFFu) < 0x7F800000;
        if ((*(_DWORD *)(v655 + i + 3108) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          v563 = (*(_DWORD *)(v655 + i + 3112) & 0x7FFFFFFFu) < 0x7F800000;
      }
      if (!v563
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 372, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_801;
      }
      v508.i64[0] = *(_QWORD *)v561;
      v508.i32[2] = *(_DWORD *)(v561 + 8);
      v564 = vmulq_n_f32(v508, *(float *)(v655 + 452));
      *(int32x2_t *)(v655 + i + 3140) = vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v564.f32));
      *(_DWORD *)(v655 + i + 3148) = vcvtms_s32_f32(v564.f32[2]);
    }
    v565 = v655 + i;
    if (*(_BYTE *)(v655 + i + 3182) || *(_BYTE *)(v565 + 3183))
    {
      v566 = v565 + 3152;
      v567 = *(_DWORD *)(v565 + 3152) & 0x7FFFFFFF;
      v568 = v567 < 0x7F800000;
      if (v567 <= 2139095039)
      {
        v568 = (*(_DWORD *)(v655 + i + 3156) & 0x7FFFFFFFu) < 0x7F800000;
        if ((*(_DWORD *)(v655 + i + 3156) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          v568 = (*(_DWORD *)(v655 + i + 3160) & 0x7FFFFFFFu) < 0x7F800000;
      }
      if (!v568
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 372, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_801;
      }
      v508.i64[0] = *(_QWORD *)v566;
      v508.i32[2] = *(_DWORD *)(v566 + 8);
      v569 = vmulq_n_f32(v508, *(float *)(v655 + 452));
      *(int32x2_t *)(v655 + i + 3188) = vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v569.f32));
      *(_DWORD *)(v655 + i + 3196) = vcvtms_s32_f32(v569.f32[2]);
    }
    v570 = v655 + i;
    if (*(_BYTE *)(v655 + i + 3230) || *(_BYTE *)(v570 + 3231))
    {
      v571 = v570 + 3200;
      v572 = *(_DWORD *)(v570 + 3200) & 0x7FFFFFFF;
      v573 = v572 < 0x7F800000;
      if (v572 <= 2139095039)
      {
        v573 = (*(_DWORD *)(v655 + i + 3204) & 0x7FFFFFFFu) < 0x7F800000;
        if ((*(_DWORD *)(v655 + i + 3204) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          v573 = (*(_DWORD *)(v655 + i + 3208) & 0x7FFFFFFFu) < 0x7F800000;
      }
      if (!v573
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 372, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_801;
      }
      v508.i64[0] = *(_QWORD *)v571;
      v508.i32[2] = *(_DWORD *)(v571 + 8);
      v554 = vmulq_n_f32(v508, *(float *)(v655 + 452));
      *(int32x2_t *)(v655 + i + 3236) = vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v554.f32));
      *(_DWORD *)(v655 + i + 3244) = vcvtms_s32_f32(v554.f32[2]);
    }
  }
  v574 = (_DWORD *)v655;
  kdebug_trace();
  v579 = (uint64_t *)(v655 + 304);
  v580 = (int32x2_t *)(v655 + 35312);
  v581 = v644;
  v582 = v629;
  do
  {
    v583 = v574[714];
    v584 = v574[715];
    v585 = v574[720];
    if ((_DWORD)v648)
    {
      if (*(_BYTE *)(v582 + 30))
      {
        v586 = *(unsigned __int8 *)(v582 + 28);
        if (v586 != 10 && v586 != 34)
        {
          v587 = (char *)*a11;
          __p[0] = *a11;
          if (*(double *)(v582 + 16) >= 0.699999988 && (*(_DWORD *)(v582 + 24) & 0x8000A00) != 0)
            __p[0] = v587 + 10000000000;
          v575.i64[0] = *v662;
          v575.i32[2] = *(_DWORD *)(v631 + 160);
          v576.i64[0] = *(_QWORD *)v582;
          v576.i32[2] = *(_DWORD *)(v582 + 8);
          v588 = vsubq_f32(v575, v576);
          *(_DWORD *)&v763[8] = v588.i32[2];
          *(_QWORD *)v763 = v588.i64[0];
          sub_223CF789C((uint64_t)v579, v582, (uint64_t)v763, v586, *(unsigned __int8 *)(v582 + 29), __p, *(double *)v588.i64, v576);
        }
      }
      v589 = v648;
      if ((_DWORD)v648 != 1)
      {
        if (*(_BYTE *)(v582 + 78))
        {
          v590 = *(unsigned __int8 *)(v582 + 76);
          if (v590 != 10 && v590 != 34)
          {
            v591 = (char *)*a11;
            __p[0] = *a11;
            if (*(double *)(v582 + 64) >= 0.699999988 && (*(_DWORD *)(v582 + 72) & 0x8000A00) != 0)
              __p[0] = v591 + 10000000000;
            v575.i64[0] = *(_QWORD *)(v631 + 164);
            v575.i32[2] = *(_DWORD *)(v631 + 172);
            v576.i64[0] = *(_QWORD *)(v582 + 48);
            v576.i32[2] = *(_DWORD *)(v582 + 56);
            v592 = vsubq_f32(v575, v576);
            *(_DWORD *)&v763[8] = v592.i32[2];
            *(_QWORD *)v763 = v592.i64[0];
            sub_223CF789C((uint64_t)v579, v582 + 48, (uint64_t)v763, v590, *(unsigned __int8 *)(v582 + 77), __p, *(double *)v592.i64, v576);
          }
        }
        v589 = v648;
        if ((_DWORD)v648 != 2)
        {
          if (*(_BYTE *)(v582 + 126))
          {
            v593 = *(unsigned __int8 *)(v582 + 124);
            if (v593 != 10 && v593 != 34)
            {
              v594 = (char *)*a11;
              __p[0] = *a11;
              if (*(double *)(v582 + 112) >= 0.699999988 && (*(_DWORD *)(v582 + 120) & 0x8000A00) != 0)
                __p[0] = v594 + 10000000000;
              v575.i64[0] = *(_QWORD *)(v631 + 176);
              v575.i32[2] = *(_DWORD *)(v631 + 184);
              v576.i64[0] = *(_QWORD *)(v582 + 96);
              v576.i32[2] = *(_DWORD *)(v582 + 104);
              v595 = vsubq_f32(v575, v576);
              *(_DWORD *)&v763[8] = v595.i32[2];
              *(_QWORD *)v763 = v595.i64[0];
              sub_223CF789C((uint64_t)v579, v582 + 96, (uint64_t)v763, v593, *(unsigned __int8 *)(v582 + 125), __p, *(double *)v595.i64, v576);
            }
          }
          v589 = v648;
          if ((_DWORD)v648 != 3)
          {
            if (*(_BYTE *)(v582 + 174))
            {
              v596 = *(unsigned __int8 *)(v582 + 172);
              if (v596 != 10 && v596 != 34)
              {
                v597 = (char *)*a11;
                __p[0] = *a11;
                if (*(double *)(v582 + 160) >= 0.699999988 && (*(_DWORD *)(v582 + 168) & 0x8000A00) != 0)
                  __p[0] = v597 + 10000000000;
                v575.i64[0] = *(_QWORD *)(v631 + 188);
                v575.i32[2] = *(_DWORD *)(v631 + 196);
                v576.i64[0] = *(_QWORD *)(v582 + 144);
                v576.i32[2] = *(_DWORD *)(v582 + 152);
                v598 = vsubq_f32(v575, v576);
                *(_DWORD *)&v763[8] = v598.i32[2];
                *(_QWORD *)v763 = v598.i64[0];
                sub_223CF789C((uint64_t)v579, v582 + 144, (uint64_t)v763, v596, *(unsigned __int8 *)(v582 + 173), __p, *(double *)v598.i64, v576);
                v589 = v648;
              }
            }
          }
        }
      }
      *(int32x2_t *)((char *)&v581[1] + 4) = (int32x2_t)2139095039;
      *(double *)&v581[3] = (double)(uint64_t)*a11 / 1000000000.0;
      v599 = 0.0;
      v600 = 3.4028e38;
      v601 = v582;
      v602 = v631 + 152;
      do
      {
        if (*(unsigned __int8 *)(v601 + 31) | *(unsigned __int8 *)(v601 + 30))
        {
          v577.i64[0] = *(_QWORD *)v602;
          v577.i32[2] = *(_DWORD *)(v602 + 8);
          v578.i64[0] = *(_QWORD *)v601;
          v578.i32[2] = *(_DWORD *)(v601 + 8);
          v577 = (int8x16_t)vsubq_f32((float32x4_t)v577, v578);
          v603 = (float32x2_t)vextq_s8(v577, v577, 8uLL).u64[0];
          v604 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v577.i8, *(float32x2_t *)v577.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v577.i8, 1), *(float32x2_t *)v577.i8, 1), v603, v603).f32[0];
          if (v600 >= v604)
            v600 = v604;
          if (v604 >= v599)
            v599 = v604;
          *(float *)&v581[1].i32[1] = v600;
          *(float *)v581[2].i32 = v599;
        }
        v581[2].i8[4] = a14;
        v602 += 12;
        v601 += 48;
        --v589;
      }
      while (v589);
      v605 = *(_DWORD *)(v655 + 2856);
      v606 = *(_DWORD *)(v655 + 2860);
      v607 = *(_DWORD *)(v655 + 2880);
    }
    else
    {
      *(int32x2_t *)((char *)&v581[1] + 4) = (int32x2_t)2139095039;
      *(double *)&v581[3] = (double)(uint64_t)*a11 / 1000000000.0;
      v607 = v585;
      v606 = v584;
      v605 = v583;
    }
    *v581 = (int32x2_t)((v605 - v583) | ((unint64_t)(v606 - v584) << 32));
    v581[1].i32[0] = v607 - v585;
    v582 += 192;
    v581 += 4;
    v574 = (_DWORD *)v655;
  }
  while ((int32x2_t *)v582 != v644 || v581 != v580);
  kdebug_trace();
  kdebug_trace();
  v617 = v644;
  v618 = *(int32x2_t *)(v655 + 2856);
  v619 = *(_DWORD *)(v655 + 2880);
  v620 = 27456;
  v621 = v629;
  do
  {
    do
    {
      v622 = v620;
      v609.i64[0] = 1.0;
      sub_223CFA4B0(v579, v648, (uint64_t)v662, v621, (uint64_t)a11, v655 + 39920, v608, v609, v610, v611, v612, v613, v614, v615, v616);
      v623 = *(_DWORD *)(v655 + 2880);
      v609.i64[0] = *(_QWORD *)(v655 + 2856);
      *(int32x2_t *)v611.f32 = *v617;
      v610 = COERCE_DOUBLE(vadd_s32(vsub_s32(*(int32x2_t *)v609.f32, v618), *v617));
      v624 = v617[1].i32[0];
      v621 += 192;
      *(double *)v617 = v610;
      v617[1].i32[0] = v623 - v619 + v624;
      v617 += 4;
      v620 = v622 - 192;
      v619 = v623;
      v618 = *(int32x2_t *)v609.f32;
    }
    while (v622);
    v619 = v623;
    v618 = *(int32x2_t *)v609.f32;
  }
  while (v617 != v580);
  kdebug_trace();
  *(_BYTE *)(v655 + 2888) = 1;
  if (vaddvq_s32(*(int32x4_t *)v631) + *(_DWORD *)(v655 + 2872) + *(_DWORD *)(v655 + 2876) + *(_DWORD *)(v655 + 2880))
    *(_BYTE *)(v655 + 2984) = 1;
  if (v745)
    sub_223937070(v707);
  return kdebug_trace();
}

void sub_223929FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p)
{
  uint64_t v47;

  if (LOBYTE(STACK[0x778]) && SLOBYTE(STACK[0x777]) < 0)
    operator delete((void *)STACK[0x760]);
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&__p);
  if (SLOBYTE(STACK[0x6E7]) < 0)
    operator delete(*(void **)(v47 + 128));
  sub_223195348((uint64_t)&STACK[0x430]);
  sub_2231874DC((uint64_t)&STACK[0x690]);
  _Unwind_Resume(a1);
}

uint64_t sub_22392A594(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int16 v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  __int16 v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  if (*(_BYTE *)(a1 + 80))
  {
    v4 = *(_QWORD *)(a2 + 8);
    v3 = *(std::__shared_weak_count **)(a2 + 16);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v6 = __ldxr(p_shared_owners);
      while (__stxr(v6 + 1, p_shared_owners));
      v7 = *(_WORD *)(a2 + 72);
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      v9 = *(_QWORD *)(a2 + 24);
      v33 = *(_OWORD *)(a2 + 32);
      v34 = *(_OWORD *)(a2 + 48);
      v35 = *(_QWORD *)(a2 + 64);
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    else
    {
      v7 = *(_WORD *)(a2 + 72);
      v9 = *(_QWORD *)(a2 + 24);
      v33 = *(_OWORD *)(a2 + 32);
      v34 = *(_OWORD *)(a2 + 48);
      v35 = *(_QWORD *)(a2 + 64);
    }
    v25 = *(std::__shared_weak_count **)(a1 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v3;
    if (v25)
    {
      v26 = (unint64_t *)&v25->__shared_owners_;
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
    }
    *(_QWORD *)(a1 + 24) = v9;
    *(_OWORD *)(a1 + 32) = v33;
    *(_OWORD *)(a1 + 48) = v34;
    *(_QWORD *)(a1 + 64) = v35;
    *(_WORD *)(a1 + 72) = v7;
  }
  else
  {
    *(_QWORD *)a1 = &off_24EC204C0;
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(std::__shared_weak_count **)(a2 + 16);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
      v17 = *(_WORD *)(a2 + 72);
      do
        v18 = __ldxr(v15);
      while (__stxr(v18 + 1, v15));
      v19 = *(_QWORD *)(a2 + 24);
      v20 = *(_OWORD *)(a2 + 32);
      v21 = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v20;
      *(_OWORD *)(a1 + 48) = v21;
      do
        v22 = __ldxr(v15);
      while (__stxr(v22 + 1, v15));
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = v19;
      *(_WORD *)(a1 + 72) = v17;
      do
        v23 = __ldaxr(v15);
      while (__stlxr(v23 - 1, v15));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
      do
        v24 = __ldaxr(v15);
      while (__stlxr(v24 - 1, v15));
      if (!v24)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    else
    {
      v28 = *(_WORD *)(a2 + 72);
      v29 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)(a1 + 24) = v29;
      v30 = *(_OWORD *)(a2 + 32);
      v31 = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v30;
      *(_OWORD *)(a1 + 48) = v31;
      *(_WORD *)(a1 + 72) = v28;
    }
    *(_BYTE *)(a1 + 80) = 1;
  }
  return a1;
}

void sub_22392A7E8(_QWORD *a1)
{
  unsigned __int8 v2;
  void *__p[2];
  char v4;
  uint64_t *v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CCA68);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CCA68))
  {
    sub_22455F53C(&v5);
    sub_223174DE4(__p, "cv3d.recon.vlm");
    sub_2232300E0(&v5, (uint64_t)__p, &qword_2540CCA60);
    if (v4 < 0)
      operator delete(__p[0]);
    __cxa_guard_release(&qword_2540CCA68);
  }
  *a1 = qword_2540CCA60;
}

void sub_22392A884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CCA68);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CCA68);
  _Unwind_Resume(a1);
}

void sub_22392A8DC(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_22361FE58((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_22392A9FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22392AA18(uint64_t a1)
{
  void **v2;

  v2 = (void **)(a1 + 24);
  sub_22391CC34((uint64_t *)a1, (uint64_t *)(a1 + 24), a1 + 48);
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*v2);
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

void sub_22392AA84(double *a1, uint64_t a2, int *a3, const char *a4)
{
  size_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __int128 v14;
  void *__dst[2];
  unint64_t v16;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v8 = strlen(a4);
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v9 = (void *)v8;
    if (v8 >= 0x17)
    {
      v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17)
        v11 = v8 | 7;
      v12 = v11 + 1;
      v10 = (void **)operator new(v11 + 1);
      __dst[1] = v9;
      v16 = v12 | 0x8000000000000000;
      __dst[0] = v10;
    }
    else
    {
      HIBYTE(v16) = v8;
      v10 = __dst;
      if (!v8)
      {
LABEL_10:
        *((_BYTE *)v9 + (_QWORD)v10) = 0;
        *(_QWORD *)&v14 = (uint64_t)(*a1 * 1000000000.0);
        *((_QWORD *)&v14 + 1) = 2;
        v13 = sub_2241471F8();
        sub_22356F6DC((uint64_t)v13, a2, a3, (uint64_t)__dst, &v14);
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v10, a4, (size_t)v9);
    goto LABEL_10;
  }
}

void sub_22392ABA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22392ABC0(uint64_t a1, float32x2_t *a2, uint64_t *a3)
{
  double v6;
  int8x16_t v7;
  int32x4_t v8;
  int32x4_t v9;
  int32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  int32x2_t *v13;
  uint64_t *v14;
  float32x4_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  float32x4_t v19;
  uint64_t v20;
  float32x4_t v21;
  int32x4_t v22;
  float32x4_t v23;
  int8x16_t v24;
  float32x4_t v25;
  int8x16_t v26;
  int8x16_t v27;
  float32x2_t v28;
  double v29;
  int8x16_t v30;
  float32x2_t v31;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  uint64_t v40;
  float *v41;
  float v42;
  float *v43;
  float *v44;
  float v45;
  uint64_t *v46;
  uint64_t v47;
  _DWORD *v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53;
  uint64_t v54;
  void *v55;
  std::__shared_weak_count *v56;
  unint64_t *p_shared_owners;
  unint64_t v58;
  float v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  float32x4_t v64;
  float32x4_t v65;
  int8x16_t v66;
  int8x16_t v67;
  float32x4_t v68;
  uint64_t v69;
  float32x4_t v70;
  uint64_t v71;
  float32x2_t v72;
  int8x16_t v73;
  unint64_t i;
  uint64_t v75;
  float32x4_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t j;
  float32x2_t **v82;
  float32x2_t *v83;
  float32x2_t *k;
  float32x4_t v85;
  float32x4_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  std::mutex *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  std::__shared_weak_count *v101;
  void **v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t *v105;
  unint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  std::mutex *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t *v130;
  uint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  std::__shared_weak_count *v135;
  void **v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t *v139;
  unint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  unint64_t v149;
  unint64_t *v150;
  unint64_t v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  float32x2_t v156;
  float32x2_t v157;
  float32x2_t v158;
  float32x2_t v159;
  float32x2_t v160;
  float32x4_t v161;
  int8x16_t v162;
  int8x16_t v163;
  float *v164;
  int8x16_t v165;
  uint64_t v166;
  int v167;
  __int32 v168;
  float v169;
  char v170;
  _QWORD v171[2];
  char v172;
  void *v173[2];
  __int128 v174;
  char *v175;
  uint64_t *v176;
  __int128 __p;
  __int128 v178;
  char *v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  __int128 *p_p;
  void **v184;
  std::__shared_weak_count *v185;
  _QWORD *v186;
  _QWORD v187[2];
  char v188;
  __int128 v189;
  __int128 *v190;
  __int128 **p_p_p;
  char *v192;
  _BYTE v193[24];
  uint64_t v194;
  std::__shared_weak_count *v195;
  char v196;
  uint64_t v197;
  int v198;
  char v199;
  char v200;
  uint64_t v201;
  int v202;
  char v203;
  char v204;
  uint64_t v205;
  int v206;
  char v207;
  char v208;
  uint64_t v209;
  int v210;
  char v211;
  char v212;
  uint64_t v213;
  int v214;
  char v215;
  char v216;
  uint64_t v217;
  int v218;
  char v219;
  char v220;
  uint64_t v221;
  int v222;
  char v223;
  char v224;
  uint64_t v225;
  int v226;
  char v227;
  char v228;
  uint64_t v229;
  int v230;
  char v231;
  char v232;
  uint64_t v233;
  int v234;
  char v235;
  char v236;
  uint64_t v237;
  int v238;
  char v239;
  char v240;
  uint64_t v241;
  int v242;
  char v243;
  char v244;
  int v245;
  uint64_t v246;
  char v247;
  char v248;
  uint64_t v249;
  int v250;
  char v251;
  char v252;
  int v253;
  uint64_t v254;
  char v255;
  char v256;
  uint64_t v257;
  int v258;
  char v259;
  char v260;
  int v261;
  uint64_t v262;
  char v263;
  char v264;
  uint64_t v265;
  int v266;
  char v267;
  char v268;
  int v269;
  uint64_t v270;
  char v271;
  char v272;
  uint64_t v273;
  int v274;
  char v275;
  char v276;
  int v277;
  uint64_t v278;
  char v279;
  char v280;
  uint64_t v281;
  int v282;
  char v283;
  char v284;
  int v285;
  uint64_t v286;
  char v287;
  char v288;
  uint64_t v289;
  int v290;
  char v291;
  char v292;
  int v293;
  uint64_t v294;
  char v295;
  std::string v296;
  uint64_t v297;

  v297 = *MEMORY[0x24BDAC8D0];
  v6 = (double)*a3 / 1000000000.0;
  v171[1] = 0;
  v171[0] = std::chrono::steady_clock::now().__d_.__rep_;
  v172 = 1;
  kdebug_trace();
  v13 = (int32x2_t *)(a1 + 40148);
  v14 = (uint64_t *)(a1 + 2988);
  *(_BYTE *)(a1 + 2984) = 0;
  if (*(_BYTE *)(a1 + 233))
  {
    *(int32x2_t *)v9.i8 = *v13;
    v9.i32[2] = *(_DWORD *)(a1 + 40156);
    v10.i64[0] = *(_QWORD *)(a1 + 40164);
    v10.i32[2] = *(_DWORD *)(a1 + 40172);
    v15 = (float32x4_t)vzip1q_s32(v9, v10);
    v16 = (int8x16_t)v15;
    v16.i32[2] = *(_QWORD *)(a1 + 40180);
    v11.i64[0] = *(_QWORD *)(a1 + 40196);
    v11.i32[2] = *(_DWORD *)(a1 + 40204);
    v17 = (int8x16_t)vnegq_f32(v11);
    v18 = (int8x16_t)vtrn2q_s32(v9, v10);
    v18.i32[2] = HIDWORD(*(_QWORD *)(a1 + 40180));
    v12.i32[0] = *(_DWORD *)(a1 + 40188);
    v19 = (float32x4_t)vzip2q_s32(v9, v10);
    *(float32x2_t *)v15.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v15.f32, *(float *)v17.i32), *(float32x2_t *)v18.i8, *(float32x2_t *)v11.f32, 1), *(float32x2_t *)v19.f32, v11, 2);
    v19.i32[2] = v12.i32[0];
    v15.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a1 + 40180), *(float32x2_t *)v17.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a1 + 40180), 1), *(float32x2_t *)v11.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL), *(float32x2_t *)v12.f32).u32[0]);
    v20 = vextq_s8(v18, v16, 4uLL).u64[0];
    v16.i32[3] = 0;
    v21.i32[3] = 0;
    v21.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v18, 0).i32[3];
    *(uint64_t *)((char *)v21.i64 + 4) = v20;
    v19.i64[1] = vdupq_laneq_s32((int32x4_t)v19, 2).u32[0];
    v22 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v16, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v21, *(float32x2_t *)(a1 + 40212), 1), v19, *(float32x4_t *)(a1 + 40212), 2), v15, *(float32x4_t *)(a1 + 40212), 3);
    v23 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v16, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v21, *(float32x2_t *)(a1 + 40228), 1), v19, *(float32x4_t *)(a1 + 40228), 2), v15, *(float32x4_t *)(a1 + 40228), 3);
    v24 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v16, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v21, *(float32x2_t *)(a1 + 40244), 1), v19, *(float32x4_t *)(a1 + 40244), 2), v15, *(float32x4_t *)(a1 + 40244), 3);
    v25 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v16, COERCE_FLOAT(*(_OWORD *)(a1 + 40260))), v21, *(float32x2_t *)(a1 + 40260), 1), v19, *(float32x4_t *)(a1 + 40260), 2), v15, *(float32x4_t *)(a1 + 40260), 3);
    v8 = vtrn2q_s32(v22, (int32x4_t)v23);
    v26 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v8.i8, 1);
    v11 = (float32x4_t)vzip2q_s32(v22, (int32x4_t)v23);
    v27 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v8.i8, 0);
    *(int32x2_t *)v23.f32 = vzip1_s32(*(int32x2_t *)v22.i8, *(int32x2_t *)v23.f32);
    *(float32x2_t *)v12.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v23.f32, COERCE_FLOAT(v25.i32[0] ^ 0x80000000)), *(float32x2_t *)v8.i8, (float32x2_t)(v25.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v11.f32, COERCE_FLOAT(v25.i32[2] ^ 0x80000000));
    v18.i64[0] = vextq_s8(v24, v24, 8uLL).u64[0];
    *(float32x2_t *)v8.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v24.i8, (float32x2_t)(v25.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v25.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v24.i8, 1), (float32x2_t)(v25.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v18.i8);
    v25.i64[0] = vextq_s8(v27, v26, 0xCuLL).u64[0];
    v12.i64[1] = v8.i64[0];
    v26.i32[0] = a2[1].i32[0];
    *(float32x2_t *)v23.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v23.f32, COERCE_FLOAT(*a2)), *(float32x2_t *)v25.f32, *a2, 1), *(float32x2_t *)v11.f32, *(float *)v26.i32);
    *(float32x2_t *)&v23.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v24.i8, *a2), (float32x2_t)vdup_lane_s32((int32x2_t)*a2, 1), *(float32x2_t *)v24.i8, 1), *(float32x2_t *)v26.i8, *(float32x2_t *)v18.i8);
    v7 = (int8x16_t)vaddq_f32(v23, v12);
  }
  else
  {
    *(float32x2_t *)v7.i8 = *a2;
    v7.i32[2] = a2[1].i32[0];
  }
  *(_DWORD *)(a1 + 2996) = v7.i32[2];
  *v14 = v7.i64[0];
  *(_QWORD *)(a1 + 3000) = *a3;
  *(double *)(a1 + 2976) = v6;
  *(int32x2_t *)v7.i8 = *v13;
  v8.i64[0] = *(_QWORD *)(a1 + 40164);
  v28 = (float32x2_t)vzip1_s32(*v13, *(int32x2_t *)v8.i8);
  v7.i32[2] = *(_DWORD *)(a1 + 40156);
  v8.i32[2] = *(_DWORD *)(a1 + 40172);
  v29 = *(double *)(a1 + 40180);
  v8.i64[0] = vtrn2q_s32((int32x4_t)v7, v8).u64[0];
  v7.i32[3] = v8.i32[2];
  v30 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v8.i8, 1);
  v11.i32[0] = *(_DWORD *)(a1 + 40188);
  _Q1 = (float32x4_t)vextq_s8((int8x16_t)vdupq_lane_s32(*(int32x2_t *)v8.i8, 0), v30, 0xCuLL);
  v30.i32[1] = 0;
  v31 = vmla_f32(vmul_f32(v28, 0), 0, *(float32x2_t *)_Q1.f32);
  __asm { FMOV            V1.2S, #-1.0 }
  *(float32x2_t *)v36.f32 = vmla_f32(v31, *(float32x2_t *)_Q1.f32, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL));
  *(float32x2_t *)&v36.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)&v29, 0), 0, *(float32x2_t *)&v29, 1), *(float32x2_t *)_Q1.f32, *(float32x2_t *)v11.f32);
  v37 = vnegq_f32(v36);
  *(_DWORD *)&v193[8] = v37.i32[2];
  *(_QWORD *)v193 = v37.i64[0];
  v38 = vabsq_f32(v36);
  _Q1.i32[0] = v38.i32[1];
  v40 = v38.f32[1] > v38.f32[0];
  if (v38.f32[1] <= v38.f32[0])
    _Q1.f32[0] = v38.f32[0];
  if (_Q1.f32[0] < v38.f32[2])
    v40 = 2;
  if (!v40)
  {
    v41 = (float *)(a1 + 208);
    v42 = *(float *)(a1 + 208);
    v43 = (float *)(a1 + 204);
    v30.i32[0] = *(_DWORD *)(a1 + 204);
    v166 = *v14;
    v44 = (float *)(a1 + 212);
    v45 = *(float *)(a1 + 212);
    v167 = *(_DWORD *)(a1 + 2996);
    *(float *)&v29 = v45 + v42;
    v168 = v30.i32[0];
    v169 = v45 + v42;
    if (v37.f32[0] < 0.0)
      goto LABEL_11;
LABEL_13:
    v170 = v40;
    v42 = v45;
    goto LABEL_14;
  }
  if (v40 != 1)
  {
    v37.i32[0] = *(_DWORD *)((unint64_t)v193 | (4 * v40));
    v43 = (float *)(a1 + 204);
    v30.i32[0] = *(_DWORD *)(a1 + 204);
    v44 = (float *)(a1 + 212);
    v45 = *(float *)(a1 + 212);
    v41 = (float *)(a1 + 208);
    v42 = *(float *)(a1 + 208);
    v166 = *v14;
    v167 = *(_DWORD *)(a1 + 2996);
    *(float *)&v29 = v45 + v42;
    v168 = v30.i32[0];
    v169 = v45 + v42;
    LODWORD(v40) = 2;
    if (v37.f32[0] < 0.0)
      goto LABEL_11;
    goto LABEL_13;
  }
  v37.i32[0] = v37.i32[1];
  v41 = (float *)(a1 + 208);
  v42 = *(float *)(a1 + 208);
  v43 = (float *)(a1 + 204);
  v30.i32[0] = *(_DWORD *)(a1 + 204);
  v44 = (float *)(a1 + 212);
  v45 = *(float *)(a1 + 212);
  v166 = *v14;
  v167 = *(_DWORD *)(a1 + 2996);
  *(float *)&v29 = v45 + v42;
  v168 = v30.i32[0];
  v169 = v45 + v42;
  LODWORD(v40) = 1;
  if (v37.f32[1] >= 0.0)
    goto LABEL_13;
LABEL_11:
  v170 = v40;
LABEL_14:
  v46 = (uint64_t *)(a1 + 2896);
  v47 = 4 * v40;
  _Q1.i32[0] = *(_DWORD *)((char *)&v166 + v47);
  v38.f32[0] = _Q1.f32[0] - v42;
  *(_DWORD *)((char *)&v166 + v47) = v38.i32[0];
  if (*(_BYTE *)(a1 + 297) && (v48 = *(_DWORD **)(a1 + 40784)) != 0)
  {
    *(_QWORD *)(a1 + 2904) = *(_QWORD *)(a1 + 2896);
    *(_DWORD *)(a1 + 2920) = 0;
    v296.__r_.__value_.__s.__data_[0] = 0;
    v296.__r_.__value_.__s.__data_[16] = 0;
    v181 = 0;
    v182 = a1;
    v193[0] = 1;
    *(_QWORD *)&v193[4] = -1;
    *(_DWORD *)&v193[12] = -1;
    v193[16] = 8;
    v193[20] = 1;
    v194 = -1;
    LODWORD(v195) = -1;
    BYTE4(v195) = 8;
    v196 = 1;
    v197 = -1;
    v198 = -1;
    v199 = 8;
    v200 = 1;
    v201 = -1;
    v202 = -1;
    v203 = 8;
    v204 = 1;
    v205 = -1;
    v206 = -1;
    v207 = 8;
    v208 = 1;
    v209 = -1;
    v210 = -1;
    v211 = 8;
    v212 = 1;
    v213 = -1;
    v214 = -1;
    v215 = 8;
    v216 = 1;
    v217 = -1;
    v218 = -1;
    v219 = 8;
    v220 = 1;
    v221 = -1;
    v222 = -1;
    v223 = 8;
    v224 = 1;
    v225 = -1;
    v226 = -1;
    v227 = 8;
    v228 = 1;
    v229 = -1;
    v230 = -1;
    v231 = 8;
    v232 = 1;
    v233 = -1;
    v234 = -1;
    v235 = 8;
    v236 = 1;
    v237 = -1;
    v238 = -1;
    v239 = 8;
    v240 = 1;
    v241 = -1;
    v242 = -1;
    v243 = 8;
    v244 = 1;
    v245 = -1;
    v246 = -1;
    v247 = 8;
    v248 = 1;
    v249 = -1;
    v250 = -1;
    v251 = 8;
    v252 = 1;
    v253 = -1;
    v254 = -1;
    v255 = 8;
    v256 = 1;
    v257 = -1;
    v258 = -1;
    v259 = 8;
    v260 = 1;
    v261 = -1;
    v262 = -1;
    v263 = 8;
    v264 = 1;
    v265 = -1;
    v266 = -1;
    v267 = 8;
    v268 = 1;
    v269 = -1;
    v270 = -1;
    v271 = 8;
    v272 = 1;
    v273 = -1;
    v274 = -1;
    v275 = 8;
    v276 = 1;
    v277 = -1;
    v278 = -1;
    v279 = 8;
    v280 = 1;
    v281 = -1;
    v282 = -1;
    v283 = 8;
    v284 = 1;
    v285 = -1;
    v286 = -1;
    v287 = 8;
    v288 = 1;
    v289 = -1;
    v290 = -1;
    v291 = 8;
    v292 = 1;
    v293 = -1;
    v294 = -1;
    v295 = 8;
    *(_QWORD *)&__p = v48 + 46;
    *((_QWORD *)&__p + 1) = &v296;
    *(_QWORD *)&v178 = &v181;
    *((_QWORD *)&v178 + 1) = v193;
    v179 = &v180;
    v173[0] = &v181;
    v173[1] = v48 + 46;
    *(_QWORD *)&v174 = &v296;
    *((_QWORD *)&v174 + 1) = v193;
    v175 = &v180;
    v176 = &v182;
    v187[0] = v48 + 46;
    v187[1] = &v166;
    p_p = &__p;
    v184 = v173;
    v185 = (std::__shared_weak_count *)(v48 + 46);
    v186 = v187;
    *(_QWORD *)&v189 = v48 + 46;
    *((_QWORD *)&v189 + 1) = &v166;
    v188 = 1;
    v49 = v48[90];
    if ((v49 & 0x80000000) == 0)
    {
      v180 = 0;
      v50 = v48[91];
      v190 = &v189;
      p_p_p = &p_p;
      v192 = &v188;
      sub_22393B910((uint64_t)(v48 + 46), v50, v49, 0, &v190, NAN, *(double *)_Q1.i64, v37, (float32x4_t)v30, v29, v11);
    }
  }
  else
  {
    sub_223CFF088(a1 + 304, (uint64_t)&v166, a1 + 2896, (uint64_t)a3, *(double *)v38.i64, _Q1);
  }
  v51 = *(unsigned __int8 *)(a1 + 220);
  if (*(_BYTE *)(a1 + 220))
  {
    sub_22392C11C((uint64_t *)v193, (_QWORD *)a1);
    v52 = *(_QWORD *)(a1 + 2928);
    if (v52)
    {
      v164 = v44;
      v53 = (void **)(a1 + 2928);
      v54 = *(_QWORD *)(a1 + 2936);
      v55 = *(void **)(a1 + 2928);
      if (v54 != v52)
      {
        do
        {
          v56 = *(std::__shared_weak_count **)(v54 - 96);
          if (v56)
          {
            p_shared_owners = (unint64_t *)&v56->__shared_owners_;
            do
              v58 = __ldaxr(p_shared_owners);
            while (__stlxr(v58 - 1, p_shared_owners));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
              std::__shared_weak_count::__release_weak(v56);
            }
          }
          v54 -= 120;
        }
        while (v54 != v52);
        v55 = *v53;
      }
      *(_QWORD *)(a1 + 2936) = v52;
      operator delete(v55);
      *v53 = 0;
      *(_QWORD *)(a1 + 2936) = 0;
      *(_QWORD *)(a1 + 2944) = 0;
      v44 = v164;
    }
    *(_OWORD *)(a1 + 2928) = *(_OWORD *)v193;
    *(_QWORD *)(a1 + 2944) = *(_QWORD *)&v193[16];
    v51 = *(unsigned __int8 *)(a1 + 220);
  }
  if (*(_BYTE *)(a1 + 200))
  {
    v59 = ceilf((float)((float)(*v43 + *v43) / 0.24) + 0.001);
    v60 = (float)((float)((float)(v59 + 1.0) * (float)(v59 + 1.0))
                              * (float)(ceilf((float)((float)(*v41 + *v44) / 0.24) + 0.001) + 1.0));
    if (v51)
    {
LABEL_36:
      v61 = sub_223FFBB64(a1 + 16);
      sub_223FFE094(a1 + 2896, v60, v61);
      goto LABEL_42;
    }
  }
  else
  {
    v60 = 0;
    if (v51)
      goto LABEL_36;
  }
  v62 = *(_QWORD *)(a1 + 2896);
  v63 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 2904) - v62) >> 3);
  if (v60 <= v63)
  {
    if (v60 < v63)
      *(_QWORD *)(a1 + 2904) = v62 + 24 * v60;
  }
  else
  {
    sub_224001330((void **)(a1 + 2896), v60 - v63);
  }
LABEL_42:
  if (*(_BYTE *)(a1 + 233))
  {
    *(int32x2_t *)v37.f32 = *v13;
    v37.i32[2] = *(_DWORD *)(a1 + 40156);
    v30.i64[0] = *(_QWORD *)(a1 + 40164);
    v30.i32[2] = *(_DWORD *)(a1 + 40172);
    v64 = (float32x4_t)vzip1q_s32((int32x4_t)v37, (int32x4_t)v30);
    v65 = v64;
    v73.i32[2] = *(_QWORD *)(a1 + 40180);
    v11.i64[0] = *(_QWORD *)(a1 + 40196);
    v11.i32[2] = *(_DWORD *)(a1 + 40204);
    v66 = (int8x16_t)vnegq_f32(v11);
    v67 = (int8x16_t)vtrn2q_s32((int32x4_t)v37, (int32x4_t)v30);
    v67.i32[2] = HIDWORD(*(_QWORD *)(a1 + 40180));
    v12.i32[0] = *(_DWORD *)(a1 + 40188);
    v68 = (float32x4_t)vzip2q_s32((int32x4_t)v37, (int32x4_t)v30);
    *(float32x2_t *)v64.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v64.f32, *(float *)v66.i32), *(float32x2_t *)v67.i8, *(float32x2_t *)v11.f32, 1), *(float32x2_t *)v68.f32, v11, 2);
    v68.i32[2] = v12.i32[0];
    v64.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a1 + 40180), *(float32x2_t *)v66.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a1 + 40180), 1), *(float32x2_t *)v11.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), *(float32x2_t *)v12.f32).u32[0]);
    v69 = vextq_s8(v67, v73, 4uLL).u64[0];
    v73.i32[3] = 0;
    v70.i32[3] = 0;
    v70.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v67, 0).i32[3];
    *(uint64_t *)((char *)v70.i64 + 4) = v69;
    v68.i64[1] = vdupq_laneq_s32((int32x4_t)v68, 2).u32[0];
    v161 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v73, COERCE_FLOAT(*(_OWORD *)(a1 + 40260))), v70, *(float32x2_t *)(a1 + 40260), 1), v68, *(float32x4_t *)(a1 + 40260), 2), v64, *(float32x4_t *)(a1 + 40260), 3);
    v162 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v73, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v70, *(float32x2_t *)(a1 + 40244), 1), v68, *(float32x4_t *)(a1 + 40244), 2), v64, *(float32x4_t *)(a1 + 40244), 3);
    v71 = *(unsigned int *)(a1 + 2920);
    v163 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v73, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v70, *(float32x2_t *)(a1 + 40228), 1), v68, *(float32x4_t *)(a1 + 40228), 2), v64, *(float32x4_t *)(a1 + 40228), 3);
    v165 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v73, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v70, *(float32x2_t *)(a1 + 40212), 1), v68, *(float32x4_t *)(a1 + 40212), 2), v64, *(float32x4_t *)(a1 + 40212), 3);
    v72 = (float32x2_t)vextq_s8(v165, v165, 8uLL).u64[0];
    v159 = (float32x2_t)vextq_s8(v163, v163, 8uLL).u64[0];
    v160 = v72;
    v73.i64[0] = vextq_s8(v162, v162, 8uLL).u64[0];
    v158 = *(float32x2_t *)v73.i8;
    if ((_DWORD)v71)
    {
      for (i = 0; i != v71; ++i)
      {
        v78 = *(unsigned int *)(a1 + 2920);
        if (i >= v78)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/OccupancyQuery.cpp", 269, (uint64_t)"index < valid_occupied_blocks", 29, (uint64_t)"Block index out of bounds", 25, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v78 = *(unsigned int *)(a1 + 2920);
        }
        v75 = *v46;
        v79 = *v46 + 24 * i;
        v73.i32[0] = *(_DWORD *)(v79 + 8);
        v157 = *(float32x2_t *)v73.i8;
        v156 = *(float32x2_t *)v79;
        if (v78 <= i)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/OccupancyQuery.cpp", 274, (uint64_t)"index < valid_occupied_blocks", 29, (uint64_t)"Block index out of bounds", 25, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v75 = *v46;
        }
        *(float32x2_t *)v76.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v165.i8, v156.f32[0]), *(float32x2_t *)v163.i8, v156, 1), *(float32x2_t *)v162.i8, v157.f32[0]);
        *(float32x2_t *)&v76.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v160, v156), v159, v156, 1), v157, v158);
        v72.i32[1] = v161.i32[1];
        v73 = (int8x16_t)vaddq_f32(v76, v161);
        v77 = v75 + 24 * i;
        *(_QWORD *)v77 = v73.i64[0];
        *(_DWORD *)(v77 + 8) = v73.i32[2];
      }
    }
    v80 = *(_QWORD *)(a1 + 2928);
    for (j = *(_QWORD *)(a1 + 2936); v80 != j; v80 += 120)
    {
      if (*(_BYTE *)(v80 + 96)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/OccupancyMapper.cpp", 1994, (uint64_t)"!tr_mesh_to_user_world_opt", 26, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v82 = *(float32x2_t ***)(v80 + 16);
      v83 = *v82;
      for (k = v82[1]; v83 != k; v83 = (float32x2_t *)((char *)v83 + 12))
      {
        v72.i32[0] = v83[1].i32[0];
        *(float32x2_t *)v85.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v165.i8, COERCE_FLOAT(*v83)), *(float32x2_t *)v163.i8, *v83, 1), *(float32x2_t *)v162.i8, v72.f32[0]);
        *(float32x2_t *)&v85.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v160, *v83), v159, *v83, 1), v72, v158);
        v86 = vaddq_f32(v85, v161);
        v83[1].i32[0] = v86.i32[2];
        *v83 = *(float32x2_t *)v86.f32;
      }
    }
  }
  kdebug_trace();
  *(_QWORD *)v193 = operator new(0x20uLL);
  *(_OWORD *)&v193[8] = xmmword_2245B8E30;
  strcpy(*(char **)v193, "GetOccupancyByProximityResult");
  BYTE7(v174) = 9;
  strcpy((char *)v173, "Occupancy");
  sub_22391CC34((uint64_t *)v193, (uint64_t *)v173, (uint64_t)v171);
  if (SBYTE7(v174) < 0)
  {
    operator delete(v173[0]);
    if ((v193[23] & 0x80000000) == 0)
      goto LABEL_63;
  }
  else if ((v193[23] & 0x80000000) == 0)
  {
    goto LABEL_63;
  }
  operator delete(*(void **)v193);
LABEL_63:
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v87 = sub_2241471F8();
    v88 = v87[2];
    if (!v88)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v88 = v87[2];
    }
    v89 = *(_QWORD *)(v88 + 64);
    v90 = (std::mutex *)(v89 + 32);
    std::mutex::lock((std::mutex *)(v89 + 32));
    v92 = *(_QWORD *)(v89 + 96);
    v91 = *(_QWORD *)(v89 + 104);
    std::mutex::unlock(v90);
    if (v92 != v91)
    {
      *(_QWORD *)v193 = "cv3d.recon.";
      *(_QWORD *)&v193[8] = 11;
      *(_QWORD *)&v193[16] = "Occupancy.OccupancyByProximity";
      v194 = 30;
      sub_2231A9820((uint64_t)v193, (uint64_t)&v195, 0, 0, &v296);
      sub_2241471F8();
      v93 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v93 + 24))(v93))
      {
        *(_OWORD *)v173 = 0u;
        v174 = 0u;
        LODWORD(v175) = 728325616;
        kdebug_trace();
        v94 = *(_QWORD *)(a1 + 3000);
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v93 + 24))(v93))
        {
          *(_QWORD *)&v189 = (uint64_t)((double)v94 / 1000000000.0 * 1000000000.0);
          *((_QWORD *)&v189 + 1) = 2;
          v95 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v93 + 24))(v93))
          {
            sub_22393B338((uint64_t)v193, a1, 0);
            strcpy((char *)&__p, "occupied");
            *(_WORD *)((char *)&v178 + 7) = 264;
            sub_22329F414((uint64_t)v193, &__p, &v189, &p_p);
            if (BYTE8(v178) && SBYTE7(v178) < 0)
              operator delete((void *)__p);
            sub_22316F8F4((uint64_t *)v193);
            v96 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v93 + 56))(v93);
            v97 = *v96;
            v98 = (std::__shared_weak_count *)v96[1];
            if (v98)
            {
              v99 = (unint64_t *)&v98->__shared_owners_;
              do
                v100 = __ldxr(v99);
              while (__stxr(v100 + 1, v99));
            }
            v102 = v184;
            v101 = v185;
            v190 = (__int128 *)&off_24EC6A3B8;
            p_p_p = (__int128 **)v184;
            v192 = (char *)v185;
            *(_QWORD *)v193 = v97;
            v184 = 0;
            v185 = 0;
            *(_QWORD *)&v193[8] = v98;
            if (v98)
            {
              v103 = (unint64_t *)&v98->__shared_owners_;
              do
                v104 = __ldxr(v103);
              while (__stxr(v104 + 1, v103));
            }
            *(_QWORD *)&v193[16] = &off_24EC6A3B8;
            v194 = (uint64_t)v102;
            v195 = v101;
            if (v101)
            {
              v105 = (unint64_t *)&v101->__shared_owners_;
              do
                v106 = __ldxr(v105);
              while (__stxr(v106 + 1, v105));
            }
            (*(void (**)(uint64_t *, _BYTE *))(*v95 + 16))(v95, v193);
            v107 = v195;
            if (v195)
            {
              v108 = (unint64_t *)&v195->__shared_owners_;
              do
                v109 = __ldaxr(v108);
              while (__stlxr(v109 - 1, v108));
              if (!v109)
              {
                ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
                std::__shared_weak_count::__release_weak(v107);
              }
            }
            v110 = *(std::__shared_weak_count **)&v193[8];
            if (*(_QWORD *)&v193[8])
            {
              v111 = (unint64_t *)(*(_QWORD *)&v193[8] + 8);
              do
                v112 = __ldaxr(v111);
              while (__stlxr(v112 - 1, v111));
              if (!v112)
              {
                ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
                std::__shared_weak_count::__release_weak(v110);
              }
            }
            v113 = (std::__shared_weak_count *)v192;
            if (v192)
            {
              v114 = (unint64_t *)(v192 + 8);
              do
                v115 = __ldaxr(v114);
              while (__stlxr(v115 - 1, v114));
              if (!v115)
              {
                ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
                std::__shared_weak_count::__release_weak(v113);
              }
            }
            if (v98)
            {
              v116 = (unint64_t *)&v98->__shared_owners_;
              do
                v117 = __ldaxr(v116);
              while (__stlxr(v117 - 1, v116));
              if (!v117)
              {
                ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                std::__shared_weak_count::__release_weak(v98);
              }
            }
            v118 = v185;
            if (v185)
            {
              v119 = (unint64_t *)&v185->__shared_owners_;
              do
                v120 = __ldaxr(v119);
              while (__stlxr(v120 - 1, v119));
              if (!v120)
              {
                ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
                std::__shared_weak_count::__release_weak(v118);
              }
            }
          }
        }
        kdebug_trace();
      }
      if (SHIBYTE(v296.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v296.__r_.__value_.__l.__data_);
    }
  }
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v121 = sub_2241471F8();
    v122 = v121[2];
    if (!v122)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v122 = v121[2];
    }
    v123 = *(_QWORD *)(v122 + 64);
    v124 = (std::mutex *)(v123 + 32);
    std::mutex::lock((std::mutex *)(v123 + 32));
    v126 = *(_QWORD *)(v123 + 96);
    v125 = *(_QWORD *)(v123 + 104);
    std::mutex::unlock(v124);
    if (v126 != v125)
    {
      *(_QWORD *)v193 = "cv3d.recon.";
      *(_QWORD *)&v193[8] = 11;
      *(_QWORD *)&v193[16] = "Occupancy.OccupancyByProximity";
      v194 = 30;
      sub_2231A9820((uint64_t)v193, (uint64_t)&v195, 0, 0, &v296);
      sub_2241471F8();
      v127 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v127 + 24))(v127))
      {
        *(_OWORD *)v173 = 0u;
        v174 = 0u;
        LODWORD(v175) = 728325616;
        kdebug_trace();
        v128 = *(_QWORD *)(a1 + 3000);
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v127 + 24))(v127))
        {
          *(_QWORD *)&v189 = (uint64_t)((double)v128 / 1000000000.0 * 1000000000.0);
          *((_QWORD *)&v189 + 1) = 2;
          v129 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v127 + 24))(v127))
          {
            sub_22393B338((uint64_t)v193, a1, 1);
            *(_QWORD *)&__p = 0x6E776F6E6B6E75;
            *(_WORD *)((char *)&v178 + 7) = 263;
            sub_22329F414((uint64_t)v193, &__p, &v189, &p_p);
            if (BYTE8(v178) && SBYTE7(v178) < 0)
              operator delete((void *)__p);
            sub_22316F8F4((uint64_t *)v193);
            v130 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v127 + 56))(v127);
            v131 = *v130;
            v132 = (std::__shared_weak_count *)v130[1];
            if (v132)
            {
              v133 = (unint64_t *)&v132->__shared_owners_;
              do
                v134 = __ldxr(v133);
              while (__stxr(v134 + 1, v133));
            }
            v136 = v184;
            v135 = v185;
            v190 = (__int128 *)&off_24EC6A3B8;
            p_p_p = (__int128 **)v184;
            v192 = (char *)v185;
            *(_QWORD *)v193 = v131;
            v184 = 0;
            v185 = 0;
            *(_QWORD *)&v193[8] = v132;
            if (v132)
            {
              v137 = (unint64_t *)&v132->__shared_owners_;
              do
                v138 = __ldxr(v137);
              while (__stxr(v138 + 1, v137));
            }
            *(_QWORD *)&v193[16] = &off_24EC6A3B8;
            v194 = (uint64_t)v136;
            v195 = v135;
            if (v135)
            {
              v139 = (unint64_t *)&v135->__shared_owners_;
              do
                v140 = __ldxr(v139);
              while (__stxr(v140 + 1, v139));
            }
            (*(void (**)(uint64_t *, _BYTE *))(*v129 + 16))(v129, v193);
            v141 = v195;
            if (v195)
            {
              v142 = (unint64_t *)&v195->__shared_owners_;
              do
                v143 = __ldaxr(v142);
              while (__stlxr(v143 - 1, v142));
              if (!v143)
              {
                ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
                std::__shared_weak_count::__release_weak(v141);
              }
            }
            v144 = *(std::__shared_weak_count **)&v193[8];
            if (*(_QWORD *)&v193[8])
            {
              v145 = (unint64_t *)(*(_QWORD *)&v193[8] + 8);
              do
                v146 = __ldaxr(v145);
              while (__stlxr(v146 - 1, v145));
              if (!v146)
              {
                ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
                std::__shared_weak_count::__release_weak(v144);
              }
            }
            v147 = (std::__shared_weak_count *)v192;
            if (v192)
            {
              v148 = (unint64_t *)(v192 + 8);
              do
                v149 = __ldaxr(v148);
              while (__stlxr(v149 - 1, v148));
              if (!v149)
              {
                ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
                std::__shared_weak_count::__release_weak(v147);
              }
            }
            if (v132)
            {
              v150 = (unint64_t *)&v132->__shared_owners_;
              do
                v151 = __ldaxr(v150);
              while (__stlxr(v151 - 1, v150));
              if (!v151)
              {
                ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
                std::__shared_weak_count::__release_weak(v132);
              }
            }
            v152 = v185;
            if (v185)
            {
              v153 = (unint64_t *)&v185->__shared_owners_;
              do
                v154 = __ldaxr(v153);
              while (__stlxr(v154 - 1, v153));
              if (!v154)
              {
                ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
                std::__shared_weak_count::__release_weak(v152);
              }
            }
          }
        }
        kdebug_trace();
      }
      if (SHIBYTE(v296.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v296.__r_.__value_.__l.__data_);
    }
  }
  return v46;
}

void sub_22392BF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60)
{
  std::__shared_weak_count *v60;
  uint64_t v61;
  uint64_t v62;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t *p_shared_owners;
  unint64_t v68;

  sub_2241231D8(v61);
  v64 = (std::__shared_weak_count *)a60;
  if (a60)
  {
    v65 = (unint64_t *)(a60 + 8);
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
  sub_2241231D8((uint64_t)&a56);
  if (v60)
  {
    p_shared_owners = (unint64_t *)&v60->__shared_owners_;
    do
      v68 = __ldaxr(p_shared_owners);
    while (__stlxr(v68 - 1, p_shared_owners));
    if (!v68)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  sub_2241231D8((uint64_t)&a47);
  sub_2231874DC((uint64_t)&a33);
  if (*(char *)(v62 - 121) < 0)
  {
    operator delete(*(void **)(v62 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22392C11C(uint64_t *a1, _QWORD *a2)
{
  int *v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v2 = (int *)a2[5080];
  if (v2)
  {
    v4 = a2 + 4990;
    v5 = a2 + 5001;
    do
    {
      v6 = sub_22393835C(v4, v2 + 4);
      if (v6)
      {
        *(_QWORD *)&v16 = sub_223919C2C(v5, v2 + 4);
        *((_QWORD *)&v16 + 1) = v7;
        v8 = (std::__shared_weak_count *)operator new(0x198uLL);
        v8->__shared_owners_ = 0;
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        v10 = (uint64_t)(v6 + 4);
        v8->__shared_weak_owners_ = 0;
        v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
        v11 = (uint64_t)&v8[1];
        sub_223180698((uint64_t)&v8[1], v10);
        v12 = a1[1];
        if (v12 >= a1[2])
        {
          v14 = sub_2239372F8(a1, &v16, v11, (uint64_t)v8);
        }
        else
        {
          *(_OWORD *)v12 = v16;
          *(_QWORD *)(v12 + 16) = v11;
          *(_QWORD *)(v12 + 24) = v8;
          do
            v13 = __ldxr(p_shared_owners);
          while (__stxr(v13 + 1, p_shared_owners));
          *(_BYTE *)(v12 + 32) = 0;
          *(_BYTE *)(v12 + 96) = 0;
          *(_BYTE *)(v12 + 100) = 0;
          v14 = v12 + 120;
          *(_BYTE *)(v12 + 116) = 0;
        }
        a1[1] = v14;
        do
          v15 = __ldaxr(p_shared_owners);
        while (__stlxr(v15 - 1, p_shared_owners));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v2 = *(int **)v2;
    }
    while (v2);
  }
}

void sub_22392C29C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void **v2;
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  sub_223295868(v2);
  _Unwind_Resume(a1);
}

void sub_22392C2B8(_Unwind_Exception *a1)
{
  void **v1;
  std::__shared_weak_count *v2;
  void *v4;

  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C2D8(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C2EC(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C300(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C314(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t **v4;
  int8x16_t v5;
  int8x16_t v6;
  float32x4_t v7;
  float32x4_t v8;
  int *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  float32x2_t *v35;
  float32x2_t **v36;
  float32x2_t *v37;
  float32x2_t *v38;
  float32x4_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  int8x16_t v45;
  int32x4_t v46;
  float32x2_t v47;
  float32x4_t v48;
  int8x16_t v49;
  float32x2_t v50;
  float32x2_t v51;
  float32x4_t v52;
  float32x4_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v56 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)(a1 + 39936);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if (*(_BYTE *)(a1 + 40000))
  {
    sub_22392C904((uint64_t)a2, *(_QWORD *)(a1 + 39944));
    v9 = (int *)*v4;
    if (*v4)
    {
      do
      {
        *(_QWORD *)&v54 = sub_223919C2C((_QWORD *)(a1 + 40008), v9 + 4);
        *((_QWORD *)&v54 + 1) = v10;
        v11 = (std::__shared_weak_count *)operator new(0x198uLL);
        v11->__shared_owners_ = 0;
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        v11->__shared_weak_owners_ = 0;
        v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
        v13 = (uint64_t)&v11[1];
        sub_2241498F4((uint64_t)&v11[1], 0);
        v14 = a2[1];
        if (v14 >= a2[2])
        {
          v16 = sub_2239372F8(a2, &v54, v13, (uint64_t)v11);
        }
        else
        {
          v5.i32[3] = HIDWORD(v54);
          *(_OWORD *)v14 = v54;
          *(_QWORD *)(v14 + 16) = v13;
          *(_QWORD *)(v14 + 24) = v11;
          do
            v15 = __ldxr(p_shared_owners);
          while (__stxr(v15 + 1, p_shared_owners));
          *(_BYTE *)(v14 + 32) = 0;
          *(_BYTE *)(v14 + 96) = 0;
          *(_BYTE *)(v14 + 100) = 0;
          v16 = v14 + 120;
          *(_BYTE *)(v14 + 116) = 0;
        }
        a2[1] = v16;
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
        v9 = *(int **)v9;
      }
      while (v9);
    }
    *((_BYTE *)v4 + 64) = 0;
    v18 = *a2;
    v19 = a2[1];
    if (*a2 == v19)
      return;
LABEL_43:
    v35 = (float32x2_t *)((char *)v4 + 260);
    do
    {
      if (*(_BYTE *)(v18 + 96)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/OccupancyMapper.cpp", 2034, (uint64_t)"!tr_mesh_to_user_world_opt", 26, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      if (*(_BYTE *)(a1 + 233))
      {
        v36 = *(float32x2_t ***)(v18 + 16);
        v37 = *v36;
        v38 = v36[1];
        if (v37 != v38)
        {
          v5.i64[0] = *(uint64_t *)((char *)v4 + 212);
          v5.i32[2] = *((_DWORD *)v4 + 55);
          v6.i64[0] = *(uint64_t *)((char *)v4 + 228);
          v6.i32[2] = *((_DWORD *)v4 + 59);
          v7.i32[0] = *((_DWORD *)v4 + 63);
          v39.i64[0] = vzip1q_s32((int32x4_t)v5, (int32x4_t)v6).u64[0];
          *(float32x2_t *)v8.f32 = *v35;
          v8.i32[2] = *((_DWORD *)v4 + 67);
          v40 = (int8x16_t)vnegq_f32(v8);
          v41 = (int8x16_t)vtrn2q_s32((int32x4_t)v5, (int32x4_t)v6);
          v41.i32[2] = HIDWORD(*(unint64_t *)((char *)v4 + 244));
          v42 = vzip2q_s32((int32x4_t)v5, (int32x4_t)v6);
          *(float32x2_t *)v43.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v39.f32, *(float *)v40.i32), *(float32x2_t *)v41.i8, *v35, 1), *(float32x2_t *)v42.i8, v8, 2);
          v44 = (float32x4_t)v42;
          v44.i32[2] = v7.i32[0];
          v45 = (int8x16_t)vdupq_laneq_s32((int32x4_t)v44, 2);
          v46 = vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
          v47 = (float32x2_t)vextq_s8(v41, v45, 4uLL).u64[0];
          v43.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)((char *)v4 + 244), *(float32x2_t *)v40.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)((char *)v4 + 244), 1), *v35, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL), *(float32x2_t *)v7.f32).u32[0]);
          v39.i64[1] = *(uint64_t **)((char *)v4 + 244);
          v48.i32[3] = 0;
          v48.i32[0] = v46.i32[3];
          *(float32x2_t *)&v48.i32[1] = v47;
          v44.i64[1] = v45.u32[0];
          v5 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v39, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v48, *(float32x2_t *)(a1 + 40212), 1), v44, *(float32x4_t *)(a1 + 40212), 2), v43, *(float32x4_t *)(a1 + 40212), 3);
          v6 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v39, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v48, *(float32x2_t *)(a1 + 40228), 1), v44, *(float32x4_t *)(a1 + 40228), 2), v43, *(float32x4_t *)(a1 + 40228), 3);
          v49 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v39, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v48, *(float32x2_t *)(a1 + 40244), 1), v44, *(float32x4_t *)(a1 + 40244), 2), v43, *(float32x4_t *)(a1 + 40244), 3);
          v7 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v39, COERCE_FLOAT(*(_OWORD *)(a1 + 40260))), v48, *(float32x2_t *)(a1 + 40260), 1), v44, *(float32x4_t *)(a1 + 40260), 2), v43, *(float32x4_t *)(a1 + 40260), 3);
          v50 = (float32x2_t)vextq_s8(v5, v5, 8uLL).u64[0];
          v51 = (float32x2_t)vextq_s8(v6, v6, 8uLL).u64[0];
          v8 = (float32x4_t)vextq_s8(v49, v49, 8uLL);
          do
          {
            v47.i32[0] = v37[1].i32[0];
            *(float32x2_t *)v52.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v5.i8, COERCE_FLOAT(*v37)), *(float32x2_t *)v6.i8, *v37, 1), *(float32x2_t *)v49.i8, v47.f32[0]);
            *(float32x2_t *)&v52.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v50, *v37), v51, *v37, 1), v47, *(float32x2_t *)v8.f32);
            v53 = vaddq_f32(v52, v7);
            v37[1].i32[0] = v53.i32[2];
            *v37 = *(float32x2_t *)v53.f32;
            v37 = (float32x2_t *)((char *)v37 + 12);
          }
          while (v37 != v38);
        }
      }
      v18 += 120;
    }
    while (v18 != v19);
    return;
  }
  if (*(_BYTE *)(a1 + 40001))
  {
    sub_22392C904((uint64_t)a2, *(_QWORD *)(a1 + 39944));
    v20 = (int *)*v4;
    if (*v4)
    {
      do
      {
        *(_QWORD *)&v54 = sub_223919C2C((_QWORD *)(a1 + 40008), v20 + 4);
        *((_QWORD *)&v54 + 1) = v21;
        v22 = (std::__shared_weak_count *)operator new(0x198uLL);
        v22->__shared_owners_ = 0;
        v23 = (unint64_t *)&v22->__shared_owners_;
        v22->__shared_weak_owners_ = 0;
        v22->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
        v24 = (uint64_t)&v22[1];
        sub_223180698((uint64_t)&v22[1], (uint64_t)(v20 + 8));
        v25 = a2[1];
        if (v25 >= a2[2])
        {
          v27 = sub_2239372F8(a2, &v54, v24, (uint64_t)v22);
        }
        else
        {
          v5.i32[3] = HIDWORD(v54);
          *(_OWORD *)v25 = v54;
          *(_QWORD *)(v25 + 16) = v24;
          *(_QWORD *)(v25 + 24) = v22;
          do
            v26 = __ldxr(v23);
          while (__stxr(v26 + 1, v23));
          *(_BYTE *)(v25 + 32) = 0;
          *(_BYTE *)(v25 + 96) = 0;
          *(_BYTE *)(v25 + 100) = 0;
          v27 = v25 + 120;
          *(_BYTE *)(v25 + 116) = 0;
        }
        a2[1] = v27;
        do
          v28 = __ldaxr(v23);
        while (__stlxr(v28 - 1, v23));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
        v20 = *(int **)v20;
      }
      while (v20);
    }
    *((_BYTE *)v4 + 65) = 0;
    v18 = *a2;
    v19 = a2[1];
    if (*a2 != v19)
      goto LABEL_43;
  }
  else
  {
    sub_22392C11C((uint64_t *)&v54, (_QWORD *)a1);
    v29 = *a2;
    if (*a2)
    {
      v30 = a2[1];
      v31 = (void *)*a2;
      if (v30 != v29)
      {
        do
        {
          v32 = *(std::__shared_weak_count **)(v30 - 96);
          if (v32)
          {
            v33 = (unint64_t *)&v32->__shared_owners_;
            do
              v34 = __ldaxr(v33);
            while (__stlxr(v34 - 1, v33));
            if (!v34)
            {
              ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
              std::__shared_weak_count::__release_weak(v32);
            }
          }
          v30 -= 120;
        }
        while (v30 != v29);
        v31 = (void *)*a2;
      }
      a2[1] = v29;
      operator delete(v31);
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
    v5.i32[3] = HIDWORD(v54);
    *(_OWORD *)a2 = v54;
    a2[2] = v55;
    v18 = *a2;
    v19 = a2[1];
    if (*a2 != v19)
      goto LABEL_43;
  }
}

void sub_22392C824(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C838(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C84C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void **v9;

  sub_223167354((uint64_t)&a9);
  sub_223295868(v9);
  _Unwind_Resume(a1);
}

void sub_22392C8B4(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C8C8(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C8DC(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C8F0(_Unwind_Exception *a1)
{
  void **v1;

  sub_223295868(v1);
  _Unwind_Resume(a1);
}

void sub_22392C904(uint64_t a1, unint64_t a2)
{
  char *v2;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;

  v2 = *(char **)a1;
  if (0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a2)
  {
    if (a2 >= 0x222222222222223)
      sub_22316E078();
    v4 = *(_BYTE **)(a1 + 8);
    v5 = 120 * a2;
    v6 = (char *)operator new(120 * a2);
    v7 = &v6[v5];
    v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
    }
    else
    {
      v9 = 0;
      do
      {
        v11 = &v8[v9];
        v12 = &v4[v9];
        *(_OWORD *)(v11 - 120) = *(_OWORD *)&v4[v9 - 120];
        *(_OWORD *)(v11 - 104) = *(_OWORD *)&v4[v9 - 104];
        *((_QWORD *)v12 - 13) = 0;
        *((_QWORD *)v12 - 12) = 0;
        v8[v9 - 88] = 0;
        *(v11 - 24) = 0;
        if (v4[v9 - 24])
        {
          v13 = *(_OWORD *)(v12 - 88);
          v14 = *(_OWORD *)(v12 - 72);
          v15 = *(_OWORD *)(v12 - 40);
          *(_OWORD *)&v8[v9 - 56] = *(_OWORD *)(v12 - 56);
          *(_OWORD *)&v8[v9 - 40] = v15;
          *(_OWORD *)&v8[v9 - 88] = v13;
          *(_OWORD *)&v8[v9 - 72] = v14;
          *(v11 - 24) = 1;
        }
        v10 = *(_OWORD *)(v12 - 20);
        *(v11 - 4) = *(v12 - 4);
        *(_OWORD *)(v11 - 20) = v10;
        v9 -= 120;
      }
      while (&v4[v9] != v2);
      v2 = *(char **)a1;
      v16 = *(char **)(a1 + 8);
      *(_QWORD *)a1 = &v8[v9];
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      while (v16 != v2)
      {
        v17 = (std::__shared_weak_count *)*((_QWORD *)v16 - 12);
        if (v17)
        {
          p_shared_owners = (unint64_t *)&v17->__shared_owners_;
          do
            v19 = __ldaxr(p_shared_owners);
          while (__stlxr(v19 - 1, p_shared_owners));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
        v16 -= 120;
      }
    }
    if (v2)
      operator delete(v2);
  }
}

uint64_t sub_22392CA84@<X0>(std::chrono::duration<long long, std::ratio<1, 1000000>>::rep a1@<X0>, uint64_t *a2@<X8>)
{
  int8x16_t v4;
  int8x16_t v5;
  float32x4_t v6;
  float32x4_t v7;
  int8x16_t *i;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  int8x16_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char **v21;
  uint64_t v22;
  uint64_t (***v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v36;
  uint64_t v37;
  float32x2_t *v38;
  uint64_t v39;
  float32x2_t *v40;
  float32x2_t *v41;
  float32x4_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  int8x16_t v48;
  int32x4_t v49;
  float32x2_t v50;
  float32x4_t v51;
  int8x16_t v52;
  float32x2_t v53;
  float32x2_t v54;
  float32x4_t v55;
  float32x4_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  size_t v65;
  const char *v66;
  unsigned __int8 v67;
  uint64_t v68;
  unsigned __int8 v69;
  const char *v70;
  size_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  NSObject *v76;
  uint64_t v77;
  uint64_t v78;
  size_t v79;
  std::__shared_weak_count_vtbl *v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  char *v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  uint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  void *v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  const char **v128;
  uint64_t v129;
  uint64_t (***v130)();
  uint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  __int128 *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  const char *__src;
  int v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t (**rep)();
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v154;
  int v155;
  uint64_t (***v156)();
  uint64_t v157;
  const char *v158;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v159;
  std::__shared_weak_count *v160;
  const char **v161;
  _BYTE object[24];
  __int128 v163;
  void *__p[2];
  unint64_t v165;
  char v166;
  __int128 v167;
  std::__shared_weak_count *v168;
  char *v169;
  char *v170;
  uint64_t v171;

  v171 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 221)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/OccupancyMapper.cpp", 2050, (uint64_t)"config_.meshing.HasOccupancyAirMesh()", 37, (uint64_t)"Occupancy air mesh must be enabled to extract occupancy air mesh.", 65, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  kdebug_trace();
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if (!*(_BYTE *)(a1 + 40000))
  {
    if (*(_BYTE *)(a1 + 40001))
    {
      sub_22392C904((uint64_t)a2, *(_QWORD *)(a1 + 40096));
      v17 = *(uint64_t **)(a1 + 40088);
      if (!v17)
      {
LABEL_40:
        *(_BYTE *)(a1 + 40001) = 0;
        goto LABEL_41;
      }
      while (1)
      {
        sub_2241498F4((uint64_t)object, 0);
        v18 = v17[5];
        v152 = (uint64_t *)v17[4];
        rep = &off_24EC5CF08;
        v156 = &rep;
        v157 = v18;
        v154 = a1;
        v158 = (const char *)&off_24EC5CF08;
        v159 = a1;
        v161 = &v158;
        sub_22392DD88((uint64_t *)object, (uint64_t *)&v152, v19, v20);
        v21 = v161;
        if (v161 == &v158)
        {
          v21 = &v158;
          v22 = 4;
        }
        else
        {
          if (!v161)
            goto LABEL_26;
          v22 = 5;
        }
        (*(void (**)(void))&(*v21)[8 * v22])();
LABEL_26:
        v23 = v156;
        if (v156 == &rep)
        {
          v23 = &rep;
          v24 = 4;
          goto LABEL_30;
        }
        if (v156)
        {
          v24 = 5;
LABEL_30:
          (*v23)[v24]();
        }
        v25 = (std::__shared_weak_count *)operator new(0x198uLL);
        v25->__shared_owners_ = 0;
        p_shared_owners = (unint64_t *)&v25->__shared_owners_;
        v25->__shared_weak_owners_ = 0;
        v25->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
        v27 = (uint64_t)&v25[1];
        sub_22317FD80((uint64_t)&v25[1], (uint64_t)object);
        v152 = (uint64_t *)&v25[1];
        rep = (uint64_t (**)())v25;
        v28 = a2[1];
        if (v28 >= a2[2])
        {
          v30 = sub_2239372F8(a2, (_OWORD *)v17 + 1, v27, (uint64_t)v25);
        }
        else
        {
          *(_OWORD *)v28 = *((_OWORD *)v17 + 1);
          *(_QWORD *)(v28 + 16) = v27;
          *(_QWORD *)(v28 + 24) = v25;
          do
            v29 = __ldxr(p_shared_owners);
          while (__stxr(v29 + 1, p_shared_owners));
          *(_BYTE *)(v28 + 32) = 0;
          *(_BYTE *)(v28 + 96) = 0;
          *(_BYTE *)(v28 + 100) = 0;
          v30 = v28 + 120;
          *(_BYTE *)(v28 + 116) = 0;
        }
        a2[1] = v30;
        do
          v31 = __ldaxr(p_shared_owners);
        while (__stlxr(v31 - 1, p_shared_owners));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
        sub_22316F8F4((uint64_t *)object);
        v17 = (uint64_t *)*v17;
        if (!v17)
          goto LABEL_40;
      }
    }
    sub_22392C904((uint64_t)a2, *(_QWORD *)(a1 + 40128));
    v123 = *(_QWORD **)(a1 + 40112);
    if (v123 == (_QWORD *)(a1 + 40120))
      goto LABEL_41;
    while (1)
    {
      *(_QWORD *)object = (char *)v123 + 25;
      v124 = sub_22394FF60((uint64_t *)(a1 + 40072), (uint64_t)v123 + 25, (_OWORD **)object);
      sub_2241498F4((uint64_t)object, 0);
      v125 = v124[5];
      v152 = (uint64_t *)v124[4];
      rep = &off_24EC5CF08;
      v156 = &rep;
      v157 = v125;
      v154 = a1;
      v158 = (const char *)&off_24EC5CF08;
      v159 = a1;
      v161 = &v158;
      sub_22392DD88((uint64_t *)object, (uint64_t *)&v152, v126, v127);
      v128 = v161;
      if (v161 == &v158)
      {
        v128 = &v158;
        v129 = 4;
      }
      else
      {
        if (!v161)
          goto LABEL_191;
        v129 = 5;
      }
      (*(void (**)(void))&(*v128)[8 * v129])();
LABEL_191:
      v130 = v156;
      if (v156 == &rep)
      {
        v130 = &rep;
        v131 = 4;
      }
      else
      {
        if (!v156)
          goto LABEL_196;
        v131 = 5;
      }
      (*v130)[v131]();
LABEL_196:
      v132 = (std::__shared_weak_count *)operator new(0x198uLL);
      v132->__shared_owners_ = 0;
      v133 = (unint64_t *)&v132->__shared_owners_;
      v132->__shared_weak_owners_ = 0;
      v132->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
      v134 = (uint64_t)&v132[1];
      sub_22317FD80((uint64_t)&v132[1], (uint64_t)object);
      v152 = (uint64_t *)&v132[1];
      rep = (uint64_t (**)())v132;
      v135 = a2[1];
      if (v135 >= a2[2])
      {
        v137 = sub_2239372F8(a2, (_QWORD *)((char *)v123 + 25), v134, (uint64_t)v132);
      }
      else
      {
        *(_OWORD *)v135 = *(_OWORD *)((char *)v123 + 25);
        *(_QWORD *)(v135 + 16) = v134;
        *(_QWORD *)(v135 + 24) = v132;
        do
          v136 = __ldxr(v133);
        while (__stxr(v136 + 1, v133));
        *(_BYTE *)(v135 + 32) = 0;
        *(_BYTE *)(v135 + 96) = 0;
        *(_BYTE *)(v135 + 100) = 0;
        v137 = v135 + 120;
        *(_BYTE *)(v135 + 116) = 0;
      }
      a2[1] = v137;
      do
        v138 = __ldaxr(v133);
      while (__stlxr(v138 - 1, v133));
      if (v138)
      {
        sub_22316F8F4((uint64_t *)object);
        v139 = (_QWORD *)v123[1];
        if (v139)
          goto LABEL_207;
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
        std::__shared_weak_count::__release_weak(v132);
        sub_22316F8F4((uint64_t *)object);
        v139 = (_QWORD *)v123[1];
        if (v139)
        {
          do
          {
LABEL_207:
            v140 = v139;
            v139 = (_QWORD *)*v139;
          }
          while (v139);
          goto LABEL_185;
        }
      }
      do
      {
        v140 = (_QWORD *)v123[2];
        _ZF = *v140 == (_QWORD)v123;
        v123 = v140;
      }
      while (!_ZF);
LABEL_185:
      v123 = v140;
      if (v140 == (_QWORD *)(a1 + 40120))
        goto LABEL_41;
    }
  }
  sub_22392C904((uint64_t)a2, *(_QWORD *)(a1 + 40096));
  for (i = *(int8x16_t **)(a1 + 40088); i; i = (int8x16_t *)i->i64[0])
  {
    v9 = (std::__shared_weak_count *)operator new(0x198uLL);
    v9->__shared_owners_ = 0;
    v10 = (unint64_t *)&v9->__shared_owners_;
    v11 = i + 1;
    v9->__shared_weak_owners_ = 0;
    v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F0A0;
    v12 = (uint64_t)&v9[1];
    sub_2241498F4((uint64_t)&v9[1], 0);
    *(_QWORD *)object = v9 + 1;
    *(_QWORD *)&object[8] = v9;
    v13 = a2[1];
    if (v13 >= a2[2])
    {
      v15 = sub_2239372F8(a2, (int8x16_t *)i[1].i8, v12, (uint64_t)v9);
    }
    else
    {
      v4 = *v11;
      *(int8x16_t *)v13 = *v11;
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v9;
      do
        v14 = __ldxr(v10);
      while (__stxr(v14 + 1, v10));
      *(_BYTE *)(v13 + 32) = 0;
      *(_BYTE *)(v13 + 96) = 0;
      *(_BYTE *)(v13 + 100) = 0;
      v15 = v13 + 120;
      *(_BYTE *)(v13 + 116) = 0;
    }
    a2[1] = v15;
    do
      v16 = __ldaxr(v10);
    while (__stlxr(v16 - 1, v10));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_BYTE *)(a1 + 40000) = 0;
LABEL_41:
  __asm { FMOV            V0.2S, #1.0 }
  v149 = _D0;
  v150 = 1065353216;
  v36 = *a2;
  v37 = a2[1];
  if (*a2 != v37)
  {
    v38 = (float32x2_t *)(a1 + 40260);
    v145 = a2[1];
    while (1)
    {
      if (*(_BYTE *)(v36 + 96)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/src/OccupancyMapper.cpp", 2103, (uint64_t)"!tr_mesh_to_user_world_opt", 26, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v39 = *(_QWORD *)(v36 + 16);
      if (*(_QWORD *)(v39 + 112) != *(_QWORD *)(v39 + 120) || *(_QWORD *)v39 == *(_QWORD *)(v39 + 8))
      {
        if (*(_BYTE *)(a1 + 233))
        {
          v40 = *(float32x2_t **)v39;
          v41 = *(float32x2_t **)(v39 + 8);
          if (*(float32x2_t **)v39 != v41)
          {
            v4.i64[0] = *(_QWORD *)(a1 + 40148);
            v4.i32[2] = *(_DWORD *)(a1 + 40156);
            v5.i64[0] = *(_QWORD *)(a1 + 40164);
            v5.i32[2] = *(_DWORD *)(a1 + 40172);
            v6.i32[0] = *(_DWORD *)(a1 + 40188);
            v42.i64[0] = vzip1q_s32((int32x4_t)v4, (int32x4_t)v5).u64[0];
            v7.i64[0] = *(_QWORD *)(a1 + 40196);
            v7.i32[2] = *(_DWORD *)(a1 + 40204);
            v43 = (int8x16_t)vnegq_f32(v7);
            v44 = (int8x16_t)vtrn2q_s32((int32x4_t)v4, (int32x4_t)v5);
            v44.i32[2] = HIDWORD(*(_QWORD *)(a1 + 40180));
            v45 = vzip2q_s32((int32x4_t)v4, (int32x4_t)v5);
            *(float32x2_t *)v46.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v42.f32, *(float *)v43.i32), *(float32x2_t *)v44.i8, *(float32x2_t *)v7.f32, 1), *(float32x2_t *)v45.i8, v7, 2);
            v47 = (float32x4_t)v45;
            v47.i32[2] = v6.i32[0];
            v48 = (int8x16_t)vdupq_laneq_s32((int32x4_t)v47, 2);
            v49 = vdupq_lane_s32(*(int32x2_t *)v44.i8, 0);
            v50 = (float32x2_t)vextq_s8(v44, v48, 4uLL).u64[0];
            v46.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a1 + 40180), *(float32x2_t *)v43.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a1 + 40180), 1), *(float32x2_t *)v7.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v43, v43, 8uLL), *(float32x2_t *)v6.f32).u32[0]);
            v42.i64[1] = *(_QWORD *)(a1 + 40180);
            v51.i32[3] = 0;
            v51.i32[0] = v49.i32[3];
            *(float32x2_t *)&v51.i32[1] = v50;
            v47.i64[1] = v48.u32[0];
            v4 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v51, *(float32x2_t *)(a1 + 40212), 1), v47, *(float32x4_t *)(a1 + 40212), 2), v46, *(float32x4_t *)(a1 + 40212), 3);
            v5 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v51, *(float32x2_t *)(a1 + 40228), 1), v47, *(float32x4_t *)(a1 + 40228), 2), v46, *(float32x4_t *)(a1 + 40228), 3);
            v52 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v51, *(float32x2_t *)(a1 + 40244), 1), v47, *(float32x4_t *)(a1 + 40244), 2), v46, *(float32x4_t *)(a1 + 40244), 3);
            v6 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v42, COERCE_FLOAT(*(_OWORD *)v38->f32)), v51, *v38, 1), v47, *(float32x4_t *)v38->f32, 2), v46, *(float32x4_t *)v38->f32, 3);
            v53 = (float32x2_t)vextq_s8(v4, v4, 8uLL).u64[0];
            v54 = (float32x2_t)vextq_s8(v5, v5, 8uLL).u64[0];
            v7 = (float32x4_t)vextq_s8(v52, v52, 8uLL);
            do
            {
              v50.i32[0] = v40[1].i32[0];
              *(float32x2_t *)v55.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v4.i8, COERCE_FLOAT(*v40)), *(float32x2_t *)v5.i8, *v40, 1), *(float32x2_t *)v52.i8, v50.f32[0]);
              *(float32x2_t *)&v55.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v53, *v40), v54, *v40, 1), v50, *(float32x2_t *)v7.f32);
              v56 = vaddq_f32(v55, v6);
              v40[1].i32[0] = v56.i32[2];
              *v40 = *(float32x2_t *)v56.f32;
              v40 = (float32x2_t *)((char *)v40 + 12);
            }
            while (v40 != v41);
            v39 = *(_QWORD *)(v36 + 16);
          }
        }
        if ((*(_BYTE *)(a1 + 120) & 4) != 0)
        {
          v57 = *(_QWORD *)(v39 + 32);
          v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v39 + 8) - *(_QWORD *)v39) >> 2);
          v59 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(v39 + 40) - v57) >> 2);
          if (v58 <= v59)
          {
            if (v58 < v59)
              *(_QWORD *)(v39 + 40) = v57 + 4 * ((uint64_t)(*(_QWORD *)(v39 + 8) - *(_QWORD *)v39) >> 2);
          }
          else
          {
            sub_2235341F4(v39 + 32, v58 - v59, &v149);
            v39 = *(_QWORD *)(v36 + 16);
          }
          *(_DWORD *)(v39 + 64) = 1;
        }
        if (*(_QWORD *)(v39 + 112) != *(_QWORD *)(v39 + 120)
          && *(_DWORD *)(v39 + 352) == 1
          && *(_DWORD *)(a1 + 52) == 2)
        {
          sub_223CE8414(v39);
          v39 = *(_QWORD *)(v36 + 16);
        }
        v68 = *(_QWORD *)(v39 + 328) - *(_QWORD *)(v39 + 320);
        if (v68 >= 1)
          memset_pattern16(*(void **)(v39 + 320), &unk_224656670, 4 * (((unint64_t)v68 >> 2) - ((unint64_t)v68 > 3)) + 4);
        goto LABEL_45;
      }
      sub_223919B38(&v148);
      if (**(int **)(v148 + 56) <= 4)
      {
        v60 = *(unsigned __int8 *)(v148 + 72);
        v61 = sub_22322F254(v148, "OSLogSurrogateAppender", 1, 0);
        v62 = v61;
        _ZF = !v60 && v61 == 0;
        if (!_ZF)
          break;
      }
LABEL_44:
      sub_2241498F4((uint64_t)object, 0);
      sub_2237C2E74(*(uint64_t **)(v36 + 16), (uint64_t)object);
      sub_22316F8F4((uint64_t *)object);
LABEL_45:
      v36 += 120;
      if (v36 == v37)
        return kdebug_trace();
    }
    v147 = v60;
    v152 = &v148;
    rep = (uint64_t (**)())std::chrono::steady_clock::now().__d_.__rep_;
    v154 = std::chrono::system_clock::now().__d_.__rep_;
    v155 = 4;
    v156 = (uint64_t (***)())"unknown file";
    LODWORD(v157) = 2106;
    v158 = "unknown function";
    v159 = 0;
    v160 = 0;
    v64 = *v152;
    v144 = *v152;
    if (*(char *)(*v152 + 39) < 0)
    {
      v66 = *(const char **)(v64 + 16);
      v65 = *(_QWORD *)(v64 + 24);
      v143 = *v152 + 16;
      v69 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v69 & 1) != 0)
        goto LABEL_76;
    }
    else
    {
      v65 = *(unsigned __int8 *)(*v152 + 39);
      v66 = (const char *)(*v152 + 16);
      v143 = (uint64_t)v66;
      v67 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v67 & 1) != 0)
        goto LABEL_76;
    }
    if (__cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)&v167);
      sub_223199C58("com.apple.cv3d", (unint64_t)&v167, byte_255788F40);
      if ((_BYTE)v169 && SHIBYTE(v168) < 0)
        operator delete((void *)v167);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
      v37 = v145;
    }
LABEL_76:
    if (byte_255788F40[23] >= 0)
      v70 = byte_255788F40;
    else
      v70 = *(const char **)byte_255788F40;
    if (byte_255788F40[23] >= 0)
      v71 = byte_255788F40[23];
    else
      v71 = *(_QWORD *)&byte_255788F40[8];
    *(_QWORD *)object = os_log_create(v70, v66);
    if (v71 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    __src = v66;
    if (v71 >= 0x17)
    {
      v73 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v71 | 7) != 0x17)
        v73 = v71 | 7;
      v74 = v73 + 1;
      v72 = operator new(v73 + 1);
      *(_QWORD *)&object[16] = v71;
      *(_QWORD *)&v163 = v74 | 0x8000000000000000;
      *(_QWORD *)&object[8] = v72;
      v37 = v145;
    }
    else
    {
      BYTE7(v163) = v71;
      v72 = &object[8];
      if (!v71)
      {
LABEL_90:
        v72[v71] = 0;
        BYTE8(v163) = 1;
        if (v65 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v65 >= 0x17)
        {
          v77 = (v65 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v65 | 7) != 0x17)
            v77 = v65 | 7;
          v78 = v77 + 1;
          v75 = operator new(v77 + 1);
          __p[1] = (void *)v65;
          v165 = v78 | 0x8000000000000000;
          __p[0] = v75;
        }
        else
        {
          HIBYTE(v165) = v65;
          v75 = __p;
          if (!v65)
          {
            LOBYTE(__p[0]) = 0;
            v166 = 1;
            v76 = *(NSObject **)object;
            if ((SHIBYTE(v165) & 0x80000000) == 0)
              goto LABEL_94;
            goto LABEL_100;
          }
        }
        memmove(v75, __src, v65);
        *((_BYTE *)v75 + v65) = 0;
        v166 = 1;
        v76 = *(NSObject **)object;
        if ((SHIBYTE(v165) & 0x80000000) == 0)
        {
LABEL_94:
          if (!BYTE8(v163))
            goto LABEL_103;
          goto LABEL_101;
        }
LABEL_100:
        operator delete(__p[0]);
        if (!BYTE8(v163))
          goto LABEL_103;
LABEL_101:
        if (SBYTE7(v163) < 0)
          operator delete(*(void **)&object[8]);
LABEL_103:
        if (*(_QWORD *)object)
          os_release(*(void **)object);
        if (!v62 || !*(_QWORD *)(v62 + 24))
        {
          os_log_type_enabled(v76, OS_LOG_TYPE_ERROR);
          if (!v147)
          {
            *(_DWORD *)object = 136380675;
            *(_QWORD *)&object[4] = "Occupancy";
            LODWORD(v142) = 12;
            v141 = (__int128 *)object;
            v112 = (void *)_os_log_send_and_compose_impl();
            if (!v112)
            {
LABEL_168:
              sub_223182C08((uint64_t)&v152);
              v119 = v160;
              if (v160)
              {
                v120 = (unint64_t *)&v160->__shared_owners_;
                do
                  v121 = __ldaxr(v120);
                while (__stlxr(v121 - 1, v120));
                if (!v121)
                {
                  ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
                  std::__shared_weak_count::__release_weak(v119);
                }
              }
              v38 = (float32x2_t *)(a1 + 40260);
              goto LABEL_44;
            }
LABEL_167:
            free(v112);
            goto LABEL_168;
          }
          *(_DWORD *)object = 136380675;
          *(_QWORD *)&object[4] = "Occupancy";
          LODWORD(v142) = 12;
          v112 = (void *)_os_log_send_and_compose_impl();
          sub_22322C138((uint64_t)&v152, (char *)v112, object, v142);
          goto LABEL_165;
        }
        v79 = _os_log_pack_size();
        v80 = (std::__shared_weak_count_vtbl *)operator new(v79, (std::align_val_t)8uLL);
        v81 = (std::__shared_weak_count *)operator new();
        v81->__shared_owners_ = 0;
        v82 = (unint64_t *)&v81->__shared_owners_;
        v81->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
        v81->__shared_weak_owners_ = 0;
        v81[1].__vftable = v80;
        *(_QWORD *)&v167 = v80;
        *((_QWORD *)&v167 + 1) = v80;
        v168 = v81;
        v169 = 0;
        v170 = 0;
        v83 = (char *)operator new(0x38uLL);
        v84 = (std::__shared_weak_count *)v83;
        *((_QWORD *)v83 + 1) = 0;
        v85 = (unint64_t *)(v83 + 8);
        *((_QWORD *)v83 + 2) = 0;
        *(_QWORD *)v83 = &off_24EC1F9F8;
        *((_QWORD *)v83 + 3) = off_24EC1FA48;
        strcpy(v83 + 32, "Occupancy");
        v83[55] = 9;
        v169 = v83 + 24;
        v170 = v83;
        *(_QWORD *)object = v80;
        *(_QWORD *)&object[8] = v80;
        *(_QWORD *)&object[16] = v81;
        do
          v86 = __ldxr(v82);
        while (__stxr(v86 + 1, v82));
        *(_QWORD *)&v163 = v83 + 24;
        *((_QWORD *)&v163 + 1) = v83;
        do
          v87 = __ldxr(v85);
        while (__stxr(v87 + 1, v85));
        __p[0] = v83 + 24;
        do
          v88 = __ldaxr(v85);
        while (__stlxr(v88 - 1, v85));
        if (!v88)
        {
          (*(void (**)(char *))(*(_QWORD *)v83 + 16))(v83);
          std::__shared_weak_count::__release_weak(v84);
        }
        v89 = v168;
        if (v168)
        {
          v90 = (unint64_t *)&v168->__shared_owners_;
          do
            v91 = __ldaxr(v90);
          while (__stlxr(v91 - 1, v90));
          if (!v91)
          {
            ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
            std::__shared_weak_count::__release_weak(v89);
          }
        }
        v92 = *(_QWORD *)object;
        if (*((char *)__p[0] + 31) >= 0)
          v93 = (char *)__p[0] + 8;
        else
          v93 = (char *)*((_QWORD *)__p[0] + 1);
        v94 = _os_log_pack_fill();
        *(_DWORD *)v94 = 136380675;
        *(_QWORD *)(v94 + 4) = v93;
        v95 = operator new();
        v96 = *(unsigned __int8 *)(v144 + 39);
        v97 = v143;
        if ((v96 & 0x80u) != 0)
        {
          v97 = *(_QWORD *)(v144 + 16);
          v96 = *(_QWORD *)(v144 + 24);
        }
        *(_QWORD *)v95 = v92;
        *(_OWORD *)(v95 + 8) = *(_OWORD *)&object[8];
        *(_QWORD *)&object[8] = 0;
        *(_QWORD *)&object[16] = 0;
        *(_OWORD *)(v95 + 24) = v163;
        v163 = 0uLL;
        *(_QWORD *)(v95 + 40) = v97;
        *(_QWORD *)(v95 + 48) = v96;
        *(_BYTE *)(v95 + 56) = 16;
        v151 = 0;
        *(_QWORD *)&v167 = v95;
        (*(void (**)(_QWORD, __int128 *))(**(_QWORD **)(v62 + 24) + 40))(*(_QWORD *)(v62 + 24), &v167);
        v37 = v145;
        v98 = v167;
        *(_QWORD *)&v167 = 0;
        if (v98)
        {
          v99 = *(std::__shared_weak_count **)(v98 + 32);
          if (v99)
          {
            v100 = (unint64_t *)&v99->__shared_owners_;
            do
              v101 = __ldaxr(v100);
            while (__stlxr(v101 - 1, v100));
            if (!v101)
            {
              ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
              std::__shared_weak_count::__release_weak(v99);
            }
          }
          v102 = *(std::__shared_weak_count **)(v98 + 16);
          if (v102)
          {
            v103 = (unint64_t *)&v102->__shared_owners_;
            do
              v104 = __ldaxr(v103);
            while (__stlxr(v104 - 1, v103));
            if (!v104)
            {
              ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
              std::__shared_weak_count::__release_weak(v102);
            }
          }
          MEMORY[0x227684CE8](v98, 0x10F0C40B62ED6C6);
          v105 = v151;
          v151 = 0;
          if (v105)
          {
            v106 = *(std::__shared_weak_count **)(v105 + 32);
            if (v106)
            {
              v107 = (unint64_t *)&v106->__shared_owners_;
              do
                v108 = __ldaxr(v107);
              while (__stlxr(v108 - 1, v107));
              if (!v108)
              {
                ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
                std::__shared_weak_count::__release_weak(v106);
              }
            }
            v109 = *(std::__shared_weak_count **)(v105 + 16);
            if (v109)
            {
              v110 = (unint64_t *)&v109->__shared_owners_;
              do
                v111 = __ldaxr(v110);
              while (__stlxr(v111 - 1, v110));
              if (!v111)
              {
                ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
                std::__shared_weak_count::__release_weak(v109);
              }
            }
            MEMORY[0x227684CE8](v105, 0x10F0C40B62ED6C6);
          }
        }
        if (v147)
        {
          LODWORD(v167) = 136380675;
          *(_QWORD *)((char *)&v167 + 4) = "Occupancy";
          LODWORD(v142) = 12;
          v141 = &v167;
          v112 = (void *)_os_log_send_and_compose_impl();
          v113 = (std::__shared_weak_count *)*((_QWORD *)&v163 + 1);
          if (!*((_QWORD *)&v163 + 1))
            goto LABEL_159;
        }
        else
        {
          v112 = 0;
          v113 = (std::__shared_weak_count *)*((_QWORD *)&v163 + 1);
          if (!*((_QWORD *)&v163 + 1))
            goto LABEL_159;
        }
        v114 = (unint64_t *)&v113->__shared_owners_;
        do
          v115 = __ldaxr(v114);
        while (__stlxr(v115 - 1, v114));
        if (!v115)
        {
          ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
          std::__shared_weak_count::__release_weak(v113);
          v116 = *(std::__shared_weak_count **)&object[16];
          if (!*(_QWORD *)&object[16])
            goto LABEL_163;
          goto LABEL_160;
        }
LABEL_159:
        v116 = *(std::__shared_weak_count **)&object[16];
        if (!*(_QWORD *)&object[16])
          goto LABEL_163;
LABEL_160:
        v117 = (unint64_t *)&v116->__shared_owners_;
        do
          v118 = __ldaxr(v117);
        while (__stlxr(v118 - 1, v117));
        if (!v118)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
          if (!v147)
          {
LABEL_166:
            if (!v112)
              goto LABEL_168;
            goto LABEL_167;
          }
          goto LABEL_164;
        }
LABEL_163:
        if (!v147)
          goto LABEL_166;
LABEL_164:
        sub_22322C138((uint64_t)&v152, (char *)v112, v141, v142);
LABEL_165:
        sub_223182C08((uint64_t)&v152);
        goto LABEL_166;
      }
    }
    memmove(v72, v70, v71);
    goto LABEL_90;
  }
  return kdebug_trace();
}

void sub_22392DBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *object,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49)
{
  void **v49;
  uint64_t v50;

  if (*(_BYTE *)(v50 - 120))
  {
    if (*(char *)(v50 - 121) < 0)
      operator delete(*(void **)(v50 - 144));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&a30);
  sub_223295868(v49);
  _Unwind_Resume(a1);
}

unint64_t sub_22392DD88(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t i;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  _QWORD *v29;
  unint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[24];
  _BYTE *v47;
  uint64_t v48;
  _BYTE v49[24];
  _BYTE *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v7 = *a1;
  v6 = a1[1];
  v9 = a1[40];
  v8 = a1[41];
  v10 = a1[4];
  v37 = (uint64_t)(a1 + 4);
  v11 = a1[5];
  v36 = (uint64_t)(a1 + 9);
  v12 = a1[10];
  v35 = (uint64_t)(a1 + 30);
  v39 = a1[31];
  v40 = a1[9];
  v38 = a1[14];
  v34 = (uint64_t)(a1 + 14);
  v13 = a1[15];
  v42 = a1[30];
  v43 = a1[36];
  v41 = a1[35];
  v48 = *a2;
  v14 = (uint64_t *)a2[4];
  if (v14)
  {
    if (v14 == a2 + 1)
    {
      v50 = v49;
      (*(void (**)(uint64_t *))(*v14 + 24))(v14);
    }
    else
    {
      v50 = (_BYTE *)(*(uint64_t (**)(uint64_t *))(*v14 + 16))(v14);
    }
  }
  else
  {
    v50 = 0;
  }
  v44 = a2[5];
  v15 = a2[9];
  if (!v15)
    goto LABEL_9;
  if ((uint64_t *)v15 != a2 + 6)
  {
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 16))(v15);
LABEL_9:
    v47 = (_BYTE *)v15;
    goto LABEL_11;
  }
  v47 = v46;
  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 24))(v15);
LABEL_11:
  v16 = 0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 2);
  v17 = (v8 - v9) >> 2;
  v18 = 0xAAAAAAAAAAAAAAABLL * ((v11 - v10) >> 2);
  v19 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v40) >> 2);
  LODWORD(v12) = v39 - v42;
  v20 = 0xAAAAAAAAAAAAAAABLL * ((v13 - v38) >> 2);
  LODWORD(v13) = v43 - v41;
  for (i = v48; i != v44; v48 = i)
  {
    if (!v50)
      sub_223198474();
    v22 = (_QWORD *)(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v50 + 48))(v50);
    v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22[1] - *v22) >> 2) + v16;
    v17 = ((uint64_t)(v22[41] - v22[40]) >> 2) + v17;
    v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22[5] - v22[4]) >> 2) + v18;
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22[10] - v22[9]) >> 2) + v19;
    v12 = v22[31] + v12 - v22[30];
    v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22[15] - v22[14]) >> 2) + v20;
    v13 = v22[36] + v13 - v22[35];
    i = v48 + 12;
  }
  v23 = v46;
  if (v47 == v46)
  {
    v24 = 4;
  }
  else
  {
    if (!v47)
      goto LABEL_19;
    v24 = 5;
    v23 = v47;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v23 + 8 * v24))(v23, i, a3, a4);
LABEL_19:
  v25 = v49;
  if (v50 == v49)
  {
    v26 = 4;
  }
  else
  {
    if (!v50)
      goto LABEL_24;
    v26 = 5;
    v25 = v50;
  }
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*v25 + 8 * v26))(v25, i, a3, a4);
LABEL_24:
  sub_22339E3C8((uint64_t)a1, v16);
  sub_223674C80((uint64_t)(a1 + 40), v17);
  sub_22339E3C8(v37, v18);
  sub_22339E3C8(v36, v19);
  sub_223674E10(v35, v12);
  sub_22339E528(v34, v20);
  sub_223674E10((uint64_t)(a1 + 35), v13);
  v48 = *a2;
  v27 = v49;
  v28 = (uint64_t *)a2[4];
  if (v28)
  {
    if (v28 == a2 + 1)
    {
      v50 = v49;
      (*(void (**)(uint64_t *, _BYTE *))(a2[1] + 24))(a2 + 1, v49);
    }
    else
    {
      v50 = (_BYTE *)(*(uint64_t (**)(uint64_t *))(*v28 + 16))(v28);
    }
  }
  else
  {
    v50 = 0;
  }
  v45 = a2[5];
  v29 = v46;
  result = a2[9];
  if (!result)
  {
LABEL_32:
    v47 = (_BYTE *)result;
    if (v48 == v45)
      goto LABEL_37;
    goto LABEL_35;
  }
  if ((uint64_t *)result != a2 + 6)
  {
    result = (*(uint64_t (**)(unint64_t))(*(_QWORD *)result + 16))(result);
    goto LABEL_32;
  }
  v47 = v46;
  result = (*(uint64_t (**)(uint64_t *, _BYTE *))(a2[6] + 24))(a2 + 6, v46);
  if (v48 == v45)
    goto LABEL_37;
  do
  {
LABEL_35:
    if (!v50)
      sub_223198474();
    v31 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v50 + 48))(v50);
    result = sub_22414E9E0((uint64_t)a1, v31);
    v48 += 12;
  }
  while (v48 != v45);
LABEL_37:
  if (v47 == v46)
  {
    v32 = 4;
  }
  else
  {
    if (!v47)
      goto LABEL_42;
    v32 = 5;
    v29 = v47;
  }
  result = (*(uint64_t (**)(_QWORD *))(*v29 + 8 * v32))(v29);
LABEL_42:
  if (v50 == v49)
  {
    v33 = 4;
  }
  else
  {
    if (!v50)
      return result;
    v33 = 5;
    v27 = v50;
  }
  return (*(uint64_t (**)(_QWORD *))(*v27 + 8 * v33))(v27);
}

void sub_22392E238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  if (a30 == v30)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v30 + 32))(v30);
    _Unwind_Resume(exception_object);
  }
  if (!a30)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a30 + 40))(a30);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_22392E364@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  int32x4_t v5;
  int32x4_t v6;
  float32x4_t v7;
  float32x2_t v8;
  float32x2_t *v9;
  float32x2_t *v10;
  float32x4_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int32x4_t v15;
  float32x4_t v16;
  uint64_t v17;
  float32x4_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int8x16_t v21;
  float32x4_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  std::mutex *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v38;
  std::string::size_type v39;
  int v40;
  std::string __p;
  float32x2_t *v45;
  float32x2_t *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  int v50[8];
  char v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 39936;
  sub_2241498F4((uint64_t)&v45, 0);
  *(_QWORD *)&v48 = *(_QWORD *)v4;
  *(_QWORD *)&v49 = 0;
  sub_22392E874(&v45, (uint64_t)&v48);
  if (*(_BYTE *)(a1 + 233))
  {
    v9 = v45;
    v10 = v46;
    if (v45 != v46)
    {
      v5.i64[0] = *(_QWORD *)(v4 + 212);
      v5.i32[2] = *(_DWORD *)(v4 + 220);
      v6.i64[0] = *(_QWORD *)(v4 + 228);
      v6.i32[2] = *(_DWORD *)(v4 + 236);
      v11 = (float32x4_t)vzip1q_s32(v5, v6);
      v12 = (int8x16_t)v11;
      v12.i32[2] = *(_QWORD *)(v4 + 244);
      v7.i64[0] = *(_QWORD *)(v4 + 260);
      v7.i32[2] = *(_DWORD *)(v4 + 268);
      v13 = (int8x16_t)vnegq_f32(v7);
      v14 = (int8x16_t)vtrn2q_s32(v5, v6);
      v14.i32[2] = HIDWORD(*(_QWORD *)(v4 + 244));
      v8.i32[0] = *(_DWORD *)(v4 + 252);
      v15 = vzip2q_s32(v5, v6);
      *(float32x2_t *)v11.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v11.f32, *(float *)v13.i32), *(float32x2_t *)v14.i8, *(float32x2_t *)v7.f32, 1), *(float32x2_t *)v15.i8, v7, 2);
      v16 = (float32x4_t)v15;
      v16.i32[2] = v8.i32[0];
      v11.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v4 + 244), *(float32x2_t *)v13.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v4 + 244), 1), *(float32x2_t *)v7.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL), v8).u32[0]);
      v17 = vextq_s8(v14, v12, 4uLL).u64[0];
      v12.i32[3] = 0;
      v18.i32[3] = 0;
      v18.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v14, 0).i32[3];
      *(uint64_t *)((char *)v18.i64 + 4) = v17;
      v16.i64[1] = vdupq_laneq_s32((int32x4_t)v16, 2).u32[0];
      v19 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v18, *(float32x2_t *)(a1 + 40212), 1), v16, *(float32x4_t *)(a1 + 40212), 2), v11, *(float32x4_t *)(a1 + 40212), 3);
      v20 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v18, *(float32x2_t *)(a1 + 40228), 1), v16, *(float32x4_t *)(a1 + 40228), 2), v11, *(float32x4_t *)(a1 + 40228), 3);
      v21 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v18, *(float32x2_t *)(a1 + 40244), 1), v16, *(float32x4_t *)(a1 + 40244), 2), v11, *(float32x4_t *)(a1 + 40244), 3);
      v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40260))), v18, *(float32x2_t *)(a1 + 40260), 1), v16, *(float32x4_t *)(a1 + 40260), 2), v11, *(float32x4_t *)(a1 + 40260), 3);
      v23 = (float32x2_t)vextq_s8(v19, v19, 8uLL).u64[0];
      v24 = (float32x2_t)vextq_s8(v20, v20, 8uLL).u64[0];
      v25 = (float32x2_t)vextq_s8(v21, v21, 8uLL).u64[0];
      do
      {
        v8.i32[0] = v9[1].i32[0];
        *(float32x2_t *)v26.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v19.i8, COERCE_FLOAT(*v9)), *(float32x2_t *)v20.i8, *v9, 1), *(float32x2_t *)v21.i8, v8.f32[0]);
        *(float32x2_t *)&v26.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v23, *v9), v24, *v9, 1), v8, v25);
        v27 = vaddq_f32(v26, v22);
        v9[1].i32[0] = v27.i32[2];
        *v9 = *(float32x2_t *)v27.f32;
        v9 = (float32x2_t *)((char *)v9 + 12);
      }
      while (v9 != v10);
    }
  }
  *(_QWORD *)&v48 = "cv3d.recon.";
  *((_QWORD *)&v48 + 1) = 11;
  *(_QWORD *)&v49 = "Occupancy.GlobalMesh";
  *((_QWORD *)&v49 + 1) = 20;
  sub_2231A9820((uint64_t)&v48, (uint64_t)v50, 0, 0, &__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v28 = sub_2241471F8();
    v29 = v28[2];
    if (!v29)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v29 = v28[2];
    }
    v30 = *(_QWORD *)(v29 + 64);
    v31 = (std::mutex *)(v30 + 32);
    std::mutex::lock((std::mutex *)(v30 + 32));
    v33 = *(_QWORD *)(v30 + 96);
    v32 = *(_QWORD *)(v30 + 104);
    std::mutex::unlock(v31);
    if (v33 != v32)
    {
      sub_2241471F8();
      v34 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v34 + 24))(v34))
      {
        v48 = 0u;
        v49 = 0u;
        v50[0] = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v34 + 24))(v34))
        {
          *(_QWORD *)&v47 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v47 + 1) = 2;
          v35 = sub_2241471F8();
          sub_223917190((uint64_t)v35, v34, (uint64_t)&v45, (uint64_t)&unk_2245C9EFE, &v47);
        }
        kdebug_trace();
      }
    }
  }
  v48 = 0u;
  v49 = 0u;
  v50[0] = 728325624;
  kdebug_trace();
  size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = __p.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v38 = p_p->__r_.__value_.__r.__words[0];
    v39 = p_p->__r_.__value_.__l.__size_;
    v40 = p_p->__r_.__value_.__s.__data_[16];
    if (v38 == 0x6365722E64337663 && v39 == 0x73746174532E6E6FLL && v40 == 46)
      sub_223187510();
  }
  kdebug_trace();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  LOBYTE(v48) = 0;
  v51 = 0;
  sub_223AC98B4((uint64_t)&v45, (_QWORD *)(a1 + 40008), &v48, a2);
  return sub_22316F8F4((uint64_t *)&v45);
}

void sub_22392E80C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22392E874(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22[30];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 2);
  v3 = (uint64_t)(a1[41] - a1[40]) >> 2;
  v18 = (uint64_t)(a1 + 4);
  v19 = (uint64_t)(a1 + 40);
  v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[5] - a1[4]) >> 2);
  v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[10] - a1[9]) >> 2);
  v16 = (uint64_t)(a1 + 30);
  v17 = (uint64_t)(a1 + 9);
  v6 = a1[31] - a1[30];
  v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[15] - a1[14]) >> 2);
  v14 = (uint64_t)(a1 + 35);
  v15 = (uint64_t)(a1 + 14);
  v8 = a1[36] - a1[35];
  v9 = *(_QWORD **)a2;
  v10 = *(_QWORD **)(a2 + 16);
  if (*(_QWORD **)a2 != v10)
  {
    do
    {
      sub_223180698((uint64_t)v22, (uint64_t)(v9 + 4));
      v2 = 0xAAAAAAAAAAAAAAABLL * ((v22[1] - v22[0]) >> 2) + v2;
      v3 = ((v28 - v27) >> 2) + v3;
      v4 = 0xAAAAAAAAAAAAAAABLL * ((v22[5] - v22[4]) >> 2) + v4;
      v5 = 0xAAAAAAAAAAAAAAABLL * ((v22[10] - v22[9]) >> 2) + v5;
      LODWORD(v6) = v24 + v6 - v23;
      v7 = 0xAAAAAAAAAAAAAAABLL * ((v22[15] - v22[14]) >> 2) + v7;
      LODWORD(v8) = v26 + v8 - v25;
      sub_22316F8F4(v22);
      v9 = (_QWORD *)*v9;
    }
    while (v9 != v10);
  }
  sub_22339E3C8((uint64_t)a1, v2);
  sub_223674C80(v19, v3);
  sub_22339E3C8(v18, v4);
  sub_22339E3C8(v17, v5);
  sub_223674E10(v16, v6);
  sub_22339E528(v15, v7);
  result = sub_223674E10(v14, v8);
  v12 = *(_QWORD **)a2;
  v13 = *(_QWORD **)(a2 + 16);
  if (*(_QWORD **)a2 != v13)
  {
    do
    {
      sub_223180698((uint64_t)v22, (uint64_t)(v12 + 4));
      sub_22414E9E0((uint64_t)a1, (uint64_t)v22);
      result = (uint64_t)sub_22316F8F4(v22);
      v12 = (_QWORD *)*v12;
    }
    while (v12 != v13);
  }
  return result;
}

void sub_22392EA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_22316F8F4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_22392EAA4@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  int32x4_t v4;
  int32x4_t v5;
  float32x4_t v6;
  float32x2_t v7;
  float32x2_t *v8;
  float32x2_t *v9;
  float32x4_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int32x4_t v14;
  float32x4_t v15;
  uint64_t v16;
  float32x4_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  float32x4_t v21;
  float32x2_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32x4_t v25;
  float32x4_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  std::mutex *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  std::string::size_type size;
  std::string *p_p;
  std::string::size_type v37;
  std::string::size_type v38;
  int v39;
  std::string __p;
  float32x2_t *v43;
  float32x2_t *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int v48[8];
  char v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  if (*((_BYTE *)result + 297))
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    v3 = result;
    sub_223CFBFA4((uint64_t)(result + 38), (uint64_t)&v43);
    if (*((_BYTE *)v3 + 233))
    {
      v8 = v43;
      v9 = v44;
      if (v43 != v44)
      {
        v4.i64[0] = *(uint64_t *)((char *)v3 + 40148);
        v4.i32[2] = *((_DWORD *)v3 + 10039);
        v5.i64[0] = *(uint64_t *)((char *)v3 + 40164);
        v5.i32[2] = *((_DWORD *)v3 + 10043);
        v10 = (float32x4_t)vzip1q_s32(v4, v5);
        v11 = (int8x16_t)v10;
        v11.i32[2] = *(uint64_t *)((char *)v3 + 40180);
        v6.i64[0] = *(uint64_t *)((char *)v3 + 40196);
        v6.i32[2] = *((_DWORD *)v3 + 10051);
        v12 = (int8x16_t)vnegq_f32(v6);
        v13 = (int8x16_t)vtrn2q_s32(v4, v5);
        v13.i32[2] = HIDWORD(*(unint64_t *)((char *)v3 + 40180));
        v7.i32[0] = *((_DWORD *)v3 + 10047);
        v14 = vzip2q_s32(v4, v5);
        *(float32x2_t *)v10.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v10.f32, *(float *)v12.i32), *(float32x2_t *)v13.i8, *(float32x2_t *)v6.f32, 1), *(float32x2_t *)v14.i8, v6, 2);
        v15 = (float32x4_t)v14;
        v15.i32[2] = v7.i32[0];
        v10.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)((char *)v3 + 40180), *(float32x2_t *)v12.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)((char *)v3 + 40180), 1), *(float32x2_t *)v6.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL), v7).u32[0]);
        v16 = vextq_s8(v13, v11, 4uLL).u64[0];
        v11.i32[3] = 0;
        v17.i32[3] = 0;
        v17.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v13, 0).i32[3];
        *(uint64_t *)((char *)v17.i64 + 4) = v16;
        v15.i64[1] = vdupq_laneq_s32((int32x4_t)v15, 2).u32[0];
        v18 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v11, COERCE_FLOAT(*(_OWORD *)((char *)v3 + 40212))), v17, *(float32x2_t *)((char *)v3 + 40212), 1), v15, *(float32x4_t *)((char *)v3 + 40212), 2), v10, *(float32x4_t *)((char *)v3 + 40212), 3);
        v19 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v11, COERCE_FLOAT(*(_OWORD *)((char *)v3 + 40228))), v17, *(float32x2_t *)((char *)v3 + 40228), 1), v15, *(float32x4_t *)((char *)v3 + 40228), 2), v10, *(float32x4_t *)((char *)v3 + 40228), 3);
        v20 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v11, COERCE_FLOAT(*(_OWORD *)((char *)v3 + 40244))), v17, *(float32x2_t *)((char *)v3 + 40244), 1), v15, *(float32x4_t *)((char *)v3 + 40244), 2), v10, *(float32x4_t *)((char *)v3 + 40244), 3);
        v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v11, COERCE_FLOAT(*(_OWORD *)((char *)v3 + 40260))), v17, *(float32x2_t *)((char *)v3 + 40260), 1), v15, *(float32x4_t *)((char *)v3 + 40260), 2), v10, *(float32x4_t *)((char *)v3 + 40260), 3);
        v22 = (float32x2_t)vextq_s8(v18, v18, 8uLL).u64[0];
        v23 = (float32x2_t)vextq_s8(v19, v19, 8uLL).u64[0];
        v24 = (float32x2_t)vextq_s8(v20, v20, 8uLL).u64[0];
        do
        {
          v7.i32[0] = v8[1].i32[0];
          *(float32x2_t *)v25.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v18.i8, COERCE_FLOAT(*v8)), *(float32x2_t *)v19.i8, *v8, 1), *(float32x2_t *)v20.i8, v7.f32[0]);
          *(float32x2_t *)&v25.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v22, *v8), v23, *v8, 1), v7, v24);
          v26 = vaddq_f32(v25, v21);
          v8[1].i32[0] = v26.i32[2];
          *v8 = *(float32x2_t *)v26.f32;
          v8 = (float32x2_t *)((char *)v8 + 12);
        }
        while (v8 != v9);
      }
    }
    *(_QWORD *)&v46 = "cv3d.recon.";
    *((_QWORD *)&v46 + 1) = 11;
    *(_QWORD *)&v47 = "Occupancy.BlockMesh";
    *((_QWORD *)&v47 + 1) = 19;
    sub_2231A9820((uint64_t)&v46, (uint64_t)v48, 0, 0, &__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v27 = sub_2241471F8();
      v28 = v27[2];
      if (!v28)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v28 = v27[2];
      }
      v29 = *(_QWORD *)(v28 + 64);
      v30 = (std::mutex *)(v29 + 32);
      std::mutex::lock((std::mutex *)(v29 + 32));
      v32 = *(_QWORD *)(v29 + 96);
      v31 = *(_QWORD *)(v29 + 104);
      std::mutex::unlock(v30);
      if (v32 != v31)
      {
        sub_2241471F8();
        v33 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33))
        {
          v46 = 0u;
          v47 = 0u;
          v48[0] = 728325608;
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33))
          {
            *(_QWORD *)&v45 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v45 + 1) = 2;
            v34 = sub_2241471F8();
            sub_223917190((uint64_t)v34, v33, (uint64_t)&v43, (uint64_t)&unk_2245C9EFE, &v45);
          }
          kdebug_trace();
        }
      }
    }
    v46 = 0u;
    v47 = 0u;
    v48[0] = 728325624;
    kdebug_trace();
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = __p.__r_.__value_.__l.__size_;
    if (size >= 0x11)
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      v37 = p_p->__r_.__value_.__r.__words[0];
      v38 = p_p->__r_.__value_.__l.__size_;
      v39 = p_p->__r_.__value_.__s.__data_[16];
      if (v37 == 0x6365722E64337663 && v38 == 0x73746174532E6E6FLL && v39 == 46)
        sub_223187510();
    }
    kdebug_trace();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    LOBYTE(v46) = 0;
    v49 = 0;
    sub_223AC98B4((uint64_t)&v43, v3 + 5001, &v46, a2);
    return sub_22316F8F4((uint64_t *)&v43);
  }
  return result;
}

void sub_22392EF44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22392EFC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, int32x4_t a5@<Q0>, int32x4_t a6@<Q2>, float32x2_t a7@<D3>, float32x4_t a8@<Q6>)
{
  _QWORD *v10;
  int32x2_t *v11;
  float32x4_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  int8x16_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  int32x4_t v22;
  int8x16_t v23;
  float32x4_t v24;
  float32x2_t v25;
  int8x16_t v26;
  int v27;
  float32x4_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  std::mutex *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  float32x2_t v36;
  float32x2_t v37;
  float32x2_t v38;
  float32x2_t v39;
  float32x4_t v40;
  int8x16_t v41;
  float32x4_t v42;
  float32x2_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  unint64_t v51;
  __int128 *p_p;
  uint64_t v53;
  uint64_t v54;
  int v55;
  BOOL v56;
  float32x2_t v58;
  float32x2_t v59;
  float32x2_t v60;
  float32x2_t v61;
  float32x4_t v62;
  int8x16_t v63;
  float32x4_t v64;
  float32x2_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  BOOL v73;
  BOOL v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  std::mutex *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  unint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  __n128 *v90;
  _BYTE *v91;
  size_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t *v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float v118;
  BOOL v119;
  double v121;
  float32x4_t v122;
  float32x4_t v123;
  double v124;
  float32x4_t v125;
  float32x2_t v126;
  float32x4_t v127;
  float32x2_t v128;
  uint64_t v129;
  float32x2_t *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  std::mutex *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  unint64_t v140;
  __int128 *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  __n128 *v147;
  __int128 *v148;
  size_t v149;
  unsigned __int8 v150;
  float v151;
  unsigned __int8 v152;
  double v153;
  double v154;
  std::__shared_weak_count *v155;
  unint64_t *v156;
  unint64_t v157;
  unsigned __int8 v158;
  unsigned __int8 v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  std::__shared_weak_count *v163;
  unint64_t *v164;
  unint64_t v165;
  uint64_t v166;
  float32x4_t v167;
  float32x4_t v168;
  float v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  void *v186;
  void *v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  uint64_t v196;
  void *v197;
  void *v198;
  uint64_t v199;
  void *v200;
  int v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  std::mutex *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  double v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  unsigned __int8 v215;
  __int8 v216;
  _BYTE *v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  std::string::size_type size;
  std::string *v222;
  std::string::size_type v223;
  std::string::size_type v224;
  int v225;
  __n128 *v228;
  std::string *v229;
  size_t v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  std::mutex *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  _BYTE *v239;
  uint64_t v240;
  uint64_t v241;
  int v242;
  __n128 *v245;
  _BYTE *v246;
  size_t v247;
  uint64_t v248;
  unsigned __int8 v249;
  double v250;
  unsigned __int8 v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t v254;
  std::mutex *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  double v260;
  float v261;
  float v262;
  uint64_t *v263;
  uint64_t v264;
  std::__shared_weak_count *v265;
  unint64_t *p_shared_owners;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t *v270;
  unint64_t v271;
  unint64_t *v272;
  unint64_t v273;
  std::__shared_weak_count *v274;
  unint64_t *v275;
  unint64_t v276;
  unint64_t *v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  void *v281;
  std::__shared_weak_count *v282;
  unint64_t *v283;
  unint64_t v284;
  int v285;
  unsigned int v286;
  BOOL v287;
  float32x4_t v288;
  _QWORD *v289;
  int v290;
  _QWORD *v291;
  _QWORD *v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t v295;
  std::mutex *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  _BYTE *v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  __n128 *v307;
  _BYTE *v308;
  size_t v309;
  uint64_t *v310;
  uint64_t v311;
  uint64_t v312;
  std::mutex *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  float32x4_t v318;
  float32x4_t v319;
  uint64_t v320;
  uint64_t v321;
  float32x4_t v322;
  float32x4_t v323;
  float32x4_t v324;
  unint64_t v325;
  __int128 *v326;
  uint64_t v327;
  uint64_t v328;
  int v329;
  uint64_t v332;
  float32x4_t v333;
  float32x4_t v334;
  uint64_t v335;
  uint64_t v336;
  float32x4_t v337;
  float32x4_t v338;
  float32x4_t v339;
  _BYTE *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  std::__shared_weak_count *v346;
  unint64_t *v347;
  unint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t i;
  unint64_t v353;
  unint64_t v354;
  unint64_t v355;
  unint64_t v356;
  unint64_t v357;
  unint64_t v358;
  float32x4_t v359;
  uint64_t *v360;
  int8x16_t v361;
  float32x2_t *v362;
  float32x4_t v363;
  uint64_t v364;
  _QWORD *v367;
  float32x4_t v368;
  uint64_t v369;
  std::string v370;
  _QWORD v371[2];
  char v372;
  float v373;
  BOOL v374;
  void *v375[2];
  float32x4_t v376;
  float32x4_t v377;
  float32x4_t v378;
  _BYTE info[32];
  int v380;
  float32x4_t v381;
  __int128 v382;
  std::string v383;
  _BYTE v384[24];
  __int128 __p;
  __int128 v386;
  _OWORD v387[2];
  _BYTE v388[9];
  char v389;
  char v390;
  uint64_t v391;
  uint64_t v392;
  char v393;
  char v394;
  char v395;
  char v396;
  char v397;
  uint64_t v398;

  v398 = *MEMORY[0x24BDAC8D0];
  v10 = (_QWORD *)(a1 + 40576);
  v11 = (int32x2_t *)(a1 + 40148);
  a5.i64[0] = *(_QWORD *)(a1 + 40148);
  a5.i32[2] = *(_DWORD *)(a1 + 40156);
  a6.i64[0] = *(_QWORD *)(a1 + 40164);
  a6.i32[2] = *(_DWORD *)(a1 + 40172);
  a7.i32[0] = *(_DWORD *)(a1 + 40188);
  v12.i64[0] = vzip1q_s32(a5, a6).u64[0];
  a8.i64[0] = *(_QWORD *)(a1 + 40196);
  a8.i32[2] = *(_DWORD *)(a1 + 40204);
  v13 = (int8x16_t)vnegq_f32(a8);
  v14 = (int8x16_t)vtrn2q_s32(a5, a6);
  v14.i32[2] = HIDWORD(*(_QWORD *)(a1 + 40180));
  v15 = vzip2q_s32(a5, a6);
  *(float32x2_t *)v16.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v12.f32, *(float *)v13.i32), *(float32x2_t *)v14.i8, *(float32x2_t *)a8.f32, 1), *(float32x2_t *)v15.i8, a8, 2);
  v17 = (float32x4_t)v15;
  v17.i32[2] = a7.i32[0];
  v18 = (int8x16_t)vdupq_laneq_s32((int32x4_t)v17, 2);
  v16.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a1 + 40180), *(float32x2_t *)v13.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a1 + 40180), 1), *(float32x2_t *)a8.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL), a7).u32[0]);
  v12.i64[1] = *(_QWORD *)(a1 + 40180);
  v19.i32[3] = 0;
  v19.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v14, 0).i32[3];
  *(uint64_t *)((char *)v19.i64 + 4) = vextq_s8(v14, v18, 4uLL).u64[0];
  v20 = *(float32x4_t *)(a1 + 40544);
  v17.i64[1] = v18.u32[0];
  v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v19, *(float32x2_t *)(a1 + 40212), 1), v17, *(float32x4_t *)(a1 + 40212), 2), v16, *(float32x4_t *)(a1 + 40212), 3);
  v22 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v19, *(float32x2_t *)(a1 + 40228), 1), v17, *(float32x4_t *)(a1 + 40228), 2), v16, *(float32x4_t *)(a1 + 40228), 3);
  v23 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v19, *(float32x2_t *)(a1 + 40244), 1), v17, *(float32x4_t *)(a1 + 40244), 2), v16, *(float32x4_t *)(a1 + 40244), 3);
  v24 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v12, COERCE_FLOAT(*(_OWORD *)(a1 + 40260))), v19, *(float32x2_t *)(a1 + 40260), 1), v17, *(float32x4_t *)(a1 + 40260), 2), v16, *(float32x4_t *)(a1 + 40260), 3);
  v17.i64[0] = vtrn2q_s32((int32x4_t)v21, v22).u64[0];
  v16.i64[0] = vzip2q_s32((int32x4_t)v21, v22).u64[0];
  *(int32x2_t *)v13.i8 = vzip1_s32(*(int32x2_t *)v21.f32, *(int32x2_t *)v22.i8);
  *(float32x2_t *)v21.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v13.i8, COERCE_FLOAT(v24.i32[0] ^ 0x80000000)), *(float32x2_t *)v17.f32, (float32x2_t)(v24.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v16.f32, COERCE_FLOAT(v24.i32[2] ^ 0x80000000));
  v25 = (float32x2_t)vextq_s8(v23, v23, 8uLL).u64[0];
  v19.i64[0] = vextq_s8((int8x16_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 0), (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v17.f32, 1), 0xCuLL).u64[0];
  *(float32x2_t *)&v21.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v23.i8, (float32x2_t)(v24.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v24.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v23.i8, 1), (float32x2_t)(v24.i64[1] ^ 0xFFFFFFFF80000000), v25);
  v26 = (int8x16_t)vnegq_f32(v20);
  v368 = *(float32x4_t *)(a1 + 40496);
  v361 = *(int8x16_t *)(a1 + 40528);
  v363 = *(float32x4_t *)(a1 + 40512);
  *(float32x2_t *)v24.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)(a1 + 40496), *(int32x2_t *)(a1 + 40512)), *(float *)v26.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)(a1 + 40496), *(int32x2_t *)(a1 + 40512)), *(float32x2_t *)v20.f32, 1), (float32x2_t)*(_OWORD *)&vzip2q_s32((int32x4_t)v368, (int32x4_t)v363), v20, 2);
  *(float32x2_t *)v12.f32 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)v361.i8, *(float32x2_t *)v26.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v361.i8, 1), *(float32x2_t *)v20.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL), (float32x2_t)*(_OWORD *)&vextq_s8(v361, v361, 8uLL));
  *(float32x2_t *)v26.i8 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v13.i8, v24.f32[0]), *(float32x2_t *)v19.f32, *(float32x2_t *)v24.f32, 1), *(float32x2_t *)v16.f32, v12.f32[0]);
  v26.u64[1] = (unint64_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v23.i8, *(float32x2_t *)v24.f32), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.f32, 1), *(float32x2_t *)v23.i8, 1), *(float32x2_t *)v12.f32, v25);
  v27 = a3;
  v28 = vaddq_f32((float32x4_t)v26, v21);
  v381.i32[2] = v28.i32[2];
  v381.i64[0] = v28.i64[0];
  v367 = (_QWORD *)(a1 + 40576);
  if ((_BYTE)a3)
  {
    v359 = v20;
    *(_QWORD *)&v387[0] = "cv3d.recon.";
    *((_QWORD *)&v387[0] + 1) = 11;
    *(_QWORD *)&v387[1] = "PRR";
    *((_QWORD *)&v387[1] + 1) = 3;
    sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, (std::string *)&__p);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v29 = sub_2241471F8();
      v30 = v29[2];
      if (!v30)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v30 = v29[2];
      }
      v31 = *(_QWORD *)(v30 + 64);
      v32 = (std::mutex *)(v31 + 32);
      std::mutex::lock((std::mutex *)(v31 + 32));
      v34 = *(_QWORD *)(v31 + 96);
      v33 = *(_QWORD *)(v31 + 104);
      std::mutex::unlock(v32);
      if (v34 != v33)
      {
        sub_2241471F8();
        v35 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        v10 = v367;
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v35 + 24))(v35))
        {
          memset(info, 0, sizeof(info));
          v380 = 728325608;
          kdebug_trace();
          v36.i32[0] = v11[1].i32[0];
          v37 = (float32x2_t)v11[2];
          v38 = (float32x2_t)v11[4];
          v39.i32[0] = v11[5].i32[0];
          *(int32x2_t *)v40.f32 = v11[6];
          v40.i32[2] = v11[7].i32[0];
          v41 = (int8x16_t)vnegq_f32(v40);
          v42 = vmulq_n_f32(v368, v36.f32[0]);
          v36.i32[1] = v11[3].i32[0];
          v43 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*v11, (int32x2_t)v37), *(float *)v41.i32), (float32x2_t)vzip2_s32(*v11, (int32x2_t)v37), *(float32x2_t *)v40.f32, 1), v36, v40, 2);
          v36.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v38, *(float32x2_t *)v41.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v38, 1), *(float32x2_t *)v40.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v41, v41, 8uLL), v39).u32[0];
          v44 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v368, COERCE_FLOAT(*v11)), v363, v37.f32[0]), (float32x4_t)v361, v38.f32[0]), (float32x4_t)0, v359);
          v45 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v368, (float32x2_t)*v11, 1), v363, v37, 1), (float32x4_t)v361, v38, 1), (float32x4_t)0, v359);
          v46 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v42, v363, v36.f32[1]), (float32x4_t)v361, v39.f32[0]), (float32x4_t)0, v359);
          v47 = vaddq_f32(v359, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v368, v43.f32[0]), v363, v43, 1), (float32x4_t)v361, v36.f32[0]));
          v48 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)v11[10].i8)), v45, (float32x2_t)v11[10], 1), v46, *(float32x4_t *)v11[10].i8, 2), v47, *(float32x4_t *)v11[10].i8, 3);
          v49 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)v11[12].i8)), v45, (float32x2_t)v11[12], 1), v46, *(float32x4_t *)v11[12].i8, 2), v47, *(float32x4_t *)v11[12].i8, 3);
          v50 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)v11[14].i8)), v45, (float32x2_t)v11[14], 1), v46, *(float32x4_t *)v11[14].i8, 2), v47, *(float32x4_t *)v11[14].i8, 3);
          *(float32x4_t *)v375 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v44, COERCE_FLOAT(*(_OWORD *)v11[8].i8)), v45, (float32x2_t)v11[8], 1), v46, *(float32x4_t *)v11[8].i8, 2), v47, *(float32x4_t *)v11[8].i8, 3);
          v376 = v48;
          v377 = v49;
          v378 = v50;
          sub_2239326AC((uint64_t)v387, (int32x2_t *)v375, (uint64_t)&v381, a1 + 40560, v45);
          sub_223932564(v35, (uint64_t)v387, "user");
          sub_22316F8F4((uint64_t *)v387);
          kdebug_trace();
        }
      }
    }
    memset(info, 0, sizeof(info));
    v380 = 728325624;
    kdebug_trace();
    v51 = BYTE7(v386);
    if (SBYTE7(v386) < 0)
      v51 = *((_QWORD *)&__p + 1);
    if (v51 >= 0x11)
    {
      p_p = &__p;
      if (SBYTE7(v386) < 0)
        p_p = (__int128 *)__p;
      v53 = *(_QWORD *)p_p;
      v54 = *((_QWORD *)p_p + 1);
      v55 = *((unsigned __int8 *)p_p + 16);
      v56 = v53 == 0x6365722E64337663 && v54 == 0x73746174532E6E6FLL;
      if (v56 && v55 == 46)
      {
        sub_223187510();
        v58.i32[0] = v11[1].i32[0];
        v59 = (float32x2_t)v11[2];
        v60 = (float32x2_t)v11[4];
        v61.i32[0] = v11[5].i32[0];
        *(int32x2_t *)v62.f32 = v11[6];
        v62.i32[2] = v11[7].i32[0];
        v63 = (int8x16_t)vnegq_f32(v62);
        v64 = vmulq_n_f32(v368, v58.f32[0]);
        v58.i32[1] = v11[3].i32[0];
        v65 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*v11, (int32x2_t)v59), *(float *)v63.i32), (float32x2_t)vzip2_s32(*v11, (int32x2_t)v59), *(float32x2_t *)v62.f32, 1), v58, v62, 2);
        v58.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v60, *(float32x2_t *)v63.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v60, 1), *(float32x2_t *)v62.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL), v61).u32[0];
        v66 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v368, COERCE_FLOAT(*v11)), v363, v59.f32[0]), (float32x4_t)v361, v60.f32[0]), (float32x4_t)0, v359);
        v67 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v368, (float32x2_t)*v11, 1), v363, v59, 1), (float32x4_t)v361, v60, 1), (float32x4_t)0, v359);
        v68 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v64, v363, v58.f32[1]), (float32x4_t)v361, v61.f32[0]), (float32x4_t)0, v359);
        v69 = vaddq_f32(v359, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v368, v65.f32[0]), v363, v65, 1), (float32x4_t)v361, v58.f32[0]));
        v70 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, COERCE_FLOAT(*(_OWORD *)v11[10].i8)), v67, (float32x2_t)v11[10], 1), v68, *(float32x4_t *)v11[10].i8, 2), v69, *(float32x4_t *)v11[10].i8, 3);
        v71 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, COERCE_FLOAT(*(_OWORD *)v11[12].i8)), v67, (float32x2_t)v11[12], 1), v68, *(float32x4_t *)v11[12].i8, 2), v69, *(float32x4_t *)v11[12].i8, 3);
        v72 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, COERCE_FLOAT(*(_OWORD *)v11[14].i8)), v67, (float32x2_t)v11[14], 1), v68, *(float32x4_t *)v11[14].i8, 2), v69, *(float32x4_t *)v11[14].i8, 3);
        *(float32x4_t *)v375 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v66, COERCE_FLOAT(*(_OWORD *)v11[8].i8)), v67, (float32x2_t)v11[8], 1), v68, *(float32x4_t *)v11[8].i8, 2), v69, *(float32x4_t *)v11[8].i8, 3);
        v376 = v70;
        v377 = v71;
        v378 = v72;
        sub_2239326AC((uint64_t)v387, (int32x2_t *)v375, (uint64_t)&v381, a1 + 40560, v67);
        sub_22316F8F4((uint64_t *)v387);
      }
    }
    kdebug_trace();
    if (SBYTE7(v386) < 0)
    {
      operator delete((void *)__p);
      if (v27)
        goto LABEL_25;
    }
    else if (v27)
    {
LABEL_25:
      v73 = *((_BYTE *)v10 + 40) != 0;
      v74 = a2 >= *(_QWORD *)(*(_QWORD *)(v10[2] + 8) + 128);
      goto LABEL_28;
    }
  }
  v73 = 1;
  v74 = 1;
LABEL_28:
  v374 = v73 && v74;
  *(_QWORD *)&v387[0] = "cv3d.recon.";
  *((_QWORD *)&v387[0] + 1) = 11;
  *(_QWORD *)&v387[1] = "Stats.PRR.Execution";
  *((_QWORD *)&v387[1] + 1) = 19;
  sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, (std::string *)info);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v75 = sub_2241471F8();
    v76 = v75[2];
    if (!v76)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v76 = v75[2];
    }
    v77 = *(_QWORD *)(v76 + 64);
    v78 = (std::mutex *)(v77 + 32);
    std::mutex::lock((std::mutex *)(v77 + 32));
    v80 = *(_QWORD *)(v77 + 96);
    v79 = *(_QWORD *)(v77 + 104);
    std::mutex::unlock(v78);
    if (v80 != v79)
    {
      sub_2241471F8();
      v81 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v10 = v367;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v81 + 24))(v81))
      {
        memset(v387, 0, sizeof(v387));
        *(_DWORD *)v388 = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v81 + 24))(v81))
        {
          v376.i8[7] = 11;
          strcpy((char *)v375, "did run PRR");
          *(_QWORD *)&__p = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&__p + 1) = 2;
          v82 = sub_2241471F8();
          sub_2231AF6C8((uint64_t)v82, v81, (char *)&v374, (uint64_t)v375, &__p);
          if (v376.i8[7] < 0)
            operator delete(v375[0]);
        }
        kdebug_trace();
      }
    }
  }
  memset(v387, 0, sizeof(v387));
  *(_DWORD *)v388 = 728325624;
  kdebug_trace();
  v83 = info[23];
  if (info[23] < 0)
    v83 = *(_QWORD *)&info[8];
  if (v83 >= 0x11)
  {
    v84 = info;
    if (info[23] < 0)
      v84 = *(_BYTE **)info;
    v85 = *(_QWORD *)v84;
    v86 = *((_QWORD *)v84 + 1);
    v87 = v84[16];
    if (v85 == 0x6365722E64337663 && v86 == 0x73746174532E6E6FLL && v87 == 46)
    {
      v90 = sub_223187510();
      if (info[23] >= 0)
        v91 = info;
      else
        v91 = *(_BYTE **)info;
      if (info[23] >= 0)
        v92 = info[23];
      else
        v92 = *(_QWORD *)&info[8];
      sub_223189538((uint64_t *)v90, v91, v92, (char *)&v374, (uint64_t)"did run PRR", 11);
    }
  }
  kdebug_trace();
  if ((info[23] & 0x80000000) != 0)
    operator delete(*(void **)info);
  if (*(_BYTE *)(a1 + 233))
  {
    v95 = *(float32x4_t *)v11[4].i8;
    v94 = *(float32x4_t *)v11[6].i8;
    v98 = *(float32x4_t *)v11->i8;
    v97 = *(float32x4_t *)v11[2].i8;
    v93 = *(float32x4_t *)v11[12].i8;
    v99 = *(float32x4_t *)v11[14].i8;
    v96 = *(float32x4_t *)v11[8].i8;
    v100 = *(float32x4_t *)v11[10].i8;
    v101 = *(float32x4_t **)(v10[2] + 8);
    if (v101[24].i8[0])
    {
      v102 = vsubq_f32(v101[16], v98);
      v103 = vsubq_f32(v101[17], v97);
      v104 = vsubq_f32(v101[18], v95);
      v105 = vsubq_f32(v101[19], v94);
      v106 = vmulq_f32(v105, v105);
      v107 = vmulq_f32(v104, v104);
      v108 = vmulq_f32(v103, v103);
      v109 = vmulq_f32(v102, v102);
      v106.f32[0] = v106.f32[3]
                  + (float)(v106.f32[2]
                          + (float)(v106.f32[1]
                                  + (float)(v106.f32[0]
                                          + (float)(v107.f32[3]
                                                  + (float)(v107.f32[2]
                                                          + (float)(v107.f32[1]
                                                                  + (float)(v107.f32[0]
                                                                          + (float)(v108.f32[3]
                                                                                  + (float)(v108.f32[2]
                                                                                          + (float)(v108.f32[1]
                                                                                                  + (float)(v108.f32[0] + (float)(v109.f32[3] + (float)(v109.f32[2] + vaddv_f32(*(float32x2_t *)v109.f32))))))))))))));
      v110 = vsubq_f32(v101[20], v96);
      v111 = vsubq_f32(v101[21], v100);
      v112 = vsubq_f32(v101[22], v93);
      v113 = vsubq_f32(v101[23], v99);
      v114 = vmulq_f32(v113, v113);
      v115 = vmulq_f32(v112, v112);
      v116 = vmulq_f32(v111, v111);
      v117 = vmulq_f32(v110, v110);
      v118 = v106.f32[0]
           + (float)(v114.f32[3]
                   + (float)(v114.f32[2]
                           + (float)(v114.f32[1]
                                   + (float)(v114.f32[0]
                                           + (float)(v115.f32[3]
                                                   + (float)(v115.f32[2]
                                                           + (float)(v115.f32[1]
                                                                   + (float)(v115.f32[0]
                                                                           + (float)(v116.f32[3]
                                                                                   + (float)(v116.f32[2]
                                                                                           + (float)(v116.f32[1] + (float)(v116.f32[0] + (float)(v117.f32[3] + (float)(v117.f32[2] + vaddv_f32(*(float32x2_t *)v117.f32)))))))))))))));
      v119 = v118 == 0.0;
      if (v118 < 0.0)
        v118 = 0.0 - v118;
      if (v119 || v118 <= 0.000001)
        goto LABEL_72;
      v101[16] = v98;
      v101[17] = v97;
      v101[18] = v95;
      v101[19] = v94;
      v101[20] = v96;
      v101[21] = v100;
      v101[22] = v93;
      v101[23] = v99;
    }
    else
    {
      v101[16] = v98;
      v101[17] = v97;
      v101[18] = v95;
      v101[19] = v94;
      v101[20] = v96;
      v101[21] = v100;
      v101[22] = v93;
      v101[23] = v99;
      v101[24].i8[0] = 1;
    }
    v101[24].i8[4] = 1;
  }
LABEL_72:
  if (!v374)
  {
    v131 = *(_QWORD *)(v10[2] + 8);
    if (*(_BYTE *)(v131 + 388)
      && *(_QWORD *)(v131 + 128) <= a2
      && (*(_BYTE *)(v131 + 388) = 0,
          v93.i64[0] = 0x41CDCD6500000000,
          *(_QWORD *)(v131 + 128) = a2 + (uint64_t)(*(double *)(v131 + 32) * 1000000000.0),
          *(_BYTE *)(v131 + 208)))
    {
      v375[0] = *(void **)(v131 + 184);
      v376.i64[0] = 0;
      sub_2239908A8((float32x2_t *)v131, (uint64_t **)v375, (uint64_t)v387, (int32x4_t)v93, (int32x4_t)v94, *(float32x2_t *)v95.f32, v96);
      *(_OWORD *)a4 = v387[0];
      *(_QWORD *)(a4 + 16) = *(_QWORD *)&v387[1];
      *(_BYTE *)(a4 + 24) = BYTE8(v387[1]);
      *(_BYTE *)(a4 + 32) = 1;
    }
    else
    {
      *(_BYTE *)a4 = 0;
      *(_BYTE *)(a4 + 32) = 0;
    }
    return;
  }
  *((_WORD *)v10 + 20) = 0;
  v375[0] = (void *)*(unsigned __int8 *)(a1 + 161);
  v375[1] = 0;
  v376 = 0uLL;
  v377.i32[0] = 728306376;
  kdebug_trace();
  v129 = *v10;
  v130 = (float32x2_t *)(a1 + 40560);
  v362 = (float32x2_t *)(a1 + 40560);
  if (*(_BYTE *)(a1 + 298))
    sub_223914A20(v129, a1 + 304, (float32x2_t *)&v381, v130, a2, a3, v121, v122, v123, v124, v125, v126, v127, v128);
  else
    sub_223914C94(v129, (unsigned int *)(a1 + 304), (float32x2_t *)&v381, v130, a2, a3, v121, v122, v123, v124, v125, v126, v127, v128);
  v373 = *(float *)(*v10 + 76) - *(float *)(*v10 + 68);
  *(_QWORD *)&v387[0] = "cv3d.recon.";
  *((_QWORD *)&v387[0] + 1) = 11;
  *(_QWORD *)&v387[1] = "Stats.PRR.SpatialSubdivision";
  *((_QWORD *)&v387[1] + 1) = 28;
  sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, (std::string *)&__p);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v132 = sub_2241471F8();
    v133 = v132[2];
    if (!v133)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v133 = v132[2];
    }
    v134 = *(_QWORD *)(v133 + 64);
    v135 = (std::mutex *)(v134 + 32);
    std::mutex::lock((std::mutex *)(v134 + 32));
    v137 = *(_QWORD *)(v134 + 96);
    v136 = *(_QWORD *)(v134 + 104);
    std::mutex::unlock(v135);
    if (v137 != v136)
    {
      sub_2241471F8();
      v138 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v10 = v367;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v138 + 24))(v138))
      {
        memset(v387, 0, sizeof(v387));
        *(_DWORD *)v388 = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v138 + 24))(v138))
        {
          info[23] = 11;
          strcpy(info, "room height");
          *(_QWORD *)v384 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *(_QWORD *)&v384[8] = 2;
          v139 = sub_2241471F8();
          sub_22361FE58((uint64_t)v139, v138, (int *)&v373, (uint64_t)info, (__int128 *)v384);
          if ((info[23] & 0x80000000) != 0)
            operator delete(*(void **)info);
        }
        kdebug_trace();
      }
    }
  }
  memset(v387, 0, sizeof(v387));
  *(_DWORD *)v388 = 728325624;
  kdebug_trace();
  v140 = BYTE7(v386);
  if (SBYTE7(v386) < 0)
    v140 = *((_QWORD *)&__p + 1);
  if (v140 >= 0x11)
  {
    v141 = &__p;
    if (SBYTE7(v386) < 0)
      v141 = (__int128 *)__p;
    v142 = *(_QWORD *)v141;
    v143 = *((_QWORD *)v141 + 1);
    v144 = *((unsigned __int8 *)v141 + 16);
    if (v142 == 0x6365722E64337663 && v143 == 0x73746174532E6E6FLL && v144 == 46)
    {
      v147 = sub_223187510();
      if ((SBYTE7(v386) & 0x80u) == 0)
        v148 = &__p;
      else
        v148 = (__int128 *)__p;
      if ((SBYTE7(v386) & 0x80u) == 0)
        v149 = BYTE7(v386);
      else
        v149 = *((_QWORD *)&__p + 1);
      sub_2231897A8((uint64_t *)v147, v148, v149, &v373, (uint64_t)"room height", 11);
    }
  }
  kdebug_trace();
  if (SBYTE7(v386) < 0)
    operator delete((void *)__p);
  memset(v387, 0, sizeof(v387));
  *(_DWORD *)v388 = 728325632;
  kdebug_trace();
  mach_absolute_time();
  v150 = atomic_load((unsigned __int8 *)&qword_255795560);
  v369 = a1;
  v364 = a2;
  if ((v150 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info((mach_timebase_info_t)info);
    LODWORD(v353) = *(_DWORD *)info;
    LODWORD(v354) = *(_DWORD *)&info[4];
    *(double *)&qword_255795558 = (double)v353 / (double)v354;
    __cxa_guard_release(&qword_255795560);
    v10 = v367;
  }
  v151 = v373;
  v152 = atomic_load((unsigned __int8 *)&qword_25578DF68);
  if ((v152 & 1) == 0 && __cxa_guard_acquire(&qword_25578DF68))
  {
    qword_25578BBC8 = (uint64_t)&off_24EC37778;
    sub_223476B20((uint64_t)&qword_25578BBD0);
    __cxa_atexit((void (*)(void *))sub_223FDB180, &qword_25578BBC8, &dword_22314D000);
    __cxa_guard_release(&qword_25578DF68);
    v10 = v367;
  }
  std::mutex::lock(&stru_25578D348);
  v153 = v151;
  v154 = *(double *)&qword_25578D398;
  if (*(double *)&qword_25578D398 >= v151)
    v154 = v151;
  if (byte_25578D3A0)
    v153 = v154;
  qword_25578D398 = *(_QWORD *)&v153;
  byte_25578D3A0 = 1;
  std::mutex::unlock(&stru_25578D348);
  kdebug_trace();
  if (v373 <= 2.0)
  {
    *((_QWORD *)&v387[0] + 1) = 0;
    *(_QWORD *)&v387[1] = 0;
    *(_QWORD *)&v387[0] = (char *)v387 + 8;
    sub_2245312C0(v387, info);
    *(_OWORD *)v384 = *(_OWORD *)info;
    sub_22323DF84((uint64_t)v387, *((char **)&v387[0] + 1));
    info[23] = 16;
    strcpy(info, "unexpected_state");
    DWORD2(v387[1]) = 0;
    sub_223701EA8(v387, "RoomHeight");
    sub_223208764((uint64_t)&v383, (uint64_t)v387, &v373);
    if (DWORD2(v387[1]) == -1)
      sub_22316DD70();
    v383.__r_.__value_.__r.__words[0] = (std::string::size_type)v371;
    ((void (*)(__int128 *__return_ptr, std::string *, _OWORD *))off_24EC5CEA0[DWORD2(v387[1])])(&__p, &v383, v387);
    if (DWORD2(v387[1]) != -1)
      ((void (*)(std::string *, _OWORD *))off_24EC5CE70[DWORD2(v387[1])])(&v383, v387);
    sub_224527E14((uint64_t)info, (CFStringRef *)v387);
    sub_2232EED78((uint64_t)v384, *(const void **)&v387[0], (uint64_t)&__p);
    v155 = (std::__shared_weak_count *)*((_QWORD *)&v387[0] + 1);
    if (!*((_QWORD *)&v387[0] + 1))
      goto LABEL_127;
    v156 = (unint64_t *)(*((_QWORD *)&v387[0] + 1) + 8);
    do
      v157 = __ldaxr(v156);
    while (__stlxr(v157 - 1, v156));
    if (!v157)
    {
      ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
      std::__shared_weak_count::__release_weak(v155);
      if ((SBYTE7(v386) & 0x80000000) == 0)
      {
LABEL_128:
        if ((info[23] & 0x80000000) == 0)
          goto LABEL_129;
        goto LABEL_133;
      }
    }
    else
    {
LABEL_127:
      if ((SBYTE7(v386) & 0x80000000) == 0)
        goto LABEL_128;
    }
    operator delete((void *)__p);
    if ((info[23] & 0x80000000) == 0)
    {
LABEL_129:
      v158 = atomic_load((unsigned __int8 *)&qword_25578E150);
      if ((v158 & 1) == 0)
      {
LABEL_455:
        if (__cxa_guard_acquire(&qword_25578E150))
        {
          sub_223662EC4((uint64_t)&stru_25578E0D0);
          __cxa_atexit((void (*)(void *))sub_223663030, &stru_25578E0D0, &dword_22314D000);
          __cxa_guard_release(&qword_25578E150);
          v10 = v367;
        }
      }
LABEL_134:
      *(_QWORD *)info = "RoomHeight";
      *(_QWORD *)&info[8] = 10;
      sub_2232EEEDC(&__p, (uint64_t)v384);
      sub_22365EEEC((uint64_t)&stru_25578E0D0, 1, (uint64_t)info, (void **)&__p, (uint64_t)v387);
      v160 = (std::__shared_weak_count *)*((_QWORD *)&__p + 1);
      if (*((_QWORD *)&__p + 1))
      {
        v161 = (unint64_t *)(*((_QWORD *)&__p + 1) + 8);
        do
          v162 = __ldaxr(v161);
        while (__stlxr(v162 - 1, v161));
        if (!v162)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
      }
      v163 = *(std::__shared_weak_count **)&v384[8];
      if (*(_QWORD *)&v384[8])
      {
        v164 = (unint64_t *)(*(_QWORD *)&v384[8] + 8);
        do
          v165 = __ldaxr(v164);
        while (__stlxr(v165 - 1, v164));
        if (!v165)
        {
          ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
          std::__shared_weak_count::__release_weak(v163);
        }
      }
      goto LABEL_144;
    }
LABEL_133:
    operator delete(*(void **)info);
    v159 = atomic_load((unsigned __int8 *)&qword_25578E150);
    if ((v159 & 1) == 0)
      goto LABEL_455;
    goto LABEL_134;
  }
LABEL_144:
  v371[0] = 0;
  v371[1] = 0;
  v372 = 0;
  v371[0] = std::chrono::steady_clock::now().__d_.__rep_;
  v372 = 1;
  kdebug_trace();
  v166 = *(_QWORD *)(*v10 + 8);
  v167.i64[0] = *(_QWORD *)(v166 + 352);
  v167.i32[2] = *(_DWORD *)(v166 + 360);
  v168 = vabsq_f32(v167);
  v169 = v168.f32[1];
  v170 = v168.f32[1] > v168.f32[0];
  if (v168.f32[1] <= v168.f32[0])
    v169 = v168.f32[0];
  if (v169 < v168.f32[2])
    v170 = 2;
  if (v170 == 1)
  {
    v167.i32[0] = v167.i32[1];
    if (v167.f32[1] < 0.0)
      v171 = 2;
    else
      v171 = 3;
    if (!*(_BYTE *)(a1 + 298))
      goto LABEL_179;
  }
  else
  {
    if (!v170)
    {
      v171 = v167.f32[0] >= 0.0;
      if (*(_BYTE *)(a1 + 298))
        goto LABEL_151;
LABEL_179:
      v190 = v10[16];
      sub_223917418((uint64_t *)v387, v166 + 328, v167);
      v176 = a1 + 304;
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(_QWORD *)v190 + 32))(v190, v387, v171);
      v177 = *(_QWORD *)&v387[0];
      v178 = v364;
      if (!*(_QWORD *)&v387[0])
        goto LABEL_197;
      v191 = *((_QWORD *)&v387[0] + 1);
      v180 = *(void **)&v387[0];
      if (*((_QWORD *)&v387[0] + 1) == *(_QWORD *)&v387[0])
        goto LABEL_196;
      do
      {
        v192 = *(void **)(v191 - 96);
        if (v192)
        {
          *(_QWORD *)(v191 - 88) = v192;
          operator delete(v192);
        }
        v193 = *(_QWORD *)(v191 - 120);
        if (v193)
        {
          v194 = *(_QWORD *)(v191 - 112);
          v195 = *(void **)(v191 - 120);
          if (v194 != v193)
          {
            v196 = *(_QWORD *)(v191 - 112);
            do
            {
              v198 = *(void **)(v196 - 24);
              v196 -= 24;
              v197 = v198;
              if (v198)
              {
                *(_QWORD *)(v194 - 16) = v197;
                operator delete(v197);
              }
              v194 = v196;
            }
            while (v196 != v193);
            v195 = *(void **)(v191 - 120);
          }
          *(_QWORD *)(v191 - 112) = v193;
          operator delete(v195);
        }
        v199 = v191 - 144;
        v200 = *(void **)(v191 - 144);
        if (v200)
        {
          *(_QWORD *)(v191 - 136) = v200;
          operator delete(v200);
        }
        v191 -= 144;
      }
      while (v199 != v177);
      goto LABEL_195;
    }
    v167.i32[0] = *(_DWORD *)(v166 + 352 + 4 * v170);
    if (v167.f32[0] < 0.0)
      v171 = 4;
    else
      v171 = 5;
    if (!*(_BYTE *)(a1 + 298))
      goto LABEL_179;
  }
LABEL_151:
  memset(v387, 0, 24);
  v172 = v10[29];
  v173 = v10[30];
  if (v172 != v173)
  {
    v174 = 0;
    do
    {
      v175 = *(_QWORD *)(v172 + 88);
      if (v175)
      {
        if (v174 >= *(_QWORD *)&v387[1])
        {
          v174 = sub_22393654C((uint64_t *)v387, v175);
        }
        else
        {
          sub_2239367D8(v174, v175);
          v174 += 144;
        }
        *((_QWORD *)&v387[0] + 1) = v174;
      }
      v172 += 360;
    }
    while (v172 != v173);
  }
  v176 = a1 + 304;
  (*(void (**)(_QWORD, _OWORD *, uint64_t))(*(_QWORD *)v10[16] + 32))(v10[16], v387, v171);
  v177 = *(_QWORD *)&v387[0];
  v178 = v364;
  if (*(_QWORD *)&v387[0])
  {
    v179 = *((_QWORD *)&v387[0] + 1);
    v180 = *(void **)&v387[0];
    if (*((_QWORD *)&v387[0] + 1) == *(_QWORD *)&v387[0])
      goto LABEL_196;
    do
    {
      v181 = *(void **)(v179 - 96);
      if (v181)
      {
        *(_QWORD *)(v179 - 88) = v181;
        operator delete(v181);
      }
      v182 = *(_QWORD *)(v179 - 120);
      if (v182)
      {
        v183 = *(_QWORD *)(v179 - 112);
        v184 = *(void **)(v179 - 120);
        if (v183 != v182)
        {
          v185 = *(_QWORD *)(v179 - 112);
          do
          {
            v187 = *(void **)(v185 - 24);
            v185 -= 24;
            v186 = v187;
            if (v187)
            {
              *(_QWORD *)(v183 - 16) = v186;
              operator delete(v186);
            }
            v183 = v185;
          }
          while (v185 != v182);
          v184 = *(void **)(v179 - 120);
        }
        *(_QWORD *)(v179 - 112) = v182;
        operator delete(v184);
      }
      v188 = v179 - 144;
      v189 = *(void **)(v179 - 144);
      if (v189)
      {
        *(_QWORD *)(v179 - 136) = v189;
        operator delete(v189);
      }
      v179 -= 144;
    }
    while (v188 != v177);
LABEL_195:
    v180 = *(void **)&v387[0];
    v10 = v367;
LABEL_196:
    *((_QWORD *)&v387[0] + 1) = v177;
    operator delete(v180);
  }
LABEL_197:
  (*(void (**)(_QWORD, float32x4_t *, uint64_t, uint64_t))(*(_QWORD *)v10[16] + 40))(v10[16], &v381, v178, a3);
  v201 = *(unsigned __int8 *)(v10[16] + 8);
  kdebug_trace();
  v202 = v176;
  strcpy((char *)v387, "RslIndoorOutdoorFilter");
  BYTE7(v387[1]) = 22;
  info[23] = 3;
  strcpy(info, "PRR");
  sub_22391CC34((uint64_t *)v387, (uint64_t *)info, (uint64_t)v371);
  if ((info[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)info);
    if ((SBYTE7(v387[1]) & 0x80000000) == 0)
    {
LABEL_199:
      if (!v27)
        goto LABEL_314;
      goto LABEL_203;
    }
  }
  else if ((SBYTE7(v387[1]) & 0x80000000) == 0)
  {
    goto LABEL_199;
  }
  operator delete(*(void **)&v387[0]);
  if (!v27)
    goto LABEL_314;
LABEL_203:
  *(_QWORD *)&v387[0] = "cv3d.recon.";
  *((_QWORD *)&v387[0] + 1) = 11;
  *(_QWORD *)&v387[1] = "Stats.PRR.IOClassification";
  *((_QWORD *)&v387[1] + 1) = 26;
  sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, &v383);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v203 = sub_2241471F8();
    v204 = v203[2];
    if (!v204)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v204 = v203[2];
    }
    v205 = *(_QWORD *)(v204 + 64);
    v206 = (std::mutex *)(v205 + 32);
    std::mutex::lock((std::mutex *)(v205 + 32));
    v208 = *(_QWORD *)(v205 + 96);
    v207 = *(_QWORD *)(v205 + 104);
    std::mutex::unlock(v206);
    if (v208 != v207)
    {
      sub_2241471F8();
      v209 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v10 = v367;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v209 + 24))(v209))
      {
        memset(info, 0, sizeof(info));
        v380 = 728325608;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v209 + 24))(v209))
        {
          v210 = (char *)operator new(0x20uLL);
          strcpy(v210, "raw indoor/outdoor label");
          v211 = *(double *)&qword_255788F20;
          v212 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v209 + 24))(v209))
          {
            v213 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v209 + 56))(v209);
            v214 = mach_continuous_time();
            v360 = (uint64_t *)v213;
            v215 = atomic_load((unsigned __int8 *)&qword_255795560);
            if ((v215 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
            {
              mach_timebase_info((mach_timebase_info_t)&__p);
              LODWORD(v358) = DWORD1(__p);
              LODWORD(v357) = __p;
              *(double *)&qword_255795558 = (double)v357 / (double)v358;
              __cxa_guard_release(&qword_255795560);
              v10 = v367;
            }
            *(_QWORD *)&v387[0] = llround(*(double *)&qword_255795558 * (double)v214);
            *((_QWORD *)&v387[0] + 1) = 2;
            *(_QWORD *)&v387[1] = v210;
            *((_QWORD *)&v387[1] + 1) = 24;
            v388[6] = 0;
            *(_WORD *)&v388[4] = 0;
            *(_DWORD *)v388 = 32;
            *(_WORD *)&v388[7] = 384;
            v389 = 0;
            v390 = 0;
            v391 = (uint64_t)(v211 * 1000000000.0);
            v392 = 2;
            v393 = 1;
            v394 = 0;
            v395 = 0;
            v396 = 0;
            v397 = 0;
            v216 = v11[40].i8[4];
            LOBYTE(__p) = 0;
            v386 = 0uLL;
            *((_QWORD *)&__p + 1) = 0;
            v217 = operator new(1uLL);
            *((_QWORD *)&__p + 1) = v217;
            *v217 = v216;
            *(_QWORD *)&v386 = v217 + 1;
            *((_QWORD *)&v386 + 1) = v217 + 1;
            sub_2231AA8F0((char *)&__p, (uint64_t)v387, v384);
            if (*((_QWORD *)&__p + 1))
            {
              *(_QWORD *)&v386 = *((_QWORD *)&__p + 1);
              operator delete(*((void **)&__p + 1));
            }
            sub_2231AD66C((uint64_t)v387);
            sub_2231AA5A4((uint64_t)v212, v360, (uint64_t)v384);
            v218 = *(std::__shared_weak_count **)&v384[16];
            if (*(_QWORD *)&v384[16])
            {
              v219 = (unint64_t *)(*(_QWORD *)&v384[16] + 8);
              do
                v220 = __ldaxr(v219);
              while (__stlxr(v220 - 1, v219));
              if (!v220)
              {
                ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
                std::__shared_weak_count::__release_weak(v218);
              }
            }
          }
          else
          {
            operator delete(v210);
          }
        }
        kdebug_trace();
      }
    }
  }
  memset(v387, 0, sizeof(v387));
  *(_DWORD *)v388 = 728325624;
  kdebug_trace();
  size = HIBYTE(v383.__r_.__value_.__r.__words[2]);
  if ((v383.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v383.__r_.__value_.__l.__size_;
  if (size >= 0x11)
  {
    v222 = &v383;
    if ((v383.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v222 = (std::string *)v383.__r_.__value_.__r.__words[0];
    v223 = v222->__r_.__value_.__r.__words[0];
    v224 = v222->__r_.__value_.__l.__size_;
    v225 = v222->__r_.__value_.__s.__data_[16];
    if (v223 == 0x6365722E64337663 && v224 == 0x73746174532E6E6FLL && v225 == 46)
    {
      v228 = sub_223187510();
      if ((v383.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v229 = &v383;
      else
        v229 = (std::string *)v383.__r_.__value_.__r.__words[0];
      if ((v383.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v230 = HIBYTE(v383.__r_.__value_.__r.__words[2]);
      else
        v230 = v383.__r_.__value_.__l.__size_;
      sub_22387FA8C(v228, v229, v230, (unsigned __int8 *)(v369 + 40472), (uint64_t)"raw indoor/outdoor label", 24);
    }
  }
  kdebug_trace();
  if (SHIBYTE(v383.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v383.__r_.__value_.__l.__data_);
  *(_QWORD *)&v387[0] = "cv3d.recon.";
  *((_QWORD *)&v387[0] + 1) = 11;
  *(_QWORD *)&v387[1] = "Stats.PRR.IOClassification";
  *((_QWORD *)&v387[1] + 1) = 26;
  sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, (std::string *)info);
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v231 = sub_2241471F8();
    v232 = v231[2];
    if (!v232)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v232 = v231[2];
    }
    v233 = *(_QWORD *)(v232 + 64);
    v234 = (std::mutex *)(v233 + 32);
    std::mutex::lock((std::mutex *)(v233 + 32));
    v236 = *(_QWORD *)(v233 + 96);
    v235 = *(_QWORD *)(v233 + 104);
    std::mutex::unlock(v234);
    if (v236 != v235)
    {
      sub_2241471F8();
      v237 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v10 = v367;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v237 + 24))(v237))
      {
        memset(v387, 0, sizeof(v387));
        *(_DWORD *)v388 = 728325608;
        kdebug_trace();
        LOBYTE(__p) = v201;
        sub_223921D44(v237, (char *)&__p);
        kdebug_trace();
      }
    }
  }
  memset(v387, 0, sizeof(v387));
  *(_DWORD *)v388 = 728325624;
  kdebug_trace();
  v238 = info[23];
  if (info[23] < 0)
    v238 = *(_QWORD *)&info[8];
  if (v238 >= 0x11)
  {
    v239 = info;
    if (info[23] < 0)
      v239 = *(_BYTE **)info;
    v240 = *(_QWORD *)v239;
    v241 = *((_QWORD *)v239 + 1);
    v242 = v239[16];
    if (v240 == 0x6365722E64337663 && v241 == 0x73746174532E6E6FLL && v242 == 46)
    {
      v245 = sub_223187510();
      if (info[23] >= 0)
        v246 = info;
      else
        v246 = *(_BYTE **)info;
      if (info[23] >= 0)
        v247 = info[23];
      else
        v247 = *(_QWORD *)&info[8];
      LOBYTE(__p) = v201;
      sub_22387FA8C(v245, v246, v247, (unsigned __int8 *)&__p, (uint64_t)"filtered indoor/outdoor label", 29);
    }
  }
  kdebug_trace();
  if ((info[23] & 0x80000000) != 0)
    operator delete(*(void **)info);
  memset(v387, 0, sizeof(v387));
  *(_DWORD *)v388 = 728325632;
  kdebug_trace();
  v248 = mach_absolute_time();
  v249 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v249 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info((mach_timebase_info_t)info);
    LODWORD(v355) = *(_DWORD *)info;
    LODWORD(v356) = *(_DWORD *)&info[4];
    *(double *)&qword_255795558 = (double)v355 / (double)v356;
    __cxa_guard_release(&qword_255795560);
    v10 = v367;
  }
  v250 = *(double *)&qword_255795558;
  v251 = atomic_load((unsigned __int8 *)&qword_25578DF68);
  if ((v251 & 1) == 0 && __cxa_guard_acquire(&qword_25578DF68))
  {
    qword_25578BBC8 = (uint64_t)&off_24EC37778;
    sub_223476B20((uint64_t)&qword_25578BBD0);
    __cxa_atexit((void (*)(void *))sub_223FDB180, &qword_25578BBC8, &dword_22314D000);
    __cxa_guard_release(&qword_25578DF68);
    v10 = v367;
  }
  sub_223973360((uint64_t)&qword_25578BBD0, v201, (double)(uint64_t)llround(v250 * (double)v248) / 1000000000.0);
  kdebug_trace();
  sub_224569D7C();
  sub_224569A80();
  if (os_variant_has_internal_diagnostics())
  {
    v252 = sub_2241471F8();
    v253 = v252[2];
    if (!v253)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v253 = v252[2];
    }
    v254 = *(_QWORD *)(v253 + 64);
    v255 = (std::mutex *)(v254 + 32);
    std::mutex::lock((std::mutex *)(v254 + 32));
    v257 = *(_QWORD *)(v254 + 96);
    v256 = *(_QWORD *)(v254 + 104);
    std::mutex::unlock(v255);
    if (v257 != v256)
    {
      *(_QWORD *)&v387[0] = "cv3d.recon.";
      *((_QWORD *)&v387[0] + 1) = 11;
      *(_QWORD *)&v387[1] = "Stats.FrameRate";
      *((_QWORD *)&v387[1] + 1) = 15;
      sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, &v370);
      sub_2241471F8();
      v258 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
      v10 = v367;
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v258 + 24))(v258))
      {
        memset(info, 0, sizeof(info));
        v380 = 728325616;
        kdebug_trace();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v258 + 24))(v258))
        {
          *(_QWORD *)&v382 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
          *((_QWORD *)&v382 + 1) = 2;
          v259 = sub_2241471F8();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v258 + 24))(v258))
          {
            v260 = (double)v364 / 1000000000.0;
            v261 = v260 - *(float *)&dword_255794BE0;
            *(float *)&v260 = v260;
            dword_255794BE0 = LODWORD(v260);
            v262 = 1.0 / v261;
            if ((float)(1.0 / v261) > 100.0)
              v262 = 100.0;
            *(float *)v387 = v262;
            *(_QWORD *)&__p = 5395024;
            *(_WORD *)((char *)&v386 + 7) = 259;
            sub_2231FBCB0((float *)v387, &__p, &v382, v384);
            if (BYTE8(v386) && SBYTE7(v386) < 0)
              operator delete((void *)__p);
            v263 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v258 + 56))(v258);
            v264 = *v263;
            v265 = (std::__shared_weak_count *)v263[1];
            if (v265)
            {
              p_shared_owners = (unint64_t *)&v265->__shared_owners_;
              do
                v267 = __ldxr(p_shared_owners);
              while (__stxr(v267 + 1, p_shared_owners));
            }
            v269 = *(_QWORD *)&v384[8];
            v268 = *(_QWORD *)&v384[16];
            v383.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24EC6A3B8;
            *(_OWORD *)&v383.__r_.__value_.__r.__words[1] = *(_OWORD *)&v384[8];
            *(_QWORD *)&v384[8] = 0;
            *(_QWORD *)&v384[16] = 0;
            *(_QWORD *)&v387[0] = v264;
            *((_QWORD *)&v387[0] + 1) = v265;
            if (v265)
            {
              v270 = (unint64_t *)&v265->__shared_owners_;
              do
                v271 = __ldxr(v270);
              while (__stxr(v271 + 1, v270));
            }
            *(_QWORD *)&v387[1] = &off_24EC6A3B8;
            *((_QWORD *)&v387[1] + 1) = v269;
            *(_QWORD *)v388 = v268;
            if (v268)
            {
              v272 = (unint64_t *)(v268 + 8);
              do
                v273 = __ldxr(v272);
              while (__stxr(v273 + 1, v272));
            }
            (*(void (**)(uint64_t *, _OWORD *))(*v259 + 16))(v259, v387);
            sub_2241231D8((uint64_t)&v387[1]);
            v274 = (std::__shared_weak_count *)*((_QWORD *)&v387[0] + 1);
            if (*((_QWORD *)&v387[0] + 1))
            {
              v275 = (unint64_t *)(*((_QWORD *)&v387[0] + 1) + 8);
              do
                v276 = __ldaxr(v275);
              while (__stlxr(v276 - 1, v275));
              if (!v276)
              {
                ((void (*)(std::__shared_weak_count *))v274->__on_zero_shared)(v274);
                std::__shared_weak_count::__release_weak(v274);
              }
            }
            sub_2241231D8((uint64_t)&v383);
            if (v265)
            {
              v277 = (unint64_t *)&v265->__shared_owners_;
              do
                v278 = __ldaxr(v277);
              while (__stlxr(v278 - 1, v277));
              if (!v278)
              {
                ((void (*)(std::__shared_weak_count *))v265->__on_zero_shared)(v265);
                std::__shared_weak_count::__release_weak(v265);
              }
            }
            sub_2241231D8((uint64_t)v384);
          }
        }
        kdebug_trace();
      }
      if (SHIBYTE(v370.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v370.__r_.__value_.__l.__data_);
        *(_BYTE *)a4 = 0;
        *(_BYTE *)(a4 + 32) = 0;
        if (v201 == 2)
          goto LABEL_315;
LABEL_328:
        v285 = 0;
        v286 = ((float)((float)(*(float *)(v369 + 216) + *(float *)(v369 + 216)) / 3.6864) & 0xFFFFFF) << 6;
        *(_DWORD *)v384 = 0;
        while (v286 > -1057222719 * ((*(_QWORD *)(v369 + 2768) - *(_QWORD *)(v369 + 2752)) >> 3)
                     + 1057222719 * ((*(_QWORD *)(v369 + 2760) - *(_QWORD *)(v369 + 2752)) >> 3)
                     + ((*(_QWORD *)(v369 + 2792) - *(_QWORD *)(v369 + 2784)) >> 2))
        {
          v287 = (v381.i32[0] & 0x7FFFFFFFu) < 0x7F800000;
          if ((v381.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          {
            v287 = (v381.i32[1] & 0x7FFFFFFFu) < 0x7F800000;
            if ((v381.i32[1] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              v287 = (v381.i32[2] & 0x7FFFFFFFu) < 0x7F800000;
          }
          if (!v287
            && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/VoxelStore.h", 372, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v288 = vmulq_n_f32(v381, *(float *)(v369 + 452));
          *(int32x2_t *)info = vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v288.f32));
          *(_DWORD *)&info[8] = vcvtms_s32_f32(v288.f32[2]);
          sub_223973C90(v369 + 320, (int *)info, (int32x2_t *)v387);
          if (!BYTE12(v387[0]))
          {
            v285 = *(_DWORD *)v384;
            break;
          }
          v285 = ++*(_DWORD *)v384;
        }
        v10 = v367;
        if (v285)
        {
          v289 = *(_QWORD **)(v369 + 2808);
          if (v289 != (_QWORD *)(v369 + 2816))
          {
            do
            {
              *(_QWORD *)&v387[0] = *(_QWORD *)((char *)v289 + 28);
              v290 = *((_DWORD *)v289 + 9);
              *(int32x2_t *)((char *)v387 + 12) = vadd_s32(*(int32x2_t *)((char *)v289 + 28), (int32x2_t)0x800000008);
              DWORD2(v387[0]) = v290;
              DWORD1(v387[1]) = v290 + 8;
              sub_22390246C(v369 + 40664, (int *)v387, (uint64_t)v387);
              v291 = (_QWORD *)v289[1];
              if (v291)
              {
                do
                {
                  v292 = v291;
                  v291 = (_QWORD *)*v291;
                }
                while (v291);
              }
              else
              {
                do
                {
                  v292 = (_QWORD *)v289[2];
                  v56 = *v292 == (_QWORD)v289;
                  v289 = v292;
                }
                while (!v56);
              }
              v289 = v292;
            }
            while (v292 != (_QWORD *)(v369 + 2816));
          }
          sub_223919F74(v369);
        }
        *(_QWORD *)&v387[0] = "cv3d.recon.";
        *((_QWORD *)&v387[0] + 1) = 11;
        *(_QWORD *)&v387[1] = "Stats.PRR.Recycling";
        *((_QWORD *)&v387[1] + 1) = 19;
        sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, (std::string *)info);
        sub_224569D7C();
        sub_224569A80();
        if (os_variant_has_internal_diagnostics())
        {
          v293 = sub_2241471F8();
          v294 = v293[2];
          if (!v294)
          {
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
            {
              abort();
            }
            v294 = v293[2];
          }
          v295 = *(_QWORD *)(v294 + 64);
          v296 = (std::mutex *)(v295 + 32);
          std::mutex::lock((std::mutex *)(v295 + 32));
          v298 = *(_QWORD *)(v295 + 96);
          v297 = *(_QWORD *)(v295 + 104);
          std::mutex::unlock(v296);
          if (v298 != v297)
          {
            sub_2241471F8();
            v299 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
            v10 = v367;
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v299 + 24))(v299))
            {
              memset(v387, 0, sizeof(v387));
              *(_DWORD *)v388 = 728325608;
              kdebug_trace();
              sub_22386D630((double *)&qword_255788F20, v299, (int *)v384, "recycled chunks");
              kdebug_trace();
            }
          }
        }
        memset(v387, 0, sizeof(v387));
        *(_DWORD *)v388 = 728325624;
        kdebug_trace();
        v300 = info[23];
        if (info[23] < 0)
          v300 = *(_QWORD *)&info[8];
        if (v300 >= 0x11)
        {
          v301 = info;
          if (info[23] < 0)
            v301 = *(_BYTE **)info;
          v302 = *(_QWORD *)v301;
          v303 = *((_QWORD *)v301 + 1);
          v304 = v301[16];
          if (v302 == 0x6365722E64337663 && v303 == 0x73746174532E6E6FLL && v304 == 46)
          {
            v307 = sub_223187510();
            if (info[23] >= 0)
              v308 = info;
            else
              v308 = *(_BYTE **)info;
            if (info[23] >= 0)
              v309 = info[23];
            else
              v309 = *(_QWORD *)&info[8];
            sub_223532E4C(v307, v308, v309, (unsigned int *)v384, (uint64_t)"recycled chunks", 15);
          }
        }
        kdebug_trace();
        if ((info[23] & 0x80000000) != 0)
          operator delete(*(void **)info);
        *(_QWORD *)&v387[0] = operator new(0x19uLL);
        *(_OWORD *)((char *)v387 + 8) = xmmword_2245B9430;
        strcpy(*(char **)&v387[0], "Stats.PRR.Octree_Before");
        sub_223CFC5B0(v202, (uint64_t *)v387);
        if (SBYTE7(v387[1]) < 0)
        {
          operator delete(*(void **)&v387[0]);
          if (!*(_BYTE *)(*v10 + 40))
            goto LABEL_410;
        }
        else if (!*(_BYTE *)(*v10 + 40))
        {
          goto LABEL_410;
        }
        *(_QWORD *)&v387[0] = "cv3d.recon.";
        *((_QWORD *)&v387[0] + 1) = 11;
        *(_QWORD *)&v387[1] = "PRR";
        *((_QWORD *)&v387[1] + 1) = 3;
        sub_2231A9820((uint64_t)v387, (uint64_t)v388, 0, 0, (std::string *)&__p);
        sub_224569D7C();
        sub_224569A80();
        if (os_variant_has_internal_diagnostics())
        {
          v310 = sub_2241471F8();
          v311 = v310[2];
          if (!v311)
          {
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
            {
              abort();
            }
            v311 = v310[2];
          }
          v312 = *(_QWORD *)(v311 + 64);
          v313 = (std::mutex *)(v312 + 32);
          std::mutex::lock((std::mutex *)(v312 + 32));
          v315 = *(_QWORD *)(v312 + 96);
          v314 = *(_QWORD *)(v312 + 104);
          std::mutex::unlock(v313);
          if (v315 != v314)
          {
            sub_2241471F8();
            v316 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v316 + 24))(v316))
            {
              memset(info, 0, sizeof(info));
              v380 = 728325608;
              kdebug_trace();
              v317 = *v367;
              sub_22414CE34(0, (uint64_t)v387);
              v321 = *((_QWORD *)&v387[0] + 1);
              v320 = *(_QWORD *)&v387[0];
              if (*(_QWORD *)&v387[0] != *((_QWORD *)&v387[0] + 1))
              {
                v318.i64[0] = *(_QWORD *)(v317 + 28);
                v318.i32[2] = *(_DWORD *)(v317 + 36);
                v319.i64[0] = *(_QWORD *)(v317 + 16);
                v319.i32[2] = *(_DWORD *)(v317 + 24);
                v322.i64[0] = 0x3F0000003F000000;
                v322.i64[1] = 0x3F0000003F000000;
                v323 = vmulq_f32(vsubq_f32(v318, v319), v322);
                v324 = vmulq_f32(vaddq_f32(v318, v319), v322);
                do
                {
                  v319.i64[0] = *(_QWORD *)v320;
                  v319.i32[2] = *(_DWORD *)(v320 + 8);
                  v319 = vaddq_f32(v324, vmulq_f32(v323, v319));
                  *(_DWORD *)(v320 + 8) = v319.i32[2];
                  *(_QWORD *)v320 = v319.i64[0];
                  v320 += 12;
                }
                while (v320 != v321);
              }
              sub_223932564(v316, (uint64_t)v387, "bbox");
              sub_22316F8F4((uint64_t *)v387);
              kdebug_trace();
            }
          }
        }
        memset(info, 0, sizeof(info));
        v380 = 728325624;
        kdebug_trace();
        v325 = BYTE7(v386);
        if (SBYTE7(v386) < 0)
          v325 = *((_QWORD *)&__p + 1);
        v10 = v367;
        if (v325 >= 0x11)
        {
          v326 = &__p;
          if (SBYTE7(v386) < 0)
            v326 = (__int128 *)__p;
          v327 = *(_QWORD *)v326;
          v328 = *((_QWORD *)v326 + 1);
          v329 = *((unsigned __int8 *)v326 + 16);
          if (v327 == 0x6365722E64337663 && v328 == 0x73746174532E6E6FLL && v329 == 46)
          {
            sub_223187510();
            v332 = *v367;
            sub_22414CE34(0, (uint64_t)v387);
            v336 = *((_QWORD *)&v387[0] + 1);
            v335 = *(_QWORD *)&v387[0];
            if (*(_QWORD *)&v387[0] != *((_QWORD *)&v387[0] + 1))
            {
              v333.i64[0] = *(_QWORD *)(v332 + 28);
              v333.i32[2] = *(_DWORD *)(v332 + 36);
              v334.i64[0] = *(_QWORD *)(v332 + 16);
              v334.i32[2] = *(_DWORD *)(v332 + 24);
              v337.i64[0] = 0x3F0000003F000000;
              v337.i64[1] = 0x3F0000003F000000;
              v338 = vmulq_f32(vsubq_f32(v333, v334), v337);
              v339 = vmulq_f32(vaddq_f32(v333, v334), v337);
              do
              {
                v334.i64[0] = *(_QWORD *)v335;
                v334.i32[2] = *(_DWORD *)(v335 + 8);
                v334 = vaddq_f32(v339, vmulq_f32(v338, v334));
                *(_DWORD *)(v335 + 8) = v334.i32[2];
                *(_QWORD *)v335 = v334.i64[0];
                v335 += 12;
              }
              while (v335 != v336);
            }
            sub_22316F8F4((uint64_t *)v387);
          }
        }
        kdebug_trace();
        if (SBYTE7(v386) < 0)
        {
          operator delete((void *)__p);
          LOBYTE(v387[0]) = 0;
          v388[0] = 0;
          if (*(_BYTE *)(v369 + 298))
          {
LABEL_411:
            sub_223993D5C(*(_QWORD *)(v10[2] + 8), (uint64_t *)(v369 + 40808), (uint64_t)info);
            sub_223937640((uint64_t)v387, (__n128 *)info);
            if ((_BYTE)v380 && *(_QWORD *)info)
            {
              sub_22393771C((uint64_t)info, *(uint64_t *)info);
              operator delete(*(void **)info);
            }
            v340 = (_BYTE *)*v10;
            v341 = (char *)(*v10 + 67);
LABEL_420:
            v342 = (uint64_t)(v340 + 16);
            if (!v340[40])
              v342 = 0;
            sub_223987218(*(_QWORD *)(v10[2] + 8), v202, (uint64_t)v387, v369 + 40664, v340[64], v340[65], *v341, (uint64_t)info, v342, v340[40], v362, v364, a3);
            sub_2235628FC((char **)a4, (uint64_t)info);
            if ((_BYTE)v380)
            {
              v343 = *(_QWORD *)info;
              if (*(_QWORD *)info)
              {
                v344 = *(_QWORD *)&info[8];
                v345 = *(void **)info;
                if (*(_QWORD *)&info[8] != *(_QWORD *)info)
                {
                  do
                  {
                    v346 = *(std::__shared_weak_count **)(v344 - 96);
                    if (v346)
                    {
                      v347 = (unint64_t *)&v346->__shared_owners_;
                      do
                        v348 = __ldaxr(v347);
                      while (__stlxr(v348 - 1, v347));
                      if (!v348)
                      {
                        ((void (*)(std::__shared_weak_count *))v346->__on_zero_shared)(v346);
                        std::__shared_weak_count::__release_weak(v346);
                      }
                    }
                    v344 -= 120;
                  }
                  while (v344 != v343);
                  v345 = *(void **)info;
                }
                *(_QWORD *)&info[8] = v343;
                operator delete(v345);
                v10 = v367;
              }
            }
            sub_223198030(v369 + 2832, *(_QWORD **)(v369 + 2840));
            *(_QWORD *)(v369 + 2832) = v369 + 2840;
            *(_QWORD *)(v369 + 2848) = 0;
            *(_QWORD *)(v369 + 2840) = 0;
            sub_223198030(v369 + 2696, *(_QWORD **)(v369 + 2704));
            *(_QWORD *)(v369 + 2696) = v369 + 2704;
            *(_QWORD *)(v369 + 2712) = 0;
            *(_QWORD *)(v369 + 2704) = 0;
            if (v388[0] && *(_QWORD *)&v387[0])
            {
              sub_22393771C((uint64_t)v387, *(uint64_t *)&v387[0]);
              operator delete(*(void **)&v387[0]);
            }
            goto LABEL_437;
          }
LABEL_416:
          sub_223992000(*(_QWORD *)(v10[2] + 8), *(_QWORD *)(*v10 + 8) + 328, (uint64_t)info);
          sub_223937640((uint64_t)v387, (__n128 *)info);
          if ((_BYTE)v380 && *(_QWORD *)info)
          {
            sub_22393771C((uint64_t)info, *(uint64_t *)info);
            operator delete(*(void **)info);
          }
          v340 = (_BYTE *)*v10;
          v341 = (char *)(*v10 + 66);
          goto LABEL_420;
        }
LABEL_410:
        LOBYTE(v387[0]) = 0;
        v388[0] = 0;
        if (*(_BYTE *)(v369 + 298))
          goto LABEL_411;
        goto LABEL_416;
      }
    }
  }
LABEL_314:
  *(_BYTE *)a4 = 0;
  *(_BYTE *)(a4 + 32) = 0;
  if (v201 != 2)
    goto LABEL_328;
LABEL_315:
  sub_2239940AC(*(_QWORD *)(v10[2] + 8), v202, v369 + 39920, v369 + 40664, (float32x2_t *)&v381, v362, 25, (uint64_t)v387, *(float *)(*v10 + 68), v364, a3);
  sub_2235628FC((char **)a4, (uint64_t)v387);
  if (v388[0])
  {
    v279 = *(_QWORD *)&v387[0];
    if (*(_QWORD *)&v387[0])
    {
      v280 = *((_QWORD *)&v387[0] + 1);
      v281 = *(void **)&v387[0];
      if (*((_QWORD *)&v387[0] + 1) != *(_QWORD *)&v387[0])
      {
        do
        {
          v282 = *(std::__shared_weak_count **)(v280 - 96);
          if (v282)
          {
            v283 = (unint64_t *)&v282->__shared_owners_;
            do
              v284 = __ldaxr(v283);
            while (__stlxr(v284 - 1, v283));
            if (!v284)
            {
              ((void (*)(std::__shared_weak_count *))v282->__on_zero_shared)(v282);
              std::__shared_weak_count::__release_weak(v282);
            }
          }
          v280 -= 120;
        }
        while (v280 != v279);
        v281 = *(void **)&v387[0];
      }
      *((_QWORD *)&v387[0] + 1) = v279;
      operator delete(v281);
      v10 = v367;
    }
  }
LABEL_437:
  if (v10[14])
  {
    v349 = (_QWORD *)v10[13];
    if (v349)
    {
      do
      {
        v350 = (_QWORD *)*v349;
        operator delete(v349);
        v349 = v350;
      }
      while (v350);
    }
    v10[13] = 0;
    v351 = v10[12];
    if (v351)
    {
      for (i = 0; i != v351; ++i)
        *(_QWORD *)(v10[11] + 8 * i) = 0;
    }
    v10[14] = 0;
  }
  kdebug_trace();
}

void sub_223931E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  void *v59;

  __cxa_guard_abort(&qword_255795560);
  operator delete(v59);
  sub_2231874DC((uint64_t)&a43);
  if (a59 < 0)
  {
    operator delete(__p);
    sub_2231874DC((uint64_t)&a35);
    _Unwind_Resume(a1);
  }
  sub_2231874DC((uint64_t)&a35);
  _Unwind_Resume(a1);
}

void sub_223932564(uint64_t a1, uint64_t a2, const char *a3)
{
  size_t v6;
  void *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  __int128 v12;
  void *__dst[2];
  unint64_t v14;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v6 = strlen(a3);
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_22316DBC0();
    v7 = (void *)v6;
    if (v6 >= 0x17)
    {
      v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v9 = v6 | 7;
      v10 = v9 + 1;
      v8 = (void **)operator new(v9 + 1);
      __dst[1] = v7;
      v14 = v10 | 0x8000000000000000;
      __dst[0] = v8;
    }
    else
    {
      HIBYTE(v14) = v6;
      v8 = __dst;
      if (!v6)
      {
LABEL_10:
        *((_BYTE *)v7 + (_QWORD)v8) = 0;
        *(_QWORD *)&v12 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
        *((_QWORD *)&v12 + 1) = 2;
        v11 = sub_2241471F8();
        sub_223452794((uint64_t)v11, a1, a2, (uint64_t)__dst, &v12);
        if (SHIBYTE(v14) < 0)
          operator delete(__dst[0]);
        return;
      }
    }
    memcpy(v8, a3, (size_t)v7);
    goto LABEL_10;
  }
}

void sub_223932690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2239326AC(uint64_t a1, int32x2_t *a2, uint64_t a3, uint64_t a4, float32x4_t a5)
{
  float32x4_t v8;
  float v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  float v26;
  int v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33[14];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  __int128 v38;
  _BYTE v39[32];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  int v50;

  v36 = 1065353216;
  v37 = 0;
  a5.i64[0] = *(_QWORD *)a4;
  a5.i32[2] = *(_DWORD *)(a4 + 8);
  v8 = vabsq_f32(a5);
  v9 = v8.f32[1];
  v10 = v8.f32[1] > v8.f32[0];
  if (v8.f32[1] <= v8.f32[0])
    v9 = v8.f32[0];
  if (v9 < v8.f32[2])
    v10 = 2;
  if (v10 == 1)
  {
    if (a5.f32[1] < 0.0)
      v11 = 2;
    else
      v11 = 3;
  }
  else if (v10)
  {
    if (*(float *)(a4 + 4 * v10) < 0.0)
      v11 = 4;
    else
      v11 = 5;
  }
  else
  {
    v11 = a5.f32[0] >= 0.0;
  }
  v38 = xmmword_224651370;
  sub_223207E58(&v45, (int *)&v38);
  *(_OWORD *)&v39[16] = v46;
  v40 = v47;
  v41 = v48;
  v42 = v49;
  v43 = v50;
  v44 = 0xA0000000ALL;
  *(_QWORD *)v39 = &off_24EC207B8;
  *(_QWORD *)&v39[8] = &off_24EC20868;
  sub_224002D14((uint64_t)v39, a2, &v36, (uint64_t)v33, 5.0);
  *(_DWORD *)&v39[28] = 0;
  memset(v39, 0, 24);
  sub_22339E528((uint64_t)v39, (uint64_t)(*((_QWORD *)&v34 + 1) - v34) >> 2);
  v13 = *((_QWORD *)&v34 + 1);
  v12 = v34;
  if ((_QWORD)v34 != *((_QWORD *)&v34 + 1))
  {
    v14 = *(_QWORD *)&v39[8];
    do
    {
      v45 = *(_QWORD *)v12;
      LODWORD(v46) = v45;
      if (v14 >= *(_QWORD *)&v39[16])
      {
        v17 = sub_2233B29C0((unint64_t *)v39, &v45);
      }
      else
      {
        v16 = v45;
        *(_DWORD *)(v14 + 8) = v46;
        *(_QWORD *)v14 = v16;
        v17 = v14 + 12;
      }
      *(_QWORD *)&v39[8] = v17;
      v45 = *(_QWORD *)(v12 + 4);
      LODWORD(v46) = v45;
      if (v17 >= *(_QWORD *)&v39[16])
      {
        v19 = sub_2233B29C0((unint64_t *)v39, &v45);
      }
      else
      {
        v18 = v45;
        *(_DWORD *)(v17 + 8) = v46;
        *(_QWORD *)v17 = v18;
        v19 = v17 + 12;
      }
      *(_QWORD *)&v39[8] = v19;
      v20 = *(_DWORD *)v12;
      LODWORD(v45) = *(_DWORD *)(v12 + 8);
      HIDWORD(v45) = v20;
      LODWORD(v46) = v45;
      if (v19 < *(_QWORD *)&v39[16])
      {
        v15 = v45;
        *(_DWORD *)(v19 + 8) = v46;
        *(_QWORD *)v19 = v15;
        v14 = v19 + 12;
      }
      else
      {
        v14 = sub_2233B29C0((unint64_t *)v39, &v45);
      }
      *(_QWORD *)&v39[8] = v14;
      v12 += 12;
    }
    while (v12 != v13);
    v12 = v34;
  }
  if (v12)
  {
    *((_QWORD *)&v34 + 1) = v12;
    v45 = v12;
    LODWORD(v46) = -1431655765 * ((unint64_t)(v35 - v12) >> 2);
    if (HIDWORD(v35) == -1)
      sub_22316DD70();
    *(_QWORD *)&v38 = &v45;
    ((void (*)(__int128 *, char *))off_24EC5CEB8[HIDWORD(v35)])(&v38, (char *)&v35 + 8);
  }
  v34 = *(_OWORD *)v39;
  v35 = *(_OWORD *)&v39[16];
  __asm { FMOV            V0.2S, #1.0 }
  v45 = _D0;
  LODWORD(v46) = 1065353216;
  *(_QWORD *)v39 = *(_QWORD *)a3;
  *(_DWORD *)&v39[8] = *(_DWORD *)(a3 + 8);
  v26 = 0.2;
  *(_QWORD *)&v39[12] = 0x3FD9999A3F000000;
  v27 = 0;
  v28 = 0;
  switch(v11)
  {
    case 0:
      break;
    case 1:
      goto LABEL_36;
    case 2:
      v28 = 1;
      goto LABEL_33;
    case 3:
      v27 = 1;
      goto LABEL_36;
    case 4:
      v28 = 2;
LABEL_33:
      v26 = 0.2;
      break;
    default:
      v27 = 2;
LABEL_36:
      v26 = 1.5;
      v28 = v27;
      break;
  }
  v39[20] = v28;
  *(float *)&v39[4 * v28] = *(float *)&v39[4 * v28] - v26;
  sub_223CE71EC((uint64_t)v39, 8u, (unint64_t *)a1);
  v29 = *(_QWORD *)(a1 + 32);
  *(_DWORD *)(a1 + 64) = 1;
  v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 2);
  v31 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 40) - v29) >> 2);
  if (v30 <= v31)
  {
    if (v30 < v31)
      *(_QWORD *)(a1 + 40) = v29 + 4 * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 2);
  }
  else
  {
    sub_2235341F4(a1 + 32, v30 - v31, &v45);
  }
  sub_22414E9E0(a1, (uint64_t)v33);
  return sub_22316F8F4(v33);
}

void sub_223932A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22316F8F4(&a9);
  _Unwind_Resume(a1);
}

void sub_223932A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_22317ED18((uint64_t *)(v9 - 240));
  sub_22316F8F4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_223932AD8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32) && *(_QWORD *)a1)
  {
    sub_22393771C(a1, *(_QWORD *)a1);
    operator delete(*(void **)a1);
  }
  return a1;
}

double sub_223932B18@<D0>(uint64_t a1@<X0>, char a2@<W2>, int a3@<W3>, uint64_t a4@<X8>, int32x4_t a5@<Q2>, int32x4_t a6@<Q3>, float32x4_t a7@<Q5>)
{
  float32x2_t v7;
  uint64_t v11;
  uint64_t *v12;
  float32x4_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  float32x4_t v17;
  uint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  float32x4_t v25;
  float32x2_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  std::mutex *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *i;
  uint64_t *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *p_shared_owners;
  unint64_t v40;
  __int128 v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  int *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char *v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  int *j;
  _QWORD *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  char *v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  float32x4_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int32x4_t v82;
  float32x4_t v83;
  float32x4_t v84;
  int8x16_t v85;
  float32x4_t v86;
  int8x16_t v87;
  float32x4_t v88;
  float32x4_t v89;
  int32x4_t v90;
  int8x16_t v91;
  float32x4_t v92;
  int8x16_t v93;
  int8x16_t v94;
  int8x16_t v95;
  float32x4_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  std::mutex *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  float32x2_t v104;
  float32x2_t v105;
  float32x2_t v106;
  float32x2_t v107;
  float32x2_t v108;
  float32x4_t v109;
  int8x16_t v110;
  float32x4_t v111;
  float32x2_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  float32x4_t v116;
  float32x4_t v117;
  float32x4_t v118;
  float32x4_t v119;
  std::string::size_type size;
  std::string *v121;
  std::string::size_type v122;
  std::string::size_type v123;
  int v124;
  float32x2_t v127;
  float32x2_t v128;
  float32x2_t v129;
  float32x2_t v130;
  float32x2_t v131;
  float32x4_t v132;
  int8x16_t v133;
  float32x4_t v134;
  float32x2_t v135;
  float32x4_t v136;
  float32x4_t v137;
  float32x4_t v138;
  float32x4_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t k;
  double result;
  float32x4_t v148;
  float32x4_t v149;
  float32x4_t v150;
  uint64_t v151;
  float32x4_t v153;
  float32x2_t *v154;
  float32x2_t *v155;
  float32x4_t v156;
  float32x4_t v157;
  float32x4_t v158;
  float32x4_t v159;
  void *__p[2];
  __int128 v161;
  int v162;
  std::string v163;
  _QWORD v164[2];
  _OWORD v165[4];
  __int128 v166;
  unint64_t v167;
  char v168;
  __int128 v169;
  uint64_t (**v170)();
  __int128 v171;
  std::string v172;
  __int128 v173;
  _BYTE v174[32];
  __int128 v175;
  __int128 v176;
  __int128 v177;
  char v178;
  int32x4_t v179;
  char v180;
  uint64_t v181;

  v181 = *MEMORY[0x24BDAC8D0];
  v11 = a1 + 40664;
  v12 = (uint64_t *)(a1 + 39976);
  v166 = 0uLL;
  v167 = 0;
  v168 = 1;
  if (!a3 && !*(_BYTE *)(a1 + 40800) && !*(_BYTE *)(a1 + 40618))
  {
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 24) = 1;
    *(_BYTE *)(a4 + 32) = 1;
    return result;
  }
  a5.i64[0] = *(_QWORD *)(a1 + 40148);
  a5.i32[2] = *(_DWORD *)(a1 + 40156);
  a6.i64[0] = *(_QWORD *)(a1 + 40164);
  a6.i32[2] = *(_DWORD *)(a1 + 40172);
  v13 = (float32x4_t)vzip1q_s32(a5, a6);
  v14 = (int8x16_t)v13;
  v14.i32[2] = *(_QWORD *)(a1 + 40180);
  a7.i64[0] = *(_QWORD *)(a1 + 40196);
  a7.i32[2] = *(_DWORD *)(a1 + 40204);
  v15 = (int8x16_t)vnegq_f32(a7);
  v16 = (int8x16_t)vtrn2q_s32(a5, a6);
  v16.i32[2] = HIDWORD(*(_QWORD *)(a1 + 40180));
  v7.i32[0] = *(_DWORD *)(a1 + 40188);
  v17 = (float32x4_t)vzip2q_s32(a5, a6);
  *(float32x2_t *)v13.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v13.f32, *(float *)v15.i32), *(float32x2_t *)v16.i8, *(float32x2_t *)a7.f32, 1), *(float32x2_t *)v17.f32, a7, 2);
  v17.i32[2] = v7.i32[0];
  v13.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(a1 + 40180), *(float32x2_t *)v15.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(a1 + 40180), 1), *(float32x2_t *)a7.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL), v7).u32[0]);
  v18 = vextq_s8(v16, v14, 4uLL).u64[0];
  v14.i32[3] = 0;
  v19.i32[3] = 0;
  v19.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v16, 0).i32[3];
  *(uint64_t *)((char *)v19.i64 + 4) = v18;
  v17.i64[1] = vdupq_laneq_s32((int32x4_t)v17, 2).u32[0];
  *(_BYTE *)(a1 + 40800) = 0;
  v155 = (float32x2_t *)(a1 + 40244);
  v154 = (float32x2_t *)(a1 + 40260);
  v20 = *(float32x4_t *)(a1 + 40260);
  v21 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v14, COERCE_FLOAT(*(_OWORD *)(a1 + 40228))), v19, *(float32x2_t *)(a1 + 40228), 1), v17, *(float32x4_t *)(a1 + 40228), 2), v13, *(float32x4_t *)(a1 + 40228), 3);
  v22 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v14, COERCE_FLOAT(*(_OWORD *)(a1 + 40244))), v19, *(float32x2_t *)(a1 + 40244), 1), v17, *(float32x4_t *)(a1 + 40244), 2), v13, *(float32x4_t *)(a1 + 40244), 3);
  v165[0] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v14, COERCE_FLOAT(*(_OWORD *)(a1 + 40212))), v19, *(float32x2_t *)(a1 + 40212), 1), v17, *(float32x4_t *)(a1 + 40212), 2), v13, *(float32x4_t *)(a1 + 40212), 3);
  v165[1] = v21;
  v165[2] = v22;
  v165[3] = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v14, v20.f32[0]), v19, *(float32x2_t *)v20.f32, 1), v17, v20, 2), v13, v20, 3);
  v164[0] = a1;
  v164[1] = v165;
  sub_224569D7C();
  sub_224569A80();
  if (!os_variant_has_internal_diagnostics())
    goto LABEL_56;
  v27 = sub_2241471F8();
  v28 = v27[2];
  if (!v28)
  {
    if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
    {
      abort();
    }
    v28 = v27[2];
  }
  v29 = *(_QWORD *)(v28 + 64);
  v30 = (std::mutex *)(v29 + 32);
  std::mutex::lock((std::mutex *)(v29 + 32));
  v32 = *(_QWORD *)(v29 + 96);
  v31 = *(_QWORD *)(v29 + 104);
  std::mutex::unlock(v30);
  if (v32 == v31)
    goto LABEL_56;
  *(_QWORD *)&v173 = "cv3d.recon.";
  *((_QWORD *)&v173 + 1) = 11;
  *(_QWORD *)v174 = "PRR.AccumulatedResult";
  *(_QWORD *)&v174[8] = 21;
  sub_2231A9820((uint64_t)&v173, (uint64_t)&v174[16], 0, 0, &v163);
  sub_2241471F8();
  v33 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33))
  {
    v156 = 0u;
    v157 = 0u;
    v158.i32[0] = 728325616;
    kdebug_trace();
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33))
    {
      *(_QWORD *)&v169 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
      *((_QWORD *)&v169 + 1) = 2;
      v34 = sub_2241471F8();
      if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33))
      {
        sub_2241498F4((uint64_t)&v173, 0);
        for (i = v12; ; sub_22414E9E0((uint64_t)&v173, (uint64_t)(i + 4)))
        {
          i = (_QWORD *)*i;
          if (!i)
            break;
        }
        LOBYTE(__p[0]) = 0;
        BYTE8(v161) = 0;
        sub_22329F414((uint64_t)&v173, (__int128 *)__p, &v169, &v172);
        if (BYTE8(v161) && SBYTE7(v161) < 0)
          operator delete(__p[0]);
        sub_22316F8F4((uint64_t *)&v173);
        v36 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 56))(v33);
        v37 = *v36;
        v38 = (std::__shared_weak_count *)v36[1];
        if (v38)
        {
          p_shared_owners = (unint64_t *)&v38->__shared_owners_;
          do
            v40 = __ldxr(p_shared_owners);
          while (__stxr(v40 + 1, p_shared_owners));
        }
        v41 = *(_OWORD *)&v172.__r_.__value_.__r.__words[1];
        v170 = &off_24EC6A3B8;
        v171 = *(_OWORD *)&v172.__r_.__value_.__r.__words[1];
        *(_OWORD *)&v172.__r_.__value_.__r.__words[1] = 0uLL;
        *(_QWORD *)&v173 = v37;
        *((_QWORD *)&v173 + 1) = v38;
        if (v38)
        {
          v42 = (unint64_t *)&v38->__shared_owners_;
          do
            v43 = __ldxr(v42);
          while (__stxr(v43 + 1, v42));
        }
        *(_QWORD *)v174 = &off_24EC6A3B8;
        *(_OWORD *)&v174[8] = v41;
        if (*((_QWORD *)&v41 + 1))
        {
          v44 = (unint64_t *)(*((_QWORD *)&v41 + 1) + 8);
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
        }
        (*(void (**)(uint64_t *, __int128 *))(*v34 + 16))(v34, &v173);
        v46 = *(std::__shared_weak_count **)&v174[16];
        if (*(_QWORD *)&v174[16])
        {
          v47 = (unint64_t *)(*(_QWORD *)&v174[16] + 8);
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        v49 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
        if (*((_QWORD *)&v173 + 1))
        {
          v50 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
          do
            v51 = __ldaxr(v50);
          while (__stlxr(v51 - 1, v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
            std::__shared_weak_count::__release_weak(v49);
          }
        }
        v52 = (std::__shared_weak_count *)*((_QWORD *)&v171 + 1);
        if (*((_QWORD *)&v171 + 1))
        {
          v53 = (unint64_t *)(*((_QWORD *)&v171 + 1) + 8);
          do
            v54 = __ldaxr(v53);
          while (__stlxr(v54 - 1, v53));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
            std::__shared_weak_count::__release_weak(v52);
          }
        }
        if (v38)
        {
          v55 = (unint64_t *)&v38->__shared_owners_;
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v57 = (std::__shared_weak_count *)v172.__r_.__value_.__r.__words[2];
        if (v172.__r_.__value_.__r.__words[2])
        {
          v58 = (unint64_t *)(v172.__r_.__value_.__r.__words[2] + 8);
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
      }
    }
    kdebug_trace();
  }
  if (SHIBYTE(v163.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v163.__r_.__value_.__l.__data_);
    v151 = a4;
    v168 = *(_BYTE *)(v11 + 137);
    if (a3 == 1)
      goto LABEL_58;
  }
  else
  {
LABEL_56:
    v151 = a4;
    v168 = *(_BYTE *)(v11 + 137);
    if (a3 == 1)
      goto LABEL_58;
  }
  if (!*((_BYTE *)v12 + 642))
  {
    for (j = *(int **)(v11 + 16); j; j = *(int **)j)
    {
      v156.i64[0] = (uint64_t)(j + 4);
      v70 = sub_223939EBC(a1 + 39960, j + 4, (uint64_t)&unk_2245BA939, (uint64_t **)&v156);
      sub_223933BA4((uint64_t)&v173, v164, j + 4, (uint64_t)(v70 + 4));
      v71 = *((_QWORD *)&v166 + 1);
      if (*((_QWORD *)&v166 + 1) >= v167)
      {
        v75 = sub_223533394((void **)&v166, (uint64_t)&v173);
        v76 = *(std::__shared_weak_count **)&v174[8];
        *((_QWORD *)&v166 + 1) = v75;
        if (*(_QWORD *)&v174[8])
        {
          v77 = (unint64_t *)(*(_QWORD *)&v174[8] + 8);
          do
            v78 = __ldaxr(v77);
          while (__stlxr(v78 - 1, v77));
          if (!v78)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      else
      {
        **((_OWORD **)&v166 + 1) = v173;
        *(_OWORD *)(v71 + 16) = *(_OWORD *)v174;
        *(_BYTE *)(v71 + 32) = 0;
        *(_BYTE *)(v71 + 96) = 0;
        if (v178)
        {
          v72 = *(_OWORD *)&v174[16];
          v73 = v175;
          v24.i32[3] = HIDWORD(v176);
          v74 = v177;
          *(_OWORD *)(v71 + 64) = v176;
          *(_OWORD *)(v71 + 80) = v74;
          *(_OWORD *)(v71 + 32) = v72;
          *(_OWORD *)(v71 + 48) = v73;
          *(_BYTE *)(v71 + 96) = 1;
        }
        v23 = v179;
        *(_BYTE *)(v71 + 116) = v180;
        *(int32x4_t *)(v71 + 100) = v23;
        *((_QWORD *)&v166 + 1) = v71 + 120;
      }
    }
    goto LABEL_82;
  }
LABEL_58:
  v60 = (int *)*v12;
  if (*v12)
  {
    do
    {
      sub_223933BA4((uint64_t)&v173, v164, v60 + 4, (uint64_t)(v60 + 8));
      v61 = *((_QWORD *)&v166 + 1);
      if (*((_QWORD *)&v166 + 1) >= v167)
      {
        v65 = sub_223533394((void **)&v166, (uint64_t)&v173);
        v66 = *(std::__shared_weak_count **)&v174[8];
        *((_QWORD *)&v166 + 1) = v65;
        if (*(_QWORD *)&v174[8])
        {
          v67 = (unint64_t *)(*(_QWORD *)&v174[8] + 8);
          do
            v68 = __ldaxr(v67);
          while (__stlxr(v68 - 1, v67));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
            std::__shared_weak_count::__release_weak(v66);
          }
        }
      }
      else
      {
        **((_OWORD **)&v166 + 1) = v173;
        *(_OWORD *)(v61 + 16) = *(_OWORD *)v174;
        *(_BYTE *)(v61 + 32) = 0;
        *(_BYTE *)(v61 + 96) = 0;
        if (v178)
        {
          v62 = *(_OWORD *)&v174[16];
          v63 = v175;
          v24.i32[3] = HIDWORD(v176);
          v64 = v177;
          *(_OWORD *)(v61 + 64) = v176;
          *(_OWORD *)(v61 + 80) = v64;
          *(_OWORD *)(v61 + 32) = v62;
          *(_OWORD *)(v61 + 48) = v63;
          *(_BYTE *)(v61 + 96) = 1;
        }
        v23 = v179;
        *(_BYTE *)(v61 + 116) = v180;
        *(int32x4_t *)(v61 + 100) = v23;
        *((_QWORD *)&v166 + 1) = v61 + 120;
      }
      v60 = *(int **)v60;
    }
    while (v60);
  }
LABEL_82:
  v23.i64[0] = *(uint64_t *)((char *)v12 + 172);
  v23.i32[2] = *((_DWORD *)v12 + 45);
  v24.i64[0] = *(uint64_t *)((char *)v12 + 188);
  v24.i32[2] = *((_DWORD *)v12 + 49);
  v25.i64[0] = *(uint64_t *)((char *)v12 + 220);
  v25.i32[2] = *((_DWORD *)v12 + 57);
  v79.i64[0] = vzip1q_s32(v23, v24).u64[0];
  v80 = (int8x16_t)vnegq_f32(v25);
  v81 = (int8x16_t)vtrn2q_s32(v23, v24);
  v81.i32[2] = HIDWORD(*(unint64_t *)((char *)v12 + 204));
  v26.i32[0] = *((_DWORD *)v12 + 53);
  v82 = vzip2q_s32(v23, v24);
  *(float32x2_t *)v83.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v79.f32, *(float *)v80.i32), *(float32x2_t *)v81.i8, *(float32x2_t *)v25.f32, 1), *(float32x2_t *)v82.i8, v25, 2);
  v84 = (float32x4_t)v82;
  v84.i32[2] = v26.i32[0];
  v85 = (int8x16_t)vdupq_laneq_s32((int32x4_t)v84, 2);
  v83.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)((char *)v12 + 204), *(float32x2_t *)v80.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)((char *)v12 + 204), 1), *(float32x2_t *)v25.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), v26).u32[0]);
  v79.i64[1] = *(uint64_t *)((char *)v12 + 204);
  v86.i32[3] = 0;
  v86.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v81, 0).i32[3];
  *(uint64_t *)((char *)v86.i64 + 4) = vextq_s8(v81, v85, 4uLL).u64[0];
  v84.i64[1] = v85.u32[0];
  v87 = *(int8x16_t *)(a1 + 40528);
  v88 = *(float32x4_t *)(a1 + 40544);
  v89 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v79, COERCE_FLOAT(*(_OWORD *)((char *)v12 + 236))), v86, *(float32x2_t *)((char *)v12 + 236), 1), v84, *(float32x4_t *)((char *)v12 + 236), 2), v83, *(float32x4_t *)((char *)v12 + 236), 3);
  v90 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v79, COERCE_FLOAT(*(_OWORD *)((char *)v12 + 252))), v86, *(float32x2_t *)((char *)v12 + 252), 1), v84, *(float32x4_t *)((char *)v12 + 252), 2), v83, *(float32x4_t *)((char *)v12 + 252), 3);
  v91 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v79, COERCE_FLOAT(*(_OWORD *)v155->f32)), v86, *v155, 1), v84, *(float32x4_t *)v155->f32, 2), v83, *(float32x4_t *)v155->f32, 3);
  v92 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v79, COERCE_FLOAT(*(_OWORD *)v154->f32)), v86, *v154, 1), v84, *(float32x4_t *)v154->f32, 2), v83, *(float32x4_t *)v154->f32, 3);
  v84.i64[0] = vtrn2q_s32((int32x4_t)v89, v90).u64[0];
  v93 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v84.f32, 1);
  v83.i64[0] = vzip2q_s32((int32x4_t)v89, v90).u64[0];
  v94 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v84.f32, 0);
  *(int32x2_t *)v81.i8 = vzip1_s32(*(int32x2_t *)v89.f32, *(int32x2_t *)v90.i8);
  *(float32x2_t *)v89.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v81.i8, COERCE_FLOAT(v92.i32[0] ^ 0x80000000)), *(float32x2_t *)v84.f32, (float32x2_t)(v92.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v83.f32, COERCE_FLOAT(v92.i32[2] ^ 0x80000000));
  v80.i64[0] = vextq_s8(v91, v91, 8uLL).u64[0];
  *(float32x2_t *)v84.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v91.i8, (float32x2_t)(v92.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v92.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v91.i8, 1), (float32x2_t)(v92.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v80.i8);
  v92.i64[0] = vextq_s8(v94, v93, 0xCuLL).u64[0];
  v89.i64[1] = v84.i64[0];
  v95 = (int8x16_t)vnegq_f32(v88);
  v149 = *(float32x4_t *)(a1 + 40512);
  v150 = *(float32x4_t *)(a1 + 40496);
  *(float32x2_t *)v93.i8 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32(*(int32x2_t *)(a1 + 40496), *(int32x2_t *)(a1 + 40512)), *(float *)v95.i32), (float32x2_t)vzip2_s32(*(int32x2_t *)(a1 + 40496), *(int32x2_t *)(a1 + 40512)), *(float32x2_t *)v88.f32, 1), (float32x2_t)*(_OWORD *)&vzip2q_s32((int32x4_t)v150, (int32x4_t)v149), v88, 2);
  v148 = v88;
  *(float32x2_t *)v94.i8 = vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)v87.i8, *(float32x2_t *)v95.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v87.i8, 1), *(float32x2_t *)v88.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v95, v95, 8uLL), (float32x2_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL));
  *(float32x2_t *)v95.i8 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v81.i8, *(float *)v93.i32), *(float32x2_t *)v92.f32, *(float32x2_t *)v93.i8, 1), *(float32x2_t *)v83.f32, *(float *)v94.i32);
  v95.u64[1] = (unint64_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v91.i8, *(float32x2_t *)v93.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v93.i8, 1), *(float32x2_t *)v91.i8, 1), *(float32x2_t *)v94.i8, *(float32x2_t *)v80.i8);
  v96 = vaddq_f32((float32x4_t)v95, v89);
  LODWORD(v171) = v96.i32[2];
  v170 = (uint64_t (**)())v96.i64[0];
  if (a2)
  {
    v153 = (float32x4_t)v87;
    *(_QWORD *)&v173 = "cv3d.recon.";
    *((_QWORD *)&v173 + 1) = 11;
    *(_QWORD *)v174 = "PRR";
    *(_QWORD *)&v174[8] = 3;
    sub_2231A9820((uint64_t)&v173, (uint64_t)&v174[16], 0, 0, &v172);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v97 = sub_2241471F8();
      v98 = v97[2];
      if (!v98)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v98 = v97[2];
      }
      v99 = *(_QWORD *)(v98 + 64);
      v100 = (std::mutex *)(v99 + 32);
      std::mutex::lock((std::mutex *)(v99 + 32));
      v102 = *(_QWORD *)(v99 + 96);
      v101 = *(_QWORD *)(v99 + 104);
      std::mutex::unlock(v100);
      if (v102 != v101)
      {
        sub_2241471F8();
        v103 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v103 + 24))(v103))
        {
          *(_OWORD *)__p = 0u;
          v161 = 0u;
          v162 = 728325608;
          kdebug_trace();
          v104 = *(float32x2_t *)((char *)v12 + 172);
          v105.i32[0] = *((_DWORD *)v12 + 45);
          v106 = *(float32x2_t *)((char *)v12 + 188);
          v107 = *(float32x2_t *)((char *)v12 + 204);
          v108.i32[0] = *((_DWORD *)v12 + 53);
          v109.i64[0] = *(uint64_t *)((char *)v12 + 220);
          v109.i32[2] = *((_DWORD *)v12 + 57);
          v110 = (int8x16_t)vnegq_f32(v109);
          v111 = vmulq_n_f32(v150, v105.f32[0]);
          v105.i32[1] = *((_DWORD *)v12 + 49);
          v112 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32((int32x2_t)v104, (int32x2_t)v106), *(float *)v110.i32), (float32x2_t)vzip2_s32((int32x2_t)v104, (int32x2_t)v106), *(float32x2_t *)v109.f32, 1), v105, v109, 2);
          v105.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v107, *(float32x2_t *)v110.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v107, 1), *(float32x2_t *)v109.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL), v108).u32[0];
          v113 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v150, v104.f32[0]), v149, v106.f32[0]), v153, v107.f32[0]), (float32x4_t)0, v148);
          v114 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v150, v104, 1), v149, v106, 1), v153, v107, 1), (float32x4_t)0, v148);
          v115 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v111, v149, v105.f32[1]), v153, v108.f32[0]), (float32x4_t)0, v148);
          v116 = vaddq_f32(v148, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v150, v112.f32[0]), v149, v112, 1), v153, v105.f32[0]));
          v117 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v113, COERCE_FLOAT(*(_OWORD *)((char *)v12 + 252))), v114, *(float32x2_t *)((char *)v12 + 252), 1), v115, *(float32x4_t *)((char *)v12 + 252), 2), v116, *(float32x4_t *)((char *)v12 + 252), 3);
          v118 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v113, COERCE_FLOAT(*(_OWORD *)v155->f32)), v114, *v155, 1), v115, *(float32x4_t *)v155->f32, 2), v116, *(float32x4_t *)v155->f32, 3);
          v119 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v113, COERCE_FLOAT(*(_OWORD *)v154->f32)), v114, *v154, 1), v115, *(float32x4_t *)v154->f32, 2), v116, *(float32x4_t *)v154->f32, 3);
          v156 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v113, COERCE_FLOAT(*(_OWORD *)((char *)v12 + 236))), v114, *(float32x2_t *)((char *)v12 + 236), 1), v115, *(float32x4_t *)((char *)v12 + 236), 2), v116, *(float32x4_t *)((char *)v12 + 236), 3);
          v157 = v117;
          v158 = v118;
          v159 = v119;
          sub_2239326AC((uint64_t)&v173, (int32x2_t *)&v156, (uint64_t)&v170, a1 + 40560, v114);
          sub_223932564(v103, (uint64_t)&v173, "user");
          sub_22316F8F4((uint64_t *)&v173);
          kdebug_trace();
        }
      }
    }
    *(_OWORD *)__p = 0u;
    v161 = 0u;
    v162 = 728325624;
    kdebug_trace();
    size = HIBYTE(v172.__r_.__value_.__r.__words[2]);
    if ((v172.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v172.__r_.__value_.__l.__size_;
    if (size >= 0x11)
    {
      v121 = &v172;
      if ((v172.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v121 = (std::string *)v172.__r_.__value_.__r.__words[0];
      v122 = v121->__r_.__value_.__r.__words[0];
      v123 = v121->__r_.__value_.__l.__size_;
      v124 = v121->__r_.__value_.__s.__data_[16];
      if (v122 == 0x6365722E64337663 && v123 == 0x73746174532E6E6FLL && v124 == 46)
      {
        sub_223187510();
        v127 = *(float32x2_t *)((char *)v12 + 172);
        v128.i32[0] = *((_DWORD *)v12 + 45);
        v129 = *(float32x2_t *)((char *)v12 + 188);
        v130 = *(float32x2_t *)((char *)v12 + 204);
        v131.i32[0] = *((_DWORD *)v12 + 53);
        v132.i64[0] = *(uint64_t *)((char *)v12 + 220);
        v132.i32[2] = *((_DWORD *)v12 + 57);
        v133 = (int8x16_t)vnegq_f32(v132);
        v134 = vmulq_n_f32(v150, v128.f32[0]);
        v128.i32[1] = *((_DWORD *)v12 + 49);
        v135 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32((float32x2_t)vzip1_s32((int32x2_t)v127, (int32x2_t)v129), *(float *)v133.i32), (float32x2_t)vzip2_s32((int32x2_t)v127, (int32x2_t)v129), *(float32x2_t *)v132.f32, 1), v128, v132, 2);
        v128.i32[0] = vmla_f32(vmls_lane_f32(vmul_f32(v130, *(float32x2_t *)v133.i8), (float32x2_t)*(_OWORD *)&vdupq_lane_s32((int32x2_t)v130, 1), *(float32x2_t *)v132.f32, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v133, v133, 8uLL), v131).u32[0];
        v136 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v150, v127.f32[0]), v149, v129.f32[0]), v153, v130.f32[0]), (float32x4_t)0, v148);
        v137 = vmlaq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(v150, v127, 1), v149, v129, 1), v153, v130, 1), (float32x4_t)0, v148);
        v138 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(v134, v149, v128.f32[1]), v153, v131.f32[0]), (float32x4_t)0, v148);
        v139 = vaddq_f32(v148, vmlaq_n_f32(vmlaq_lane_f32(vmulq_n_f32(v150, v135.f32[0]), v149, v135, 1), v153, v128.f32[0]));
        v140 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v136, COERCE_FLOAT(*(_OWORD *)((char *)v12 + 252))), v137, *(float32x2_t *)((char *)v12 + 252), 1), v138, *(float32x4_t *)((char *)v12 + 252), 2), v139, *(float32x4_t *)((char *)v12 + 252), 3);
        v141 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v136, COERCE_FLOAT(*(_OWORD *)v155->f32)), v137, *v155, 1), v138, *(float32x4_t *)v155->f32, 2), v139, *(float32x4_t *)v155->f32, 3);
        v142 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v136, COERCE_FLOAT(*(_OWORD *)v154->f32)), v137, *v154, 1), v138, *(float32x4_t *)v154->f32, 2), v139, *(float32x4_t *)v154->f32, 3);
        v156 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v136, COERCE_FLOAT(*(_OWORD *)((char *)v12 + 236))), v137, *(float32x2_t *)((char *)v12 + 236), 1), v138, *(float32x4_t *)((char *)v12 + 236), 2), v139, *(float32x4_t *)((char *)v12 + 236), 3);
        v157 = v140;
        v158 = v141;
        v159 = v142;
        sub_2239326AC((uint64_t)&v173, (int32x2_t *)&v156, (uint64_t)&v170, a1 + 40560, v137);
        sub_22316F8F4((uint64_t *)&v173);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v172.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v172.__r_.__value_.__l.__data_);
  }
  if (*(_QWORD *)(v11 + 24))
  {
    v143 = *(_QWORD **)(v11 + 16);
    if (v143)
    {
      do
      {
        v144 = (_QWORD *)*v143;
        operator delete(v143);
        v143 = v144;
      }
      while (v144);
    }
    *(_QWORD *)(v11 + 16) = 0;
    v145 = *(_QWORD *)(v11 + 8);
    if (v145)
    {
      for (k = 0; k != v145; ++k)
        *(_QWORD *)(*(_QWORD *)v11 + 8 * k) = 0;
    }
    *(_QWORD *)(v11 + 24) = 0;
  }
  result = *(double *)&v166;
  *(_OWORD *)v151 = v166;
  *(_QWORD *)(v151 + 16) = v167;
  *(_BYTE *)(v151 + 24) = v168;
  *(_BYTE *)(v151 + 32) = 1;
  return result;
}

void sub_223933A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  std::__shared_weak_count *v64;
  uint64_t v65;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t *p_shared_owners;
  unint64_t v71;

  sub_2241231D8(v65);
  v67 = (std::__shared_weak_count *)a64;
  if (a64)
  {
    v68 = (unint64_t *)(a64 + 8);
    do
      v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
  sub_2241231D8((uint64_t)&a56);
  if (v64)
  {
    p_shared_owners = (unint64_t *)&v64->__shared_owners_;
    do
      v71 = __ldaxr(p_shared_owners);
    while (__stlxr(v71 - 1, p_shared_owners));
    if (!v71)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
  sub_2241231D8((uint64_t)&a60);
  sub_2231874DC((uint64_t)&a21);
  if (a39 < 0)
    operator delete(__p);
  sub_223295868(&a50);
  _Unwind_Resume(a1);
}

void sub_223933BA4(uint64_t a1, _QWORD *a2, int *a3, uint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  float32x4_t v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x2_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  const char *v20;
  unsigned __int8 v21;
  const char *v22;
  size_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  size_t v31;
  std::__shared_weak_count_vtbl *v32;
  std::__shared_weak_count *v33;
  std::__shared_weak_count *v34;
  unint64_t *p_shared_owners;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  void *v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  float32x2_t *v66;
  float32x2_t *v67;
  float32x2_t *v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x2_t *v71;
  float32x2_t *i;
  float32x2_t *v73;
  float32x2_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *__src;
  int v82;
  unint64_t v83;
  void *object;
  void *v85[2];
  __int128 v86;
  void *__p[2];
  unint64_t v88;
  char v89;
  _QWORD v90[3];
  int v91;
  const char *v92;
  int v93;
  const char *v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  uint64_t v97;
  uint64_t *v98;
  std::__shared_weak_count *v99;
  uint64_t v100;
  uint64_t v101;

  v7 = sub_223919C2C((_QWORD *)(*a2 + 40008), a3);
  v9 = v8;
  v10 = operator new(0x198uLL);
  v10[1] = 0;
  v10[2] = 0;
  *v10 = &off_24EC1F0A0;
  v11 = v10 + 3;
  sub_223180698((uint64_t)(v10 + 3), a4);
  v98 = v10 + 3;
  v99 = (std::__shared_weak_count *)v10;
  if (v10[17] == v10[18] && v10[3] != v10[4])
  {
    sub_223919B38(&v97);
    if (**(int **)(v97 + 56) > 4
      || (v16 = *(unsigned __int8 *)(v97 + 72),
          v17 = sub_22322F254(v97, "OSLogSurrogateAppender", 1, 0),
          v18 = v17,
          !v16)
      && !v17)
    {
LABEL_92:
      sub_2241498F4((uint64_t)&object, 0);
      sub_2237C2E74(v11, (uint64_t)&object);
      sub_22316F8F4((uint64_t *)&object);
      goto LABEL_93;
    }
    v90[0] = &v97;
    v90[1] = std::chrono::steady_clock::now().__d_.__rep_;
    v90[2] = std::chrono::system_clock::now().__d_.__rep_;
    v91 = 4;
    v92 = "unknown file";
    v93 = 2530;
    v95 = 0;
    v96 = 0;
    v94 = "unknown function";
    v80 = v97;
    if (*(char *)(v97 + 39) < 0)
    {
      v20 = *(const char **)(v97 + 16);
      v19 = *(_QWORD *)(v97 + 24);
    }
    else
    {
      v19 = *(unsigned __int8 *)(v97 + 39);
      v20 = (const char *)(v97 + 16);
    }
    v79 = v97 + 16;
    v83 = v18;
    v82 = v16;
    v21 = atomic_load((unsigned __int8 *)&qword_255788F58);
    if ((v21 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)&object);
      sub_223199C58("com.apple.cv3d", (unint64_t)&object, &xmmword_255788F40);
      if ((_BYTE)v86 && SHIBYTE(v85[1]) < 0)
        operator delete(object);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
    if (byte_255788F57 >= 0)
      v22 = (const char *)&xmmword_255788F40;
    else
      v22 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v23 = byte_255788F57;
    else
      v23 = *((_QWORD *)&xmmword_255788F40 + 1);
    __src = v20;
    object = os_log_create(v22, v20);
    v24 = v85;
    if (v23 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v23 >= 0x17)
    {
      v25 = (v23 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v23 | 7) != 0x17)
        v25 = v23 | 7;
      v26 = v25 + 1;
      v24 = operator new(v25 + 1);
      v85[1] = (void *)v23;
      *(_QWORD *)&v86 = v26 | 0x8000000000000000;
      v85[0] = v24;
    }
    else
    {
      BYTE7(v86) = v23;
      if (!v23)
      {
LABEL_24:
        *((_BYTE *)v24 + v23) = 0;
        BYTE8(v86) = 1;
        v27 = __p;
        if (v19 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v19 >= 0x17)
        {
          v28 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v19 | 7) != 0x17)
            v28 = v19 | 7;
          v29 = v28 + 1;
          v27 = operator new(v28 + 1);
          __p[1] = (void *)v19;
          v88 = v29 | 0x8000000000000000;
          __p[0] = v27;
        }
        else
        {
          HIBYTE(v88) = v19;
          if (!v19)
            goto LABEL_32;
        }
        memmove(v27, __src, v19);
LABEL_32:
        *((_BYTE *)v27 + v19) = 0;
        v89 = 1;
        v30 = object;
        if (SHIBYTE(v88) < 0)
          operator delete(__p[0]);
        if (BYTE8(v86) && SBYTE7(v86) < 0)
          operator delete(v85[0]);
        if (object)
          os_release(object);
        if (v83 && *(_QWORD *)(v83 + 24))
        {
          v31 = _os_log_pack_size();
          v32 = (std::__shared_weak_count_vtbl *)operator new(v31, (std::align_val_t)8uLL);
          v33 = (std::__shared_weak_count *)operator new();
          v34 = v33;
          v33->__shared_owners_ = 0;
          p_shared_owners = (unint64_t *)&v33->__shared_owners_;
          v33->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
          v33->__shared_weak_owners_ = 0;
          v33[1].__vftable = v32;
          object = v32;
          v85[0] = v32;
          v85[1] = v33;
          do
            v36 = __ldxr(p_shared_owners);
          while (__stxr(v36 + 1, p_shared_owners));
          v86 = 0uLL;
          __p[0] = 0;
          do
            v37 = __ldaxr(p_shared_owners);
          while (__stlxr(v37 - 1, p_shared_owners));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v34);
          }
          v38 = object;
          *(_WORD *)_os_log_pack_fill() = 0;
          v39 = operator new();
          v40 = *(unsigned __int8 *)(v80 + 39);
          v41 = v79;
          if ((v40 & 0x80u) != 0)
          {
            v41 = *(_QWORD *)(v80 + 16);
            v40 = *(_QWORD *)(v80 + 24);
          }
          *(_QWORD *)v39 = v38;
          *(_OWORD *)(v39 + 8) = *(_OWORD *)v85;
          v85[0] = 0;
          v85[1] = 0;
          *(_OWORD *)(v39 + 24) = v86;
          v86 = 0uLL;
          *(_QWORD *)(v39 + 40) = v41;
          *(_QWORD *)(v39 + 48) = v40;
          *(_BYTE *)(v39 + 56) = 16;
          v100 = 0;
          v101 = v39;
          (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v83 + 24) + 40))(*(_QWORD *)(v83 + 24), &v101);
          v42 = v101;
          v101 = 0;
          if (v42)
          {
            v43 = *(std::__shared_weak_count **)(v42 + 32);
            if (v43)
            {
              v44 = (unint64_t *)&v43->__shared_owners_;
              do
                v45 = __ldaxr(v44);
              while (__stlxr(v45 - 1, v44));
              if (!v45)
              {
                ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
                std::__shared_weak_count::__release_weak(v43);
              }
            }
            v46 = *(std::__shared_weak_count **)(v42 + 16);
            if (v46)
            {
              v47 = (unint64_t *)&v46->__shared_owners_;
              do
                v48 = __ldaxr(v47);
              while (__stlxr(v48 - 1, v47));
              if (!v48)
              {
                ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
                std::__shared_weak_count::__release_weak(v46);
              }
            }
            MEMORY[0x227684CE8](v42, 0x10F0C40B62ED6C6);
            v49 = v100;
            v100 = 0;
            if (v49)
            {
              v50 = *(std::__shared_weak_count **)(v49 + 32);
              if (v50)
              {
                v51 = (unint64_t *)&v50->__shared_owners_;
                do
                  v52 = __ldaxr(v51);
                while (__stlxr(v52 - 1, v51));
                if (!v52)
                {
                  ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
                  std::__shared_weak_count::__release_weak(v50);
                }
              }
              v53 = *(std::__shared_weak_count **)(v49 + 16);
              if (v53)
              {
                v54 = (unint64_t *)&v53->__shared_owners_;
                do
                  v55 = __ldaxr(v54);
                while (__stlxr(v55 - 1, v54));
                if (!v55)
                {
                  ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                  std::__shared_weak_count::__release_weak(v53);
                }
              }
              MEMORY[0x227684CE8](v49, 0x10F0C40B62ED6C6);
            }
          }
          v56 = (std::__shared_weak_count *)*((_QWORD *)&v86 + 1);
          if (*((_QWORD *)&v86 + 1))
          {
            v57 = (unint64_t *)(*((_QWORD *)&v86 + 1) + 8);
            do
              v58 = __ldaxr(v57);
            while (__stlxr(v58 - 1, v57));
            if (!v58)
            {
              ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
              std::__shared_weak_count::__release_weak(v56);
            }
          }
          v59 = (std::__shared_weak_count *)v85[1];
          if (v85[1])
          {
            v60 = (unint64_t *)((char *)v85[1] + 8);
            do
              v61 = __ldaxr(v60);
            while (__stlxr(v61 - 1, v60));
            if (!v61)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
        }
        else
        {
          os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);
          LOWORD(object) = 0;
          v62 = (void *)_os_log_send_and_compose_impl();
          if (v62)
            free(v62);
        }
        if (v82)
        {
          sub_22322C138((uint64_t)v90, "PRR chunk contains vertices but no faces");
          sub_223182C08((uint64_t)v90);
        }
        sub_223182C08((uint64_t)v90);
        v63 = v96;
        if (v96)
        {
          v64 = (unint64_t *)&v96->__shared_owners_;
          do
            v65 = __ldaxr(v64);
          while (__stlxr(v65 - 1, v64));
          if (!v65)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
        }
        v11 = v98;
        goto LABEL_92;
      }
    }
    memmove(v24, v22, v23);
    goto LABEL_24;
  }
LABEL_93:
  v66 = (float32x2_t *)*v11;
  v67 = (float32x2_t *)v11[1];
  if ((float32x2_t *)*v11 != v67)
  {
    do
    {
      v68 = (float32x2_t *)a2[1];
      v12.i32[0] = v68[1].i32[0];
      v13.i32[0] = v68[3].i32[0];
      v14.i32[0] = v68[5].i32[0];
      v15.i32[0] = v66[1].i32[0];
      *(float32x2_t *)v69.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*v68, COERCE_FLOAT(*v66)), v68[2], *v66, 1), v68[4], v15.f32[0]);
      *(float32x2_t *)&v69.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v12.f32, *v66), v13, *v66, 1), v15, v14);
      *(float32x2_t *)v12.f32 = v68[6];
      v12.i32[2] = v68[7].i32[0];
      v70 = vaddq_f32(v69, v12);
      v66[1].i32[0] = v70.i32[2];
      *v66 = *(float32x2_t *)v70.f32;
      v66 = (float32x2_t *)((char *)v66 + 12);
    }
    while (v66 != v67);
  }
  v71 = (float32x2_t *)v11[9];
  for (i = (float32x2_t *)v11[10]; v71 != i; v71 = (float32x2_t *)((char *)v71 + 12))
  {
    v73 = (float32x2_t *)a2[1];
    v12.i32[0] = v73[1].i32[0];
    v13.i32[0] = v73[3].i32[0];
    v14.i32[0] = v73[5].i32[0];
    v15.i32[0] = v71[1].i32[0];
    v74 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*v73, COERCE_FLOAT(*v71)), v73[2], *v71, 1), v73[4], v15.f32[0]);
    *(float32x2_t *)v12.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v12.f32, *v71), v13, *v71, 1), v15, v14);
    v71[1].i32[0] = v12.i32[0];
    *v71 = v74;
  }
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  v75 = v99;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v75;
  if (v75)
  {
    v76 = (unint64_t *)&v75->__shared_owners_;
    do
      v77 = __ldxr(v76);
    while (__stxr(v77 + 1, v76));
    *(_BYTE *)(a1 + 32) = 0;
    *(_BYTE *)(a1 + 96) = 0;
    *(_BYTE *)(a1 + 100) = 0;
    *(_BYTE *)(a1 + 116) = 0;
    do
      v78 = __ldaxr(v76);
    while (__stlxr(v78 - 1, v76));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
  }
  else
  {
    *(_BYTE *)(a1 + 32) = 0;
    *(_BYTE *)(a1 + 96) = 0;
    *(_BYTE *)(a1 + 100) = 0;
    *(_BYTE *)(a1 + 116) = 0;
  }
}

void sub_223934414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, void *a18, int a19, __int16 a20,char a21,char a22,char a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a23)
  {
    if (a22 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC(v27 - 200);
  sub_223167354(v27 - 120);
  _Unwind_Resume(a1);
}

void sub_2239344F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_223934508(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_223167354(v1 - 120);
  _Unwind_Resume(a1);
}

void sub_22393451C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_223934534(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, int32x4_t a6@<Q0>, float32x4_t a7@<Q1>, float32x4_t a8@<Q2>, int32x4_t a9@<Q3>, float32x4_t a10@<Q4>, float32x4_t a11@<Q5>, float32x4_t a12@<Q6>)
{
  uint64_t v13;
  float32x4_t v14;
  float32x4_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t *v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float v35;
  BOOL v36;
  uint64_t v38;
  uint64_t *v39[4];
  __int128 v40;
  uint64_t v41;
  char v42;

  if (*(_BYTE *)(a1 + 297))
  {
    sub_223932B18(a1, a3, a4, a5, (int32x4_t)a8, a9, a11);
    return;
  }
  if (a4 != 1)
  {
    sub_22392EFC0(a1, a2, a3, a5, a6, (int32x4_t)a8, *(float32x2_t *)a9.i8, a12);
    return;
  }
  v13 = a1 + 40592;
  if (*(_BYTE *)(a1 + 233))
  {
    a10 = *(float32x4_t *)(a1 + 40180);
    a8 = *(float32x4_t *)(a1 + 40196);
    v15 = *(float32x4_t *)(a1 + 40148);
    v14 = *(float32x4_t *)(a1 + 40164);
    a7 = *(float32x4_t *)(a1 + 40244);
    v16 = *(float32x4_t *)(a1 + 40260);
    a11 = *(float32x4_t *)(a1 + 40212);
    v17 = *(float32x4_t *)(a1 + 40228);
    v18 = *(float32x4_t **)(*(_QWORD *)v13 + 8);
    if (v18[24].i8[0])
    {
      v19 = vsubq_f32(v18[16], v15);
      v20 = vsubq_f32(v18[17], v14);
      v21 = vsubq_f32(v18[18], a10);
      v22 = vsubq_f32(v18[19], a8);
      v23 = vmulq_f32(v22, v22);
      v24 = vmulq_f32(v21, v21);
      v25 = vmulq_f32(v20, v20);
      v26 = vmulq_f32(v19, v19);
      v23.f32[0] = v23.f32[3]
                 + (float)(v23.f32[2]
                         + (float)(v23.f32[1]
                                 + (float)(v23.f32[0]
                                         + (float)(v24.f32[3]
                                                 + (float)(v24.f32[2]
                                                         + (float)(v24.f32[1]
                                                                 + (float)(v24.f32[0]
                                                                         + (float)(v25.f32[3]
                                                                                 + (float)(v25.f32[2]
                                                                                         + (float)(v25.f32[1]
                                                                                                 + (float)(v25.f32[0] + (float)(v26.f32[3] + (float)(v26.f32[2] + vaddv_f32(*(float32x2_t *)v26.f32))))))))))))));
      v27 = vsubq_f32(v18[20], a11);
      v28 = vsubq_f32(v18[21], v17);
      v29 = vsubq_f32(v18[22], a7);
      v30 = vsubq_f32(v18[23], v16);
      v31 = vmulq_f32(v30, v30);
      v32 = vmulq_f32(v29, v29);
      v33 = vmulq_f32(v28, v28);
      v34 = vmulq_f32(v27, v27);
      v35 = v23.f32[0]
          + (float)(v31.f32[3]
                  + (float)(v31.f32[2]
                          + (float)(v31.f32[1]
                                  + (float)(v31.f32[0]
                                          + (float)(v32.f32[3]
                                                  + (float)(v32.f32[2]
                                                          + (float)(v32.f32[1]
                                                                  + (float)(v32.f32[0]
                                                                          + (float)(v33.f32[3]
                                                                                  + (float)(v33.f32[2]
                                                                                          + (float)(v33.f32[1]
                                                                                                  + (float)(v33.f32[0] + (float)(v34.f32[3] + (float)(v34.f32[2] + vaddv_f32(*(float32x2_t *)v34.f32)))))))))))))));
      v36 = v35 == 0.0;
      if (v35 < 0.0)
        v35 = 0.0 - v35;
      if (v36 || v35 <= 0.000001)
        goto LABEL_17;
      v18[16] = v15;
      v18[17] = v14;
      v18[18] = a10;
      v18[19] = a8;
      v18[20] = a11;
      v18[21] = v17;
      v18[22] = a7;
      v18[23] = v16;
    }
    else
    {
      v18[16] = v15;
      v18[17] = v14;
      v18[18] = a10;
      v18[19] = a8;
      v18[20] = a11;
      v18[21] = v17;
      v18[22] = a7;
      v18[23] = v16;
      v18[24].i8[0] = 1;
    }
    v18[24].i8[4] = 1;
  }
LABEL_17:
  v38 = *(_QWORD *)(*(_QWORD *)v13 + 8);
  if (*(_BYTE *)(v38 + 208))
  {
    v39[0] = *(uint64_t **)(v38 + 184);
    v39[2] = 0;
    sub_2239908A8((float32x2_t *)v38, v39, (uint64_t)&v40, (int32x4_t)a7, (int32x4_t)a8, *(float32x2_t *)a10.f32, a11);
    *(_OWORD *)a5 = v40;
    *(_QWORD *)(a5 + 16) = v41;
    *(_BYTE *)(a5 + 24) = v42;
  }
  else
  {
    *(_QWORD *)a5 = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_QWORD *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 24) = 1;
  }
  *(_BYTE *)(a5 + 32) = 1;
}

void sub_2239347B0(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  float32x2_t *v9;
  _DWORD *v10;
  uint64_t v11;
  _DWORD *v12;
  float32x2_t *v13;
  float32x2_t *v14;
  int32x4_t v15;
  int32x4_t v16;
  int8x16_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  float32x2_t v22;
  float32x4_t v23;
  int8x16_t v24;
  int8x16_t v25;
  BOOL v26;
  float v27;
  BOOL v28;
  float v29;
  BOOL v30;
  float v31;
  BOOL v32;
  float v33;
  BOOL v34;
  float v35;
  BOOL v36;
  float v37;
  int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  const char *v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  const char *v48;
  size_t v49;
  _BYTE *v50;
  const char *v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  size_t v61;
  std::__shared_weak_count_vtbl *v62;
  std::__shared_weak_count *v63;
  std::__shared_weak_count *v64;
  unint64_t *p_shared_owners;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  int v90;
  unint64_t *v91;
  unint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  void *v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  _OWORD *v100;
  _OWORD *v101;
  void *v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  int32x4_t v106;
  float32x4_t v107;
  int32x4_t v108;
  float32x2_t v109;
  float32x2_t v110;
  float32x2_t v111;
  float32x4_t v112;
  float32x2_t v113;
  float32x2_t v114;
  float32x4_t v115;
  float32x4_t v116;
  int8x16_t v117;
  int8x16_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x2_t *v122;
  float32x2_t *v123;
  float32x2_t i;
  unsigned __int32 v125;
  float32x2_t *v126;
  float32x2_t *j;
  unsigned __int32 v128;
  int v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v133;
  const char *v134;
  size_t v135;
  unsigned __int8 v136;
  const char *v137;
  size_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  NSObject *v145;
  size_t v146;
  std::__shared_weak_count_vtbl *v147;
  std::__shared_weak_count *v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  const char *v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  std::__shared_weak_count *v161;
  unint64_t *v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  uint64_t v167;
  std::__shared_weak_count *v168;
  unint64_t *v169;
  unint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  std::__shared_weak_count *v174;
  unint64_t *v175;
  unint64_t v176;
  std::__shared_weak_count *v177;
  unint64_t *v178;
  unint64_t v179;
  void *v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t *v186;
  unint64_t v187;
  unint64_t v188;
  char *v189;
  char *v190;
  __int128 v191;
  _QWORD *v192;
  uint64_t v193;
  _OWORD *v194;
  uint64_t v195;
  unint64_t *v196;
  unint64_t v197;
  char *v198;
  unint64_t v199;
  std::__shared_weak_count *v200;
  unint64_t *v201;
  unint64_t v202;
  uint64_t v203;
  const char *v204;
  int v205;
  int v206;
  float32x4_t v207;
  _BYTE *v208;
  int32x4_t v209;
  int8x16_t v210;
  int8x16_t v211;
  uint64_t v212;
  float32x2_t *v213;
  _QWORD v214[8];
  float32x2_t *v215;
  float32x2_t *v216;
  unint64_t v217;
  int v218;
  uint64_t v219;
  _QWORD v220[15];
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  int v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  void *__p;
  _OWORD *v235;
  unint64_t v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  __int128 v240;
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep;
  int v242;
  const char *v243;
  int v244;
  const char *v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  _BYTE v248[24];
  _BYTE v249[40];
  double v250;
  __int16 v251;
  double v252;
  __int16 v253;
  double v254;
  uint64_t v255;

  v5 = a4;
  v255 = *MEMORY[0x24BDAC8D0];
  v6 = a1 + 40600;
  if (a3)
  {
    if (*(_BYTE *)(a1 + 40608) && a2 >= *(_QWORD *)v6)
    {
      *a4 = 0;
      a4[32] = 0;
      return;
    }
    *(_QWORD *)v6 = a2;
    *(_BYTE *)(a1 + 40608) = a3;
  }
  v235 = 0;
  __p = 0;
  v236 = 0;
  v237 = 1;
  sub_2241498F4((uint64_t)&v213, 0);
  sub_22339E3C8((uint64_t)&v213, 0x64uLL);
  v218 = 1;
  sub_22339E3C8((uint64_t)&v215, 0x64uLL);
  v7 = 0;
  v8 = (uint64_t *)(a1 + 40148);
  do
  {
    v10 = (_DWORD *)((char *)&unk_224654C10 + v7);
    v11 = v214[0];
    if (v214[0] >= v214[1])
    {
      v12 = sub_2238BC6C4((uint64_t)&v213, v10, v10 + 1, v10 + 2);
    }
    else
    {
      *(_QWORD *)v214[0] = *(_QWORD *)v10;
      *(_DWORD *)(v11 + 8) = v10[2];
      v12 = (_DWORD *)(v11 + 12);
    }
    v214[0] = v12;
    v13 = (float32x2_t *)((char *)&unk_2246550C0 + v7);
    v14 = v216;
    if ((unint64_t)v216 < v217)
    {
      *v216 = *v13;
      v14[1].i32[0] = v13[1].i32[0];
      v9 = (float32x2_t *)((char *)v14 + 12);
    }
    else
    {
      v9 = (float32x2_t *)sub_2238BC6C4((uint64_t)&v215, v13, (_DWORD *)v13 + 1, &v13[1]);
    }
    v216 = v9;
    v7 += 12;
  }
  while (v7 != 1200);
  sub_22339E528((uint64_t)&v219, 0x36uLL);
  v18 = 0;
  v19 = (_DWORD *)v220[0];
  do
  {
    v20 = (_DWORD *)((char *)&unk_224655570 + v18);
    v21 = (_DWORD *)((char *)&unk_224655570 + v18 + 8);
    if ((unint64_t)v19 < v220[1])
    {
      *v19 = *v20;
      v19[1] = v20[1];
      v19[2] = *v21;
      v19 += 3;
    }
    else
    {
      v19 = sub_22317EAFC((uint64_t)&v219, v20, v20 + 1, v21);
    }
    v220[0] = v19;
    v18 += 12;
  }
  while (v18 != 648);
  v22.i32[0] = *(_DWORD *)(a1 + 40156);
  v15.i64[0] = *v8;
  v23 = (float32x4_t)v15;
  v23.i32[2] = v22.i32[0];
  v16.i64[0] = *(_QWORD *)(a1 + 40164);
  v24 = (int8x16_t)v16;
  v24.i32[2] = *(_DWORD *)(a1 + 40172);
  v17.i64[0] = *(_QWORD *)(a1 + 40180);
  v25 = v17;
  v25.i32[2] = *(_DWORD *)(a1 + 40188);
  v211 = v25;
  v209 = v15;
  v210 = v24;
  if ((*(_DWORD *)v8 & 0x7FFFFFFFu) > 0x7F7FFFFF)
    goto LABEL_41;
  v26 = (v16.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF && (v17.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  LODWORD(v27) = HIDWORD(*v8);
  v28 = v26 && (v15.i32[1] & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  LODWORD(v29) = HIDWORD(*(_QWORD *)(a1 + 40164));
  v30 = v28 && (v16.i32[1] & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  v31 = *(float *)&v17.i32[1];
  v32 = v30 && (v17.i32[1] & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  v33 = *(float *)(a1 + 40156);
  v34 = v32 && (v22.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  v35 = *(float *)(a1 + 40172);
  v36 = v34 && (v24.i32[2] & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  v37 = *(float *)(a1 + 40188);
  if (!v36 || (v25.i32[2] & 0x7FFFFFFFu) > 0x7F7FFFFF)
    goto LABEL_41;
  v106 = vzip1q_s32(v15, v16);
  v107 = (float32x4_t)v106;
  v107.i32[2] = v17.i32[0];
  v22.i32[1] = *(_DWORD *)(a1 + 40172);
  v108 = vtrn2q_s32(v209, v16);
  v108.i32[2] = v17.i32[1];
  v109 = (float32x2_t)vzip1_s32(*(int32x2_t *)v106.i8, *(int32x2_t *)v108.i8);
  v110 = (float32x2_t)vzip2_s32(*(int32x2_t *)v106.i8, *(int32x2_t *)v108.i8);
  v111 = (float32x2_t)vzip2q_s32((int32x4_t)v107, v108).u64[0];
  *(float32x2_t *)v112.f32 = vmla_n_f32(vmla_n_f32(vmul_n_f32(v109, v23.f32[0]), v110, *(float *)v24.i32), v111, *(float *)v25.i32);
  v113 = (float32x2_t)vextq_s8(v24, v24, 8uLL).u64[0];
  v114 = (float32x2_t)vextq_s8(v25, v25, 8uLL).u64[0];
  *(float32x2_t *)&v112.u32[2] = vmla_f32(vmla_f32(vmul_f32(v22, *(float32x2_t *)v106.i8), *(float32x2_t *)v24.i8, v113), *(float32x2_t *)v25.i8, v114);
  *(float32x2_t *)v107.f32 = vmla_lane_f32(vmla_lane_f32(vmul_lane_f32(v109, *(float32x2_t *)v23.f32, 1), v110, *(float32x2_t *)v24.i8, 1), v111, *(float32x2_t *)v25.i8, 1);
  *(float32x2_t *)&v107.u32[2] = vmla_lane_f32(vmla_lane_f32(vmul_f32(v22, *(float32x2_t *)v108.i8), v113, *(float32x2_t *)v24.i8, 1), v114, *(float32x2_t *)v25.i8, 1);
  *(float32x2_t *)v115.f32 = vmla_laneq_f32(vmla_laneq_f32(vmul_laneq_f32(v109, v23, 2), v110, (float32x4_t)v24, 2), v111, (float32x4_t)v25, 2);
  *(float32x2_t *)&v115.u32[2] = vmla_f32(vmla_f32(vmul_f32(v22, v22), v113, v113), v114, v114);
  v116 = vsubq_f32((float32x4_t)xmmword_2245F4CE0, v112);
  v117 = (int8x16_t)vsubq_f32((float32x4_t)xmmword_2245F4CF0, v107);
  v118 = (int8x16_t)vsubq_f32((float32x4_t)xmmword_2245C76E0, v115);
  v116.i32[3] = v117.i32[0];
  v119 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v118, 2);
  v120 = vabsq_f32((float32x4_t)vextq_s8(vextq_s8(v117, v117, 0xCuLL), v118, 8uLL));
  v121.i32[0] = vabsq_f32(v119).u32[0];
  v121.i32[1] = -4194304;
  v121.i64[1] = 0xFFC00000FFC00000;
  if (vmaxnmvq_f32(vmaxnmq_f32(vmaxnmq_f32(vabsq_f32(v116), v121), v120)) >= 0.001)
  {
LABEL_41:
    v207 = v23;
    sub_223919B38(&v212);
    if (**(int **)(v212 + 56) > 3
      || (v39 = *(unsigned __int8 *)(v212 + 72),
          v40 = sub_22322F254(v212, "OSLogSurrogateAppender", 1, 0),
          v41 = v40,
          !v39)
      && !v40)
    {
LABEL_131:
      if (*(_BYTE *)(v6 + 8))
        *(_BYTE *)(v6 + 8) = 0;
      *v5 = 0;
      v5[32] = 0;
      goto LABEL_134;
    }
    v205 = v39;
    *(_QWORD *)&v240 = &v212;
    *((std::chrono::steady_clock::time_point *)&v240 + 1) = std::chrono::steady_clock::now();
    rep = std::chrono::system_clock::now().__d_.__rep_;
    v242 = 3;
    v243 = "unknown file";
    v244 = 2639;
    v247 = 0;
    v245 = "unknown function";
    v246 = 0;
    v42 = *(_QWORD *)v240;
    v43 = *(_QWORD *)v240 + 16;
    v203 = *(_QWORD *)v240;
    if (*(char *)(*(_QWORD *)v240 + 39) < 0)
    {
      v45 = *(const char **)(v42 + 16);
      v44 = *(_QWORD *)(v42 + 24);
      v47 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v47 & 1) != 0)
        goto LABEL_49;
    }
    else
    {
      v44 = *(unsigned __int8 *)(*(_QWORD *)v240 + 39);
      v45 = (const char *)(*(_QWORD *)v240 + 16);
      v46 = atomic_load((unsigned __int8 *)&qword_255788F58);
      if ((v46 & 1) != 0)
        goto LABEL_49;
    }
    if (__cxa_guard_acquire(&qword_255788F58))
    {
      sub_224568628((uint64_t)v248);
      sub_223199C58("com.apple.cv3d", (unint64_t)v248, &xmmword_255788F40);
      if (v249[0] && (v248[23] & 0x80000000) != 0)
        operator delete(*(void **)v248);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
      __cxa_guard_release(&qword_255788F58);
    }
LABEL_49:
    if (byte_255788F57 >= 0)
      v48 = (const char *)&xmmword_255788F40;
    else
      v48 = (const char *)xmmword_255788F40;
    if (byte_255788F57 >= 0)
      v49 = byte_255788F57;
    else
      v49 = *((_QWORD *)&xmmword_255788F40 + 1);
    *(_QWORD *)v248 = os_log_create(v48, v45);
    v50 = &v248[8];
    if (v49 > 0x7FFFFFFFFFFFFFF7)
      sub_22316DBC0();
    if (v49 >= 0x17)
    {
      v51 = v45;
      v52 = v41;
      v53 = v43;
      v54 = v5;
      v55 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v49 | 7) != 0x17)
        v55 = v49 | 7;
      v56 = v55 + 1;
      v50 = operator new(v55 + 1);
      *(_QWORD *)&v248[16] = v49;
      *(_QWORD *)v249 = v56 | 0x8000000000000000;
      *(_QWORD *)&v248[8] = v50;
      v5 = v54;
      v43 = v53;
      v41 = v52;
      v45 = v51;
    }
    else
    {
      v249[7] = v49;
      if (!v49)
      {
LABEL_63:
        v50[v49] = 0;
        v249[8] = 1;
        v57 = &v249[16];
        if (v44 > 0x7FFFFFFFFFFFFFF7)
          sub_22316DBC0();
        if (v44 >= 0x17)
        {
          v59 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v44 | 7) != 0x17)
            v59 = v44 | 7;
          v60 = v59 + 1;
          v57 = operator new(v59 + 1);
          *(_QWORD *)&v249[24] = v44;
          *(_QWORD *)&v249[32] = v60 | 0x8000000000000000;
          *(_QWORD *)&v249[16] = v57;
        }
        else
        {
          v249[39] = v44;
          if (!v44)
          {
            v249[16] = 0;
            LOBYTE(v250) = 1;
            v58 = *(NSObject **)v248;
            if ((v249[39] & 0x80000000) == 0)
              goto LABEL_67;
            goto LABEL_73;
          }
        }
        memmove(v57, v45, v44);
        v57[v44] = 0;
        LOBYTE(v250) = 1;
        v58 = *(NSObject **)v248;
        if ((v249[39] & 0x80000000) == 0)
        {
LABEL_67:
          if (!v249[8])
            goto LABEL_76;
          goto LABEL_74;
        }
LABEL_73:
        operator delete(*(void **)&v249[16]);
        if (!v249[8])
        {
LABEL_76:
          if (*(_QWORD *)v248)
            os_release(*(void **)v248);
          if (v41 && *(_QWORD *)(v41 + 24))
          {
            v61 = _os_log_pack_size();
            v62 = (std::__shared_weak_count_vtbl *)operator new(v61, (std::align_val_t)8uLL);
            v63 = (std::__shared_weak_count *)operator new();
            v64 = v63;
            v63->__shared_owners_ = 0;
            p_shared_owners = (unint64_t *)&v63->__shared_owners_;
            v63->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
            v63->__shared_weak_owners_ = 0;
            v63[1].__vftable = v62;
            *(_QWORD *)v248 = v62;
            *(_QWORD *)&v248[8] = v62;
            *(_QWORD *)&v248[16] = v63;
            do
              v66 = __ldxr(p_shared_owners);
            while (__stxr(v66 + 1, p_shared_owners));
            memset(v249, 0, 24);
            do
              v67 = __ldaxr(p_shared_owners);
            while (__stlxr(v67 - 1, p_shared_owners));
            if (!v67)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v64);
            }
            v68 = *(_QWORD *)v248;
            v69 = _os_log_pack_fill();
            *(_DWORD *)v69 = 134220032;
            *(double *)(v69 + 4) = *(float *)v209.i32;
            *(_WORD *)(v69 + 12) = 2048;
            *(double *)(v69 + 14) = v207.f32[1];
            *(_WORD *)(v69 + 22) = 2048;
            *(double *)(v69 + 24) = v207.f32[2];
            *(_WORD *)(v69 + 32) = 2048;
            *(double *)(v69 + 34) = *(float *)v210.i32;
            *(_WORD *)(v69 + 42) = 2048;
            *(double *)(v69 + 44) = *(float *)&v210.i32[1];
            *(_WORD *)(v69 + 52) = 2048;
            *(double *)(v69 + 54) = *(float *)&v210.i32[2];
            *(_WORD *)(v69 + 62) = 2048;
            *(double *)(v69 + 64) = *(float *)v211.i32;
            *(_WORD *)(v69 + 72) = 2048;
            *(double *)(v69 + 74) = *(float *)&v211.i32[1];
            *(_WORD *)(v69 + 82) = 2048;
            *(double *)(v69 + 84) = *(float *)&v211.i32[2];
            v70 = operator new();
            v71 = *(unsigned __int8 *)(v203 + 39);
            v72 = *(_QWORD *)(v203 + 16);
            v73 = *(_QWORD *)(v203 + 24);
            v74 = *(_OWORD *)v249;
            *(_OWORD *)(v70 + 8) = *(_OWORD *)&v248[8];
            if ((v71 & 0x80u) != 0)
              v71 = v73;
            else
              v72 = v43;
            *(_QWORD *)v70 = v68;
            *(_QWORD *)&v248[8] = 0;
            *(_QWORD *)&v248[16] = 0;
            *(_OWORD *)(v70 + 24) = v74;
            *(_QWORD *)v249 = 0;
            *(_QWORD *)&v249[8] = 0;
            *(_QWORD *)(v70 + 40) = v72;
            *(_QWORD *)(v70 + 48) = v71;
            *(_BYTE *)(v70 + 56) = 1;
            v238 = 0;
            v239 = v70;
            (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v41 + 24) + 40))(*(_QWORD *)(v41 + 24), &v239);
            v75 = v239;
            v239 = 0;
            if (v75)
            {
              v76 = *(std::__shared_weak_count **)(v75 + 32);
              if (v76)
              {
                v77 = (unint64_t *)&v76->__shared_owners_;
                do
                  v78 = __ldaxr(v77);
                while (__stlxr(v78 - 1, v77));
                if (!v78)
                {
                  ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
                  std::__shared_weak_count::__release_weak(v76);
                }
              }
              v79 = *(std::__shared_weak_count **)(v75 + 16);
              if (v79)
              {
                v80 = (unint64_t *)&v79->__shared_owners_;
                do
                  v81 = __ldaxr(v80);
                while (__stlxr(v81 - 1, v80));
                if (!v81)
                {
                  ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
                  std::__shared_weak_count::__release_weak(v79);
                }
              }
              MEMORY[0x227684CE8](v75, 0x10F0C40B62ED6C6);
              v82 = v238;
              v238 = 0;
              if (v82)
              {
                v83 = *(std::__shared_weak_count **)(v82 + 32);
                if (v83)
                {
                  v84 = (unint64_t *)&v83->__shared_owners_;
                  do
                    v85 = __ldaxr(v84);
                  while (__stlxr(v85 - 1, v84));
                  if (!v85)
                  {
                    ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
                    std::__shared_weak_count::__release_weak(v83);
                  }
                }
                v86 = *(std::__shared_weak_count **)(v82 + 16);
                if (v86)
                {
                  v87 = (unint64_t *)&v86->__shared_owners_;
                  do
                    v88 = __ldaxr(v87);
                  while (__stlxr(v88 - 1, v87));
                  if (!v88)
                  {
                    ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
                    std::__shared_weak_count::__release_weak(v86);
                  }
                }
                MEMORY[0x227684CE8](v82, 0x10F0C40B62ED6C6);
              }
            }
            v89 = *(std::__shared_weak_count **)&v249[8];
            v90 = v205;
            if (*(_QWORD *)&v249[8])
            {
              v91 = (unint64_t *)(*(_QWORD *)&v249[8] + 8);
              do
                v92 = __ldaxr(v91);
              while (__stlxr(v92 - 1, v91));
              if (!v92)
              {
                ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
                std::__shared_weak_count::__release_weak(v89);
              }
            }
            v93 = *(std::__shared_weak_count **)&v248[16];
            if (*(_QWORD *)&v248[16])
            {
              v94 = (unint64_t *)(*(_QWORD *)&v248[16] + 8);
              do
                v95 = __ldaxr(v94);
              while (__stlxr(v95 - 1, v94));
              if (!v95)
              {
                ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
                std::__shared_weak_count::__release_weak(v93);
              }
            }
          }
          else
          {
            os_log_type_enabled(v58, OS_LOG_TYPE_INFO);
            *(_DWORD *)v248 = 134220032;
            *(double *)&v248[4] = *(float *)v209.i32;
            *(_WORD *)&v248[12] = 2048;
            *(double *)&v248[14] = v207.f32[1];
            *(_WORD *)&v248[22] = 2048;
            *(double *)v249 = v207.f32[2];
            *(_WORD *)&v249[8] = 2048;
            *(double *)&v249[10] = *(float *)v210.i32;
            *(_WORD *)&v249[18] = 2048;
            *(double *)&v249[20] = *(float *)&v210.i32[1];
            *(_WORD *)&v249[28] = 2048;
            *(double *)&v249[30] = *(float *)&v210.i32[2];
            *(_WORD *)&v249[38] = 2048;
            v250 = *(float *)v211.i32;
            v251 = 2048;
            v252 = *(float *)&v211.i32[1];
            v253 = 2048;
            v254 = *(float *)&v211.i32[2];
            v96 = (void *)_os_log_send_and_compose_impl();
            v90 = v205;
            if (v96)
              free(v96);
          }
          if (v90)
          {
            sub_22322C138((uint64_t)&v240, "OCP:SAM:M:0,VWTUW:%f,%f,%f,%f,%f,%f,%f,%f,%f", *(float *)v209.i32, v207.f32[1], v207.f32[2], *(float *)v210.i32, *(float *)&v210.i32[1], *(float *)&v210.i32[2], *(float *)v211.i32, *(float *)&v211.i32[1], *(float *)&v211.i32[2]);
            sub_223182C08((uint64_t)&v240);
          }
          sub_223182C08((uint64_t)&v240);
          v97 = v247;
          if (v247)
          {
            v98 = (unint64_t *)&v247->__shared_owners_;
            do
              v99 = __ldaxr(v98);
            while (__stlxr(v99 - 1, v98));
            if (!v99)
            {
              ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
              std::__shared_weak_count::__release_weak(v97);
            }
          }
          goto LABEL_131;
        }
LABEL_74:
        if ((v249[7] & 0x80000000) != 0)
          operator delete(*(void **)&v248[8]);
        goto LABEL_76;
      }
    }
    memmove(v50, v48, v49);
    goto LABEL_63;
  }
  v122 = v213;
  v123 = (float32x2_t *)v214[0];
  for (i = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v25.i8, 1); v122 != v123; v122 = (float32x2_t *)((char *)v122 + 12))
  {
    v121.i32[0] = v122[1].i32[0];
    v125 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v25.i8, *v122), i, *v122, 1), *(float32x2_t *)v121.f32, v114).u32[0];
    *v122 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v106.i8, COERCE_FLOAT(*v122)), *(float32x2_t *)v108.i8, *v122, 1), v22, v121.f32[0]);
    v122[1].i32[0] = v125;
  }
  v126 = v215;
  for (j = v216; v126 != j; v126 = (float32x2_t *)((char *)v126 + 12))
  {
    v121.i32[0] = v126[1].i32[0];
    v128 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v25.i8, *v126), i, *v126, 1), *(float32x2_t *)v121.f32, v114).u32[0];
    *v126 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v106.i8, COERCE_FLOAT(*v126)), *(float32x2_t *)v108.i8, *v126, 1), v22, v121.f32[0]);
    v126[1].i32[0] = v128;
  }
  sub_223919B38(&v212);
  if (**(int **)(v212 + 56) > 3)
    goto LABEL_243;
  v129 = *(unsigned __int8 *)(v212 + 72);
  v130 = sub_22322F254(v212, "OSLogSurrogateAppender", 1, 0);
  v131 = v130;
  if (!v129 && v130 == 0)
    goto LABEL_243;
  v206 = v129;
  *(_QWORD *)&v240 = &v212;
  *((std::chrono::steady_clock::time_point *)&v240 + 1) = std::chrono::steady_clock::now();
  rep = std::chrono::system_clock::now().__d_.__rep_;
  v242 = 3;
  v243 = "unknown file";
  v244 = 2656;
  v247 = 0;
  v245 = "unknown function";
  v246 = 0;
  v133 = *(_QWORD *)v240;
  v134 = (const char *)(*(_QWORD *)v240 + 16);
  v204 = v134;
  if (*(char *)(*(_QWORD *)v240 + 39) < 0)
  {
    v134 = *(const char **)(v133 + 16);
    v135 = *(_QWORD *)(v133 + 24);
  }
  else
  {
    v135 = *(unsigned __int8 *)(*(_QWORD *)v240 + 39);
  }
  v208 = v5;
  v136 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v136 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)v248);
    sub_223199C58("com.apple.cv3d", (unint64_t)v248, &xmmword_255788F40);
    if (v249[0] && (v248[23] & 0x80000000) != 0)
      operator delete(*(void **)v248);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F57 >= 0)
    v137 = (const char *)&xmmword_255788F40;
  else
    v137 = (const char *)xmmword_255788F40;
  if (byte_255788F57 >= 0)
    v138 = byte_255788F57;
  else
    v138 = *((_QWORD *)&xmmword_255788F40 + 1);
  *(_QWORD *)v248 = os_log_create(v137, v134);
  v139 = &v248[8];
  if (v138 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v138 >= 0x17)
  {
    v140 = (v138 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v138 | 7) != 0x17)
      v140 = v138 | 7;
    v141 = v140 + 1;
    v139 = operator new(v140 + 1);
    *(_QWORD *)&v248[16] = v138;
    *(_QWORD *)v249 = v141 | 0x8000000000000000;
    *(_QWORD *)&v248[8] = v139;
    goto LABEL_173;
  }
  v249[7] = v138;
  if (v138)
LABEL_173:
    memmove(v139, v137, v138);
  v139[v138] = 0;
  v249[8] = 1;
  v142 = &v249[16];
  if (v135 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v135 >= 0x17)
  {
    v143 = (v135 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v135 | 7) != 0x17)
      v143 = v135 | 7;
    v144 = v143 + 1;
    v142 = operator new(v143 + 1);
    *(_QWORD *)&v249[24] = v135;
    *(_QWORD *)&v249[32] = v144 | 0x8000000000000000;
    *(_QWORD *)&v249[16] = v142;
  }
  else
  {
    v249[39] = v135;
    if (!v135)
      goto LABEL_182;
  }
  memmove(v142, v134, v135);
LABEL_182:
  v142[v135] = 0;
  LOBYTE(v250) = 1;
  v145 = *(NSObject **)v248;
  if ((v249[39] & 0x80000000) != 0)
    operator delete(*(void **)&v249[16]);
  if (v249[8] && (v249[7] & 0x80000000) != 0)
    operator delete(*(void **)&v248[8]);
  if (*(_QWORD *)v248)
    os_release(*(void **)v248);
  if (v131 && *(_QWORD *)(v131 + 24))
  {
    v146 = _os_log_pack_size();
    v147 = (std::__shared_weak_count_vtbl *)operator new(v146, (std::align_val_t)8uLL);
    v148 = (std::__shared_weak_count *)operator new();
    v149 = v148;
    v148->__shared_owners_ = 0;
    v150 = (unint64_t *)&v148->__shared_owners_;
    v148->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v148->__shared_weak_owners_ = 0;
    v148[1].__vftable = v147;
    *(_QWORD *)v248 = v147;
    *(_QWORD *)&v248[8] = v147;
    *(_QWORD *)&v248[16] = v148;
    do
      v151 = __ldxr(v150);
    while (__stxr(v151 + 1, v150));
    memset(v249, 0, 24);
    do
      v152 = __ldaxr(v150);
    while (__stlxr(v152 - 1, v150));
    if (!v152)
    {
      ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
      std::__shared_weak_count::__release_weak(v149);
    }
    v153 = *(_QWORD *)v248;
    v154 = _os_log_pack_fill();
    *(_DWORD *)v154 = 134220032;
    *(double *)(v154 + 4) = *(float *)v209.i32;
    *(_WORD *)(v154 + 12) = 2048;
    *(double *)(v154 + 14) = v27;
    *(_WORD *)(v154 + 22) = 2048;
    *(double *)(v154 + 24) = v33;
    *(_WORD *)(v154 + 32) = 2048;
    *(double *)(v154 + 34) = *(float *)v210.i32;
    *(_WORD *)(v154 + 42) = 2048;
    *(double *)(v154 + 44) = v29;
    *(_WORD *)(v154 + 52) = 2048;
    *(double *)(v154 + 54) = v35;
    *(_WORD *)(v154 + 62) = 2048;
    *(double *)(v154 + 64) = *(float *)v211.i32;
    *(_WORD *)(v154 + 72) = 2048;
    *(double *)(v154 + 74) = v31;
    *(_WORD *)(v154 + 82) = 2048;
    *(double *)(v154 + 84) = v37;
    v155 = operator new();
    v156 = *(unsigned __int8 *)(v133 + 39);
    v157 = *(const char **)(v133 + 16);
    v158 = *(_QWORD *)(v133 + 24);
    v159 = *(_OWORD *)v249;
    *(_OWORD *)(v155 + 8) = *(_OWORD *)&v248[8];
    if ((v156 & 0x80u) != 0)
      v156 = v158;
    else
      v157 = v204;
    *(_QWORD *)v155 = v153;
    *(_QWORD *)&v248[8] = 0;
    *(_QWORD *)&v248[16] = 0;
    *(_OWORD *)(v155 + 24) = v159;
    *(_QWORD *)v249 = 0;
    *(_QWORD *)&v249[8] = 0;
    *(_QWORD *)(v155 + 40) = v157;
    *(_QWORD *)(v155 + 48) = v156;
    *(_BYTE *)(v155 + 56) = 1;
    v238 = 0;
    v239 = v155;
    (*(void (**)(_QWORD, uint64_t *))(**(_QWORD **)(v131 + 24) + 40))(*(_QWORD *)(v131 + 24), &v239);
    v160 = v239;
    v239 = 0;
    if (v160)
    {
      v161 = *(std::__shared_weak_count **)(v160 + 32);
      if (v161)
      {
        v162 = (unint64_t *)&v161->__shared_owners_;
        do
          v163 = __ldaxr(v162);
        while (__stlxr(v163 - 1, v162));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
          std::__shared_weak_count::__release_weak(v161);
        }
      }
      v164 = *(std::__shared_weak_count **)(v160 + 16);
      if (v164)
      {
        v165 = (unint64_t *)&v164->__shared_owners_;
        do
          v166 = __ldaxr(v165);
        while (__stlxr(v166 - 1, v165));
        if (!v166)
        {
          ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
          std::__shared_weak_count::__release_weak(v164);
        }
      }
      MEMORY[0x227684CE8](v160, 0x10F0C40B62ED6C6);
      v167 = v238;
      v238 = 0;
      if (v167)
      {
        v168 = *(std::__shared_weak_count **)(v167 + 32);
        if (v168)
        {
          v169 = (unint64_t *)&v168->__shared_owners_;
          do
            v170 = __ldaxr(v169);
          while (__stlxr(v170 - 1, v169));
          if (!v170)
          {
            ((void (*)(std::__shared_weak_count *))v168->__on_zero_shared)(v168);
            std::__shared_weak_count::__release_weak(v168);
          }
        }
        v171 = *(std::__shared_weak_count **)(v167 + 16);
        if (v171)
        {
          v172 = (unint64_t *)&v171->__shared_owners_;
          do
            v173 = __ldaxr(v172);
          while (__stlxr(v173 - 1, v172));
          if (!v173)
          {
            ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
            std::__shared_weak_count::__release_weak(v171);
          }
        }
        MEMORY[0x227684CE8](v167, 0x10F0C40B62ED6C6);
      }
    }
    v174 = *(std::__shared_weak_count **)&v249[8];
    if (*(_QWORD *)&v249[8])
    {
      v175 = (unint64_t *)(*(_QWORD *)&v249[8] + 8);
      do
        v176 = __ldaxr(v175);
      while (__stlxr(v176 - 1, v175));
      if (!v176)
      {
        ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
        std::__shared_weak_count::__release_weak(v174);
      }
    }
    v177 = *(std::__shared_weak_count **)&v248[16];
    if (*(_QWORD *)&v248[16])
    {
      v178 = (unint64_t *)(*(_QWORD *)&v248[16] + 8);
      do
        v179 = __ldaxr(v178);
      while (__stlxr(v179 - 1, v178));
      if (!v179)
      {
        ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
        std::__shared_weak_count::__release_weak(v177);
      }
    }
    v5 = v208;
  }
  else
  {
    os_log_type_enabled(v145, OS_LOG_TYPE_INFO);
    *(_DWORD *)v248 = 134220032;
    *(double *)&v248[4] = *(float *)v209.i32;
    *(_WORD *)&v248[12] = 2048;
    *(double *)&v248[14] = v27;
    *(_WORD *)&v248[22] = 2048;
    *(double *)v249 = v33;
    *(_WORD *)&v249[8] = 2048;
    *(double *)&v249[10] = *(float *)v210.i32;
    *(_WORD *)&v249[18] = 2048;
    *(double *)&v249[20] = v29;
    *(_WORD *)&v249[28] = 2048;
    *(double *)&v249[30] = v35;
    *(_WORD *)&v249[38] = 2048;
    v250 = *(float *)v211.i32;
    v251 = 2048;
    v252 = v31;
    v253 = 2048;
    v254 = v37;
    v180 = (void *)_os_log_send_and_compose_impl();
    v5 = v208;
    if (v180)
      free(v180);
  }
  if (v206)
  {
    sub_22322C138((uint64_t)&v240, "OCP:SAM:M:1,VWTUW:%f,%f,%f,%f,%f,%f,%f,%f,%f", *(float *)v209.i32, v27, v33, *(float *)v210.i32, v29, v35, *(float *)v211.i32, v31, v37);
    sub_223182C08((uint64_t)&v240);
  }
  sub_223182C08((uint64_t)&v240);
  v181 = v247;
  if (v247)
  {
    v182 = (unint64_t *)&v247->__shared_owners_;
    do
      v183 = __ldaxr(v182);
    while (__stlxr(v183 - 1, v182));
    if (!v183)
    {
      ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
      std::__shared_weak_count::__release_weak(v181);
    }
  }
LABEL_243:
  v233 = *(_DWORD *)(a1 + 52);
  if (v233 == 2)
    v184 = v220;
  else
    v184 = v214;
  v185 = *v184;
  if (v233 == 2)
    v186 = &v219;
  else
    v186 = (uint64_t *)&v213;
  v187 = 0xAAAAAAAAAAAAAAABLL * ((v185 - *v186) >> 2);
  *(_DWORD *)v248 = 1065353216;
  v188 = (v232 - v231) >> 2;
  if (v187 <= v188)
  {
    if (v187 < v188)
      v232 = v231 + 4 * v187;
  }
  else
  {
    sub_223937944((uint64_t)&v231, v187 - v188, (const float *)v248);
  }
  v225 = 2;
  v189 = (char *)operator new(0x36uLL);
  *(_OWORD *)v189 = xmmword_2246557F8;
  *((_OWORD *)v189 + 1) = unk_224655808;
  *((_OWORD *)v189 + 2) = xmmword_224655818;
  *(_QWORD *)(v189 + 46) = 0x2727272727272727;
  if (v221)
  {
    v222 = v221;
    *(_QWORD *)v248 = v221;
    *(_DWORD *)&v248[8] = (_DWORD)v223 - (_DWORD)v221;
    if (HIDWORD(v224) == -1)
      sub_22316DD70();
    *(_QWORD *)&v240 = v248;
    ((void (*)(__int128 *, uint64_t *))off_24EC5CEC8[HIDWORD(v224)])(&v240, &v224);
  }
  v221 = v189;
  v222 = v189 + 54;
  v223 = v189 + 54;
  v224 = 0;
  v230 = 2;
  v190 = (char *)operator new(0x36uLL);
  *(_QWORD *)(v190 + 46) = 0xFDFDFDFDFDFDFDFDLL;
  *(_QWORD *)&v191 = 0xFDFDFDFDFDFDFDFDLL;
  *((_QWORD *)&v191 + 1) = 0xFDFDFDFDFDFDFDFDLL;
  *((_OWORD *)v190 + 1) = v191;
  *((_OWORD *)v190 + 2) = v191;
  *(_OWORD *)v190 = v191;
  if (v226)
  {
    v227 = v226;
    *(_QWORD *)v248 = v226;
    *(_DWORD *)&v248[8] = (_DWORD)v228 - (_DWORD)v226;
    if (HIDWORD(v229) == -1)
      sub_22316DD70();
    *(_QWORD *)&v240 = v248;
    ((void (*)(__int128 *, uint64_t *))off_24EC5CEC8[HIDWORD(v229)])(&v240, &v229);
  }
  v226 = v190;
  v227 = v190 + 54;
  v228 = v190 + 54;
  v229 = 0;
  v192 = operator new(0x198uLL);
  v192[1] = 0;
  v192[2] = 0;
  *v192 = &off_24EC1F0A0;
  *(_QWORD *)v248 = sub_223180698((uint64_t)(v192 + 3), (uint64_t)&v213);
  *(_QWORD *)&v248[8] = v192;
  *(_QWORD *)&v240 = sub_223919C2C((_QWORD *)(a1 + 40008), (int *)(a1 + 40136));
  *((_QWORD *)&v240 + 1) = v193;
  v194 = v235;
  if ((unint64_t)v235 >= v236)
  {
    v198 = sub_22347343C((char **)&__p, &v240, v248);
  }
  else
  {
    *v235 = v240;
    v195 = *(_QWORD *)&v248[8];
    *((_QWORD *)v194 + 2) = *(_QWORD *)v248;
    *((_QWORD *)v194 + 3) = v195;
    if (v195)
    {
      v196 = (unint64_t *)(v195 + 8);
      do
        v197 = __ldxr(v196);
      while (__stxr(v197 + 1, v196));
    }
    *((_BYTE *)v194 + 32) = 0;
    *((_BYTE *)v194 + 96) = 0;
    *((_BYTE *)v194 + 100) = 0;
    v198 = (char *)v194 + 120;
    *((_BYTE *)v194 + 116) = 0;
  }
  v199 = v236;
  *(_QWORD *)v5 = __p;
  *((_QWORD *)v5 + 1) = v198;
  *((_QWORD *)v5 + 2) = v199;
  v236 = 0;
  __p = 0;
  v235 = 0;
  v5[24] = v237;
  v5[32] = 1;
  v200 = *(std::__shared_weak_count **)&v248[8];
  if (*(_QWORD *)&v248[8])
  {
    v201 = (unint64_t *)(*(_QWORD *)&v248[8] + 8);
    do
      v202 = __ldaxr(v201);
    while (__stlxr(v202 - 1, v201));
    if (!v202)
    {
      ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
      std::__shared_weak_count::__release_weak(v200);
    }
  }
LABEL_134:
  sub_22316F8F4((uint64_t *)&v213);
  v100 = __p;
  if (__p)
  {
    v101 = v235;
    v102 = __p;
    if (v235 != __p)
    {
      do
      {
        v103 = (std::__shared_weak_count *)*((_QWORD *)v101 - 12);
        if (v103)
        {
          v104 = (unint64_t *)&v103->__shared_owners_;
          do
            v105 = __ldaxr(v104);
          while (__stlxr(v105 - 1, v104));
          if (!v105)
          {
            ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
            std::__shared_weak_count::__release_weak(v103);
          }
        }
        v101 = (_OWORD *)((char *)v101 - 120);
      }
      while (v101 != v100);
      v102 = __p;
    }
    v235 = v100;
    operator delete(v102);
  }
}

void sub_223935F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;

  if (*(_BYTE *)(v30 - 232))
  {
    if (*(char *)(v30 - 233) < 0)
      operator delete(*(void **)(v30 - 256));
  }
  __cxa_guard_abort(&qword_255788F58);
  sub_223182DAC((uint64_t)&STACK[0x258]);
  sub_22316F8F4(&a30);
  sub_223295868((void **)&STACK[0x228]);
  _Unwind_Resume(a1);
}

uint64_t sub_2239360C0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40280);
}

void **sub_2239360CC(void **a1)
{
  sub_2239360FC((uint64_t)a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_2239360FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t i;
  void **v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  v1 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v1; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 144);
    *(_QWORD *)(a1 + 16) = i - 144;
    v5 = *(void **)(i - 96);
    if (v5)
    {
      *(_QWORD *)(i - 88) = v5;
      operator delete(v5);
    }
    v6 = *(_QWORD *)(i - 120);
    if (v6)
    {
      v7 = *(_QWORD *)(i - 112);
      v8 = *(void **)(i - 120);
      if (v7 != v6)
      {
        v9 = *(_QWORD *)(i - 112);
        do
        {
          v11 = *(void **)(v9 - 24);
          v9 -= 24;
          v10 = v11;
          if (v11)
          {
            *(_QWORD *)(v7 - 16) = v10;
            operator delete(v10);
          }
          v7 = v9;
        }
        while (v9 != v6);
        v8 = *(void **)(i - 120);
      }
      *(_QWORD *)(i - 112) = v6;
      operator delete(v8);
    }
    v12 = *v4;
    if (*v4)
    {
      *(_QWORD *)(i - 136) = v12;
      operator delete(v12);
    }
  }
}

uint64_t sub_2239361BC(uint64_t *a1, __int128 *a2, __int128 *a3, unint64_t a4)
{
  __int128 *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2;
  v8 = a1[2];
  v9 = *a1;
  if (0x4FA4FA4FA4FA4FA5 * ((v8 - *a1) >> 3) >= a4)
  {
    result = a1[1];
    if (0x4FA4FA4FA4FA4FA5 * ((result - v9) >> 3) >= a4)
    {
      if (a2 == a3)
      {
        v23 = v9;
      }
      else
      {
        v23 = v9;
        do
        {
          sub_22342D07C(v9, v6);
          v6 = (__int128 *)((char *)v6 + 360);
          v9 += 360;
          v23 += 360;
        }
        while (v6 != a3);
        result = a1[1];
      }
      while (result != v23)
        result = (uint64_t)sub_223173E64((_QWORD *)(result - 360));
      a1[1] = v23;
    }
    else
    {
      v19 = (__int128 *)((char *)a2 + 8 * ((result - v9) >> 3));
      if (result != v9)
      {
        v20 = 8 * ((result - v9) >> 3);
        do
        {
          result = sub_22342D07C(v9, v6);
          v6 = (__int128 *)((char *)v6 + 360);
          v9 += 360;
          v20 -= 360;
        }
        while (v20);
        v9 = a1[1];
      }
      v21 = v9;
      if (v19 != a3)
      {
        v22 = 0;
        do
        {
          result = sub_223174250(v9 + v22, (__int128 *)((char *)v19 + v22));
          v22 += 360;
        }
        while ((__int128 *)((char *)v19 + v22) != a3);
        v21 = v9 + v22;
      }
      a1[1] = v21;
    }
  }
  else
  {
    if (v9)
    {
      v10 = (_QWORD *)a1[1];
      v11 = (void *)v9;
      if (v10 != (_QWORD *)v9)
      {
        do
          v10 = sub_223173E64(v10 - 45);
        while (v10 != (_QWORD *)v9);
        v11 = (void *)*a1;
      }
      a1[1] = v9;
      operator delete(v11);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 > 0xB60B60B60B60B6)
      goto LABEL_37;
    v12 = 0x4FA4FA4FA4FA4FA5 * (v8 >> 3);
    v13 = 2 * v12;
    if (2 * v12 <= a4)
      v13 = a4;
    v14 = v12 >= 0x5B05B05B05B05BLL ? 0xB60B60B60B60B6 : v13;
    if (v14 > 0xB60B60B60B60B6)
LABEL_37:
      sub_22316E078();
    v15 = 360 * v14;
    result = (uint64_t)operator new(360 * v14);
    v17 = result;
    *a1 = result;
    a1[1] = result;
    a1[2] = result + v15;
    if (v6 != a3)
    {
      v18 = 0;
      do
      {
        result = sub_223174250(v17 + v18, (__int128 *)((char *)v6 + v18));
        v18 += 360;
      }
      while ((__int128 *)((char *)v6 + v18) != a3);
      v17 += v18;
    }
    a1[1] = v17;
  }
  return result;
}

void sub_223936460(double *a1, uint64_t a2, double *a3, uint64_t a4)
{
  uint64_t *v8;
  __int128 v9;
  void *__p[2];
  uint64_t v11;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    if (*(char *)(a4 + 23) < 0)
    {
      sub_223197FA4(__p, *(void **)a4, *(_QWORD *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a4;
      v11 = *(_QWORD *)(a4 + 16);
    }
    *(_QWORD *)&v9 = (uint64_t)(*a1 * 1000000000.0);
    *((_QWORD *)&v9 + 1) = 2;
    v8 = sub_2241471F8();
    sub_2231AA49C((uint64_t)v8, a2, a3, (uint64_t)__p, &v9);
    if (SHIBYTE(v11) < 0)
      operator delete(__p[0]);
  }
}

void sub_223936530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22393654C(uint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char *v26;
  void *v27;
  uint64_t v29;
  char *v30;

  v3 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 4);
  v4 = v3 + 1;
  if (v3 + 1 > 0x1C71C71C71C71C7)
    sub_22316E078();
  if (0x1C71C71C71C71C72 * ((a1[2] - *a1) >> 4) > v4)
    v4 = 0x1C71C71C71C71C72 * ((a1[2] - *a1) >> 4);
  if (0x8E38E38E38E38E39 * ((a1[2] - *a1) >> 4) >= 0xE38E38E38E38E3)
    v6 = 0x1C71C71C71C71C7;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x1C71C71C71C71C7)
      sub_223174E94();
    v7 = (char *)operator new(144 * v6);
  }
  else
  {
    v7 = 0;
  }
  v29 = (uint64_t)&v7[144 * v3];
  v30 = &v7[144 * v6];
  sub_2239367D8(v29, a2);
  v8 = v29;
  v9 = v29 + 144;
  v10 = (char *)*a1;
  v11 = (char *)a1[1];
  if (v11 == (char *)*a1)
  {
    *a1 = v29;
    a1[1] = v9;
    a1[2] = (uint64_t)v30;
  }
  else
  {
    do
    {
      *(_QWORD *)(v8 - 144) = 0;
      *(_QWORD *)(v8 - 136) = 0;
      v8 -= 144;
      *(_QWORD *)(v8 + 16) = 0;
      v12 = *((_OWORD *)v11 - 9);
      v11 -= 144;
      *(_OWORD *)v8 = v12;
      *(_QWORD *)(v8 + 16) = *((_QWORD *)v11 + 2);
      *(_QWORD *)v11 = 0;
      *((_QWORD *)v11 + 1) = 0;
      *((_QWORD *)v11 + 2) = 0;
      *(_QWORD *)(v8 + 24) = 0;
      *(_QWORD *)(v8 + 32) = 0;
      *(_QWORD *)(v8 + 40) = 0;
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v11 + 24);
      *(_QWORD *)(v8 + 40) = *((_QWORD *)v11 + 5);
      *((_QWORD *)v11 + 3) = 0;
      *((_QWORD *)v11 + 4) = 0;
      *((_QWORD *)v11 + 5) = 0;
      *(_QWORD *)(v8 + 48) = 0;
      *(_QWORD *)(v8 + 56) = 0;
      *(_QWORD *)(v8 + 64) = 0;
      *(_OWORD *)(v8 + 48) = *((_OWORD *)v11 + 3);
      *(_QWORD *)(v8 + 64) = *((_QWORD *)v11 + 8);
      *((_QWORD *)v11 + 6) = 0;
      *((_QWORD *)v11 + 7) = 0;
      *((_QWORD *)v11 + 8) = 0;
      v13 = *((_QWORD *)v11 + 9);
      *(_DWORD *)(v8 + 80) = *((_DWORD *)v11 + 20);
      *(_QWORD *)(v8 + 72) = v13;
      v14 = *(_QWORD *)(v11 + 84);
      *(_DWORD *)(v8 + 92) = *((_DWORD *)v11 + 23);
      *(_QWORD *)(v8 + 84) = v14;
      v15 = *((_QWORD *)v11 + 12);
      *(_DWORD *)(v8 + 104) = *((_DWORD *)v11 + 26);
      *(_QWORD *)(v8 + 96) = v15;
      v16 = *(_OWORD *)(v11 + 108);
      v17 = *(_OWORD *)(v11 + 124);
      *(_DWORD *)(v8 + 140) = *((_DWORD *)v11 + 35);
      *(_OWORD *)(v8 + 124) = v17;
      *(_OWORD *)(v8 + 108) = v16;
    }
    while (v11 != v10);
    v11 = (char *)*a1;
    v18 = (char *)a1[1];
    *a1 = v8;
    a1[1] = v9;
    a1[2] = (uint64_t)v30;
    if (v18 != v11)
    {
      do
      {
        v19 = (void *)*((_QWORD *)v18 - 12);
        if (v19)
        {
          *((_QWORD *)v18 - 11) = v19;
          operator delete(v19);
        }
        v20 = *((_QWORD *)v18 - 15);
        if (v20)
        {
          v21 = *((_QWORD *)v18 - 14);
          v22 = (void *)*((_QWORD *)v18 - 15);
          if (v21 != v20)
          {
            v23 = *((_QWORD *)v18 - 14);
            do
            {
              v25 = *(void **)(v23 - 24);
              v23 -= 24;
              v24 = v25;
              if (v25)
              {
                *(_QWORD *)(v21 - 16) = v24;
                operator delete(v24);
              }
              v21 = v23;
            }
            while (v23 != v20);
            v22 = (void *)*((_QWORD *)v18 - 15);
          }
          *((_QWORD *)v18 - 14) = v20;
          operator delete(v22);
        }
        v26 = v18 - 144;
        v27 = (void *)*((_QWORD *)v18 - 18);
        if (v27)
        {
          *((_QWORD *)v18 - 17) = v27;
          operator delete(v27);
        }
        v18 -= 144;
      }
      while (v26 != v11);
    }
  }
  if (v11)
    operator delete(v11);
  return v29 + 144;
}

void sub_2239367C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2239360CC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2239367D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  char *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v5 = *(const void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v6 = v4 - *(_QWORD *)a2;
  if (v4 != *(_QWORD *)a2)
  {
    if (v6 < 0)
      sub_22316E078();
    v7 = (char *)operator new(v4 - *(_QWORD *)a2);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = &v7[8 * (v6 >> 3)];
    v8 = v6 & 0xFFFFFFFFFFFFFFF8;
    memcpy(v7, v5, v8);
    *(_QWORD *)(a1 + 8) = &v7[v8];
  }
  sub_22329A5CC((_QWORD *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = v10 - v9;
  if (v10 != v9)
  {
    if (v11 < 0)
      sub_22316E078();
    v12 = (char *)operator new(v10 - v9);
    v13 = 0;
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = &v12[32 * (v11 >> 5)];
    do
    {
      v14 = v9 + v13;
      v15 = &v12[v13];
      v16 = *(_QWORD *)(v9 + v13);
      *((_DWORD *)v15 + 2) = *(_DWORD *)(v9 + v13 + 8);
      *(_QWORD *)v15 = v16;
      v17 = *(_QWORD *)(v9 + v13 + 12);
      *((_DWORD *)v15 + 5) = *(_DWORD *)(v9 + v13 + 20);
      *(_QWORD *)(v15 + 12) = v17;
      LODWORD(v17) = *(_DWORD *)(v9 + v13 + 24);
      v15[28] = *(_BYTE *)(v9 + v13 + 28);
      *((_DWORD *)v15 + 6) = v17;
      v13 += 32;
    }
    while (v14 + 32 != v10);
    *(_QWORD *)(a1 + 56) = &v12[v13];
  }
  v18 = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v18;
  v19 = *(_QWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_QWORD *)(a1 + 84) = v19;
  v20 = *(_QWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v20;
  v21 = *(_OWORD *)(a2 + 108);
  v22 = *(_OWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 124) = v22;
  *(_OWORD *)(a1 + 108) = v21;
  return a1;
}

void sub_22393694C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223936990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int16 v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  __int16 v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  __int16 v33;
  unint64_t v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int16 v40;
  __int128 v41;
  __int128 v42;
  __int16 v43;
  __int128 v44;
  __int128 v45;
  __int16 v46;
  __int128 v47;

  *(_QWORD *)a1 = &off_24EC204C0;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v8)
  {
    v40 = *(_WORD *)(a2 + 72);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = 0;
    v41 = *(_OWORD *)(a2 + 24);
    v42 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v42;
    *(_OWORD *)(a1 + 24) = v41;
    *(_WORD *)(a1 + 72) = v40;
    *(_QWORD *)(a1 + 80) = &off_24EC204C0;
    v18 = *(_QWORD *)(a3 + 8);
    v19 = *(std::__shared_weak_count **)(a3 + 16);
    if (v19)
      goto LABEL_16;
LABEL_46:
    v43 = *(_WORD *)(a3 + 72);
    *(_QWORD *)(a1 + 88) = v18;
    *(_QWORD *)(a1 + 96) = 0;
    v44 = *(_OWORD *)(a3 + 24);
    v45 = *(_OWORD *)(a3 + 40);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a3 + 56);
    *(_OWORD *)(a1 + 120) = v45;
    *(_OWORD *)(a1 + 104) = v44;
    *(_WORD *)(a1 + 152) = v43;
    *(_QWORD *)(a1 + 160) = &off_24EC200A8;
    v29 = *(_QWORD *)(a4 + 8);
    v30 = *(std::__shared_weak_count **)(a4 + 16);
    if (v30)
      goto LABEL_30;
    goto LABEL_47;
  }
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
  v11 = *(_WORD *)(a2 + 72);
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  v13 = *(_OWORD *)(a2 + 24);
  v14 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v14;
  *(_OWORD *)(a1 + 24) = v13;
  do
    v15 = __ldxr(p_shared_owners);
  while (__stxr(v15 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_WORD *)(a1 + 72) = v11;
  do
    v16 = __ldaxr(p_shared_owners);
  while (__stlxr(v16 - 1, p_shared_owners));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  *(_QWORD *)(a1 + 80) = &off_24EC204C0;
  v18 = *(_QWORD *)(a3 + 8);
  v19 = *(std::__shared_weak_count **)(a3 + 16);
  if (!v19)
    goto LABEL_46;
LABEL_16:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  v22 = *(_WORD *)(a3 + 72);
  do
    v23 = __ldxr(v20);
  while (__stxr(v23 + 1, v20));
  v24 = *(_OWORD *)(a3 + 24);
  v25 = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(a1 + 120) = v25;
  *(_OWORD *)(a1 + 104) = v24;
  do
    v26 = __ldxr(v20);
  while (__stxr(v26 + 1, v20));
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v19;
  *(_WORD *)(a1 + 152) = v22;
  do
    v27 = __ldaxr(v20);
  while (__stlxr(v27 - 1, v20));
  if (!v27)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  do
    v28 = __ldaxr(v20);
  while (__stlxr(v28 - 1, v20));
  if (!v28)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  *(_QWORD *)(a1 + 160) = &off_24EC200A8;
  v29 = *(_QWORD *)(a4 + 8);
  v30 = *(std::__shared_weak_count **)(a4 + 16);
  if (v30)
  {
LABEL_30:
    v31 = (unint64_t *)&v30->__shared_owners_;
    do
      v32 = __ldxr(v31);
    while (__stxr(v32 + 1, v31));
    v33 = *(_WORD *)(a4 + 48);
    do
      v34 = __ldxr(v31);
    while (__stxr(v34 + 1, v31));
    v35 = *(_OWORD *)(a4 + 24);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a4 + 40);
    *(_OWORD *)(a1 + 184) = v35;
    do
      v36 = __ldxr(v31);
    while (__stxr(v36 + 1, v31));
    *(_QWORD *)(a1 + 168) = v29;
    *(_QWORD *)(a1 + 176) = v30;
    *(_WORD *)(a1 + 208) = v33;
    do
      v37 = __ldaxr(v31);
    while (__stlxr(v37 - 1, v31));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
    do
      v38 = __ldaxr(v31);
    while (__stlxr(v38 - 1, v31));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
    v39 = *(_QWORD *)(a1 + 192);
    if (*(_DWORD *)(a1 + 56) != (_DWORD)v39)
      goto LABEL_49;
LABEL_48:
    if (*(_DWORD *)(a1 + 60) == HIDWORD(v39))
      goto LABEL_51;
    goto LABEL_49;
  }
LABEL_47:
  v46 = *(_WORD *)(a4 + 48);
  *(_QWORD *)(a1 + 168) = v29;
  *(_QWORD *)(a1 + 176) = 0;
  v47 = *(_OWORD *)(a4 + 24);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a4 + 40);
  *(_OWORD *)(a1 + 184) = v47;
  *(_WORD *)(a1 + 208) = v46;
  v39 = *(_QWORD *)(a1 + 192);
  if (*(_DWORD *)(a1 + 56) == (_DWORD)v39)
    goto LABEL_48;
LABEL_49:
  if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/ImageProcessing/include/Reconstruction/ImageProcessing/DepthCorrection/TextureAdapter.h", 44, (uint64_t)"semantic_histogram_.Size() == Size()", 36, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    goto LABEL_54;
  }
  v39 = *(_QWORD *)(a1 + 192);
LABEL_51:
  if (*(_QWORD *)(a1 + 136) != v39
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/ImageProcessing/include/Reconstruction/ImageProcessing/DepthCorrection/TextureAdapter.h", 45, (uint64_t)"material_histogram_.Size() == Size()", 36, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
LABEL_54:
    abort();
  }
  return a1;
}

void sub_223936D60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22319EF60(v3);
  sub_22319F500(v2);
  sub_22319F500(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_223936D84(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  __int128 v32;
  char *v33;
  void **v34;
  char *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  __int128 v40;
  __int128 v41;
  __int128 v43;

  v4 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v4;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = *(_OWORD *)(a2 + 24);
  v9 = *(_OWORD *)(a2 + 40);
  v10 = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 24) = v8;
  v11 = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  v12 = *(std::__shared_weak_count **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = v11;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = *(_OWORD *)(a2 + 104);
  v16 = *(_OWORD *)(a2 + 120);
  v17 = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v17;
  *(_OWORD *)(a1 + 120) = v16;
  *(_OWORD *)(a1 + 104) = v15;
  v18 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a2 + 168) = 0;
  *(_QWORD *)(a2 + 176) = 0;
  v19 = *(std::__shared_weak_count **)(a1 + 176);
  *(_OWORD *)(a1 + 168) = v18;
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 194) = *(_OWORD *)(a2 + 194);
  *(_OWORD *)(a1 + 184) = v22;
  v23 = *(_OWORD *)(a2 + 216);
  v24 = *(_OWORD *)(a2 + 232);
  v25 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v25;
  *(_OWORD *)(a1 + 232) = v24;
  *(_OWORD *)(a1 + 216) = v23;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
  v26 = *(_OWORD *)(a2 + 328);
  v27 = *(_OWORD *)(a2 + 344);
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 328) = v26;
  *(_OWORD *)(a1 + 344) = v27;
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  v28 = *(_OWORD *)(a2 + 392);
  *(_QWORD *)(a2 + 400) = 0;
  *(_QWORD *)(a2 + 392) = 0;
  v29 = *(std::__shared_weak_count **)(a1 + 400);
  *(_OWORD *)(a1 + 392) = v28;
  if (!v29)
    goto LABEL_20;
  v30 = (unint64_t *)&v29->__shared_owners_;
  do
    v31 = __ldaxr(v30);
  while (__stlxr(v31 - 1, v30));
  if (!v31)
  {
    ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
    std::__shared_weak_count::__release_weak(v29);
    v43 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 418) = *(_OWORD *)(a2 + 418);
    *(_OWORD *)(a1 + 408) = v43;
    v33 = *(char **)(a1 + 440);
    if (!v33)
      goto LABEL_28;
  }
  else
  {
LABEL_20:
    v32 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 418) = *(_OWORD *)(a2 + 418);
    *(_OWORD *)(a1 + 408) = v32;
    v33 = *(char **)(a1 + 440);
    if (!v33)
      goto LABEL_28;
  }
  v34 = (void **)(a1 + 440);
  v35 = *(char **)(a1 + 448);
  v36 = v33;
  if (v35 != v33)
  {
    do
    {
      v37 = (void *)*((_QWORD *)v35 - 3);
      if (v37)
      {
        *((_QWORD *)v35 - 2) = v37;
        operator delete(v37);
      }
      v35 -= 40;
    }
    while (v35 != v33);
    v36 = *v34;
  }
  *(_QWORD *)(a1 + 448) = v33;
  operator delete(v36);
  *v34 = 0;
  *(_QWORD *)(a1 + 448) = 0;
  *(_QWORD *)(a1 + 456) = 0;
LABEL_28:
  v38 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v38;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a2 + 440) = 0;
  *(_QWORD *)(a2 + 448) = 0;
  *(_QWORD *)(a2 + 456) = 0;
  v39 = *(void **)(a1 + 464);
  if (v39)
  {
    *(_QWORD *)(a1 + 472) = v39;
    operator delete(v39);
    *(_QWORD *)(a1 + 464) = 0;
    *(_QWORD *)(a1 + 472) = 0;
    *(_QWORD *)(a1 + 480) = 0;
  }
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a2 + 464) = 0;
  *(_QWORD *)(a2 + 472) = 0;
  *(_QWORD *)(a2 + 480) = 0;
  v40 = *(_OWORD *)(a2 + 488);
  v41 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 513) = *(_OWORD *)(a2 + 513);
  *(_OWORD *)(a1 + 488) = v40;
  *(_OWORD *)(a1 + 504) = v41;
  return a1;
}

_QWORD *sub_223937070(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;

  v2 = (void *)a1[58];
  if (v2)
  {
    a1[59] = v2;
    operator delete(v2);
  }
  v3 = a1[55];
  if (v3)
  {
    v4 = a1[56];
    v5 = (void *)a1[55];
    if (v4 != v3)
    {
      do
      {
        v6 = *(void **)(v4 - 24);
        if (v6)
        {
          *(_QWORD *)(v4 - 16) = v6;
          operator delete(v6);
        }
        v4 -= 40;
      }
      while (v4 != v3);
      v5 = (void *)a1[55];
    }
    a1[56] = v3;
    operator delete(v5);
  }
  v7 = (std::__shared_weak_count *)a1[50];
  if (!v7)
    goto LABEL_15;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    a1[35] = &off_24EC20828;
    v10 = (std::__shared_weak_count *)a1[22];
    if (!v10)
      goto LABEL_21;
  }
  else
  {
LABEL_15:
    a1[35] = &off_24EC20828;
    v10 = (std::__shared_weak_count *)a1[22];
    if (!v10)
      goto LABEL_21;
  }
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
LABEL_21:
  v13 = (std::__shared_weak_count *)a1[12];
  if (v13)
  {
    v14 = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
      v16 = (std::__shared_weak_count *)a1[2];
      if (v16)
        goto LABEL_26;
      return a1;
    }
  }
  v16 = (std::__shared_weak_count *)a1[2];
  if (!v16)
    return a1;
LABEL_26:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
    return a1;
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  return a1;
}

_QWORD *sub_223937214(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = (std::__shared_weak_count *)a1[22];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[12];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[12];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (!v8)
    return a1;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
    return a1;
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

uint64_t sub_2239372F8(uint64_t *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;

  v5 = (char *)*a1;
  v6 = (char *)a1[1];
  v7 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)&v6[-*a1] >> 3);
  v8 = v7 + 1;
  if (v7 + 1 > 0x222222222222222)
    sub_22316E078();
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - (uint64_t)v5) >> 3) > v8)
    v8 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - (uint64_t)v5) >> 3);
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - (uint64_t)v5) >> 3) >= 0x111111111111111)
    v12 = 0x222222222222222;
  else
    v12 = v8;
  if (!v12)
  {
    v13 = 0;
    v14 = 120 * v7;
    *(_OWORD *)v14 = *a2;
    *(_QWORD *)(v14 + 16) = a3;
    *(_QWORD *)(v14 + 24) = a4;
    if (!a4)
      goto LABEL_15;
    goto LABEL_12;
  }
  if (v12 > 0x222222222222222)
    sub_223174E94();
  v13 = (char *)operator new(120 * v12);
  v14 = (uint64_t)&v13[120 * v7];
  *(_OWORD *)v14 = *a2;
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  if (a4)
  {
LABEL_12:
    v15 = (unint64_t *)(a4 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    v5 = (char *)*a1;
    v6 = (char *)a1[1];
  }
LABEL_15:
  v17 = &v13[120 * v7];
  v17[32] = 0;
  v17[96] = 0;
  v18 = &v13[120 * v12];
  v17[100] = 0;
  v17[116] = 0;
  v19 = v14 + 120;
  if (v6 == v5)
  {
    *a1 = v14;
    a1[1] = v19;
    a1[2] = (uint64_t)v18;
  }
  else
  {
    v20 = 0;
    do
    {
      v22 = v14 + v20;
      v23 = &v6[v20];
      *(_OWORD *)(v22 - 120) = *(_OWORD *)&v6[v20 - 120];
      *(_OWORD *)(v22 - 104) = *(_OWORD *)&v6[v20 - 104];
      *((_QWORD *)v23 - 13) = 0;
      *((_QWORD *)v23 - 12) = 0;
      *(_BYTE *)(v14 + v20 - 88) = 0;
      *(_BYTE *)(v22 - 24) = 0;
      if (v6[v20 - 24])
      {
        v24 = *(_OWORD *)(v23 - 88);
        v25 = *(_OWORD *)(v23 - 72);
        v26 = *(_OWORD *)(v23 - 40);
        *(_OWORD *)(v14 + v20 - 56) = *(_OWORD *)(v23 - 56);
        *(_OWORD *)(v14 + v20 - 40) = v26;
        *(_OWORD *)(v14 + v20 - 88) = v24;
        *(_OWORD *)(v14 + v20 - 72) = v25;
        *(_BYTE *)(v22 - 24) = 1;
      }
      v21 = *(_OWORD *)(v23 - 20);
      *(_BYTE *)(v22 - 4) = *(v23 - 4);
      *(_OWORD *)(v22 - 20) = v21;
      v20 -= 120;
    }
    while (&v6[v20] != v5);
    v5 = (char *)*a1;
    v27 = (char *)a1[1];
    *a1 = v14 + v20;
    a1[1] = v19;
    a1[2] = (uint64_t)v18;
    while (v27 != v5)
    {
      v28 = (std::__shared_weak_count *)*((_QWORD *)v27 - 12);
      if (v28)
      {
        p_shared_owners = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldaxr(p_shared_owners);
        while (__stlxr(v30 - 1, p_shared_owners));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      v27 -= 120;
    }
  }
  if (v5)
    operator delete(v5);
  return v19;
}

void sub_223937524()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223937538(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC5CF08;
  result[1] = v3;
  return result;
}

uint64_t sub_22393756C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC5CF08;
  a2[1] = v2;
  return result;
}

_QWORD *sub_223937588(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v4;

  v2 = *(_QWORD *)(a1 + 8) + 39920;
  v4 = a2;
  return sub_223939EBC(v2, (int *)a2, (uint64_t)&unk_2245BA939, &v4) + 4;
}

uint64_t sub_2239375C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3vlm15OccupancyMapper23ExtractOccupancyAirMeshEvE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3vlm15OccupancyMapper23ExtractOccupancyAirMeshEvE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3vlm15OccupancyMapper23ExtractOccupancyAirMeshEvE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3vlm15OccupancyMapper23ExtractOccupancyAirMeshEvE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223937634()
{
  return &unk_24EC5CF78;
}

__n128 sub_223937640(uint64_t a1, __n128 *a2)
{
  __n128 result;

  if (*(unsigned __int8 *)(a1 + 32) == a2[2].n128_u8[0])
  {
    if (*(_BYTE *)(a1 + 32))
    {
      if (*(_QWORD *)a1)
      {
        sub_22393771C(a1, *(_QWORD *)a1);
        operator delete(*(void **)a1);
        *(_QWORD *)a1 = 0;
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
      }
      result = *a2;
      *(__n128 *)a1 = *a2;
      *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
      a2->n128_u64[0] = 0;
      a2->n128_u64[1] = 0;
      a2[1].n128_u64[0] = 0;
      *(_QWORD *)(a1 + 24) = a2[1].n128_u64[1];
    }
  }
  else if (*(_BYTE *)(a1 + 32))
  {
    if (*(_QWORD *)a1)
    {
      sub_22393771C(a1, *(_QWORD *)a1);
      operator delete(*(void **)a1);
    }
    *(_BYTE *)(a1 + 32) = 0;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    result = *a2;
    *(__n128 *)a1 = *a2;
    *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
    a2->n128_u64[1] = 0;
    a2[1].n128_u64[0] = 0;
    a2->n128_u64[0] = 0;
    *(_QWORD *)(a1 + 24) = a2[1].n128_u64[1];
    *(_BYTE *)(a1 + 32) = 1;
  }
  return result;
}

uint64_t sub_22393771C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;

  v3 = result;
  for (i = *(_QWORD *)(result + 8); i != a2; result = sub_223937868(i))
  {
    v6 = *(_QWORD *)(i - 32);
    if (v6)
    {
      v7 = *(_QWORD *)(i - 24);
      v5 = *(void **)(i - 32);
      if (v7 != v6)
      {
        do
        {
          v8 = *(_QWORD *)(v7 - 40);
          if (v8)
          {
            v9 = *(_QWORD *)(v7 - 32);
            v10 = *(void **)(v7 - 40);
            if (v9 != v8)
            {
              do
              {
                v11 = *(void **)(v9 - 40);
                if (v11)
                {
                  *(_QWORD *)(v9 - 32) = v11;
                  operator delete(v11);
                }
                v9 -= 104;
              }
              while (v9 != v8);
              v10 = *(void **)(v7 - 40);
            }
            *(_QWORD *)(v7 - 32) = v8;
            operator delete(v10);
          }
          v12 = *(void **)(v7 - 144);
          if (v12)
          {
            *(_QWORD *)(v7 - 136) = v12;
            operator delete(v12);
          }
          v13 = *(_QWORD *)(v7 - 168);
          if (v13)
          {
            v14 = *(_QWORD *)(v7 - 160);
            v15 = *(void **)(v7 - 168);
            if (v14 != v13)
            {
              v16 = *(_QWORD *)(v7 - 160);
              do
              {
                v18 = *(void **)(v16 - 24);
                v16 -= 24;
                v17 = v18;
                if (v18)
                {
                  *(_QWORD *)(v14 - 16) = v17;
                  operator delete(v17);
                }
                v14 = v16;
              }
              while (v16 != v13);
              v15 = *(void **)(v7 - 168);
            }
            *(_QWORD *)(v7 - 160) = v13;
            operator delete(v15);
          }
          v19 = v7 - 192;
          v20 = *(void **)(v7 - 192);
          if (v20)
          {
            *(_QWORD *)(v7 - 184) = v20;
            operator delete(v20);
          }
          v7 -= 192;
        }
        while (v19 != v6);
        v5 = *(void **)(i - 32);
      }
      *(_QWORD *)(i - 24) = v6;
      operator delete(v5);
    }
    i -= 216;
  }
  *(_QWORD *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_223937868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;

  v2 = *(_QWORD *)(a1 + 152);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 160);
    v4 = *(void **)(a1 + 152);
    if (v3 != v2)
    {
      do
      {
        v5 = *(void **)(v3 - 40);
        if (v5)
        {
          *(_QWORD *)(v3 - 32) = v5;
          operator delete(v5);
        }
        v3 -= 104;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v2;
    operator delete(v4);
  }
  v6 = *(void **)(a1 + 48);
  if (v6)
  {
    *(_QWORD *)(a1 + 56) = v6;
    operator delete(v6);
  }
  v7 = *(_QWORD *)(a1 + 24);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(a1 + 24);
    if (v8 != v7)
    {
      v10 = *(_QWORD *)(a1 + 32);
      do
      {
        v12 = *(void **)(v10 - 24);
        v10 -= 24;
        v11 = v12;
        if (v12)
        {
          *(_QWORD *)(v8 - 16) = v11;
          operator delete(v11);
        }
        v8 = v10;
      }
      while (v10 != v7);
      v9 = *(void **)(a1 + 24);
    }
    *(_QWORD *)(a1 + 32) = v7;
    operator delete(v9);
  }
  v13 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v13;
    operator delete(v13);
  }
  return a1;
}

uint64_t sub_223937944(uint64_t result, unint64_t a2, const float *a3)
{
  uint64_t v5;
  uint64_t v6;
  float32x4_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float32x4_t *v16;
  unint64_t v17;
  unint64_t v18;
  float32x4_t *v19;
  float32x4_t v20;
  float32x4_t *v21;
  uint64_t v22;
  unint64_t v23;
  _DWORD *v24;
  unint64_t v25;
  _DWORD *v26;
  unint64_t v27;
  float32x4_t v28;
  float32x4_t *v29;
  uint64_t v30;
  _QWORD **v31;
  _QWORD **v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD **v36;
  _OWORD *v37;
  __int128 *v38;
  uint64_t v39;
  __int128 v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD **v44;
  int v45;
  _QWORD *v46;

  v5 = result;
  v7 = *(float32x4_t **)(result + 8);
  v6 = *(_QWORD *)(result + 16);
  if (a2 <= (v6 - (uint64_t)v7) >> 2)
  {
    if (a2)
    {
      v16 = (float32x4_t *)((char *)v7 + 4 * a2);
      v17 = (a2 - 1) & 0x3FFFFFFFFFFFFFFFLL;
      if (v17 < 0xF || v7 < (float32x4_t *)(a3 + 1) && &v7->f32[a2] > a3)
        goto LABEL_44;
      v18 = v17 + 1;
      v19 = (float32x4_t *)((char *)v7 + 4 * (v18 & 0x7FFFFFFFFFFFFFF8));
      v20 = vld1q_dup_f32(a3);
      v21 = v7 + 1;
      v22 = v18 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v21[-1] = v20;
        *v21 = v20;
        v21 += 2;
        v22 -= 8;
      }
      while (v22);
      v7 = v19;
      if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_44:
        do
        {
          v7->f32[0] = *a3;
          v7 = (float32x4_t *)((char *)v7 + 4);
        }
        while (v7 != v16);
      }
      v7 = v16;
    }
    *(_QWORD *)(result + 8) = v7;
  }
  else
  {
    v8 = (uint64_t)v7 - *(_QWORD *)result;
    v9 = v8 >> 2;
    v10 = (v8 >> 2) + a2;
    if (v10 >> 62)
      sub_22316E078();
    v11 = v6 - *(_QWORD *)result;
    if (v11 >> 1 > v10)
      v10 = v11 >> 1;
    v12 = (unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL;
    v13 = 0x3FFFFFFFFFFFFFFFLL;
    if (!v12)
      v13 = v10;
    if (v13)
    {
      LODWORD(v46) = v13;
      v14 = *(unsigned int *)(result + 28);
      if ((_DWORD)v14 == -1)
        sub_22316DD70();
      v44 = &v46;
      result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24EC5CEE8[v14])(&v44, result + 24);
    }
    else
    {
      result = 0;
      v15 = 0;
    }
    v23 = result + 4 * v9;
    v24 = (_DWORD *)(v23 + 4 * a2);
    v25 = (a2 - 1) & 0x3FFFFFFFFFFFFFFFLL;
    v26 = (_DWORD *)v23;
    if (v25 < 0x13)
      goto LABEL_45;
    if (v23 < (unint64_t)(a3 + 1))
    {
      v26 = (_DWORD *)(result + 4 * v9);
      if (result + v8 + 4 * a2 > (unint64_t)a3)
        goto LABEL_45;
    }
    v27 = v25 + 1;
    v26 = (_DWORD *)(v23 + 4 * (v27 & 0x7FFFFFFFFFFFFFF8));
    v28 = vld1q_dup_f32(a3);
    v29 = (float32x4_t *)(result + 4 * v9 + 16);
    v30 = v27 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v29[-1] = v28;
      *v29 = v28;
      v29 += 2;
      v30 -= 8;
    }
    while (v30);
    if (v27 != (v27 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_45:
      do
        *v26++ = *(_DWORD *)a3;
      while (v26 != v24);
    }
    v31 = *(_QWORD ***)v5;
    v32 = *(_QWORD ***)(v5 + 8);
    if (v32 != *(_QWORD ***)v5)
    {
      v33 = (unint64_t)v32 - *(_QWORD *)v5 - 4;
      if (v33 < 0x2C)
        goto LABEL_46;
      if ((unint64_t)v32 - v8 - result < 0x20)
        goto LABEL_46;
      v34 = (v33 >> 2) + 1;
      v35 = 4 * (v34 & 0x7FFFFFFFFFFFFFF8);
      v36 = (_QWORD **)((char *)v32 - v35);
      v23 -= v35;
      v37 = (_OWORD *)(result + 4 * v9 - 16);
      v38 = (__int128 *)(v32 - 2);
      v39 = v34 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v40 = *v38;
        *(v37 - 1) = *(v38 - 1);
        *v37 = v40;
        v37 -= 2;
        v38 -= 2;
        v39 -= 8;
      }
      while (v39);
      v32 = v36;
      if (v34 != (v34 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_46:
        do
        {
          v41 = *((_DWORD *)v32 - 1);
          v32 = (_QWORD **)((char *)v32 - 4);
          *(_DWORD *)(v23 - 4) = v41;
          v23 -= 4;
        }
        while (v32 != v31);
      }
    }
    *(_QWORD *)v5 = v23;
    *(_QWORD *)(v5 + 8) = v24;
    v42 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v5 + 16) = result + 4 * v15;
    if (v31)
    {
      v44 = v31;
      v45 = (unint64_t)(v42 - (_QWORD)v31) >> 2;
      v43 = *(unsigned int *)(v5 + 28);
      if ((_DWORD)v43 == -1)
        sub_22316DD70();
      v46 = &v44;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24EC5CED8[v43])(&v46, v5 + 24);
    }
  }
  return result;
}

uint64_t sub_223937C0C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v11;
  unint64_t v12;
  mach_timebase_info info;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v11) = info.numer;
    LODWORD(v12) = info.denom;
    *(double *)&qword_255795558 = (double)v11 / (double)v12;
    __cxa_guard_release(&qword_255795560);
  }
  v14[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v14[1] = 2;
  LOBYTE(v15) = 0;
  v17 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v15 = *a2;
    v16 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v17 = 1;
  }
  v18 = 0;
  v19 = 0;
  v20 = *a3;
  v21 = 1;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  sub_223937D90(a1, (uint64_t)v14, a4);
  return sub_2231AD66C((uint64_t)v14);
}

void sub_223937D64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_223937D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2231AD66C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223937D90(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;

  sub_223937E68(a1, &v9);
  v8 = v9;
  sub_223305AC8((uint64_t *)&v8, a2, a3);
  v5 = (std::__shared_weak_count *)*((_QWORD *)&v8 + 1);
  if (*((_QWORD *)&v8 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v8 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_223937E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_223937E68(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  void (*v5)(uint64_t);
  unint64_t *v6;
  void (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;
  void (*v15[5])(uint64_t);

  v15[4] = *(void (**)(uint64_t))MEMORY[0x24BDAC8D0];
  v4 = (char *)operator new(0x30uLL);
  v5 = (void (*)(uint64_t))v4;
  *((_QWORD *)v4 + 1) = 0;
  v6 = (unint64_t *)(v4 + 8);
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = &unk_24EC5D1D8;
  v7 = (void (*)(uint64_t))(v4 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  *((_QWORD *)v4 + 5) = v8;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v9 = HIBYTE(v8);
  if ((v9 & 0x80u) == 0)
    v10 = (uint64_t)(v4 + 24);
  else
    v10 = *((_QWORD *)v4 + 3);
  if ((v9 & 0x80u) == 0)
    v11 = v9;
  else
    v11 = *((_QWORD *)v4 + 4);
  if (v10)
    v12 = 1;
  else
    v12 = v11 == 0;
  if (!v12
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15[1] = v7;
  v15[2] = v5;
  do
    v13 = __ldxr(v6);
  while (__stxr(v13 + 1, v6));
  v15[0] = (void (*)(uint64_t))sub_22393808C;
  sub_22450FDB0(a2, 5, v15, v11, v10);
  if (v15[0])
    v15[0](0);
  do
    v14 = __ldaxr(v6);
  while (__stlxr(v14 - 1, v6));
  if (!v14)
  {
    (*(void (**)(_QWORD))(*(_QWORD *)v5 + 16))(v5);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v5);
  }
}

void sub_223937FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22393802C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC5D1D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_223938040(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24EC5D1D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x227684CE8);
}

void sub_223938074(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
}

void sub_22393808C(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2239380C0()
{
  _QWORD *v0;
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;
  uint64_t result;

  v1 = (std::__shared_weak_count *)v0[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  result = 0;
  *v0 = 0;
  return result;
}

uint64_t sub_22393810C(uint64_t a1, uint64_t a2, void (**a3)(int a1))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(v3 + 16);
  a3[1] = *(void (**)(int))(v3 + 8);
  a3[2] = (void (*)(int))v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result = 0;
  *a3 = sub_22393808C;
  return result;
}

__n128 sub_223938148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __n128 result;

  result = *(__n128 *)(v3 + 8);
  *(__n128 *)(a3 + 8) = result;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)a3 = sub_22393808C;
  *(_QWORD *)v3 = 0;
  return result;
}

uint64_t sub_223938174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    v6 = *(_QWORD *)(a4 + 8);
    if (v6 != 0x80000002246565ADLL)
    {
      if (((v6 & 0x80000002246565ADLL & 0x8000000000000000) != 0) == __OFSUB__(v6, 0x80000002246565ADLL))
        return 0;
      if (strcmp((const char *)(v6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x80000002246565ADLL & 0x7FFFFFFFFFFFFFFFLL)))
      {
        return 0;
      }
    }
  }
  else if (a5 != &unk_224656600)
  {
    return 0;
  }
  return v5 + 8;
}

uint64_t sub_223938204(uint64_t *a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  void *__p[2];
  char v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  int v11;
  _QWORD v12[5];
  _QWORD *v13;

  v3 = 0;
  v10 = *a1;
  v11 = *((_DWORD *)a1 + 2);
  v6 = 0x100000003;
  v7 = 3;
  v8 = &v10;
  v9 = 0;
  sub_224505D70((unsigned int *)&v6, __p);
  v12[0] = v2;
  v12[1] = __p;
  v12[2] = v2;
  v12[3] = __p;
  v12[4] = __p;
  v13 = v12;
  ((void (*)(_QWORD **, _BYTE *))sub_22319B9BC)(&v13, v2);
  if (v5 < 0)
    operator delete(__p[0]);
  if (v3 == -1)
    sub_22316DD70();
  v12[0] = &v6;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC5CEA0[v3])(v12, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC5CE70[v3])(v12, v2);
  return result;
}

void sub_223938320(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_223938338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  sub_22319B964((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_22393835C(_QWORD *a1, int *a2)
{
  int8x8_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  uint8x8_t v7;
  uint64_t v8;
  uint64_t **v9;
  uint64_t *result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = (19349669 * v4) ^ (73856093 * *a2) ^ (83492791 * v5);
  v7 = (uint8x8_t)vcnt_s8(v2);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    v8 = (19349669 * v4) ^ (73856093 * v3) ^ (83492791 * v5);
    if (v6 >= *(_QWORD *)&v2)
      v8 = v6 % *(_QWORD *)&v2;
  }
  else
  {
    v8 = v6 & (*(_QWORD *)&v2 - 1);
  }
  v9 = *(uint64_t ***)(*a1 + 8 * v8);
  if (!v9)
    return 0;
  result = *v9;
  if (*v9)
  {
    if (v7.u32[0] < 2uLL)
    {
      v11 = *(_QWORD *)&v2 - 1;
      while (1)
      {
        v13 = result[1];
        if (v13 == v6)
        {
          if (*((_DWORD *)result + 4) == v3 && *((_DWORD *)result + 5) == v4 && *((_DWORD *)result + 6) == v5)
            return result;
        }
        else if ((v13 & v11) != v8)
        {
          return 0;
        }
        result = (uint64_t *)*result;
        if (!result)
          return result;
      }
    }
    do
    {
      v12 = result[1];
      if (v12 == v6)
      {
        if (*((_DWORD *)result + 4) == v3 && *((_DWORD *)result + 5) == v4 && *((_DWORD *)result + 6) == v5)
          return result;
      }
      else
      {
        if (v12 >= *(_QWORD *)&v2)
          v12 %= *(_QWORD *)&v2;
        if (v12 != v8)
          return 0;
      }
      result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_22393849C(uint64_t a1)
{
  uint64_t *v2;

  v2 = *(uint64_t **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_22316F8F4(v2 + 4);
    operator delete(v2);
  }
  return a1;
}

uint64_t *sub_2239384E0(uint64_t *result, int a2, int a3, __int128 *a4)
{
  unsigned int v4;
  uint64_t v5;
  int *v6;
  int v8;
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD **v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  _QWORD **v17;
  __int128 v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;

  v4 = a3 & 0xCFFFFFFF;
  v5 = result[23];
  v6 = (int *)(v5 + 4488 * (a3 & 0xCFFFFFFF));
  if (v6[16])
  {
    v9 = *v6;
    v8 = v6[1];
    v10 = v6[2];
    if (a2)
    {
      v11 = result;
      v12 = (a2 - 1);
      if (a2 == 1)
      {
        v14 = 0;
        v15 = (v6[3] - v9) >> 1;
        do
        {
          v16 = byte_2246559E2[v14];
          if (!(*(_DWORD *)(v11[23] + 4488 * v4 + 4 * v16 + 24) >> 30))
          {
            v17 = (_QWORD **)**((_QWORD **)a4 + 1);
            v20 = v9 + v15 * ((v16 >> 2) & 1);
            v21 = v8 + v15 * ((v16 >> 1) & 1);
            v22 = v10 + v15 * (v16 & 1);
            v23 = v20 + 8;
            v24 = v21 + 8;
            v25 = v22 + 8;
            result = sub_22390246C(**v17 + 40664, (int *)&v20, (uint64_t)&v20);
          }
          ++v14;
        }
        while (v14 != 8);
      }
      else
      {
        if ((*(_DWORD *)(v5 + 4488 * v4 + 24) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(result, (a2 - 1));
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 28) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(v11, v12);
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 32) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(v11, v12);
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 36) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(v11, v12);
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 40) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(v11, v12);
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 44) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(v11, v12);
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 48) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          result = (uint64_t *)sub_2239384E0(v11, v12);
          v5 = v11[23];
        }
        if ((*(_DWORD *)(v5 + 4488 * v4 + 52) & 0x80000000) == 0)
        {
          v18 = *a4;
          v19 = *((_QWORD *)a4 + 2);
          return (uint64_t *)sub_2239384E0(v11, v12);
        }
      }
    }
    else
    {
      v13 = (_QWORD **)**((_QWORD **)a4 + 1);
      v20 = *v6;
      v21 = v8;
      v22 = v10;
      v23 = v9 + 8;
      v24 = v8 + 8;
      v25 = v10 + 8;
      return sub_22390246C(**v13 + 40664, (int *)&v20, (uint64_t)&v20);
    }
  }
  return result;
}

void sub_2239387D4()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2239387E8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC5CF98;
  result[1] = v3;
  return result;
}

uint64_t sub_22393881C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC5CF98;
  a2[1] = v2;
  return result;
}

float sub_223938838(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  _BYTE *v10;
  int v11;
  float v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  int v18;
  float v19;
  unsigned int v21;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  std::mutex *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  std::string::size_type size;
  std::string *v34;
  std::string::size_type v35;
  std::string::size_type v36;
  int v37;
  __n128 *v40;
  std::string *v41;
  size_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  std::mutex *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  std::string::size_type v51;
  std::string *v52;
  std::string::size_type v53;
  std::string::size_type v54;
  int v55;
  __n128 *v58;
  std::string *v59;
  size_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  std::mutex *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t *v69;
  std::string::size_type v70;
  std::string *v71;
  std::string::size_type v72;
  std::string::size_type v73;
  int v74;
  __n128 *v77;
  std::string *v78;
  size_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  std::mutex *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  std::string::size_type v87;
  std::string *v88;
  std::string::size_type v89;
  std::string::size_type v90;
  int v91;
  __n128 *v94;
  std::string *v95;
  size_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  std::mutex *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  std::string::size_type v104;
  std::string *v105;
  std::string::size_type v106;
  std::string::size_type v107;
  int v108;
  __n128 *v111;
  std::string *v112;
  size_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  std::mutex *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  std::string::size_type v122;
  std::string *v123;
  std::string::size_type v124;
  std::string::size_type v125;
  int v126;
  __n128 *v129;
  std::string *v130;
  size_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  std::mutex *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  std::string::size_type v139;
  std::string *v140;
  std::string::size_type v141;
  std::string::size_type v142;
  int v143;
  __n128 *v146;
  std::string *v147;
  size_t v148;
  unsigned int v149;
  int v150;
  std::string v151;
  int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  __int128 v156;
  _BYTE __p[24];
  uint64_t v158;
  _QWORD v159[2];

  v159[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned __int8 *)(v1 + 297);
  if (*(_BYTE *)(v1 + 297))
  {
    v3 = *(_QWORD *)(v1 + 40784);
    if (v3)
      return (float)*(unsigned int *)(v3 + 22960);
    else
      return 0.0;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = (_BYTE *)(v1 + 35332);
    v153 = 1105618535;
    v154 = 0;
    v11 = *(unsigned __int8 *)(v1 + 223);
    v12 = 20.25;
    if (!v11)
      v12 = 3.4028e38;
    v13 = 144;
    do
    {
      v14 = *((_DWORD *)v10 - 5);
      v15 = *((_DWORD *)v10 - 4);
      v16 = *((_DWORD *)v10 - 3);
      v17 = v15 + v14 + v16;
      if (v17)
        ++v2;
      if (v17 == v15)
        v18 = 10;
      else
        v18 = 2;
      v19 = *((float *)v10 - 1);
      if (v19 >= v12 && *v10 == 2)
        v21 = v18;
      else
        v21 = 2;
      if (v19 >= *((float *)v10 - 2) && v17 >= v21)
      {
        v154 = ++v9;
        v8 += v14;
        v7 += v15;
        v6 += v16;
        v5 += v17;
      }
      v10 += 32;
      --v13;
    }
    while (v13);
    if (v9 <= 2)
      v5 = 0;
    v23 = v2 < 0x1D || v11 == 0;
    v155 = v2;
    v152 = 3;
    if (v23)
      v2 = v5;
    v149 = v2;
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v24 = sub_2241471F8();
      v25 = v24[2];
      if (!v25)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v25 = v24[2];
      }
      v26 = *(_QWORD *)(v25 + 64);
      v27 = (std::mutex *)(v26 + 32);
      std::mutex::lock((std::mutex *)(v26 + 32));
      v29 = *(_QWORD *)(v26 + 96);
      v28 = *(_QWORD *)(v26 + 104);
      std::mutex::unlock(v27);
      if (v29 != v28)
      {
        sub_2241471F8();
        v30 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v30 + 24))(v30))
        {
          kdebug_trace();
          v150 = v8;
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v30 + 24))(v30))
          {
            v31 = (char *)operator new(0x20uLL);
            *(_OWORD *)&__p[8] = xmmword_2245B8D00;
            strcpy(v31, "FilteredUnknownToOccupied");
            *(_QWORD *)&v156 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v156 + 1) = 2;
            *(_QWORD *)__p = v31;
            v32 = sub_2241471F8();
            sub_2235352BC((uint64_t)v32, v30, &v150, (uint64_t)__p, &v156);
            if ((__p[23] & 0x80000000) != 0)
              operator delete(*(void **)__p);
          }
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    size = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v151.__r_.__value_.__l.__size_;
    if (size >= 0x11)
    {
      v34 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v34 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v35 = v34->__r_.__value_.__r.__words[0];
      v36 = v34->__r_.__value_.__l.__size_;
      v37 = v34->__r_.__value_.__s.__data_[16];
      if (v35 == 0x6365722E64337663 && v36 == 0x73746174532E6E6FLL && v37 == 46)
      {
        v40 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v41 = &v151;
        else
          v41 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v42 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v42 = v151.__r_.__value_.__l.__size_;
        *(_DWORD *)__p = v8;
        sub_223532E4C(v40, v41, v42, (unsigned int *)__p, (uint64_t)"FilteredUnknownToOccupied", 25);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v43 = sub_2241471F8();
      v44 = v43[2];
      if (!v44)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v44 = v43[2];
      }
      v45 = *(_QWORD *)(v44 + 64);
      v46 = (std::mutex *)(v45 + 32);
      std::mutex::lock((std::mutex *)(v45 + 32));
      v48 = *(_QWORD *)(v45 + 96);
      v47 = *(_QWORD *)(v45 + 104);
      std::mutex::unlock(v46);
      if (v48 != v47)
      {
        sub_2241471F8();
        v49 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v49 + 24))(v49))
        {
          kdebug_trace();
          v150 = v7;
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v49 + 24))(v49))
          {
            __p[23] = 21;
            strcpy(__p, "FilteredUnknownToFree");
            *(_QWORD *)&v156 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v156 + 1) = 2;
            v50 = sub_2241471F8();
            sub_2235352BC((uint64_t)v50, v49, &v150, (uint64_t)__p, &v156);
            if ((__p[23] & 0x80000000) != 0)
              operator delete(*(void **)__p);
          }
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    v51 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v51 = v151.__r_.__value_.__l.__size_;
    if (v51 >= 0x11)
    {
      v52 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v52 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v53 = v52->__r_.__value_.__r.__words[0];
      v54 = v52->__r_.__value_.__l.__size_;
      v55 = v52->__r_.__value_.__s.__data_[16];
      if (v53 == 0x6365722E64337663 && v54 == 0x73746174532E6E6FLL && v55 == 46)
      {
        v58 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v59 = &v151;
        else
          v59 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v60 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v60 = v151.__r_.__value_.__l.__size_;
        *(_DWORD *)__p = v7;
        sub_223532E4C(v58, v59, v60, (unsigned int *)__p, (uint64_t)"FilteredUnknownToFree", 21);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v61 = sub_2241471F8();
      v62 = v61[2];
      if (!v62)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v62 = v61[2];
      }
      v63 = *(_QWORD *)(v62 + 64);
      v64 = (std::mutex *)(v63 + 32);
      std::mutex::lock((std::mutex *)(v63 + 32));
      v66 = *(_QWORD *)(v63 + 96);
      v65 = *(_QWORD *)(v63 + 104);
      std::mutex::unlock(v64);
      if (v66 != v65)
      {
        sub_2241471F8();
        v67 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v67 + 24))(v67))
        {
          kdebug_trace();
          v150 = v6;
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v67 + 24))(v67))
          {
            v68 = (char *)operator new(0x20uLL);
            *(_OWORD *)&__p[8] = xmmword_2245C6420;
            strcpy(v68, "FilteredHallucinatedToObserved");
            *(_QWORD *)&v156 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v156 + 1) = 2;
            *(_QWORD *)__p = v68;
            v69 = sub_2241471F8();
            sub_2235352BC((uint64_t)v69, v67, &v150, (uint64_t)__p, &v156);
            if ((__p[23] & 0x80000000) != 0)
              operator delete(*(void **)__p);
          }
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    v70 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v70 = v151.__r_.__value_.__l.__size_;
    if (v70 >= 0x11)
    {
      v71 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v71 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v72 = v71->__r_.__value_.__r.__words[0];
      v73 = v71->__r_.__value_.__l.__size_;
      v74 = v71->__r_.__value_.__s.__data_[16];
      if (v72 == 0x6365722E64337663 && v73 == 0x73746174532E6E6FLL && v74 == 46)
      {
        v77 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v78 = &v151;
        else
          v78 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v79 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v79 = v151.__r_.__value_.__l.__size_;
        *(_DWORD *)__p = v6;
        sub_223532E4C(v77, v78, v79, (unsigned int *)__p, (uint64_t)"FilteredHallucinatedToObserved", 30);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v80 = sub_2241471F8();
      v81 = v80[2];
      if (!v81)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v81 = v80[2];
      }
      v82 = *(_QWORD *)(v81 + 64);
      v83 = (std::mutex *)(v82 + 32);
      std::mutex::lock((std::mutex *)(v82 + 32));
      v85 = *(_QWORD *)(v82 + 96);
      v84 = *(_QWORD *)(v82 + 104);
      std::mutex::unlock(v83);
      if (v85 != v84)
      {
        sub_2241471F8();
        v86 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v86 + 24))(v86))
        {
          kdebug_trace();
          sub_22386D4F4((double *)&qword_255788F20, v86, (int *)&v154, "NumActiveSpots");
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    v87 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v87 = v151.__r_.__value_.__l.__size_;
    if (v87 >= 0x11)
    {
      v88 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v88 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v89 = v88->__r_.__value_.__r.__words[0];
      v90 = v88->__r_.__value_.__l.__size_;
      v91 = v88->__r_.__value_.__s.__data_[16];
      if (v89 == 0x6365722E64337663 && v90 == 0x73746174532E6E6FLL && v91 == 46)
      {
        v94 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v95 = &v151;
        else
          v95 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v96 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v96 = v151.__r_.__value_.__l.__size_;
        sub_223532E4C(v94, v95, v96, &v154, (uint64_t)"NumActiveSpots", 14);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v97 = sub_2241471F8();
      v98 = v97[2];
      if (!v98)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v98 = v97[2];
      }
      v99 = *(_QWORD *)(v98 + 64);
      v100 = (std::mutex *)(v99 + 32);
      std::mutex::lock((std::mutex *)(v99 + 32));
      v102 = *(_QWORD *)(v99 + 96);
      v101 = *(_QWORD *)(v99 + 104);
      std::mutex::unlock(v100);
      if (v102 != v101)
      {
        sub_2241471F8();
        v103 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v103 + 24))(v103))
        {
          kdebug_trace();
          sub_22353311C((double *)&qword_255788F20, v103, &v152, "MinActiveThreshold");
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    v104 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v104 = v151.__r_.__value_.__l.__size_;
    if (v104 >= 0x11)
    {
      v105 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v105 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v106 = v105->__r_.__value_.__r.__words[0];
      v107 = v105->__r_.__value_.__l.__size_;
      v108 = v105->__r_.__value_.__s.__data_[16];
      if (v106 == 0x6365722E64337663 && v107 == 0x73746174532E6E6FLL && v108 == 46)
      {
        v111 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v112 = &v151;
        else
          v112 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v113 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v113 = v151.__r_.__value_.__l.__size_;
        sub_223532E4C(v111, v112, v113, (unsigned int *)&v152, (uint64_t)"MinActiveThreshold", 18);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v114 = sub_2241471F8();
      v115 = v114[2];
      if (!v115)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v115 = v114[2];
      }
      v116 = *(_QWORD *)(v115 + 64);
      v117 = (std::mutex *)(v116 + 32);
      std::mutex::lock((std::mutex *)(v116 + 32));
      v119 = *(_QWORD *)(v116 + 96);
      v118 = *(_QWORD *)(v116 + 104);
      std::mutex::unlock(v117);
      if (v119 != v118)
      {
        sub_2241471F8();
        v120 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v120 + 24))(v120))
        {
          kdebug_trace();
          if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v120 + 24))(v120))
          {
            __p[23] = 16;
            strcpy(__p, "TotalChangeSpots");
            *(_QWORD *)&v156 = (uint64_t)(*(double *)&qword_255788F20 * 1000000000.0);
            *((_QWORD *)&v156 + 1) = 2;
            v121 = sub_2241471F8();
            sub_22356F6DC((uint64_t)v121, v120, (int *)&v155, (uint64_t)__p, &v156);
            if ((__p[23] & 0x80000000) != 0)
              operator delete(*(void **)__p);
          }
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    v122 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v122 = v151.__r_.__value_.__l.__size_;
    if (v122 >= 0x11)
    {
      v123 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v123 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v124 = v123->__r_.__value_.__r.__words[0];
      v125 = v123->__r_.__value_.__l.__size_;
      v126 = v123->__r_.__value_.__s.__data_[16];
      if (v124 == 0x6365722E64337663 && v125 == 0x73746174532E6E6FLL && v126 == 46)
      {
        v129 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v130 = &v151;
        else
          v130 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v131 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v131 = v151.__r_.__value_.__l.__size_;
        sub_223532E4C(v129, v130, v131, &v155, (uint64_t)"TotalChangeSpots", 16);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    *(_QWORD *)__p = "cv3d.recon.";
    *(_QWORD *)&__p[8] = 11;
    *(_QWORD *)&__p[16] = "Stats.Monitoring.Occupancy";
    v158 = 26;
    sub_2231A9820((uint64_t)__p, (uint64_t)v159, 0, 0, &v151);
    sub_224569D7C();
    sub_224569A80();
    if (os_variant_has_internal_diagnostics())
    {
      v132 = sub_2241471F8();
      v133 = v132[2];
      if (!v133)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)&unk_2245B11CF, 0, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v133 = v132[2];
      }
      v134 = *(_QWORD *)(v133 + 64);
      v135 = (std::mutex *)(v134 + 32);
      std::mutex::lock((std::mutex *)(v134 + 32));
      v137 = *(_QWORD *)(v134 + 96);
      v136 = *(_QWORD *)(v134 + 104);
      std::mutex::unlock(v135);
      if (v137 != v136)
      {
        sub_2241471F8();
        v138 = (*(uint64_t (**)(void))(qword_2557952E0 + 48))();
        if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v138 + 24))(v138))
        {
          kdebug_trace();
          sub_22392A8DC((double *)&qword_255788F20, v138, &v153, "TotalChangeSpotsThreshold");
          kdebug_trace();
        }
      }
    }
    kdebug_trace();
    v139 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
    if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v139 = v151.__r_.__value_.__l.__size_;
    if (v139 >= 0x11)
    {
      v140 = &v151;
      if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v140 = (std::string *)v151.__r_.__value_.__r.__words[0];
      v141 = v140->__r_.__value_.__r.__words[0];
      v142 = v140->__r_.__value_.__l.__size_;
      v143 = v140->__r_.__value_.__s.__data_[16];
      if (v141 == 0x6365722E64337663 && v142 == 0x73746174532E6E6FLL && v143 == 46)
      {
        v146 = sub_223187510();
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v147 = &v151;
        else
          v147 = (std::string *)v151.__r_.__value_.__r.__words[0];
        if ((v151.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v148 = HIBYTE(v151.__r_.__value_.__r.__words[2]);
        else
          v148 = v151.__r_.__value_.__l.__size_;
        sub_2231897A8((uint64_t *)v146, v147, v148, (float *)&v153, (uint64_t)"TotalChangeSpotsThreshold", 25);
      }
    }
    kdebug_trace();
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v151.__r_.__value_.__l.__data_);
    return (float)v149;
  }
}

void sub_223939AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_223939E44(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3vlm15OccupancyMapper25CreateMappedStateProviderEvE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3vlm15OccupancyMapper25CreateMappedStateProviderEvE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3vlm15OccupancyMapper25CreateMappedStateProviderEvE3$_0"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3vlm15OccupancyMapper25CreateMappedStateProviderEvE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223939EB0()
{
  return &unk_24EC5D008;
}

_QWORD *sub_223939EBC(uint64_t a1, int *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  void **v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  float v19;
  float v20;
  uint64_t v21;
  _QWORD *v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t prime;
  int8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = (19349669 * v8) ^ (73856093 * *a2) ^ (83492791 * v9);
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      v4 = (19349669 * v8) ^ (73856093 * v7) ^ (83492791 * v9);
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = v10 & (v11 - 1);
    }
    v13 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v14[1];
            if (v16 == v10)
            {
              if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
                return v14;
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_27;
            }
            v14 = (_QWORD *)*v14;
            if (!v14)
              goto LABEL_27;
          }
        }
        do
        {
          v15 = v14[1];
          if (v15 == v10)
          {
            if (*((_DWORD *)v14 + 4) == v7 && *((_DWORD *)v14 + 5) == v8 && *((_DWORD *)v14 + 6) == v9)
              return v14;
          }
          else
          {
            if (v15 >= v11)
              v15 %= v11;
            if (v15 != v4)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_27:
  v17 = (_QWORD *)(a1 + 16);
  v14 = operator new(0x1A0uLL);
  *v14 = 0;
  v14[1] = v10;
  v18 = **a4;
  *((_DWORD *)v14 + 6) = *((_DWORD *)*a4 + 2);
  v14[2] = v18;
  sub_2241498F4((uint64_t)(v14 + 4), 0);
  v19 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v20 = *(float *)(a1 + 32);
  if (v11 && (float)(v20 * (float)v11) >= v19)
  {
    v21 = *(_QWORD *)a1;
    v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v22)
    {
LABEL_30:
      *v14 = *v22;
LABEL_65:
      *v22 = v14;
      goto LABEL_66;
    }
  }
  else
  {
    v23 = 1;
    if (v11 >= 3)
      v23 = (v11 & (v11 - 1)) != 0;
    v24 = v23 | (2 * v11);
    v25 = vcvtps_u32_f32(v19 / v20);
    if (v24 <= v25)
      prime = v25;
    else
      prime = v24;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v27 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v27)
      goto LABEL_41;
    if (prime < *(_QWORD *)&v27)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v27 < 3uLL || (v29 = (uint8x8_t)vcnt_s8(v27), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (prime <= v28)
        prime = v28;
      if (prime < *(_QWORD *)&v27)
LABEL_41:
        sub_2231B0668(a1, prime);
    }
    v11 = *(_QWORD *)(a1 + 8);
    v31 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        v4 = v10 % v11;
        v21 = *(_QWORD *)a1;
        v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v10 % v11));
        if (v22)
          goto LABEL_30;
      }
      else
      {
        v4 = v10;
        v21 = *(_QWORD *)a1;
        v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v10);
        if (v22)
          goto LABEL_30;
      }
    }
    else
    {
      v4 = v31 & v10;
      v21 = *(_QWORD *)a1;
      v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v31 & v10));
      if (v22)
        goto LABEL_30;
    }
  }
  *v14 = *v17;
  *v17 = v14;
  *(_QWORD *)(v21 + 8 * v4) = v17;
  if (*v14)
  {
    v32 = *(_QWORD *)(*v14 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v32 >= v11)
        v32 %= v11;
    }
    else
    {
      v32 &= v11 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v32);
    goto LABEL_65;
  }
LABEL_66:
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_22393A248(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_22393849C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22393A25C(uint64_t a1, int a2, int a3, char a4, _QWORD *a5, double a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11, int8x16_t a12, int8x16_t a13)
{
  unsigned int v16;
  uint64_t v17;
  uint64_t result;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int v26;
  uint64_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  int8x16_t v33;
  int8x16_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  int8x16_t v40;
  int8x16_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  int8x16_t v47;
  int8x16_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  int8x16_t v54;
  int8x16_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  int8x16_t v61;
  int8x16_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  int8x16_t v68;
  int8x16_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  int8x16_t v75;
  int8x16_t v76;
  uint64_t v77;
  int v78;
  unsigned int v79;
  int32x2_t v80;
  unsigned int v81;
  unsigned int v82;
  int32x2_t v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int32x2_t v93;
  __int128 v94;
  uint64_t v95;
  int32x2_t v96;
  int v97;
  uint64_t v98;
  unsigned int v99;
  int32x2_t v100;
  int v101;
  uint64_t v102;
  int v103;

  v16 = a3 & 0xCFFFFFFF;
  v17 = *(_QWORD *)(a1 + 184) + 4488 * (a3 & 0xCFFFFFFF);
  v100 = *(int32x2_t *)v17;
  v101 = *(_DWORD *)(v17 + 8);
  v102 = *(_QWORD *)(v17 + 12);
  v103 = *(_DWORD *)(v17 + 20);
  result = sub_22393A920(a5, a4, a2, 0, (uint64_t)&v100, a6, a7, a8, a9, a10, a11, a12, a13);
  if (a2)
  {
    v26 = result;
    if ((_DWORD)result != 3)
    {
      v27 = (a2 - 1);
      if ((_DWORD)v27)
      {
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 24) & 0x80000000) != 0)
        {
          v85 = (v102 - v100.i32[0]) >> 1;
          v96 = v100;
          v97 = v101;
          LODWORD(v98) = v85 + v100.i32[0];
          HIDWORD(v98) = v100.i32[1] + v85;
          v99 = v101 + v85;
          v94 = *(_OWORD *)a5;
          v95 = a5[2];
          sub_22393ABF4(v27, (unsigned int *)&v96, (_DWORD)result == 2, &v94, *(double *)&v94, v19, v20, v21, v22, v23, v24, v25);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 28) & 0x80000000) == 0)
          {
LABEL_6:
            sub_22393A25C(a1, v27);
            if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 32) & 0x80000000) == 0)
              goto LABEL_7;
            goto LABEL_20;
          }
        }
        else
        {
          sub_22393A25C(a1, v27);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 28) & 0x80000000) == 0)
            goto LABEL_6;
        }
        v86 = (v102 - v100.i32[0]) >> 1;
        v96 = v100;
        v97 = v101 + v86;
        LODWORD(v98) = v86 + v100.i32[0];
        HIDWORD(v98) = v100.i32[1] + v86;
        v99 = v101 + v86 + v86;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v28, v29, v30, v31, v32, v33, v34);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 32) & 0x80000000) == 0)
        {
LABEL_7:
          sub_22393A25C(a1, v27);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 36) & 0x80000000) == 0)
            goto LABEL_8;
          goto LABEL_21;
        }
LABEL_20:
        v87 = (v102 - v100.i32[0]) >> 1;
        v96.i32[0] = v100.i32[0];
        v96.i32[1] = v87 + v100.i32[1];
        v97 = v101;
        LODWORD(v98) = v87 + v100.i32[0];
        HIDWORD(v98) = v87 + v100.i32[1] + v87;
        v99 = v101 + v87;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v35, v36, v37, v38, v39, v40, v41);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 36) & 0x80000000) == 0)
        {
LABEL_8:
          sub_22393A25C(a1, v27);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 40) & 0x80000000) == 0)
            goto LABEL_9;
          goto LABEL_22;
        }
LABEL_21:
        v88 = (v102 - v100.i32[0]) >> 1;
        v96.i32[0] = v100.i32[0];
        v96.i32[1] = v88 + v100.i32[1];
        v97 = v101 + v88;
        LODWORD(v98) = v88 + v100.i32[0];
        HIDWORD(v98) = v88 + v100.i32[1] + v88;
        v99 = v101 + v88 + v88;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v42, v43, v44, v45, v46, v47, v48);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 40) & 0x80000000) == 0)
        {
LABEL_9:
          sub_22393A25C(a1, v27);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 44) & 0x80000000) == 0)
            goto LABEL_10;
          goto LABEL_23;
        }
LABEL_22:
        v89 = (v102 - v100.i32[0]) >> 1;
        v96.i32[0] = v89 + v100.i32[0];
        v96.i32[1] = v100.i32[1];
        v97 = v101;
        LODWORD(v98) = v89 + v100.i32[0] + v89;
        HIDWORD(v98) = v100.i32[1] + v89;
        v99 = v101 + v89;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v49, v50, v51, v52, v53, v54, v55);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 44) & 0x80000000) == 0)
        {
LABEL_10:
          sub_22393A25C(a1, v27);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 48) & 0x80000000) == 0)
            goto LABEL_11;
          goto LABEL_24;
        }
LABEL_23:
        v90 = (v102 - v100.i32[0]) >> 1;
        v96.i32[0] = v90 + v100.i32[0];
        v96.i32[1] = v100.i32[1];
        v97 = v101 + v90;
        LODWORD(v98) = v90 + v100.i32[0] + v90;
        HIDWORD(v98) = v100.i32[1] + v90;
        v99 = v101 + v90 + v90;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v56, v57, v58, v59, v60, v61, v62);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 48) & 0x80000000) == 0)
        {
LABEL_11:
          sub_22393A25C(a1, v27);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 52) & 0x80000000) == 0)
            return sub_22393A25C(a1, v27);
          goto LABEL_25;
        }
LABEL_24:
        v91 = (v102 - v100.i32[0]) >> 1;
        v96.i32[0] = v91 + v100.i32[0];
        v96.i32[1] = v91 + v100.i32[1];
        v97 = v101;
        LODWORD(v98) = v91 + v100.i32[0] + v91;
        HIDWORD(v98) = v91 + v100.i32[1] + v91;
        v99 = v101 + v91;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v63, v64, v65, v66, v67, v68, v69);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 52) & 0x80000000) == 0)
          return sub_22393A25C(a1, v27);
LABEL_25:
        v92 = (v102 - v100.i32[0]) >> 1;
        v96.i32[0] = v92 + v100.i32[0];
        v96.i32[1] = v92 + v100.i32[1];
        v97 = v101 + v92;
        LODWORD(v98) = v92 + v100.i32[0] + v92;
        HIDWORD(v98) = v92 + v100.i32[1] + v92;
        v99 = v101 + v92 + v92;
        v94 = *(_OWORD *)a5;
        v95 = a5[2];
        return sub_22393ABF4(v27, (unsigned int *)&v96, v26 == 2, &v94, *(double *)&v94, v70, v71, v72, v73, v74, v75, v76);
      }
      v77 = 0;
      v93 = v100;
      v78 = v101;
      v79 = (v102 - v100.i32[0]) >> 1;
      v80 = vdup_n_s32(v79);
      do
      {
        while (1)
        {
          v81 = byte_2246559E2[v77];
          v82 = *(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v16 + 4 * byte_2246559E2[v77] + 24);
          v83 = vmla_s32(v93, v80, (int32x2_t)(*(_QWORD *)&vshl_u32((uint32x2_t)vdup_n_s32(v81), (uint32x2_t)-2) & 0xFFFFFF01FFFFFF01));
          v84 = v78 + v79 * (v81 & 1);
          *(int32x2_t *)v19.f32 = vadd_s32(v83, v80);
          if ((v82 & 0x80000000) == 0)
            break;
          v96 = v83;
          v97 = v78 + v79 * (v81 & 1);
          v98 = v19.i64[0];
          v99 = v84 + v79;
          v94 = *(_OWORD *)a5;
          v95 = a5[2];
          result = sub_22393A920(&v94, v26 == 2, 0, 0x80000000, (uint64_t)&v96, *(double *)&v94, v19, v20, v21, v22, v23, v24, v25);
          if (++v77 == 8)
            return result;
        }
        v96 = v83;
        v97 = v78 + v79 * (v81 & 1);
        v98 = v19.i64[0];
        v99 = v84 + v79;
        result = sub_22393A920(a5, v26 == 2, 0, v82, (uint64_t)&v96, *(double *)&v83, v19, v20, v21, v22, v23, v24, v25);
        ++v77;
      }
      while (v77 != 8);
    }
  }
  return result;
}

uint64_t sub_22393A920(_QWORD *a1, char a2, int a3, unsigned int a4, uint64_t a5, double a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, float32x4_t a11, int8x16_t a12, int8x16_t a13)
{
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 *v22;
  __int128 v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t **v26;
  float v27;
  float32x4_t v28;
  float32x4_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  _QWORD *v37;
  int32x2_t v38;
  __int32 v39;
  int32x2_t v40;
  __int32 v41;
  __int128 v42;
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  if ((a2 & 1) != 0)
  {
LABEL_2:
    result = 2;
    if (a3)
      return result;
  }
  else
  {
    v26 = *(uint64_t ***)(*a1 + 8);
    v27 = *(float *)(*(_QWORD *)*a1 + 128);
    *(float32x2_t *)a7.f32 = vcvt_f32_s32(*(int32x2_t *)a5);
    a7.f32[2] = (float)*(int *)(a5 + 8);
    v28 = vmulq_n_f32(a7, v27);
    *(float32x2_t *)a8.f32 = vcvt_f32_s32(*(int32x2_t *)(a5 + 12));
    a9.f32[0] = (float)*(int *)(a5 + 20);
    a8.f32[2] = a9.f32[0];
    v29 = vmulq_n_f32(a8, v27);
    v39 = v28.i32[2];
    v41 = v29.i32[2];
    v38 = *(int32x2_t *)v28.f32;
    v40 = *(int32x2_t *)v29.f32;
    v30 = *v26;
    v31 = *v30;
    v32 = v30[1];
    if (*v30 == v32)
      return 3;
    v33 = 0;
    do
    {
      v34 = *(_QWORD *)(v31 + 88);
      if (v34 && *(float *)(v31 + 352) >= 0.0)
      {
        v29.i32[0] = 0;
        sub_223E99E04((uint64_t)&v38, v34, (uint64_t)&v42, v29, a9, a10, a11, a12, a13);
        if ((_DWORD)v42 == 2)
          goto LABEL_2;
        v33 |= (_DWORD)v42 == 1;
      }
      v31 += 360;
    }
    while (v31 != v32);
    if ((v33 & 1) == 0)
      return 3;
    result = 1;
    if (a3)
      return result;
  }
  v18 = (_QWORD *)a1[1];
  v19 = (_QWORD *)*v18;
  if ((a4 & 0x80000000) != 0)
  {
    v21 = v19 + 2609;
    v35 = (__int128 *)v18[1];
    v36 = *v35;
    LODWORD(v35) = *((unsigned __int8 *)v35 + 16);
    v43 = (char)v35;
    v42 = v36;
    if ((_DWORD)v35)
      goto LABEL_8;
  }
  else
  {
    v20 = v19[2615];
    if (0xAAAAAAAAAAAAAAABLL * ((v19[2616] - v20) >> 4) <= a4)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 1042, (uint64_t)"info_index < allocated_voxel_block_infos_.size()", 48, (uint64_t)"Invalid map index", 17, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v20 = v19[2615];
    }
    v21 = (_QWORD *)(v20 + 48 * a4);
    v22 = (__int128 *)v18[1];
    v23 = *v22;
    LODWORD(v22) = *((unsigned __int8 *)v22 + 16);
    v43 = (char)v22;
    v42 = v23;
    if ((_DWORD)v22)
    {
LABEL_8:
      v24 = sub_223340F28(v21, (uint64_t)&v42);
      if (!v24)
        goto LABEL_25;
      v25 = *((unsigned int *)v24 + 8);
      if ((v25 & 0x80000000) != 0)
        goto LABEL_25;
LABEL_23:
      if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19[2601] - v19[2600]) >> 12) <= v25
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 205, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      goto LABEL_25;
    }
  }
  v25 = *((unsigned int *)v21 + 10);
  if ((v25 & 0x80000000) == 0)
    goto LABEL_23;
LABEL_25:
  v37 = (_QWORD *)v18[2];
  v38 = *(int32x2_t *)a5;
  v39 = *(_DWORD *)(a5 + 8);
  v40 = vadd_s32(*(int32x2_t *)a5, (int32x2_t)0x800000008);
  v41 = v39 + 8;
  sub_22390246C(*v37 + 40664, (int *)&v38, (uint64_t)&v38);
  return 3;
}

uint64_t sub_22393ABF4(int a1, unsigned int *a2, char a3, _QWORD *a4, double a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, float32x4_t a10, int8x16_t a11, int8x16_t a12)
{
  uint64_t result;
  _BOOL8 v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  __int128 v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;

  result = sub_22393A920(a4, a3, a1, 0x80000000, (uint64_t)a2, a5, a6, a7, a8, a9, a10, a11, a12);
  if (a1)
  {
    if ((_DWORD)result != 3)
    {
      v16 = (_DWORD)result == 2;
      v17 = (a1 - 1);
      v18 = a2[1];
      v19 = a2[2];
      v20 = (a2[3] - *a2) >> 1;
      v44 = *a2;
      v45 = v18;
      v46 = v19;
      v47 = v20 + v44;
      v48 = v18 + v20;
      v49 = v19 + v20;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v21 = a2[1];
      v22 = a2[2];
      v23 = (a2[3] - *a2) >> 1;
      v44 = *a2;
      v45 = v21;
      v46 = v22 + v23;
      v47 = v23 + v44;
      v48 = v21 + v23;
      v49 = v22 + v23 + v23;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v24 = a2[2];
      v25 = (a2[3] - *a2) >> 1;
      v26 = v25 + a2[1];
      v44 = *a2;
      v45 = v26;
      v46 = v24;
      v47 = v25 + v44;
      v48 = v26 + v25;
      v49 = v24 + v25;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v27 = a2[2];
      v28 = (a2[3] - *a2) >> 1;
      v29 = v28 + a2[1];
      v44 = *a2;
      v45 = v29;
      v46 = v27 + v28;
      v47 = v28 + v44;
      v48 = v29 + v28;
      v49 = v27 + v28 + v28;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v30 = a2[1];
      v31 = a2[2];
      v32 = (a2[3] - *a2) >> 1;
      v44 = v32 + *a2;
      v45 = v30;
      v46 = v31;
      v47 = v44 + v32;
      v48 = v30 + v32;
      v49 = v31 + v32;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v33 = a2[1];
      v34 = a2[2];
      v35 = (a2[3] - *a2) >> 1;
      v44 = v35 + *a2;
      v45 = v33;
      v46 = v34 + v35;
      v47 = v44 + v35;
      v48 = v33 + v35;
      v49 = v34 + v35 + v35;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v36 = a2[2];
      v37 = (a2[3] - *a2) >> 1;
      v38 = v37 + a2[1];
      v44 = v37 + *a2;
      v45 = v38;
      v46 = v36;
      v47 = v44 + v37;
      v48 = v38 + v37;
      v49 = v36 + v37;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      sub_22393ABF4(v17, &v44, v16, &v42);
      v39 = a2[2];
      v40 = (a2[3] - *a2) >> 1;
      v41 = v40 + a2[1];
      v44 = v40 + *a2;
      v45 = v41;
      v46 = v39 + v40;
      v47 = v44 + v40;
      v48 = v41 + v40;
      v49 = v39 + v40 + v40;
      v42 = *(_OWORD *)a4;
      v43 = a4[2];
      return sub_22393ABF4(v17, &v44, v16, &v42);
    }
  }
  return result;
}

uint64_t sub_22393AEE8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_22393B020(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22393AFEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22393B020@<X0>(char *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unsigned __int8 v9;
  char v10;
  _BYTE *v11;
  unint64_t v13;
  unint64_t v14;
  mach_timebase_info info;
  void *__p;
  void *v17;
  _BYTE *v18;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = mach_continuous_time();
  v9 = atomic_load((unsigned __int8 *)&qword_255795560);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_255795560))
  {
    mach_timebase_info(&info);
    LODWORD(v13) = info.numer;
    LODWORD(v14) = info.denom;
    *(double *)&qword_255795558 = (double)v13 / (double)v14;
    __cxa_guard_release(&qword_255795560);
  }
  v19[0] = llround(*(double *)&qword_255795558 * (double)v8);
  v19[1] = 2;
  LOBYTE(v20) = 0;
  v22 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v20 = *a2;
    v21 = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v22 = 1;
  }
  v23 = 0;
  v24 = 0;
  v25 = *a3;
  v26 = 1;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v10 = *a1;
  LOBYTE(info.numer) = 0;
  v17 = 0;
  v18 = 0;
  __p = 0;
  v11 = operator new(1uLL);
  __p = v11;
  *v11 = v10;
  v17 = v11 + 1;
  v18 = v11 + 1;
  sub_2231AA8F0((char *)&info, (uint64_t)v19, a4);
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  return sub_2231AD66C((uint64_t)v19);
}

void sub_22393B1B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255795560);
  _Unwind_Resume(a1);
}

void sub_22393B1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    operator delete(__p);
    sub_2231AD66C((uint64_t)&a15);
    _Unwind_Resume(a1);
  }
  sub_2231AD66C((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_22393B200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p[2];
  uint64_t v16;
  char v17;
  _QWORD v18[2];
  std::__shared_weak_count *v19;

  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2))
  {
    v10 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 56))(a2);
    *(_OWORD *)__p = *(_OWORD *)a4;
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_QWORD *)(a4 + 16) = 0;
    v17 = 1;
    sub_2235336B4(a3, (__int128 *)__p, a5, v18);
    sub_2231AA5A4(a1, v10, (uint64_t)v18);
    v11 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v17 && SHIBYTE(v16) < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_22393B304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_2241231D8((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_22393B338(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  float32x4_t v17;
  uint64_t v18;
  uint64_t v19;
  float32x4_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  BOOL v26;
  char *v27;
  float32x4_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  float32x4_t v44;
  uint64_t v45;
  __int128 v46;
  float32x4_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _BYTE v54[4];
  int v55;
  _QWORD *v56;
  int v57;
  _QWORD v58[2];

  v8 = *(unsigned int *)(a2 + 2920);
  if ((_DWORD)v8)
  {
    v9 = 0;
    v10 = 0;
    v11 = 20;
    do
    {
      if (v9 >= *(unsigned int *)(a2 + 2920)
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/OccupancyQuery.cpp", 294, (uint64_t)"index < valid_occupied_blocks", 29, (uint64_t)"Block index out of bounds", 25, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 += ((*(_BYTE *)(*(_QWORD *)(a2 + 2896) + v11) & 2) == 0) ^ a3;
      ++v9;
      v11 += 24;
    }
    while (v8 != v9);
  }
  else
  {
    v10 = 0;
  }
  v12 = sub_2241498F4(a1, 0);
  sub_22339E3C8(v12, (8 * v10));
  sub_22339E3C8(a1 + 32, (8 * v10));
  *(_DWORD *)(a1 + 64) = 1;
  result = sub_22339E528(a1 + 112, (12 * v10));
  v15 = *(unsigned int *)(a2 + 2920);
  if ((_DWORD)v15)
  {
    v16 = 0;
    *(float *)&v14 = *(float *)(a2 + 448) * 0.5;
    v46 = v14;
    v44 = (float32x4_t)vdupq_n_s32(0x437F0000u);
    v45 = a1;
    do
    {
      if (v16 >= *(unsigned int *)(a2 + 2920))
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/OccupancyQuery.cpp", 294, (uint64_t)"index < valid_occupied_blocks", 29, (uint64_t)"Block index out of bounds", 25, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          abort();
      }
      if (a3 == (*(_BYTE *)(*(_QWORD *)(a2 + 2896) + 24 * v16 + 20) & 2) >> 1)
      {
        sub_22414CE34(0, (uint64_t)&v49);
        v18 = v49;
        v19 = v50;
        for (v20.i32[3] = HIDWORD(v46); v18 != v19; v18 += 12)
        {
          v17.i64[0] = *(_QWORD *)v18;
          v17.i32[2] = *(_DWORD *)(v18 + 8);
          v17 = vmulq_n_f32(v17, *(float *)&v46);
          *(_DWORD *)(v18 + 8) = v17.i32[2];
          *(_QWORD *)v18 = v17.i64[0];
        }
        if (v16 >= *(unsigned int *)(a2 + 2920)
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/OccupancyQuery.cpp", 269, (uint64_t)"index < valid_occupied_blocks", 29, (uint64_t)"Block index out of bounds", 25, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v21 = v49;
        v22 = v50;
        if (v49 != v50)
        {
          v23 = *(_QWORD *)(a2 + 2896) + 24 * v16;
          v17.i64[0] = *(_QWORD *)v23;
          v17.i32[2] = *(_DWORD *)(v23 + 8);
          do
          {
            v20.i64[0] = *(_QWORD *)v21;
            v20.i32[2] = *(_DWORD *)(v21 + 8);
            v20 = vaddq_f32(v17, v20);
            *(_DWORD *)(v21 + 8) = v20.i32[2];
            *(_QWORD *)v21 = v20.i64[0];
            v21 += 12;
          }
          while (v21 != v22);
        }
        if (v16 >= *(unsigned int *)(a2 + 2920)
          && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Common/src/OccupancyQuery.cpp", 284, (uint64_t)"index < valid_occupied_blocks", 29, (uint64_t)"Block index out of bounds", 25, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v24 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 2896) + 24 * v16 + 16);
        v25 = &byte_2245C3FE4[3 * v24];
        v26 = v24 >= 0x2A;
        v27 = &byte_2245C9FE2;
        if (!v26)
          v27 = v25;
        LOBYTE(v5) = *v27;
        LOBYTE(v4) = v27[1];
        LOBYTE(v3) = v27[2];
        sub_22339E3C8((uint64_t)&v51, 0xAAAAAAAAAAAAAAABLL * ((v50 - v49) >> 2));
        if (v50 != v49)
        {
          v29 = 0;
          v28.f32[0] = (float)v5;
          v28.f32[1] = (float)v4;
          v28.f32[2] = (float)v3;
          v48 = vdivq_f32(v28, v44);
          v30 = 0xAAAAAAAAAAAAAAABLL * ((v50 - v49) >> 2);
          v31 = v52;
          do
          {
            if (v31 < v53)
            {
              *(_DWORD *)(v31 + 8) = v48.i32[2];
              *(_QWORD *)v31 = v48.i64[0];
              v31 += 12;
            }
            else
            {
              v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - v51) >> 2);
              v33 = v32 + 1;
              if (v32 + 1 > 0x1555555555555555)
                sub_22316E078();
              if (0x5555555555555556 * ((uint64_t)(v53 - v51) >> 2) > v33)
                v33 = 0x5555555555555556 * ((uint64_t)(v53 - v51) >> 2);
              if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v53 - v51) >> 2) >= 0xAAAAAAAAAAAAAAALL)
                v34 = 0x1555555555555555;
              else
                v34 = v33;
              if (v34)
              {
                LODWORD(v58[0]) = v34;
                if (v55 == -1)
                  sub_22316DD70();
                v56 = v58;
                v35 = ((uint64_t (*)(_QWORD **, _BYTE *))off_24EC5CE50[v55])(&v56, v54);
              }
              else
              {
                v35 = 0;
                v36 = 0;
              }
              v37 = v35 + 12 * v32;
              *(_QWORD *)v37 = v48.i64[0];
              *(_DWORD *)(v37 + 8) = v48.i32[2];
              v39 = v51;
              v38 = v52;
              v40 = v37;
              if (v52 != v51)
              {
                do
                {
                  v41 = *(_QWORD *)(v38 - 12);
                  v38 -= 12;
                  v42 = *(_DWORD *)(v38 + 8);
                  *(_QWORD *)(v40 - 12) = v41;
                  v40 -= 12;
                  *(_DWORD *)(v40 + 8) = v42;
                }
                while (v38 != v39);
                v38 = v51;
              }
              v31 = v37 + 12;
              v51 = v40;
              v52 = v37 + 12;
              v43 = v53;
              v53 = v35 + 12 * v36;
              if (v38)
              {
                v56 = (_QWORD *)v38;
                v57 = -1431655765 * ((v43 - v38) >> 2);
                if (v55 == -1)
                  sub_22316DD70();
                v58[0] = &v56;
                ((void (*)(_QWORD *, _BYTE *))off_24EC5CE60[v55])(v58, v54);
              }
            }
            v52 = v31;
            ++v29;
          }
          while (v29 != v30);
        }
        sub_22414E9E0(v45, (uint64_t)&v49);
        result = (uint64_t)sub_22316F8F4(&v49);
      }
      ++v16;
    }
    while (v16 != v15);
  }
  return result;
}

void sub_22393B868(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_22316F8F4(v1);
  _Unwind_Resume(a1);
}

void sub_22393B87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t *v11;
  va_list va;

  va_start(va, a11);
  sub_22316F8F4((uint64_t *)va);
  sub_22316F8F4(v11);
  _Unwind_Resume(a1);
}

uint64_t sub_22393B910(uint64_t a1, int a2, int a3, char a4, _QWORD *a5, double a6, double a7, float32x4_t a8, float32x4_t a9, double a10, float32x4_t a11)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  double v19;
  double v20;
  float32x4_t v21;
  float32x4_t v22;
  double v23;
  float32x4_t v24;
  int v25;
  uint64_t v26;
  double v27;
  float32x4_t v28;
  float32x4_t v29;
  double v30;
  float32x4_t v31;
  double v32;
  float32x4_t v33;
  float32x4_t v34;
  double v35;
  float32x4_t v36;
  double v37;
  float32x4_t v38;
  float32x4_t v39;
  double v40;
  float32x4_t v41;
  double v42;
  float32x4_t v43;
  float32x4_t v44;
  double v45;
  float32x4_t v46;
  double v47;
  float32x4_t v48;
  float32x4_t v49;
  double v50;
  float32x4_t v51;
  double v52;
  float32x4_t v53;
  float32x4_t v54;
  double v55;
  float32x4_t v56;
  double v57;
  float32x4_t v58;
  float32x4_t v59;
  double v60;
  float32x4_t v61;
  uint64_t i;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  __int128 v79;
  uint64_t v80;
  _BYTE v81[12];
  int v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  char v87;
  char v88;
  uint64_t v89;
  int v90;
  char v91;
  char v92;
  uint64_t v93;
  int v94;
  char v95;
  char v96;
  uint64_t v97;
  int v98;
  char v99;
  char v100;
  uint64_t v101;
  int v102;
  char v103;
  char v104;
  uint64_t v105;
  int v106;
  char v107;
  char v108;
  uint64_t v109;
  int v110;
  char v111;
  char v112;
  uint64_t v113;
  int v114;
  char v115;
  char v116;
  uint64_t v117;
  int v118;
  char v119;
  char v120;
  uint64_t v121;
  int v122;
  char v123;
  char v124;
  uint64_t v125;
  int v126;
  char v127;
  char v128;
  uint64_t v129;
  int v130;
  char v131;
  char v132;
  uint64_t v133;
  int v134;
  char v135;
  char v136;
  int v137;
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  int v142;
  char v143;
  char v144;
  int v145;
  uint64_t v146;
  char v147;
  char v148;
  uint64_t v149;
  int v150;
  char v151;
  char v152;
  int v153;
  uint64_t v154;
  char v155;
  char v156;
  uint64_t v157;
  int v158;
  char v159;
  char v160;
  int v161;
  uint64_t v162;
  char v163;
  char v164;
  uint64_t v165;
  int v166;
  char v167;
  char v168;
  int v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  int v174;
  char v175;
  char v176;
  int v177;
  uint64_t v178;
  char v179;
  char v180;
  uint64_t v181;
  int v182;
  char v183;
  char v184;
  int v185;
  uint64_t v186;
  char v187;
  _BYTE v188[12];
  uint64_t v189;
  int v190;

  v14 = a3 & 0xCFFFFFFF;
  v15 = *(_QWORD *)(a1 + 184) + 4488 * (a3 & 0xCFFFFFFF);
  v16 = *(_QWORD *)v15;
  *(_DWORD *)&v188[8] = *(_DWORD *)(v15 + 8);
  *(_QWORD *)v188 = v16;
  v17 = *(_QWORD *)(v15 + 12);
  v190 = *(_DWORD *)(v15 + 20);
  v189 = v17;
  v81[0] = 1;
  *(_QWORD *)&v81[4] = -1;
  v82 = -1;
  LOBYTE(v83) = 8;
  LOBYTE(v84) = 1;
  v85 = -1;
  v86 = -1;
  v87 = 8;
  v88 = 1;
  v89 = -1;
  v90 = -1;
  v91 = 8;
  v92 = 1;
  v93 = -1;
  v94 = -1;
  v95 = 8;
  v96 = 1;
  v97 = -1;
  v98 = -1;
  v99 = 8;
  v100 = 1;
  v101 = -1;
  v102 = -1;
  v103 = 8;
  v104 = 1;
  v105 = -1;
  v106 = -1;
  v107 = 8;
  v108 = 1;
  v109 = -1;
  v110 = -1;
  v111 = 8;
  v112 = 1;
  v113 = -1;
  v114 = -1;
  v115 = 8;
  v116 = 1;
  v117 = -1;
  v118 = -1;
  v119 = 8;
  v120 = 1;
  v121 = -1;
  v122 = -1;
  v123 = 8;
  v124 = 1;
  v125 = -1;
  v126 = -1;
  v127 = 8;
  v128 = 1;
  v129 = -1;
  v130 = -1;
  v131 = 8;
  v132 = 1;
  v133 = -1;
  v134 = -1;
  v135 = 8;
  v136 = 1;
  v137 = -1;
  v138 = -1;
  v139 = 8;
  v140 = 1;
  v141 = -1;
  v142 = -1;
  v143 = 8;
  v144 = 1;
  v145 = -1;
  v146 = -1;
  v147 = 8;
  v148 = 1;
  v149 = -1;
  v150 = -1;
  v151 = 8;
  v152 = 1;
  v153 = -1;
  v154 = -1;
  v155 = 8;
  v156 = 1;
  v157 = -1;
  v158 = -1;
  v159 = 8;
  v160 = 1;
  v161 = -1;
  v162 = -1;
  v163 = 8;
  v164 = 1;
  v165 = -1;
  v166 = -1;
  v167 = 8;
  v168 = 1;
  v169 = -1;
  v170 = -1;
  v171 = 8;
  v172 = 1;
  v173 = -1;
  v174 = -1;
  v175 = 8;
  v176 = 1;
  v177 = -1;
  v178 = -1;
  v179 = 8;
  v180 = 1;
  v181 = -1;
  v182 = -1;
  v183 = 8;
  v184 = 1;
  v185 = -1;
  v186 = -1;
  v187 = 8;
  result = sub_22393C1B0(a5, a4, a2, 0, (int32x2_t *)v188, v81, NAN, a7, a8, a9, a10, a11);
  if (a2)
  {
    v25 = result;
    if ((_DWORD)result != 3)
    {
      v26 = (a2 - 1);
      if ((_DWORD)v26)
      {
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 24) & 0x80000000) != 0)
        {
          v71 = (v189 - *(_DWORD *)v188) >> 1;
          *(_QWORD *)v81 = *(_QWORD *)v188;
          *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8];
          v82 = v71 + *(_DWORD *)v188;
          v83 = *(_DWORD *)&v188[4] + v71;
          v84 = *(_DWORD *)&v188[8] + v71;
          v79 = *(_OWORD *)a5;
          v80 = a5[2];
          sub_22393CDE0(v26, (int32x2_t *)v81, (_DWORD)result == 2, &v79, *(double *)&v79, v20, v21, v22, v23, v24);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 28) & 0x80000000) == 0)
          {
LABEL_6:
            sub_22393B910(a1, v26);
            if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 32) & 0x80000000) == 0)
              goto LABEL_7;
            goto LABEL_20;
          }
        }
        else
        {
          sub_22393B910(a1, v26);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 28) & 0x80000000) == 0)
            goto LABEL_6;
        }
        v72 = (v189 - *(_DWORD *)v188) >> 1;
        *(_QWORD *)v81 = *(_QWORD *)v188;
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8] + v72;
        v82 = v72 + *(_DWORD *)v188;
        v83 = *(_DWORD *)&v188[4] + v72;
        v84 = *(_DWORD *)&v188[8] + v72 + v72;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v27, v28, v29, v30, v31);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 32) & 0x80000000) == 0)
        {
LABEL_7:
          sub_22393B910(a1, v26);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 36) & 0x80000000) == 0)
            goto LABEL_8;
          goto LABEL_21;
        }
LABEL_20:
        v73 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = *(_DWORD *)v188;
        *(_DWORD *)&v81[4] = v73 + *(_DWORD *)&v188[4];
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8];
        v82 = v73 + *(_DWORD *)v188;
        v83 = v73 + *(_DWORD *)&v188[4] + v73;
        v84 = *(_DWORD *)&v188[8] + v73;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v32, v33, v34, v35, v36);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 36) & 0x80000000) == 0)
        {
LABEL_8:
          sub_22393B910(a1, v26);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 40) & 0x80000000) == 0)
            goto LABEL_9;
          goto LABEL_22;
        }
LABEL_21:
        v74 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = *(_DWORD *)v188;
        *(_DWORD *)&v81[4] = v74 + *(_DWORD *)&v188[4];
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8] + v74;
        v82 = v74 + *(_DWORD *)v188;
        v83 = v74 + *(_DWORD *)&v188[4] + v74;
        v84 = *(_DWORD *)&v188[8] + v74 + v74;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v37, v38, v39, v40, v41);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 40) & 0x80000000) == 0)
        {
LABEL_9:
          sub_22393B910(a1, v26);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 44) & 0x80000000) == 0)
            goto LABEL_10;
          goto LABEL_23;
        }
LABEL_22:
        v75 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = v75 + *(_DWORD *)v188;
        *(_QWORD *)&v81[4] = *(_QWORD *)&v188[4];
        v82 = v75 + *(_DWORD *)v188 + v75;
        v83 = *(_DWORD *)&v188[4] + v75;
        v84 = *(_DWORD *)&v188[8] + v75;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v42, v43, v44, v45, v46);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 44) & 0x80000000) == 0)
        {
LABEL_10:
          sub_22393B910(a1, v26);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 48) & 0x80000000) == 0)
            goto LABEL_11;
          goto LABEL_24;
        }
LABEL_23:
        v76 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = v76 + *(_DWORD *)v188;
        *(_DWORD *)&v81[4] = *(_DWORD *)&v188[4];
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8] + v76;
        v82 = v76 + *(_DWORD *)v188 + v76;
        v83 = *(_DWORD *)&v188[4] + v76;
        v84 = *(_DWORD *)&v188[8] + v76 + v76;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v47, v48, v49, v50, v51);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 48) & 0x80000000) == 0)
        {
LABEL_11:
          sub_22393B910(a1, v26);
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 52) & 0x80000000) == 0)
            return sub_22393B910(a1, v26);
          goto LABEL_25;
        }
LABEL_24:
        v77 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = v77 + *(_DWORD *)v188;
        *(_DWORD *)&v81[4] = v77 + *(_DWORD *)&v188[4];
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8];
        v82 = v77 + *(_DWORD *)v188 + v77;
        v83 = v77 + *(_DWORD *)&v188[4] + v77;
        v84 = *(_DWORD *)&v188[8] + v77;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v52, v53, v54, v55, v56);
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 52) & 0x80000000) == 0)
          return sub_22393B910(a1, v26);
LABEL_25:
        v78 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = v78 + *(_DWORD *)v188;
        *(_DWORD *)&v81[4] = v78 + *(_DWORD *)&v188[4];
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8] + v78;
        v82 = v78 + *(_DWORD *)v188 + v78;
        v83 = v78 + *(_DWORD *)&v188[4] + v78;
        v84 = *(_DWORD *)&v188[8] + v78 + v78;
        v79 = *(_OWORD *)a5;
        v80 = a5[2];
        return sub_22393CDE0(v26, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v57, v58, v59, v60, v61);
      }
      for (i = 0; i != 8; ++i)
      {
        while (1)
        {
          v64 = byte_2246559E2[i];
          v65 = *(_QWORD *)(a1 + 184);
          v66 = *(_DWORD *)(v65 + 4488 * v14 + 4 * v64 + 24);
          v67 = (v64 >> 2) & 1;
          v68 = (v64 >> 1) & 1;
          v69 = v64 & 1;
          if ((v66 & 0x80000000) == 0)
            break;
          v63 = (v189 - *(_DWORD *)v188) >> 1;
          *(_DWORD *)v81 = *(_DWORD *)v188 + v63 * v67;
          *(_DWORD *)&v81[4] = *(_DWORD *)&v188[4] + v63 * v68;
          *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8] + v63 * v69;
          v82 = *(_DWORD *)v81 + v63;
          v83 = *(_DWORD *)&v81[4] + v63;
          v84 = *(_DWORD *)&v81[8] + v63;
          v79 = *(_OWORD *)a5;
          v80 = a5[2];
          result = sub_22393CDE0(0, (int32x2_t *)v81, v25 == 2, &v79, *(double *)&v79, v20, v21, v22, v23, v24);
          if (++i == 8)
            return result;
        }
        v70 = (v189 - *(_DWORD *)v188) >> 1;
        *(_DWORD *)v81 = *(_DWORD *)v188 + v70 * v67;
        *(_DWORD *)&v81[4] = *(_DWORD *)&v188[4] + v70 * v68;
        *(_DWORD *)&v81[8] = *(_DWORD *)&v188[8] + v70 * v69;
        v82 = *(_DWORD *)v81 + v70;
        v83 = *(_DWORD *)&v81[4] + v70;
        v84 = *(_DWORD *)&v81[8] + v70;
        result = sub_22393C1B0(a5, v25 == 2, 0, v66, (int32x2_t *)v81, (const void *)(v65 + 4488 * v14 + 540 * v64 + 68), v19, v20, v21, v22, v23, v24);
      }
    }
  }
  return result;
}

uint64_t sub_22393C1B0(_QWORD *a1, char a2, int a3, unsigned int a4, int32x2_t *a5, const void *a6, double a7, double a8, float32x4_t a9, float32x4_t a10, double a11, float32x4_t a12)
{
  int v17;
  uint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 *v27;
  __int128 v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 *v33;
  __int128 v34;
  double v35;
  float32x4_t v36;
  float32x4_t v37;
  double v38;
  float32x4_t v39;
  uint64_t **v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  float v45;
  float32x4_t v46;
  float32x4_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int v55;
  float v56;
  float32x4_t v57;
  float32x4_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  float v63;
  float32x4_t v64;
  float32x4_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  int v69;
  float v70;
  float32x4_t v71;
  float32x4_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  int v76;
  float v77;
  float32x4_t v78;
  float32x4_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  int v83;
  float v84;
  float32x4_t v85;
  float32x4_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  int v90;
  float v91;
  float32x4_t v92;
  float32x4_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  int v97;
  float v98;
  float32x4_t v99;
  float32x4_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  int v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  int v111;
  float v112;
  float32x4_t v113;
  float32x4_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  int v118;
  float v119;
  float32x4_t v120;
  float32x4_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  int v125;
  float v126;
  float32x4_t v127;
  float32x4_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  int v132;
  float v133;
  float32x4_t v134;
  float32x4_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  int v139;
  float v140;
  float32x4_t v141;
  float32x4_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  int v146;
  float v147;
  float32x4_t v148;
  float32x4_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  int v153;
  float32x4_t v154;
  float32x4_t v155;
  int v156;
  int32x2_t v157;
  __int32 v158;
  int32x2_t v159;
  __int32 v160;
  _BYTE v161[32];
  __int128 v162;
  uint64_t v163;

  v163 = *MEMORY[0x24BDAC8D0];
  v17 = 2;
  v156 = 2;
  if ((a2 & 1) == 0)
  {
    v18 = *(_QWORD *)(*a1 + 8);
    LODWORD(a7) = *(_DWORD *)(*(_QWORD *)*a1 + 128);
    *(float32x2_t *)a9.f32 = vcvt_f32_s32(*a5);
    a10.f32[0] = (float)a5[1].i32[0];
    a9.f32[2] = a10.f32[0];
    v19 = vmulq_n_f32(a9, *(float *)&a7);
    *(float *)&a7 = *(float *)&a7 * (float)(int)(a5[1].i32[1] - *(_QWORD *)a5);
    *(_DWORD *)&v161[8] = v19.i32[2];
    *(_QWORD *)v161 = v19.i64[0];
    v20 = vaddq_f32(v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a7, 0));
    *(_DWORD *)&v161[20] = v20.i32[2];
    *(_QWORD *)&v161[12] = v20.i64[0];
    if (*(_BYTE *)(v18 + 20) == 1)
      v17 = sub_223E998FC((float *)v161, (float *)v18, *(float *)(v18 + 12), *(float *)(v18 + 16), v19, *(double *)a10.i64, a11, a12);
    else
      v17 = *(_BYTE *)(v18 + 20)
          ? sub_223E99B90((float *)v161, (float *)v18, *(float *)(v18 + 12), *(float *)(v18 + 16), v19, a10)
          : sub_223E99668((float *)v161, (float *)v18, *(float *)(v18 + 12), *(float *)(v18 + 16), v19, a10);
    v156 = v17;
    if (!v17)
      return 3;
  }
  if (!a3)
  {
    v22 = a1[1];
    v23 = *(_QWORD **)v22;
    v24 = **(_QWORD ***)v22;
    if ((a4 & 0x80000000) != 0)
    {
      v26 = v24 + 2609;
      v33 = (__int128 *)v23[1];
      v34 = *v33;
      LODWORD(v33) = *((unsigned __int8 *)v33 + 16);
      v161[16] = (_BYTE)v33;
      *(_OWORD *)v161 = v34;
      if ((_DWORD)v33)
        goto LABEL_17;
    }
    else
    {
      v25 = v24[2615];
      if (0xAAAAAAAAAAAAAAABLL * ((v24[2616] - v25) >> 4) <= a4)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 1042, (uint64_t)"info_index < allocated_voxel_block_infos_.size()", 48, (uint64_t)"Invalid map index", 17, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v25 = v24[2615];
      }
      v26 = (_QWORD *)(v25 + 48 * a4);
      v27 = (__int128 *)v23[1];
      v28 = *v27;
      LODWORD(v27) = *((unsigned __int8 *)v27 + 16);
      v161[16] = (_BYTE)v27;
      *(_OWORD *)v161 = v28;
      if ((_DWORD)v27)
      {
LABEL_17:
        v29 = sub_223340F28(v26, (uint64_t)v161);
        if (v29)
        {
          v30 = *((unsigned int *)v29 + 8);
          if ((v30 & 0x80000000) == 0)
            goto LABEL_19;
        }
        goto LABEL_25;
      }
    }
    v30 = *((unsigned int *)v26 + 10);
    if ((v30 & 0x80000000) == 0)
    {
LABEL_19:
      v31 = v24[2600];
      if (0xCCCCCCCCCCCCCCCDLL * ((v24[2601] - v31) >> 12) <= v30)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 205, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v31 = v24[2600];
      }
      v32 = (char *)(v31 + 20480 * v30);
      goto LABEL_26;
    }
LABEL_25:
    v32 = (char *)v24 + 316;
LABEL_26:
    *(_QWORD *)v23[2] = v32;
    memcpy((void *)v23[3], a6, 0x21CuLL);
    *(_BYTE *)v23[4] = (a4 & 0x80000000) == 0;
    if (v156 == 2)
    {
      v40 = *(uint64_t ***)(v22 + 8);
      *(_QWORD *)v161 = v40;
      *(_QWORD *)&v161[8] = &v156;
      v41 = **v40;
      v42 = *v40[5];
      v43 = *(_BYTE *)(v41 + 1);
      v44 = *(char *)(v41 + 6);
      v45 = *(float *)(*(_QWORD *)(v42 + 40784) + 312);
      *(float32x2_t *)v36.f32 = vcvt_f32_s32(*a5);
      v36.f32[2] = (float)a5[1].i32[0];
      v46.i64[0] = 0x3F0000003F000000;
      v46.i64[1] = 0x3F0000003F000000;
      v47 = vmulq_n_f32(vaddq_f32(v36, v46), v45);
      v158 = v47.i32[2];
      v157 = *(int32x2_t *)v47.f32;
      if (v44)
      {
        if (v44 < 0)
          sub_223FFDF1C(v42 + 2896, (uint64_t *)&v157, 255, 2, v45);
      }
      else
      {
        sub_223FFDF1C(v42 + 2896, (uint64_t *)&v157, v43, 0, v45);
      }
      v52 = **v40;
      v53 = *v40[5];
      v54 = *(_BYTE *)(v52 + 41);
      v55 = *(char *)(v52 + 46);
      v56 = *(float *)(*(_QWORD *)(v53 + 40784) + 312);
      *(float32x2_t *)v47.f32 = vcvt_f32_s32(*a5);
      v47.f32[2] = (float)(a5[1].i32[0] + 1);
      v57.i64[0] = 0x3F0000003F000000;
      v57.i64[1] = 0x3F0000003F000000;
      v58 = vmulq_n_f32(vaddq_f32(v47, v57), v56);
      v158 = v58.i32[2];
      v157 = *(int32x2_t *)v58.f32;
      if (v55)
      {
        if (v55 < 0)
          sub_223FFDF1C(v53 + 2896, (uint64_t *)&v157, 255, 2, v56);
      }
      else
      {
        sub_223FFDF1C(v53 + 2896, (uint64_t *)&v157, v54, 0, v56);
      }
      *(int32x2_t *)v58.f32 = *a5;
      v59 = **v40;
      v60 = *v40[5];
      v61 = *(_BYTE *)(v59 + 81);
      v62 = *(char *)(v59 + 86);
      v63 = *(float *)(*(_QWORD *)(v60 + 40784) + 312);
      v58.i32[1] = a5->i32[1] + 1;
      *(float32x2_t *)v58.f32 = vcvt_f32_s32(*(int32x2_t *)v58.f32);
      v58.f32[2] = (float)a5[1].i32[0];
      v64.i64[0] = 0x3F0000003F000000;
      v64.i64[1] = 0x3F0000003F000000;
      v65 = vmulq_n_f32(vaddq_f32(v58, v64), v63);
      v158 = v65.i32[2];
      v157 = *(int32x2_t *)v65.f32;
      if (v62)
      {
        if (v62 < 0)
          sub_223FFDF1C(v60 + 2896, (uint64_t *)&v157, 255, 2, v63);
      }
      else
      {
        sub_223FFDF1C(v60 + 2896, (uint64_t *)&v157, v61, 0, v63);
      }
      *(int32x2_t *)v65.f32 = *a5;
      v66 = **v40;
      v67 = *v40[5];
      v68 = *(_BYTE *)(v66 + 121);
      v69 = *(char *)(v66 + 126);
      v70 = *(float *)(*(_QWORD *)(v67 + 40784) + 312);
      v65.i32[1] = a5->i32[1] + 1;
      *(float32x2_t *)v65.f32 = vcvt_f32_s32(*(int32x2_t *)v65.f32);
      v65.f32[2] = (float)(a5[1].i32[0] + 1);
      v71.i64[0] = 0x3F0000003F000000;
      v71.i64[1] = 0x3F0000003F000000;
      v72 = vmulq_n_f32(vaddq_f32(v65, v71), v70);
      v158 = v72.i32[2];
      v157 = *(int32x2_t *)v72.f32;
      if (v69)
      {
        if (v69 < 0)
          sub_223FFDF1C(v67 + 2896, (uint64_t *)&v157, 255, 2, v70);
      }
      else
      {
        sub_223FFDF1C(v67 + 2896, (uint64_t *)&v157, v68, 0, v70);
      }
      v73 = **v40;
      v74 = *v40[5];
      v75 = *(_BYTE *)(v73 + 161);
      v72.i32[0] = a5->i32[0] + 1;
      v72.i32[1] = a5->i32[1];
      v76 = *(char *)(v73 + 166);
      v77 = *(float *)(*(_QWORD *)(v74 + 40784) + 312);
      *(float32x2_t *)v72.f32 = vcvt_f32_s32(*(int32x2_t *)v72.f32);
      v72.f32[2] = (float)a5[1].i32[0];
      v78.i64[0] = 0x3F0000003F000000;
      v78.i64[1] = 0x3F0000003F000000;
      v79 = vmulq_n_f32(vaddq_f32(v72, v78), v77);
      v158 = v79.i32[2];
      v157 = *(int32x2_t *)v79.f32;
      if (v76)
      {
        if (v76 < 0)
          sub_223FFDF1C(v74 + 2896, (uint64_t *)&v157, 255, 2, v77);
      }
      else
      {
        sub_223FFDF1C(v74 + 2896, (uint64_t *)&v157, v75, 0, v77);
      }
      v80 = **v40;
      v81 = *v40[5];
      v82 = *(_BYTE *)(v80 + 201);
      v79.i32[0] = a5->i32[0] + 1;
      v79.i32[1] = a5->i32[1];
      v83 = *(char *)(v80 + 206);
      v84 = *(float *)(*(_QWORD *)(v81 + 40784) + 312);
      *(float32x2_t *)v79.f32 = vcvt_f32_s32(*(int32x2_t *)v79.f32);
      v79.f32[2] = (float)(a5[1].i32[0] + 1);
      v85.i64[0] = 0x3F0000003F000000;
      v85.i64[1] = 0x3F0000003F000000;
      v86 = vmulq_n_f32(vaddq_f32(v79, v85), v84);
      v158 = v86.i32[2];
      v157 = *(int32x2_t *)v86.f32;
      if (v83)
      {
        if (v83 < 0)
          sub_223FFDF1C(v81 + 2896, (uint64_t *)&v157, 255, 2, v84);
      }
      else
      {
        sub_223FFDF1C(v81 + 2896, (uint64_t *)&v157, v82, 0, v84);
      }
      v87 = **v40;
      v88 = *v40[5];
      v89 = *(_BYTE *)(v87 + 241);
      v90 = *(char *)(v87 + 246);
      v91 = *(float *)(*(_QWORD *)(v88 + 40784) + 312);
      *(float32x2_t *)v85.f32 = vcvt_f32_s32(vadd_s32(*a5, (int32x2_t)0x100000001));
      v85.f32[2] = (float)a5[1].i32[0];
      v92.i64[0] = 0x3F0000003F000000;
      v92.i64[1] = 0x3F0000003F000000;
      v93 = vmulq_n_f32(vaddq_f32(v85, v92), v91);
      v158 = v93.i32[2];
      v157 = *(int32x2_t *)v93.f32;
      if (v90)
      {
        if (v90 < 0)
          sub_223FFDF1C(v88 + 2896, (uint64_t *)&v157, 255, 2, v91);
      }
      else
      {
        sub_223FFDF1C(v88 + 2896, (uint64_t *)&v157, v89, 0, v91);
      }
      v94 = **v40;
      v95 = *v40[5];
      v96 = *(_BYTE *)(v94 + 281);
      v97 = *(char *)(v94 + 286);
      v98 = *(float *)(*(_QWORD *)(v95 + 40784) + 312);
      *(float32x2_t *)v93.f32 = vcvt_f32_s32(vadd_s32(*a5, (int32x2_t)0x100000001));
      v93.f32[2] = (float)(a5[1].i32[0] + 1);
      v99.i64[0] = 0x3F0000003F000000;
      v99.i64[1] = 0x3F0000003F000000;
      v100 = vmulq_n_f32(vaddq_f32(v93, v99), v98);
      v158 = v100.i32[2];
      v157 = *(int32x2_t *)v100.f32;
      if (v97)
      {
        if (v97 < 0)
          sub_223FFDF1C(v95 + 2896, (uint64_t *)&v157, 255, 2, v98);
      }
      else
      {
        sub_223FFDF1C(v95 + 2896, (uint64_t *)&v157, v96, 0, v98);
      }
      v101 = **v40;
      v102 = *v40[5];
      v103 = *(_BYTE *)(v101 + 321);
      v104 = *(char *)(v101 + 326);
      v105 = *(float *)(*(_QWORD *)(v102 + 40784) + 312);
      *(float32x2_t *)v100.f32 = vcvt_f32_s32(*a5);
      v100.f32[2] = (float)(a5[1].i32[0] + 2);
      v106.i64[0] = 0x3F0000003F000000;
      v106.i64[1] = 0x3F0000003F000000;
      v107 = vmulq_n_f32(vaddq_f32(v100, v106), v105);
      v158 = v107.i32[2];
      v157 = *(int32x2_t *)v107.f32;
      if (v104)
      {
        if (v104 < 0)
          sub_223FFDF1C(v102 + 2896, (uint64_t *)&v157, 255, 2, v105);
      }
      else
      {
        sub_223FFDF1C(v102 + 2896, (uint64_t *)&v157, v103, 0, v105);
      }
      v108 = **v40;
      v109 = *v40[5];
      v110 = *(_BYTE *)(v108 + 361);
      v111 = *(char *)(v108 + 366);
      v112 = *(float *)(*(_QWORD *)(v109 + 40784) + 312);
      *(float32x2_t *)v107.f32 = vcvt_f32_s32(*a5);
      v107.f32[2] = (float)(a5[1].i32[0] + 3);
      v113.i64[0] = 0x3F0000003F000000;
      v113.i64[1] = 0x3F0000003F000000;
      v114 = vmulq_n_f32(vaddq_f32(v107, v113), v112);
      v158 = v114.i32[2];
      v157 = *(int32x2_t *)v114.f32;
      if (v111)
      {
        if (v111 < 0)
          sub_223FFDF1C(v109 + 2896, (uint64_t *)&v157, 255, 2, v112);
      }
      else
      {
        sub_223FFDF1C(v109 + 2896, (uint64_t *)&v157, v110, 0, v112);
      }
      *(int32x2_t *)v114.f32 = *a5;
      v115 = **v40;
      v116 = *v40[5];
      v117 = *(_BYTE *)(v115 + 401);
      v118 = *(char *)(v115 + 406);
      v119 = *(float *)(*(_QWORD *)(v116 + 40784) + 312);
      v114.i32[1] = a5->i32[1] + 1;
      *(float32x2_t *)v114.f32 = vcvt_f32_s32(*(int32x2_t *)v114.f32);
      v114.f32[2] = (float)(a5[1].i32[0] + 2);
      v120.i64[0] = 0x3F0000003F000000;
      v120.i64[1] = 0x3F0000003F000000;
      v121 = vmulq_n_f32(vaddq_f32(v114, v120), v119);
      v158 = v121.i32[2];
      v157 = *(int32x2_t *)v121.f32;
      if (v118)
      {
        if (v118 < 0)
          sub_223FFDF1C(v116 + 2896, (uint64_t *)&v157, 255, 2, v119);
      }
      else
      {
        sub_223FFDF1C(v116 + 2896, (uint64_t *)&v157, v117, 0, v119);
      }
      *(int32x2_t *)v121.f32 = *a5;
      v122 = **v40;
      v123 = *v40[5];
      v124 = *(_BYTE *)(v122 + 441);
      v125 = *(char *)(v122 + 446);
      v126 = *(float *)(*(_QWORD *)(v123 + 40784) + 312);
      v121.i32[1] = a5->i32[1] + 1;
      *(float32x2_t *)v121.f32 = vcvt_f32_s32(*(int32x2_t *)v121.f32);
      v121.f32[2] = (float)(a5[1].i32[0] + 3);
      v127.i64[0] = 0x3F0000003F000000;
      v127.i64[1] = 0x3F0000003F000000;
      v128 = vmulq_n_f32(vaddq_f32(v121, v127), v126);
      v158 = v128.i32[2];
      v157 = *(int32x2_t *)v128.f32;
      if (v125)
      {
        if (v125 < 0)
          sub_223FFDF1C(v123 + 2896, (uint64_t *)&v157, 255, 2, v126);
      }
      else
      {
        sub_223FFDF1C(v123 + 2896, (uint64_t *)&v157, v124, 0, v126);
      }
      v129 = **v40;
      v130 = *v40[5];
      v131 = *(_BYTE *)(v129 + 481);
      v128.i32[0] = a5->i32[0] + 1;
      v128.i32[1] = a5->i32[1];
      v132 = *(char *)(v129 + 486);
      v133 = *(float *)(*(_QWORD *)(v130 + 40784) + 312);
      *(float32x2_t *)v128.f32 = vcvt_f32_s32(*(int32x2_t *)v128.f32);
      v128.f32[2] = (float)(a5[1].i32[0] + 2);
      v134.i64[0] = 0x3F0000003F000000;
      v134.i64[1] = 0x3F0000003F000000;
      v135 = vmulq_n_f32(vaddq_f32(v128, v134), v133);
      v158 = v135.i32[2];
      v157 = *(int32x2_t *)v135.f32;
      if (v132)
      {
        if (v132 < 0)
          sub_223FFDF1C(v130 + 2896, (uint64_t *)&v157, 255, 2, v133);
      }
      else
      {
        sub_223FFDF1C(v130 + 2896, (uint64_t *)&v157, v131, 0, v133);
      }
      v136 = **v40;
      v137 = *v40[5];
      v138 = *(_BYTE *)(v136 + 521);
      v135.i32[0] = a5->i32[0] + 1;
      v135.i32[1] = a5->i32[1];
      v139 = *(char *)(v136 + 526);
      v140 = *(float *)(*(_QWORD *)(v137 + 40784) + 312);
      *(float32x2_t *)v135.f32 = vcvt_f32_s32(*(int32x2_t *)v135.f32);
      v135.f32[2] = (float)(a5[1].i32[0] + 3);
      v141.i64[0] = 0x3F0000003F000000;
      v141.i64[1] = 0x3F0000003F000000;
      v142 = vmulq_n_f32(vaddq_f32(v135, v141), v140);
      v158 = v142.i32[2];
      v157 = *(int32x2_t *)v142.f32;
      if (v139)
      {
        if (v139 < 0)
          sub_223FFDF1C(v137 + 2896, (uint64_t *)&v157, 255, 2, v140);
      }
      else
      {
        sub_223FFDF1C(v137 + 2896, (uint64_t *)&v157, v138, 0, v140);
      }
      v143 = **v40;
      v144 = *v40[5];
      v145 = *(_BYTE *)(v143 + 561);
      v146 = *(char *)(v143 + 566);
      v147 = *(float *)(*(_QWORD *)(v144 + 40784) + 312);
      *(float32x2_t *)v142.f32 = vcvt_f32_s32(vadd_s32(*a5, (int32x2_t)0x100000001));
      v142.f32[2] = (float)(a5[1].i32[0] + 2);
      v148.i64[0] = 0x3F0000003F000000;
      v148.i64[1] = 0x3F0000003F000000;
      v149 = vmulq_n_f32(vaddq_f32(v142, v148), v147);
      v158 = v149.i32[2];
      v157 = *(int32x2_t *)v149.f32;
      if (v146)
      {
        if (v146 < 0)
          sub_223FFDF1C(v144 + 2896, (uint64_t *)&v157, 255, 2, v147);
      }
      else
      {
        sub_223FFDF1C(v144 + 2896, (uint64_t *)&v157, v145, 0, v147);
      }
      v150 = **v40;
      v151 = *v40[5];
      v152 = *(_BYTE *)(v150 + 601);
      v153 = *(char *)(v150 + 606);
      LODWORD(v35) = *(_DWORD *)(*(_QWORD *)(v151 + 40784) + 312);
      *(float32x2_t *)v149.f32 = vcvt_f32_s32(vadd_s32(*a5, (int32x2_t)0x100000001));
      v149.f32[2] = (float)(a5[1].i32[0] + 3);
      v154.i64[0] = 0x3F0000003F000000;
      v154.i64[1] = 0x3F0000003F000000;
      v155 = vmulq_n_f32(vaddq_f32(v149, v154), *(float *)&v35);
      v158 = v155.i32[2];
      v157 = *(int32x2_t *)v155.f32;
      if (v153)
      {
        if (v153 < 0)
          sub_223FFDF1C(v151 + 2896, (uint64_t *)&v157, 255, 2, *(float *)&v35);
      }
      else
      {
        sub_223FFDF1C(v151 + 2896, (uint64_t *)&v157, v152, 0, *(float *)&v35);
      }
      sub_22393DB58((uint64_t ***)v161, a5, v35, v155);
    }
    else
    {
      v157 = *a5;
      v158 = a5[1].i32[0];
      v159 = vadd_s32(*a5, (int32x2_t)0x800000008);
      v160 = v158 + 8;
      v48 = *(uint64_t **)(v22 + 24);
      v49 = *v48;
      v50 = v48[1];
      v51 = *(_OWORD **)(v22 + 8);
      *(_OWORD *)v161 = *v51;
      *(_OWORD *)&v161[16] = v51[1];
      v162 = v51[2];
      sub_22393D2A4((uint64_t)a5, 3, (uint64_t)&v157, v49, v50, (__int128 *)v161, *(double *)&v162, COERCE_DOUBLE(0x800000008), v36, v37, v38, v39);
    }
    return 3;
  }
  if (v17 == 1)
    return 1;
  else
    return 2;
}

uint64_t sub_22393CDE0(int a1, int32x2_t *a2, char a3, _QWORD *a4, double a5, double a6, float32x4_t a7, float32x4_t a8, double a9, float32x4_t a10)
{
  uint64_t result;
  _BOOL8 v14;
  uint64_t v15;
  __int32 v16;
  __int32 v17;
  unsigned int v18;
  __int32 v19;
  __int32 v20;
  unsigned int v21;
  __int32 v22;
  unsigned int v23;
  unsigned __int32 v24;
  __int32 v25;
  unsigned int v26;
  unsigned __int32 v27;
  __int32 v28;
  __int32 v29;
  unsigned int v30;
  __int32 v31;
  __int32 v32;
  unsigned int v33;
  __int32 v34;
  unsigned int v35;
  unsigned __int32 v36;
  __int32 v37;
  unsigned int v38;
  unsigned __int32 v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int32 v42;
  unint64_t v43;
  int v44;
  unsigned __int32 v45;
  unsigned int v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  uint64_t v51;
  int v52;
  char v53;
  char v54;
  uint64_t v55;
  int v56;
  char v57;
  char v58;
  uint64_t v59;
  int v60;
  char v61;
  char v62;
  uint64_t v63;
  int v64;
  char v65;
  char v66;
  uint64_t v67;
  int v68;
  char v69;
  char v70;
  uint64_t v71;
  int v72;
  char v73;
  char v74;
  uint64_t v75;
  int v76;
  char v77;
  char v78;
  uint64_t v79;
  int v80;
  char v81;
  char v82;
  uint64_t v83;
  int v84;
  char v85;
  char v86;
  uint64_t v87;
  int v88;
  char v89;
  char v90;
  uint64_t v91;
  int v92;
  char v93;
  char v94;
  uint64_t v95;
  int v96;
  char v97;
  char v98;
  int v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  int v104;
  char v105;
  char v106;
  int v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  int v112;
  char v113;
  char v114;
  int v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  int v120;
  char v121;
  char v122;
  int v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  int v128;
  char v129;
  char v130;
  int v131;
  uint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  int v136;
  char v137;
  char v138;
  int v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  int v144;
  char v145;
  char v146;
  int v147;
  uint64_t v148;
  char v149;

  LOBYTE(v42) = 1;
  v43 = -1;
  v44 = -1;
  LOBYTE(v45) = 8;
  LOBYTE(v46) = 1;
  v47 = -1;
  v48 = -1;
  v49 = 8;
  v50 = 1;
  v51 = -1;
  v52 = -1;
  v53 = 8;
  v54 = 1;
  v55 = -1;
  v56 = -1;
  v57 = 8;
  v58 = 1;
  v59 = -1;
  v60 = -1;
  v61 = 8;
  v62 = 1;
  v63 = -1;
  v64 = -1;
  v65 = 8;
  v66 = 1;
  v67 = -1;
  v68 = -1;
  v69 = 8;
  v70 = 1;
  v71 = -1;
  v72 = -1;
  v73 = 8;
  v74 = 1;
  v75 = -1;
  v76 = -1;
  v77 = 8;
  v78 = 1;
  v79 = -1;
  v80 = -1;
  v81 = 8;
  v82 = 1;
  v83 = -1;
  v84 = -1;
  v85 = 8;
  v86 = 1;
  v87 = -1;
  v88 = -1;
  v89 = 8;
  v90 = 1;
  v91 = -1;
  v92 = -1;
  v93 = 8;
  v94 = 1;
  v95 = -1;
  v96 = -1;
  v97 = 8;
  v98 = 1;
  v99 = -1;
  v100 = -1;
  v101 = 8;
  v102 = 1;
  v103 = -1;
  v104 = -1;
  v105 = 8;
  v106 = 1;
  v107 = -1;
  v108 = -1;
  v109 = 8;
  v110 = 1;
  v111 = -1;
  v112 = -1;
  v113 = 8;
  v114 = 1;
  v115 = -1;
  v116 = -1;
  v117 = 8;
  v118 = 1;
  v119 = -1;
  v120 = -1;
  v121 = 8;
  v122 = 1;
  v123 = -1;
  v124 = -1;
  v125 = 8;
  v126 = 1;
  v127 = -1;
  v128 = -1;
  v129 = 8;
  v130 = 1;
  v131 = -1;
  v132 = -1;
  v133 = 8;
  v134 = 1;
  v135 = -1;
  v136 = -1;
  v137 = 8;
  v138 = 1;
  v139 = -1;
  v140 = -1;
  v141 = 8;
  v142 = 1;
  v143 = -1;
  v144 = -1;
  v145 = 8;
  v146 = 1;
  v147 = -1;
  v148 = -1;
  v149 = 8;
  result = sub_22393C1B0(a4, a3, a1, 0x80000000, a2, &v42, NAN, a6, a7, a8, a9, a10);
  if (a1)
  {
    if ((_DWORD)result != 3)
    {
      v14 = (_DWORD)result == 2;
      v15 = (a1 - 1);
      v16 = a2->i32[1];
      v17 = a2[1].i32[0];
      v18 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v42 = a2->i32[0];
      v43 = __PAIR64__(v17, v16);
      v44 = v18 + v42;
      v45 = v16 + v18;
      v46 = v17 + v18;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v19 = a2->i32[1];
      v20 = a2[1].i32[0];
      v21 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v42 = a2->i32[0];
      LODWORD(v43) = v19;
      HIDWORD(v43) = v20 + v21;
      v44 = v21 + v42;
      v45 = v19 + v21;
      v46 = v20 + v21 + v21;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v22 = a2[1].i32[0];
      v23 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v24 = v23 + a2->i32[1];
      v42 = a2->i32[0];
      v43 = __PAIR64__(v22, v24);
      v44 = v23 + v42;
      v45 = v24 + v23;
      v46 = v22 + v23;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v25 = a2[1].i32[0];
      v26 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v27 = v26 + a2->i32[1];
      v42 = a2->i32[0];
      LODWORD(v43) = v27;
      HIDWORD(v43) = v25 + v26;
      v44 = v26 + v42;
      v45 = v27 + v26;
      v46 = v25 + v26 + v26;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v28 = a2->i32[1];
      v29 = a2[1].i32[0];
      v30 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v42 = v30 + a2->i32[0];
      v43 = __PAIR64__(v29, v28);
      v44 = v42 + v30;
      v45 = v28 + v30;
      v46 = v29 + v30;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v31 = a2->i32[1];
      v32 = a2[1].i32[0];
      v33 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v42 = v33 + a2->i32[0];
      LODWORD(v43) = v31;
      HIDWORD(v43) = v32 + v33;
      v44 = v42 + v33;
      v45 = v31 + v33;
      v46 = v32 + v33 + v33;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v34 = a2[1].i32[0];
      v35 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v36 = v35 + a2->i32[1];
      v42 = v35 + a2->i32[0];
      v43 = __PAIR64__(v34, v36);
      v44 = v42 + v35;
      v45 = v36 + v35;
      v46 = v34 + v35;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      sub_22393CDE0(v15, &v42, v14, &v40);
      v37 = a2[1].i32[0];
      v38 = (a2[1].i32[1] - a2->i32[0]) >> 1;
      v39 = v38 + a2->i32[1];
      v42 = v38 + a2->i32[0];
      LODWORD(v43) = v39;
      HIDWORD(v43) = v37 + v38;
      v44 = v42 + v38;
      v45 = v39 + v38;
      v46 = v37 + v38 + v38;
      v40 = *(_OWORD *)a4;
      v41 = a4[2];
      return sub_22393CDE0(v15, &v42, v14, &v40);
    }
  }
  return result;
}

void sub_22393D2A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, double a7, double a8, float32x4_t a9, float32x4_t a10, double a11, float32x4_t a12)
{
  float32x4_t v18;
  float32x4_t v19;
  int v20;
  float32x4_t v21;
  float32x4_t v22;
  int32x4_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  int v27;
  __int32 v28;
  unsigned int v29;
  __int128 v30;
  int v31;
  int v32;
  unsigned int v33;
  __int128 v34;
  __int32 v35;
  unsigned int v36;
  unsigned int v37;
  __int128 v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  __int128 v42;
  int v43;
  __int32 v44;
  unsigned int v45;
  __int128 v46;
  int v47;
  int v48;
  unsigned int v49;
  __int128 v50;
  __int32 v51;
  unsigned int v52;
  unsigned int v53;
  __int128 v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  __int128 v58;
  int v59;
  uint64_t v60;
  float v61;
  uint32x4_t v62;
  int8x16_t v63;
  uint64_t v64;
  char v65;
  int v66;
  float32x4_t v67;
  uint64_t v68;
  int v69;
  int v70;
  int v71;
  int32x2_t v72;
  int32x2_t v73;
  int32x2_t v74;
  unsigned int v75;
  float32x4_t v76;
  int v77;
  int v78;
  unsigned int v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  char *v104;
  __int32 v105;
  int v106;
  unsigned int v107;
  __int32 v108;
  int v109;
  int v110;
  int v111;
  int32x4_t v112;
  __int128 v113;
  float32x4_t v114;
  float32x4_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  __int32 v122;
  uint64_t v123;
  unsigned int v124;

  LODWORD(a7) = *(_DWORD *)(a4 + 128);
  *(float32x2_t *)a9.f32 = vcvt_f32_s32(*(int32x2_t *)a3);
  a10.f32[0] = (float)*(int *)(a3 + 8);
  a9.f32[2] = a10.f32[0];
  v18 = vmulq_n_f32(a9, *(float *)&a7);
  *(float *)&a7 = *(float *)&a7 * (float)(int)(*(_DWORD *)(a3 + 12) - *(_QWORD *)a3);
  v122 = v18.i32[2];
  v121 = v18.i64[0];
  v19 = vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a7, 0));
  v124 = v19.u32[2];
  v123 = v19.i64[0];
  if (*(_BYTE *)(a5 + 20) == 1)
  {
    v20 = sub_223E998FC((float *)&v121, (float *)a5, *(float *)(a5 + 12), *(float *)(a5 + 16), v18, *(double *)a10.i64, a11, a12);
    if (!v20)
      return;
  }
  else if (*(_BYTE *)(a5 + 20))
  {
    v20 = sub_223E99B90((float *)&v121, (float *)a5, *(float *)(a5 + 12), *(float *)(a5 + 16), v18, a10);
    if (!v20)
      return;
  }
  else
  {
    v20 = sub_223E99668((float *)&v121, (float *)a5, *(float *)(a5 + 12), *(float *)(a5 + 16), v18, a10);
    if (!v20)
      return;
  }
  if (a2)
  {
    if (v20 == 1)
    {
      v26 = (a2 - 1);
      v27 = *(_DWORD *)(a3 + 4);
      v28 = *(_DWORD *)(a3 + 8);
      v29 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      LODWORD(v121) = *(_DWORD *)a3;
      HIDWORD(v121) = v27;
      v122 = v28;
      LODWORD(v123) = v29 + v121;
      HIDWORD(v123) = v27 + v29;
      v124 = v28 + v29;
      v30 = a6[1];
      v118 = *a6;
      v119 = v30;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v31 = *(_DWORD *)(a3 + 4);
      v32 = *(_DWORD *)(a3 + 8);
      v33 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      LODWORD(v121) = *(_DWORD *)a3;
      HIDWORD(v121) = v31;
      v122 = v32 + v33;
      LODWORD(v123) = v33 + v121;
      HIDWORD(v123) = v31 + v33;
      v124 = v32 + v33 + v33;
      v34 = a6[1];
      v118 = *a6;
      v119 = v34;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v35 = *(_DWORD *)(a3 + 8);
      v36 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      v37 = v36 + *(_DWORD *)(a3 + 4);
      LODWORD(v121) = *(_DWORD *)a3;
      HIDWORD(v121) = v37;
      v122 = v35;
      LODWORD(v123) = v36 + v121;
      HIDWORD(v123) = v37 + v36;
      v124 = v35 + v36;
      v38 = a6[1];
      v118 = *a6;
      v119 = v38;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v39 = *(_DWORD *)(a3 + 8);
      v40 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      v41 = v40 + *(_DWORD *)(a3 + 4);
      LODWORD(v121) = *(_DWORD *)a3;
      HIDWORD(v121) = v41;
      v122 = v39 + v40;
      LODWORD(v123) = v40 + v121;
      HIDWORD(v123) = v41 + v40;
      v124 = v39 + v40 + v40;
      v42 = a6[1];
      v118 = *a6;
      v119 = v42;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v43 = *(_DWORD *)(a3 + 4);
      v44 = *(_DWORD *)(a3 + 8);
      v45 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      LODWORD(v121) = v45 + *(_DWORD *)a3;
      HIDWORD(v121) = v43;
      v122 = v44;
      LODWORD(v123) = v121 + v45;
      HIDWORD(v123) = v43 + v45;
      v124 = v44 + v45;
      v46 = a6[1];
      v118 = *a6;
      v119 = v46;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v47 = *(_DWORD *)(a3 + 4);
      v48 = *(_DWORD *)(a3 + 8);
      v49 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      LODWORD(v121) = v49 + *(_DWORD *)a3;
      HIDWORD(v121) = v47;
      v122 = v48 + v49;
      LODWORD(v123) = v121 + v49;
      HIDWORD(v123) = v47 + v49;
      v124 = v48 + v49 + v49;
      v50 = a6[1];
      v118 = *a6;
      v119 = v50;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v51 = *(_DWORD *)(a3 + 8);
      v52 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      v53 = v52 + *(_DWORD *)(a3 + 4);
      LODWORD(v121) = v52 + *(_DWORD *)a3;
      HIDWORD(v121) = v53;
      v122 = v51;
      LODWORD(v123) = v121 + v52;
      HIDWORD(v123) = v53 + v52;
      v124 = v51 + v52;
      v54 = a6[1];
      v118 = *a6;
      v119 = v54;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      v55 = *(_DWORD *)(a3 + 8);
      v56 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      v57 = v56 + *(_DWORD *)(a3 + 4);
      LODWORD(v121) = v56 + *(_DWORD *)a3;
      HIDWORD(v121) = v57;
      v122 = v55 + v56;
      LODWORD(v123) = v121 + v56;
      HIDWORD(v123) = v57 + v56;
      v124 = v55 + v56 + v56;
      v58 = a6[1];
      v118 = *a6;
      v119 = v58;
      v120 = a6[2];
      sub_22393D2A4(a1, v26, &v121, a4, a5, &v118);
      return;
    }
    if (*(_DWORD *)a1 <= *(_DWORD *)a3)
      v70 = *(_DWORD *)a3;
    else
      v70 = *(_DWORD *)a1;
    if (*(_DWORD *)(a3 + 12) >= *(_DWORD *)a1 + 8)
      v71 = *(_DWORD *)a1 + 8;
    else
      v71 = *(_DWORD *)(a3 + 12);
    v109 = v70;
    if (v71 > v70)
    {
      v72 = *(int32x2_t *)(a1 + 4);
      v73 = vmax_s32(v72, *(int32x2_t *)(a3 + 4));
      v74 = vmin_s32(*(int32x2_t *)(a3 + 16), vadd_s32(v72, (int32x2_t)0x800000008));
      *(int32x2_t *)v23.i8 = vcgt_s32(v74, v73);
      if ((v23.i8[0] & 1) != 0 && (v23.i8[4] & 1) != 0)
      {
        v75 = v73.u32[1];
        v105 = v74.i32[1];
        v106 = v73.i32[0];
        v108 = v74.i32[0];
        v76.i64[0] = 0x3F0000003F000000;
        v76.i64[1] = 0x3F0000003F000000;
        do
        {
          v107 = v75;
          *(float *)v23.i32 = (float)(int)v75;
          v110 = v75 & 1 | (((v75 >> 2) & 1) << 6) | (8 * ((v75 >> 1) & 1));
          v77 = v106;
          v112 = v23;
          do
          {
            *(float *)&v24 = (float)v77;
            v111 = v77;
            v78 = v109;
            v79 = v110 & 0xFFFFFF7F | (((v77 >> 2) & 1) << 7) | (8 * v77) & 0x10 | (2 * (v77 & 1));
            v113 = v24;
            do
            {
              v81 = **(_QWORD **)a6
                  + 40
                  * (v79 & 0xFFFFFEFF | (16 * v78) & 0x20 | (((v78 >> 2) & 1) << 8) | (4 * (v78 & 1)));
              v82 = **((_QWORD **)a6 + 5);
              LODWORD(v25) = *(_DWORD *)(*(_QWORD *)(v82 + 40784) + 312);
              v21.f32[0] = (float)v78;
              v21.i32[1] = v24;
              v21.i32[2] = v23.i32[0];
              v21 = vmulq_n_f32(vaddq_f32(v21, v76), *(float *)&v25);
              if (!*(_BYTE *)(v81 + 6))
              {
                v85 = *(_BYTE *)(v81 + 1);
                v83 = *(_QWORD *)(v82 + 2904);
                v86 = *(_QWORD *)(v82 + 2912);
                if (v83 < v86)
                {
                  *(_DWORD *)(v83 + 8) = v21.i32[2];
                  *(_QWORD *)v83 = v21.i64[0];
                  *(_DWORD *)(v83 + 12) = v25;
                  *(_BYTE *)(v83 + 16) = v85;
                  v80 = (char *)(v83 + 24);
                  *(_DWORD *)(v83 + 20) = 0;
LABEL_29:
                  *(_QWORD *)(v82 + 2904) = v80;
                  ++*(_DWORD *)(v82 + 2920);
                  goto LABEL_30;
                }
                v87 = *(_QWORD *)(v82 + 2896);
                v88 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v83 - v87) >> 3) + 1;
                if (v88 > 0xAAAAAAAAAAAAAAALL)
                  goto LABEL_62;
                v89 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v86 - v87) >> 3);
                if (2 * v89 > v88)
                  v88 = 2 * v89;
                if (v89 >= 0x555555555555555)
                  v90 = 0xAAAAAAAAAAAAAAALL;
                else
                  v90 = v88;
                if (v90 > 0xAAAAAAAAAAAAAAALL)
                  goto LABEL_63;
                v91 = 24 * v90;
                v114 = v21;
                v116 = v25;
                v92 = (char *)operator new(24 * v90);
                v93 = &v92[8 * ((uint64_t)(v83 - v87) >> 3)];
                *(_QWORD *)v93 = v114.i64[0];
                *((_DWORD *)v93 + 2) = v114.i32[2];
                v21.i32[3] = HIDWORD(v116);
                *((_DWORD *)v93 + 3) = v116;
                v93[16] = v85;
                *((_DWORD *)v93 + 5) = 0;
                v94 = v93;
                if (v83 != v87)
                {
                  do
                  {
                    v95 = *(_QWORD *)(v83 - 24);
                    v83 -= 24;
                    v96 = *(_DWORD *)(v83 + 8);
                    *((_QWORD *)v94 - 3) = v95;
                    v94 -= 24;
                    *((_DWORD *)v94 + 2) = v96;
                    v97 = *(_QWORD *)(v83 + 12);
                    *((_DWORD *)v94 + 5) = *(_DWORD *)(v83 + 20);
                    *(_QWORD *)(v94 + 12) = v97;
                  }
                  while (v83 != v87);
LABEL_55:
                  v83 = v87;
                }
LABEL_56:
                v104 = &v92[v91];
                *(_QWORD *)(v82 + 2896) = v94;
                v80 = v93 + 24;
                *(_QWORD *)(v82 + 2904) = v93 + 24;
                *(_QWORD *)(v82 + 2912) = v104;
                if (v83)
                  operator delete((void *)v83);
                v76.i64[0] = 0x3F0000003F000000;
                v76.i64[1] = 0x3F0000003F000000;
                v23 = v112;
                v24 = v113;
                goto LABEL_29;
              }
              if (*(char *)(v81 + 6) < 0)
              {
                v83 = *(_QWORD *)(v82 + 2904);
                v84 = *(_QWORD *)(v82 + 2912);
                if (v83 < v84)
                {
                  *(_DWORD *)(v83 + 8) = v21.i32[2];
                  *(_QWORD *)v83 = v21.i64[0];
                  *(_DWORD *)(v83 + 12) = v25;
                  *(_BYTE *)(v83 + 16) = -1;
                  v80 = (char *)(v83 + 24);
                  *(_DWORD *)(v83 + 20) = 2;
                  goto LABEL_29;
                }
                v87 = *(_QWORD *)(v82 + 2896);
                v98 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v83 - v87) >> 3) + 1;
                if (v98 > 0xAAAAAAAAAAAAAAALL)
LABEL_62:
                  sub_22329A3C4();
                v99 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v84 - v87) >> 3);
                if (2 * v99 > v98)
                  v98 = 2 * v99;
                if (v99 >= 0x555555555555555)
                  v100 = 0xAAAAAAAAAAAAAAALL;
                else
                  v100 = v98;
                if (v100 > 0xAAAAAAAAAAAAAAALL)
LABEL_63:
                  sub_223174E94();
                v91 = 24 * v100;
                v115 = v21;
                v117 = v25;
                v92 = (char *)operator new(24 * v100);
                v93 = &v92[8 * ((uint64_t)(v83 - v87) >> 3)];
                *(_QWORD *)v93 = v115.i64[0];
                *((_DWORD *)v93 + 2) = v115.i32[2];
                v21.i32[3] = HIDWORD(v117);
                *((_DWORD *)v93 + 3) = v117;
                v93[16] = -1;
                *((_DWORD *)v93 + 5) = 2;
                v94 = v93;
                if (v83 != v87)
                {
                  do
                  {
                    v101 = *(_QWORD *)(v83 - 24);
                    v83 -= 24;
                    v102 = *(_DWORD *)(v83 + 8);
                    *((_QWORD *)v94 - 3) = v101;
                    v94 -= 24;
                    *((_DWORD *)v94 + 2) = v102;
                    v103 = *(_QWORD *)(v83 + 12);
                    *((_DWORD *)v94 + 5) = *(_DWORD *)(v83 + 20);
                    *(_QWORD *)(v94 + 12) = v103;
                  }
                  while (v83 != v87);
                  goto LABEL_55;
                }
                goto LABEL_56;
              }
LABEL_30:
              ++v78;
            }
            while (v78 != v71);
            v77 = v111 + 1;
          }
          while (v111 + 1 != v108);
          v75 = v107 + 1;
        }
        while (v107 + 1 != v105);
      }
    }
  }
  else
  {
    v59 = *(_DWORD *)(a3 + 8);
    v60 = **((_QWORD **)a6 + 5);
    v61 = *(float *)(*(_QWORD *)(v60 + 40784) + 312);
    *(int32x2_t *)v23.i8 = vdup_lane_s32(*(int32x2_t *)a3, 0);
    v23.i32[0] = v59;
    *(int8x8_t *)v23.i8 = vand_s8(*(int8x8_t *)v23.i8, (int8x8_t)0x700000007);
    v62 = (uint32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vdupq_n_s32(HIDWORD(*(_QWORD *)a3) & 7), 1);
    v62.i32[0] = v23.i32[1];
    v63 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vzip1q_s32(v23, v23), (uint32x4_t)xmmword_224656630), (int8x16_t)xmmword_224656650), vandq_s8((int8x16_t)vshlq_u32(v62, (uint32x4_t)xmmword_224656620), (int8x16_t)xmmword_224656640));
    *(int8x8_t *)v63.i8 = vorr_s8(*(int8x8_t *)v63.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL));
    v64 = **(_QWORD **)a6 + 40 * (v63.i32[0] | v59 & 1u | v63.i32[1]);
    v65 = *(_BYTE *)(v64 + 1);
    v66 = *(char *)(v64 + 6);
    *(float32x2_t *)v22.f32 = vcvt_f32_s32(*(int32x2_t *)a3);
    v22.f32[2] = (float)v59;
    v63.i64[0] = 0x3F0000003F000000;
    v63.i64[1] = 0x3F0000003F000000;
    v67 = vmulq_n_f32(vaddq_f32(v22, (float32x4_t)v63), v61);
    v122 = v67.i32[2];
    v121 = v67.i64[0];
    if (v66)
    {
      if ((v66 & 0x80000000) == 0)
        return;
      v68 = v60 + 2896;
      v65 = -1;
      v69 = 2;
    }
    else
    {
      v68 = v60 + 2896;
      v69 = 0;
    }
    sub_223FFDF1C(v68, &v121, v65, v69, v61);
  }
}

void sub_22393DB58(uint64_t ***a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  float v10;
  float32x4_t v11;
  float32x4_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  float v19;
  float32x4_t v20;
  float32x4_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  float v28;
  float32x4_t v29;
  float32x4_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  float v37;
  float32x4_t v38;
  float32x4_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  float v46;
  float32x4_t v47;
  float32x4_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int v54;
  float v55;
  float32x4_t v56;
  float32x4_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  int v63;
  float v64;
  float32x4_t v65;
  float32x4_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  int v81;
  float v82;
  float32x4_t v83;
  float32x4_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  int v90;
  float v91;
  float32x4_t v92;
  float32x4_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  int v99;
  float v100;
  float32x4_t v101;
  float32x4_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  int v108;
  float v109;
  float32x4_t v110;
  float32x4_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  int v117;
  float v118;
  float32x4_t v119;
  float32x4_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  int v126;
  float v127;
  float32x4_t v128;
  float32x4_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  int v135;
  float v136;
  float32x4_t v137;
  float32x4_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  int v153;
  float v154;
  float32x4_t v155;
  float32x4_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  int v162;
  float v163;
  float32x4_t v164;
  float32x4_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  int v171;
  float v172;
  float32x4_t v173;
  float32x4_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  int v180;
  float v181;
  float32x4_t v182;
  float32x4_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  int v189;
  float v190;
  float32x4_t v191;
  float32x4_t v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  int v198;
  float v199;
  float32x4_t v200;
  float32x4_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  int v207;
  float v208;
  float32x4_t v209;
  float32x4_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  int v225;
  float v226;
  float32x4_t v227;
  float32x4_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  int v234;
  float v235;
  float32x4_t v236;
  float32x4_t v237;
  uint64_t v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  char v242;
  int v243;
  float v244;
  float32x4_t v245;
  float32x4_t v246;
  uint64_t v247;
  int v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  int v252;
  float v253;
  float32x4_t v254;
  float32x4_t v255;
  uint64_t v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  char v260;
  int v261;
  float v262;
  float32x4_t v263;
  float32x4_t v264;
  uint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  int v270;
  float v271;
  float32x4_t v272;
  float32x4_t v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  char v278;
  int v279;
  float v280;
  float32x4_t v281;
  float32x4_t v282;
  uint64_t v283;
  int v284;
  uint64_t v285;
  uint64_t v286;
  char v287;
  int v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  uint64_t v295;
  char v296;
  int v297;
  float v298;
  float32x4_t v299;
  float32x4_t v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  char v305;
  int v306;
  float v307;
  float32x4_t v308;
  float32x4_t v309;
  uint64_t v310;
  int v311;
  uint64_t v312;
  uint64_t v313;
  char v314;
  int v315;
  float v316;
  float32x4_t v317;
  float32x4_t v318;
  uint64_t v319;
  int v320;
  uint64_t v321;
  uint64_t v322;
  char v323;
  int v324;
  float v325;
  float32x4_t v326;
  float32x4_t v327;
  uint64_t v328;
  int v329;
  uint64_t v330;
  uint64_t v331;
  char v332;
  int v333;
  float v334;
  float32x4_t v335;
  float32x4_t v336;
  uint64_t v337;
  int v338;
  uint64_t v339;
  uint64_t v340;
  char v341;
  int v342;
  float v343;
  float32x4_t v344;
  float32x4_t v345;
  uint64_t v346;
  int v347;
  uint64_t v348;
  uint64_t v349;
  char v350;
  int v351;
  float v352;
  float32x4_t v353;
  float32x4_t v354;
  uint64_t v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  char v359;
  int v360;
  float v361;
  float32x4_t v362;
  float32x4_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  uint64_t v367;
  char v368;
  int v369;
  float v370;
  float32x4_t v371;
  float32x4_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  char v377;
  int v378;
  float v379;
  float32x4_t v380;
  float32x4_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  char v386;
  int v387;
  float v388;
  float32x4_t v389;
  float32x4_t v390;
  uint64_t v391;
  int v392;
  uint64_t v393;
  uint64_t v394;
  char v395;
  int v396;
  float v397;
  float32x4_t v398;
  float32x4_t v399;
  uint64_t v400;
  int v401;
  uint64_t v402;
  uint64_t v403;
  char v404;
  int v405;
  float v406;
  float32x4_t v407;
  float32x4_t v408;
  uint64_t v409;
  int v410;
  uint64_t v411;
  uint64_t v412;
  char v413;
  int v414;
  float v415;
  float32x4_t v416;
  float32x4_t v417;
  uint64_t v418;
  int v419;
  uint64_t v420;
  uint64_t v421;
  char v422;
  int v423;
  float v424;
  float32x4_t v425;
  float32x4_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  uint64_t v430;
  char v431;
  int v432;
  float v433;
  float32x4_t v434;
  float32x4_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  uint64_t v439;
  char v440;
  int v441;
  float v442;
  float32x4_t v443;
  float32x4_t v444;
  uint64_t v445;
  int v446;
  uint64_t v447;
  uint64_t v448;
  char v449;
  int v450;
  float v451;
  float32x4_t v452;
  float32x4_t v453;
  uint64_t v454;
  int v455;
  uint64_t v456;
  uint64_t v457;
  char v458;
  int v459;
  float v460;
  float32x4_t v461;
  float32x4_t v462;
  uint64_t v463;
  int v464;
  uint64_t v465;
  uint64_t v466;
  char v467;
  int v468;
  float v469;
  float32x4_t v470;
  float32x4_t v471;
  uint64_t v472;
  int v473;
  uint64_t v474;
  uint64_t v475;
  char v476;
  int v477;
  float v478;
  float32x4_t v479;
  float32x4_t v480;
  uint64_t v481;
  int v482;
  uint64_t v483;
  uint64_t v484;
  char v485;
  int v486;
  float v487;
  float32x4_t v488;
  float32x4_t v489;
  uint64_t v490;
  int v491;
  uint64_t v492;
  uint64_t v493;
  char v494;
  int v495;
  float v496;
  float32x4_t v497;
  float32x4_t v498;
  uint64_t v499;
  int v500;
  uint64_t v501;
  uint64_t v502;
  char v503;
  int v504;
  float v505;
  float32x4_t v506;
  float32x4_t v507;
  uint64_t v508;
  int v509;
  uint64_t v510;
  uint64_t v511;
  char v512;
  int v513;
  float v514;
  float32x4_t v515;
  float32x4_t v516;
  uint64_t v517;
  int v518;
  uint64_t v519;
  uint64_t v520;
  char v521;
  int v522;
  float v523;
  float32x4_t v524;
  float32x4_t v525;
  uint64_t v526;
  int v527;
  uint64_t v528;
  uint64_t v529;
  char v530;
  int v531;
  float v532;
  float32x4_t v533;
  float32x4_t v534;
  uint64_t v535;
  int v536;
  uint64_t v537;
  uint64_t v538;
  char v539;
  int v540;
  float v541;
  float32x4_t v542;
  float32x4_t v543;
  uint64_t v544;
  int v545;
  uint64_t v546;
  uint64_t v547;
  char v548;
  int v549;
  float v550;
  float32x4_t v551;
  float32x4_t v552;
  uint64_t v553;
  int v554;
  uint64_t v555;
  uint64_t v556;
  char v557;
  int v558;
  float32x4_t v559;
  float32x4_t v560;
  uint64_t v561;
  int v562;
  uint64_t v563;
  __int32 v564;

  v6 = ***a1;
  v7 = *(*a1)[5];
  v8 = *(_BYTE *)(v6 + 641);
  v9 = *(char *)(v6 + 646);
  v10 = *(float *)(*(_QWORD *)(v7 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  a4.f32[2] = (float)a2[1].i32[0];
  v11.i64[0] = 0x3F0000003F000000;
  v11.i64[1] = 0x3F0000003F000000;
  v12 = vmulq_n_f32(vaddq_f32(a4, v11), v10);
  v564 = v12.i32[2];
  v563 = v12.i64[0];
  if (v9)
  {
    if ((v9 & 0x80000000) == 0)
      goto LABEL_6;
    v13 = v7 + 2896;
    v8 = -1;
    v14 = 2;
  }
  else
  {
    v13 = v7 + 2896;
    v14 = 0;
  }
  sub_223FFDF1C(v13, &v563, v8, v14, v10);
LABEL_6:
  v15 = ***a1;
  v16 = *(*a1)[5];
  v17 = *(_BYTE *)(v15 + 681);
  v18 = *(char *)(v15 + 686);
  v19 = *(float *)(*(_QWORD *)(v16 + 40784) + 312);
  *(float32x2_t *)v12.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v12.f32[2] = (float)(a2[1].i32[0] + 1);
  v20.i64[0] = 0x3F0000003F000000;
  v20.i64[1] = 0x3F0000003F000000;
  v21 = vmulq_n_f32(vaddq_f32(v12, v20), v19);
  v564 = v21.i32[2];
  v563 = v21.i64[0];
  if (v18)
  {
    if ((v18 & 0x80000000) == 0)
      goto LABEL_11;
    v22 = v16 + 2896;
    v17 = -1;
    v23 = 2;
  }
  else
  {
    v22 = v16 + 2896;
    v23 = 0;
  }
  sub_223FFDF1C(v22, &v563, v17, v23, v19);
LABEL_11:
  v24 = ***a1;
  v25 = *(*a1)[5];
  v26 = *(_BYTE *)(v24 + 721);
  v27 = *(char *)(v24 + 726);
  v28 = *(float *)(*(_QWORD *)(v25 + 40784) + 312);
  *(float32x2_t *)v21.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v21.f32[2] = (float)a2[1].i32[0];
  v29.i64[0] = 0x3F0000003F000000;
  v29.i64[1] = 0x3F0000003F000000;
  v30 = vmulq_n_f32(vaddq_f32(v21, v29), v28);
  v564 = v30.i32[2];
  v563 = v30.i64[0];
  if (v27)
  {
    if ((v27 & 0x80000000) == 0)
      goto LABEL_16;
    v31 = v25 + 2896;
    v26 = -1;
    v32 = 2;
  }
  else
  {
    v31 = v25 + 2896;
    v32 = 0;
  }
  sub_223FFDF1C(v31, &v563, v26, v32, v28);
LABEL_16:
  v33 = ***a1;
  v34 = *(*a1)[5];
  v35 = *(_BYTE *)(v33 + 761);
  v36 = *(char *)(v33 + 766);
  v37 = *(float *)(*(_QWORD *)(v34 + 40784) + 312);
  *(float32x2_t *)v30.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v30.f32[2] = (float)(a2[1].i32[0] + 1);
  v38.i64[0] = 0x3F0000003F000000;
  v38.i64[1] = 0x3F0000003F000000;
  v39 = vmulq_n_f32(vaddq_f32(v30, v38), v37);
  v564 = v39.i32[2];
  v563 = v39.i64[0];
  if (v36)
  {
    if ((v36 & 0x80000000) == 0)
      goto LABEL_21;
    v40 = v34 + 2896;
    v35 = -1;
    v41 = 2;
  }
  else
  {
    v40 = v34 + 2896;
    v41 = 0;
  }
  sub_223FFDF1C(v40, &v563, v35, v41, v37);
LABEL_21:
  v42 = ***a1;
  v43 = *(*a1)[5];
  v44 = *(_BYTE *)(v42 + 801);
  v45 = *(char *)(v42 + 806);
  v46 = *(float *)(*(_QWORD *)(v43 + 40784) + 312);
  *(float32x2_t *)v38.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v38.f32[2] = (float)a2[1].i32[0];
  v47.i64[0] = 0x3F0000003F000000;
  v47.i64[1] = 0x3F0000003F000000;
  v48 = vmulq_n_f32(vaddq_f32(v38, v47), v46);
  v564 = v48.i32[2];
  v563 = v48.i64[0];
  if (v45)
  {
    if ((v45 & 0x80000000) == 0)
      goto LABEL_26;
    v49 = v43 + 2896;
    v44 = -1;
    v50 = 2;
  }
  else
  {
    v49 = v43 + 2896;
    v50 = 0;
  }
  sub_223FFDF1C(v49, &v563, v44, v50, v46);
LABEL_26:
  v51 = ***a1;
  v52 = *(*a1)[5];
  v53 = *(_BYTE *)(v51 + 841);
  v54 = *(char *)(v51 + 846);
  v55 = *(float *)(*(_QWORD *)(v52 + 40784) + 312);
  *(float32x2_t *)v48.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v48.f32[2] = (float)(a2[1].i32[0] + 1);
  v56.i64[0] = 0x3F0000003F000000;
  v56.i64[1] = 0x3F0000003F000000;
  v57 = vmulq_n_f32(vaddq_f32(v48, v56), v55);
  v564 = v57.i32[2];
  v563 = v57.i64[0];
  if (v54)
  {
    if ((v54 & 0x80000000) == 0)
      goto LABEL_31;
    v58 = v52 + 2896;
    v53 = -1;
    v59 = 2;
  }
  else
  {
    v58 = v52 + 2896;
    v59 = 0;
  }
  sub_223FFDF1C(v58, &v563, v53, v59, v55);
LABEL_31:
  v60 = ***a1;
  v61 = *(*a1)[5];
  v62 = *(_BYTE *)(v60 + 881);
  v63 = *(char *)(v60 + 886);
  v64 = *(float *)(*(_QWORD *)(v61 + 40784) + 312);
  *(float32x2_t *)v56.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v56.f32[2] = (float)a2[1].i32[0];
  v65.i64[0] = 0x3F0000003F000000;
  v65.i64[1] = 0x3F0000003F000000;
  v66 = vmulq_n_f32(vaddq_f32(v56, v65), v64);
  v564 = v66.i32[2];
  v563 = v66.i64[0];
  if (v63)
  {
    if ((v63 & 0x80000000) == 0)
      goto LABEL_36;
    v67 = v61 + 2896;
    v62 = -1;
    v68 = 2;
  }
  else
  {
    v67 = v61 + 2896;
    v68 = 0;
  }
  sub_223FFDF1C(v67, &v563, v62, v68, v64);
LABEL_36:
  v69 = ***a1;
  v70 = *(*a1)[5];
  v71 = *(_BYTE *)(v69 + 921);
  v72 = *(char *)(v69 + 926);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v66.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v66.f32[2] = (float)(a2[1].i32[0] + 1);
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v66, v74), v73);
  v564 = v75.i32[2];
  v563 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_41;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v563, v71, v77, v73);
LABEL_41:
  v78 = ***a1;
  v79 = *(*a1)[5];
  v80 = *(_BYTE *)(v78 + 961);
  v81 = *(char *)(v78 + 966);
  v82 = *(float *)(*(_QWORD *)(v79 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v75.f32[2] = (float)(a2[1].i32[0] + 2);
  v83.i64[0] = 0x3F0000003F000000;
  v83.i64[1] = 0x3F0000003F000000;
  v84 = vmulq_n_f32(vaddq_f32(v75, v83), v82);
  v564 = v84.i32[2];
  v563 = v84.i64[0];
  if (v81)
  {
    if ((v81 & 0x80000000) == 0)
      goto LABEL_46;
    v85 = v79 + 2896;
    v80 = -1;
    v86 = 2;
  }
  else
  {
    v85 = v79 + 2896;
    v86 = 0;
  }
  sub_223FFDF1C(v85, &v563, v80, v86, v82);
LABEL_46:
  v87 = ***a1;
  v88 = *(*a1)[5];
  v89 = *(_BYTE *)(v87 + 1001);
  v90 = *(char *)(v87 + 1006);
  v91 = *(float *)(*(_QWORD *)(v88 + 40784) + 312);
  *(float32x2_t *)v84.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v84.f32[2] = (float)(a2[1].i32[0] + 3);
  v92.i64[0] = 0x3F0000003F000000;
  v92.i64[1] = 0x3F0000003F000000;
  v93 = vmulq_n_f32(vaddq_f32(v84, v92), v91);
  v564 = v93.i32[2];
  v563 = v93.i64[0];
  if (v90)
  {
    if ((v90 & 0x80000000) == 0)
      goto LABEL_51;
    v94 = v88 + 2896;
    v89 = -1;
    v95 = 2;
  }
  else
  {
    v94 = v88 + 2896;
    v95 = 0;
  }
  sub_223FFDF1C(v94, &v563, v89, v95, v91);
LABEL_51:
  v96 = ***a1;
  v97 = *(*a1)[5];
  v98 = *(_BYTE *)(v96 + 1041);
  v99 = *(char *)(v96 + 1046);
  v100 = *(float *)(*(_QWORD *)(v97 + 40784) + 312);
  *(float32x2_t *)v93.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v93.f32[2] = (float)(a2[1].i32[0] + 2);
  v101.i64[0] = 0x3F0000003F000000;
  v101.i64[1] = 0x3F0000003F000000;
  v102 = vmulq_n_f32(vaddq_f32(v93, v101), v100);
  v564 = v102.i32[2];
  v563 = v102.i64[0];
  if (v99)
  {
    if ((v99 & 0x80000000) == 0)
      goto LABEL_56;
    v103 = v97 + 2896;
    v98 = -1;
    v104 = 2;
  }
  else
  {
    v103 = v97 + 2896;
    v104 = 0;
  }
  sub_223FFDF1C(v103, &v563, v98, v104, v100);
LABEL_56:
  v105 = ***a1;
  v106 = *(*a1)[5];
  v107 = *(_BYTE *)(v105 + 1081);
  v108 = *(char *)(v105 + 1086);
  v109 = *(float *)(*(_QWORD *)(v106 + 40784) + 312);
  *(float32x2_t *)v102.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v102.f32[2] = (float)(a2[1].i32[0] + 3);
  v110.i64[0] = 0x3F0000003F000000;
  v110.i64[1] = 0x3F0000003F000000;
  v111 = vmulq_n_f32(vaddq_f32(v102, v110), v109);
  v564 = v111.i32[2];
  v563 = v111.i64[0];
  if (v108)
  {
    if ((v108 & 0x80000000) == 0)
      goto LABEL_61;
    v112 = v106 + 2896;
    v107 = -1;
    v113 = 2;
  }
  else
  {
    v112 = v106 + 2896;
    v113 = 0;
  }
  sub_223FFDF1C(v112, &v563, v107, v113, v109);
LABEL_61:
  v114 = ***a1;
  v115 = *(*a1)[5];
  v116 = *(_BYTE *)(v114 + 1121);
  v117 = *(char *)(v114 + 1126);
  v118 = *(float *)(*(_QWORD *)(v115 + 40784) + 312);
  *(float32x2_t *)v111.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v111.f32[2] = (float)(a2[1].i32[0] + 2);
  v119.i64[0] = 0x3F0000003F000000;
  v119.i64[1] = 0x3F0000003F000000;
  v120 = vmulq_n_f32(vaddq_f32(v111, v119), v118);
  v564 = v120.i32[2];
  v563 = v120.i64[0];
  if (v117)
  {
    if ((v117 & 0x80000000) == 0)
      goto LABEL_66;
    v121 = v115 + 2896;
    v116 = -1;
    v122 = 2;
  }
  else
  {
    v121 = v115 + 2896;
    v122 = 0;
  }
  sub_223FFDF1C(v121, &v563, v116, v122, v118);
LABEL_66:
  v123 = ***a1;
  v124 = *(*a1)[5];
  v125 = *(_BYTE *)(v123 + 1161);
  v126 = *(char *)(v123 + 1166);
  v127 = *(float *)(*(_QWORD *)(v124 + 40784) + 312);
  *(float32x2_t *)v120.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v120.f32[2] = (float)(a2[1].i32[0] + 3);
  v128.i64[0] = 0x3F0000003F000000;
  v128.i64[1] = 0x3F0000003F000000;
  v129 = vmulq_n_f32(vaddq_f32(v120, v128), v127);
  v564 = v129.i32[2];
  v563 = v129.i64[0];
  if (v126)
  {
    if ((v126 & 0x80000000) == 0)
      goto LABEL_71;
    v130 = v124 + 2896;
    v125 = -1;
    v131 = 2;
  }
  else
  {
    v130 = v124 + 2896;
    v131 = 0;
  }
  sub_223FFDF1C(v130, &v563, v125, v131, v127);
LABEL_71:
  v132 = ***a1;
  v133 = *(*a1)[5];
  v134 = *(_BYTE *)(v132 + 1201);
  v135 = *(char *)(v132 + 1206);
  v136 = *(float *)(*(_QWORD *)(v133 + 40784) + 312);
  *(float32x2_t *)v129.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v129.f32[2] = (float)(a2[1].i32[0] + 2);
  v137.i64[0] = 0x3F0000003F000000;
  v137.i64[1] = 0x3F0000003F000000;
  v138 = vmulq_n_f32(vaddq_f32(v129, v137), v136);
  v564 = v138.i32[2];
  v563 = v138.i64[0];
  if (v135)
  {
    if ((v135 & 0x80000000) == 0)
      goto LABEL_76;
    v139 = v133 + 2896;
    v134 = -1;
    v140 = 2;
  }
  else
  {
    v139 = v133 + 2896;
    v140 = 0;
  }
  sub_223FFDF1C(v139, &v563, v134, v140, v136);
LABEL_76:
  v141 = ***a1;
  v142 = *(*a1)[5];
  v143 = *(_BYTE *)(v141 + 1241);
  v144 = *(char *)(v141 + 1246);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v138.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v138.f32[2] = (float)(a2[1].i32[0] + 3);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v138, v146), v145);
  v564 = v147.i32[2];
  v563 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_81;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v563, v143, v149, v145);
LABEL_81:
  v150 = ***a1;
  v151 = *(*a1)[5];
  v152 = *(_BYTE *)(v150 + 1281);
  v147.i32[0] = a2->i32[0] + 2;
  v147.i32[1] = a2->i32[1];
  v153 = *(char *)(v150 + 1286);
  v154 = *(float *)(*(_QWORD *)(v151 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(*(int32x2_t *)v147.f32);
  v147.f32[2] = (float)a2[1].i32[0];
  v155.i64[0] = 0x3F0000003F000000;
  v155.i64[1] = 0x3F0000003F000000;
  v156 = vmulq_n_f32(vaddq_f32(v147, v155), v154);
  v564 = v156.i32[2];
  v563 = v156.i64[0];
  if (v153)
  {
    if ((v153 & 0x80000000) == 0)
      goto LABEL_86;
    v157 = v151 + 2896;
    v152 = -1;
    v158 = 2;
  }
  else
  {
    v157 = v151 + 2896;
    v158 = 0;
  }
  sub_223FFDF1C(v157, &v563, v152, v158, v154);
LABEL_86:
  v159 = ***a1;
  v160 = *(*a1)[5];
  v161 = *(_BYTE *)(v159 + 1321);
  v156.i32[0] = a2->i32[0] + 2;
  v156.i32[1] = a2->i32[1];
  v162 = *(char *)(v159 + 1326);
  v163 = *(float *)(*(_QWORD *)(v160 + 40784) + 312);
  *(float32x2_t *)v156.f32 = vcvt_f32_s32(*(int32x2_t *)v156.f32);
  v156.f32[2] = (float)(a2[1].i32[0] + 1);
  v164.i64[0] = 0x3F0000003F000000;
  v164.i64[1] = 0x3F0000003F000000;
  v165 = vmulq_n_f32(vaddq_f32(v156, v164), v163);
  v564 = v165.i32[2];
  v563 = v165.i64[0];
  if (v162)
  {
    if ((v162 & 0x80000000) == 0)
      goto LABEL_91;
    v166 = v160 + 2896;
    v161 = -1;
    v167 = 2;
  }
  else
  {
    v166 = v160 + 2896;
    v167 = 0;
  }
  sub_223FFDF1C(v166, &v563, v161, v167, v163);
LABEL_91:
  v168 = ***a1;
  v169 = *(*a1)[5];
  v170 = *(_BYTE *)(v168 + 1361);
  v171 = *(char *)(v168 + 1366);
  v172 = *(float *)(*(_QWORD *)(v169 + 40784) + 312);
  *(float32x2_t *)v164.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v164.f32[2] = (float)a2[1].i32[0];
  v173.i64[0] = 0x3F0000003F000000;
  v173.i64[1] = 0x3F0000003F000000;
  v174 = vmulq_n_f32(vaddq_f32(v164, v173), v172);
  v564 = v174.i32[2];
  v563 = v174.i64[0];
  if (v171)
  {
    if ((v171 & 0x80000000) == 0)
      goto LABEL_96;
    v175 = v169 + 2896;
    v170 = -1;
    v176 = 2;
  }
  else
  {
    v175 = v169 + 2896;
    v176 = 0;
  }
  sub_223FFDF1C(v175, &v563, v170, v176, v172);
LABEL_96:
  v177 = ***a1;
  v178 = *(*a1)[5];
  v179 = *(_BYTE *)(v177 + 1401);
  v180 = *(char *)(v177 + 1406);
  v181 = *(float *)(*(_QWORD *)(v178 + 40784) + 312);
  *(float32x2_t *)v174.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v174.f32[2] = (float)(a2[1].i32[0] + 1);
  v182.i64[0] = 0x3F0000003F000000;
  v182.i64[1] = 0x3F0000003F000000;
  v183 = vmulq_n_f32(vaddq_f32(v174, v182), v181);
  v564 = v183.i32[2];
  v563 = v183.i64[0];
  if (v180)
  {
    if ((v180 & 0x80000000) == 0)
      goto LABEL_101;
    v184 = v178 + 2896;
    v179 = -1;
    v185 = 2;
  }
  else
  {
    v184 = v178 + 2896;
    v185 = 0;
  }
  sub_223FFDF1C(v184, &v563, v179, v185, v181);
LABEL_101:
  v186 = ***a1;
  v187 = *(*a1)[5];
  v188 = *(_BYTE *)(v186 + 1441);
  v183.i32[0] = a2->i32[0] + 3;
  v183.i32[1] = a2->i32[1];
  v189 = *(char *)(v186 + 1446);
  v190 = *(float *)(*(_QWORD *)(v187 + 40784) + 312);
  *(float32x2_t *)v183.f32 = vcvt_f32_s32(*(int32x2_t *)v183.f32);
  v183.f32[2] = (float)a2[1].i32[0];
  v191.i64[0] = 0x3F0000003F000000;
  v191.i64[1] = 0x3F0000003F000000;
  v192 = vmulq_n_f32(vaddq_f32(v183, v191), v190);
  v564 = v192.i32[2];
  v563 = v192.i64[0];
  if (v189)
  {
    if ((v189 & 0x80000000) == 0)
      goto LABEL_106;
    v193 = v187 + 2896;
    v188 = -1;
    v194 = 2;
  }
  else
  {
    v193 = v187 + 2896;
    v194 = 0;
  }
  sub_223FFDF1C(v193, &v563, v188, v194, v190);
LABEL_106:
  v195 = ***a1;
  v196 = *(*a1)[5];
  v197 = *(_BYTE *)(v195 + 1481);
  v192.i32[0] = a2->i32[0] + 3;
  v192.i32[1] = a2->i32[1];
  v198 = *(char *)(v195 + 1486);
  v199 = *(float *)(*(_QWORD *)(v196 + 40784) + 312);
  *(float32x2_t *)v192.f32 = vcvt_f32_s32(*(int32x2_t *)v192.f32);
  v192.f32[2] = (float)(a2[1].i32[0] + 1);
  v200.i64[0] = 0x3F0000003F000000;
  v200.i64[1] = 0x3F0000003F000000;
  v201 = vmulq_n_f32(vaddq_f32(v192, v200), v199);
  v564 = v201.i32[2];
  v563 = v201.i64[0];
  if (v198)
  {
    if ((v198 & 0x80000000) == 0)
      goto LABEL_111;
    v202 = v196 + 2896;
    v197 = -1;
    v203 = 2;
  }
  else
  {
    v202 = v196 + 2896;
    v203 = 0;
  }
  sub_223FFDF1C(v202, &v563, v197, v203, v199);
LABEL_111:
  v204 = ***a1;
  v205 = *(*a1)[5];
  v206 = *(_BYTE *)(v204 + 1521);
  v207 = *(char *)(v204 + 1526);
  v208 = *(float *)(*(_QWORD *)(v205 + 40784) + 312);
  *(float32x2_t *)v200.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v200.f32[2] = (float)a2[1].i32[0];
  v209.i64[0] = 0x3F0000003F000000;
  v209.i64[1] = 0x3F0000003F000000;
  v210 = vmulq_n_f32(vaddq_f32(v200, v209), v208);
  v564 = v210.i32[2];
  v563 = v210.i64[0];
  if (v207)
  {
    if ((v207 & 0x80000000) == 0)
      goto LABEL_116;
    v211 = v205 + 2896;
    v206 = -1;
    v212 = 2;
  }
  else
  {
    v211 = v205 + 2896;
    v212 = 0;
  }
  sub_223FFDF1C(v211, &v563, v206, v212, v208);
LABEL_116:
  v213 = ***a1;
  v214 = *(*a1)[5];
  v215 = *(_BYTE *)(v213 + 1561);
  v216 = *(char *)(v213 + 1566);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v210.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v210.f32[2] = (float)(a2[1].i32[0] + 1);
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v210, v218), v217);
  v564 = v219.i32[2];
  v563 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_121;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v563, v215, v221, v217);
LABEL_121:
  v222 = ***a1;
  v223 = *(*a1)[5];
  v224 = *(_BYTE *)(v222 + 1601);
  v219.i32[0] = a2->i32[0] + 2;
  v219.i32[1] = a2->i32[1];
  v225 = *(char *)(v222 + 1606);
  v226 = *(float *)(*(_QWORD *)(v223 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(*(int32x2_t *)v219.f32);
  v219.f32[2] = (float)(a2[1].i32[0] + 2);
  v227.i64[0] = 0x3F0000003F000000;
  v227.i64[1] = 0x3F0000003F000000;
  v228 = vmulq_n_f32(vaddq_f32(v219, v227), v226);
  v564 = v228.i32[2];
  v563 = v228.i64[0];
  if (v225)
  {
    if ((v225 & 0x80000000) == 0)
      goto LABEL_126;
    v229 = v223 + 2896;
    v224 = -1;
    v230 = 2;
  }
  else
  {
    v229 = v223 + 2896;
    v230 = 0;
  }
  sub_223FFDF1C(v229, &v563, v224, v230, v226);
LABEL_126:
  v231 = ***a1;
  v232 = *(*a1)[5];
  v233 = *(_BYTE *)(v231 + 1641);
  v228.i32[0] = a2->i32[0] + 2;
  v228.i32[1] = a2->i32[1];
  v234 = *(char *)(v231 + 1646);
  v235 = *(float *)(*(_QWORD *)(v232 + 40784) + 312);
  *(float32x2_t *)v228.f32 = vcvt_f32_s32(*(int32x2_t *)v228.f32);
  v228.f32[2] = (float)(a2[1].i32[0] + 3);
  v236.i64[0] = 0x3F0000003F000000;
  v236.i64[1] = 0x3F0000003F000000;
  v237 = vmulq_n_f32(vaddq_f32(v228, v236), v235);
  v564 = v237.i32[2];
  v563 = v237.i64[0];
  if (v234)
  {
    if ((v234 & 0x80000000) == 0)
      goto LABEL_131;
    v238 = v232 + 2896;
    v233 = -1;
    v239 = 2;
  }
  else
  {
    v238 = v232 + 2896;
    v239 = 0;
  }
  sub_223FFDF1C(v238, &v563, v233, v239, v235);
LABEL_131:
  v240 = ***a1;
  v241 = *(*a1)[5];
  v242 = *(_BYTE *)(v240 + 1681);
  v243 = *(char *)(v240 + 1686);
  v244 = *(float *)(*(_QWORD *)(v241 + 40784) + 312);
  *(float32x2_t *)v237.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v237.f32[2] = (float)(a2[1].i32[0] + 2);
  v245.i64[0] = 0x3F0000003F000000;
  v245.i64[1] = 0x3F0000003F000000;
  v246 = vmulq_n_f32(vaddq_f32(v237, v245), v244);
  v564 = v246.i32[2];
  v563 = v246.i64[0];
  if (v243)
  {
    if ((v243 & 0x80000000) == 0)
      goto LABEL_136;
    v247 = v241 + 2896;
    v242 = -1;
    v248 = 2;
  }
  else
  {
    v247 = v241 + 2896;
    v248 = 0;
  }
  sub_223FFDF1C(v247, &v563, v242, v248, v244);
LABEL_136:
  v249 = ***a1;
  v250 = *(*a1)[5];
  v251 = *(_BYTE *)(v249 + 1721);
  v252 = *(char *)(v249 + 1726);
  v253 = *(float *)(*(_QWORD *)(v250 + 40784) + 312);
  *(float32x2_t *)v246.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v246.f32[2] = (float)(a2[1].i32[0] + 3);
  v254.i64[0] = 0x3F0000003F000000;
  v254.i64[1] = 0x3F0000003F000000;
  v255 = vmulq_n_f32(vaddq_f32(v246, v254), v253);
  v564 = v255.i32[2];
  v563 = v255.i64[0];
  if (v252)
  {
    if ((v252 & 0x80000000) == 0)
      goto LABEL_141;
    v256 = v250 + 2896;
    v251 = -1;
    v257 = 2;
  }
  else
  {
    v256 = v250 + 2896;
    v257 = 0;
  }
  sub_223FFDF1C(v256, &v563, v251, v257, v253);
LABEL_141:
  v258 = ***a1;
  v259 = *(*a1)[5];
  v260 = *(_BYTE *)(v258 + 1761);
  v255.i32[0] = a2->i32[0] + 3;
  v255.i32[1] = a2->i32[1];
  v261 = *(char *)(v258 + 1766);
  v262 = *(float *)(*(_QWORD *)(v259 + 40784) + 312);
  *(float32x2_t *)v255.f32 = vcvt_f32_s32(*(int32x2_t *)v255.f32);
  v255.f32[2] = (float)(a2[1].i32[0] + 2);
  v263.i64[0] = 0x3F0000003F000000;
  v263.i64[1] = 0x3F0000003F000000;
  v264 = vmulq_n_f32(vaddq_f32(v255, v263), v262);
  v564 = v264.i32[2];
  v563 = v264.i64[0];
  if (v261)
  {
    if ((v261 & 0x80000000) == 0)
      goto LABEL_146;
    v265 = v259 + 2896;
    v260 = -1;
    v266 = 2;
  }
  else
  {
    v265 = v259 + 2896;
    v266 = 0;
  }
  sub_223FFDF1C(v265, &v563, v260, v266, v262);
LABEL_146:
  v267 = ***a1;
  v268 = *(*a1)[5];
  v269 = *(_BYTE *)(v267 + 1801);
  v264.i32[0] = a2->i32[0] + 3;
  v264.i32[1] = a2->i32[1];
  v270 = *(char *)(v267 + 1806);
  v271 = *(float *)(*(_QWORD *)(v268 + 40784) + 312);
  *(float32x2_t *)v264.f32 = vcvt_f32_s32(*(int32x2_t *)v264.f32);
  v264.f32[2] = (float)(a2[1].i32[0] + 3);
  v272.i64[0] = 0x3F0000003F000000;
  v272.i64[1] = 0x3F0000003F000000;
  v273 = vmulq_n_f32(vaddq_f32(v264, v272), v271);
  v564 = v273.i32[2];
  v563 = v273.i64[0];
  if (v270)
  {
    if ((v270 & 0x80000000) == 0)
      goto LABEL_151;
    v274 = v268 + 2896;
    v269 = -1;
    v275 = 2;
  }
  else
  {
    v274 = v268 + 2896;
    v275 = 0;
  }
  sub_223FFDF1C(v274, &v563, v269, v275, v271);
LABEL_151:
  v276 = ***a1;
  v277 = *(*a1)[5];
  v278 = *(_BYTE *)(v276 + 1841);
  v279 = *(char *)(v276 + 1846);
  v280 = *(float *)(*(_QWORD *)(v277 + 40784) + 312);
  *(float32x2_t *)v273.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v273.f32[2] = (float)(a2[1].i32[0] + 2);
  v281.i64[0] = 0x3F0000003F000000;
  v281.i64[1] = 0x3F0000003F000000;
  v282 = vmulq_n_f32(vaddq_f32(v273, v281), v280);
  v564 = v282.i32[2];
  v563 = v282.i64[0];
  if (v279)
  {
    if ((v279 & 0x80000000) == 0)
      goto LABEL_156;
    v283 = v277 + 2896;
    v278 = -1;
    v284 = 2;
  }
  else
  {
    v283 = v277 + 2896;
    v284 = 0;
  }
  sub_223FFDF1C(v283, &v563, v278, v284, v280);
LABEL_156:
  v285 = ***a1;
  v286 = *(*a1)[5];
  v287 = *(_BYTE *)(v285 + 1881);
  v288 = *(char *)(v285 + 1886);
  v289 = *(float *)(*(_QWORD *)(v286 + 40784) + 312);
  *(float32x2_t *)v282.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v282.f32[2] = (float)(a2[1].i32[0] + 3);
  v290.i64[0] = 0x3F0000003F000000;
  v290.i64[1] = 0x3F0000003F000000;
  v291 = vmulq_n_f32(vaddq_f32(v282, v290), v289);
  v564 = v291.i32[2];
  v563 = v291.i64[0];
  if (v288)
  {
    if ((v288 & 0x80000000) == 0)
      goto LABEL_161;
    v292 = v286 + 2896;
    v287 = -1;
    v293 = 2;
  }
  else
  {
    v292 = v286 + 2896;
    v293 = 0;
  }
  sub_223FFDF1C(v292, &v563, v287, v293, v289);
LABEL_161:
  v294 = ***a1;
  v295 = *(*a1)[5];
  v296 = *(_BYTE *)(v294 + 1921);
  v297 = *(char *)(v294 + 1926);
  v298 = *(float *)(*(_QWORD *)(v295 + 40784) + 312);
  *(float32x2_t *)v290.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v290.f32[2] = (float)a2[1].i32[0];
  v299.i64[0] = 0x3F0000003F000000;
  v299.i64[1] = 0x3F0000003F000000;
  v300 = vmulq_n_f32(vaddq_f32(v290, v299), v298);
  v564 = v300.i32[2];
  v563 = v300.i64[0];
  if (v297)
  {
    if ((v297 & 0x80000000) == 0)
      goto LABEL_166;
    v301 = v295 + 2896;
    v296 = -1;
    v302 = 2;
  }
  else
  {
    v301 = v295 + 2896;
    v302 = 0;
  }
  sub_223FFDF1C(v301, &v563, v296, v302, v298);
LABEL_166:
  v303 = ***a1;
  v304 = *(*a1)[5];
  v305 = *(_BYTE *)(v303 + 1961);
  v306 = *(char *)(v303 + 1966);
  v307 = *(float *)(*(_QWORD *)(v304 + 40784) + 312);
  *(float32x2_t *)v300.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v300.f32[2] = (float)(a2[1].i32[0] + 1);
  v308.i64[0] = 0x3F0000003F000000;
  v308.i64[1] = 0x3F0000003F000000;
  v309 = vmulq_n_f32(vaddq_f32(v300, v308), v307);
  v564 = v309.i32[2];
  v563 = v309.i64[0];
  if (v306)
  {
    if ((v306 & 0x80000000) == 0)
      goto LABEL_171;
    v310 = v304 + 2896;
    v305 = -1;
    v311 = 2;
  }
  else
  {
    v310 = v304 + 2896;
    v311 = 0;
  }
  sub_223FFDF1C(v310, &v563, v305, v311, v307);
LABEL_171:
  v312 = ***a1;
  v313 = *(*a1)[5];
  v314 = *(_BYTE *)(v312 + 2001);
  v315 = *(char *)(v312 + 2006);
  v316 = *(float *)(*(_QWORD *)(v313 + 40784) + 312);
  *(float32x2_t *)v308.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v308.f32[2] = (float)a2[1].i32[0];
  v317.i64[0] = 0x3F0000003F000000;
  v317.i64[1] = 0x3F0000003F000000;
  v318 = vmulq_n_f32(vaddq_f32(v308, v317), v316);
  v564 = v318.i32[2];
  v563 = v318.i64[0];
  if (v315)
  {
    if ((v315 & 0x80000000) == 0)
      goto LABEL_176;
    v319 = v313 + 2896;
    v314 = -1;
    v320 = 2;
  }
  else
  {
    v319 = v313 + 2896;
    v320 = 0;
  }
  sub_223FFDF1C(v319, &v563, v314, v320, v316);
LABEL_176:
  v321 = ***a1;
  v322 = *(*a1)[5];
  v323 = *(_BYTE *)(v321 + 2041);
  v324 = *(char *)(v321 + 2046);
  v325 = *(float *)(*(_QWORD *)(v322 + 40784) + 312);
  *(float32x2_t *)v318.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v318.f32[2] = (float)(a2[1].i32[0] + 1);
  v326.i64[0] = 0x3F0000003F000000;
  v326.i64[1] = 0x3F0000003F000000;
  v327 = vmulq_n_f32(vaddq_f32(v318, v326), v325);
  v564 = v327.i32[2];
  v563 = v327.i64[0];
  if (v324)
  {
    if ((v324 & 0x80000000) == 0)
      goto LABEL_181;
    v328 = v322 + 2896;
    v323 = -1;
    v329 = 2;
  }
  else
  {
    v328 = v322 + 2896;
    v329 = 0;
  }
  sub_223FFDF1C(v328, &v563, v323, v329, v325);
LABEL_181:
  v330 = ***a1;
  v331 = *(*a1)[5];
  v332 = *(_BYTE *)(v330 + 2081);
  v333 = *(char *)(v330 + 2086);
  v334 = *(float *)(*(_QWORD *)(v331 + 40784) + 312);
  *(float32x2_t *)v326.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v326.f32[2] = (float)a2[1].i32[0];
  v335.i64[0] = 0x3F0000003F000000;
  v335.i64[1] = 0x3F0000003F000000;
  v336 = vmulq_n_f32(vaddq_f32(v326, v335), v334);
  v564 = v336.i32[2];
  v563 = v336.i64[0];
  if (v333)
  {
    if ((v333 & 0x80000000) == 0)
      goto LABEL_186;
    v337 = v331 + 2896;
    v332 = -1;
    v338 = 2;
  }
  else
  {
    v337 = v331 + 2896;
    v338 = 0;
  }
  sub_223FFDF1C(v337, &v563, v332, v338, v334);
LABEL_186:
  v339 = ***a1;
  v340 = *(*a1)[5];
  v341 = *(_BYTE *)(v339 + 2121);
  v342 = *(char *)(v339 + 2126);
  v343 = *(float *)(*(_QWORD *)(v340 + 40784) + 312);
  *(float32x2_t *)v336.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v336.f32[2] = (float)(a2[1].i32[0] + 1);
  v344.i64[0] = 0x3F0000003F000000;
  v344.i64[1] = 0x3F0000003F000000;
  v345 = vmulq_n_f32(vaddq_f32(v336, v344), v343);
  v564 = v345.i32[2];
  v563 = v345.i64[0];
  if (v342)
  {
    if ((v342 & 0x80000000) == 0)
      goto LABEL_191;
    v346 = v340 + 2896;
    v341 = -1;
    v347 = 2;
  }
  else
  {
    v346 = v340 + 2896;
    v347 = 0;
  }
  sub_223FFDF1C(v346, &v563, v341, v347, v343);
LABEL_191:
  v348 = ***a1;
  v349 = *(*a1)[5];
  v350 = *(_BYTE *)(v348 + 2161);
  v351 = *(char *)(v348 + 2166);
  v352 = *(float *)(*(_QWORD *)(v349 + 40784) + 312);
  *(float32x2_t *)v344.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v344.f32[2] = (float)a2[1].i32[0];
  v353.i64[0] = 0x3F0000003F000000;
  v353.i64[1] = 0x3F0000003F000000;
  v354 = vmulq_n_f32(vaddq_f32(v344, v353), v352);
  v564 = v354.i32[2];
  v563 = v354.i64[0];
  if (v351)
  {
    if ((v351 & 0x80000000) == 0)
      goto LABEL_196;
    v355 = v349 + 2896;
    v350 = -1;
    v356 = 2;
  }
  else
  {
    v355 = v349 + 2896;
    v356 = 0;
  }
  sub_223FFDF1C(v355, &v563, v350, v356, v352);
LABEL_196:
  v357 = ***a1;
  v358 = *(*a1)[5];
  v359 = *(_BYTE *)(v357 + 2201);
  v360 = *(char *)(v357 + 2206);
  v361 = *(float *)(*(_QWORD *)(v358 + 40784) + 312);
  *(float32x2_t *)v354.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v354.f32[2] = (float)(a2[1].i32[0] + 1);
  v362.i64[0] = 0x3F0000003F000000;
  v362.i64[1] = 0x3F0000003F000000;
  v363 = vmulq_n_f32(vaddq_f32(v354, v362), v361);
  v564 = v363.i32[2];
  v563 = v363.i64[0];
  if (v360)
  {
    if ((v360 & 0x80000000) == 0)
      goto LABEL_201;
    v364 = v358 + 2896;
    v359 = -1;
    v365 = 2;
  }
  else
  {
    v364 = v358 + 2896;
    v365 = 0;
  }
  sub_223FFDF1C(v364, &v563, v359, v365, v361);
LABEL_201:
  v366 = ***a1;
  v367 = *(*a1)[5];
  v368 = *(_BYTE *)(v366 + 2241);
  v369 = *(char *)(v366 + 2246);
  v370 = *(float *)(*(_QWORD *)(v367 + 40784) + 312);
  *(float32x2_t *)v363.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v363.f32[2] = (float)(a2[1].i32[0] + 2);
  v371.i64[0] = 0x3F0000003F000000;
  v371.i64[1] = 0x3F0000003F000000;
  v372 = vmulq_n_f32(vaddq_f32(v363, v371), v370);
  v564 = v372.i32[2];
  v563 = v372.i64[0];
  if (v369)
  {
    if ((v369 & 0x80000000) == 0)
      goto LABEL_206;
    v373 = v367 + 2896;
    v368 = -1;
    v374 = 2;
  }
  else
  {
    v373 = v367 + 2896;
    v374 = 0;
  }
  sub_223FFDF1C(v373, &v563, v368, v374, v370);
LABEL_206:
  v375 = ***a1;
  v376 = *(*a1)[5];
  v377 = *(_BYTE *)(v375 + 2281);
  v378 = *(char *)(v375 + 2286);
  v379 = *(float *)(*(_QWORD *)(v376 + 40784) + 312);
  *(float32x2_t *)v372.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v372.f32[2] = (float)(a2[1].i32[0] + 3);
  v380.i64[0] = 0x3F0000003F000000;
  v380.i64[1] = 0x3F0000003F000000;
  v381 = vmulq_n_f32(vaddq_f32(v372, v380), v379);
  v564 = v381.i32[2];
  v563 = v381.i64[0];
  if (v378)
  {
    if ((v378 & 0x80000000) == 0)
      goto LABEL_211;
    v382 = v376 + 2896;
    v377 = -1;
    v383 = 2;
  }
  else
  {
    v382 = v376 + 2896;
    v383 = 0;
  }
  sub_223FFDF1C(v382, &v563, v377, v383, v379);
LABEL_211:
  v384 = ***a1;
  v385 = *(*a1)[5];
  v386 = *(_BYTE *)(v384 + 2321);
  v387 = *(char *)(v384 + 2326);
  v388 = *(float *)(*(_QWORD *)(v385 + 40784) + 312);
  *(float32x2_t *)v381.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v381.f32[2] = (float)(a2[1].i32[0] + 2);
  v389.i64[0] = 0x3F0000003F000000;
  v389.i64[1] = 0x3F0000003F000000;
  v390 = vmulq_n_f32(vaddq_f32(v381, v389), v388);
  v564 = v390.i32[2];
  v563 = v390.i64[0];
  if (v387)
  {
    if ((v387 & 0x80000000) == 0)
      goto LABEL_216;
    v391 = v385 + 2896;
    v386 = -1;
    v392 = 2;
  }
  else
  {
    v391 = v385 + 2896;
    v392 = 0;
  }
  sub_223FFDF1C(v391, &v563, v386, v392, v388);
LABEL_216:
  v393 = ***a1;
  v394 = *(*a1)[5];
  v395 = *(_BYTE *)(v393 + 2361);
  v396 = *(char *)(v393 + 2366);
  v397 = *(float *)(*(_QWORD *)(v394 + 40784) + 312);
  *(float32x2_t *)v390.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v390.f32[2] = (float)(a2[1].i32[0] + 3);
  v398.i64[0] = 0x3F0000003F000000;
  v398.i64[1] = 0x3F0000003F000000;
  v399 = vmulq_n_f32(vaddq_f32(v390, v398), v397);
  v564 = v399.i32[2];
  v563 = v399.i64[0];
  if (v396)
  {
    if ((v396 & 0x80000000) == 0)
      goto LABEL_221;
    v400 = v394 + 2896;
    v395 = -1;
    v401 = 2;
  }
  else
  {
    v400 = v394 + 2896;
    v401 = 0;
  }
  sub_223FFDF1C(v400, &v563, v395, v401, v397);
LABEL_221:
  v402 = ***a1;
  v403 = *(*a1)[5];
  v404 = *(_BYTE *)(v402 + 2401);
  v405 = *(char *)(v402 + 2406);
  v406 = *(float *)(*(_QWORD *)(v403 + 40784) + 312);
  *(float32x2_t *)v399.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v399.f32[2] = (float)(a2[1].i32[0] + 2);
  v407.i64[0] = 0x3F0000003F000000;
  v407.i64[1] = 0x3F0000003F000000;
  v408 = vmulq_n_f32(vaddq_f32(v399, v407), v406);
  v564 = v408.i32[2];
  v563 = v408.i64[0];
  if (v405)
  {
    if ((v405 & 0x80000000) == 0)
      goto LABEL_226;
    v409 = v403 + 2896;
    v404 = -1;
    v410 = 2;
  }
  else
  {
    v409 = v403 + 2896;
    v410 = 0;
  }
  sub_223FFDF1C(v409, &v563, v404, v410, v406);
LABEL_226:
  v411 = ***a1;
  v412 = *(*a1)[5];
  v413 = *(_BYTE *)(v411 + 2441);
  v414 = *(char *)(v411 + 2446);
  v415 = *(float *)(*(_QWORD *)(v412 + 40784) + 312);
  *(float32x2_t *)v408.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v408.f32[2] = (float)(a2[1].i32[0] + 3);
  v416.i64[0] = 0x3F0000003F000000;
  v416.i64[1] = 0x3F0000003F000000;
  v417 = vmulq_n_f32(vaddq_f32(v408, v416), v415);
  v564 = v417.i32[2];
  v563 = v417.i64[0];
  if (v414)
  {
    if ((v414 & 0x80000000) == 0)
      goto LABEL_231;
    v418 = v412 + 2896;
    v413 = -1;
    v419 = 2;
  }
  else
  {
    v418 = v412 + 2896;
    v419 = 0;
  }
  sub_223FFDF1C(v418, &v563, v413, v419, v415);
LABEL_231:
  v420 = ***a1;
  v421 = *(*a1)[5];
  v422 = *(_BYTE *)(v420 + 2481);
  v423 = *(char *)(v420 + 2486);
  v424 = *(float *)(*(_QWORD *)(v421 + 40784) + 312);
  *(float32x2_t *)v417.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v417.f32[2] = (float)(a2[1].i32[0] + 2);
  v425.i64[0] = 0x3F0000003F000000;
  v425.i64[1] = 0x3F0000003F000000;
  v426 = vmulq_n_f32(vaddq_f32(v417, v425), v424);
  v564 = v426.i32[2];
  v563 = v426.i64[0];
  if (v423)
  {
    if ((v423 & 0x80000000) == 0)
      goto LABEL_236;
    v427 = v421 + 2896;
    v422 = -1;
    v428 = 2;
  }
  else
  {
    v427 = v421 + 2896;
    v428 = 0;
  }
  sub_223FFDF1C(v427, &v563, v422, v428, v424);
LABEL_236:
  v429 = ***a1;
  v430 = *(*a1)[5];
  v431 = *(_BYTE *)(v429 + 2521);
  v432 = *(char *)(v429 + 2526);
  v433 = *(float *)(*(_QWORD *)(v430 + 40784) + 312);
  *(float32x2_t *)v426.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v426.f32[2] = (float)(a2[1].i32[0] + 3);
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  v435 = vmulq_n_f32(vaddq_f32(v426, v434), v433);
  v564 = v435.i32[2];
  v563 = v435.i64[0];
  if (v432)
  {
    if ((v432 & 0x80000000) == 0)
      goto LABEL_241;
    v436 = v430 + 2896;
    v431 = -1;
    v437 = 2;
  }
  else
  {
    v436 = v430 + 2896;
    v437 = 0;
  }
  sub_223FFDF1C(v436, &v563, v431, v437, v433);
LABEL_241:
  v438 = ***a1;
  v439 = *(*a1)[5];
  v440 = *(_BYTE *)(v438 + 2561);
  v441 = *(char *)(v438 + 2566);
  v442 = *(float *)(*(_QWORD *)(v439 + 40784) + 312);
  *(float32x2_t *)v435.f32 = vcvt_f32_s32(*a2);
  v435.f32[2] = (float)(a2[1].i32[0] + 4);
  v443.i64[0] = 0x3F0000003F000000;
  v443.i64[1] = 0x3F0000003F000000;
  v444 = vmulq_n_f32(vaddq_f32(v435, v443), v442);
  v564 = v444.i32[2];
  v563 = v444.i64[0];
  if (v441)
  {
    if ((v441 & 0x80000000) == 0)
      goto LABEL_246;
    v445 = v439 + 2896;
    v440 = -1;
    v446 = 2;
  }
  else
  {
    v445 = v439 + 2896;
    v446 = 0;
  }
  sub_223FFDF1C(v445, &v563, v440, v446, v442);
LABEL_246:
  v447 = ***a1;
  v448 = *(*a1)[5];
  v449 = *(_BYTE *)(v447 + 2601);
  v450 = *(char *)(v447 + 2606);
  v451 = *(float *)(*(_QWORD *)(v448 + 40784) + 312);
  *(float32x2_t *)v444.f32 = vcvt_f32_s32(*a2);
  v444.f32[2] = (float)(a2[1].i32[0] + 5);
  v452.i64[0] = 0x3F0000003F000000;
  v452.i64[1] = 0x3F0000003F000000;
  v453 = vmulq_n_f32(vaddq_f32(v444, v452), v451);
  v564 = v453.i32[2];
  v563 = v453.i64[0];
  if (v450)
  {
    if ((v450 & 0x80000000) == 0)
      goto LABEL_251;
    v454 = v448 + 2896;
    v449 = -1;
    v455 = 2;
  }
  else
  {
    v454 = v448 + 2896;
    v455 = 0;
  }
  sub_223FFDF1C(v454, &v563, v449, v455, v451);
LABEL_251:
  v456 = ***a1;
  v457 = *(*a1)[5];
  v458 = *(_BYTE *)(v456 + 2641);
  v459 = *(char *)(v456 + 2646);
  v460 = *(float *)(*(_QWORD *)(v457 + 40784) + 312);
  *(float32x2_t *)v453.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x100000000));
  v453.f32[2] = (float)(a2[1].i32[0] + 4);
  v461.i64[0] = 0x3F0000003F000000;
  v461.i64[1] = 0x3F0000003F000000;
  v462 = vmulq_n_f32(vaddq_f32(v453, v461), v460);
  v564 = v462.i32[2];
  v563 = v462.i64[0];
  if (v459)
  {
    if ((v459 & 0x80000000) == 0)
      goto LABEL_256;
    v463 = v457 + 2896;
    v458 = -1;
    v464 = 2;
  }
  else
  {
    v463 = v457 + 2896;
    v464 = 0;
  }
  sub_223FFDF1C(v463, &v563, v458, v464, v460);
LABEL_256:
  v465 = ***a1;
  v466 = *(*a1)[5];
  v467 = *(_BYTE *)(v465 + 2681);
  v468 = *(char *)(v465 + 2686);
  v469 = *(float *)(*(_QWORD *)(v466 + 40784) + 312);
  *(float32x2_t *)v462.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x100000000));
  v462.f32[2] = (float)(a2[1].i32[0] + 5);
  v470.i64[0] = 0x3F0000003F000000;
  v470.i64[1] = 0x3F0000003F000000;
  v471 = vmulq_n_f32(vaddq_f32(v462, v470), v469);
  v564 = v471.i32[2];
  v563 = v471.i64[0];
  if (v468)
  {
    if ((v468 & 0x80000000) == 0)
      goto LABEL_261;
    v472 = v466 + 2896;
    v467 = -1;
    v473 = 2;
  }
  else
  {
    v472 = v466 + 2896;
    v473 = 0;
  }
  sub_223FFDF1C(v472, &v563, v467, v473, v469);
LABEL_261:
  v474 = ***a1;
  v475 = *(*a1)[5];
  v476 = *(_BYTE *)(v474 + 2721);
  v471.i32[0] = a2->i32[0] + 1;
  v471.i32[1] = a2->i32[1];
  v477 = *(char *)(v474 + 2726);
  v478 = *(float *)(*(_QWORD *)(v475 + 40784) + 312);
  *(float32x2_t *)v471.f32 = vcvt_f32_s32(*(int32x2_t *)v471.f32);
  v471.f32[2] = (float)(a2[1].i32[0] + 4);
  v479.i64[0] = 0x3F0000003F000000;
  v479.i64[1] = 0x3F0000003F000000;
  v480 = vmulq_n_f32(vaddq_f32(v471, v479), v478);
  v564 = v480.i32[2];
  v563 = v480.i64[0];
  if (v477)
  {
    if ((v477 & 0x80000000) == 0)
      goto LABEL_266;
    v481 = v475 + 2896;
    v476 = -1;
    v482 = 2;
  }
  else
  {
    v481 = v475 + 2896;
    v482 = 0;
  }
  sub_223FFDF1C(v481, &v563, v476, v482, v478);
LABEL_266:
  v483 = ***a1;
  v484 = *(*a1)[5];
  v485 = *(_BYTE *)(v483 + 2761);
  v480.i32[0] = a2->i32[0] + 1;
  v480.i32[1] = a2->i32[1];
  v486 = *(char *)(v483 + 2766);
  v487 = *(float *)(*(_QWORD *)(v484 + 40784) + 312);
  *(float32x2_t *)v480.f32 = vcvt_f32_s32(*(int32x2_t *)v480.f32);
  v480.f32[2] = (float)(a2[1].i32[0] + 5);
  v488.i64[0] = 0x3F0000003F000000;
  v488.i64[1] = 0x3F0000003F000000;
  v489 = vmulq_n_f32(vaddq_f32(v480, v488), v487);
  v564 = v489.i32[2];
  v563 = v489.i64[0];
  if (v486)
  {
    if ((v486 & 0x80000000) == 0)
      goto LABEL_271;
    v490 = v484 + 2896;
    v485 = -1;
    v491 = 2;
  }
  else
  {
    v490 = v484 + 2896;
    v491 = 0;
  }
  sub_223FFDF1C(v490, &v563, v485, v491, v487);
LABEL_271:
  v492 = ***a1;
  v493 = *(*a1)[5];
  v494 = *(_BYTE *)(v492 + 2801);
  v495 = *(char *)(v492 + 2806);
  v496 = *(float *)(*(_QWORD *)(v493 + 40784) + 312);
  *(float32x2_t *)v489.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000001));
  v489.f32[2] = (float)(a2[1].i32[0] + 4);
  v497.i64[0] = 0x3F0000003F000000;
  v497.i64[1] = 0x3F0000003F000000;
  v498 = vmulq_n_f32(vaddq_f32(v489, v497), v496);
  v564 = v498.i32[2];
  v563 = v498.i64[0];
  if (v495)
  {
    if ((v495 & 0x80000000) == 0)
      goto LABEL_276;
    v499 = v493 + 2896;
    v494 = -1;
    v500 = 2;
  }
  else
  {
    v499 = v493 + 2896;
    v500 = 0;
  }
  sub_223FFDF1C(v499, &v563, v494, v500, v496);
LABEL_276:
  v501 = ***a1;
  v502 = *(*a1)[5];
  v503 = *(_BYTE *)(v501 + 2841);
  v504 = *(char *)(v501 + 2846);
  v505 = *(float *)(*(_QWORD *)(v502 + 40784) + 312);
  *(float32x2_t *)v498.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000001));
  v498.f32[2] = (float)(a2[1].i32[0] + 5);
  v506.i64[0] = 0x3F0000003F000000;
  v506.i64[1] = 0x3F0000003F000000;
  v507 = vmulq_n_f32(vaddq_f32(v498, v506), v505);
  v564 = v507.i32[2];
  v563 = v507.i64[0];
  if (v504)
  {
    if ((v504 & 0x80000000) == 0)
      goto LABEL_281;
    v508 = v502 + 2896;
    v503 = -1;
    v509 = 2;
  }
  else
  {
    v508 = v502 + 2896;
    v509 = 0;
  }
  sub_223FFDF1C(v508, &v563, v503, v509, v505);
LABEL_281:
  v510 = ***a1;
  v511 = *(*a1)[5];
  v512 = *(_BYTE *)(v510 + 2881);
  v513 = *(char *)(v510 + 2886);
  v514 = *(float *)(*(_QWORD *)(v511 + 40784) + 312);
  *(float32x2_t *)v507.f32 = vcvt_f32_s32(*a2);
  v507.f32[2] = (float)(a2[1].i32[0] + 6);
  v515.i64[0] = 0x3F0000003F000000;
  v515.i64[1] = 0x3F0000003F000000;
  v516 = vmulq_n_f32(vaddq_f32(v507, v515), v514);
  v564 = v516.i32[2];
  v563 = v516.i64[0];
  if (v513)
  {
    if ((v513 & 0x80000000) == 0)
      goto LABEL_286;
    v517 = v511 + 2896;
    v512 = -1;
    v518 = 2;
  }
  else
  {
    v517 = v511 + 2896;
    v518 = 0;
  }
  sub_223FFDF1C(v517, &v563, v512, v518, v514);
LABEL_286:
  v519 = ***a1;
  v520 = *(*a1)[5];
  v521 = *(_BYTE *)(v519 + 2921);
  v522 = *(char *)(v519 + 2926);
  v523 = *(float *)(*(_QWORD *)(v520 + 40784) + 312);
  *(float32x2_t *)v516.f32 = vcvt_f32_s32(*a2);
  v516.f32[2] = (float)(a2[1].i32[0] + 7);
  v524.i64[0] = 0x3F0000003F000000;
  v524.i64[1] = 0x3F0000003F000000;
  v525 = vmulq_n_f32(vaddq_f32(v516, v524), v523);
  v564 = v525.i32[2];
  v563 = v525.i64[0];
  if (v522)
  {
    if ((v522 & 0x80000000) == 0)
      goto LABEL_291;
    v526 = v520 + 2896;
    v521 = -1;
    v527 = 2;
  }
  else
  {
    v526 = v520 + 2896;
    v527 = 0;
  }
  sub_223FFDF1C(v526, &v563, v521, v527, v523);
LABEL_291:
  v528 = ***a1;
  v529 = *(*a1)[5];
  v530 = *(_BYTE *)(v528 + 2961);
  v531 = *(char *)(v528 + 2966);
  v532 = *(float *)(*(_QWORD *)(v529 + 40784) + 312);
  *(float32x2_t *)v525.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x100000000));
  v525.f32[2] = (float)(a2[1].i32[0] + 6);
  v533.i64[0] = 0x3F0000003F000000;
  v533.i64[1] = 0x3F0000003F000000;
  v534 = vmulq_n_f32(vaddq_f32(v525, v533), v532);
  v564 = v534.i32[2];
  v563 = v534.i64[0];
  if (v531)
  {
    if ((v531 & 0x80000000) == 0)
      goto LABEL_296;
    v535 = v529 + 2896;
    v530 = -1;
    v536 = 2;
  }
  else
  {
    v535 = v529 + 2896;
    v536 = 0;
  }
  sub_223FFDF1C(v535, &v563, v530, v536, v532);
LABEL_296:
  v537 = ***a1;
  v538 = *(*a1)[5];
  v539 = *(_BYTE *)(v537 + 3001);
  v540 = *(char *)(v537 + 3006);
  v541 = *(float *)(*(_QWORD *)(v538 + 40784) + 312);
  *(float32x2_t *)v534.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x100000000));
  v534.f32[2] = (float)(a2[1].i32[0] + 7);
  v542.i64[0] = 0x3F0000003F000000;
  v542.i64[1] = 0x3F0000003F000000;
  v543 = vmulq_n_f32(vaddq_f32(v534, v542), v541);
  v564 = v543.i32[2];
  v563 = v543.i64[0];
  if (v540)
  {
    if ((v540 & 0x80000000) == 0)
      goto LABEL_301;
    v544 = v538 + 2896;
    v539 = -1;
    v545 = 2;
  }
  else
  {
    v544 = v538 + 2896;
    v545 = 0;
  }
  sub_223FFDF1C(v544, &v563, v539, v545, v541);
LABEL_301:
  v546 = ***a1;
  v547 = *(*a1)[5];
  v548 = *(_BYTE *)(v546 + 3041);
  v543.i32[0] = a2->i32[0] + 1;
  v543.i32[1] = a2->i32[1];
  v549 = *(char *)(v546 + 3046);
  v550 = *(float *)(*(_QWORD *)(v547 + 40784) + 312);
  *(float32x2_t *)v543.f32 = vcvt_f32_s32(*(int32x2_t *)v543.f32);
  v543.f32[2] = (float)(a2[1].i32[0] + 6);
  v551.i64[0] = 0x3F0000003F000000;
  v551.i64[1] = 0x3F0000003F000000;
  v552 = vmulq_n_f32(vaddq_f32(v543, v551), v550);
  v564 = v552.i32[2];
  v563 = v552.i64[0];
  if (v549)
  {
    if ((v549 & 0x80000000) == 0)
      goto LABEL_306;
    v553 = v547 + 2896;
    v548 = -1;
    v554 = 2;
  }
  else
  {
    v553 = v547 + 2896;
    v554 = 0;
  }
  sub_223FFDF1C(v553, &v563, v548, v554, v550);
LABEL_306:
  v555 = ***a1;
  v556 = *(*a1)[5];
  v557 = *(_BYTE *)(v555 + 3081);
  v552.i32[0] = a2->i32[0] + 1;
  v552.i32[1] = a2->i32[1];
  v558 = *(char *)(v555 + 3086);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v556 + 40784) + 312);
  *(float32x2_t *)v552.f32 = vcvt_f32_s32(*(int32x2_t *)v552.f32);
  v552.f32[2] = (float)(a2[1].i32[0] + 7);
  v559.i64[0] = 0x3F0000003F000000;
  v559.i64[1] = 0x3F0000003F000000;
  v560 = vmulq_n_f32(vaddq_f32(v552, v559), *(float *)&a3);
  v564 = v560.i32[2];
  v563 = v560.i64[0];
  if (!v558)
  {
    v561 = v556 + 2896;
    v562 = 0;
    goto LABEL_310;
  }
  if (v558 < 0)
  {
    v561 = v556 + 2896;
    v557 = -1;
    v562 = 2;
LABEL_310:
    sub_223FFDF1C(v561, &v563, v557, v562, *(float *)&a3);
  }
  sub_22393FE58(a1, a2, a3, v560);
}

void sub_22393FE58(uint64_t ***a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  float v10;
  float32x4_t v11;
  float32x4_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  float v19;
  float32x4_t v20;
  float32x4_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  float v28;
  float32x4_t v29;
  float32x4_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  float v37;
  float32x4_t v38;
  float32x4_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  float v46;
  float32x4_t v47;
  float32x4_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int v54;
  float v55;
  float32x4_t v56;
  float32x4_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  int v63;
  float v64;
  float32x4_t v65;
  float32x4_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  int v81;
  float v82;
  float32x4_t v83;
  float32x4_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  int v90;
  float v91;
  float32x4_t v92;
  float32x4_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  int v99;
  float v100;
  float32x4_t v101;
  float32x4_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  int v108;
  float v109;
  float32x4_t v110;
  float32x4_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  int v117;
  float v118;
  float32x4_t v119;
  float32x4_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  int v126;
  float v127;
  float32x4_t v128;
  float32x4_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  int v135;
  float v136;
  float32x4_t v137;
  float32x4_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  int v153;
  float v154;
  float32x4_t v155;
  float32x4_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  int v162;
  float v163;
  float32x4_t v164;
  float32x4_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  int v171;
  float v172;
  float32x4_t v173;
  float32x4_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  int v180;
  float v181;
  float32x4_t v182;
  float32x4_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  int v189;
  float v190;
  float32x4_t v191;
  float32x4_t v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  int v198;
  float v199;
  float32x4_t v200;
  float32x4_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  int v207;
  float v208;
  float32x4_t v209;
  float32x4_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  int v225;
  float v226;
  float32x4_t v227;
  float32x4_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  char v232;
  int v233;
  float v234;
  float32x4_t v235;
  float32x4_t v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  char v240;
  int v241;
  float v242;
  float32x4_t v243;
  float32x4_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  char v248;
  int v249;
  float v250;
  float32x4_t v251;
  float32x4_t v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  char v256;
  int v257;
  float v258;
  float32x4_t v259;
  float32x4_t v260;
  uint64_t v261;
  int v262;
  uint64_t v263;
  char v264;
  int v265;
  float v266;
  float32x4_t v267;
  float32x4_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  char v272;
  int v273;
  float v274;
  float32x4_t v275;
  float32x4_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  char v280;
  int v281;
  float v282;
  float32x4_t v283;
  float32x4_t v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  char v288;
  int v289;
  float v290;
  float32x4_t v291;
  float32x4_t v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  char v296;
  int v297;
  float v298;
  float32x4_t v299;
  float32x4_t v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  char v304;
  int v305;
  float v306;
  float32x4_t v307;
  float32x4_t v308;
  uint64_t v309;
  int v310;
  uint64_t v311;
  char v312;
  int v313;
  float v314;
  float32x4_t v315;
  float32x4_t v316;
  uint64_t v317;
  int v318;
  uint64_t v319;
  char v320;
  int v321;
  float v322;
  float32x4_t v323;
  float32x4_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  char v328;
  int v329;
  float v330;
  float32x4_t v331;
  float32x4_t v332;
  uint64_t v333;
  int v334;
  uint64_t v335;
  char v336;
  int v337;
  float v338;
  float32x4_t v339;
  float32x4_t v340;
  uint64_t v341;
  int v342;
  uint64_t v343;
  char v344;
  int v345;
  float v346;
  float32x4_t v347;
  float32x4_t v348;
  uint64_t v349;
  int v350;
  uint64_t v351;
  char v352;
  int v353;
  float v354;
  float32x4_t v355;
  float32x4_t v356;
  uint64_t v357;
  int v358;
  uint64_t v359;
  char v360;
  int v361;
  float v362;
  float32x4_t v363;
  float32x4_t v364;
  uint64_t v365;
  int v366;
  uint64_t v367;
  char v368;
  int v369;
  float v370;
  float32x4_t v371;
  float32x4_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  char v376;
  int v377;
  float v378;
  float32x4_t v379;
  float32x4_t v380;
  uint64_t v381;
  int v382;
  uint64_t v383;
  char v384;
  int v385;
  float v386;
  float32x4_t v387;
  float32x4_t v388;
  uint64_t v389;
  int v390;
  uint64_t v391;
  char v392;
  int v393;
  float v394;
  float32x4_t v395;
  float32x4_t v396;
  uint64_t v397;
  int v398;
  uint64_t v399;
  char v400;
  int v401;
  float v402;
  float32x4_t v403;
  float32x4_t v404;
  uint64_t v405;
  int v406;
  uint64_t v407;
  char v408;
  int v409;
  float v410;
  float32x4_t v411;
  float32x4_t v412;
  uint64_t v413;
  int v414;
  uint64_t v415;
  char v416;
  int v417;
  float v418;
  float32x4_t v419;
  float32x4_t v420;
  uint64_t v421;
  int v422;
  uint64_t v423;
  char v424;
  int v425;
  float v426;
  float32x4_t v427;
  float32x4_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  char v432;
  int v433;
  float v434;
  float32x4_t v435;
  float32x4_t v436;
  uint64_t v437;
  int v438;
  uint64_t v439;
  char v440;
  int v441;
  float v442;
  float32x4_t v443;
  float32x4_t v444;
  uint64_t v445;
  int v446;
  uint64_t v447;
  char v448;
  int v449;
  float v450;
  float32x4_t v451;
  float32x4_t v452;
  uint64_t v453;
  int v454;
  uint64_t v455;
  char v456;
  int v457;
  float v458;
  float32x4_t v459;
  float32x4_t v460;
  uint64_t v461;
  int v462;
  uint64_t v463;
  char v464;
  int v465;
  float v466;
  float32x4_t v467;
  float32x4_t v468;
  uint64_t v469;
  int v470;
  uint64_t v471;
  char v472;
  int v473;
  float v474;
  float32x4_t v475;
  float32x4_t v476;
  uint64_t v477;
  int v478;
  uint64_t v479;
  char v480;
  int v481;
  float v482;
  float32x4_t v483;
  float32x4_t v484;
  uint64_t v485;
  int v486;
  uint64_t v487;
  char v488;
  int v489;
  float v490;
  float32x4_t v491;
  float32x4_t v492;
  uint64_t v493;
  int v494;
  uint64_t v495;
  char v496;
  int v497;
  float v498;
  float32x4_t v499;
  float32x4_t v500;
  uint64_t v501;
  int v502;
  uint64_t v503;
  char v504;
  int v505;
  float v506;
  float32x4_t v507;
  float32x4_t v508;
  uint64_t v509;
  int v510;
  uint64_t v511;
  char v512;
  int v513;
  float v514;
  float32x4_t v515;
  float32x4_t v516;
  uint64_t v517;
  int v518;
  uint64_t v519;
  char v520;
  int v521;
  float32x4_t v522;
  float32x4_t v523;
  uint64_t v524;
  int v525;
  uint64_t v526;
  __int32 v527;

  v6 = ***a1;
  v7 = *(*a1)[5];
  v8 = *(_BYTE *)(v6 + 3121);
  v9 = *(char *)(v6 + 3126);
  v10 = *(float *)(*(_QWORD *)(v7 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000001));
  a4.f32[2] = (float)(a2[1].i32[0] + 6);
  v11.i64[0] = 0x3F0000003F000000;
  v11.i64[1] = 0x3F0000003F000000;
  v12 = vmulq_n_f32(vaddq_f32(a4, v11), v10);
  v527 = v12.i32[2];
  v526 = v12.i64[0];
  if (v9)
  {
    if ((v9 & 0x80000000) == 0)
      goto LABEL_6;
    v13 = v7 + 2896;
    v8 = -1;
    v14 = 2;
  }
  else
  {
    v13 = v7 + 2896;
    v14 = 0;
  }
  sub_223FFDF1C(v13, &v526, v8, v14, v10);
LABEL_6:
  v15 = ***a1;
  v16 = *(*a1)[5];
  v17 = *(_BYTE *)(v15 + 3161);
  v18 = *(char *)(v15 + 3166);
  v19 = *(float *)(*(_QWORD *)(v16 + 40784) + 312);
  *(float32x2_t *)v12.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000001));
  v12.f32[2] = (float)(a2[1].i32[0] + 7);
  v20.i64[0] = 0x3F0000003F000000;
  v20.i64[1] = 0x3F0000003F000000;
  v21 = vmulq_n_f32(vaddq_f32(v12, v20), v19);
  v527 = v21.i32[2];
  v526 = v21.i64[0];
  if (v18)
  {
    if ((v18 & 0x80000000) == 0)
      goto LABEL_11;
    v22 = v16 + 2896;
    v17 = -1;
    v23 = 2;
  }
  else
  {
    v22 = v16 + 2896;
    v23 = 0;
  }
  sub_223FFDF1C(v22, &v526, v17, v23, v19);
LABEL_11:
  v24 = ***a1;
  v25 = *(*a1)[5];
  v26 = *(_BYTE *)(v24 + 3201);
  v27 = *(char *)(v24 + 3206);
  v28 = *(float *)(*(_QWORD *)(v25 + 40784) + 312);
  *(float32x2_t *)v21.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v21.f32[2] = (float)(a2[1].i32[0] + 4);
  v29.i64[0] = 0x3F0000003F000000;
  v29.i64[1] = 0x3F0000003F000000;
  v30 = vmulq_n_f32(vaddq_f32(v21, v29), v28);
  v527 = v30.i32[2];
  v526 = v30.i64[0];
  if (v27)
  {
    if ((v27 & 0x80000000) == 0)
      goto LABEL_16;
    v31 = v25 + 2896;
    v26 = -1;
    v32 = 2;
  }
  else
  {
    v31 = v25 + 2896;
    v32 = 0;
  }
  sub_223FFDF1C(v31, &v526, v26, v32, v28);
LABEL_16:
  v33 = ***a1;
  v34 = *(*a1)[5];
  v35 = *(_BYTE *)(v33 + 3241);
  v36 = *(char *)(v33 + 3246);
  v37 = *(float *)(*(_QWORD *)(v34 + 40784) + 312);
  *(float32x2_t *)v30.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v30.f32[2] = (float)(a2[1].i32[0] + 5);
  v38.i64[0] = 0x3F0000003F000000;
  v38.i64[1] = 0x3F0000003F000000;
  v39 = vmulq_n_f32(vaddq_f32(v30, v38), v37);
  v527 = v39.i32[2];
  v526 = v39.i64[0];
  if (v36)
  {
    if ((v36 & 0x80000000) == 0)
      goto LABEL_21;
    v40 = v34 + 2896;
    v35 = -1;
    v41 = 2;
  }
  else
  {
    v40 = v34 + 2896;
    v41 = 0;
  }
  sub_223FFDF1C(v40, &v526, v35, v41, v37);
LABEL_21:
  v42 = ***a1;
  v43 = *(*a1)[5];
  v44 = *(_BYTE *)(v42 + 3281);
  v45 = *(char *)(v42 + 3286);
  v46 = *(float *)(*(_QWORD *)(v43 + 40784) + 312);
  *(float32x2_t *)v39.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v39.f32[2] = (float)(a2[1].i32[0] + 4);
  v47.i64[0] = 0x3F0000003F000000;
  v47.i64[1] = 0x3F0000003F000000;
  v48 = vmulq_n_f32(vaddq_f32(v39, v47), v46);
  v527 = v48.i32[2];
  v526 = v48.i64[0];
  if (v45)
  {
    if ((v45 & 0x80000000) == 0)
      goto LABEL_26;
    v49 = v43 + 2896;
    v44 = -1;
    v50 = 2;
  }
  else
  {
    v49 = v43 + 2896;
    v50 = 0;
  }
  sub_223FFDF1C(v49, &v526, v44, v50, v46);
LABEL_26:
  v51 = ***a1;
  v52 = *(*a1)[5];
  v53 = *(_BYTE *)(v51 + 3321);
  v54 = *(char *)(v51 + 3326);
  v55 = *(float *)(*(_QWORD *)(v52 + 40784) + 312);
  *(float32x2_t *)v48.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v48.f32[2] = (float)(a2[1].i32[0] + 5);
  v56.i64[0] = 0x3F0000003F000000;
  v56.i64[1] = 0x3F0000003F000000;
  v57 = vmulq_n_f32(vaddq_f32(v48, v56), v55);
  v527 = v57.i32[2];
  v526 = v57.i64[0];
  if (v54)
  {
    if ((v54 & 0x80000000) == 0)
      goto LABEL_31;
    v58 = v52 + 2896;
    v53 = -1;
    v59 = 2;
  }
  else
  {
    v58 = v52 + 2896;
    v59 = 0;
  }
  sub_223FFDF1C(v58, &v526, v53, v59, v55);
LABEL_31:
  v60 = ***a1;
  v61 = *(*a1)[5];
  v62 = *(_BYTE *)(v60 + 3361);
  v63 = *(char *)(v60 + 3366);
  v64 = *(float *)(*(_QWORD *)(v61 + 40784) + 312);
  *(float32x2_t *)v57.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v57.f32[2] = (float)(a2[1].i32[0] + 4);
  v65.i64[0] = 0x3F0000003F000000;
  v65.i64[1] = 0x3F0000003F000000;
  v66 = vmulq_n_f32(vaddq_f32(v57, v65), v64);
  v527 = v66.i32[2];
  v526 = v66.i64[0];
  if (v63)
  {
    if ((v63 & 0x80000000) == 0)
      goto LABEL_36;
    v67 = v61 + 2896;
    v62 = -1;
    v68 = 2;
  }
  else
  {
    v67 = v61 + 2896;
    v68 = 0;
  }
  sub_223FFDF1C(v67, &v526, v62, v68, v64);
LABEL_36:
  v69 = ***a1;
  v70 = *(*a1)[5];
  v71 = *(_BYTE *)(v69 + 3401);
  v72 = *(char *)(v69 + 3406);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v66.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v66.f32[2] = (float)(a2[1].i32[0] + 5);
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v66, v74), v73);
  v527 = v75.i32[2];
  v526 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_41;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v526, v71, v77, v73);
LABEL_41:
  v78 = ***a1;
  v79 = *(*a1)[5];
  v80 = *(_BYTE *)(v78 + 3441);
  v81 = *(char *)(v78 + 3446);
  v82 = *(float *)(*(_QWORD *)(v79 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v75.f32[2] = (float)(a2[1].i32[0] + 4);
  v83.i64[0] = 0x3F0000003F000000;
  v83.i64[1] = 0x3F0000003F000000;
  v84 = vmulq_n_f32(vaddq_f32(v75, v83), v82);
  v527 = v84.i32[2];
  v526 = v84.i64[0];
  if (v81)
  {
    if ((v81 & 0x80000000) == 0)
      goto LABEL_46;
    v85 = v79 + 2896;
    v80 = -1;
    v86 = 2;
  }
  else
  {
    v85 = v79 + 2896;
    v86 = 0;
  }
  sub_223FFDF1C(v85, &v526, v80, v86, v82);
LABEL_46:
  v87 = ***a1;
  v88 = *(*a1)[5];
  v89 = *(_BYTE *)(v87 + 3481);
  v90 = *(char *)(v87 + 3486);
  v91 = *(float *)(*(_QWORD *)(v88 + 40784) + 312);
  *(float32x2_t *)v84.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v84.f32[2] = (float)(a2[1].i32[0] + 5);
  v92.i64[0] = 0x3F0000003F000000;
  v92.i64[1] = 0x3F0000003F000000;
  v93 = vmulq_n_f32(vaddq_f32(v84, v92), v91);
  v527 = v93.i32[2];
  v526 = v93.i64[0];
  if (v90)
  {
    if ((v90 & 0x80000000) == 0)
      goto LABEL_51;
    v94 = v88 + 2896;
    v89 = -1;
    v95 = 2;
  }
  else
  {
    v94 = v88 + 2896;
    v95 = 0;
  }
  sub_223FFDF1C(v94, &v526, v89, v95, v91);
LABEL_51:
  v96 = ***a1;
  v97 = *(*a1)[5];
  v98 = *(_BYTE *)(v96 + 3521);
  v99 = *(char *)(v96 + 3526);
  v100 = *(float *)(*(_QWORD *)(v97 + 40784) + 312);
  *(float32x2_t *)v93.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v93.f32[2] = (float)(a2[1].i32[0] + 6);
  v101.i64[0] = 0x3F0000003F000000;
  v101.i64[1] = 0x3F0000003F000000;
  v102 = vmulq_n_f32(vaddq_f32(v93, v101), v100);
  v527 = v102.i32[2];
  v526 = v102.i64[0];
  if (v99)
  {
    if ((v99 & 0x80000000) == 0)
      goto LABEL_56;
    v103 = v97 + 2896;
    v98 = -1;
    v104 = 2;
  }
  else
  {
    v103 = v97 + 2896;
    v104 = 0;
  }
  sub_223FFDF1C(v103, &v526, v98, v104, v100);
LABEL_56:
  v105 = ***a1;
  v106 = *(*a1)[5];
  v107 = *(_BYTE *)(v105 + 3561);
  v108 = *(char *)(v105 + 3566);
  v109 = *(float *)(*(_QWORD *)(v106 + 40784) + 312);
  *(float32x2_t *)v102.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x200000000));
  v102.f32[2] = (float)(a2[1].i32[0] + 7);
  v110.i64[0] = 0x3F0000003F000000;
  v110.i64[1] = 0x3F0000003F000000;
  v111 = vmulq_n_f32(vaddq_f32(v102, v110), v109);
  v527 = v111.i32[2];
  v526 = v111.i64[0];
  if (v108)
  {
    if ((v108 & 0x80000000) == 0)
      goto LABEL_61;
    v112 = v106 + 2896;
    v107 = -1;
    v113 = 2;
  }
  else
  {
    v112 = v106 + 2896;
    v113 = 0;
  }
  sub_223FFDF1C(v112, &v526, v107, v113, v109);
LABEL_61:
  v114 = ***a1;
  v115 = *(*a1)[5];
  v116 = *(_BYTE *)(v114 + 3601);
  v117 = *(char *)(v114 + 3606);
  v118 = *(float *)(*(_QWORD *)(v115 + 40784) + 312);
  *(float32x2_t *)v111.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v111.f32[2] = (float)(a2[1].i32[0] + 6);
  v119.i64[0] = 0x3F0000003F000000;
  v119.i64[1] = 0x3F0000003F000000;
  v120 = vmulq_n_f32(vaddq_f32(v111, v119), v118);
  v527 = v120.i32[2];
  v526 = v120.i64[0];
  if (v117)
  {
    if ((v117 & 0x80000000) == 0)
      goto LABEL_66;
    v121 = v115 + 2896;
    v116 = -1;
    v122 = 2;
  }
  else
  {
    v121 = v115 + 2896;
    v122 = 0;
  }
  sub_223FFDF1C(v121, &v526, v116, v122, v118);
LABEL_66:
  v123 = ***a1;
  v124 = *(*a1)[5];
  v125 = *(_BYTE *)(v123 + 3641);
  v126 = *(char *)(v123 + 3646);
  v127 = *(float *)(*(_QWORD *)(v124 + 40784) + 312);
  *(float32x2_t *)v120.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x300000000));
  v120.f32[2] = (float)(a2[1].i32[0] + 7);
  v128.i64[0] = 0x3F0000003F000000;
  v128.i64[1] = 0x3F0000003F000000;
  v129 = vmulq_n_f32(vaddq_f32(v120, v128), v127);
  v527 = v129.i32[2];
  v526 = v129.i64[0];
  if (v126)
  {
    if ((v126 & 0x80000000) == 0)
      goto LABEL_71;
    v130 = v124 + 2896;
    v125 = -1;
    v131 = 2;
  }
  else
  {
    v130 = v124 + 2896;
    v131 = 0;
  }
  sub_223FFDF1C(v130, &v526, v125, v131, v127);
LABEL_71:
  v132 = ***a1;
  v133 = *(*a1)[5];
  v134 = *(_BYTE *)(v132 + 3681);
  v135 = *(char *)(v132 + 3686);
  v136 = *(float *)(*(_QWORD *)(v133 + 40784) + 312);
  *(float32x2_t *)v129.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v129.f32[2] = (float)(a2[1].i32[0] + 6);
  v137.i64[0] = 0x3F0000003F000000;
  v137.i64[1] = 0x3F0000003F000000;
  v138 = vmulq_n_f32(vaddq_f32(v129, v137), v136);
  v527 = v138.i32[2];
  v526 = v138.i64[0];
  if (v135)
  {
    if ((v135 & 0x80000000) == 0)
      goto LABEL_76;
    v139 = v133 + 2896;
    v134 = -1;
    v140 = 2;
  }
  else
  {
    v139 = v133 + 2896;
    v140 = 0;
  }
  sub_223FFDF1C(v139, &v526, v134, v140, v136);
LABEL_76:
  v141 = ***a1;
  v142 = *(*a1)[5];
  v143 = *(_BYTE *)(v141 + 3721);
  v144 = *(char *)(v141 + 3726);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v138.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000001));
  v138.f32[2] = (float)(a2[1].i32[0] + 7);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v138, v146), v145);
  v527 = v147.i32[2];
  v526 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_81;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v526, v143, v149, v145);
LABEL_81:
  v150 = ***a1;
  v151 = *(*a1)[5];
  v152 = *(_BYTE *)(v150 + 3761);
  v153 = *(char *)(v150 + 3766);
  v154 = *(float *)(*(_QWORD *)(v151 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v147.f32[2] = (float)(a2[1].i32[0] + 6);
  v155.i64[0] = 0x3F0000003F000000;
  v155.i64[1] = 0x3F0000003F000000;
  v156 = vmulq_n_f32(vaddq_f32(v147, v155), v154);
  v527 = v156.i32[2];
  v526 = v156.i64[0];
  if (v153)
  {
    if ((v153 & 0x80000000) == 0)
      goto LABEL_86;
    v157 = v151 + 2896;
    v152 = -1;
    v158 = 2;
  }
  else
  {
    v157 = v151 + 2896;
    v158 = 0;
  }
  sub_223FFDF1C(v157, &v526, v152, v158, v154);
LABEL_86:
  v159 = ***a1;
  v160 = *(*a1)[5];
  v161 = *(_BYTE *)(v159 + 3801);
  v162 = *(char *)(v159 + 3806);
  v163 = *(float *)(*(_QWORD *)(v160 + 40784) + 312);
  *(float32x2_t *)v156.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000001));
  v156.f32[2] = (float)(a2[1].i32[0] + 7);
  v164.i64[0] = 0x3F0000003F000000;
  v164.i64[1] = 0x3F0000003F000000;
  v165 = vmulq_n_f32(vaddq_f32(v156, v164), v163);
  v527 = v165.i32[2];
  v526 = v165.i64[0];
  if (v162)
  {
    if ((v162 & 0x80000000) == 0)
      goto LABEL_91;
    v166 = v160 + 2896;
    v161 = -1;
    v167 = 2;
  }
  else
  {
    v166 = v160 + 2896;
    v167 = 0;
  }
  sub_223FFDF1C(v166, &v526, v161, v167, v163);
LABEL_91:
  v168 = ***a1;
  v169 = *(*a1)[5];
  v170 = *(_BYTE *)(v168 + 3841);
  v165.i32[0] = a2->i32[0] + 2;
  v165.i32[1] = a2->i32[1];
  v171 = *(char *)(v168 + 3846);
  v172 = *(float *)(*(_QWORD *)(v169 + 40784) + 312);
  *(float32x2_t *)v165.f32 = vcvt_f32_s32(*(int32x2_t *)v165.f32);
  v165.f32[2] = (float)(a2[1].i32[0] + 4);
  v173.i64[0] = 0x3F0000003F000000;
  v173.i64[1] = 0x3F0000003F000000;
  v174 = vmulq_n_f32(vaddq_f32(v165, v173), v172);
  v527 = v174.i32[2];
  v526 = v174.i64[0];
  if (v171)
  {
    if ((v171 & 0x80000000) == 0)
      goto LABEL_96;
    v175 = v169 + 2896;
    v170 = -1;
    v176 = 2;
  }
  else
  {
    v175 = v169 + 2896;
    v176 = 0;
  }
  sub_223FFDF1C(v175, &v526, v170, v176, v172);
LABEL_96:
  v177 = ***a1;
  v178 = *(*a1)[5];
  v179 = *(_BYTE *)(v177 + 3881);
  v174.i32[0] = a2->i32[0] + 2;
  v174.i32[1] = a2->i32[1];
  v180 = *(char *)(v177 + 3886);
  v181 = *(float *)(*(_QWORD *)(v178 + 40784) + 312);
  *(float32x2_t *)v174.f32 = vcvt_f32_s32(*(int32x2_t *)v174.f32);
  v174.f32[2] = (float)(a2[1].i32[0] + 5);
  v182.i64[0] = 0x3F0000003F000000;
  v182.i64[1] = 0x3F0000003F000000;
  v183 = vmulq_n_f32(vaddq_f32(v174, v182), v181);
  v527 = v183.i32[2];
  v526 = v183.i64[0];
  if (v180)
  {
    if ((v180 & 0x80000000) == 0)
      goto LABEL_101;
    v184 = v178 + 2896;
    v179 = -1;
    v185 = 2;
  }
  else
  {
    v184 = v178 + 2896;
    v185 = 0;
  }
  sub_223FFDF1C(v184, &v526, v179, v185, v181);
LABEL_101:
  v186 = ***a1;
  v187 = *(*a1)[5];
  v188 = *(_BYTE *)(v186 + 3921);
  v189 = *(char *)(v186 + 3926);
  v190 = *(float *)(*(_QWORD *)(v187 + 40784) + 312);
  *(float32x2_t *)v183.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v183.f32[2] = (float)(a2[1].i32[0] + 4);
  v191.i64[0] = 0x3F0000003F000000;
  v191.i64[1] = 0x3F0000003F000000;
  v192 = vmulq_n_f32(vaddq_f32(v183, v191), v190);
  v527 = v192.i32[2];
  v526 = v192.i64[0];
  if (v189)
  {
    if ((v189 & 0x80000000) == 0)
      goto LABEL_106;
    v193 = v187 + 2896;
    v188 = -1;
    v194 = 2;
  }
  else
  {
    v193 = v187 + 2896;
    v194 = 0;
  }
  sub_223FFDF1C(v193, &v526, v188, v194, v190);
LABEL_106:
  v195 = ***a1;
  v196 = *(*a1)[5];
  v197 = *(_BYTE *)(v195 + 3961);
  v198 = *(char *)(v195 + 3966);
  v199 = *(float *)(*(_QWORD *)(v196 + 40784) + 312);
  *(float32x2_t *)v192.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v192.f32[2] = (float)(a2[1].i32[0] + 5);
  v200.i64[0] = 0x3F0000003F000000;
  v200.i64[1] = 0x3F0000003F000000;
  v201 = vmulq_n_f32(vaddq_f32(v192, v200), v199);
  v527 = v201.i32[2];
  v526 = v201.i64[0];
  if (v198)
  {
    if ((v198 & 0x80000000) == 0)
      goto LABEL_111;
    v202 = v196 + 2896;
    v197 = -1;
    v203 = 2;
  }
  else
  {
    v202 = v196 + 2896;
    v203 = 0;
  }
  sub_223FFDF1C(v202, &v526, v197, v203, v199);
LABEL_111:
  v204 = ***a1;
  v205 = *(*a1)[5];
  v206 = *(_BYTE *)(v204 + 4001);
  v201.i32[0] = a2->i32[0] + 3;
  v201.i32[1] = a2->i32[1];
  v207 = *(char *)(v204 + 4006);
  v208 = *(float *)(*(_QWORD *)(v205 + 40784) + 312);
  *(float32x2_t *)v201.f32 = vcvt_f32_s32(*(int32x2_t *)v201.f32);
  v201.f32[2] = (float)(a2[1].i32[0] + 4);
  v209.i64[0] = 0x3F0000003F000000;
  v209.i64[1] = 0x3F0000003F000000;
  v210 = vmulq_n_f32(vaddq_f32(v201, v209), v208);
  v527 = v210.i32[2];
  v526 = v210.i64[0];
  if (v207)
  {
    if ((v207 & 0x80000000) == 0)
      goto LABEL_116;
    v211 = v205 + 2896;
    v206 = -1;
    v212 = 2;
  }
  else
  {
    v211 = v205 + 2896;
    v212 = 0;
  }
  sub_223FFDF1C(v211, &v526, v206, v212, v208);
LABEL_116:
  v213 = ***a1;
  v214 = *(*a1)[5];
  v215 = *(_BYTE *)(v213 + 4041);
  v210.i32[0] = a2->i32[0] + 3;
  v210.i32[1] = a2->i32[1];
  v216 = *(char *)(v213 + 4046);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v210.f32 = vcvt_f32_s32(*(int32x2_t *)v210.f32);
  v210.f32[2] = (float)(a2[1].i32[0] + 5);
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v210, v218), v217);
  v527 = v219.i32[2];
  v526 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_121;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v526, v215, v221, v217);
LABEL_121:
  v222 = ***a1;
  v223 = *(*a1)[5];
  v224 = *(_BYTE *)(v222 + 4081);
  v225 = *(char *)(v222 + 4086);
  v226 = *(float *)(*(_QWORD *)(v223 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v219.f32[2] = (float)(a2[1].i32[0] + 4);
  v227.i64[0] = 0x3F0000003F000000;
  v227.i64[1] = 0x3F0000003F000000;
  v228 = vmulq_n_f32(vaddq_f32(v219, v227), v226);
  v527 = v228.i32[2];
  v526 = v228.i64[0];
  if (v225)
  {
    if ((v225 & 0x80000000) == 0)
      goto LABEL_126;
    v229 = v223 + 2896;
    v224 = -1;
    v230 = 2;
  }
  else
  {
    v229 = v223 + 2896;
    v230 = 0;
  }
  sub_223FFDF1C(v229, &v526, v224, v230, v226);
LABEL_126:
  v231 = *(*a1)[5];
  v232 = *(_BYTE *)(***a1 + 4121);
  v233 = *(char *)(***a1 + 4126);
  v234 = *(float *)(*(_QWORD *)(v231 + 40784) + 312);
  *(float32x2_t *)v228.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v228.f32[2] = (float)(a2[1].i32[0] + 5);
  v235.i64[0] = 0x3F0000003F000000;
  v235.i64[1] = 0x3F0000003F000000;
  v236 = vmulq_n_f32(vaddq_f32(v228, v235), v234);
  v527 = v236.i32[2];
  v526 = v236.i64[0];
  if (v233)
  {
    if ((v233 & 0x80000000) == 0)
      goto LABEL_131;
    v237 = v231 + 2896;
    v232 = -1;
    v238 = 2;
  }
  else
  {
    v237 = v231 + 2896;
    v238 = 0;
  }
  sub_223FFDF1C(v237, &v526, v232, v238, v234);
LABEL_131:
  v239 = *(*a1)[5];
  v240 = *(_BYTE *)(***a1 + 4161);
  v236.i32[0] = a2->i32[0] + 2;
  v236.i32[1] = a2->i32[1];
  v241 = *(char *)(***a1 + 4166);
  v242 = *(float *)(*(_QWORD *)(v239 + 40784) + 312);
  *(float32x2_t *)v236.f32 = vcvt_f32_s32(*(int32x2_t *)v236.f32);
  v236.f32[2] = (float)(a2[1].i32[0] + 6);
  v243.i64[0] = 0x3F0000003F000000;
  v243.i64[1] = 0x3F0000003F000000;
  v244 = vmulq_n_f32(vaddq_f32(v236, v243), v242);
  v527 = v244.i32[2];
  v526 = v244.i64[0];
  if (v241)
  {
    if ((v241 & 0x80000000) == 0)
      goto LABEL_136;
    v245 = v239 + 2896;
    v240 = -1;
    v246 = 2;
  }
  else
  {
    v245 = v239 + 2896;
    v246 = 0;
  }
  sub_223FFDF1C(v245, &v526, v240, v246, v242);
LABEL_136:
  v247 = *(*a1)[5];
  v248 = *(_BYTE *)(***a1 + 4201);
  v244.i32[0] = a2->i32[0] + 2;
  v244.i32[1] = a2->i32[1];
  v249 = *(char *)(***a1 + 4206);
  v250 = *(float *)(*(_QWORD *)(v247 + 40784) + 312);
  *(float32x2_t *)v244.f32 = vcvt_f32_s32(*(int32x2_t *)v244.f32);
  v244.f32[2] = (float)(a2[1].i32[0] + 7);
  v251.i64[0] = 0x3F0000003F000000;
  v251.i64[1] = 0x3F0000003F000000;
  v252 = vmulq_n_f32(vaddq_f32(v244, v251), v250);
  v527 = v252.i32[2];
  v526 = v252.i64[0];
  if (v249)
  {
    if ((v249 & 0x80000000) == 0)
      goto LABEL_141;
    v253 = v247 + 2896;
    v248 = -1;
    v254 = 2;
  }
  else
  {
    v253 = v247 + 2896;
    v254 = 0;
  }
  sub_223FFDF1C(v253, &v526, v248, v254, v250);
LABEL_141:
  v255 = *(*a1)[5];
  v256 = *(_BYTE *)(***a1 + 4241);
  v257 = *(char *)(***a1 + 4246);
  v258 = *(float *)(*(_QWORD *)(v255 + 40784) + 312);
  *(float32x2_t *)v252.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v252.f32[2] = (float)(a2[1].i32[0] + 6);
  v259.i64[0] = 0x3F0000003F000000;
  v259.i64[1] = 0x3F0000003F000000;
  v260 = vmulq_n_f32(vaddq_f32(v252, v259), v258);
  v527 = v260.i32[2];
  v526 = v260.i64[0];
  if (v257)
  {
    if ((v257 & 0x80000000) == 0)
      goto LABEL_146;
    v261 = v255 + 2896;
    v256 = -1;
    v262 = 2;
  }
  else
  {
    v261 = v255 + 2896;
    v262 = 0;
  }
  sub_223FFDF1C(v261, &v526, v256, v262, v258);
LABEL_146:
  v263 = *(*a1)[5];
  v264 = *(_BYTE *)(***a1 + 4281);
  v265 = *(char *)(***a1 + 4286);
  v266 = *(float *)(*(_QWORD *)(v263 + 40784) + 312);
  *(float32x2_t *)v260.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000002));
  v260.f32[2] = (float)(a2[1].i32[0] + 7);
  v267.i64[0] = 0x3F0000003F000000;
  v267.i64[1] = 0x3F0000003F000000;
  v268 = vmulq_n_f32(vaddq_f32(v260, v267), v266);
  v527 = v268.i32[2];
  v526 = v268.i64[0];
  if (v265)
  {
    if ((v265 & 0x80000000) == 0)
      goto LABEL_151;
    v269 = v263 + 2896;
    v264 = -1;
    v270 = 2;
  }
  else
  {
    v269 = v263 + 2896;
    v270 = 0;
  }
  sub_223FFDF1C(v269, &v526, v264, v270, v266);
LABEL_151:
  v271 = *(*a1)[5];
  v272 = *(_BYTE *)(***a1 + 4321);
  v268.i32[0] = a2->i32[0] + 3;
  v268.i32[1] = a2->i32[1];
  v273 = *(char *)(***a1 + 4326);
  v274 = *(float *)(*(_QWORD *)(v271 + 40784) + 312);
  *(float32x2_t *)v268.f32 = vcvt_f32_s32(*(int32x2_t *)v268.f32);
  v268.f32[2] = (float)(a2[1].i32[0] + 6);
  v275.i64[0] = 0x3F0000003F000000;
  v275.i64[1] = 0x3F0000003F000000;
  v276 = vmulq_n_f32(vaddq_f32(v268, v275), v274);
  v527 = v276.i32[2];
  v526 = v276.i64[0];
  if (v273)
  {
    if ((v273 & 0x80000000) == 0)
      goto LABEL_156;
    v277 = v271 + 2896;
    v272 = -1;
    v278 = 2;
  }
  else
  {
    v277 = v271 + 2896;
    v278 = 0;
  }
  sub_223FFDF1C(v277, &v526, v272, v278, v274);
LABEL_156:
  v279 = *(*a1)[5];
  v280 = *(_BYTE *)(***a1 + 4361);
  v276.i32[0] = a2->i32[0] + 3;
  v276.i32[1] = a2->i32[1];
  v281 = *(char *)(***a1 + 4366);
  v282 = *(float *)(*(_QWORD *)(v279 + 40784) + 312);
  *(float32x2_t *)v276.f32 = vcvt_f32_s32(*(int32x2_t *)v276.f32);
  v276.f32[2] = (float)(a2[1].i32[0] + 7);
  v283.i64[0] = 0x3F0000003F000000;
  v283.i64[1] = 0x3F0000003F000000;
  v284 = vmulq_n_f32(vaddq_f32(v276, v283), v282);
  v527 = v284.i32[2];
  v526 = v284.i64[0];
  if (v281)
  {
    if ((v281 & 0x80000000) == 0)
      goto LABEL_161;
    v285 = v279 + 2896;
    v280 = -1;
    v286 = 2;
  }
  else
  {
    v285 = v279 + 2896;
    v286 = 0;
  }
  sub_223FFDF1C(v285, &v526, v280, v286, v282);
LABEL_161:
  v287 = *(*a1)[5];
  v288 = *(_BYTE *)(***a1 + 4401);
  v289 = *(char *)(***a1 + 4406);
  v290 = *(float *)(*(_QWORD *)(v287 + 40784) + 312);
  *(float32x2_t *)v284.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v284.f32[2] = (float)(a2[1].i32[0] + 6);
  v291.i64[0] = 0x3F0000003F000000;
  v291.i64[1] = 0x3F0000003F000000;
  v292 = vmulq_n_f32(vaddq_f32(v284, v291), v290);
  v527 = v292.i32[2];
  v526 = v292.i64[0];
  if (v289)
  {
    if ((v289 & 0x80000000) == 0)
      goto LABEL_166;
    v293 = v287 + 2896;
    v288 = -1;
    v294 = 2;
  }
  else
  {
    v293 = v287 + 2896;
    v294 = 0;
  }
  sub_223FFDF1C(v293, &v526, v288, v294, v290);
LABEL_166:
  v295 = *(*a1)[5];
  v296 = *(_BYTE *)(***a1 + 4441);
  v297 = *(char *)(***a1 + 4446);
  v298 = *(float *)(*(_QWORD *)(v295 + 40784) + 312);
  *(float32x2_t *)v292.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000003));
  v292.f32[2] = (float)(a2[1].i32[0] + 7);
  v299.i64[0] = 0x3F0000003F000000;
  v299.i64[1] = 0x3F0000003F000000;
  v300 = vmulq_n_f32(vaddq_f32(v292, v299), v298);
  v527 = v300.i32[2];
  v526 = v300.i64[0];
  if (v297)
  {
    if ((v297 & 0x80000000) == 0)
      goto LABEL_171;
    v301 = v295 + 2896;
    v296 = -1;
    v302 = 2;
  }
  else
  {
    v301 = v295 + 2896;
    v302 = 0;
  }
  sub_223FFDF1C(v301, &v526, v296, v302, v298);
LABEL_171:
  v303 = *(*a1)[5];
  v304 = *(_BYTE *)(***a1 + 4481);
  v305 = *(char *)(***a1 + 4486);
  v306 = *(float *)(*(_QWORD *)(v303 + 40784) + 312);
  *(float32x2_t *)v300.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v300.f32[2] = (float)(a2[1].i32[0] + 4);
  v307.i64[0] = 0x3F0000003F000000;
  v307.i64[1] = 0x3F0000003F000000;
  v308 = vmulq_n_f32(vaddq_f32(v300, v307), v306);
  v527 = v308.i32[2];
  v526 = v308.i64[0];
  if (v305)
  {
    if ((v305 & 0x80000000) == 0)
      goto LABEL_176;
    v309 = v303 + 2896;
    v304 = -1;
    v310 = 2;
  }
  else
  {
    v309 = v303 + 2896;
    v310 = 0;
  }
  sub_223FFDF1C(v309, &v526, v304, v310, v306);
LABEL_176:
  v311 = *(*a1)[5];
  v312 = *(_BYTE *)(***a1 + 4521);
  v313 = *(char *)(***a1 + 4526);
  v314 = *(float *)(*(_QWORD *)(v311 + 40784) + 312);
  *(float32x2_t *)v308.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v308.f32[2] = (float)(a2[1].i32[0] + 5);
  v315.i64[0] = 0x3F0000003F000000;
  v315.i64[1] = 0x3F0000003F000000;
  v316 = vmulq_n_f32(vaddq_f32(v308, v315), v314);
  v527 = v316.i32[2];
  v526 = v316.i64[0];
  if (v313)
  {
    if ((v313 & 0x80000000) == 0)
      goto LABEL_181;
    v317 = v311 + 2896;
    v312 = -1;
    v318 = 2;
  }
  else
  {
    v317 = v311 + 2896;
    v318 = 0;
  }
  sub_223FFDF1C(v317, &v526, v312, v318, v314);
LABEL_181:
  v319 = *(*a1)[5];
  v320 = *(_BYTE *)(***a1 + 4561);
  v321 = *(char *)(***a1 + 4566);
  v322 = *(float *)(*(_QWORD *)(v319 + 40784) + 312);
  *(float32x2_t *)v316.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v316.f32[2] = (float)(a2[1].i32[0] + 4);
  v323.i64[0] = 0x3F0000003F000000;
  v323.i64[1] = 0x3F0000003F000000;
  v324 = vmulq_n_f32(vaddq_f32(v316, v323), v322);
  v527 = v324.i32[2];
  v526 = v324.i64[0];
  if (v321)
  {
    if ((v321 & 0x80000000) == 0)
      goto LABEL_186;
    v325 = v319 + 2896;
    v320 = -1;
    v326 = 2;
  }
  else
  {
    v325 = v319 + 2896;
    v326 = 0;
  }
  sub_223FFDF1C(v325, &v526, v320, v326, v322);
LABEL_186:
  v327 = *(*a1)[5];
  v328 = *(_BYTE *)(***a1 + 4601);
  v329 = *(char *)(***a1 + 4606);
  v330 = *(float *)(*(_QWORD *)(v327 + 40784) + 312);
  *(float32x2_t *)v324.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v324.f32[2] = (float)(a2[1].i32[0] + 5);
  v331.i64[0] = 0x3F0000003F000000;
  v331.i64[1] = 0x3F0000003F000000;
  v332 = vmulq_n_f32(vaddq_f32(v324, v331), v330);
  v527 = v332.i32[2];
  v526 = v332.i64[0];
  if (v329)
  {
    if ((v329 & 0x80000000) == 0)
      goto LABEL_191;
    v333 = v327 + 2896;
    v328 = -1;
    v334 = 2;
  }
  else
  {
    v333 = v327 + 2896;
    v334 = 0;
  }
  sub_223FFDF1C(v333, &v526, v328, v334, v330);
LABEL_191:
  v335 = *(*a1)[5];
  v336 = *(_BYTE *)(***a1 + 4641);
  v337 = *(char *)(***a1 + 4646);
  v338 = *(float *)(*(_QWORD *)(v335 + 40784) + 312);
  *(float32x2_t *)v332.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v332.f32[2] = (float)(a2[1].i32[0] + 4);
  v339.i64[0] = 0x3F0000003F000000;
  v339.i64[1] = 0x3F0000003F000000;
  v340 = vmulq_n_f32(vaddq_f32(v332, v339), v338);
  v527 = v340.i32[2];
  v526 = v340.i64[0];
  if (v337)
  {
    if ((v337 & 0x80000000) == 0)
      goto LABEL_196;
    v341 = v335 + 2896;
    v336 = -1;
    v342 = 2;
  }
  else
  {
    v341 = v335 + 2896;
    v342 = 0;
  }
  sub_223FFDF1C(v341, &v526, v336, v342, v338);
LABEL_196:
  v343 = *(*a1)[5];
  v344 = *(_BYTE *)(***a1 + 4681);
  v345 = *(char *)(***a1 + 4686);
  v346 = *(float *)(*(_QWORD *)(v343 + 40784) + 312);
  *(float32x2_t *)v340.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v340.f32[2] = (float)(a2[1].i32[0] + 5);
  v347.i64[0] = 0x3F0000003F000000;
  v347.i64[1] = 0x3F0000003F000000;
  v348 = vmulq_n_f32(vaddq_f32(v340, v347), v346);
  v527 = v348.i32[2];
  v526 = v348.i64[0];
  if (v345)
  {
    if ((v345 & 0x80000000) == 0)
      goto LABEL_201;
    v349 = v343 + 2896;
    v344 = -1;
    v350 = 2;
  }
  else
  {
    v349 = v343 + 2896;
    v350 = 0;
  }
  sub_223FFDF1C(v349, &v526, v344, v350, v346);
LABEL_201:
  v351 = *(*a1)[5];
  v352 = *(_BYTE *)(***a1 + 4721);
  v353 = *(char *)(***a1 + 4726);
  v354 = *(float *)(*(_QWORD *)(v351 + 40784) + 312);
  *(float32x2_t *)v348.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v348.f32[2] = (float)(a2[1].i32[0] + 4);
  v355.i64[0] = 0x3F0000003F000000;
  v355.i64[1] = 0x3F0000003F000000;
  v356 = vmulq_n_f32(vaddq_f32(v348, v355), v354);
  v527 = v356.i32[2];
  v526 = v356.i64[0];
  if (v353)
  {
    if ((v353 & 0x80000000) == 0)
      goto LABEL_206;
    v357 = v351 + 2896;
    v352 = -1;
    v358 = 2;
  }
  else
  {
    v357 = v351 + 2896;
    v358 = 0;
  }
  sub_223FFDF1C(v357, &v526, v352, v358, v354);
LABEL_206:
  v359 = *(*a1)[5];
  v360 = *(_BYTE *)(***a1 + 4761);
  v361 = *(char *)(***a1 + 4766);
  v362 = *(float *)(*(_QWORD *)(v359 + 40784) + 312);
  *(float32x2_t *)v356.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v356.f32[2] = (float)(a2[1].i32[0] + 5);
  v363.i64[0] = 0x3F0000003F000000;
  v363.i64[1] = 0x3F0000003F000000;
  v364 = vmulq_n_f32(vaddq_f32(v356, v363), v362);
  v527 = v364.i32[2];
  v526 = v364.i64[0];
  if (v361)
  {
    if ((v361 & 0x80000000) == 0)
      goto LABEL_211;
    v365 = v359 + 2896;
    v360 = -1;
    v366 = 2;
  }
  else
  {
    v365 = v359 + 2896;
    v366 = 0;
  }
  sub_223FFDF1C(v365, &v526, v360, v366, v362);
LABEL_211:
  v367 = *(*a1)[5];
  v368 = *(_BYTE *)(***a1 + 4801);
  v369 = *(char *)(***a1 + 4806);
  v370 = *(float *)(*(_QWORD *)(v367 + 40784) + 312);
  *(float32x2_t *)v364.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v364.f32[2] = (float)(a2[1].i32[0] + 6);
  v371.i64[0] = 0x3F0000003F000000;
  v371.i64[1] = 0x3F0000003F000000;
  v372 = vmulq_n_f32(vaddq_f32(v364, v371), v370);
  v527 = v372.i32[2];
  v526 = v372.i64[0];
  if (v369)
  {
    if ((v369 & 0x80000000) == 0)
      goto LABEL_216;
    v373 = v367 + 2896;
    v368 = -1;
    v374 = 2;
  }
  else
  {
    v373 = v367 + 2896;
    v374 = 0;
  }
  sub_223FFDF1C(v373, &v526, v368, v374, v370);
LABEL_216:
  v375 = *(*a1)[5];
  v376 = *(_BYTE *)(***a1 + 4841);
  v377 = *(char *)(***a1 + 4846);
  v378 = *(float *)(*(_QWORD *)(v375 + 40784) + 312);
  *(float32x2_t *)v372.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000002));
  v372.f32[2] = (float)(a2[1].i32[0] + 7);
  v379.i64[0] = 0x3F0000003F000000;
  v379.i64[1] = 0x3F0000003F000000;
  v380 = vmulq_n_f32(vaddq_f32(v372, v379), v378);
  v527 = v380.i32[2];
  v526 = v380.i64[0];
  if (v377)
  {
    if ((v377 & 0x80000000) == 0)
      goto LABEL_221;
    v381 = v375 + 2896;
    v376 = -1;
    v382 = 2;
  }
  else
  {
    v381 = v375 + 2896;
    v382 = 0;
  }
  sub_223FFDF1C(v381, &v526, v376, v382, v378);
LABEL_221:
  v383 = *(*a1)[5];
  v384 = *(_BYTE *)(***a1 + 4881);
  v385 = *(char *)(***a1 + 4886);
  v386 = *(float *)(*(_QWORD *)(v383 + 40784) + 312);
  *(float32x2_t *)v380.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v380.f32[2] = (float)(a2[1].i32[0] + 6);
  v387.i64[0] = 0x3F0000003F000000;
  v387.i64[1] = 0x3F0000003F000000;
  v388 = vmulq_n_f32(vaddq_f32(v380, v387), v386);
  v527 = v388.i32[2];
  v526 = v388.i64[0];
  if (v385)
  {
    if ((v385 & 0x80000000) == 0)
      goto LABEL_226;
    v389 = v383 + 2896;
    v384 = -1;
    v390 = 2;
  }
  else
  {
    v389 = v383 + 2896;
    v390 = 0;
  }
  sub_223FFDF1C(v389, &v526, v384, v390, v386);
LABEL_226:
  v391 = *(*a1)[5];
  v392 = *(_BYTE *)(***a1 + 4921);
  v393 = *(char *)(***a1 + 4926);
  v394 = *(float *)(*(_QWORD *)(v391 + 40784) + 312);
  *(float32x2_t *)v388.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000002));
  v388.f32[2] = (float)(a2[1].i32[0] + 7);
  v395.i64[0] = 0x3F0000003F000000;
  v395.i64[1] = 0x3F0000003F000000;
  v396 = vmulq_n_f32(vaddq_f32(v388, v395), v394);
  v527 = v396.i32[2];
  v526 = v396.i64[0];
  if (v393)
  {
    if ((v393 & 0x80000000) == 0)
      goto LABEL_231;
    v397 = v391 + 2896;
    v392 = -1;
    v398 = 2;
  }
  else
  {
    v397 = v391 + 2896;
    v398 = 0;
  }
  sub_223FFDF1C(v397, &v526, v392, v398, v394);
LABEL_231:
  v399 = *(*a1)[5];
  v400 = *(_BYTE *)(***a1 + 4961);
  v401 = *(char *)(***a1 + 4966);
  v402 = *(float *)(*(_QWORD *)(v399 + 40784) + 312);
  *(float32x2_t *)v396.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v396.f32[2] = (float)(a2[1].i32[0] + 6);
  v403.i64[0] = 0x3F0000003F000000;
  v403.i64[1] = 0x3F0000003F000000;
  v404 = vmulq_n_f32(vaddq_f32(v396, v403), v402);
  v527 = v404.i32[2];
  v526 = v404.i64[0];
  if (v401)
  {
    if ((v401 & 0x80000000) == 0)
      goto LABEL_236;
    v405 = v399 + 2896;
    v400 = -1;
    v406 = 2;
  }
  else
  {
    v405 = v399 + 2896;
    v406 = 0;
  }
  sub_223FFDF1C(v405, &v526, v400, v406, v402);
LABEL_236:
  v407 = *(*a1)[5];
  v408 = *(_BYTE *)(***a1 + 5001);
  v409 = *(char *)(***a1 + 5006);
  v410 = *(float *)(*(_QWORD *)(v407 + 40784) + 312);
  *(float32x2_t *)v404.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000003));
  v404.f32[2] = (float)(a2[1].i32[0] + 7);
  v411.i64[0] = 0x3F0000003F000000;
  v411.i64[1] = 0x3F0000003F000000;
  v412 = vmulq_n_f32(vaddq_f32(v404, v411), v410);
  v527 = v412.i32[2];
  v526 = v412.i64[0];
  if (v409)
  {
    if ((v409 & 0x80000000) == 0)
      goto LABEL_241;
    v413 = v407 + 2896;
    v408 = -1;
    v414 = 2;
  }
  else
  {
    v413 = v407 + 2896;
    v414 = 0;
  }
  sub_223FFDF1C(v413, &v526, v408, v414, v410);
LABEL_241:
  v415 = *(*a1)[5];
  v416 = *(_BYTE *)(***a1 + 5041);
  v417 = *(char *)(***a1 + 5046);
  v418 = *(float *)(*(_QWORD *)(v415 + 40784) + 312);
  *(float32x2_t *)v412.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v412.f32[2] = (float)(a2[1].i32[0] + 6);
  v419.i64[0] = 0x3F0000003F000000;
  v419.i64[1] = 0x3F0000003F000000;
  v420 = vmulq_n_f32(vaddq_f32(v412, v419), v418);
  v527 = v420.i32[2];
  v526 = v420.i64[0];
  if (v417)
  {
    if ((v417 & 0x80000000) == 0)
      goto LABEL_246;
    v421 = v415 + 2896;
    v416 = -1;
    v422 = 2;
  }
  else
  {
    v421 = v415 + 2896;
    v422 = 0;
  }
  sub_223FFDF1C(v421, &v526, v416, v422, v418);
LABEL_246:
  v423 = *(*a1)[5];
  v424 = *(_BYTE *)(***a1 + 5081);
  v425 = *(char *)(***a1 + 5086);
  v426 = *(float *)(*(_QWORD *)(v423 + 40784) + 312);
  *(float32x2_t *)v420.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000003));
  v420.f32[2] = (float)(a2[1].i32[0] + 7);
  v427.i64[0] = 0x3F0000003F000000;
  v427.i64[1] = 0x3F0000003F000000;
  v428 = vmulq_n_f32(vaddq_f32(v420, v427), v426);
  v527 = v428.i32[2];
  v526 = v428.i64[0];
  if (v425)
  {
    if ((v425 & 0x80000000) == 0)
      goto LABEL_251;
    v429 = v423 + 2896;
    v424 = -1;
    v430 = 2;
  }
  else
  {
    v429 = v423 + 2896;
    v430 = 0;
  }
  sub_223FFDF1C(v429, &v526, v424, v430, v426);
LABEL_251:
  v431 = *(*a1)[5];
  v432 = *(_BYTE *)(***a1 + 5121);
  v433 = *(char *)(***a1 + 5126);
  v434 = *(float *)(*(_QWORD *)(v431 + 40784) + 312);
  *(float32x2_t *)v428.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v428.f32[2] = (float)a2[1].i32[0];
  v435.i64[0] = 0x3F0000003F000000;
  v435.i64[1] = 0x3F0000003F000000;
  v436 = vmulq_n_f32(vaddq_f32(v428, v435), v434);
  v527 = v436.i32[2];
  v526 = v436.i64[0];
  if (v433)
  {
    if ((v433 & 0x80000000) == 0)
      goto LABEL_256;
    v437 = v431 + 2896;
    v432 = -1;
    v438 = 2;
  }
  else
  {
    v437 = v431 + 2896;
    v438 = 0;
  }
  sub_223FFDF1C(v437, &v526, v432, v438, v434);
LABEL_256:
  v439 = *(*a1)[5];
  v440 = *(_BYTE *)(***a1 + 5161);
  v441 = *(char *)(***a1 + 5166);
  v442 = *(float *)(*(_QWORD *)(v439 + 40784) + 312);
  *(float32x2_t *)v436.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v436.f32[2] = (float)(a2[1].i32[0] + 1);
  v443.i64[0] = 0x3F0000003F000000;
  v443.i64[1] = 0x3F0000003F000000;
  v444 = vmulq_n_f32(vaddq_f32(v436, v443), v442);
  v527 = v444.i32[2];
  v526 = v444.i64[0];
  if (v441)
  {
    if ((v441 & 0x80000000) == 0)
      goto LABEL_261;
    v445 = v439 + 2896;
    v440 = -1;
    v446 = 2;
  }
  else
  {
    v445 = v439 + 2896;
    v446 = 0;
  }
  sub_223FFDF1C(v445, &v526, v440, v446, v442);
LABEL_261:
  v447 = *(*a1)[5];
  v448 = *(_BYTE *)(***a1 + 5201);
  v449 = *(char *)(***a1 + 5206);
  v450 = *(float *)(*(_QWORD *)(v447 + 40784) + 312);
  *(float32x2_t *)v444.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v444.f32[2] = (float)a2[1].i32[0];
  v451.i64[0] = 0x3F0000003F000000;
  v451.i64[1] = 0x3F0000003F000000;
  v452 = vmulq_n_f32(vaddq_f32(v444, v451), v450);
  v527 = v452.i32[2];
  v526 = v452.i64[0];
  if (v449)
  {
    if ((v449 & 0x80000000) == 0)
      goto LABEL_266;
    v453 = v447 + 2896;
    v448 = -1;
    v454 = 2;
  }
  else
  {
    v453 = v447 + 2896;
    v454 = 0;
  }
  sub_223FFDF1C(v453, &v526, v448, v454, v450);
LABEL_266:
  v455 = *(*a1)[5];
  v456 = *(_BYTE *)(***a1 + 5241);
  v457 = *(char *)(***a1 + 5246);
  v458 = *(float *)(*(_QWORD *)(v455 + 40784) + 312);
  *(float32x2_t *)v452.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v452.f32[2] = (float)(a2[1].i32[0] + 1);
  v459.i64[0] = 0x3F0000003F000000;
  v459.i64[1] = 0x3F0000003F000000;
  v460 = vmulq_n_f32(vaddq_f32(v452, v459), v458);
  v527 = v460.i32[2];
  v526 = v460.i64[0];
  if (v457)
  {
    if ((v457 & 0x80000000) == 0)
      goto LABEL_271;
    v461 = v455 + 2896;
    v456 = -1;
    v462 = 2;
  }
  else
  {
    v461 = v455 + 2896;
    v462 = 0;
  }
  sub_223FFDF1C(v461, &v526, v456, v462, v458);
LABEL_271:
  v463 = *(*a1)[5];
  v464 = *(_BYTE *)(***a1 + 5281);
  v465 = *(char *)(***a1 + 5286);
  v466 = *(float *)(*(_QWORD *)(v463 + 40784) + 312);
  *(float32x2_t *)v459.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v459.f32[2] = (float)a2[1].i32[0];
  v467.i64[0] = 0x3F0000003F000000;
  v467.i64[1] = 0x3F0000003F000000;
  v468 = vmulq_n_f32(vaddq_f32(v459, v467), v466);
  v527 = v468.i32[2];
  v526 = v468.i64[0];
  if (v465)
  {
    if ((v465 & 0x80000000) == 0)
      goto LABEL_276;
    v469 = v463 + 2896;
    v464 = -1;
    v470 = 2;
  }
  else
  {
    v469 = v463 + 2896;
    v470 = 0;
  }
  sub_223FFDF1C(v469, &v526, v464, v470, v466);
LABEL_276:
  v471 = *(*a1)[5];
  v472 = *(_BYTE *)(***a1 + 5321);
  v473 = *(char *)(***a1 + 5326);
  v474 = *(float *)(*(_QWORD *)(v471 + 40784) + 312);
  *(float32x2_t *)v468.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v468.f32[2] = (float)(a2[1].i32[0] + 1);
  v475.i64[0] = 0x3F0000003F000000;
  v475.i64[1] = 0x3F0000003F000000;
  v476 = vmulq_n_f32(vaddq_f32(v468, v475), v474);
  v527 = v476.i32[2];
  v526 = v476.i64[0];
  if (v473)
  {
    if ((v473 & 0x80000000) == 0)
      goto LABEL_281;
    v477 = v471 + 2896;
    v472 = -1;
    v478 = 2;
  }
  else
  {
    v477 = v471 + 2896;
    v478 = 0;
  }
  sub_223FFDF1C(v477, &v526, v472, v478, v474);
LABEL_281:
  v479 = *(*a1)[5];
  v480 = *(_BYTE *)(***a1 + 5361);
  v481 = *(char *)(***a1 + 5366);
  v482 = *(float *)(*(_QWORD *)(v479 + 40784) + 312);
  *(float32x2_t *)v475.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v475.f32[2] = (float)a2[1].i32[0];
  v483.i64[0] = 0x3F0000003F000000;
  v483.i64[1] = 0x3F0000003F000000;
  v484 = vmulq_n_f32(vaddq_f32(v475, v483), v482);
  v527 = v484.i32[2];
  v526 = v484.i64[0];
  if (v481)
  {
    if ((v481 & 0x80000000) == 0)
      goto LABEL_286;
    v485 = v479 + 2896;
    v480 = -1;
    v486 = 2;
  }
  else
  {
    v485 = v479 + 2896;
    v486 = 0;
  }
  sub_223FFDF1C(v485, &v526, v480, v486, v482);
LABEL_286:
  v487 = *(*a1)[5];
  v488 = *(_BYTE *)(***a1 + 5401);
  v489 = *(char *)(***a1 + 5406);
  v490 = *(float *)(*(_QWORD *)(v487 + 40784) + 312);
  *(float32x2_t *)v484.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v484.f32[2] = (float)(a2[1].i32[0] + 1);
  v491.i64[0] = 0x3F0000003F000000;
  v491.i64[1] = 0x3F0000003F000000;
  v492 = vmulq_n_f32(vaddq_f32(v484, v491), v490);
  v527 = v492.i32[2];
  v526 = v492.i64[0];
  if (v489)
  {
    if ((v489 & 0x80000000) == 0)
      goto LABEL_291;
    v493 = v487 + 2896;
    v488 = -1;
    v494 = 2;
  }
  else
  {
    v493 = v487 + 2896;
    v494 = 0;
  }
  sub_223FFDF1C(v493, &v526, v488, v494, v490);
LABEL_291:
  v495 = *(*a1)[5];
  v496 = *(_BYTE *)(***a1 + 5441);
  v497 = *(char *)(***a1 + 5446);
  v498 = *(float *)(*(_QWORD *)(v495 + 40784) + 312);
  *(float32x2_t *)v492.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v492.f32[2] = (float)(a2[1].i32[0] + 2);
  v499.i64[0] = 0x3F0000003F000000;
  v499.i64[1] = 0x3F0000003F000000;
  v500 = vmulq_n_f32(vaddq_f32(v492, v499), v498);
  v527 = v500.i32[2];
  v526 = v500.i64[0];
  if (v497)
  {
    if ((v497 & 0x80000000) == 0)
      goto LABEL_296;
    v501 = v495 + 2896;
    v496 = -1;
    v502 = 2;
  }
  else
  {
    v501 = v495 + 2896;
    v502 = 0;
  }
  sub_223FFDF1C(v501, &v526, v496, v502, v498);
LABEL_296:
  v503 = *(*a1)[5];
  v504 = *(_BYTE *)(***a1 + 5481);
  v505 = *(char *)(***a1 + 5486);
  v506 = *(float *)(*(_QWORD *)(v503 + 40784) + 312);
  *(float32x2_t *)v500.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v500.f32[2] = (float)(a2[1].i32[0] + 3);
  v507.i64[0] = 0x3F0000003F000000;
  v507.i64[1] = 0x3F0000003F000000;
  v508 = vmulq_n_f32(vaddq_f32(v500, v507), v506);
  v527 = v508.i32[2];
  v526 = v508.i64[0];
  if (v505)
  {
    if ((v505 & 0x80000000) == 0)
      goto LABEL_301;
    v509 = v503 + 2896;
    v504 = -1;
    v510 = 2;
  }
  else
  {
    v509 = v503 + 2896;
    v510 = 0;
  }
  sub_223FFDF1C(v509, &v526, v504, v510, v506);
LABEL_301:
  v511 = *(*a1)[5];
  v512 = *(_BYTE *)(***a1 + 5521);
  v513 = *(char *)(***a1 + 5526);
  v514 = *(float *)(*(_QWORD *)(v511 + 40784) + 312);
  *(float32x2_t *)v508.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v508.f32[2] = (float)(a2[1].i32[0] + 2);
  v515.i64[0] = 0x3F0000003F000000;
  v515.i64[1] = 0x3F0000003F000000;
  v516 = vmulq_n_f32(vaddq_f32(v508, v515), v514);
  v527 = v516.i32[2];
  v526 = v516.i64[0];
  if (v513)
  {
    if ((v513 & 0x80000000) == 0)
      goto LABEL_306;
    v517 = v511 + 2896;
    v512 = -1;
    v518 = 2;
  }
  else
  {
    v517 = v511 + 2896;
    v518 = 0;
  }
  sub_223FFDF1C(v517, &v526, v512, v518, v514);
LABEL_306:
  v519 = *(*a1)[5];
  v520 = *(_BYTE *)(***a1 + 5561);
  v521 = *(char *)(***a1 + 5566);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v519 + 40784) + 312);
  *(float32x2_t *)v516.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v516.f32[2] = (float)(a2[1].i32[0] + 3);
  v522.i64[0] = 0x3F0000003F000000;
  v522.i64[1] = 0x3F0000003F000000;
  v523 = vmulq_n_f32(vaddq_f32(v516, v522), *(float *)&a3);
  v527 = v523.i32[2];
  v526 = v523.i64[0];
  if (!v521)
  {
    v524 = v519 + 2896;
    v525 = 0;
    goto LABEL_310;
  }
  if (v521 < 0)
  {
    v524 = v519 + 2896;
    v520 = -1;
    v525 = 2;
LABEL_310:
    sub_223FFDF1C(v524, &v526, v520, v525, *(float *)&a3);
  }
  sub_2239422A0((uint64_t)a1, a2, a3, v523);
}

void sub_2239422A0(uint64_t a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  char v7;
  int v8;
  float v9;
  float32x4_t v10;
  float32x4_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  float v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  int v40;
  float v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  int v48;
  float v49;
  float32x4_t v50;
  float32x4_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  int v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  int v64;
  float v65;
  float32x4_t v66;
  float32x4_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  int v80;
  float v81;
  float32x4_t v82;
  float32x4_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  float v89;
  float32x4_t v90;
  float32x4_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char v95;
  int v96;
  float v97;
  float32x4_t v98;
  float32x4_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103;
  int v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  char v111;
  int v112;
  float v113;
  float32x4_t v114;
  float32x4_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char v119;
  int v120;
  float v121;
  float32x4_t v122;
  float32x4_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char v127;
  int v128;
  float v129;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char v135;
  int v136;
  float v137;
  float32x4_t v138;
  float32x4_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  char v151;
  int v152;
  float v153;
  float32x4_t v154;
  float32x4_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char v159;
  int v160;
  float v161;
  float32x4_t v162;
  float32x4_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  int v168;
  float v169;
  float32x4_t v170;
  float32x4_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  int v176;
  float v177;
  float32x4_t v178;
  float32x4_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  char v183;
  int v184;
  float v185;
  float32x4_t v186;
  float32x4_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  char v191;
  int v192;
  float v193;
  float32x4_t v194;
  float32x4_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  char v199;
  int v200;
  float v201;
  float32x4_t v202;
  float32x4_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  char v207;
  int v208;
  float v209;
  float32x4_t v210;
  float32x4_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  char v223;
  int v224;
  float v225;
  float32x4_t v226;
  float32x4_t v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  char v231;
  int v232;
  float v233;
  float32x4_t v234;
  float32x4_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char v239;
  int v240;
  float v241;
  float32x4_t v242;
  float32x4_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  char v247;
  int v248;
  float v249;
  float32x4_t v250;
  float32x4_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char v255;
  int v256;
  float v257;
  float32x4_t v258;
  float32x4_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  char v263;
  int v264;
  float v265;
  float32x4_t v266;
  float32x4_t v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  char v271;
  int v272;
  float v273;
  float32x4_t v274;
  float32x4_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  char v279;
  int v280;
  float v281;
  float32x4_t v282;
  float32x4_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  char v287;
  int v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  char v295;
  int v296;
  float v297;
  float32x4_t v298;
  float32x4_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  char v303;
  int v304;
  float v305;
  float32x4_t v306;
  float32x4_t v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  char v311;
  int v312;
  float v313;
  float32x4_t v314;
  float32x4_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  char v319;
  int v320;
  float v321;
  float32x4_t v322;
  float32x4_t v323;
  uint64_t v324;
  int v325;
  uint64_t v326;
  char v327;
  int v328;
  float v329;
  float32x4_t v330;
  float32x4_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  char v335;
  int v336;
  float v337;
  float32x4_t v338;
  float32x4_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  char v343;
  int v344;
  float v345;
  float32x4_t v346;
  float32x4_t v347;
  uint64_t v348;
  int v349;
  uint64_t v350;
  char v351;
  int v352;
  float v353;
  float32x4_t v354;
  float32x4_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  char v359;
  int v360;
  float v361;
  float32x4_t v362;
  float32x4_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  char v367;
  int v368;
  float v369;
  float32x4_t v370;
  float32x4_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  char v375;
  int v376;
  float v377;
  float32x4_t v378;
  float32x4_t v379;
  uint64_t v380;
  int v381;
  uint64_t v382;
  char v383;
  int v384;
  float v385;
  float32x4_t v386;
  float32x4_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  char v391;
  int v392;
  float v393;
  float32x4_t v394;
  float32x4_t v395;
  uint64_t v396;
  int v397;
  uint64_t v398;
  char v399;
  int v400;
  float v401;
  float32x4_t v402;
  float32x4_t v403;
  uint64_t v404;
  int v405;
  uint64_t v406;
  char v407;
  int v408;
  float v409;
  float32x4_t v410;
  float32x4_t v411;
  uint64_t v412;
  int v413;
  uint64_t v414;
  char v415;
  int v416;
  float v417;
  float32x4_t v418;
  float32x4_t v419;
  uint64_t v420;
  int v421;
  uint64_t v422;
  char v423;
  int v424;
  float v425;
  float32x4_t v426;
  float32x4_t v427;
  uint64_t v428;
  int v429;
  uint64_t v430;
  char v431;
  int v432;
  float v433;
  float32x4_t v434;
  float32x4_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  char v439;
  int v440;
  float v441;
  float32x4_t v442;
  float32x4_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  char v447;
  int v448;
  float v449;
  float32x4_t v450;
  float32x4_t v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  char v455;
  int v456;
  float v457;
  float32x4_t v458;
  float32x4_t v459;
  uint64_t v460;
  int v461;
  uint64_t v462;
  char v463;
  int v464;
  float v465;
  float32x4_t v466;
  float32x4_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  char v471;
  int v472;
  float v473;
  float32x4_t v474;
  float32x4_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  char v479;
  int v480;
  float v481;
  float32x4_t v482;
  float32x4_t v483;
  uint64_t v484;
  int v485;
  uint64_t v486;
  char v487;
  int v488;
  float v489;
  float32x4_t v490;
  float32x4_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  char v495;
  int v496;
  float32x4_t v497;
  float32x4_t v498;
  uint64_t v499;
  int v500;
  uint64_t v501;
  __int32 v502;

  v6 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v7 = *(_BYTE *)(***(_QWORD ***)a1 + 5601);
  v8 = *(char *)(***(_QWORD ***)a1 + 5606);
  v9 = *(float *)(*(_QWORD *)(v6 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  a4.f32[2] = (float)(a2[1].i32[0] + 2);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  v11 = vmulq_n_f32(vaddq_f32(a4, v10), v9);
  v502 = v11.i32[2];
  v501 = v11.i64[0];
  if (v8)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
    v12 = v6 + 2896;
    v7 = -1;
    v13 = 2;
  }
  else
  {
    v12 = v6 + 2896;
    v13 = 0;
  }
  sub_223FFDF1C(v12, &v501, v7, v13, v9);
LABEL_6:
  v14 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v15 = *(_BYTE *)(***(_QWORD ***)a1 + 5641);
  v16 = *(char *)(***(_QWORD ***)a1 + 5646);
  v17 = *(float *)(*(_QWORD *)(v14 + 40784) + 312);
  *(float32x2_t *)v11.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v11.f32[2] = (float)(a2[1].i32[0] + 3);
  v18.i64[0] = 0x3F0000003F000000;
  v18.i64[1] = 0x3F0000003F000000;
  v19 = vmulq_n_f32(vaddq_f32(v11, v18), v17);
  v502 = v19.i32[2];
  v501 = v19.i64[0];
  if (v16)
  {
    if ((v16 & 0x80000000) == 0)
      goto LABEL_11;
    v20 = v14 + 2896;
    v15 = -1;
    v21 = 2;
  }
  else
  {
    v20 = v14 + 2896;
    v21 = 0;
  }
  sub_223FFDF1C(v20, &v501, v15, v21, v17);
LABEL_11:
  v22 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v23 = *(_BYTE *)(***(_QWORD ***)a1 + 5681);
  v24 = *(char *)(***(_QWORD ***)a1 + 5686);
  v25 = *(float *)(*(_QWORD *)(v22 + 40784) + 312);
  *(float32x2_t *)v19.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v19.f32[2] = (float)(a2[1].i32[0] + 2);
  v26.i64[0] = 0x3F0000003F000000;
  v26.i64[1] = 0x3F0000003F000000;
  v27 = vmulq_n_f32(vaddq_f32(v19, v26), v25);
  v502 = v27.i32[2];
  v501 = v27.i64[0];
  if (v24)
  {
    if ((v24 & 0x80000000) == 0)
      goto LABEL_16;
    v28 = v22 + 2896;
    v23 = -1;
    v29 = 2;
  }
  else
  {
    v28 = v22 + 2896;
    v29 = 0;
  }
  sub_223FFDF1C(v28, &v501, v23, v29, v25);
LABEL_16:
  v30 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v31 = *(_BYTE *)(***(_QWORD ***)a1 + 5721);
  v32 = *(char *)(***(_QWORD ***)a1 + 5726);
  v33 = *(float *)(*(_QWORD *)(v30 + 40784) + 312);
  *(float32x2_t *)v27.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v27.f32[2] = (float)(a2[1].i32[0] + 3);
  v34.i64[0] = 0x3F0000003F000000;
  v34.i64[1] = 0x3F0000003F000000;
  v35 = vmulq_n_f32(vaddq_f32(v27, v34), v33);
  v502 = v35.i32[2];
  v501 = v35.i64[0];
  if (v32)
  {
    if ((v32 & 0x80000000) == 0)
      goto LABEL_21;
    v36 = v30 + 2896;
    v31 = -1;
    v37 = 2;
  }
  else
  {
    v36 = v30 + 2896;
    v37 = 0;
  }
  sub_223FFDF1C(v36, &v501, v31, v37, v33);
LABEL_21:
  v38 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v39 = *(_BYTE *)(***(_QWORD ***)a1 + 5761);
  v40 = *(char *)(***(_QWORD ***)a1 + 5766);
  v41 = *(float *)(*(_QWORD *)(v38 + 40784) + 312);
  *(float32x2_t *)v35.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v35.f32[2] = (float)a2[1].i32[0];
  v42.i64[0] = 0x3F0000003F000000;
  v42.i64[1] = 0x3F0000003F000000;
  v43 = vmulq_n_f32(vaddq_f32(v35, v42), v41);
  v502 = v43.i32[2];
  v501 = v43.i64[0];
  if (v40)
  {
    if ((v40 & 0x80000000) == 0)
      goto LABEL_26;
    v44 = v38 + 2896;
    v39 = -1;
    v45 = 2;
  }
  else
  {
    v44 = v38 + 2896;
    v45 = 0;
  }
  sub_223FFDF1C(v44, &v501, v39, v45, v41);
LABEL_26:
  v46 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v47 = *(_BYTE *)(***(_QWORD ***)a1 + 5801);
  v48 = *(char *)(***(_QWORD ***)a1 + 5806);
  v49 = *(float *)(*(_QWORD *)(v46 + 40784) + 312);
  *(float32x2_t *)v43.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v43.f32[2] = (float)(a2[1].i32[0] + 1);
  v50.i64[0] = 0x3F0000003F000000;
  v50.i64[1] = 0x3F0000003F000000;
  v51 = vmulq_n_f32(vaddq_f32(v43, v50), v49);
  v502 = v51.i32[2];
  v501 = v51.i64[0];
  if (v48)
  {
    if ((v48 & 0x80000000) == 0)
      goto LABEL_31;
    v52 = v46 + 2896;
    v47 = -1;
    v53 = 2;
  }
  else
  {
    v52 = v46 + 2896;
    v53 = 0;
  }
  sub_223FFDF1C(v52, &v501, v47, v53, v49);
LABEL_31:
  v54 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v55 = *(_BYTE *)(***(_QWORD ***)a1 + 5841);
  v56 = *(char *)(***(_QWORD ***)a1 + 5846);
  v57 = *(float *)(*(_QWORD *)(v54 + 40784) + 312);
  *(float32x2_t *)v51.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v51.f32[2] = (float)a2[1].i32[0];
  v58.i64[0] = 0x3F0000003F000000;
  v58.i64[1] = 0x3F0000003F000000;
  v59 = vmulq_n_f32(vaddq_f32(v51, v58), v57);
  v502 = v59.i32[2];
  v501 = v59.i64[0];
  if (v56)
  {
    if ((v56 & 0x80000000) == 0)
      goto LABEL_36;
    v60 = v54 + 2896;
    v55 = -1;
    v61 = 2;
  }
  else
  {
    v60 = v54 + 2896;
    v61 = 0;
  }
  sub_223FFDF1C(v60, &v501, v55, v61, v57);
LABEL_36:
  v62 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v63 = *(_BYTE *)(***(_QWORD ***)a1 + 5881);
  v64 = *(char *)(***(_QWORD ***)a1 + 5886);
  v65 = *(float *)(*(_QWORD *)(v62 + 40784) + 312);
  *(float32x2_t *)v59.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v59.f32[2] = (float)(a2[1].i32[0] + 1);
  v66.i64[0] = 0x3F0000003F000000;
  v66.i64[1] = 0x3F0000003F000000;
  v67 = vmulq_n_f32(vaddq_f32(v59, v66), v65);
  v502 = v67.i32[2];
  v501 = v67.i64[0];
  if (v64)
  {
    if ((v64 & 0x80000000) == 0)
      goto LABEL_41;
    v68 = v62 + 2896;
    v63 = -1;
    v69 = 2;
  }
  else
  {
    v68 = v62 + 2896;
    v69 = 0;
  }
  sub_223FFDF1C(v68, &v501, v63, v69, v65);
LABEL_41:
  v70 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v71 = *(_BYTE *)(***(_QWORD ***)a1 + 5921);
  v72 = *(char *)(***(_QWORD ***)a1 + 5926);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v66.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v66.f32[2] = (float)a2[1].i32[0];
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v66, v74), v73);
  v502 = v75.i32[2];
  v501 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_46;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v501, v71, v77, v73);
LABEL_46:
  v78 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v79 = *(_BYTE *)(***(_QWORD ***)a1 + 5961);
  v80 = *(char *)(***(_QWORD ***)a1 + 5966);
  v81 = *(float *)(*(_QWORD *)(v78 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v75.f32[2] = (float)(a2[1].i32[0] + 1);
  v82.i64[0] = 0x3F0000003F000000;
  v82.i64[1] = 0x3F0000003F000000;
  v83 = vmulq_n_f32(vaddq_f32(v75, v82), v81);
  v502 = v83.i32[2];
  v501 = v83.i64[0];
  if (v80)
  {
    if ((v80 & 0x80000000) == 0)
      goto LABEL_51;
    v84 = v78 + 2896;
    v79 = -1;
    v85 = 2;
  }
  else
  {
    v84 = v78 + 2896;
    v85 = 0;
  }
  sub_223FFDF1C(v84, &v501, v79, v85, v81);
LABEL_51:
  v86 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v87 = *(_BYTE *)(***(_QWORD ***)a1 + 6001);
  v88 = *(char *)(***(_QWORD ***)a1 + 6006);
  v89 = *(float *)(*(_QWORD *)(v86 + 40784) + 312);
  *(float32x2_t *)v82.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v82.f32[2] = (float)a2[1].i32[0];
  v90.i64[0] = 0x3F0000003F000000;
  v90.i64[1] = 0x3F0000003F000000;
  v91 = vmulq_n_f32(vaddq_f32(v82, v90), v89);
  v502 = v91.i32[2];
  v501 = v91.i64[0];
  if (v88)
  {
    if ((v88 & 0x80000000) == 0)
      goto LABEL_56;
    v92 = v86 + 2896;
    v87 = -1;
    v93 = 2;
  }
  else
  {
    v92 = v86 + 2896;
    v93 = 0;
  }
  sub_223FFDF1C(v92, &v501, v87, v93, v89);
LABEL_56:
  v94 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v95 = *(_BYTE *)(***(_QWORD ***)a1 + 6041);
  v96 = *(char *)(***(_QWORD ***)a1 + 6046);
  v97 = *(float *)(*(_QWORD *)(v94 + 40784) + 312);
  *(float32x2_t *)v91.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v91.f32[2] = (float)(a2[1].i32[0] + 1);
  v98.i64[0] = 0x3F0000003F000000;
  v98.i64[1] = 0x3F0000003F000000;
  v99 = vmulq_n_f32(vaddq_f32(v91, v98), v97);
  v502 = v99.i32[2];
  v501 = v99.i64[0];
  if (v96)
  {
    if ((v96 & 0x80000000) == 0)
      goto LABEL_61;
    v100 = v94 + 2896;
    v95 = -1;
    v101 = 2;
  }
  else
  {
    v100 = v94 + 2896;
    v101 = 0;
  }
  sub_223FFDF1C(v100, &v501, v95, v101, v97);
LABEL_61:
  v102 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v103 = *(_BYTE *)(***(_QWORD ***)a1 + 6081);
  v104 = *(char *)(***(_QWORD ***)a1 + 6086);
  v105 = *(float *)(*(_QWORD *)(v102 + 40784) + 312);
  *(float32x2_t *)v99.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v99.f32[2] = (float)(a2[1].i32[0] + 2);
  v106.i64[0] = 0x3F0000003F000000;
  v106.i64[1] = 0x3F0000003F000000;
  v107 = vmulq_n_f32(vaddq_f32(v99, v106), v105);
  v502 = v107.i32[2];
  v501 = v107.i64[0];
  if (v104)
  {
    if ((v104 & 0x80000000) == 0)
      goto LABEL_66;
    v108 = v102 + 2896;
    v103 = -1;
    v109 = 2;
  }
  else
  {
    v108 = v102 + 2896;
    v109 = 0;
  }
  sub_223FFDF1C(v108, &v501, v103, v109, v105);
LABEL_66:
  v110 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v111 = *(_BYTE *)(***(_QWORD ***)a1 + 6121);
  v112 = *(char *)(***(_QWORD ***)a1 + 6126);
  v113 = *(float *)(*(_QWORD *)(v110 + 40784) + 312);
  *(float32x2_t *)v107.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v107.f32[2] = (float)(a2[1].i32[0] + 3);
  v114.i64[0] = 0x3F0000003F000000;
  v114.i64[1] = 0x3F0000003F000000;
  v115 = vmulq_n_f32(vaddq_f32(v107, v114), v113);
  v502 = v115.i32[2];
  v501 = v115.i64[0];
  if (v112)
  {
    if ((v112 & 0x80000000) == 0)
      goto LABEL_71;
    v116 = v110 + 2896;
    v111 = -1;
    v117 = 2;
  }
  else
  {
    v116 = v110 + 2896;
    v117 = 0;
  }
  sub_223FFDF1C(v116, &v501, v111, v117, v113);
LABEL_71:
  v118 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v119 = *(_BYTE *)(***(_QWORD ***)a1 + 6161);
  v120 = *(char *)(***(_QWORD ***)a1 + 6166);
  v121 = *(float *)(*(_QWORD *)(v118 + 40784) + 312);
  *(float32x2_t *)v115.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v115.f32[2] = (float)(a2[1].i32[0] + 2);
  v122.i64[0] = 0x3F0000003F000000;
  v122.i64[1] = 0x3F0000003F000000;
  v123 = vmulq_n_f32(vaddq_f32(v115, v122), v121);
  v502 = v123.i32[2];
  v501 = v123.i64[0];
  if (v120)
  {
    if ((v120 & 0x80000000) == 0)
      goto LABEL_76;
    v124 = v118 + 2896;
    v119 = -1;
    v125 = 2;
  }
  else
  {
    v124 = v118 + 2896;
    v125 = 0;
  }
  sub_223FFDF1C(v124, &v501, v119, v125, v121);
LABEL_76:
  v126 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v127 = *(_BYTE *)(***(_QWORD ***)a1 + 6201);
  v128 = *(char *)(***(_QWORD ***)a1 + 6206);
  v129 = *(float *)(*(_QWORD *)(v126 + 40784) + 312);
  *(float32x2_t *)v123.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v123.f32[2] = (float)(a2[1].i32[0] + 3);
  v130.i64[0] = 0x3F0000003F000000;
  v130.i64[1] = 0x3F0000003F000000;
  v131 = vmulq_n_f32(vaddq_f32(v123, v130), v129);
  v502 = v131.i32[2];
  v501 = v131.i64[0];
  if (v128)
  {
    if ((v128 & 0x80000000) == 0)
      goto LABEL_81;
    v132 = v126 + 2896;
    v127 = -1;
    v133 = 2;
  }
  else
  {
    v132 = v126 + 2896;
    v133 = 0;
  }
  sub_223FFDF1C(v132, &v501, v127, v133, v129);
LABEL_81:
  v134 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v135 = *(_BYTE *)(***(_QWORD ***)a1 + 6241);
  v136 = *(char *)(***(_QWORD ***)a1 + 6246);
  v137 = *(float *)(*(_QWORD *)(v134 + 40784) + 312);
  *(float32x2_t *)v131.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v131.f32[2] = (float)(a2[1].i32[0] + 2);
  v138.i64[0] = 0x3F0000003F000000;
  v138.i64[1] = 0x3F0000003F000000;
  v139 = vmulq_n_f32(vaddq_f32(v131, v138), v137);
  v502 = v139.i32[2];
  v501 = v139.i64[0];
  if (v136)
  {
    if ((v136 & 0x80000000) == 0)
      goto LABEL_86;
    v140 = v134 + 2896;
    v135 = -1;
    v141 = 2;
  }
  else
  {
    v140 = v134 + 2896;
    v141 = 0;
  }
  sub_223FFDF1C(v140, &v501, v135, v141, v137);
LABEL_86:
  v142 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v143 = *(_BYTE *)(***(_QWORD ***)a1 + 6281);
  v144 = *(char *)(***(_QWORD ***)a1 + 6286);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v139.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v139.f32[2] = (float)(a2[1].i32[0] + 3);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v139, v146), v145);
  v502 = v147.i32[2];
  v501 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_91;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v501, v143, v149, v145);
LABEL_91:
  v150 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v151 = *(_BYTE *)(***(_QWORD ***)a1 + 6321);
  v152 = *(char *)(***(_QWORD ***)a1 + 6326);
  v153 = *(float *)(*(_QWORD *)(v150 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v147.f32[2] = (float)(a2[1].i32[0] + 2);
  v154.i64[0] = 0x3F0000003F000000;
  v154.i64[1] = 0x3F0000003F000000;
  v155 = vmulq_n_f32(vaddq_f32(v147, v154), v153);
  v502 = v155.i32[2];
  v501 = v155.i64[0];
  if (v152)
  {
    if ((v152 & 0x80000000) == 0)
      goto LABEL_96;
    v156 = v150 + 2896;
    v151 = -1;
    v157 = 2;
  }
  else
  {
    v156 = v150 + 2896;
    v157 = 0;
  }
  sub_223FFDF1C(v156, &v501, v151, v157, v153);
LABEL_96:
  v158 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v159 = *(_BYTE *)(***(_QWORD ***)a1 + 6361);
  v160 = *(char *)(***(_QWORD ***)a1 + 6366);
  v161 = *(float *)(*(_QWORD *)(v158 + 40784) + 312);
  *(float32x2_t *)v155.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v155.f32[2] = (float)(a2[1].i32[0] + 3);
  v162.i64[0] = 0x3F0000003F000000;
  v162.i64[1] = 0x3F0000003F000000;
  v163 = vmulq_n_f32(vaddq_f32(v155, v162), v161);
  v502 = v163.i32[2];
  v501 = v163.i64[0];
  if (v160)
  {
    if ((v160 & 0x80000000) == 0)
      goto LABEL_101;
    v164 = v158 + 2896;
    v159 = -1;
    v165 = 2;
  }
  else
  {
    v164 = v158 + 2896;
    v165 = 0;
  }
  sub_223FFDF1C(v164, &v501, v159, v165, v161);
LABEL_101:
  v166 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v167 = *(_BYTE *)(***(_QWORD ***)a1 + 6401);
  v168 = *(char *)(***(_QWORD ***)a1 + 6406);
  v169 = *(float *)(*(_QWORD *)(v166 + 40784) + 312);
  *(float32x2_t *)v162.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v162.f32[2] = (float)a2[1].i32[0];
  v170.i64[0] = 0x3F0000003F000000;
  v170.i64[1] = 0x3F0000003F000000;
  v171 = vmulq_n_f32(vaddq_f32(v162, v170), v169);
  v502 = v171.i32[2];
  v501 = v171.i64[0];
  if (v168)
  {
    if ((v168 & 0x80000000) == 0)
      goto LABEL_106;
    v172 = v166 + 2896;
    v167 = -1;
    v173 = 2;
  }
  else
  {
    v172 = v166 + 2896;
    v173 = 0;
  }
  sub_223FFDF1C(v172, &v501, v167, v173, v169);
LABEL_106:
  v174 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v175 = *(_BYTE *)(***(_QWORD ***)a1 + 6441);
  v176 = *(char *)(***(_QWORD ***)a1 + 6446);
  v177 = *(float *)(*(_QWORD *)(v174 + 40784) + 312);
  *(float32x2_t *)v171.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v171.f32[2] = (float)(a2[1].i32[0] + 1);
  v178.i64[0] = 0x3F0000003F000000;
  v178.i64[1] = 0x3F0000003F000000;
  v179 = vmulq_n_f32(vaddq_f32(v171, v178), v177);
  v502 = v179.i32[2];
  v501 = v179.i64[0];
  if (v176)
  {
    if ((v176 & 0x80000000) == 0)
      goto LABEL_111;
    v180 = v174 + 2896;
    v175 = -1;
    v181 = 2;
  }
  else
  {
    v180 = v174 + 2896;
    v181 = 0;
  }
  sub_223FFDF1C(v180, &v501, v175, v181, v177);
LABEL_111:
  v182 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v183 = *(_BYTE *)(***(_QWORD ***)a1 + 6481);
  v184 = *(char *)(***(_QWORD ***)a1 + 6486);
  v185 = *(float *)(*(_QWORD *)(v182 + 40784) + 312);
  *(float32x2_t *)v178.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v178.f32[2] = (float)a2[1].i32[0];
  v186.i64[0] = 0x3F0000003F000000;
  v186.i64[1] = 0x3F0000003F000000;
  v187 = vmulq_n_f32(vaddq_f32(v178, v186), v185);
  v502 = v187.i32[2];
  v501 = v187.i64[0];
  if (v184)
  {
    if ((v184 & 0x80000000) == 0)
      goto LABEL_116;
    v188 = v182 + 2896;
    v183 = -1;
    v189 = 2;
  }
  else
  {
    v188 = v182 + 2896;
    v189 = 0;
  }
  sub_223FFDF1C(v188, &v501, v183, v189, v185);
LABEL_116:
  v190 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v191 = *(_BYTE *)(***(_QWORD ***)a1 + 6521);
  v192 = *(char *)(***(_QWORD ***)a1 + 6526);
  v193 = *(float *)(*(_QWORD *)(v190 + 40784) + 312);
  *(float32x2_t *)v187.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v187.f32[2] = (float)(a2[1].i32[0] + 1);
  v194.i64[0] = 0x3F0000003F000000;
  v194.i64[1] = 0x3F0000003F000000;
  v195 = vmulq_n_f32(vaddq_f32(v187, v194), v193);
  v502 = v195.i32[2];
  v501 = v195.i64[0];
  if (v192)
  {
    if ((v192 & 0x80000000) == 0)
      goto LABEL_121;
    v196 = v190 + 2896;
    v191 = -1;
    v197 = 2;
  }
  else
  {
    v196 = v190 + 2896;
    v197 = 0;
  }
  sub_223FFDF1C(v196, &v501, v191, v197, v193);
LABEL_121:
  v198 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v199 = *(_BYTE *)(***(_QWORD ***)a1 + 6561);
  v200 = *(char *)(***(_QWORD ***)a1 + 6566);
  v201 = *(float *)(*(_QWORD *)(v198 + 40784) + 312);
  *(float32x2_t *)v194.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v194.f32[2] = (float)a2[1].i32[0];
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  v203 = vmulq_n_f32(vaddq_f32(v194, v202), v201);
  v502 = v203.i32[2];
  v501 = v203.i64[0];
  if (v200)
  {
    if ((v200 & 0x80000000) == 0)
      goto LABEL_126;
    v204 = v198 + 2896;
    v199 = -1;
    v205 = 2;
  }
  else
  {
    v204 = v198 + 2896;
    v205 = 0;
  }
  sub_223FFDF1C(v204, &v501, v199, v205, v201);
LABEL_126:
  v206 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v207 = *(_BYTE *)(***(_QWORD ***)a1 + 6601);
  v208 = *(char *)(***(_QWORD ***)a1 + 6606);
  v209 = *(float *)(*(_QWORD *)(v206 + 40784) + 312);
  *(float32x2_t *)v203.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v203.f32[2] = (float)(a2[1].i32[0] + 1);
  v210.i64[0] = 0x3F0000003F000000;
  v210.i64[1] = 0x3F0000003F000000;
  v211 = vmulq_n_f32(vaddq_f32(v203, v210), v209);
  v502 = v211.i32[2];
  v501 = v211.i64[0];
  if (v208)
  {
    if ((v208 & 0x80000000) == 0)
      goto LABEL_131;
    v212 = v206 + 2896;
    v207 = -1;
    v213 = 2;
  }
  else
  {
    v212 = v206 + 2896;
    v213 = 0;
  }
  sub_223FFDF1C(v212, &v501, v207, v213, v209);
LABEL_131:
  v214 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v215 = *(_BYTE *)(***(_QWORD ***)a1 + 6641);
  v216 = *(char *)(***(_QWORD ***)a1 + 6646);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v210.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v210.f32[2] = (float)a2[1].i32[0];
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v210, v218), v217);
  v502 = v219.i32[2];
  v501 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_136;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v501, v215, v221, v217);
LABEL_136:
  v222 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v223 = *(_BYTE *)(***(_QWORD ***)a1 + 6681);
  v224 = *(char *)(***(_QWORD ***)a1 + 6686);
  v225 = *(float *)(*(_QWORD *)(v222 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v219.f32[2] = (float)(a2[1].i32[0] + 1);
  v226.i64[0] = 0x3F0000003F000000;
  v226.i64[1] = 0x3F0000003F000000;
  v227 = vmulq_n_f32(vaddq_f32(v219, v226), v225);
  v502 = v227.i32[2];
  v501 = v227.i64[0];
  if (v224)
  {
    if ((v224 & 0x80000000) == 0)
      goto LABEL_141;
    v228 = v222 + 2896;
    v223 = -1;
    v229 = 2;
  }
  else
  {
    v228 = v222 + 2896;
    v229 = 0;
  }
  sub_223FFDF1C(v228, &v501, v223, v229, v225);
LABEL_141:
  v230 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v231 = *(_BYTE *)(***(_QWORD ***)a1 + 6721);
  v232 = *(char *)(***(_QWORD ***)a1 + 6726);
  v233 = *(float *)(*(_QWORD *)(v230 + 40784) + 312);
  *(float32x2_t *)v227.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v227.f32[2] = (float)(a2[1].i32[0] + 2);
  v234.i64[0] = 0x3F0000003F000000;
  v234.i64[1] = 0x3F0000003F000000;
  v235 = vmulq_n_f32(vaddq_f32(v227, v234), v233);
  v502 = v235.i32[2];
  v501 = v235.i64[0];
  if (v232)
  {
    if ((v232 & 0x80000000) == 0)
      goto LABEL_146;
    v236 = v230 + 2896;
    v231 = -1;
    v237 = 2;
  }
  else
  {
    v236 = v230 + 2896;
    v237 = 0;
  }
  sub_223FFDF1C(v236, &v501, v231, v237, v233);
LABEL_146:
  v238 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v239 = *(_BYTE *)(***(_QWORD ***)a1 + 6761);
  v240 = *(char *)(***(_QWORD ***)a1 + 6766);
  v241 = *(float *)(*(_QWORD *)(v238 + 40784) + 312);
  *(float32x2_t *)v235.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v235.f32[2] = (float)(a2[1].i32[0] + 3);
  v242.i64[0] = 0x3F0000003F000000;
  v242.i64[1] = 0x3F0000003F000000;
  v243 = vmulq_n_f32(vaddq_f32(v235, v242), v241);
  v502 = v243.i32[2];
  v501 = v243.i64[0];
  if (v240)
  {
    if ((v240 & 0x80000000) == 0)
      goto LABEL_151;
    v244 = v238 + 2896;
    v239 = -1;
    v245 = 2;
  }
  else
  {
    v244 = v238 + 2896;
    v245 = 0;
  }
  sub_223FFDF1C(v244, &v501, v239, v245, v241);
LABEL_151:
  v246 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v247 = *(_BYTE *)(***(_QWORD ***)a1 + 6801);
  v248 = *(char *)(***(_QWORD ***)a1 + 6806);
  v249 = *(float *)(*(_QWORD *)(v246 + 40784) + 312);
  *(float32x2_t *)v243.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v243.f32[2] = (float)(a2[1].i32[0] + 2);
  v250.i64[0] = 0x3F0000003F000000;
  v250.i64[1] = 0x3F0000003F000000;
  v251 = vmulq_n_f32(vaddq_f32(v243, v250), v249);
  v502 = v251.i32[2];
  v501 = v251.i64[0];
  if (v248)
  {
    if ((v248 & 0x80000000) == 0)
      goto LABEL_156;
    v252 = v246 + 2896;
    v247 = -1;
    v253 = 2;
  }
  else
  {
    v252 = v246 + 2896;
    v253 = 0;
  }
  sub_223FFDF1C(v252, &v501, v247, v253, v249);
LABEL_156:
  v254 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v255 = *(_BYTE *)(***(_QWORD ***)a1 + 6841);
  v256 = *(char *)(***(_QWORD ***)a1 + 6846);
  v257 = *(float *)(*(_QWORD *)(v254 + 40784) + 312);
  *(float32x2_t *)v251.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v251.f32[2] = (float)(a2[1].i32[0] + 3);
  v258.i64[0] = 0x3F0000003F000000;
  v258.i64[1] = 0x3F0000003F000000;
  v259 = vmulq_n_f32(vaddq_f32(v251, v258), v257);
  v502 = v259.i32[2];
  v501 = v259.i64[0];
  if (v256)
  {
    if ((v256 & 0x80000000) == 0)
      goto LABEL_161;
    v260 = v254 + 2896;
    v255 = -1;
    v261 = 2;
  }
  else
  {
    v260 = v254 + 2896;
    v261 = 0;
  }
  sub_223FFDF1C(v260, &v501, v255, v261, v257);
LABEL_161:
  v262 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v263 = *(_BYTE *)(***(_QWORD ***)a1 + 6881);
  v264 = *(char *)(***(_QWORD ***)a1 + 6886);
  v265 = *(float *)(*(_QWORD *)(v262 + 40784) + 312);
  *(float32x2_t *)v259.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v259.f32[2] = (float)(a2[1].i32[0] + 2);
  v266.i64[0] = 0x3F0000003F000000;
  v266.i64[1] = 0x3F0000003F000000;
  v267 = vmulq_n_f32(vaddq_f32(v259, v266), v265);
  v502 = v267.i32[2];
  v501 = v267.i64[0];
  if (v264)
  {
    if ((v264 & 0x80000000) == 0)
      goto LABEL_166;
    v268 = v262 + 2896;
    v263 = -1;
    v269 = 2;
  }
  else
  {
    v268 = v262 + 2896;
    v269 = 0;
  }
  sub_223FFDF1C(v268, &v501, v263, v269, v265);
LABEL_166:
  v270 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v271 = *(_BYTE *)(***(_QWORD ***)a1 + 6921);
  v272 = *(char *)(***(_QWORD ***)a1 + 6926);
  v273 = *(float *)(*(_QWORD *)(v270 + 40784) + 312);
  *(float32x2_t *)v267.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v267.f32[2] = (float)(a2[1].i32[0] + 3);
  v274.i64[0] = 0x3F0000003F000000;
  v274.i64[1] = 0x3F0000003F000000;
  v275 = vmulq_n_f32(vaddq_f32(v267, v274), v273);
  v502 = v275.i32[2];
  v501 = v275.i64[0];
  if (v272)
  {
    if ((v272 & 0x80000000) == 0)
      goto LABEL_171;
    v276 = v270 + 2896;
    v271 = -1;
    v277 = 2;
  }
  else
  {
    v276 = v270 + 2896;
    v277 = 0;
  }
  sub_223FFDF1C(v276, &v501, v271, v277, v273);
LABEL_171:
  v278 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v279 = *(_BYTE *)(***(_QWORD ***)a1 + 6961);
  v280 = *(char *)(***(_QWORD ***)a1 + 6966);
  v281 = *(float *)(*(_QWORD *)(v278 + 40784) + 312);
  *(float32x2_t *)v275.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v275.f32[2] = (float)(a2[1].i32[0] + 2);
  v282.i64[0] = 0x3F0000003F000000;
  v282.i64[1] = 0x3F0000003F000000;
  v283 = vmulq_n_f32(vaddq_f32(v275, v282), v281);
  v502 = v283.i32[2];
  v501 = v283.i64[0];
  if (v280)
  {
    if ((v280 & 0x80000000) == 0)
      goto LABEL_176;
    v284 = v278 + 2896;
    v279 = -1;
    v285 = 2;
  }
  else
  {
    v284 = v278 + 2896;
    v285 = 0;
  }
  sub_223FFDF1C(v284, &v501, v279, v285, v281);
LABEL_176:
  v286 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v287 = *(_BYTE *)(***(_QWORD ***)a1 + 7001);
  v288 = *(char *)(***(_QWORD ***)a1 + 7006);
  v289 = *(float *)(*(_QWORD *)(v286 + 40784) + 312);
  *(float32x2_t *)v283.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v283.f32[2] = (float)(a2[1].i32[0] + 3);
  v290.i64[0] = 0x3F0000003F000000;
  v290.i64[1] = 0x3F0000003F000000;
  v291 = vmulq_n_f32(vaddq_f32(v283, v290), v289);
  v502 = v291.i32[2];
  v501 = v291.i64[0];
  if (v288)
  {
    if ((v288 & 0x80000000) == 0)
      goto LABEL_181;
    v292 = v286 + 2896;
    v287 = -1;
    v293 = 2;
  }
  else
  {
    v292 = v286 + 2896;
    v293 = 0;
  }
  sub_223FFDF1C(v292, &v501, v287, v293, v289);
LABEL_181:
  v294 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v295 = *(_BYTE *)(***(_QWORD ***)a1 + 7041);
  v296 = *(char *)(***(_QWORD ***)a1 + 7046);
  v297 = *(float *)(*(_QWORD *)(v294 + 40784) + 312);
  *(float32x2_t *)v290.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v290.f32[2] = (float)a2[1].i32[0];
  v298.i64[0] = 0x3F0000003F000000;
  v298.i64[1] = 0x3F0000003F000000;
  v299 = vmulq_n_f32(vaddq_f32(v290, v298), v297);
  v502 = v299.i32[2];
  v501 = v299.i64[0];
  if (v296)
  {
    if ((v296 & 0x80000000) == 0)
      goto LABEL_186;
    v300 = v294 + 2896;
    v295 = -1;
    v301 = 2;
  }
  else
  {
    v300 = v294 + 2896;
    v301 = 0;
  }
  sub_223FFDF1C(v300, &v501, v295, v301, v297);
LABEL_186:
  v302 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v303 = *(_BYTE *)(***(_QWORD ***)a1 + 7081);
  v304 = *(char *)(***(_QWORD ***)a1 + 7086);
  v305 = *(float *)(*(_QWORD *)(v302 + 40784) + 312);
  *(float32x2_t *)v299.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v299.f32[2] = (float)(a2[1].i32[0] + 1);
  v306.i64[0] = 0x3F0000003F000000;
  v306.i64[1] = 0x3F0000003F000000;
  v307 = vmulq_n_f32(vaddq_f32(v299, v306), v305);
  v502 = v307.i32[2];
  v501 = v307.i64[0];
  if (v304)
  {
    if ((v304 & 0x80000000) == 0)
      goto LABEL_191;
    v308 = v302 + 2896;
    v303 = -1;
    v309 = 2;
  }
  else
  {
    v308 = v302 + 2896;
    v309 = 0;
  }
  sub_223FFDF1C(v308, &v501, v303, v309, v305);
LABEL_191:
  v310 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v311 = *(_BYTE *)(***(_QWORD ***)a1 + 7121);
  v312 = *(char *)(***(_QWORD ***)a1 + 7126);
  v313 = *(float *)(*(_QWORD *)(v310 + 40784) + 312);
  *(float32x2_t *)v306.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v306.f32[2] = (float)a2[1].i32[0];
  v314.i64[0] = 0x3F0000003F000000;
  v314.i64[1] = 0x3F0000003F000000;
  v315 = vmulq_n_f32(vaddq_f32(v306, v314), v313);
  v502 = v315.i32[2];
  v501 = v315.i64[0];
  if (v312)
  {
    if ((v312 & 0x80000000) == 0)
      goto LABEL_196;
    v316 = v310 + 2896;
    v311 = -1;
    v317 = 2;
  }
  else
  {
    v316 = v310 + 2896;
    v317 = 0;
  }
  sub_223FFDF1C(v316, &v501, v311, v317, v313);
LABEL_196:
  v318 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v319 = *(_BYTE *)(***(_QWORD ***)a1 + 7161);
  v320 = *(char *)(***(_QWORD ***)a1 + 7166);
  v321 = *(float *)(*(_QWORD *)(v318 + 40784) + 312);
  *(float32x2_t *)v315.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v315.f32[2] = (float)(a2[1].i32[0] + 1);
  v322.i64[0] = 0x3F0000003F000000;
  v322.i64[1] = 0x3F0000003F000000;
  v323 = vmulq_n_f32(vaddq_f32(v315, v322), v321);
  v502 = v323.i32[2];
  v501 = v323.i64[0];
  if (v320)
  {
    if ((v320 & 0x80000000) == 0)
      goto LABEL_201;
    v324 = v318 + 2896;
    v319 = -1;
    v325 = 2;
  }
  else
  {
    v324 = v318 + 2896;
    v325 = 0;
  }
  sub_223FFDF1C(v324, &v501, v319, v325, v321);
LABEL_201:
  v326 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v327 = *(_BYTE *)(***(_QWORD ***)a1 + 7201);
  v328 = *(char *)(***(_QWORD ***)a1 + 7206);
  v329 = *(float *)(*(_QWORD *)(v326 + 40784) + 312);
  *(float32x2_t *)v322.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v322.f32[2] = (float)a2[1].i32[0];
  v330.i64[0] = 0x3F0000003F000000;
  v330.i64[1] = 0x3F0000003F000000;
  v331 = vmulq_n_f32(vaddq_f32(v322, v330), v329);
  v502 = v331.i32[2];
  v501 = v331.i64[0];
  if (v328)
  {
    if ((v328 & 0x80000000) == 0)
      goto LABEL_206;
    v332 = v326 + 2896;
    v327 = -1;
    v333 = 2;
  }
  else
  {
    v332 = v326 + 2896;
    v333 = 0;
  }
  sub_223FFDF1C(v332, &v501, v327, v333, v329);
LABEL_206:
  v334 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v335 = *(_BYTE *)(***(_QWORD ***)a1 + 7241);
  v336 = *(char *)(***(_QWORD ***)a1 + 7246);
  v337 = *(float *)(*(_QWORD *)(v334 + 40784) + 312);
  *(float32x2_t *)v331.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v331.f32[2] = (float)(a2[1].i32[0] + 1);
  v338.i64[0] = 0x3F0000003F000000;
  v338.i64[1] = 0x3F0000003F000000;
  v339 = vmulq_n_f32(vaddq_f32(v331, v338), v337);
  v502 = v339.i32[2];
  v501 = v339.i64[0];
  if (v336)
  {
    if ((v336 & 0x80000000) == 0)
      goto LABEL_211;
    v340 = v334 + 2896;
    v335 = -1;
    v341 = 2;
  }
  else
  {
    v340 = v334 + 2896;
    v341 = 0;
  }
  sub_223FFDF1C(v340, &v501, v335, v341, v337);
LABEL_211:
  v342 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v343 = *(_BYTE *)(***(_QWORD ***)a1 + 7281);
  v344 = *(char *)(***(_QWORD ***)a1 + 7286);
  v345 = *(float *)(*(_QWORD *)(v342 + 40784) + 312);
  *(float32x2_t *)v338.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v338.f32[2] = (float)a2[1].i32[0];
  v346.i64[0] = 0x3F0000003F000000;
  v346.i64[1] = 0x3F0000003F000000;
  v347 = vmulq_n_f32(vaddq_f32(v338, v346), v345);
  v502 = v347.i32[2];
  v501 = v347.i64[0];
  if (v344)
  {
    if ((v344 & 0x80000000) == 0)
      goto LABEL_216;
    v348 = v342 + 2896;
    v343 = -1;
    v349 = 2;
  }
  else
  {
    v348 = v342 + 2896;
    v349 = 0;
  }
  sub_223FFDF1C(v348, &v501, v343, v349, v345);
LABEL_216:
  v350 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v351 = *(_BYTE *)(***(_QWORD ***)a1 + 7321);
  v352 = *(char *)(***(_QWORD ***)a1 + 7326);
  v353 = *(float *)(*(_QWORD *)(v350 + 40784) + 312);
  *(float32x2_t *)v347.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v347.f32[2] = (float)(a2[1].i32[0] + 1);
  v354.i64[0] = 0x3F0000003F000000;
  v354.i64[1] = 0x3F0000003F000000;
  v355 = vmulq_n_f32(vaddq_f32(v347, v354), v353);
  v502 = v355.i32[2];
  v501 = v355.i64[0];
  if (v352)
  {
    if ((v352 & 0x80000000) == 0)
      goto LABEL_221;
    v356 = v350 + 2896;
    v351 = -1;
    v357 = 2;
  }
  else
  {
    v356 = v350 + 2896;
    v357 = 0;
  }
  sub_223FFDF1C(v356, &v501, v351, v357, v353);
LABEL_221:
  v358 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v359 = *(_BYTE *)(***(_QWORD ***)a1 + 7361);
  v360 = *(char *)(***(_QWORD ***)a1 + 7366);
  v361 = *(float *)(*(_QWORD *)(v358 + 40784) + 312);
  *(float32x2_t *)v355.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v355.f32[2] = (float)(a2[1].i32[0] + 2);
  v362.i64[0] = 0x3F0000003F000000;
  v362.i64[1] = 0x3F0000003F000000;
  v363 = vmulq_n_f32(vaddq_f32(v355, v362), v361);
  v502 = v363.i32[2];
  v501 = v363.i64[0];
  if (v360)
  {
    if ((v360 & 0x80000000) == 0)
      goto LABEL_226;
    v364 = v358 + 2896;
    v359 = -1;
    v365 = 2;
  }
  else
  {
    v364 = v358 + 2896;
    v365 = 0;
  }
  sub_223FFDF1C(v364, &v501, v359, v365, v361);
LABEL_226:
  v366 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v367 = *(_BYTE *)(***(_QWORD ***)a1 + 7401);
  v368 = *(char *)(***(_QWORD ***)a1 + 7406);
  v369 = *(float *)(*(_QWORD *)(v366 + 40784) + 312);
  *(float32x2_t *)v363.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v363.f32[2] = (float)(a2[1].i32[0] + 3);
  v370.i64[0] = 0x3F0000003F000000;
  v370.i64[1] = 0x3F0000003F000000;
  v371 = vmulq_n_f32(vaddq_f32(v363, v370), v369);
  v502 = v371.i32[2];
  v501 = v371.i64[0];
  if (v368)
  {
    if ((v368 & 0x80000000) == 0)
      goto LABEL_231;
    v372 = v366 + 2896;
    v367 = -1;
    v373 = 2;
  }
  else
  {
    v372 = v366 + 2896;
    v373 = 0;
  }
  sub_223FFDF1C(v372, &v501, v367, v373, v369);
LABEL_231:
  v374 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v375 = *(_BYTE *)(***(_QWORD ***)a1 + 7441);
  v376 = *(char *)(***(_QWORD ***)a1 + 7446);
  v377 = *(float *)(*(_QWORD *)(v374 + 40784) + 312);
  *(float32x2_t *)v371.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v371.f32[2] = (float)(a2[1].i32[0] + 2);
  v378.i64[0] = 0x3F0000003F000000;
  v378.i64[1] = 0x3F0000003F000000;
  v379 = vmulq_n_f32(vaddq_f32(v371, v378), v377);
  v502 = v379.i32[2];
  v501 = v379.i64[0];
  if (v376)
  {
    if ((v376 & 0x80000000) == 0)
      goto LABEL_236;
    v380 = v374 + 2896;
    v375 = -1;
    v381 = 2;
  }
  else
  {
    v380 = v374 + 2896;
    v381 = 0;
  }
  sub_223FFDF1C(v380, &v501, v375, v381, v377);
LABEL_236:
  v382 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v383 = *(_BYTE *)(***(_QWORD ***)a1 + 7481);
  v384 = *(char *)(***(_QWORD ***)a1 + 7486);
  v385 = *(float *)(*(_QWORD *)(v382 + 40784) + 312);
  *(float32x2_t *)v379.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v379.f32[2] = (float)(a2[1].i32[0] + 3);
  v386.i64[0] = 0x3F0000003F000000;
  v386.i64[1] = 0x3F0000003F000000;
  v387 = vmulq_n_f32(vaddq_f32(v379, v386), v385);
  v502 = v387.i32[2];
  v501 = v387.i64[0];
  if (v384)
  {
    if ((v384 & 0x80000000) == 0)
      goto LABEL_241;
    v388 = v382 + 2896;
    v383 = -1;
    v389 = 2;
  }
  else
  {
    v388 = v382 + 2896;
    v389 = 0;
  }
  sub_223FFDF1C(v388, &v501, v383, v389, v385);
LABEL_241:
  v390 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v391 = *(_BYTE *)(***(_QWORD ***)a1 + 7521);
  v392 = *(char *)(***(_QWORD ***)a1 + 7526);
  v393 = *(float *)(*(_QWORD *)(v390 + 40784) + 312);
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v387.f32[2] = (float)(a2[1].i32[0] + 2);
  v394.i64[0] = 0x3F0000003F000000;
  v394.i64[1] = 0x3F0000003F000000;
  v395 = vmulq_n_f32(vaddq_f32(v387, v394), v393);
  v502 = v395.i32[2];
  v501 = v395.i64[0];
  if (v392)
  {
    if ((v392 & 0x80000000) == 0)
      goto LABEL_246;
    v396 = v390 + 2896;
    v391 = -1;
    v397 = 2;
  }
  else
  {
    v396 = v390 + 2896;
    v397 = 0;
  }
  sub_223FFDF1C(v396, &v501, v391, v397, v393);
LABEL_246:
  v398 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v399 = *(_BYTE *)(***(_QWORD ***)a1 + 7561);
  v400 = *(char *)(***(_QWORD ***)a1 + 7566);
  v401 = *(float *)(*(_QWORD *)(v398 + 40784) + 312);
  *(float32x2_t *)v395.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v395.f32[2] = (float)(a2[1].i32[0] + 3);
  v402.i64[0] = 0x3F0000003F000000;
  v402.i64[1] = 0x3F0000003F000000;
  v403 = vmulq_n_f32(vaddq_f32(v395, v402), v401);
  v502 = v403.i32[2];
  v501 = v403.i64[0];
  if (v400)
  {
    if ((v400 & 0x80000000) == 0)
      goto LABEL_251;
    v404 = v398 + 2896;
    v399 = -1;
    v405 = 2;
  }
  else
  {
    v404 = v398 + 2896;
    v405 = 0;
  }
  sub_223FFDF1C(v404, &v501, v399, v405, v401);
LABEL_251:
  v406 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v407 = *(_BYTE *)(***(_QWORD ***)a1 + 7601);
  v408 = *(char *)(***(_QWORD ***)a1 + 7606);
  v409 = *(float *)(*(_QWORD *)(v406 + 40784) + 312);
  *(float32x2_t *)v403.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v403.f32[2] = (float)(a2[1].i32[0] + 2);
  v410.i64[0] = 0x3F0000003F000000;
  v410.i64[1] = 0x3F0000003F000000;
  v411 = vmulq_n_f32(vaddq_f32(v403, v410), v409);
  v502 = v411.i32[2];
  v501 = v411.i64[0];
  if (v408)
  {
    if ((v408 & 0x80000000) == 0)
      goto LABEL_256;
    v412 = v406 + 2896;
    v407 = -1;
    v413 = 2;
  }
  else
  {
    v412 = v406 + 2896;
    v413 = 0;
  }
  sub_223FFDF1C(v412, &v501, v407, v413, v409);
LABEL_256:
  v414 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v415 = *(_BYTE *)(***(_QWORD ***)a1 + 7641);
  v416 = *(char *)(***(_QWORD ***)a1 + 7646);
  v417 = *(float *)(*(_QWORD *)(v414 + 40784) + 312);
  *(float32x2_t *)v411.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v411.f32[2] = (float)(a2[1].i32[0] + 3);
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  v419 = vmulq_n_f32(vaddq_f32(v411, v418), v417);
  v502 = v419.i32[2];
  v501 = v419.i64[0];
  if (v416)
  {
    if ((v416 & 0x80000000) == 0)
      goto LABEL_261;
    v420 = v414 + 2896;
    v415 = -1;
    v421 = 2;
  }
  else
  {
    v420 = v414 + 2896;
    v421 = 0;
  }
  sub_223FFDF1C(v420, &v501, v415, v421, v417);
LABEL_261:
  v422 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v423 = *(_BYTE *)(***(_QWORD ***)a1 + 7681);
  v424 = *(char *)(***(_QWORD ***)a1 + 7686);
  v425 = *(float *)(*(_QWORD *)(v422 + 40784) + 312);
  *(float32x2_t *)v419.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v419.f32[2] = (float)(a2[1].i32[0] + 4);
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  v427 = vmulq_n_f32(vaddq_f32(v419, v426), v425);
  v502 = v427.i32[2];
  v501 = v427.i64[0];
  if (v424)
  {
    if ((v424 & 0x80000000) == 0)
      goto LABEL_266;
    v428 = v422 + 2896;
    v423 = -1;
    v429 = 2;
  }
  else
  {
    v428 = v422 + 2896;
    v429 = 0;
  }
  sub_223FFDF1C(v428, &v501, v423, v429, v425);
LABEL_266:
  v430 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v431 = *(_BYTE *)(***(_QWORD ***)a1 + 7721);
  v432 = *(char *)(***(_QWORD ***)a1 + 7726);
  v433 = *(float *)(*(_QWORD *)(v430 + 40784) + 312);
  *(float32x2_t *)v427.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v427.f32[2] = (float)(a2[1].i32[0] + 5);
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  v435 = vmulq_n_f32(vaddq_f32(v427, v434), v433);
  v502 = v435.i32[2];
  v501 = v435.i64[0];
  if (v432)
  {
    if ((v432 & 0x80000000) == 0)
      goto LABEL_271;
    v436 = v430 + 2896;
    v431 = -1;
    v437 = 2;
  }
  else
  {
    v436 = v430 + 2896;
    v437 = 0;
  }
  sub_223FFDF1C(v436, &v501, v431, v437, v433);
LABEL_271:
  v438 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v439 = *(_BYTE *)(***(_QWORD ***)a1 + 7761);
  v440 = *(char *)(***(_QWORD ***)a1 + 7766);
  v441 = *(float *)(*(_QWORD *)(v438 + 40784) + 312);
  *(float32x2_t *)v435.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v435.f32[2] = (float)(a2[1].i32[0] + 4);
  v442.i64[0] = 0x3F0000003F000000;
  v442.i64[1] = 0x3F0000003F000000;
  v443 = vmulq_n_f32(vaddq_f32(v435, v442), v441);
  v502 = v443.i32[2];
  v501 = v443.i64[0];
  if (v440)
  {
    if ((v440 & 0x80000000) == 0)
      goto LABEL_276;
    v444 = v438 + 2896;
    v439 = -1;
    v445 = 2;
  }
  else
  {
    v444 = v438 + 2896;
    v445 = 0;
  }
  sub_223FFDF1C(v444, &v501, v439, v445, v441);
LABEL_276:
  v446 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v447 = *(_BYTE *)(***(_QWORD ***)a1 + 7801);
  v448 = *(char *)(***(_QWORD ***)a1 + 7806);
  v449 = *(float *)(*(_QWORD *)(v446 + 40784) + 312);
  *(float32x2_t *)v443.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v443.f32[2] = (float)(a2[1].i32[0] + 5);
  v450.i64[0] = 0x3F0000003F000000;
  v450.i64[1] = 0x3F0000003F000000;
  v451 = vmulq_n_f32(vaddq_f32(v443, v450), v449);
  v502 = v451.i32[2];
  v501 = v451.i64[0];
  if (v448)
  {
    if ((v448 & 0x80000000) == 0)
      goto LABEL_281;
    v452 = v446 + 2896;
    v447 = -1;
    v453 = 2;
  }
  else
  {
    v452 = v446 + 2896;
    v453 = 0;
  }
  sub_223FFDF1C(v452, &v501, v447, v453, v449);
LABEL_281:
  v454 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v455 = *(_BYTE *)(***(_QWORD ***)a1 + 7841);
  v456 = *(char *)(***(_QWORD ***)a1 + 7846);
  v457 = *(float *)(*(_QWORD *)(v454 + 40784) + 312);
  *(float32x2_t *)v451.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v451.f32[2] = (float)(a2[1].i32[0] + 4);
  v458.i64[0] = 0x3F0000003F000000;
  v458.i64[1] = 0x3F0000003F000000;
  v459 = vmulq_n_f32(vaddq_f32(v451, v458), v457);
  v502 = v459.i32[2];
  v501 = v459.i64[0];
  if (v456)
  {
    if ((v456 & 0x80000000) == 0)
      goto LABEL_286;
    v460 = v454 + 2896;
    v455 = -1;
    v461 = 2;
  }
  else
  {
    v460 = v454 + 2896;
    v461 = 0;
  }
  sub_223FFDF1C(v460, &v501, v455, v461, v457);
LABEL_286:
  v462 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v463 = *(_BYTE *)(***(_QWORD ***)a1 + 7881);
  v464 = *(char *)(***(_QWORD ***)a1 + 7886);
  v465 = *(float *)(*(_QWORD *)(v462 + 40784) + 312);
  *(float32x2_t *)v459.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v459.f32[2] = (float)(a2[1].i32[0] + 5);
  v466.i64[0] = 0x3F0000003F000000;
  v466.i64[1] = 0x3F0000003F000000;
  v467 = vmulq_n_f32(vaddq_f32(v459, v466), v465);
  v502 = v467.i32[2];
  v501 = v467.i64[0];
  if (v464)
  {
    if ((v464 & 0x80000000) == 0)
      goto LABEL_291;
    v468 = v462 + 2896;
    v463 = -1;
    v469 = 2;
  }
  else
  {
    v468 = v462 + 2896;
    v469 = 0;
  }
  sub_223FFDF1C(v468, &v501, v463, v469, v465);
LABEL_291:
  v470 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v471 = *(_BYTE *)(***(_QWORD ***)a1 + 7921);
  v472 = *(char *)(***(_QWORD ***)a1 + 7926);
  v473 = *(float *)(*(_QWORD *)(v470 + 40784) + 312);
  *(float32x2_t *)v467.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v467.f32[2] = (float)(a2[1].i32[0] + 4);
  v474.i64[0] = 0x3F0000003F000000;
  v474.i64[1] = 0x3F0000003F000000;
  v475 = vmulq_n_f32(vaddq_f32(v467, v474), v473);
  v502 = v475.i32[2];
  v501 = v475.i64[0];
  if (v472)
  {
    if ((v472 & 0x80000000) == 0)
      goto LABEL_296;
    v476 = v470 + 2896;
    v471 = -1;
    v477 = 2;
  }
  else
  {
    v476 = v470 + 2896;
    v477 = 0;
  }
  sub_223FFDF1C(v476, &v501, v471, v477, v473);
LABEL_296:
  v478 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v479 = *(_BYTE *)(***(_QWORD ***)a1 + 7961);
  v480 = *(char *)(***(_QWORD ***)a1 + 7966);
  v481 = *(float *)(*(_QWORD *)(v478 + 40784) + 312);
  *(float32x2_t *)v475.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v475.f32[2] = (float)(a2[1].i32[0] + 5);
  v482.i64[0] = 0x3F0000003F000000;
  v482.i64[1] = 0x3F0000003F000000;
  v483 = vmulq_n_f32(vaddq_f32(v475, v482), v481);
  v502 = v483.i32[2];
  v501 = v483.i64[0];
  if (v480)
  {
    if ((v480 & 0x80000000) == 0)
      goto LABEL_301;
    v484 = v478 + 2896;
    v479 = -1;
    v485 = 2;
  }
  else
  {
    v484 = v478 + 2896;
    v485 = 0;
  }
  sub_223FFDF1C(v484, &v501, v479, v485, v481);
LABEL_301:
  v486 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v487 = *(_BYTE *)(***(_QWORD ***)a1 + 8001);
  v488 = *(char *)(***(_QWORD ***)a1 + 8006);
  v489 = *(float *)(*(_QWORD *)(v486 + 40784) + 312);
  *(float32x2_t *)v483.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v483.f32[2] = (float)(a2[1].i32[0] + 6);
  v490.i64[0] = 0x3F0000003F000000;
  v490.i64[1] = 0x3F0000003F000000;
  v491 = vmulq_n_f32(vaddq_f32(v483, v490), v489);
  v502 = v491.i32[2];
  v501 = v491.i64[0];
  if (v488)
  {
    if ((v488 & 0x80000000) == 0)
      goto LABEL_306;
    v492 = v486 + 2896;
    v487 = -1;
    v493 = 2;
  }
  else
  {
    v492 = v486 + 2896;
    v493 = 0;
  }
  sub_223FFDF1C(v492, &v501, v487, v493, v489);
LABEL_306:
  v494 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v495 = *(_BYTE *)(***(_QWORD ***)a1 + 8041);
  v496 = *(char *)(***(_QWORD ***)a1 + 8046);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v494 + 40784) + 312);
  *(float32x2_t *)v491.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x400000000));
  v491.f32[2] = (float)(a2[1].i32[0] + 7);
  v497.i64[0] = 0x3F0000003F000000;
  v497.i64[1] = 0x3F0000003F000000;
  v498 = vmulq_n_f32(vaddq_f32(v491, v497), *(float *)&a3);
  v502 = v498.i32[2];
  v501 = v498.i64[0];
  if (!v496)
  {
    v499 = v494 + 2896;
    v500 = 0;
    goto LABEL_310;
  }
  if (v496 < 0)
  {
    v499 = v494 + 2896;
    v495 = -1;
    v500 = 2;
LABEL_310:
    sub_223FFDF1C(v499, &v501, v495, v500, *(float *)&a3);
  }
  sub_223944730(a1, a2, a3, v498);
}

void sub_223944730(uint64_t a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  char v7;
  int v8;
  float v9;
  float32x4_t v10;
  float32x4_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  float v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  int v40;
  float v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  int v48;
  float v49;
  float32x4_t v50;
  float32x4_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  int v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  int v64;
  float v65;
  float32x4_t v66;
  float32x4_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  int v80;
  float v81;
  float32x4_t v82;
  float32x4_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  float v89;
  float32x4_t v90;
  float32x4_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char v95;
  int v96;
  float v97;
  float32x4_t v98;
  float32x4_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103;
  int v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  char v111;
  int v112;
  float v113;
  float32x4_t v114;
  float32x4_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char v119;
  int v120;
  float v121;
  float32x4_t v122;
  float32x4_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char v127;
  int v128;
  float v129;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char v135;
  int v136;
  float v137;
  float32x4_t v138;
  float32x4_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  char v151;
  int v152;
  float v153;
  float32x4_t v154;
  float32x4_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char v159;
  int v160;
  float v161;
  float32x4_t v162;
  float32x4_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  int v168;
  float v169;
  float32x4_t v170;
  float32x4_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  int v176;
  float v177;
  float32x4_t v178;
  float32x4_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  char v183;
  int v184;
  float v185;
  float32x4_t v186;
  float32x4_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  char v191;
  int v192;
  float v193;
  float32x4_t v194;
  float32x4_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  char v199;
  int v200;
  float v201;
  float32x4_t v202;
  float32x4_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  char v207;
  int v208;
  float v209;
  float32x4_t v210;
  float32x4_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  char v223;
  int v224;
  float v225;
  float32x4_t v226;
  float32x4_t v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  char v231;
  int v232;
  float v233;
  float32x4_t v234;
  float32x4_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char v239;
  int v240;
  float v241;
  float32x4_t v242;
  float32x4_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  char v247;
  int v248;
  float v249;
  float32x4_t v250;
  float32x4_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char v255;
  int v256;
  float v257;
  float32x4_t v258;
  float32x4_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  char v263;
  int v264;
  float v265;
  float32x4_t v266;
  float32x4_t v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  char v271;
  int v272;
  float v273;
  float32x4_t v274;
  float32x4_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  char v279;
  int v280;
  float v281;
  float32x4_t v282;
  float32x4_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  char v287;
  int v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  char v295;
  int v296;
  float v297;
  float32x4_t v298;
  float32x4_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  char v303;
  int v304;
  float v305;
  float32x4_t v306;
  float32x4_t v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  char v311;
  int v312;
  float v313;
  float32x4_t v314;
  float32x4_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  char v319;
  int v320;
  float v321;
  float32x4_t v322;
  float32x4_t v323;
  uint64_t v324;
  int v325;
  uint64_t v326;
  char v327;
  int v328;
  float v329;
  float32x4_t v330;
  float32x4_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  char v335;
  int v336;
  float v337;
  float32x4_t v338;
  float32x4_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  char v343;
  int v344;
  float v345;
  float32x4_t v346;
  float32x4_t v347;
  uint64_t v348;
  int v349;
  uint64_t v350;
  char v351;
  int v352;
  float v353;
  float32x4_t v354;
  float32x4_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  char v359;
  int v360;
  float v361;
  float32x4_t v362;
  float32x4_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  char v367;
  int v368;
  float v369;
  float32x4_t v370;
  float32x4_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  char v375;
  int v376;
  float v377;
  float32x4_t v378;
  float32x4_t v379;
  uint64_t v380;
  int v381;
  uint64_t v382;
  char v383;
  int v384;
  float v385;
  float32x4_t v386;
  float32x4_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  char v391;
  int v392;
  float v393;
  float32x4_t v394;
  float32x4_t v395;
  uint64_t v396;
  int v397;
  uint64_t v398;
  char v399;
  int v400;
  float v401;
  float32x4_t v402;
  float32x4_t v403;
  uint64_t v404;
  int v405;
  uint64_t v406;
  char v407;
  int v408;
  float v409;
  float32x4_t v410;
  float32x4_t v411;
  uint64_t v412;
  int v413;
  uint64_t v414;
  char v415;
  int v416;
  float v417;
  float32x4_t v418;
  float32x4_t v419;
  uint64_t v420;
  int v421;
  uint64_t v422;
  char v423;
  int v424;
  float v425;
  float32x4_t v426;
  float32x4_t v427;
  uint64_t v428;
  int v429;
  uint64_t v430;
  char v431;
  int v432;
  float v433;
  float32x4_t v434;
  float32x4_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  char v439;
  int v440;
  float v441;
  float32x4_t v442;
  float32x4_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  char v447;
  int v448;
  float v449;
  float32x4_t v450;
  float32x4_t v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  char v455;
  int v456;
  float v457;
  float32x4_t v458;
  float32x4_t v459;
  uint64_t v460;
  int v461;
  uint64_t v462;
  char v463;
  int v464;
  float v465;
  float32x4_t v466;
  float32x4_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  char v471;
  int v472;
  float v473;
  float32x4_t v474;
  float32x4_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  char v479;
  int v480;
  float v481;
  float32x4_t v482;
  float32x4_t v483;
  uint64_t v484;
  int v485;
  uint64_t v486;
  char v487;
  int v488;
  float v489;
  float32x4_t v490;
  float32x4_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  char v495;
  int v496;
  float32x4_t v497;
  float32x4_t v498;
  uint64_t v499;
  int v500;
  uint64_t v501;
  __int32 v502;

  v6 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v7 = *(_BYTE *)(***(_QWORD ***)a1 + 8081);
  v8 = *(char *)(***(_QWORD ***)a1 + 8086);
  v9 = *(float *)(*(_QWORD *)(v6 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  a4.f32[2] = (float)(a2[1].i32[0] + 6);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  v11 = vmulq_n_f32(vaddq_f32(a4, v10), v9);
  v502 = v11.i32[2];
  v501 = v11.i64[0];
  if (v8)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
    v12 = v6 + 2896;
    v7 = -1;
    v13 = 2;
  }
  else
  {
    v12 = v6 + 2896;
    v13 = 0;
  }
  sub_223FFDF1C(v12, &v501, v7, v13, v9);
LABEL_6:
  v14 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v15 = *(_BYTE *)(***(_QWORD ***)a1 + 8121);
  v16 = *(char *)(***(_QWORD ***)a1 + 8126);
  v17 = *(float *)(*(_QWORD *)(v14 + 40784) + 312);
  *(float32x2_t *)v11.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x500000000));
  v11.f32[2] = (float)(a2[1].i32[0] + 7);
  v18.i64[0] = 0x3F0000003F000000;
  v18.i64[1] = 0x3F0000003F000000;
  v19 = vmulq_n_f32(vaddq_f32(v11, v18), v17);
  v502 = v19.i32[2];
  v501 = v19.i64[0];
  if (v16)
  {
    if ((v16 & 0x80000000) == 0)
      goto LABEL_11;
    v20 = v14 + 2896;
    v15 = -1;
    v21 = 2;
  }
  else
  {
    v20 = v14 + 2896;
    v21 = 0;
  }
  sub_223FFDF1C(v20, &v501, v15, v21, v17);
LABEL_11:
  v22 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v23 = *(_BYTE *)(***(_QWORD ***)a1 + 8161);
  v24 = *(char *)(***(_QWORD ***)a1 + 8166);
  v25 = *(float *)(*(_QWORD *)(v22 + 40784) + 312);
  *(float32x2_t *)v19.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v19.f32[2] = (float)(a2[1].i32[0] + 6);
  v26.i64[0] = 0x3F0000003F000000;
  v26.i64[1] = 0x3F0000003F000000;
  v27 = vmulq_n_f32(vaddq_f32(v19, v26), v25);
  v502 = v27.i32[2];
  v501 = v27.i64[0];
  if (v24)
  {
    if ((v24 & 0x80000000) == 0)
      goto LABEL_16;
    v28 = v22 + 2896;
    v23 = -1;
    v29 = 2;
  }
  else
  {
    v28 = v22 + 2896;
    v29 = 0;
  }
  sub_223FFDF1C(v28, &v501, v23, v29, v25);
LABEL_16:
  v30 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v31 = *(_BYTE *)(***(_QWORD ***)a1 + 8201);
  v32 = *(char *)(***(_QWORD ***)a1 + 8206);
  v33 = *(float *)(*(_QWORD *)(v30 + 40784) + 312);
  *(float32x2_t *)v27.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000001));
  v27.f32[2] = (float)(a2[1].i32[0] + 7);
  v34.i64[0] = 0x3F0000003F000000;
  v34.i64[1] = 0x3F0000003F000000;
  v35 = vmulq_n_f32(vaddq_f32(v27, v34), v33);
  v502 = v35.i32[2];
  v501 = v35.i64[0];
  if (v32)
  {
    if ((v32 & 0x80000000) == 0)
      goto LABEL_21;
    v36 = v30 + 2896;
    v31 = -1;
    v37 = 2;
  }
  else
  {
    v36 = v30 + 2896;
    v37 = 0;
  }
  sub_223FFDF1C(v36, &v501, v31, v37, v33);
LABEL_21:
  v38 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v39 = *(_BYTE *)(***(_QWORD ***)a1 + 8241);
  v40 = *(char *)(***(_QWORD ***)a1 + 8246);
  v41 = *(float *)(*(_QWORD *)(v38 + 40784) + 312);
  *(float32x2_t *)v35.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v35.f32[2] = (float)(a2[1].i32[0] + 6);
  v42.i64[0] = 0x3F0000003F000000;
  v42.i64[1] = 0x3F0000003F000000;
  v43 = vmulq_n_f32(vaddq_f32(v35, v42), v41);
  v502 = v43.i32[2];
  v501 = v43.i64[0];
  if (v40)
  {
    if ((v40 & 0x80000000) == 0)
      goto LABEL_26;
    v44 = v38 + 2896;
    v39 = -1;
    v45 = 2;
  }
  else
  {
    v44 = v38 + 2896;
    v45 = 0;
  }
  sub_223FFDF1C(v44, &v501, v39, v45, v41);
LABEL_26:
  v46 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v47 = *(_BYTE *)(***(_QWORD ***)a1 + 8281);
  v48 = *(char *)(***(_QWORD ***)a1 + 8286);
  v49 = *(float *)(*(_QWORD *)(v46 + 40784) + 312);
  *(float32x2_t *)v43.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000001));
  v43.f32[2] = (float)(a2[1].i32[0] + 7);
  v50.i64[0] = 0x3F0000003F000000;
  v50.i64[1] = 0x3F0000003F000000;
  v51 = vmulq_n_f32(vaddq_f32(v43, v50), v49);
  v502 = v51.i32[2];
  v501 = v51.i64[0];
  if (v48)
  {
    if ((v48 & 0x80000000) == 0)
      goto LABEL_31;
    v52 = v46 + 2896;
    v47 = -1;
    v53 = 2;
  }
  else
  {
    v52 = v46 + 2896;
    v53 = 0;
  }
  sub_223FFDF1C(v52, &v501, v47, v53, v49);
LABEL_31:
  v54 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v55 = *(_BYTE *)(***(_QWORD ***)a1 + 8321);
  v56 = *(char *)(***(_QWORD ***)a1 + 8326);
  v57 = *(float *)(*(_QWORD *)(v54 + 40784) + 312);
  *(float32x2_t *)v51.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v51.f32[2] = (float)(a2[1].i32[0] + 4);
  v58.i64[0] = 0x3F0000003F000000;
  v58.i64[1] = 0x3F0000003F000000;
  v59 = vmulq_n_f32(vaddq_f32(v51, v58), v57);
  v502 = v59.i32[2];
  v501 = v59.i64[0];
  if (v56)
  {
    if ((v56 & 0x80000000) == 0)
      goto LABEL_36;
    v60 = v54 + 2896;
    v55 = -1;
    v61 = 2;
  }
  else
  {
    v60 = v54 + 2896;
    v61 = 0;
  }
  sub_223FFDF1C(v60, &v501, v55, v61, v57);
LABEL_36:
  v62 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v63 = *(_BYTE *)(***(_QWORD ***)a1 + 8361);
  v64 = *(char *)(***(_QWORD ***)a1 + 8366);
  v65 = *(float *)(*(_QWORD *)(v62 + 40784) + 312);
  *(float32x2_t *)v59.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v59.f32[2] = (float)(a2[1].i32[0] + 5);
  v66.i64[0] = 0x3F0000003F000000;
  v66.i64[1] = 0x3F0000003F000000;
  v67 = vmulq_n_f32(vaddq_f32(v59, v66), v65);
  v502 = v67.i32[2];
  v501 = v67.i64[0];
  if (v64)
  {
    if ((v64 & 0x80000000) == 0)
      goto LABEL_41;
    v68 = v62 + 2896;
    v63 = -1;
    v69 = 2;
  }
  else
  {
    v68 = v62 + 2896;
    v69 = 0;
  }
  sub_223FFDF1C(v68, &v501, v63, v69, v65);
LABEL_41:
  v70 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v71 = *(_BYTE *)(***(_QWORD ***)a1 + 8401);
  v72 = *(char *)(***(_QWORD ***)a1 + 8406);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v67.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v67.f32[2] = (float)(a2[1].i32[0] + 4);
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v67, v74), v73);
  v502 = v75.i32[2];
  v501 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_46;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v501, v71, v77, v73);
LABEL_46:
  v78 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v79 = *(_BYTE *)(***(_QWORD ***)a1 + 8441);
  v80 = *(char *)(***(_QWORD ***)a1 + 8446);
  v81 = *(float *)(*(_QWORD *)(v78 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v75.f32[2] = (float)(a2[1].i32[0] + 5);
  v82.i64[0] = 0x3F0000003F000000;
  v82.i64[1] = 0x3F0000003F000000;
  v83 = vmulq_n_f32(vaddq_f32(v75, v82), v81);
  v502 = v83.i32[2];
  v501 = v83.i64[0];
  if (v80)
  {
    if ((v80 & 0x80000000) == 0)
      goto LABEL_51;
    v84 = v78 + 2896;
    v79 = -1;
    v85 = 2;
  }
  else
  {
    v84 = v78 + 2896;
    v85 = 0;
  }
  sub_223FFDF1C(v84, &v501, v79, v85, v81);
LABEL_51:
  v86 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v87 = *(_BYTE *)(***(_QWORD ***)a1 + 8481);
  v88 = *(char *)(***(_QWORD ***)a1 + 8486);
  v89 = *(float *)(*(_QWORD *)(v86 + 40784) + 312);
  *(float32x2_t *)v83.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v83.f32[2] = (float)(a2[1].i32[0] + 4);
  v90.i64[0] = 0x3F0000003F000000;
  v90.i64[1] = 0x3F0000003F000000;
  v91 = vmulq_n_f32(vaddq_f32(v83, v90), v89);
  v502 = v91.i32[2];
  v501 = v91.i64[0];
  if (v88)
  {
    if ((v88 & 0x80000000) == 0)
      goto LABEL_56;
    v92 = v86 + 2896;
    v87 = -1;
    v93 = 2;
  }
  else
  {
    v92 = v86 + 2896;
    v93 = 0;
  }
  sub_223FFDF1C(v92, &v501, v87, v93, v89);
LABEL_56:
  v94 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v95 = *(_BYTE *)(***(_QWORD ***)a1 + 8521);
  v96 = *(char *)(***(_QWORD ***)a1 + 8526);
  v97 = *(float *)(*(_QWORD *)(v94 + 40784) + 312);
  *(float32x2_t *)v91.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v91.f32[2] = (float)(a2[1].i32[0] + 5);
  v98.i64[0] = 0x3F0000003F000000;
  v98.i64[1] = 0x3F0000003F000000;
  v99 = vmulq_n_f32(vaddq_f32(v91, v98), v97);
  v502 = v99.i32[2];
  v501 = v99.i64[0];
  if (v96)
  {
    if ((v96 & 0x80000000) == 0)
      goto LABEL_61;
    v100 = v94 + 2896;
    v95 = -1;
    v101 = 2;
  }
  else
  {
    v100 = v94 + 2896;
    v101 = 0;
  }
  sub_223FFDF1C(v100, &v501, v95, v101, v97);
LABEL_61:
  v102 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v103 = *(_BYTE *)(***(_QWORD ***)a1 + 8561);
  v104 = *(char *)(***(_QWORD ***)a1 + 8566);
  v105 = *(float *)(*(_QWORD *)(v102 + 40784) + 312);
  *(float32x2_t *)v99.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v99.f32[2] = (float)(a2[1].i32[0] + 4);
  v106.i64[0] = 0x3F0000003F000000;
  v106.i64[1] = 0x3F0000003F000000;
  v107 = vmulq_n_f32(vaddq_f32(v99, v106), v105);
  v502 = v107.i32[2];
  v501 = v107.i64[0];
  if (v104)
  {
    if ((v104 & 0x80000000) == 0)
      goto LABEL_66;
    v108 = v102 + 2896;
    v103 = -1;
    v109 = 2;
  }
  else
  {
    v108 = v102 + 2896;
    v109 = 0;
  }
  sub_223FFDF1C(v108, &v501, v103, v109, v105);
LABEL_66:
  v110 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v111 = *(_BYTE *)(***(_QWORD ***)a1 + 8601);
  v112 = *(char *)(***(_QWORD ***)a1 + 8606);
  v113 = *(float *)(*(_QWORD *)(v110 + 40784) + 312);
  *(float32x2_t *)v107.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v107.f32[2] = (float)(a2[1].i32[0] + 5);
  v114.i64[0] = 0x3F0000003F000000;
  v114.i64[1] = 0x3F0000003F000000;
  v115 = vmulq_n_f32(vaddq_f32(v107, v114), v113);
  v502 = v115.i32[2];
  v501 = v115.i64[0];
  if (v112)
  {
    if ((v112 & 0x80000000) == 0)
      goto LABEL_71;
    v116 = v110 + 2896;
    v111 = -1;
    v117 = 2;
  }
  else
  {
    v116 = v110 + 2896;
    v117 = 0;
  }
  sub_223FFDF1C(v116, &v501, v111, v117, v113);
LABEL_71:
  v118 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v119 = *(_BYTE *)(***(_QWORD ***)a1 + 8641);
  v120 = *(char *)(***(_QWORD ***)a1 + 8646);
  v121 = *(float *)(*(_QWORD *)(v118 + 40784) + 312);
  *(float32x2_t *)v115.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v115.f32[2] = (float)(a2[1].i32[0] + 6);
  v122.i64[0] = 0x3F0000003F000000;
  v122.i64[1] = 0x3F0000003F000000;
  v123 = vmulq_n_f32(vaddq_f32(v115, v122), v121);
  v502 = v123.i32[2];
  v501 = v123.i64[0];
  if (v120)
  {
    if ((v120 & 0x80000000) == 0)
      goto LABEL_76;
    v124 = v118 + 2896;
    v119 = -1;
    v125 = 2;
  }
  else
  {
    v124 = v118 + 2896;
    v125 = 0;
  }
  sub_223FFDF1C(v124, &v501, v119, v125, v121);
LABEL_76:
  v126 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v127 = *(_BYTE *)(***(_QWORD ***)a1 + 8681);
  v128 = *(char *)(***(_QWORD ***)a1 + 8686);
  v129 = *(float *)(*(_QWORD *)(v126 + 40784) + 312);
  *(float32x2_t *)v123.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x600000000));
  v123.f32[2] = (float)(a2[1].i32[0] + 7);
  v130.i64[0] = 0x3F0000003F000000;
  v130.i64[1] = 0x3F0000003F000000;
  v131 = vmulq_n_f32(vaddq_f32(v123, v130), v129);
  v502 = v131.i32[2];
  v501 = v131.i64[0];
  if (v128)
  {
    if ((v128 & 0x80000000) == 0)
      goto LABEL_81;
    v132 = v126 + 2896;
    v127 = -1;
    v133 = 2;
  }
  else
  {
    v132 = v126 + 2896;
    v133 = 0;
  }
  sub_223FFDF1C(v132, &v501, v127, v133, v129);
LABEL_81:
  v134 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v135 = *(_BYTE *)(***(_QWORD ***)a1 + 8721);
  v136 = *(char *)(***(_QWORD ***)a1 + 8726);
  v137 = *(float *)(*(_QWORD *)(v134 + 40784) + 312);
  *(float32x2_t *)v131.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v131.f32[2] = (float)(a2[1].i32[0] + 6);
  v138.i64[0] = 0x3F0000003F000000;
  v138.i64[1] = 0x3F0000003F000000;
  v139 = vmulq_n_f32(vaddq_f32(v131, v138), v137);
  v502 = v139.i32[2];
  v501 = v139.i64[0];
  if (v136)
  {
    if ((v136 & 0x80000000) == 0)
      goto LABEL_86;
    v140 = v134 + 2896;
    v135 = -1;
    v141 = 2;
  }
  else
  {
    v140 = v134 + 2896;
    v141 = 0;
  }
  sub_223FFDF1C(v140, &v501, v135, v141, v137);
LABEL_86:
  v142 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v143 = *(_BYTE *)(***(_QWORD ***)a1 + 8761);
  v144 = *(char *)(***(_QWORD ***)a1 + 8766);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v139.f32 = vcvt_f32_s32((int32x2_t)(*(_QWORD *)a2 + 0x700000000));
  v139.f32[2] = (float)(a2[1].i32[0] + 7);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v139, v146), v145);
  v502 = v147.i32[2];
  v501 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_91;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v501, v143, v149, v145);
LABEL_91:
  v150 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v151 = *(_BYTE *)(***(_QWORD ***)a1 + 8801);
  v152 = *(char *)(***(_QWORD ***)a1 + 8806);
  v153 = *(float *)(*(_QWORD *)(v150 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v147.f32[2] = (float)(a2[1].i32[0] + 6);
  v154.i64[0] = 0x3F0000003F000000;
  v154.i64[1] = 0x3F0000003F000000;
  v155 = vmulq_n_f32(vaddq_f32(v147, v154), v153);
  v502 = v155.i32[2];
  v501 = v155.i64[0];
  if (v152)
  {
    if ((v152 & 0x80000000) == 0)
      goto LABEL_96;
    v156 = v150 + 2896;
    v151 = -1;
    v157 = 2;
  }
  else
  {
    v156 = v150 + 2896;
    v157 = 0;
  }
  sub_223FFDF1C(v156, &v501, v151, v157, v153);
LABEL_96:
  v158 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v159 = *(_BYTE *)(***(_QWORD ***)a1 + 8841);
  v160 = *(char *)(***(_QWORD ***)a1 + 8846);
  v161 = *(float *)(*(_QWORD *)(v158 + 40784) + 312);
  *(float32x2_t *)v155.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000001));
  v155.f32[2] = (float)(a2[1].i32[0] + 7);
  v162.i64[0] = 0x3F0000003F000000;
  v162.i64[1] = 0x3F0000003F000000;
  v163 = vmulq_n_f32(vaddq_f32(v155, v162), v161);
  v502 = v163.i32[2];
  v501 = v163.i64[0];
  if (v160)
  {
    if ((v160 & 0x80000000) == 0)
      goto LABEL_101;
    v164 = v158 + 2896;
    v159 = -1;
    v165 = 2;
  }
  else
  {
    v164 = v158 + 2896;
    v165 = 0;
  }
  sub_223FFDF1C(v164, &v501, v159, v165, v161);
LABEL_101:
  v166 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v167 = *(_BYTE *)(***(_QWORD ***)a1 + 8881);
  v168 = *(char *)(***(_QWORD ***)a1 + 8886);
  v169 = *(float *)(*(_QWORD *)(v166 + 40784) + 312);
  *(float32x2_t *)v163.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v163.f32[2] = (float)(a2[1].i32[0] + 6);
  v170.i64[0] = 0x3F0000003F000000;
  v170.i64[1] = 0x3F0000003F000000;
  v171 = vmulq_n_f32(vaddq_f32(v163, v170), v169);
  v502 = v171.i32[2];
  v501 = v171.i64[0];
  if (v168)
  {
    if ((v168 & 0x80000000) == 0)
      goto LABEL_106;
    v172 = v166 + 2896;
    v167 = -1;
    v173 = 2;
  }
  else
  {
    v172 = v166 + 2896;
    v173 = 0;
  }
  sub_223FFDF1C(v172, &v501, v167, v173, v169);
LABEL_106:
  v174 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v175 = *(_BYTE *)(***(_QWORD ***)a1 + 8921);
  v176 = *(char *)(***(_QWORD ***)a1 + 8926);
  v177 = *(float *)(*(_QWORD *)(v174 + 40784) + 312);
  *(float32x2_t *)v171.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000001));
  v171.f32[2] = (float)(a2[1].i32[0] + 7);
  v178.i64[0] = 0x3F0000003F000000;
  v178.i64[1] = 0x3F0000003F000000;
  v179 = vmulq_n_f32(vaddq_f32(v171, v178), v177);
  v502 = v179.i32[2];
  v501 = v179.i64[0];
  if (v176)
  {
    if ((v176 & 0x80000000) == 0)
      goto LABEL_111;
    v180 = v174 + 2896;
    v175 = -1;
    v181 = 2;
  }
  else
  {
    v180 = v174 + 2896;
    v181 = 0;
  }
  sub_223FFDF1C(v180, &v501, v175, v181, v177);
LABEL_111:
  v182 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v183 = *(_BYTE *)(***(_QWORD ***)a1 + 8961);
  v184 = *(char *)(***(_QWORD ***)a1 + 8966);
  v185 = *(float *)(*(_QWORD *)(v182 + 40784) + 312);
  *(float32x2_t *)v179.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v179.f32[2] = (float)(a2[1].i32[0] + 4);
  v186.i64[0] = 0x3F0000003F000000;
  v186.i64[1] = 0x3F0000003F000000;
  v187 = vmulq_n_f32(vaddq_f32(v179, v186), v185);
  v502 = v187.i32[2];
  v501 = v187.i64[0];
  if (v184)
  {
    if ((v184 & 0x80000000) == 0)
      goto LABEL_116;
    v188 = v182 + 2896;
    v183 = -1;
    v189 = 2;
  }
  else
  {
    v188 = v182 + 2896;
    v189 = 0;
  }
  sub_223FFDF1C(v188, &v501, v183, v189, v185);
LABEL_116:
  v190 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v191 = *(_BYTE *)(***(_QWORD ***)a1 + 9001);
  v192 = *(char *)(***(_QWORD ***)a1 + 9006);
  v193 = *(float *)(*(_QWORD *)(v190 + 40784) + 312);
  *(float32x2_t *)v187.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v187.f32[2] = (float)(a2[1].i32[0] + 5);
  v194.i64[0] = 0x3F0000003F000000;
  v194.i64[1] = 0x3F0000003F000000;
  v195 = vmulq_n_f32(vaddq_f32(v187, v194), v193);
  v502 = v195.i32[2];
  v501 = v195.i64[0];
  if (v192)
  {
    if ((v192 & 0x80000000) == 0)
      goto LABEL_121;
    v196 = v190 + 2896;
    v191 = -1;
    v197 = 2;
  }
  else
  {
    v196 = v190 + 2896;
    v197 = 0;
  }
  sub_223FFDF1C(v196, &v501, v191, v197, v193);
LABEL_121:
  v198 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v199 = *(_BYTE *)(***(_QWORD ***)a1 + 9041);
  v200 = *(char *)(***(_QWORD ***)a1 + 9046);
  v201 = *(float *)(*(_QWORD *)(v198 + 40784) + 312);
  *(float32x2_t *)v195.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v195.f32[2] = (float)(a2[1].i32[0] + 4);
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  v203 = vmulq_n_f32(vaddq_f32(v195, v202), v201);
  v502 = v203.i32[2];
  v501 = v203.i64[0];
  if (v200)
  {
    if ((v200 & 0x80000000) == 0)
      goto LABEL_126;
    v204 = v198 + 2896;
    v199 = -1;
    v205 = 2;
  }
  else
  {
    v204 = v198 + 2896;
    v205 = 0;
  }
  sub_223FFDF1C(v204, &v501, v199, v205, v201);
LABEL_126:
  v206 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v207 = *(_BYTE *)(***(_QWORD ***)a1 + 9081);
  v208 = *(char *)(***(_QWORD ***)a1 + 9086);
  v209 = *(float *)(*(_QWORD *)(v206 + 40784) + 312);
  *(float32x2_t *)v203.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v203.f32[2] = (float)(a2[1].i32[0] + 5);
  v210.i64[0] = 0x3F0000003F000000;
  v210.i64[1] = 0x3F0000003F000000;
  v211 = vmulq_n_f32(vaddq_f32(v203, v210), v209);
  v502 = v211.i32[2];
  v501 = v211.i64[0];
  if (v208)
  {
    if ((v208 & 0x80000000) == 0)
      goto LABEL_131;
    v212 = v206 + 2896;
    v207 = -1;
    v213 = 2;
  }
  else
  {
    v212 = v206 + 2896;
    v213 = 0;
  }
  sub_223FFDF1C(v212, &v501, v207, v213, v209);
LABEL_131:
  v214 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v215 = *(_BYTE *)(***(_QWORD ***)a1 + 9121);
  v216 = *(char *)(***(_QWORD ***)a1 + 9126);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v211.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v211.f32[2] = (float)(a2[1].i32[0] + 4);
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v211, v218), v217);
  v502 = v219.i32[2];
  v501 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_136;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v501, v215, v221, v217);
LABEL_136:
  v222 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v223 = *(_BYTE *)(***(_QWORD ***)a1 + 9161);
  v224 = *(char *)(***(_QWORD ***)a1 + 9166);
  v225 = *(float *)(*(_QWORD *)(v222 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v219.f32[2] = (float)(a2[1].i32[0] + 5);
  v226.i64[0] = 0x3F0000003F000000;
  v226.i64[1] = 0x3F0000003F000000;
  v227 = vmulq_n_f32(vaddq_f32(v219, v226), v225);
  v502 = v227.i32[2];
  v501 = v227.i64[0];
  if (v224)
  {
    if ((v224 & 0x80000000) == 0)
      goto LABEL_141;
    v228 = v222 + 2896;
    v223 = -1;
    v229 = 2;
  }
  else
  {
    v228 = v222 + 2896;
    v229 = 0;
  }
  sub_223FFDF1C(v228, &v501, v223, v229, v225);
LABEL_141:
  v230 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v231 = *(_BYTE *)(***(_QWORD ***)a1 + 9201);
  v232 = *(char *)(***(_QWORD ***)a1 + 9206);
  v233 = *(float *)(*(_QWORD *)(v230 + 40784) + 312);
  *(float32x2_t *)v227.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v227.f32[2] = (float)(a2[1].i32[0] + 4);
  v234.i64[0] = 0x3F0000003F000000;
  v234.i64[1] = 0x3F0000003F000000;
  v235 = vmulq_n_f32(vaddq_f32(v227, v234), v233);
  v502 = v235.i32[2];
  v501 = v235.i64[0];
  if (v232)
  {
    if ((v232 & 0x80000000) == 0)
      goto LABEL_146;
    v236 = v230 + 2896;
    v231 = -1;
    v237 = 2;
  }
  else
  {
    v236 = v230 + 2896;
    v237 = 0;
  }
  sub_223FFDF1C(v236, &v501, v231, v237, v233);
LABEL_146:
  v238 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v239 = *(_BYTE *)(***(_QWORD ***)a1 + 9241);
  v240 = *(char *)(***(_QWORD ***)a1 + 9246);
  v241 = *(float *)(*(_QWORD *)(v238 + 40784) + 312);
  *(float32x2_t *)v235.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v235.f32[2] = (float)(a2[1].i32[0] + 5);
  v242.i64[0] = 0x3F0000003F000000;
  v242.i64[1] = 0x3F0000003F000000;
  v243 = vmulq_n_f32(vaddq_f32(v235, v242), v241);
  v502 = v243.i32[2];
  v501 = v243.i64[0];
  if (v240)
  {
    if ((v240 & 0x80000000) == 0)
      goto LABEL_151;
    v244 = v238 + 2896;
    v239 = -1;
    v245 = 2;
  }
  else
  {
    v244 = v238 + 2896;
    v245 = 0;
  }
  sub_223FFDF1C(v244, &v501, v239, v245, v241);
LABEL_151:
  v246 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v247 = *(_BYTE *)(***(_QWORD ***)a1 + 9281);
  v248 = *(char *)(***(_QWORD ***)a1 + 9286);
  v249 = *(float *)(*(_QWORD *)(v246 + 40784) + 312);
  *(float32x2_t *)v243.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v243.f32[2] = (float)(a2[1].i32[0] + 6);
  v250.i64[0] = 0x3F0000003F000000;
  v250.i64[1] = 0x3F0000003F000000;
  v251 = vmulq_n_f32(vaddq_f32(v243, v250), v249);
  v502 = v251.i32[2];
  v501 = v251.i64[0];
  if (v248)
  {
    if ((v248 & 0x80000000) == 0)
      goto LABEL_156;
    v252 = v246 + 2896;
    v247 = -1;
    v253 = 2;
  }
  else
  {
    v252 = v246 + 2896;
    v253 = 0;
  }
  sub_223FFDF1C(v252, &v501, v247, v253, v249);
LABEL_156:
  v254 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v255 = *(_BYTE *)(***(_QWORD ***)a1 + 9321);
  v256 = *(char *)(***(_QWORD ***)a1 + 9326);
  v257 = *(float *)(*(_QWORD *)(v254 + 40784) + 312);
  *(float32x2_t *)v251.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000002));
  v251.f32[2] = (float)(a2[1].i32[0] + 7);
  v258.i64[0] = 0x3F0000003F000000;
  v258.i64[1] = 0x3F0000003F000000;
  v259 = vmulq_n_f32(vaddq_f32(v251, v258), v257);
  v502 = v259.i32[2];
  v501 = v259.i64[0];
  if (v256)
  {
    if ((v256 & 0x80000000) == 0)
      goto LABEL_161;
    v260 = v254 + 2896;
    v255 = -1;
    v261 = 2;
  }
  else
  {
    v260 = v254 + 2896;
    v261 = 0;
  }
  sub_223FFDF1C(v260, &v501, v255, v261, v257);
LABEL_161:
  v262 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v263 = *(_BYTE *)(***(_QWORD ***)a1 + 9361);
  v264 = *(char *)(***(_QWORD ***)a1 + 9366);
  v265 = *(float *)(*(_QWORD *)(v262 + 40784) + 312);
  *(float32x2_t *)v259.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v259.f32[2] = (float)(a2[1].i32[0] + 6);
  v266.i64[0] = 0x3F0000003F000000;
  v266.i64[1] = 0x3F0000003F000000;
  v267 = vmulq_n_f32(vaddq_f32(v259, v266), v265);
  v502 = v267.i32[2];
  v501 = v267.i64[0];
  if (v264)
  {
    if ((v264 & 0x80000000) == 0)
      goto LABEL_166;
    v268 = v262 + 2896;
    v263 = -1;
    v269 = 2;
  }
  else
  {
    v268 = v262 + 2896;
    v269 = 0;
  }
  sub_223FFDF1C(v268, &v501, v263, v269, v265);
LABEL_166:
  v270 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v271 = *(_BYTE *)(***(_QWORD ***)a1 + 9401);
  v272 = *(char *)(***(_QWORD ***)a1 + 9406);
  v273 = *(float *)(*(_QWORD *)(v270 + 40784) + 312);
  *(float32x2_t *)v267.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000002));
  v267.f32[2] = (float)(a2[1].i32[0] + 7);
  v274.i64[0] = 0x3F0000003F000000;
  v274.i64[1] = 0x3F0000003F000000;
  v275 = vmulq_n_f32(vaddq_f32(v267, v274), v273);
  v502 = v275.i32[2];
  v501 = v275.i64[0];
  if (v272)
  {
    if ((v272 & 0x80000000) == 0)
      goto LABEL_171;
    v276 = v270 + 2896;
    v271 = -1;
    v277 = 2;
  }
  else
  {
    v276 = v270 + 2896;
    v277 = 0;
  }
  sub_223FFDF1C(v276, &v501, v271, v277, v273);
LABEL_171:
  v278 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v279 = *(_BYTE *)(***(_QWORD ***)a1 + 9441);
  v280 = *(char *)(***(_QWORD ***)a1 + 9446);
  v281 = *(float *)(*(_QWORD *)(v278 + 40784) + 312);
  *(float32x2_t *)v275.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v275.f32[2] = (float)(a2[1].i32[0] + 6);
  v282.i64[0] = 0x3F0000003F000000;
  v282.i64[1] = 0x3F0000003F000000;
  v283 = vmulq_n_f32(vaddq_f32(v275, v282), v281);
  v502 = v283.i32[2];
  v501 = v283.i64[0];
  if (v280)
  {
    if ((v280 & 0x80000000) == 0)
      goto LABEL_176;
    v284 = v278 + 2896;
    v279 = -1;
    v285 = 2;
  }
  else
  {
    v284 = v278 + 2896;
    v285 = 0;
  }
  sub_223FFDF1C(v284, &v501, v279, v285, v281);
LABEL_176:
  v286 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v287 = *(_BYTE *)(***(_QWORD ***)a1 + 9481);
  v288 = *(char *)(***(_QWORD ***)a1 + 9486);
  v289 = *(float *)(*(_QWORD *)(v286 + 40784) + 312);
  *(float32x2_t *)v283.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000003));
  v283.f32[2] = (float)(a2[1].i32[0] + 7);
  v290.i64[0] = 0x3F0000003F000000;
  v290.i64[1] = 0x3F0000003F000000;
  v291 = vmulq_n_f32(vaddq_f32(v283, v290), v289);
  v502 = v291.i32[2];
  v501 = v291.i64[0];
  if (v288)
  {
    if ((v288 & 0x80000000) == 0)
      goto LABEL_181;
    v292 = v286 + 2896;
    v287 = -1;
    v293 = 2;
  }
  else
  {
    v292 = v286 + 2896;
    v293 = 0;
  }
  sub_223FFDF1C(v292, &v501, v287, v293, v289);
LABEL_181:
  v294 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v295 = *(_BYTE *)(***(_QWORD ***)a1 + 9521);
  v296 = *(char *)(***(_QWORD ***)a1 + 9526);
  v297 = *(float *)(*(_QWORD *)(v294 + 40784) + 312);
  *(float32x2_t *)v291.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v291.f32[2] = (float)(a2[1].i32[0] + 6);
  v298.i64[0] = 0x3F0000003F000000;
  v298.i64[1] = 0x3F0000003F000000;
  v299 = vmulq_n_f32(vaddq_f32(v291, v298), v297);
  v502 = v299.i32[2];
  v501 = v299.i64[0];
  if (v296)
  {
    if ((v296 & 0x80000000) == 0)
      goto LABEL_186;
    v300 = v294 + 2896;
    v295 = -1;
    v301 = 2;
  }
  else
  {
    v300 = v294 + 2896;
    v301 = 0;
  }
  sub_223FFDF1C(v300, &v501, v295, v301, v297);
LABEL_186:
  v302 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v303 = *(_BYTE *)(***(_QWORD ***)a1 + 9561);
  v304 = *(char *)(***(_QWORD ***)a1 + 9566);
  v305 = *(float *)(*(_QWORD *)(v302 + 40784) + 312);
  *(float32x2_t *)v299.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000003));
  v299.f32[2] = (float)(a2[1].i32[0] + 7);
  v306.i64[0] = 0x3F0000003F000000;
  v306.i64[1] = 0x3F0000003F000000;
  v307 = vmulq_n_f32(vaddq_f32(v299, v306), v305);
  v502 = v307.i32[2];
  v501 = v307.i64[0];
  if (v304)
  {
    if ((v304 & 0x80000000) == 0)
      goto LABEL_191;
    v308 = v302 + 2896;
    v303 = -1;
    v309 = 2;
  }
  else
  {
    v308 = v302 + 2896;
    v309 = 0;
  }
  sub_223FFDF1C(v308, &v501, v303, v309, v305);
LABEL_191:
  v310 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v311 = *(_BYTE *)(***(_QWORD ***)a1 + 9601);
  v312 = *(char *)(***(_QWORD ***)a1 + 9606);
  v313 = *(float *)(*(_QWORD *)(v310 + 40784) + 312);
  *(float32x2_t *)v307.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v307.f32[2] = (float)(a2[1].i32[0] + 4);
  v314.i64[0] = 0x3F0000003F000000;
  v314.i64[1] = 0x3F0000003F000000;
  v315 = vmulq_n_f32(vaddq_f32(v307, v314), v313);
  v502 = v315.i32[2];
  v501 = v315.i64[0];
  if (v312)
  {
    if ((v312 & 0x80000000) == 0)
      goto LABEL_196;
    v316 = v310 + 2896;
    v311 = -1;
    v317 = 2;
  }
  else
  {
    v316 = v310 + 2896;
    v317 = 0;
  }
  sub_223FFDF1C(v316, &v501, v311, v317, v313);
LABEL_196:
  v318 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v319 = *(_BYTE *)(***(_QWORD ***)a1 + 9641);
  v320 = *(char *)(***(_QWORD ***)a1 + 9646);
  v321 = *(float *)(*(_QWORD *)(v318 + 40784) + 312);
  *(float32x2_t *)v315.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v315.f32[2] = (float)(a2[1].i32[0] + 5);
  v322.i64[0] = 0x3F0000003F000000;
  v322.i64[1] = 0x3F0000003F000000;
  v323 = vmulq_n_f32(vaddq_f32(v315, v322), v321);
  v502 = v323.i32[2];
  v501 = v323.i64[0];
  if (v320)
  {
    if ((v320 & 0x80000000) == 0)
      goto LABEL_201;
    v324 = v318 + 2896;
    v319 = -1;
    v325 = 2;
  }
  else
  {
    v324 = v318 + 2896;
    v325 = 0;
  }
  sub_223FFDF1C(v324, &v501, v319, v325, v321);
LABEL_201:
  v326 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v327 = *(_BYTE *)(***(_QWORD ***)a1 + 9681);
  v328 = *(char *)(***(_QWORD ***)a1 + 9686);
  v329 = *(float *)(*(_QWORD *)(v326 + 40784) + 312);
  *(float32x2_t *)v323.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v323.f32[2] = (float)(a2[1].i32[0] + 4);
  v330.i64[0] = 0x3F0000003F000000;
  v330.i64[1] = 0x3F0000003F000000;
  v331 = vmulq_n_f32(vaddq_f32(v323, v330), v329);
  v502 = v331.i32[2];
  v501 = v331.i64[0];
  if (v328)
  {
    if ((v328 & 0x80000000) == 0)
      goto LABEL_206;
    v332 = v326 + 2896;
    v327 = -1;
    v333 = 2;
  }
  else
  {
    v332 = v326 + 2896;
    v333 = 0;
  }
  sub_223FFDF1C(v332, &v501, v327, v333, v329);
LABEL_206:
  v334 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v335 = *(_BYTE *)(***(_QWORD ***)a1 + 9721);
  v336 = *(char *)(***(_QWORD ***)a1 + 9726);
  v337 = *(float *)(*(_QWORD *)(v334 + 40784) + 312);
  *(float32x2_t *)v331.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v331.f32[2] = (float)(a2[1].i32[0] + 5);
  v338.i64[0] = 0x3F0000003F000000;
  v338.i64[1] = 0x3F0000003F000000;
  v339 = vmulq_n_f32(vaddq_f32(v331, v338), v337);
  v502 = v339.i32[2];
  v501 = v339.i64[0];
  if (v336)
  {
    if ((v336 & 0x80000000) == 0)
      goto LABEL_211;
    v340 = v334 + 2896;
    v335 = -1;
    v341 = 2;
  }
  else
  {
    v340 = v334 + 2896;
    v341 = 0;
  }
  sub_223FFDF1C(v340, &v501, v335, v341, v337);
LABEL_211:
  v342 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v343 = *(_BYTE *)(***(_QWORD ***)a1 + 9761);
  v344 = *(char *)(***(_QWORD ***)a1 + 9766);
  v345 = *(float *)(*(_QWORD *)(v342 + 40784) + 312);
  *(float32x2_t *)v339.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v339.f32[2] = (float)(a2[1].i32[0] + 4);
  v346.i64[0] = 0x3F0000003F000000;
  v346.i64[1] = 0x3F0000003F000000;
  v347 = vmulq_n_f32(vaddq_f32(v339, v346), v345);
  v502 = v347.i32[2];
  v501 = v347.i64[0];
  if (v344)
  {
    if ((v344 & 0x80000000) == 0)
      goto LABEL_216;
    v348 = v342 + 2896;
    v343 = -1;
    v349 = 2;
  }
  else
  {
    v348 = v342 + 2896;
    v349 = 0;
  }
  sub_223FFDF1C(v348, &v501, v343, v349, v345);
LABEL_216:
  v350 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v351 = *(_BYTE *)(***(_QWORD ***)a1 + 9801);
  v352 = *(char *)(***(_QWORD ***)a1 + 9806);
  v353 = *(float *)(*(_QWORD *)(v350 + 40784) + 312);
  *(float32x2_t *)v347.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v347.f32[2] = (float)(a2[1].i32[0] + 5);
  v354.i64[0] = 0x3F0000003F000000;
  v354.i64[1] = 0x3F0000003F000000;
  v355 = vmulq_n_f32(vaddq_f32(v347, v354), v353);
  v502 = v355.i32[2];
  v501 = v355.i64[0];
  if (v352)
  {
    if ((v352 & 0x80000000) == 0)
      goto LABEL_221;
    v356 = v350 + 2896;
    v351 = -1;
    v357 = 2;
  }
  else
  {
    v356 = v350 + 2896;
    v357 = 0;
  }
  sub_223FFDF1C(v356, &v501, v351, v357, v353);
LABEL_221:
  v358 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v359 = *(_BYTE *)(***(_QWORD ***)a1 + 9841);
  v360 = *(char *)(***(_QWORD ***)a1 + 9846);
  v361 = *(float *)(*(_QWORD *)(v358 + 40784) + 312);
  *(float32x2_t *)v355.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v355.f32[2] = (float)(a2[1].i32[0] + 4);
  v362.i64[0] = 0x3F0000003F000000;
  v362.i64[1] = 0x3F0000003F000000;
  v363 = vmulq_n_f32(vaddq_f32(v355, v362), v361);
  v502 = v363.i32[2];
  v501 = v363.i64[0];
  if (v360)
  {
    if ((v360 & 0x80000000) == 0)
      goto LABEL_226;
    v364 = v358 + 2896;
    v359 = -1;
    v365 = 2;
  }
  else
  {
    v364 = v358 + 2896;
    v365 = 0;
  }
  sub_223FFDF1C(v364, &v501, v359, v365, v361);
LABEL_226:
  v366 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v367 = *(_BYTE *)(***(_QWORD ***)a1 + 9881);
  v368 = *(char *)(***(_QWORD ***)a1 + 9886);
  v369 = *(float *)(*(_QWORD *)(v366 + 40784) + 312);
  *(float32x2_t *)v363.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v363.f32[2] = (float)(a2[1].i32[0] + 5);
  v370.i64[0] = 0x3F0000003F000000;
  v370.i64[1] = 0x3F0000003F000000;
  v371 = vmulq_n_f32(vaddq_f32(v363, v370), v369);
  v502 = v371.i32[2];
  v501 = v371.i64[0];
  if (v368)
  {
    if ((v368 & 0x80000000) == 0)
      goto LABEL_231;
    v372 = v366 + 2896;
    v367 = -1;
    v373 = 2;
  }
  else
  {
    v372 = v366 + 2896;
    v373 = 0;
  }
  sub_223FFDF1C(v372, &v501, v367, v373, v369);
LABEL_231:
  v374 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v375 = *(_BYTE *)(***(_QWORD ***)a1 + 9921);
  v376 = *(char *)(***(_QWORD ***)a1 + 9926);
  v377 = *(float *)(*(_QWORD *)(v374 + 40784) + 312);
  *(float32x2_t *)v371.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v371.f32[2] = (float)(a2[1].i32[0] + 6);
  v378.i64[0] = 0x3F0000003F000000;
  v378.i64[1] = 0x3F0000003F000000;
  v379 = vmulq_n_f32(vaddq_f32(v371, v378), v377);
  v502 = v379.i32[2];
  v501 = v379.i64[0];
  if (v376)
  {
    if ((v376 & 0x80000000) == 0)
      goto LABEL_236;
    v380 = v374 + 2896;
    v375 = -1;
    v381 = 2;
  }
  else
  {
    v380 = v374 + 2896;
    v381 = 0;
  }
  sub_223FFDF1C(v380, &v501, v375, v381, v377);
LABEL_236:
  v382 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v383 = *(_BYTE *)(***(_QWORD ***)a1 + 9961);
  v384 = *(char *)(***(_QWORD ***)a1 + 9966);
  v385 = *(float *)(*(_QWORD *)(v382 + 40784) + 312);
  *(float32x2_t *)v379.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000002));
  v379.f32[2] = (float)(a2[1].i32[0] + 7);
  v386.i64[0] = 0x3F0000003F000000;
  v386.i64[1] = 0x3F0000003F000000;
  v387 = vmulq_n_f32(vaddq_f32(v379, v386), v385);
  v502 = v387.i32[2];
  v501 = v387.i64[0];
  if (v384)
  {
    if ((v384 & 0x80000000) == 0)
      goto LABEL_241;
    v388 = v382 + 2896;
    v383 = -1;
    v389 = 2;
  }
  else
  {
    v388 = v382 + 2896;
    v389 = 0;
  }
  sub_223FFDF1C(v388, &v501, v383, v389, v385);
LABEL_241:
  v390 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v391 = *(_BYTE *)(***(_QWORD ***)a1 + 10001);
  v392 = *(char *)(***(_QWORD ***)a1 + 10006);
  v393 = *(float *)(*(_QWORD *)(v390 + 40784) + 312);
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v387.f32[2] = (float)(a2[1].i32[0] + 6);
  v394.i64[0] = 0x3F0000003F000000;
  v394.i64[1] = 0x3F0000003F000000;
  v395 = vmulq_n_f32(vaddq_f32(v387, v394), v393);
  v502 = v395.i32[2];
  v501 = v395.i64[0];
  if (v392)
  {
    if ((v392 & 0x80000000) == 0)
      goto LABEL_246;
    v396 = v390 + 2896;
    v391 = -1;
    v397 = 2;
  }
  else
  {
    v396 = v390 + 2896;
    v397 = 0;
  }
  sub_223FFDF1C(v396, &v501, v391, v397, v393);
LABEL_246:
  v398 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v399 = *(_BYTE *)(***(_QWORD ***)a1 + 10041);
  v400 = *(char *)(***(_QWORD ***)a1 + 10046);
  v401 = *(float *)(*(_QWORD *)(v398 + 40784) + 312);
  *(float32x2_t *)v395.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000002));
  v395.f32[2] = (float)(a2[1].i32[0] + 7);
  v402.i64[0] = 0x3F0000003F000000;
  v402.i64[1] = 0x3F0000003F000000;
  v403 = vmulq_n_f32(vaddq_f32(v395, v402), v401);
  v502 = v403.i32[2];
  v501 = v403.i64[0];
  if (v400)
  {
    if ((v400 & 0x80000000) == 0)
      goto LABEL_251;
    v404 = v398 + 2896;
    v399 = -1;
    v405 = 2;
  }
  else
  {
    v404 = v398 + 2896;
    v405 = 0;
  }
  sub_223FFDF1C(v404, &v501, v399, v405, v401);
LABEL_251:
  v406 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v407 = *(_BYTE *)(***(_QWORD ***)a1 + 10081);
  v408 = *(char *)(***(_QWORD ***)a1 + 10086);
  v409 = *(float *)(*(_QWORD *)(v406 + 40784) + 312);
  *(float32x2_t *)v403.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v403.f32[2] = (float)(a2[1].i32[0] + 6);
  v410.i64[0] = 0x3F0000003F000000;
  v410.i64[1] = 0x3F0000003F000000;
  v411 = vmulq_n_f32(vaddq_f32(v403, v410), v409);
  v502 = v411.i32[2];
  v501 = v411.i64[0];
  if (v408)
  {
    if ((v408 & 0x80000000) == 0)
      goto LABEL_256;
    v412 = v406 + 2896;
    v407 = -1;
    v413 = 2;
  }
  else
  {
    v412 = v406 + 2896;
    v413 = 0;
  }
  sub_223FFDF1C(v412, &v501, v407, v413, v409);
LABEL_256:
  v414 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v415 = *(_BYTE *)(***(_QWORD ***)a1 + 10121);
  v416 = *(char *)(***(_QWORD ***)a1 + 10126);
  v417 = *(float *)(*(_QWORD *)(v414 + 40784) + 312);
  *(float32x2_t *)v411.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000003));
  v411.f32[2] = (float)(a2[1].i32[0] + 7);
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  v419 = vmulq_n_f32(vaddq_f32(v411, v418), v417);
  v502 = v419.i32[2];
  v501 = v419.i64[0];
  if (v416)
  {
    if ((v416 & 0x80000000) == 0)
      goto LABEL_261;
    v420 = v414 + 2896;
    v415 = -1;
    v421 = 2;
  }
  else
  {
    v420 = v414 + 2896;
    v421 = 0;
  }
  sub_223FFDF1C(v420, &v501, v415, v421, v417);
LABEL_261:
  v422 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v423 = *(_BYTE *)(***(_QWORD ***)a1 + 10161);
  v424 = *(char *)(***(_QWORD ***)a1 + 10166);
  v425 = *(float *)(*(_QWORD *)(v422 + 40784) + 312);
  *(float32x2_t *)v419.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v419.f32[2] = (float)(a2[1].i32[0] + 6);
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  v427 = vmulq_n_f32(vaddq_f32(v419, v426), v425);
  v502 = v427.i32[2];
  v501 = v427.i64[0];
  if (v424)
  {
    if ((v424 & 0x80000000) == 0)
      goto LABEL_266;
    v428 = v422 + 2896;
    v423 = -1;
    v429 = 2;
  }
  else
  {
    v428 = v422 + 2896;
    v429 = 0;
  }
  sub_223FFDF1C(v428, &v501, v423, v429, v425);
LABEL_266:
  v430 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v431 = *(_BYTE *)(***(_QWORD ***)a1 + 10201);
  v432 = *(char *)(***(_QWORD ***)a1 + 10206);
  v433 = *(float *)(*(_QWORD *)(v430 + 40784) + 312);
  *(float32x2_t *)v427.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000003));
  v427.f32[2] = (float)(a2[1].i32[0] + 7);
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  v435 = vmulq_n_f32(vaddq_f32(v427, v434), v433);
  v502 = v435.i32[2];
  v501 = v435.i64[0];
  if (v432)
  {
    if ((v432 & 0x80000000) == 0)
      goto LABEL_271;
    v436 = v430 + 2896;
    v431 = -1;
    v437 = 2;
  }
  else
  {
    v436 = v430 + 2896;
    v437 = 0;
  }
  sub_223FFDF1C(v436, &v501, v431, v437, v433);
LABEL_271:
  v438 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v439 = *(_BYTE *)(***(_QWORD ***)a1 + 10241);
  v435.i32[0] = a2->i32[0] + 4;
  v435.i32[1] = a2->i32[1];
  v440 = *(char *)(***(_QWORD ***)a1 + 10246);
  v441 = *(float *)(*(_QWORD *)(v438 + 40784) + 312);
  *(float32x2_t *)v435.f32 = vcvt_f32_s32(*(int32x2_t *)v435.f32);
  v435.f32[2] = (float)a2[1].i32[0];
  v442.i64[0] = 0x3F0000003F000000;
  v442.i64[1] = 0x3F0000003F000000;
  v443 = vmulq_n_f32(vaddq_f32(v435, v442), v441);
  v502 = v443.i32[2];
  v501 = v443.i64[0];
  if (v440)
  {
    if ((v440 & 0x80000000) == 0)
      goto LABEL_276;
    v444 = v438 + 2896;
    v439 = -1;
    v445 = 2;
  }
  else
  {
    v444 = v438 + 2896;
    v445 = 0;
  }
  sub_223FFDF1C(v444, &v501, v439, v445, v441);
LABEL_276:
  v446 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v447 = *(_BYTE *)(***(_QWORD ***)a1 + 10281);
  v443.i32[0] = a2->i32[0] + 4;
  v443.i32[1] = a2->i32[1];
  v448 = *(char *)(***(_QWORD ***)a1 + 10286);
  v449 = *(float *)(*(_QWORD *)(v446 + 40784) + 312);
  *(float32x2_t *)v443.f32 = vcvt_f32_s32(*(int32x2_t *)v443.f32);
  v443.f32[2] = (float)(a2[1].i32[0] + 1);
  v450.i64[0] = 0x3F0000003F000000;
  v450.i64[1] = 0x3F0000003F000000;
  v451 = vmulq_n_f32(vaddq_f32(v443, v450), v449);
  v502 = v451.i32[2];
  v501 = v451.i64[0];
  if (v448)
  {
    if ((v448 & 0x80000000) == 0)
      goto LABEL_281;
    v452 = v446 + 2896;
    v447 = -1;
    v453 = 2;
  }
  else
  {
    v452 = v446 + 2896;
    v453 = 0;
  }
  sub_223FFDF1C(v452, &v501, v447, v453, v449);
LABEL_281:
  v454 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v455 = *(_BYTE *)(***(_QWORD ***)a1 + 10321);
  v456 = *(char *)(***(_QWORD ***)a1 + 10326);
  v457 = *(float *)(*(_QWORD *)(v454 + 40784) + 312);
  *(float32x2_t *)v450.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v450.f32[2] = (float)a2[1].i32[0];
  v458.i64[0] = 0x3F0000003F000000;
  v458.i64[1] = 0x3F0000003F000000;
  v459 = vmulq_n_f32(vaddq_f32(v450, v458), v457);
  v502 = v459.i32[2];
  v501 = v459.i64[0];
  if (v456)
  {
    if ((v456 & 0x80000000) == 0)
      goto LABEL_286;
    v460 = v454 + 2896;
    v455 = -1;
    v461 = 2;
  }
  else
  {
    v460 = v454 + 2896;
    v461 = 0;
  }
  sub_223FFDF1C(v460, &v501, v455, v461, v457);
LABEL_286:
  v462 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v463 = *(_BYTE *)(***(_QWORD ***)a1 + 10361);
  v464 = *(char *)(***(_QWORD ***)a1 + 10366);
  v465 = *(float *)(*(_QWORD *)(v462 + 40784) + 312);
  *(float32x2_t *)v459.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v459.f32[2] = (float)(a2[1].i32[0] + 1);
  v466.i64[0] = 0x3F0000003F000000;
  v466.i64[1] = 0x3F0000003F000000;
  v467 = vmulq_n_f32(vaddq_f32(v459, v466), v465);
  v502 = v467.i32[2];
  v501 = v467.i64[0];
  if (v464)
  {
    if ((v464 & 0x80000000) == 0)
      goto LABEL_291;
    v468 = v462 + 2896;
    v463 = -1;
    v469 = 2;
  }
  else
  {
    v468 = v462 + 2896;
    v469 = 0;
  }
  sub_223FFDF1C(v468, &v501, v463, v469, v465);
LABEL_291:
  v470 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v471 = *(_BYTE *)(***(_QWORD ***)a1 + 10401);
  v467.i32[0] = a2->i32[0] + 5;
  v467.i32[1] = a2->i32[1];
  v472 = *(char *)(***(_QWORD ***)a1 + 10406);
  v473 = *(float *)(*(_QWORD *)(v470 + 40784) + 312);
  *(float32x2_t *)v467.f32 = vcvt_f32_s32(*(int32x2_t *)v467.f32);
  v467.f32[2] = (float)a2[1].i32[0];
  v474.i64[0] = 0x3F0000003F000000;
  v474.i64[1] = 0x3F0000003F000000;
  v475 = vmulq_n_f32(vaddq_f32(v467, v474), v473);
  v502 = v475.i32[2];
  v501 = v475.i64[0];
  if (v472)
  {
    if ((v472 & 0x80000000) == 0)
      goto LABEL_296;
    v476 = v470 + 2896;
    v471 = -1;
    v477 = 2;
  }
  else
  {
    v476 = v470 + 2896;
    v477 = 0;
  }
  sub_223FFDF1C(v476, &v501, v471, v477, v473);
LABEL_296:
  v478 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v479 = *(_BYTE *)(***(_QWORD ***)a1 + 10441);
  v475.i32[0] = a2->i32[0] + 5;
  v475.i32[1] = a2->i32[1];
  v480 = *(char *)(***(_QWORD ***)a1 + 10446);
  v481 = *(float *)(*(_QWORD *)(v478 + 40784) + 312);
  *(float32x2_t *)v475.f32 = vcvt_f32_s32(*(int32x2_t *)v475.f32);
  v475.f32[2] = (float)(a2[1].i32[0] + 1);
  v482.i64[0] = 0x3F0000003F000000;
  v482.i64[1] = 0x3F0000003F000000;
  v483 = vmulq_n_f32(vaddq_f32(v475, v482), v481);
  v502 = v483.i32[2];
  v501 = v483.i64[0];
  if (v480)
  {
    if ((v480 & 0x80000000) == 0)
      goto LABEL_301;
    v484 = v478 + 2896;
    v479 = -1;
    v485 = 2;
  }
  else
  {
    v484 = v478 + 2896;
    v485 = 0;
  }
  sub_223FFDF1C(v484, &v501, v479, v485, v481);
LABEL_301:
  v486 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v487 = *(_BYTE *)(***(_QWORD ***)a1 + 10481);
  v488 = *(char *)(***(_QWORD ***)a1 + 10486);
  v489 = *(float *)(*(_QWORD *)(v486 + 40784) + 312);
  *(float32x2_t *)v482.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v482.f32[2] = (float)a2[1].i32[0];
  v490.i64[0] = 0x3F0000003F000000;
  v490.i64[1] = 0x3F0000003F000000;
  v491 = vmulq_n_f32(vaddq_f32(v482, v490), v489);
  v502 = v491.i32[2];
  v501 = v491.i64[0];
  if (v488)
  {
    if ((v488 & 0x80000000) == 0)
      goto LABEL_306;
    v492 = v486 + 2896;
    v487 = -1;
    v493 = 2;
  }
  else
  {
    v492 = v486 + 2896;
    v493 = 0;
  }
  sub_223FFDF1C(v492, &v501, v487, v493, v489);
LABEL_306:
  v494 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v495 = *(_BYTE *)(***(_QWORD ***)a1 + 10521);
  v496 = *(char *)(***(_QWORD ***)a1 + 10526);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v494 + 40784) + 312);
  *(float32x2_t *)v491.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v491.f32[2] = (float)(a2[1].i32[0] + 1);
  v497.i64[0] = 0x3F0000003F000000;
  v497.i64[1] = 0x3F0000003F000000;
  v498 = vmulq_n_f32(vaddq_f32(v491, v497), *(float *)&a3);
  v502 = v498.i32[2];
  v501 = v498.i64[0];
  if (!v496)
  {
    v499 = v494 + 2896;
    v500 = 0;
    goto LABEL_310;
  }
  if (v496 < 0)
  {
    v499 = v494 + 2896;
    v495 = -1;
    v500 = 2;
LABEL_310:
    sub_223FFDF1C(v499, &v501, v495, v500, *(float *)&a3);
  }
  sub_223946C00(a1, a2, a3, v498);
}

void sub_223946C00(uint64_t a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  char v7;
  int v8;
  float v9;
  float32x4_t v10;
  float32x4_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  float v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  int v40;
  float v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  int v48;
  float v49;
  float32x4_t v50;
  float32x4_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  int v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  int v64;
  float v65;
  float32x4_t v66;
  float32x4_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  int v80;
  float v81;
  float32x4_t v82;
  float32x4_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  float v89;
  float32x4_t v90;
  float32x4_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char v95;
  int v96;
  float v97;
  float32x4_t v98;
  float32x4_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103;
  int v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  char v111;
  int v112;
  float v113;
  float32x4_t v114;
  float32x4_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char v119;
  int v120;
  float v121;
  float32x4_t v122;
  float32x4_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char v127;
  int v128;
  float v129;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char v135;
  int v136;
  float v137;
  float32x4_t v138;
  float32x4_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  char v151;
  int v152;
  float v153;
  float32x4_t v154;
  float32x4_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char v159;
  int v160;
  float v161;
  float32x4_t v162;
  float32x4_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  int v168;
  float v169;
  float32x4_t v170;
  float32x4_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  int v176;
  float v177;
  float32x4_t v178;
  float32x4_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  char v183;
  int v184;
  float v185;
  float32x4_t v186;
  float32x4_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  char v191;
  int v192;
  float v193;
  float32x4_t v194;
  float32x4_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  char v199;
  int v200;
  float v201;
  float32x4_t v202;
  float32x4_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  char v207;
  int v208;
  float v209;
  float32x4_t v210;
  float32x4_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  char v223;
  int v224;
  float v225;
  float32x4_t v226;
  float32x4_t v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  char v231;
  int v232;
  float v233;
  float32x4_t v234;
  float32x4_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char v239;
  int v240;
  float v241;
  float32x4_t v242;
  float32x4_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  char v247;
  int v248;
  float v249;
  float32x4_t v250;
  float32x4_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char v255;
  int v256;
  float v257;
  float32x4_t v258;
  float32x4_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  char v263;
  int v264;
  float v265;
  float32x4_t v266;
  float32x4_t v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  char v271;
  int v272;
  float v273;
  float32x4_t v274;
  float32x4_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  char v279;
  int v280;
  float v281;
  float32x4_t v282;
  float32x4_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  char v287;
  int v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  char v295;
  int v296;
  float v297;
  float32x4_t v298;
  float32x4_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  char v303;
  int v304;
  float v305;
  float32x4_t v306;
  float32x4_t v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  char v311;
  int v312;
  float v313;
  float32x4_t v314;
  float32x4_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  char v319;
  int v320;
  float v321;
  float32x4_t v322;
  float32x4_t v323;
  uint64_t v324;
  int v325;
  uint64_t v326;
  char v327;
  int v328;
  float v329;
  float32x4_t v330;
  float32x4_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  char v335;
  int v336;
  float v337;
  float32x4_t v338;
  float32x4_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  char v343;
  int v344;
  float v345;
  float32x4_t v346;
  float32x4_t v347;
  uint64_t v348;
  int v349;
  uint64_t v350;
  char v351;
  int v352;
  float v353;
  float32x4_t v354;
  float32x4_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  char v359;
  int v360;
  float v361;
  float32x4_t v362;
  float32x4_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  char v367;
  int v368;
  float v369;
  float32x4_t v370;
  float32x4_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  char v375;
  int v376;
  float v377;
  float32x4_t v378;
  float32x4_t v379;
  uint64_t v380;
  int v381;
  uint64_t v382;
  char v383;
  int v384;
  float v385;
  float32x4_t v386;
  float32x4_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  char v391;
  int v392;
  float v393;
  float32x4_t v394;
  float32x4_t v395;
  uint64_t v396;
  int v397;
  uint64_t v398;
  char v399;
  int v400;
  float v401;
  float32x4_t v402;
  float32x4_t v403;
  uint64_t v404;
  int v405;
  uint64_t v406;
  char v407;
  int v408;
  float v409;
  float32x4_t v410;
  float32x4_t v411;
  uint64_t v412;
  int v413;
  uint64_t v414;
  char v415;
  int v416;
  float v417;
  float32x4_t v418;
  float32x4_t v419;
  uint64_t v420;
  int v421;
  uint64_t v422;
  char v423;
  int v424;
  float v425;
  float32x4_t v426;
  float32x4_t v427;
  uint64_t v428;
  int v429;
  uint64_t v430;
  char v431;
  int v432;
  float v433;
  float32x4_t v434;
  float32x4_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  char v439;
  int v440;
  float v441;
  float32x4_t v442;
  float32x4_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  char v447;
  int v448;
  float v449;
  float32x4_t v450;
  float32x4_t v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  char v455;
  int v456;
  float v457;
  float32x4_t v458;
  float32x4_t v459;
  uint64_t v460;
  int v461;
  uint64_t v462;
  char v463;
  int v464;
  float v465;
  float32x4_t v466;
  float32x4_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  char v471;
  int v472;
  float v473;
  float32x4_t v474;
  float32x4_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  char v479;
  int v480;
  float v481;
  float32x4_t v482;
  float32x4_t v483;
  uint64_t v484;
  int v485;
  uint64_t v486;
  char v487;
  int v488;
  float v489;
  float32x4_t v490;
  float32x4_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  char v495;
  int v496;
  float32x4_t v497;
  float32x4_t v498;
  uint64_t v499;
  int v500;
  uint64_t v501;
  __int32 v502;

  v6 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v7 = *(_BYTE *)(***(_QWORD ***)a1 + 10561);
  a4.i32[0] = a2->i32[0] + 4;
  a4.i32[1] = a2->i32[1];
  v8 = *(char *)(***(_QWORD ***)a1 + 10566);
  v9 = *(float *)(*(_QWORD *)(v6 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a4.f32);
  a4.f32[2] = (float)(a2[1].i32[0] + 2);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  v11 = vmulq_n_f32(vaddq_f32(a4, v10), v9);
  v502 = v11.i32[2];
  v501 = v11.i64[0];
  if (v8)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
    v12 = v6 + 2896;
    v7 = -1;
    v13 = 2;
  }
  else
  {
    v12 = v6 + 2896;
    v13 = 0;
  }
  sub_223FFDF1C(v12, &v501, v7, v13, v9);
LABEL_6:
  v14 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v15 = *(_BYTE *)(***(_QWORD ***)a1 + 10601);
  v11.i32[0] = a2->i32[0] + 4;
  v11.i32[1] = a2->i32[1];
  v16 = *(char *)(***(_QWORD ***)a1 + 10606);
  v17 = *(float *)(*(_QWORD *)(v14 + 40784) + 312);
  *(float32x2_t *)v11.f32 = vcvt_f32_s32(*(int32x2_t *)v11.f32);
  v11.f32[2] = (float)(a2[1].i32[0] + 3);
  v18.i64[0] = 0x3F0000003F000000;
  v18.i64[1] = 0x3F0000003F000000;
  v19 = vmulq_n_f32(vaddq_f32(v11, v18), v17);
  v502 = v19.i32[2];
  v501 = v19.i64[0];
  if (v16)
  {
    if ((v16 & 0x80000000) == 0)
      goto LABEL_11;
    v20 = v14 + 2896;
    v15 = -1;
    v21 = 2;
  }
  else
  {
    v20 = v14 + 2896;
    v21 = 0;
  }
  sub_223FFDF1C(v20, &v501, v15, v21, v17);
LABEL_11:
  v22 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v23 = *(_BYTE *)(***(_QWORD ***)a1 + 10641);
  v24 = *(char *)(***(_QWORD ***)a1 + 10646);
  v25 = *(float *)(*(_QWORD *)(v22 + 40784) + 312);
  *(float32x2_t *)v19.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v19.f32[2] = (float)(a2[1].i32[0] + 2);
  v26.i64[0] = 0x3F0000003F000000;
  v26.i64[1] = 0x3F0000003F000000;
  v27 = vmulq_n_f32(vaddq_f32(v19, v26), v25);
  v502 = v27.i32[2];
  v501 = v27.i64[0];
  if (v24)
  {
    if ((v24 & 0x80000000) == 0)
      goto LABEL_16;
    v28 = v22 + 2896;
    v23 = -1;
    v29 = 2;
  }
  else
  {
    v28 = v22 + 2896;
    v29 = 0;
  }
  sub_223FFDF1C(v28, &v501, v23, v29, v25);
LABEL_16:
  v30 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v31 = *(_BYTE *)(***(_QWORD ***)a1 + 10681);
  v32 = *(char *)(***(_QWORD ***)a1 + 10686);
  v33 = *(float *)(*(_QWORD *)(v30 + 40784) + 312);
  *(float32x2_t *)v27.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v27.f32[2] = (float)(a2[1].i32[0] + 3);
  v34.i64[0] = 0x3F0000003F000000;
  v34.i64[1] = 0x3F0000003F000000;
  v35 = vmulq_n_f32(vaddq_f32(v27, v34), v33);
  v502 = v35.i32[2];
  v501 = v35.i64[0];
  if (v32)
  {
    if ((v32 & 0x80000000) == 0)
      goto LABEL_21;
    v36 = v30 + 2896;
    v31 = -1;
    v37 = 2;
  }
  else
  {
    v36 = v30 + 2896;
    v37 = 0;
  }
  sub_223FFDF1C(v36, &v501, v31, v37, v33);
LABEL_21:
  v38 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v39 = *(_BYTE *)(***(_QWORD ***)a1 + 10721);
  v35.i32[0] = a2->i32[0] + 5;
  v35.i32[1] = a2->i32[1];
  v40 = *(char *)(***(_QWORD ***)a1 + 10726);
  v41 = *(float *)(*(_QWORD *)(v38 + 40784) + 312);
  *(float32x2_t *)v35.f32 = vcvt_f32_s32(*(int32x2_t *)v35.f32);
  v35.f32[2] = (float)(a2[1].i32[0] + 2);
  v42.i64[0] = 0x3F0000003F000000;
  v42.i64[1] = 0x3F0000003F000000;
  v43 = vmulq_n_f32(vaddq_f32(v35, v42), v41);
  v502 = v43.i32[2];
  v501 = v43.i64[0];
  if (v40)
  {
    if ((v40 & 0x80000000) == 0)
      goto LABEL_26;
    v44 = v38 + 2896;
    v39 = -1;
    v45 = 2;
  }
  else
  {
    v44 = v38 + 2896;
    v45 = 0;
  }
  sub_223FFDF1C(v44, &v501, v39, v45, v41);
LABEL_26:
  v46 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v47 = *(_BYTE *)(***(_QWORD ***)a1 + 10761);
  v43.i32[0] = a2->i32[0] + 5;
  v43.i32[1] = a2->i32[1];
  v48 = *(char *)(***(_QWORD ***)a1 + 10766);
  v49 = *(float *)(*(_QWORD *)(v46 + 40784) + 312);
  *(float32x2_t *)v43.f32 = vcvt_f32_s32(*(int32x2_t *)v43.f32);
  v43.f32[2] = (float)(a2[1].i32[0] + 3);
  v50.i64[0] = 0x3F0000003F000000;
  v50.i64[1] = 0x3F0000003F000000;
  v51 = vmulq_n_f32(vaddq_f32(v43, v50), v49);
  v502 = v51.i32[2];
  v501 = v51.i64[0];
  if (v48)
  {
    if ((v48 & 0x80000000) == 0)
      goto LABEL_31;
    v52 = v46 + 2896;
    v47 = -1;
    v53 = 2;
  }
  else
  {
    v52 = v46 + 2896;
    v53 = 0;
  }
  sub_223FFDF1C(v52, &v501, v47, v53, v49);
LABEL_31:
  v54 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v55 = *(_BYTE *)(***(_QWORD ***)a1 + 10801);
  v56 = *(char *)(***(_QWORD ***)a1 + 10806);
  v57 = *(float *)(*(_QWORD *)(v54 + 40784) + 312);
  *(float32x2_t *)v51.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v51.f32[2] = (float)(a2[1].i32[0] + 2);
  v58.i64[0] = 0x3F0000003F000000;
  v58.i64[1] = 0x3F0000003F000000;
  v59 = vmulq_n_f32(vaddq_f32(v51, v58), v57);
  v502 = v59.i32[2];
  v501 = v59.i64[0];
  if (v56)
  {
    if ((v56 & 0x80000000) == 0)
      goto LABEL_36;
    v60 = v54 + 2896;
    v55 = -1;
    v61 = 2;
  }
  else
  {
    v60 = v54 + 2896;
    v61 = 0;
  }
  sub_223FFDF1C(v60, &v501, v55, v61, v57);
LABEL_36:
  v62 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v63 = *(_BYTE *)(***(_QWORD ***)a1 + 10841);
  v64 = *(char *)(***(_QWORD ***)a1 + 10846);
  v65 = *(float *)(*(_QWORD *)(v62 + 40784) + 312);
  *(float32x2_t *)v59.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v59.f32[2] = (float)(a2[1].i32[0] + 3);
  v66.i64[0] = 0x3F0000003F000000;
  v66.i64[1] = 0x3F0000003F000000;
  v67 = vmulq_n_f32(vaddq_f32(v59, v66), v65);
  v502 = v67.i32[2];
  v501 = v67.i64[0];
  if (v64)
  {
    if ((v64 & 0x80000000) == 0)
      goto LABEL_41;
    v68 = v62 + 2896;
    v63 = -1;
    v69 = 2;
  }
  else
  {
    v68 = v62 + 2896;
    v69 = 0;
  }
  sub_223FFDF1C(v68, &v501, v63, v69, v65);
LABEL_41:
  v70 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v71 = *(_BYTE *)(***(_QWORD ***)a1 + 10881);
  v72 = *(char *)(***(_QWORD ***)a1 + 10886);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v66.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v66.f32[2] = (float)a2[1].i32[0];
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v66, v74), v73);
  v502 = v75.i32[2];
  v501 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_46;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v501, v71, v77, v73);
LABEL_46:
  v78 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v79 = *(_BYTE *)(***(_QWORD ***)a1 + 10921);
  v80 = *(char *)(***(_QWORD ***)a1 + 10926);
  v81 = *(float *)(*(_QWORD *)(v78 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v75.f32[2] = (float)(a2[1].i32[0] + 1);
  v82.i64[0] = 0x3F0000003F000000;
  v82.i64[1] = 0x3F0000003F000000;
  v83 = vmulq_n_f32(vaddq_f32(v75, v82), v81);
  v502 = v83.i32[2];
  v501 = v83.i64[0];
  if (v80)
  {
    if ((v80 & 0x80000000) == 0)
      goto LABEL_51;
    v84 = v78 + 2896;
    v79 = -1;
    v85 = 2;
  }
  else
  {
    v84 = v78 + 2896;
    v85 = 0;
  }
  sub_223FFDF1C(v84, &v501, v79, v85, v81);
LABEL_51:
  v86 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v87 = *(_BYTE *)(***(_QWORD ***)a1 + 10961);
  v88 = *(char *)(***(_QWORD ***)a1 + 10966);
  v89 = *(float *)(*(_QWORD *)(v86 + 40784) + 312);
  *(float32x2_t *)v82.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v82.f32[2] = (float)a2[1].i32[0];
  v90.i64[0] = 0x3F0000003F000000;
  v90.i64[1] = 0x3F0000003F000000;
  v91 = vmulq_n_f32(vaddq_f32(v82, v90), v89);
  v502 = v91.i32[2];
  v501 = v91.i64[0];
  if (v88)
  {
    if ((v88 & 0x80000000) == 0)
      goto LABEL_56;
    v92 = v86 + 2896;
    v87 = -1;
    v93 = 2;
  }
  else
  {
    v92 = v86 + 2896;
    v93 = 0;
  }
  sub_223FFDF1C(v92, &v501, v87, v93, v89);
LABEL_56:
  v94 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v95 = *(_BYTE *)(***(_QWORD ***)a1 + 11001);
  v96 = *(char *)(***(_QWORD ***)a1 + 11006);
  v97 = *(float *)(*(_QWORD *)(v94 + 40784) + 312);
  *(float32x2_t *)v91.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v91.f32[2] = (float)(a2[1].i32[0] + 1);
  v98.i64[0] = 0x3F0000003F000000;
  v98.i64[1] = 0x3F0000003F000000;
  v99 = vmulq_n_f32(vaddq_f32(v91, v98), v97);
  v502 = v99.i32[2];
  v501 = v99.i64[0];
  if (v96)
  {
    if ((v96 & 0x80000000) == 0)
      goto LABEL_61;
    v100 = v94 + 2896;
    v95 = -1;
    v101 = 2;
  }
  else
  {
    v100 = v94 + 2896;
    v101 = 0;
  }
  sub_223FFDF1C(v100, &v501, v95, v101, v97);
LABEL_61:
  v102 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v103 = *(_BYTE *)(***(_QWORD ***)a1 + 11041);
  v104 = *(char *)(***(_QWORD ***)a1 + 11046);
  v105 = *(float *)(*(_QWORD *)(v102 + 40784) + 312);
  *(float32x2_t *)v98.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v98.f32[2] = (float)a2[1].i32[0];
  v106.i64[0] = 0x3F0000003F000000;
  v106.i64[1] = 0x3F0000003F000000;
  v107 = vmulq_n_f32(vaddq_f32(v98, v106), v105);
  v502 = v107.i32[2];
  v501 = v107.i64[0];
  if (v104)
  {
    if ((v104 & 0x80000000) == 0)
      goto LABEL_66;
    v108 = v102 + 2896;
    v103 = -1;
    v109 = 2;
  }
  else
  {
    v108 = v102 + 2896;
    v109 = 0;
  }
  sub_223FFDF1C(v108, &v501, v103, v109, v105);
LABEL_66:
  v110 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v111 = *(_BYTE *)(***(_QWORD ***)a1 + 11081);
  v112 = *(char *)(***(_QWORD ***)a1 + 11086);
  v113 = *(float *)(*(_QWORD *)(v110 + 40784) + 312);
  *(float32x2_t *)v107.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v107.f32[2] = (float)(a2[1].i32[0] + 1);
  v114.i64[0] = 0x3F0000003F000000;
  v114.i64[1] = 0x3F0000003F000000;
  v115 = vmulq_n_f32(vaddq_f32(v107, v114), v113);
  v502 = v115.i32[2];
  v501 = v115.i64[0];
  if (v112)
  {
    if ((v112 & 0x80000000) == 0)
      goto LABEL_71;
    v116 = v110 + 2896;
    v111 = -1;
    v117 = 2;
  }
  else
  {
    v116 = v110 + 2896;
    v117 = 0;
  }
  sub_223FFDF1C(v116, &v501, v111, v117, v113);
LABEL_71:
  v118 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v119 = *(_BYTE *)(***(_QWORD ***)a1 + 11121);
  v120 = *(char *)(***(_QWORD ***)a1 + 11126);
  v121 = *(float *)(*(_QWORD *)(v118 + 40784) + 312);
  *(float32x2_t *)v114.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v114.f32[2] = (float)a2[1].i32[0];
  v122.i64[0] = 0x3F0000003F000000;
  v122.i64[1] = 0x3F0000003F000000;
  v123 = vmulq_n_f32(vaddq_f32(v114, v122), v121);
  v502 = v123.i32[2];
  v501 = v123.i64[0];
  if (v120)
  {
    if ((v120 & 0x80000000) == 0)
      goto LABEL_76;
    v124 = v118 + 2896;
    v119 = -1;
    v125 = 2;
  }
  else
  {
    v124 = v118 + 2896;
    v125 = 0;
  }
  sub_223FFDF1C(v124, &v501, v119, v125, v121);
LABEL_76:
  v126 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v127 = *(_BYTE *)(***(_QWORD ***)a1 + 11161);
  v128 = *(char *)(***(_QWORD ***)a1 + 11166);
  v129 = *(float *)(*(_QWORD *)(v126 + 40784) + 312);
  *(float32x2_t *)v123.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v123.f32[2] = (float)(a2[1].i32[0] + 1);
  v130.i64[0] = 0x3F0000003F000000;
  v130.i64[1] = 0x3F0000003F000000;
  v131 = vmulq_n_f32(vaddq_f32(v123, v130), v129);
  v502 = v131.i32[2];
  v501 = v131.i64[0];
  if (v128)
  {
    if ((v128 & 0x80000000) == 0)
      goto LABEL_81;
    v132 = v126 + 2896;
    v127 = -1;
    v133 = 2;
  }
  else
  {
    v132 = v126 + 2896;
    v133 = 0;
  }
  sub_223FFDF1C(v132, &v501, v127, v133, v129);
LABEL_81:
  v134 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v135 = *(_BYTE *)(***(_QWORD ***)a1 + 11201);
  v136 = *(char *)(***(_QWORD ***)a1 + 11206);
  v137 = *(float *)(*(_QWORD *)(v134 + 40784) + 312);
  *(float32x2_t *)v131.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v131.f32[2] = (float)(a2[1].i32[0] + 2);
  v138.i64[0] = 0x3F0000003F000000;
  v138.i64[1] = 0x3F0000003F000000;
  v139 = vmulq_n_f32(vaddq_f32(v131, v138), v137);
  v502 = v139.i32[2];
  v501 = v139.i64[0];
  if (v136)
  {
    if ((v136 & 0x80000000) == 0)
      goto LABEL_86;
    v140 = v134 + 2896;
    v135 = -1;
    v141 = 2;
  }
  else
  {
    v140 = v134 + 2896;
    v141 = 0;
  }
  sub_223FFDF1C(v140, &v501, v135, v141, v137);
LABEL_86:
  v142 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v143 = *(_BYTE *)(***(_QWORD ***)a1 + 11241);
  v144 = *(char *)(***(_QWORD ***)a1 + 11246);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v139.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v139.f32[2] = (float)(a2[1].i32[0] + 3);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v139, v146), v145);
  v502 = v147.i32[2];
  v501 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_91;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v501, v143, v149, v145);
LABEL_91:
  v150 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v151 = *(_BYTE *)(***(_QWORD ***)a1 + 11281);
  v152 = *(char *)(***(_QWORD ***)a1 + 11286);
  v153 = *(float *)(*(_QWORD *)(v150 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v147.f32[2] = (float)(a2[1].i32[0] + 2);
  v154.i64[0] = 0x3F0000003F000000;
  v154.i64[1] = 0x3F0000003F000000;
  v155 = vmulq_n_f32(vaddq_f32(v147, v154), v153);
  v502 = v155.i32[2];
  v501 = v155.i64[0];
  if (v152)
  {
    if ((v152 & 0x80000000) == 0)
      goto LABEL_96;
    v156 = v150 + 2896;
    v151 = -1;
    v157 = 2;
  }
  else
  {
    v156 = v150 + 2896;
    v157 = 0;
  }
  sub_223FFDF1C(v156, &v501, v151, v157, v153);
LABEL_96:
  v158 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v159 = *(_BYTE *)(***(_QWORD ***)a1 + 11321);
  v160 = *(char *)(***(_QWORD ***)a1 + 11326);
  v161 = *(float *)(*(_QWORD *)(v158 + 40784) + 312);
  *(float32x2_t *)v155.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v155.f32[2] = (float)(a2[1].i32[0] + 3);
  v162.i64[0] = 0x3F0000003F000000;
  v162.i64[1] = 0x3F0000003F000000;
  v163 = vmulq_n_f32(vaddq_f32(v155, v162), v161);
  v502 = v163.i32[2];
  v501 = v163.i64[0];
  if (v160)
  {
    if ((v160 & 0x80000000) == 0)
      goto LABEL_101;
    v164 = v158 + 2896;
    v159 = -1;
    v165 = 2;
  }
  else
  {
    v164 = v158 + 2896;
    v165 = 0;
  }
  sub_223FFDF1C(v164, &v501, v159, v165, v161);
LABEL_101:
  v166 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v167 = *(_BYTE *)(***(_QWORD ***)a1 + 11361);
  v168 = *(char *)(***(_QWORD ***)a1 + 11366);
  v169 = *(float *)(*(_QWORD *)(v166 + 40784) + 312);
  *(float32x2_t *)v163.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v163.f32[2] = (float)(a2[1].i32[0] + 2);
  v170.i64[0] = 0x3F0000003F000000;
  v170.i64[1] = 0x3F0000003F000000;
  v171 = vmulq_n_f32(vaddq_f32(v163, v170), v169);
  v502 = v171.i32[2];
  v501 = v171.i64[0];
  if (v168)
  {
    if ((v168 & 0x80000000) == 0)
      goto LABEL_106;
    v172 = v166 + 2896;
    v167 = -1;
    v173 = 2;
  }
  else
  {
    v172 = v166 + 2896;
    v173 = 0;
  }
  sub_223FFDF1C(v172, &v501, v167, v173, v169);
LABEL_106:
  v174 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v175 = *(_BYTE *)(***(_QWORD ***)a1 + 11401);
  v176 = *(char *)(***(_QWORD ***)a1 + 11406);
  v177 = *(float *)(*(_QWORD *)(v174 + 40784) + 312);
  *(float32x2_t *)v171.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v171.f32[2] = (float)(a2[1].i32[0] + 3);
  v178.i64[0] = 0x3F0000003F000000;
  v178.i64[1] = 0x3F0000003F000000;
  v179 = vmulq_n_f32(vaddq_f32(v171, v178), v177);
  v502 = v179.i32[2];
  v501 = v179.i64[0];
  if (v176)
  {
    if ((v176 & 0x80000000) == 0)
      goto LABEL_111;
    v180 = v174 + 2896;
    v175 = -1;
    v181 = 2;
  }
  else
  {
    v180 = v174 + 2896;
    v181 = 0;
  }
  sub_223FFDF1C(v180, &v501, v175, v181, v177);
LABEL_111:
  v182 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v183 = *(_BYTE *)(***(_QWORD ***)a1 + 11441);
  v184 = *(char *)(***(_QWORD ***)a1 + 11446);
  v185 = *(float *)(*(_QWORD *)(v182 + 40784) + 312);
  *(float32x2_t *)v179.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v179.f32[2] = (float)(a2[1].i32[0] + 2);
  v186.i64[0] = 0x3F0000003F000000;
  v186.i64[1] = 0x3F0000003F000000;
  v187 = vmulq_n_f32(vaddq_f32(v179, v186), v185);
  v502 = v187.i32[2];
  v501 = v187.i64[0];
  if (v184)
  {
    if ((v184 & 0x80000000) == 0)
      goto LABEL_116;
    v188 = v182 + 2896;
    v183 = -1;
    v189 = 2;
  }
  else
  {
    v188 = v182 + 2896;
    v189 = 0;
  }
  sub_223FFDF1C(v188, &v501, v183, v189, v185);
LABEL_116:
  v190 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v191 = *(_BYTE *)(***(_QWORD ***)a1 + 11481);
  v192 = *(char *)(***(_QWORD ***)a1 + 11486);
  v193 = *(float *)(*(_QWORD *)(v190 + 40784) + 312);
  *(float32x2_t *)v187.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v187.f32[2] = (float)(a2[1].i32[0] + 3);
  v194.i64[0] = 0x3F0000003F000000;
  v194.i64[1] = 0x3F0000003F000000;
  v195 = vmulq_n_f32(vaddq_f32(v187, v194), v193);
  v502 = v195.i32[2];
  v501 = v195.i64[0];
  if (v192)
  {
    if ((v192 & 0x80000000) == 0)
      goto LABEL_121;
    v196 = v190 + 2896;
    v191 = -1;
    v197 = 2;
  }
  else
  {
    v196 = v190 + 2896;
    v197 = 0;
  }
  sub_223FFDF1C(v196, &v501, v191, v197, v193);
LABEL_121:
  v198 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v199 = *(_BYTE *)(***(_QWORD ***)a1 + 11521);
  v195.i32[0] = a2->i32[0] + 6;
  v195.i32[1] = a2->i32[1];
  v200 = *(char *)(***(_QWORD ***)a1 + 11526);
  v201 = *(float *)(*(_QWORD *)(v198 + 40784) + 312);
  *(float32x2_t *)v195.f32 = vcvt_f32_s32(*(int32x2_t *)v195.f32);
  v195.f32[2] = (float)a2[1].i32[0];
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  v203 = vmulq_n_f32(vaddq_f32(v195, v202), v201);
  v502 = v203.i32[2];
  v501 = v203.i64[0];
  if (v200)
  {
    if ((v200 & 0x80000000) == 0)
      goto LABEL_126;
    v204 = v198 + 2896;
    v199 = -1;
    v205 = 2;
  }
  else
  {
    v204 = v198 + 2896;
    v205 = 0;
  }
  sub_223FFDF1C(v204, &v501, v199, v205, v201);
LABEL_126:
  v206 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v207 = *(_BYTE *)(***(_QWORD ***)a1 + 11561);
  v203.i32[0] = a2->i32[0] + 6;
  v203.i32[1] = a2->i32[1];
  v208 = *(char *)(***(_QWORD ***)a1 + 11566);
  v209 = *(float *)(*(_QWORD *)(v206 + 40784) + 312);
  *(float32x2_t *)v203.f32 = vcvt_f32_s32(*(int32x2_t *)v203.f32);
  v203.f32[2] = (float)(a2[1].i32[0] + 1);
  v210.i64[0] = 0x3F0000003F000000;
  v210.i64[1] = 0x3F0000003F000000;
  v211 = vmulq_n_f32(vaddq_f32(v203, v210), v209);
  v502 = v211.i32[2];
  v501 = v211.i64[0];
  if (v208)
  {
    if ((v208 & 0x80000000) == 0)
      goto LABEL_131;
    v212 = v206 + 2896;
    v207 = -1;
    v213 = 2;
  }
  else
  {
    v212 = v206 + 2896;
    v213 = 0;
  }
  sub_223FFDF1C(v212, &v501, v207, v213, v209);
LABEL_131:
  v214 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v215 = *(_BYTE *)(***(_QWORD ***)a1 + 11601);
  v216 = *(char *)(***(_QWORD ***)a1 + 11606);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v210.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v210.f32[2] = (float)a2[1].i32[0];
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v210, v218), v217);
  v502 = v219.i32[2];
  v501 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_136;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v501, v215, v221, v217);
LABEL_136:
  v222 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v223 = *(_BYTE *)(***(_QWORD ***)a1 + 11641);
  v224 = *(char *)(***(_QWORD ***)a1 + 11646);
  v225 = *(float *)(*(_QWORD *)(v222 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v219.f32[2] = (float)(a2[1].i32[0] + 1);
  v226.i64[0] = 0x3F0000003F000000;
  v226.i64[1] = 0x3F0000003F000000;
  v227 = vmulq_n_f32(vaddq_f32(v219, v226), v225);
  v502 = v227.i32[2];
  v501 = v227.i64[0];
  if (v224)
  {
    if ((v224 & 0x80000000) == 0)
      goto LABEL_141;
    v228 = v222 + 2896;
    v223 = -1;
    v229 = 2;
  }
  else
  {
    v228 = v222 + 2896;
    v229 = 0;
  }
  sub_223FFDF1C(v228, &v501, v223, v229, v225);
LABEL_141:
  v230 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v231 = *(_BYTE *)(***(_QWORD ***)a1 + 11681);
  v227.i32[0] = a2->i32[0] + 7;
  v227.i32[1] = a2->i32[1];
  v232 = *(char *)(***(_QWORD ***)a1 + 11686);
  v233 = *(float *)(*(_QWORD *)(v230 + 40784) + 312);
  *(float32x2_t *)v227.f32 = vcvt_f32_s32(*(int32x2_t *)v227.f32);
  v227.f32[2] = (float)a2[1].i32[0];
  v234.i64[0] = 0x3F0000003F000000;
  v234.i64[1] = 0x3F0000003F000000;
  v235 = vmulq_n_f32(vaddq_f32(v227, v234), v233);
  v502 = v235.i32[2];
  v501 = v235.i64[0];
  if (v232)
  {
    if ((v232 & 0x80000000) == 0)
      goto LABEL_146;
    v236 = v230 + 2896;
    v231 = -1;
    v237 = 2;
  }
  else
  {
    v236 = v230 + 2896;
    v237 = 0;
  }
  sub_223FFDF1C(v236, &v501, v231, v237, v233);
LABEL_146:
  v238 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v239 = *(_BYTE *)(***(_QWORD ***)a1 + 11721);
  v235.i32[0] = a2->i32[0] + 7;
  v235.i32[1] = a2->i32[1];
  v240 = *(char *)(***(_QWORD ***)a1 + 11726);
  v241 = *(float *)(*(_QWORD *)(v238 + 40784) + 312);
  *(float32x2_t *)v235.f32 = vcvt_f32_s32(*(int32x2_t *)v235.f32);
  v235.f32[2] = (float)(a2[1].i32[0] + 1);
  v242.i64[0] = 0x3F0000003F000000;
  v242.i64[1] = 0x3F0000003F000000;
  v243 = vmulq_n_f32(vaddq_f32(v235, v242), v241);
  v502 = v243.i32[2];
  v501 = v243.i64[0];
  if (v240)
  {
    if ((v240 & 0x80000000) == 0)
      goto LABEL_151;
    v244 = v238 + 2896;
    v239 = -1;
    v245 = 2;
  }
  else
  {
    v244 = v238 + 2896;
    v245 = 0;
  }
  sub_223FFDF1C(v244, &v501, v239, v245, v241);
LABEL_151:
  v246 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v247 = *(_BYTE *)(***(_QWORD ***)a1 + 11761);
  v248 = *(char *)(***(_QWORD ***)a1 + 11766);
  v249 = *(float *)(*(_QWORD *)(v246 + 40784) + 312);
  *(float32x2_t *)v242.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v242.f32[2] = (float)a2[1].i32[0];
  v250.i64[0] = 0x3F0000003F000000;
  v250.i64[1] = 0x3F0000003F000000;
  v251 = vmulq_n_f32(vaddq_f32(v242, v250), v249);
  v502 = v251.i32[2];
  v501 = v251.i64[0];
  if (v248)
  {
    if ((v248 & 0x80000000) == 0)
      goto LABEL_156;
    v252 = v246 + 2896;
    v247 = -1;
    v253 = 2;
  }
  else
  {
    v252 = v246 + 2896;
    v253 = 0;
  }
  sub_223FFDF1C(v252, &v501, v247, v253, v249);
LABEL_156:
  v254 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v255 = *(_BYTE *)(***(_QWORD ***)a1 + 11801);
  v256 = *(char *)(***(_QWORD ***)a1 + 11806);
  v257 = *(float *)(*(_QWORD *)(v254 + 40784) + 312);
  *(float32x2_t *)v251.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v251.f32[2] = (float)(a2[1].i32[0] + 1);
  v258.i64[0] = 0x3F0000003F000000;
  v258.i64[1] = 0x3F0000003F000000;
  v259 = vmulq_n_f32(vaddq_f32(v251, v258), v257);
  v502 = v259.i32[2];
  v501 = v259.i64[0];
  if (v256)
  {
    if ((v256 & 0x80000000) == 0)
      goto LABEL_161;
    v260 = v254 + 2896;
    v255 = -1;
    v261 = 2;
  }
  else
  {
    v260 = v254 + 2896;
    v261 = 0;
  }
  sub_223FFDF1C(v260, &v501, v255, v261, v257);
LABEL_161:
  v262 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v263 = *(_BYTE *)(***(_QWORD ***)a1 + 11841);
  v259.i32[0] = a2->i32[0] + 6;
  v259.i32[1] = a2->i32[1];
  v264 = *(char *)(***(_QWORD ***)a1 + 11846);
  v265 = *(float *)(*(_QWORD *)(v262 + 40784) + 312);
  *(float32x2_t *)v259.f32 = vcvt_f32_s32(*(int32x2_t *)v259.f32);
  v259.f32[2] = (float)(a2[1].i32[0] + 2);
  v266.i64[0] = 0x3F0000003F000000;
  v266.i64[1] = 0x3F0000003F000000;
  v267 = vmulq_n_f32(vaddq_f32(v259, v266), v265);
  v502 = v267.i32[2];
  v501 = v267.i64[0];
  if (v264)
  {
    if ((v264 & 0x80000000) == 0)
      goto LABEL_166;
    v268 = v262 + 2896;
    v263 = -1;
    v269 = 2;
  }
  else
  {
    v268 = v262 + 2896;
    v269 = 0;
  }
  sub_223FFDF1C(v268, &v501, v263, v269, v265);
LABEL_166:
  v270 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v271 = *(_BYTE *)(***(_QWORD ***)a1 + 11881);
  v267.i32[0] = a2->i32[0] + 6;
  v267.i32[1] = a2->i32[1];
  v272 = *(char *)(***(_QWORD ***)a1 + 11886);
  v273 = *(float *)(*(_QWORD *)(v270 + 40784) + 312);
  *(float32x2_t *)v267.f32 = vcvt_f32_s32(*(int32x2_t *)v267.f32);
  v267.f32[2] = (float)(a2[1].i32[0] + 3);
  v274.i64[0] = 0x3F0000003F000000;
  v274.i64[1] = 0x3F0000003F000000;
  v275 = vmulq_n_f32(vaddq_f32(v267, v274), v273);
  v502 = v275.i32[2];
  v501 = v275.i64[0];
  if (v272)
  {
    if ((v272 & 0x80000000) == 0)
      goto LABEL_171;
    v276 = v270 + 2896;
    v271 = -1;
    v277 = 2;
  }
  else
  {
    v276 = v270 + 2896;
    v277 = 0;
  }
  sub_223FFDF1C(v276, &v501, v271, v277, v273);
LABEL_171:
  v278 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v279 = *(_BYTE *)(***(_QWORD ***)a1 + 11921);
  v280 = *(char *)(***(_QWORD ***)a1 + 11926);
  v281 = *(float *)(*(_QWORD *)(v278 + 40784) + 312);
  *(float32x2_t *)v275.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v275.f32[2] = (float)(a2[1].i32[0] + 2);
  v282.i64[0] = 0x3F0000003F000000;
  v282.i64[1] = 0x3F0000003F000000;
  v283 = vmulq_n_f32(vaddq_f32(v275, v282), v281);
  v502 = v283.i32[2];
  v501 = v283.i64[0];
  if (v280)
  {
    if ((v280 & 0x80000000) == 0)
      goto LABEL_176;
    v284 = v278 + 2896;
    v279 = -1;
    v285 = 2;
  }
  else
  {
    v284 = v278 + 2896;
    v285 = 0;
  }
  sub_223FFDF1C(v284, &v501, v279, v285, v281);
LABEL_176:
  v286 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v287 = *(_BYTE *)(***(_QWORD ***)a1 + 11961);
  v288 = *(char *)(***(_QWORD ***)a1 + 11966);
  v289 = *(float *)(*(_QWORD *)(v286 + 40784) + 312);
  *(float32x2_t *)v283.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v283.f32[2] = (float)(a2[1].i32[0] + 3);
  v290.i64[0] = 0x3F0000003F000000;
  v290.i64[1] = 0x3F0000003F000000;
  v291 = vmulq_n_f32(vaddq_f32(v283, v290), v289);
  v502 = v291.i32[2];
  v501 = v291.i64[0];
  if (v288)
  {
    if ((v288 & 0x80000000) == 0)
      goto LABEL_181;
    v292 = v286 + 2896;
    v287 = -1;
    v293 = 2;
  }
  else
  {
    v292 = v286 + 2896;
    v293 = 0;
  }
  sub_223FFDF1C(v292, &v501, v287, v293, v289);
LABEL_181:
  v294 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v295 = *(_BYTE *)(***(_QWORD ***)a1 + 12001);
  v291.i32[0] = a2->i32[0] + 7;
  v291.i32[1] = a2->i32[1];
  v296 = *(char *)(***(_QWORD ***)a1 + 12006);
  v297 = *(float *)(*(_QWORD *)(v294 + 40784) + 312);
  *(float32x2_t *)v291.f32 = vcvt_f32_s32(*(int32x2_t *)v291.f32);
  v291.f32[2] = (float)(a2[1].i32[0] + 2);
  v298.i64[0] = 0x3F0000003F000000;
  v298.i64[1] = 0x3F0000003F000000;
  v299 = vmulq_n_f32(vaddq_f32(v291, v298), v297);
  v502 = v299.i32[2];
  v501 = v299.i64[0];
  if (v296)
  {
    if ((v296 & 0x80000000) == 0)
      goto LABEL_186;
    v300 = v294 + 2896;
    v295 = -1;
    v301 = 2;
  }
  else
  {
    v300 = v294 + 2896;
    v301 = 0;
  }
  sub_223FFDF1C(v300, &v501, v295, v301, v297);
LABEL_186:
  v302 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v303 = *(_BYTE *)(***(_QWORD ***)a1 + 12041);
  v299.i32[0] = a2->i32[0] + 7;
  v299.i32[1] = a2->i32[1];
  v304 = *(char *)(***(_QWORD ***)a1 + 12046);
  v305 = *(float *)(*(_QWORD *)(v302 + 40784) + 312);
  *(float32x2_t *)v299.f32 = vcvt_f32_s32(*(int32x2_t *)v299.f32);
  v299.f32[2] = (float)(a2[1].i32[0] + 3);
  v306.i64[0] = 0x3F0000003F000000;
  v306.i64[1] = 0x3F0000003F000000;
  v307 = vmulq_n_f32(vaddq_f32(v299, v306), v305);
  v502 = v307.i32[2];
  v501 = v307.i64[0];
  if (v304)
  {
    if ((v304 & 0x80000000) == 0)
      goto LABEL_191;
    v308 = v302 + 2896;
    v303 = -1;
    v309 = 2;
  }
  else
  {
    v308 = v302 + 2896;
    v309 = 0;
  }
  sub_223FFDF1C(v308, &v501, v303, v309, v305);
LABEL_191:
  v310 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v311 = *(_BYTE *)(***(_QWORD ***)a1 + 12081);
  v312 = *(char *)(***(_QWORD ***)a1 + 12086);
  v313 = *(float *)(*(_QWORD *)(v310 + 40784) + 312);
  *(float32x2_t *)v307.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v307.f32[2] = (float)(a2[1].i32[0] + 2);
  v314.i64[0] = 0x3F0000003F000000;
  v314.i64[1] = 0x3F0000003F000000;
  v315 = vmulq_n_f32(vaddq_f32(v307, v314), v313);
  v502 = v315.i32[2];
  v501 = v315.i64[0];
  if (v312)
  {
    if ((v312 & 0x80000000) == 0)
      goto LABEL_196;
    v316 = v310 + 2896;
    v311 = -1;
    v317 = 2;
  }
  else
  {
    v316 = v310 + 2896;
    v317 = 0;
  }
  sub_223FFDF1C(v316, &v501, v311, v317, v313);
LABEL_196:
  v318 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v319 = *(_BYTE *)(***(_QWORD ***)a1 + 12121);
  v320 = *(char *)(***(_QWORD ***)a1 + 12126);
  v321 = *(float *)(*(_QWORD *)(v318 + 40784) + 312);
  *(float32x2_t *)v315.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v315.f32[2] = (float)(a2[1].i32[0] + 3);
  v322.i64[0] = 0x3F0000003F000000;
  v322.i64[1] = 0x3F0000003F000000;
  v323 = vmulq_n_f32(vaddq_f32(v315, v322), v321);
  v502 = v323.i32[2];
  v501 = v323.i64[0];
  if (v320)
  {
    if ((v320 & 0x80000000) == 0)
      goto LABEL_201;
    v324 = v318 + 2896;
    v319 = -1;
    v325 = 2;
  }
  else
  {
    v324 = v318 + 2896;
    v325 = 0;
  }
  sub_223FFDF1C(v324, &v501, v319, v325, v321);
LABEL_201:
  v326 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v327 = *(_BYTE *)(***(_QWORD ***)a1 + 12161);
  v328 = *(char *)(***(_QWORD ***)a1 + 12166);
  v329 = *(float *)(*(_QWORD *)(v326 + 40784) + 312);
  *(float32x2_t *)v322.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v322.f32[2] = (float)a2[1].i32[0];
  v330.i64[0] = 0x3F0000003F000000;
  v330.i64[1] = 0x3F0000003F000000;
  v331 = vmulq_n_f32(vaddq_f32(v322, v330), v329);
  v502 = v331.i32[2];
  v501 = v331.i64[0];
  if (v328)
  {
    if ((v328 & 0x80000000) == 0)
      goto LABEL_206;
    v332 = v326 + 2896;
    v327 = -1;
    v333 = 2;
  }
  else
  {
    v332 = v326 + 2896;
    v333 = 0;
  }
  sub_223FFDF1C(v332, &v501, v327, v333, v329);
LABEL_206:
  v334 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v335 = *(_BYTE *)(***(_QWORD ***)a1 + 12201);
  v336 = *(char *)(***(_QWORD ***)a1 + 12206);
  v337 = *(float *)(*(_QWORD *)(v334 + 40784) + 312);
  *(float32x2_t *)v331.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v331.f32[2] = (float)(a2[1].i32[0] + 1);
  v338.i64[0] = 0x3F0000003F000000;
  v338.i64[1] = 0x3F0000003F000000;
  v339 = vmulq_n_f32(vaddq_f32(v331, v338), v337);
  v502 = v339.i32[2];
  v501 = v339.i64[0];
  if (v336)
  {
    if ((v336 & 0x80000000) == 0)
      goto LABEL_211;
    v340 = v334 + 2896;
    v335 = -1;
    v341 = 2;
  }
  else
  {
    v340 = v334 + 2896;
    v341 = 0;
  }
  sub_223FFDF1C(v340, &v501, v335, v341, v337);
LABEL_211:
  v342 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v343 = *(_BYTE *)(***(_QWORD ***)a1 + 12241);
  v344 = *(char *)(***(_QWORD ***)a1 + 12246);
  v345 = *(float *)(*(_QWORD *)(v342 + 40784) + 312);
  *(float32x2_t *)v338.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v338.f32[2] = (float)a2[1].i32[0];
  v346.i64[0] = 0x3F0000003F000000;
  v346.i64[1] = 0x3F0000003F000000;
  v347 = vmulq_n_f32(vaddq_f32(v338, v346), v345);
  v502 = v347.i32[2];
  v501 = v347.i64[0];
  if (v344)
  {
    if ((v344 & 0x80000000) == 0)
      goto LABEL_216;
    v348 = v342 + 2896;
    v343 = -1;
    v349 = 2;
  }
  else
  {
    v348 = v342 + 2896;
    v349 = 0;
  }
  sub_223FFDF1C(v348, &v501, v343, v349, v345);
LABEL_216:
  v350 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v351 = *(_BYTE *)(***(_QWORD ***)a1 + 12281);
  v352 = *(char *)(***(_QWORD ***)a1 + 12286);
  v353 = *(float *)(*(_QWORD *)(v350 + 40784) + 312);
  *(float32x2_t *)v347.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v347.f32[2] = (float)(a2[1].i32[0] + 1);
  v354.i64[0] = 0x3F0000003F000000;
  v354.i64[1] = 0x3F0000003F000000;
  v355 = vmulq_n_f32(vaddq_f32(v347, v354), v353);
  v502 = v355.i32[2];
  v501 = v355.i64[0];
  if (v352)
  {
    if ((v352 & 0x80000000) == 0)
      goto LABEL_221;
    v356 = v350 + 2896;
    v351 = -1;
    v357 = 2;
  }
  else
  {
    v356 = v350 + 2896;
    v357 = 0;
  }
  sub_223FFDF1C(v356, &v501, v351, v357, v353);
LABEL_221:
  v358 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v359 = *(_BYTE *)(***(_QWORD ***)a1 + 12321);
  v360 = *(char *)(***(_QWORD ***)a1 + 12326);
  v361 = *(float *)(*(_QWORD *)(v358 + 40784) + 312);
  *(float32x2_t *)v354.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v354.f32[2] = (float)a2[1].i32[0];
  v362.i64[0] = 0x3F0000003F000000;
  v362.i64[1] = 0x3F0000003F000000;
  v363 = vmulq_n_f32(vaddq_f32(v354, v362), v361);
  v502 = v363.i32[2];
  v501 = v363.i64[0];
  if (v360)
  {
    if ((v360 & 0x80000000) == 0)
      goto LABEL_226;
    v364 = v358 + 2896;
    v359 = -1;
    v365 = 2;
  }
  else
  {
    v364 = v358 + 2896;
    v365 = 0;
  }
  sub_223FFDF1C(v364, &v501, v359, v365, v361);
LABEL_226:
  v366 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v367 = *(_BYTE *)(***(_QWORD ***)a1 + 12361);
  v368 = *(char *)(***(_QWORD ***)a1 + 12366);
  v369 = *(float *)(*(_QWORD *)(v366 + 40784) + 312);
  *(float32x2_t *)v363.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v363.f32[2] = (float)(a2[1].i32[0] + 1);
  v370.i64[0] = 0x3F0000003F000000;
  v370.i64[1] = 0x3F0000003F000000;
  v371 = vmulq_n_f32(vaddq_f32(v363, v370), v369);
  v502 = v371.i32[2];
  v501 = v371.i64[0];
  if (v368)
  {
    if ((v368 & 0x80000000) == 0)
      goto LABEL_231;
    v372 = v366 + 2896;
    v367 = -1;
    v373 = 2;
  }
  else
  {
    v372 = v366 + 2896;
    v373 = 0;
  }
  sub_223FFDF1C(v372, &v501, v367, v373, v369);
LABEL_231:
  v374 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v375 = *(_BYTE *)(***(_QWORD ***)a1 + 12401);
  v376 = *(char *)(***(_QWORD ***)a1 + 12406);
  v377 = *(float *)(*(_QWORD *)(v374 + 40784) + 312);
  *(float32x2_t *)v370.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v370.f32[2] = (float)a2[1].i32[0];
  v378.i64[0] = 0x3F0000003F000000;
  v378.i64[1] = 0x3F0000003F000000;
  v379 = vmulq_n_f32(vaddq_f32(v370, v378), v377);
  v502 = v379.i32[2];
  v501 = v379.i64[0];
  if (v376)
  {
    if ((v376 & 0x80000000) == 0)
      goto LABEL_236;
    v380 = v374 + 2896;
    v375 = -1;
    v381 = 2;
  }
  else
  {
    v380 = v374 + 2896;
    v381 = 0;
  }
  sub_223FFDF1C(v380, &v501, v375, v381, v377);
LABEL_236:
  v382 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v383 = *(_BYTE *)(***(_QWORD ***)a1 + 12441);
  v384 = *(char *)(***(_QWORD ***)a1 + 12446);
  v385 = *(float *)(*(_QWORD *)(v382 + 40784) + 312);
  *(float32x2_t *)v379.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v379.f32[2] = (float)(a2[1].i32[0] + 1);
  v386.i64[0] = 0x3F0000003F000000;
  v386.i64[1] = 0x3F0000003F000000;
  v387 = vmulq_n_f32(vaddq_f32(v379, v386), v385);
  v502 = v387.i32[2];
  v501 = v387.i64[0];
  if (v384)
  {
    if ((v384 & 0x80000000) == 0)
      goto LABEL_241;
    v388 = v382 + 2896;
    v383 = -1;
    v389 = 2;
  }
  else
  {
    v388 = v382 + 2896;
    v389 = 0;
  }
  sub_223FFDF1C(v388, &v501, v383, v389, v385);
LABEL_241:
  v390 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v391 = *(_BYTE *)(***(_QWORD ***)a1 + 12481);
  v392 = *(char *)(***(_QWORD ***)a1 + 12486);
  v393 = *(float *)(*(_QWORD *)(v390 + 40784) + 312);
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v387.f32[2] = (float)(a2[1].i32[0] + 2);
  v394.i64[0] = 0x3F0000003F000000;
  v394.i64[1] = 0x3F0000003F000000;
  v395 = vmulq_n_f32(vaddq_f32(v387, v394), v393);
  v502 = v395.i32[2];
  v501 = v395.i64[0];
  if (v392)
  {
    if ((v392 & 0x80000000) == 0)
      goto LABEL_246;
    v396 = v390 + 2896;
    v391 = -1;
    v397 = 2;
  }
  else
  {
    v396 = v390 + 2896;
    v397 = 0;
  }
  sub_223FFDF1C(v396, &v501, v391, v397, v393);
LABEL_246:
  v398 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v399 = *(_BYTE *)(***(_QWORD ***)a1 + 12521);
  v400 = *(char *)(***(_QWORD ***)a1 + 12526);
  v401 = *(float *)(*(_QWORD *)(v398 + 40784) + 312);
  *(float32x2_t *)v395.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v395.f32[2] = (float)(a2[1].i32[0] + 3);
  v402.i64[0] = 0x3F0000003F000000;
  v402.i64[1] = 0x3F0000003F000000;
  v403 = vmulq_n_f32(vaddq_f32(v395, v402), v401);
  v502 = v403.i32[2];
  v501 = v403.i64[0];
  if (v400)
  {
    if ((v400 & 0x80000000) == 0)
      goto LABEL_251;
    v404 = v398 + 2896;
    v399 = -1;
    v405 = 2;
  }
  else
  {
    v404 = v398 + 2896;
    v405 = 0;
  }
  sub_223FFDF1C(v404, &v501, v399, v405, v401);
LABEL_251:
  v406 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v407 = *(_BYTE *)(***(_QWORD ***)a1 + 12561);
  v408 = *(char *)(***(_QWORD ***)a1 + 12566);
  v409 = *(float *)(*(_QWORD *)(v406 + 40784) + 312);
  *(float32x2_t *)v403.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v403.f32[2] = (float)(a2[1].i32[0] + 2);
  v410.i64[0] = 0x3F0000003F000000;
  v410.i64[1] = 0x3F0000003F000000;
  v411 = vmulq_n_f32(vaddq_f32(v403, v410), v409);
  v502 = v411.i32[2];
  v501 = v411.i64[0];
  if (v408)
  {
    if ((v408 & 0x80000000) == 0)
      goto LABEL_256;
    v412 = v406 + 2896;
    v407 = -1;
    v413 = 2;
  }
  else
  {
    v412 = v406 + 2896;
    v413 = 0;
  }
  sub_223FFDF1C(v412, &v501, v407, v413, v409);
LABEL_256:
  v414 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v415 = *(_BYTE *)(***(_QWORD ***)a1 + 12601);
  v416 = *(char *)(***(_QWORD ***)a1 + 12606);
  v417 = *(float *)(*(_QWORD *)(v414 + 40784) + 312);
  *(float32x2_t *)v411.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v411.f32[2] = (float)(a2[1].i32[0] + 3);
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  v419 = vmulq_n_f32(vaddq_f32(v411, v418), v417);
  v502 = v419.i32[2];
  v501 = v419.i64[0];
  if (v416)
  {
    if ((v416 & 0x80000000) == 0)
      goto LABEL_261;
    v420 = v414 + 2896;
    v415 = -1;
    v421 = 2;
  }
  else
  {
    v420 = v414 + 2896;
    v421 = 0;
  }
  sub_223FFDF1C(v420, &v501, v415, v421, v417);
LABEL_261:
  v422 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v423 = *(_BYTE *)(***(_QWORD ***)a1 + 12641);
  v424 = *(char *)(***(_QWORD ***)a1 + 12646);
  v425 = *(float *)(*(_QWORD *)(v422 + 40784) + 312);
  *(float32x2_t *)v419.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v419.f32[2] = (float)(a2[1].i32[0] + 2);
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  v427 = vmulq_n_f32(vaddq_f32(v419, v426), v425);
  v502 = v427.i32[2];
  v501 = v427.i64[0];
  if (v424)
  {
    if ((v424 & 0x80000000) == 0)
      goto LABEL_266;
    v428 = v422 + 2896;
    v423 = -1;
    v429 = 2;
  }
  else
  {
    v428 = v422 + 2896;
    v429 = 0;
  }
  sub_223FFDF1C(v428, &v501, v423, v429, v425);
LABEL_266:
  v430 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v431 = *(_BYTE *)(***(_QWORD ***)a1 + 12681);
  v432 = *(char *)(***(_QWORD ***)a1 + 12686);
  v433 = *(float *)(*(_QWORD *)(v430 + 40784) + 312);
  *(float32x2_t *)v427.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v427.f32[2] = (float)(a2[1].i32[0] + 3);
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  v435 = vmulq_n_f32(vaddq_f32(v427, v434), v433);
  v502 = v435.i32[2];
  v501 = v435.i64[0];
  if (v432)
  {
    if ((v432 & 0x80000000) == 0)
      goto LABEL_271;
    v436 = v430 + 2896;
    v431 = -1;
    v437 = 2;
  }
  else
  {
    v436 = v430 + 2896;
    v437 = 0;
  }
  sub_223FFDF1C(v436, &v501, v431, v437, v433);
LABEL_271:
  v438 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v439 = *(_BYTE *)(***(_QWORD ***)a1 + 12721);
  v440 = *(char *)(***(_QWORD ***)a1 + 12726);
  v441 = *(float *)(*(_QWORD *)(v438 + 40784) + 312);
  *(float32x2_t *)v435.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v435.f32[2] = (float)(a2[1].i32[0] + 2);
  v442.i64[0] = 0x3F0000003F000000;
  v442.i64[1] = 0x3F0000003F000000;
  v443 = vmulq_n_f32(vaddq_f32(v435, v442), v441);
  v502 = v443.i32[2];
  v501 = v443.i64[0];
  if (v440)
  {
    if ((v440 & 0x80000000) == 0)
      goto LABEL_276;
    v444 = v438 + 2896;
    v439 = -1;
    v445 = 2;
  }
  else
  {
    v444 = v438 + 2896;
    v445 = 0;
  }
  sub_223FFDF1C(v444, &v501, v439, v445, v441);
LABEL_276:
  v446 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v447 = *(_BYTE *)(***(_QWORD ***)a1 + 12761);
  v448 = *(char *)(***(_QWORD ***)a1 + 12766);
  v449 = *(float *)(*(_QWORD *)(v446 + 40784) + 312);
  *(float32x2_t *)v443.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v443.f32[2] = (float)(a2[1].i32[0] + 3);
  v450.i64[0] = 0x3F0000003F000000;
  v450.i64[1] = 0x3F0000003F000000;
  v451 = vmulq_n_f32(vaddq_f32(v443, v450), v449);
  v502 = v451.i32[2];
  v501 = v451.i64[0];
  if (v448)
  {
    if ((v448 & 0x80000000) == 0)
      goto LABEL_281;
    v452 = v446 + 2896;
    v447 = -1;
    v453 = 2;
  }
  else
  {
    v452 = v446 + 2896;
    v453 = 0;
  }
  sub_223FFDF1C(v452, &v501, v447, v453, v449);
LABEL_281:
  v454 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v455 = *(_BYTE *)(***(_QWORD ***)a1 + 12801);
  v451.i32[0] = a2->i32[0] + 4;
  v451.i32[1] = a2->i32[1];
  v456 = *(char *)(***(_QWORD ***)a1 + 12806);
  v457 = *(float *)(*(_QWORD *)(v454 + 40784) + 312);
  *(float32x2_t *)v451.f32 = vcvt_f32_s32(*(int32x2_t *)v451.f32);
  v451.f32[2] = (float)(a2[1].i32[0] + 4);
  v458.i64[0] = 0x3F0000003F000000;
  v458.i64[1] = 0x3F0000003F000000;
  v459 = vmulq_n_f32(vaddq_f32(v451, v458), v457);
  v502 = v459.i32[2];
  v501 = v459.i64[0];
  if (v456)
  {
    if ((v456 & 0x80000000) == 0)
      goto LABEL_286;
    v460 = v454 + 2896;
    v455 = -1;
    v461 = 2;
  }
  else
  {
    v460 = v454 + 2896;
    v461 = 0;
  }
  sub_223FFDF1C(v460, &v501, v455, v461, v457);
LABEL_286:
  v462 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v463 = *(_BYTE *)(***(_QWORD ***)a1 + 12841);
  v459.i32[0] = a2->i32[0] + 4;
  v459.i32[1] = a2->i32[1];
  v464 = *(char *)(***(_QWORD ***)a1 + 12846);
  v465 = *(float *)(*(_QWORD *)(v462 + 40784) + 312);
  *(float32x2_t *)v459.f32 = vcvt_f32_s32(*(int32x2_t *)v459.f32);
  v459.f32[2] = (float)(a2[1].i32[0] + 5);
  v466.i64[0] = 0x3F0000003F000000;
  v466.i64[1] = 0x3F0000003F000000;
  v467 = vmulq_n_f32(vaddq_f32(v459, v466), v465);
  v502 = v467.i32[2];
  v501 = v467.i64[0];
  if (v464)
  {
    if ((v464 & 0x80000000) == 0)
      goto LABEL_291;
    v468 = v462 + 2896;
    v463 = -1;
    v469 = 2;
  }
  else
  {
    v468 = v462 + 2896;
    v469 = 0;
  }
  sub_223FFDF1C(v468, &v501, v463, v469, v465);
LABEL_291:
  v470 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v471 = *(_BYTE *)(***(_QWORD ***)a1 + 12881);
  v472 = *(char *)(***(_QWORD ***)a1 + 12886);
  v473 = *(float *)(*(_QWORD *)(v470 + 40784) + 312);
  *(float32x2_t *)v467.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v467.f32[2] = (float)(a2[1].i32[0] + 4);
  v474.i64[0] = 0x3F0000003F000000;
  v474.i64[1] = 0x3F0000003F000000;
  v475 = vmulq_n_f32(vaddq_f32(v467, v474), v473);
  v502 = v475.i32[2];
  v501 = v475.i64[0];
  if (v472)
  {
    if ((v472 & 0x80000000) == 0)
      goto LABEL_296;
    v476 = v470 + 2896;
    v471 = -1;
    v477 = 2;
  }
  else
  {
    v476 = v470 + 2896;
    v477 = 0;
  }
  sub_223FFDF1C(v476, &v501, v471, v477, v473);
LABEL_296:
  v478 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v479 = *(_BYTE *)(***(_QWORD ***)a1 + 12921);
  v480 = *(char *)(***(_QWORD ***)a1 + 12926);
  v481 = *(float *)(*(_QWORD *)(v478 + 40784) + 312);
  *(float32x2_t *)v475.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v475.f32[2] = (float)(a2[1].i32[0] + 5);
  v482.i64[0] = 0x3F0000003F000000;
  v482.i64[1] = 0x3F0000003F000000;
  v483 = vmulq_n_f32(vaddq_f32(v475, v482), v481);
  v502 = v483.i32[2];
  v501 = v483.i64[0];
  if (v480)
  {
    if ((v480 & 0x80000000) == 0)
      goto LABEL_301;
    v484 = v478 + 2896;
    v479 = -1;
    v485 = 2;
  }
  else
  {
    v484 = v478 + 2896;
    v485 = 0;
  }
  sub_223FFDF1C(v484, &v501, v479, v485, v481);
LABEL_301:
  v486 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v487 = *(_BYTE *)(***(_QWORD ***)a1 + 12961);
  v483.i32[0] = a2->i32[0] + 5;
  v483.i32[1] = a2->i32[1];
  v488 = *(char *)(***(_QWORD ***)a1 + 12966);
  v489 = *(float *)(*(_QWORD *)(v486 + 40784) + 312);
  *(float32x2_t *)v483.f32 = vcvt_f32_s32(*(int32x2_t *)v483.f32);
  v483.f32[2] = (float)(a2[1].i32[0] + 4);
  v490.i64[0] = 0x3F0000003F000000;
  v490.i64[1] = 0x3F0000003F000000;
  v491 = vmulq_n_f32(vaddq_f32(v483, v490), v489);
  v502 = v491.i32[2];
  v501 = v491.i64[0];
  if (v488)
  {
    if ((v488 & 0x80000000) == 0)
      goto LABEL_306;
    v492 = v486 + 2896;
    v487 = -1;
    v493 = 2;
  }
  else
  {
    v492 = v486 + 2896;
    v493 = 0;
  }
  sub_223FFDF1C(v492, &v501, v487, v493, v489);
LABEL_306:
  v494 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v495 = *(_BYTE *)(***(_QWORD ***)a1 + 13001);
  v491.i32[0] = a2->i32[0] + 5;
  v491.i32[1] = a2->i32[1];
  v496 = *(char *)(***(_QWORD ***)a1 + 13006);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v494 + 40784) + 312);
  *(float32x2_t *)v491.f32 = vcvt_f32_s32(*(int32x2_t *)v491.f32);
  v491.f32[2] = (float)(a2[1].i32[0] + 5);
  v497.i64[0] = 0x3F0000003F000000;
  v497.i64[1] = 0x3F0000003F000000;
  v498 = vmulq_n_f32(vaddq_f32(v491, v497), *(float *)&a3);
  v502 = v498.i32[2];
  v501 = v498.i64[0];
  if (!v496)
  {
    v499 = v494 + 2896;
    v500 = 0;
    goto LABEL_310;
  }
  if (v496 < 0)
  {
    v499 = v494 + 2896;
    v495 = -1;
    v500 = 2;
LABEL_310:
    sub_223FFDF1C(v499, &v501, v495, v500, *(float *)&a3);
  }
  sub_223949110(a1, a2, a3, v498);
}

void sub_223949110(uint64_t a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  char v7;
  int v8;
  float v9;
  float32x4_t v10;
  float32x4_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  float v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  int v40;
  float v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  int v48;
  float v49;
  float32x4_t v50;
  float32x4_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  int v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  int v64;
  float v65;
  float32x4_t v66;
  float32x4_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  int v80;
  float v81;
  float32x4_t v82;
  float32x4_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  float v89;
  float32x4_t v90;
  float32x4_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char v95;
  int v96;
  float v97;
  float32x4_t v98;
  float32x4_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103;
  int v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  char v111;
  int v112;
  float v113;
  float32x4_t v114;
  float32x4_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char v119;
  int v120;
  float v121;
  float32x4_t v122;
  float32x4_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char v127;
  int v128;
  float v129;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char v135;
  int v136;
  float v137;
  float32x4_t v138;
  float32x4_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  char v151;
  int v152;
  float v153;
  float32x4_t v154;
  float32x4_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char v159;
  int v160;
  float v161;
  float32x4_t v162;
  float32x4_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  int v168;
  float v169;
  float32x4_t v170;
  float32x4_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  int v176;
  float v177;
  float32x4_t v178;
  float32x4_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  char v183;
  int v184;
  float v185;
  float32x4_t v186;
  float32x4_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  char v191;
  int v192;
  float v193;
  float32x4_t v194;
  float32x4_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  char v199;
  int v200;
  float v201;
  float32x4_t v202;
  float32x4_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  char v207;
  int v208;
  float v209;
  float32x4_t v210;
  float32x4_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  char v223;
  int v224;
  float v225;
  float32x4_t v226;
  float32x4_t v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  char v231;
  int v232;
  float v233;
  float32x4_t v234;
  float32x4_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char v239;
  int v240;
  float v241;
  float32x4_t v242;
  float32x4_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  char v247;
  int v248;
  float v249;
  float32x4_t v250;
  float32x4_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char v255;
  int v256;
  float v257;
  float32x4_t v258;
  float32x4_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  char v263;
  int v264;
  float v265;
  float32x4_t v266;
  float32x4_t v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  char v271;
  int v272;
  float v273;
  float32x4_t v274;
  float32x4_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  char v279;
  int v280;
  float v281;
  float32x4_t v282;
  float32x4_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  char v287;
  int v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  char v295;
  int v296;
  float v297;
  float32x4_t v298;
  float32x4_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  char v303;
  int v304;
  float v305;
  float32x4_t v306;
  float32x4_t v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  char v311;
  int v312;
  float v313;
  float32x4_t v314;
  float32x4_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  char v319;
  int v320;
  float v321;
  float32x4_t v322;
  float32x4_t v323;
  uint64_t v324;
  int v325;
  uint64_t v326;
  char v327;
  int v328;
  float v329;
  float32x4_t v330;
  float32x4_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  char v335;
  int v336;
  float v337;
  float32x4_t v338;
  float32x4_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  char v343;
  int v344;
  float v345;
  float32x4_t v346;
  float32x4_t v347;
  uint64_t v348;
  int v349;
  uint64_t v350;
  char v351;
  int v352;
  float v353;
  float32x4_t v354;
  float32x4_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  char v359;
  int v360;
  float v361;
  float32x4_t v362;
  float32x4_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  char v367;
  int v368;
  float v369;
  float32x4_t v370;
  float32x4_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  char v375;
  int v376;
  float v377;
  float32x4_t v378;
  float32x4_t v379;
  uint64_t v380;
  int v381;
  uint64_t v382;
  char v383;
  int v384;
  float v385;
  float32x4_t v386;
  float32x4_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  char v391;
  int v392;
  float v393;
  float32x4_t v394;
  float32x4_t v395;
  uint64_t v396;
  int v397;
  uint64_t v398;
  char v399;
  int v400;
  float v401;
  float32x4_t v402;
  float32x4_t v403;
  uint64_t v404;
  int v405;
  uint64_t v406;
  char v407;
  int v408;
  float v409;
  float32x4_t v410;
  float32x4_t v411;
  uint64_t v412;
  int v413;
  uint64_t v414;
  char v415;
  int v416;
  float v417;
  float32x4_t v418;
  float32x4_t v419;
  uint64_t v420;
  int v421;
  uint64_t v422;
  char v423;
  int v424;
  float v425;
  float32x4_t v426;
  float32x4_t v427;
  uint64_t v428;
  int v429;
  uint64_t v430;
  char v431;
  int v432;
  float v433;
  float32x4_t v434;
  float32x4_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  char v439;
  int v440;
  float v441;
  float32x4_t v442;
  float32x4_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  char v447;
  int v448;
  float v449;
  float32x4_t v450;
  float32x4_t v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  char v455;
  int v456;
  float v457;
  float32x4_t v458;
  float32x4_t v459;
  uint64_t v460;
  int v461;
  uint64_t v462;
  char v463;
  int v464;
  float v465;
  float32x4_t v466;
  float32x4_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  char v471;
  int v472;
  float v473;
  float32x4_t v474;
  float32x4_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  char v479;
  int v480;
  float v481;
  float32x4_t v482;
  float32x4_t v483;
  uint64_t v484;
  int v485;
  uint64_t v486;
  char v487;
  int v488;
  float v489;
  float32x4_t v490;
  float32x4_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  char v495;
  int v496;
  float32x4_t v497;
  float32x4_t v498;
  uint64_t v499;
  int v500;
  uint64_t v501;
  __int32 v502;

  v6 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v7 = *(_BYTE *)(***(_QWORD ***)a1 + 13041);
  v8 = *(char *)(***(_QWORD ***)a1 + 13046);
  v9 = *(float *)(*(_QWORD *)(v6 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  a4.f32[2] = (float)(a2[1].i32[0] + 4);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  v11 = vmulq_n_f32(vaddq_f32(a4, v10), v9);
  v502 = v11.i32[2];
  v501 = v11.i64[0];
  if (v8)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
    v12 = v6 + 2896;
    v7 = -1;
    v13 = 2;
  }
  else
  {
    v12 = v6 + 2896;
    v13 = 0;
  }
  sub_223FFDF1C(v12, &v501, v7, v13, v9);
LABEL_6:
  v14 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v15 = *(_BYTE *)(***(_QWORD ***)a1 + 13081);
  v16 = *(char *)(***(_QWORD ***)a1 + 13086);
  v17 = *(float *)(*(_QWORD *)(v14 + 40784) + 312);
  *(float32x2_t *)v11.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v11.f32[2] = (float)(a2[1].i32[0] + 5);
  v18.i64[0] = 0x3F0000003F000000;
  v18.i64[1] = 0x3F0000003F000000;
  v19 = vmulq_n_f32(vaddq_f32(v11, v18), v17);
  v502 = v19.i32[2];
  v501 = v19.i64[0];
  if (v16)
  {
    if ((v16 & 0x80000000) == 0)
      goto LABEL_11;
    v20 = v14 + 2896;
    v15 = -1;
    v21 = 2;
  }
  else
  {
    v20 = v14 + 2896;
    v21 = 0;
  }
  sub_223FFDF1C(v20, &v501, v15, v21, v17);
LABEL_11:
  v22 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v23 = *(_BYTE *)(***(_QWORD ***)a1 + 13121);
  v19.i32[0] = a2->i32[0] + 4;
  v19.i32[1] = a2->i32[1];
  v24 = *(char *)(***(_QWORD ***)a1 + 13126);
  v25 = *(float *)(*(_QWORD *)(v22 + 40784) + 312);
  *(float32x2_t *)v19.f32 = vcvt_f32_s32(*(int32x2_t *)v19.f32);
  v19.f32[2] = (float)(a2[1].i32[0] + 6);
  v26.i64[0] = 0x3F0000003F000000;
  v26.i64[1] = 0x3F0000003F000000;
  v27 = vmulq_n_f32(vaddq_f32(v19, v26), v25);
  v502 = v27.i32[2];
  v501 = v27.i64[0];
  if (v24)
  {
    if ((v24 & 0x80000000) == 0)
      goto LABEL_16;
    v28 = v22 + 2896;
    v23 = -1;
    v29 = 2;
  }
  else
  {
    v28 = v22 + 2896;
    v29 = 0;
  }
  sub_223FFDF1C(v28, &v501, v23, v29, v25);
LABEL_16:
  v30 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v31 = *(_BYTE *)(***(_QWORD ***)a1 + 13161);
  v27.i32[0] = a2->i32[0] + 4;
  v27.i32[1] = a2->i32[1];
  v32 = *(char *)(***(_QWORD ***)a1 + 13166);
  v33 = *(float *)(*(_QWORD *)(v30 + 40784) + 312);
  *(float32x2_t *)v27.f32 = vcvt_f32_s32(*(int32x2_t *)v27.f32);
  v27.f32[2] = (float)(a2[1].i32[0] + 7);
  v34.i64[0] = 0x3F0000003F000000;
  v34.i64[1] = 0x3F0000003F000000;
  v35 = vmulq_n_f32(vaddq_f32(v27, v34), v33);
  v502 = v35.i32[2];
  v501 = v35.i64[0];
  if (v32)
  {
    if ((v32 & 0x80000000) == 0)
      goto LABEL_21;
    v36 = v30 + 2896;
    v31 = -1;
    v37 = 2;
  }
  else
  {
    v36 = v30 + 2896;
    v37 = 0;
  }
  sub_223FFDF1C(v36, &v501, v31, v37, v33);
LABEL_21:
  v38 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v39 = *(_BYTE *)(***(_QWORD ***)a1 + 13201);
  v40 = *(char *)(***(_QWORD ***)a1 + 13206);
  v41 = *(float *)(*(_QWORD *)(v38 + 40784) + 312);
  *(float32x2_t *)v35.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v35.f32[2] = (float)(a2[1].i32[0] + 6);
  v42.i64[0] = 0x3F0000003F000000;
  v42.i64[1] = 0x3F0000003F000000;
  v43 = vmulq_n_f32(vaddq_f32(v35, v42), v41);
  v502 = v43.i32[2];
  v501 = v43.i64[0];
  if (v40)
  {
    if ((v40 & 0x80000000) == 0)
      goto LABEL_26;
    v44 = v38 + 2896;
    v39 = -1;
    v45 = 2;
  }
  else
  {
    v44 = v38 + 2896;
    v45 = 0;
  }
  sub_223FFDF1C(v44, &v501, v39, v45, v41);
LABEL_26:
  v46 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v47 = *(_BYTE *)(***(_QWORD ***)a1 + 13241);
  v48 = *(char *)(***(_QWORD ***)a1 + 13246);
  v49 = *(float *)(*(_QWORD *)(v46 + 40784) + 312);
  *(float32x2_t *)v43.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000004));
  v43.f32[2] = (float)(a2[1].i32[0] + 7);
  v50.i64[0] = 0x3F0000003F000000;
  v50.i64[1] = 0x3F0000003F000000;
  v51 = vmulq_n_f32(vaddq_f32(v43, v50), v49);
  v502 = v51.i32[2];
  v501 = v51.i64[0];
  if (v48)
  {
    if ((v48 & 0x80000000) == 0)
      goto LABEL_31;
    v52 = v46 + 2896;
    v47 = -1;
    v53 = 2;
  }
  else
  {
    v52 = v46 + 2896;
    v53 = 0;
  }
  sub_223FFDF1C(v52, &v501, v47, v53, v49);
LABEL_31:
  v54 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v55 = *(_BYTE *)(***(_QWORD ***)a1 + 13281);
  v51.i32[0] = a2->i32[0] + 5;
  v51.i32[1] = a2->i32[1];
  v56 = *(char *)(***(_QWORD ***)a1 + 13286);
  v57 = *(float *)(*(_QWORD *)(v54 + 40784) + 312);
  *(float32x2_t *)v51.f32 = vcvt_f32_s32(*(int32x2_t *)v51.f32);
  v51.f32[2] = (float)(a2[1].i32[0] + 6);
  v58.i64[0] = 0x3F0000003F000000;
  v58.i64[1] = 0x3F0000003F000000;
  v59 = vmulq_n_f32(vaddq_f32(v51, v58), v57);
  v502 = v59.i32[2];
  v501 = v59.i64[0];
  if (v56)
  {
    if ((v56 & 0x80000000) == 0)
      goto LABEL_36;
    v60 = v54 + 2896;
    v55 = -1;
    v61 = 2;
  }
  else
  {
    v60 = v54 + 2896;
    v61 = 0;
  }
  sub_223FFDF1C(v60, &v501, v55, v61, v57);
LABEL_36:
  v62 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v63 = *(_BYTE *)(***(_QWORD ***)a1 + 13321);
  v59.i32[0] = a2->i32[0] + 5;
  v59.i32[1] = a2->i32[1];
  v64 = *(char *)(***(_QWORD ***)a1 + 13326);
  v65 = *(float *)(*(_QWORD *)(v62 + 40784) + 312);
  *(float32x2_t *)v59.f32 = vcvt_f32_s32(*(int32x2_t *)v59.f32);
  v59.f32[2] = (float)(a2[1].i32[0] + 7);
  v66.i64[0] = 0x3F0000003F000000;
  v66.i64[1] = 0x3F0000003F000000;
  v67 = vmulq_n_f32(vaddq_f32(v59, v66), v65);
  v502 = v67.i32[2];
  v501 = v67.i64[0];
  if (v64)
  {
    if ((v64 & 0x80000000) == 0)
      goto LABEL_41;
    v68 = v62 + 2896;
    v63 = -1;
    v69 = 2;
  }
  else
  {
    v68 = v62 + 2896;
    v69 = 0;
  }
  sub_223FFDF1C(v68, &v501, v63, v69, v65);
LABEL_41:
  v70 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v71 = *(_BYTE *)(***(_QWORD ***)a1 + 13361);
  v72 = *(char *)(***(_QWORD ***)a1 + 13366);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v67.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v67.f32[2] = (float)(a2[1].i32[0] + 6);
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v67, v74), v73);
  v502 = v75.i32[2];
  v501 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_46;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v501, v71, v77, v73);
LABEL_46:
  v78 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v79 = *(_BYTE *)(***(_QWORD ***)a1 + 13401);
  v80 = *(char *)(***(_QWORD ***)a1 + 13406);
  v81 = *(float *)(*(_QWORD *)(v78 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000005));
  v75.f32[2] = (float)(a2[1].i32[0] + 7);
  v82.i64[0] = 0x3F0000003F000000;
  v82.i64[1] = 0x3F0000003F000000;
  v83 = vmulq_n_f32(vaddq_f32(v75, v82), v81);
  v502 = v83.i32[2];
  v501 = v83.i64[0];
  if (v80)
  {
    if ((v80 & 0x80000000) == 0)
      goto LABEL_51;
    v84 = v78 + 2896;
    v79 = -1;
    v85 = 2;
  }
  else
  {
    v84 = v78 + 2896;
    v85 = 0;
  }
  sub_223FFDF1C(v84, &v501, v79, v85, v81);
LABEL_51:
  v86 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v87 = *(_BYTE *)(***(_QWORD ***)a1 + 13441);
  v88 = *(char *)(***(_QWORD ***)a1 + 13446);
  v89 = *(float *)(*(_QWORD *)(v86 + 40784) + 312);
  *(float32x2_t *)v83.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v83.f32[2] = (float)(a2[1].i32[0] + 4);
  v90.i64[0] = 0x3F0000003F000000;
  v90.i64[1] = 0x3F0000003F000000;
  v91 = vmulq_n_f32(vaddq_f32(v83, v90), v89);
  v502 = v91.i32[2];
  v501 = v91.i64[0];
  if (v88)
  {
    if ((v88 & 0x80000000) == 0)
      goto LABEL_56;
    v92 = v86 + 2896;
    v87 = -1;
    v93 = 2;
  }
  else
  {
    v92 = v86 + 2896;
    v93 = 0;
  }
  sub_223FFDF1C(v92, &v501, v87, v93, v89);
LABEL_56:
  v94 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v95 = *(_BYTE *)(***(_QWORD ***)a1 + 13481);
  v96 = *(char *)(***(_QWORD ***)a1 + 13486);
  v97 = *(float *)(*(_QWORD *)(v94 + 40784) + 312);
  *(float32x2_t *)v91.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v91.f32[2] = (float)(a2[1].i32[0] + 5);
  v98.i64[0] = 0x3F0000003F000000;
  v98.i64[1] = 0x3F0000003F000000;
  v99 = vmulq_n_f32(vaddq_f32(v91, v98), v97);
  v502 = v99.i32[2];
  v501 = v99.i64[0];
  if (v96)
  {
    if ((v96 & 0x80000000) == 0)
      goto LABEL_61;
    v100 = v94 + 2896;
    v95 = -1;
    v101 = 2;
  }
  else
  {
    v100 = v94 + 2896;
    v101 = 0;
  }
  sub_223FFDF1C(v100, &v501, v95, v101, v97);
LABEL_61:
  v102 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v103 = *(_BYTE *)(***(_QWORD ***)a1 + 13521);
  v104 = *(char *)(***(_QWORD ***)a1 + 13526);
  v105 = *(float *)(*(_QWORD *)(v102 + 40784) + 312);
  *(float32x2_t *)v99.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v99.f32[2] = (float)(a2[1].i32[0] + 4);
  v106.i64[0] = 0x3F0000003F000000;
  v106.i64[1] = 0x3F0000003F000000;
  v107 = vmulq_n_f32(vaddq_f32(v99, v106), v105);
  v502 = v107.i32[2];
  v501 = v107.i64[0];
  if (v104)
  {
    if ((v104 & 0x80000000) == 0)
      goto LABEL_66;
    v108 = v102 + 2896;
    v103 = -1;
    v109 = 2;
  }
  else
  {
    v108 = v102 + 2896;
    v109 = 0;
  }
  sub_223FFDF1C(v108, &v501, v103, v109, v105);
LABEL_66:
  v110 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v111 = *(_BYTE *)(***(_QWORD ***)a1 + 13561);
  v112 = *(char *)(***(_QWORD ***)a1 + 13566);
  v113 = *(float *)(*(_QWORD *)(v110 + 40784) + 312);
  *(float32x2_t *)v107.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v107.f32[2] = (float)(a2[1].i32[0] + 5);
  v114.i64[0] = 0x3F0000003F000000;
  v114.i64[1] = 0x3F0000003F000000;
  v115 = vmulq_n_f32(vaddq_f32(v107, v114), v113);
  v502 = v115.i32[2];
  v501 = v115.i64[0];
  if (v112)
  {
    if ((v112 & 0x80000000) == 0)
      goto LABEL_71;
    v116 = v110 + 2896;
    v111 = -1;
    v117 = 2;
  }
  else
  {
    v116 = v110 + 2896;
    v117 = 0;
  }
  sub_223FFDF1C(v116, &v501, v111, v117, v113);
LABEL_71:
  v118 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v119 = *(_BYTE *)(***(_QWORD ***)a1 + 13601);
  v120 = *(char *)(***(_QWORD ***)a1 + 13606);
  v121 = *(float *)(*(_QWORD *)(v118 + 40784) + 312);
  *(float32x2_t *)v115.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v115.f32[2] = (float)(a2[1].i32[0] + 4);
  v122.i64[0] = 0x3F0000003F000000;
  v122.i64[1] = 0x3F0000003F000000;
  v123 = vmulq_n_f32(vaddq_f32(v115, v122), v121);
  v502 = v123.i32[2];
  v501 = v123.i64[0];
  if (v120)
  {
    if ((v120 & 0x80000000) == 0)
      goto LABEL_76;
    v124 = v118 + 2896;
    v119 = -1;
    v125 = 2;
  }
  else
  {
    v124 = v118 + 2896;
    v125 = 0;
  }
  sub_223FFDF1C(v124, &v501, v119, v125, v121);
LABEL_76:
  v126 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v127 = *(_BYTE *)(***(_QWORD ***)a1 + 13641);
  v128 = *(char *)(***(_QWORD ***)a1 + 13646);
  v129 = *(float *)(*(_QWORD *)(v126 + 40784) + 312);
  *(float32x2_t *)v123.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v123.f32[2] = (float)(a2[1].i32[0] + 5);
  v130.i64[0] = 0x3F0000003F000000;
  v130.i64[1] = 0x3F0000003F000000;
  v131 = vmulq_n_f32(vaddq_f32(v123, v130), v129);
  v502 = v131.i32[2];
  v501 = v131.i64[0];
  if (v128)
  {
    if ((v128 & 0x80000000) == 0)
      goto LABEL_81;
    v132 = v126 + 2896;
    v127 = -1;
    v133 = 2;
  }
  else
  {
    v132 = v126 + 2896;
    v133 = 0;
  }
  sub_223FFDF1C(v132, &v501, v127, v133, v129);
LABEL_81:
  v134 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v135 = *(_BYTE *)(***(_QWORD ***)a1 + 13681);
  v136 = *(char *)(***(_QWORD ***)a1 + 13686);
  v137 = *(float *)(*(_QWORD *)(v134 + 40784) + 312);
  *(float32x2_t *)v131.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v131.f32[2] = (float)(a2[1].i32[0] + 4);
  v138.i64[0] = 0x3F0000003F000000;
  v138.i64[1] = 0x3F0000003F000000;
  v139 = vmulq_n_f32(vaddq_f32(v131, v138), v137);
  v502 = v139.i32[2];
  v501 = v139.i64[0];
  if (v136)
  {
    if ((v136 & 0x80000000) == 0)
      goto LABEL_86;
    v140 = v134 + 2896;
    v135 = -1;
    v141 = 2;
  }
  else
  {
    v140 = v134 + 2896;
    v141 = 0;
  }
  sub_223FFDF1C(v140, &v501, v135, v141, v137);
LABEL_86:
  v142 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v143 = *(_BYTE *)(***(_QWORD ***)a1 + 13721);
  v144 = *(char *)(***(_QWORD ***)a1 + 13726);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v139.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v139.f32[2] = (float)(a2[1].i32[0] + 5);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v139, v146), v145);
  v502 = v147.i32[2];
  v501 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_91;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v501, v143, v149, v145);
LABEL_91:
  v150 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v151 = *(_BYTE *)(***(_QWORD ***)a1 + 13761);
  v152 = *(char *)(***(_QWORD ***)a1 + 13766);
  v153 = *(float *)(*(_QWORD *)(v150 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v147.f32[2] = (float)(a2[1].i32[0] + 6);
  v154.i64[0] = 0x3F0000003F000000;
  v154.i64[1] = 0x3F0000003F000000;
  v155 = vmulq_n_f32(vaddq_f32(v147, v154), v153);
  v502 = v155.i32[2];
  v501 = v155.i64[0];
  if (v152)
  {
    if ((v152 & 0x80000000) == 0)
      goto LABEL_96;
    v156 = v150 + 2896;
    v151 = -1;
    v157 = 2;
  }
  else
  {
    v156 = v150 + 2896;
    v157 = 0;
  }
  sub_223FFDF1C(v156, &v501, v151, v157, v153);
LABEL_96:
  v158 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v159 = *(_BYTE *)(***(_QWORD ***)a1 + 13801);
  v160 = *(char *)(***(_QWORD ***)a1 + 13806);
  v161 = *(float *)(*(_QWORD *)(v158 + 40784) + 312);
  *(float32x2_t *)v155.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000004));
  v155.f32[2] = (float)(a2[1].i32[0] + 7);
  v162.i64[0] = 0x3F0000003F000000;
  v162.i64[1] = 0x3F0000003F000000;
  v163 = vmulq_n_f32(vaddq_f32(v155, v162), v161);
  v502 = v163.i32[2];
  v501 = v163.i64[0];
  if (v160)
  {
    if ((v160 & 0x80000000) == 0)
      goto LABEL_101;
    v164 = v158 + 2896;
    v159 = -1;
    v165 = 2;
  }
  else
  {
    v164 = v158 + 2896;
    v165 = 0;
  }
  sub_223FFDF1C(v164, &v501, v159, v165, v161);
LABEL_101:
  v166 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v167 = *(_BYTE *)(***(_QWORD ***)a1 + 13841);
  v168 = *(char *)(***(_QWORD ***)a1 + 13846);
  v169 = *(float *)(*(_QWORD *)(v166 + 40784) + 312);
  *(float32x2_t *)v163.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v163.f32[2] = (float)(a2[1].i32[0] + 6);
  v170.i64[0] = 0x3F0000003F000000;
  v170.i64[1] = 0x3F0000003F000000;
  v171 = vmulq_n_f32(vaddq_f32(v163, v170), v169);
  v502 = v171.i32[2];
  v501 = v171.i64[0];
  if (v168)
  {
    if ((v168 & 0x80000000) == 0)
      goto LABEL_106;
    v172 = v166 + 2896;
    v167 = -1;
    v173 = 2;
  }
  else
  {
    v172 = v166 + 2896;
    v173 = 0;
  }
  sub_223FFDF1C(v172, &v501, v167, v173, v169);
LABEL_106:
  v174 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v175 = *(_BYTE *)(***(_QWORD ***)a1 + 13881);
  v176 = *(char *)(***(_QWORD ***)a1 + 13886);
  v177 = *(float *)(*(_QWORD *)(v174 + 40784) + 312);
  *(float32x2_t *)v171.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000004));
  v171.f32[2] = (float)(a2[1].i32[0] + 7);
  v178.i64[0] = 0x3F0000003F000000;
  v178.i64[1] = 0x3F0000003F000000;
  v179 = vmulq_n_f32(vaddq_f32(v171, v178), v177);
  v502 = v179.i32[2];
  v501 = v179.i64[0];
  if (v176)
  {
    if ((v176 & 0x80000000) == 0)
      goto LABEL_111;
    v180 = v174 + 2896;
    v175 = -1;
    v181 = 2;
  }
  else
  {
    v180 = v174 + 2896;
    v181 = 0;
  }
  sub_223FFDF1C(v180, &v501, v175, v181, v177);
LABEL_111:
  v182 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v183 = *(_BYTE *)(***(_QWORD ***)a1 + 13921);
  v184 = *(char *)(***(_QWORD ***)a1 + 13926);
  v185 = *(float *)(*(_QWORD *)(v182 + 40784) + 312);
  *(float32x2_t *)v179.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v179.f32[2] = (float)(a2[1].i32[0] + 6);
  v186.i64[0] = 0x3F0000003F000000;
  v186.i64[1] = 0x3F0000003F000000;
  v187 = vmulq_n_f32(vaddq_f32(v179, v186), v185);
  v502 = v187.i32[2];
  v501 = v187.i64[0];
  if (v184)
  {
    if ((v184 & 0x80000000) == 0)
      goto LABEL_116;
    v188 = v182 + 2896;
    v183 = -1;
    v189 = 2;
  }
  else
  {
    v188 = v182 + 2896;
    v189 = 0;
  }
  sub_223FFDF1C(v188, &v501, v183, v189, v185);
LABEL_116:
  v190 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v191 = *(_BYTE *)(***(_QWORD ***)a1 + 13961);
  v192 = *(char *)(***(_QWORD ***)a1 + 13966);
  v193 = *(float *)(*(_QWORD *)(v190 + 40784) + 312);
  *(float32x2_t *)v187.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000005));
  v187.f32[2] = (float)(a2[1].i32[0] + 7);
  v194.i64[0] = 0x3F0000003F000000;
  v194.i64[1] = 0x3F0000003F000000;
  v195 = vmulq_n_f32(vaddq_f32(v187, v194), v193);
  v502 = v195.i32[2];
  v501 = v195.i64[0];
  if (v192)
  {
    if ((v192 & 0x80000000) == 0)
      goto LABEL_121;
    v196 = v190 + 2896;
    v191 = -1;
    v197 = 2;
  }
  else
  {
    v196 = v190 + 2896;
    v197 = 0;
  }
  sub_223FFDF1C(v196, &v501, v191, v197, v193);
LABEL_121:
  v198 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v199 = *(_BYTE *)(***(_QWORD ***)a1 + 14001);
  v200 = *(char *)(***(_QWORD ***)a1 + 14006);
  v201 = *(float *)(*(_QWORD *)(v198 + 40784) + 312);
  *(float32x2_t *)v195.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v195.f32[2] = (float)(a2[1].i32[0] + 6);
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  v203 = vmulq_n_f32(vaddq_f32(v195, v202), v201);
  v502 = v203.i32[2];
  v501 = v203.i64[0];
  if (v200)
  {
    if ((v200 & 0x80000000) == 0)
      goto LABEL_126;
    v204 = v198 + 2896;
    v199 = -1;
    v205 = 2;
  }
  else
  {
    v204 = v198 + 2896;
    v205 = 0;
  }
  sub_223FFDF1C(v204, &v501, v199, v205, v201);
LABEL_126:
  v206 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v207 = *(_BYTE *)(***(_QWORD ***)a1 + 14041);
  v208 = *(char *)(***(_QWORD ***)a1 + 14046);
  v209 = *(float *)(*(_QWORD *)(v206 + 40784) + 312);
  *(float32x2_t *)v203.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000005));
  v203.f32[2] = (float)(a2[1].i32[0] + 7);
  v210.i64[0] = 0x3F0000003F000000;
  v210.i64[1] = 0x3F0000003F000000;
  v211 = vmulq_n_f32(vaddq_f32(v203, v210), v209);
  v502 = v211.i32[2];
  v501 = v211.i64[0];
  if (v208)
  {
    if ((v208 & 0x80000000) == 0)
      goto LABEL_131;
    v212 = v206 + 2896;
    v207 = -1;
    v213 = 2;
  }
  else
  {
    v212 = v206 + 2896;
    v213 = 0;
  }
  sub_223FFDF1C(v212, &v501, v207, v213, v209);
LABEL_131:
  v214 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v215 = *(_BYTE *)(***(_QWORD ***)a1 + 14081);
  v211.i32[0] = a2->i32[0] + 6;
  v211.i32[1] = a2->i32[1];
  v216 = *(char *)(***(_QWORD ***)a1 + 14086);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v211.f32 = vcvt_f32_s32(*(int32x2_t *)v211.f32);
  v211.f32[2] = (float)(a2[1].i32[0] + 4);
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v211, v218), v217);
  v502 = v219.i32[2];
  v501 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_136;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v501, v215, v221, v217);
LABEL_136:
  v222 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v223 = *(_BYTE *)(***(_QWORD ***)a1 + 14121);
  v219.i32[0] = a2->i32[0] + 6;
  v219.i32[1] = a2->i32[1];
  v224 = *(char *)(***(_QWORD ***)a1 + 14126);
  v225 = *(float *)(*(_QWORD *)(v222 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(*(int32x2_t *)v219.f32);
  v219.f32[2] = (float)(a2[1].i32[0] + 5);
  v226.i64[0] = 0x3F0000003F000000;
  v226.i64[1] = 0x3F0000003F000000;
  v227 = vmulq_n_f32(vaddq_f32(v219, v226), v225);
  v502 = v227.i32[2];
  v501 = v227.i64[0];
  if (v224)
  {
    if ((v224 & 0x80000000) == 0)
      goto LABEL_141;
    v228 = v222 + 2896;
    v223 = -1;
    v229 = 2;
  }
  else
  {
    v228 = v222 + 2896;
    v229 = 0;
  }
  sub_223FFDF1C(v228, &v501, v223, v229, v225);
LABEL_141:
  v230 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v231 = *(_BYTE *)(***(_QWORD ***)a1 + 14161);
  v232 = *(char *)(***(_QWORD ***)a1 + 14166);
  v233 = *(float *)(*(_QWORD *)(v230 + 40784) + 312);
  *(float32x2_t *)v227.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v227.f32[2] = (float)(a2[1].i32[0] + 4);
  v234.i64[0] = 0x3F0000003F000000;
  v234.i64[1] = 0x3F0000003F000000;
  v235 = vmulq_n_f32(vaddq_f32(v227, v234), v233);
  v502 = v235.i32[2];
  v501 = v235.i64[0];
  if (v232)
  {
    if ((v232 & 0x80000000) == 0)
      goto LABEL_146;
    v236 = v230 + 2896;
    v231 = -1;
    v237 = 2;
  }
  else
  {
    v236 = v230 + 2896;
    v237 = 0;
  }
  sub_223FFDF1C(v236, &v501, v231, v237, v233);
LABEL_146:
  v238 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v239 = *(_BYTE *)(***(_QWORD ***)a1 + 14201);
  v240 = *(char *)(***(_QWORD ***)a1 + 14206);
  v241 = *(float *)(*(_QWORD *)(v238 + 40784) + 312);
  *(float32x2_t *)v235.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v235.f32[2] = (float)(a2[1].i32[0] + 5);
  v242.i64[0] = 0x3F0000003F000000;
  v242.i64[1] = 0x3F0000003F000000;
  v243 = vmulq_n_f32(vaddq_f32(v235, v242), v241);
  v502 = v243.i32[2];
  v501 = v243.i64[0];
  if (v240)
  {
    if ((v240 & 0x80000000) == 0)
      goto LABEL_151;
    v244 = v238 + 2896;
    v239 = -1;
    v245 = 2;
  }
  else
  {
    v244 = v238 + 2896;
    v245 = 0;
  }
  sub_223FFDF1C(v244, &v501, v239, v245, v241);
LABEL_151:
  v246 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v247 = *(_BYTE *)(***(_QWORD ***)a1 + 14241);
  v243.i32[0] = a2->i32[0] + 7;
  v243.i32[1] = a2->i32[1];
  v248 = *(char *)(***(_QWORD ***)a1 + 14246);
  v249 = *(float *)(*(_QWORD *)(v246 + 40784) + 312);
  *(float32x2_t *)v243.f32 = vcvt_f32_s32(*(int32x2_t *)v243.f32);
  v243.f32[2] = (float)(a2[1].i32[0] + 4);
  v250.i64[0] = 0x3F0000003F000000;
  v250.i64[1] = 0x3F0000003F000000;
  v251 = vmulq_n_f32(vaddq_f32(v243, v250), v249);
  v502 = v251.i32[2];
  v501 = v251.i64[0];
  if (v248)
  {
    if ((v248 & 0x80000000) == 0)
      goto LABEL_156;
    v252 = v246 + 2896;
    v247 = -1;
    v253 = 2;
  }
  else
  {
    v252 = v246 + 2896;
    v253 = 0;
  }
  sub_223FFDF1C(v252, &v501, v247, v253, v249);
LABEL_156:
  v254 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v255 = *(_BYTE *)(***(_QWORD ***)a1 + 14281);
  v251.i32[0] = a2->i32[0] + 7;
  v251.i32[1] = a2->i32[1];
  v256 = *(char *)(***(_QWORD ***)a1 + 14286);
  v257 = *(float *)(*(_QWORD *)(v254 + 40784) + 312);
  *(float32x2_t *)v251.f32 = vcvt_f32_s32(*(int32x2_t *)v251.f32);
  v251.f32[2] = (float)(a2[1].i32[0] + 5);
  v258.i64[0] = 0x3F0000003F000000;
  v258.i64[1] = 0x3F0000003F000000;
  v259 = vmulq_n_f32(vaddq_f32(v251, v258), v257);
  v502 = v259.i32[2];
  v501 = v259.i64[0];
  if (v256)
  {
    if ((v256 & 0x80000000) == 0)
      goto LABEL_161;
    v260 = v254 + 2896;
    v255 = -1;
    v261 = 2;
  }
  else
  {
    v260 = v254 + 2896;
    v261 = 0;
  }
  sub_223FFDF1C(v260, &v501, v255, v261, v257);
LABEL_161:
  v262 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v263 = *(_BYTE *)(***(_QWORD ***)a1 + 14321);
  v264 = *(char *)(***(_QWORD ***)a1 + 14326);
  v265 = *(float *)(*(_QWORD *)(v262 + 40784) + 312);
  *(float32x2_t *)v259.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v259.f32[2] = (float)(a2[1].i32[0] + 4);
  v266.i64[0] = 0x3F0000003F000000;
  v266.i64[1] = 0x3F0000003F000000;
  v267 = vmulq_n_f32(vaddq_f32(v259, v266), v265);
  v502 = v267.i32[2];
  v501 = v267.i64[0];
  if (v264)
  {
    if ((v264 & 0x80000000) == 0)
      goto LABEL_166;
    v268 = v262 + 2896;
    v263 = -1;
    v269 = 2;
  }
  else
  {
    v268 = v262 + 2896;
    v269 = 0;
  }
  sub_223FFDF1C(v268, &v501, v263, v269, v265);
LABEL_166:
  v270 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v271 = *(_BYTE *)(***(_QWORD ***)a1 + 14361);
  v272 = *(char *)(***(_QWORD ***)a1 + 14366);
  v273 = *(float *)(*(_QWORD *)(v270 + 40784) + 312);
  *(float32x2_t *)v267.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v267.f32[2] = (float)(a2[1].i32[0] + 5);
  v274.i64[0] = 0x3F0000003F000000;
  v274.i64[1] = 0x3F0000003F000000;
  v275 = vmulq_n_f32(vaddq_f32(v267, v274), v273);
  v502 = v275.i32[2];
  v501 = v275.i64[0];
  if (v272)
  {
    if ((v272 & 0x80000000) == 0)
      goto LABEL_171;
    v276 = v270 + 2896;
    v271 = -1;
    v277 = 2;
  }
  else
  {
    v276 = v270 + 2896;
    v277 = 0;
  }
  sub_223FFDF1C(v276, &v501, v271, v277, v273);
LABEL_171:
  v278 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v279 = *(_BYTE *)(***(_QWORD ***)a1 + 14401);
  v275.i32[0] = a2->i32[0] + 6;
  v275.i32[1] = a2->i32[1];
  v280 = *(char *)(***(_QWORD ***)a1 + 14406);
  v281 = *(float *)(*(_QWORD *)(v278 + 40784) + 312);
  *(float32x2_t *)v275.f32 = vcvt_f32_s32(*(int32x2_t *)v275.f32);
  v275.f32[2] = (float)(a2[1].i32[0] + 6);
  v282.i64[0] = 0x3F0000003F000000;
  v282.i64[1] = 0x3F0000003F000000;
  v283 = vmulq_n_f32(vaddq_f32(v275, v282), v281);
  v502 = v283.i32[2];
  v501 = v283.i64[0];
  if (v280)
  {
    if ((v280 & 0x80000000) == 0)
      goto LABEL_176;
    v284 = v278 + 2896;
    v279 = -1;
    v285 = 2;
  }
  else
  {
    v284 = v278 + 2896;
    v285 = 0;
  }
  sub_223FFDF1C(v284, &v501, v279, v285, v281);
LABEL_176:
  v286 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v287 = *(_BYTE *)(***(_QWORD ***)a1 + 14441);
  v283.i32[0] = a2->i32[0] + 6;
  v283.i32[1] = a2->i32[1];
  v288 = *(char *)(***(_QWORD ***)a1 + 14446);
  v289 = *(float *)(*(_QWORD *)(v286 + 40784) + 312);
  *(float32x2_t *)v283.f32 = vcvt_f32_s32(*(int32x2_t *)v283.f32);
  v283.f32[2] = (float)(a2[1].i32[0] + 7);
  v290.i64[0] = 0x3F0000003F000000;
  v290.i64[1] = 0x3F0000003F000000;
  v291 = vmulq_n_f32(vaddq_f32(v283, v290), v289);
  v502 = v291.i32[2];
  v501 = v291.i64[0];
  if (v288)
  {
    if ((v288 & 0x80000000) == 0)
      goto LABEL_181;
    v292 = v286 + 2896;
    v287 = -1;
    v293 = 2;
  }
  else
  {
    v292 = v286 + 2896;
    v293 = 0;
  }
  sub_223FFDF1C(v292, &v501, v287, v293, v289);
LABEL_181:
  v294 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v295 = *(_BYTE *)(***(_QWORD ***)a1 + 14481);
  v296 = *(char *)(***(_QWORD ***)a1 + 14486);
  v297 = *(float *)(*(_QWORD *)(v294 + 40784) + 312);
  *(float32x2_t *)v291.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v291.f32[2] = (float)(a2[1].i32[0] + 6);
  v298.i64[0] = 0x3F0000003F000000;
  v298.i64[1] = 0x3F0000003F000000;
  v299 = vmulq_n_f32(vaddq_f32(v291, v298), v297);
  v502 = v299.i32[2];
  v501 = v299.i64[0];
  if (v296)
  {
    if ((v296 & 0x80000000) == 0)
      goto LABEL_186;
    v300 = v294 + 2896;
    v295 = -1;
    v301 = 2;
  }
  else
  {
    v300 = v294 + 2896;
    v301 = 0;
  }
  sub_223FFDF1C(v300, &v501, v295, v301, v297);
LABEL_186:
  v302 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v303 = *(_BYTE *)(***(_QWORD ***)a1 + 14521);
  v304 = *(char *)(***(_QWORD ***)a1 + 14526);
  v305 = *(float *)(*(_QWORD *)(v302 + 40784) + 312);
  *(float32x2_t *)v299.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000006));
  v299.f32[2] = (float)(a2[1].i32[0] + 7);
  v306.i64[0] = 0x3F0000003F000000;
  v306.i64[1] = 0x3F0000003F000000;
  v307 = vmulq_n_f32(vaddq_f32(v299, v306), v305);
  v502 = v307.i32[2];
  v501 = v307.i64[0];
  if (v304)
  {
    if ((v304 & 0x80000000) == 0)
      goto LABEL_191;
    v308 = v302 + 2896;
    v303 = -1;
    v309 = 2;
  }
  else
  {
    v308 = v302 + 2896;
    v309 = 0;
  }
  sub_223FFDF1C(v308, &v501, v303, v309, v305);
LABEL_191:
  v310 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v311 = *(_BYTE *)(***(_QWORD ***)a1 + 14561);
  v307.i32[0] = a2->i32[0] + 7;
  v307.i32[1] = a2->i32[1];
  v312 = *(char *)(***(_QWORD ***)a1 + 14566);
  v313 = *(float *)(*(_QWORD *)(v310 + 40784) + 312);
  *(float32x2_t *)v307.f32 = vcvt_f32_s32(*(int32x2_t *)v307.f32);
  v307.f32[2] = (float)(a2[1].i32[0] + 6);
  v314.i64[0] = 0x3F0000003F000000;
  v314.i64[1] = 0x3F0000003F000000;
  v315 = vmulq_n_f32(vaddq_f32(v307, v314), v313);
  v502 = v315.i32[2];
  v501 = v315.i64[0];
  if (v312)
  {
    if ((v312 & 0x80000000) == 0)
      goto LABEL_196;
    v316 = v310 + 2896;
    v311 = -1;
    v317 = 2;
  }
  else
  {
    v316 = v310 + 2896;
    v317 = 0;
  }
  sub_223FFDF1C(v316, &v501, v311, v317, v313);
LABEL_196:
  v318 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v319 = *(_BYTE *)(***(_QWORD ***)a1 + 14601);
  v315.i32[0] = a2->i32[0] + 7;
  v315.i32[1] = a2->i32[1];
  v320 = *(char *)(***(_QWORD ***)a1 + 14606);
  v321 = *(float *)(*(_QWORD *)(v318 + 40784) + 312);
  *(float32x2_t *)v315.f32 = vcvt_f32_s32(*(int32x2_t *)v315.f32);
  v315.f32[2] = (float)(a2[1].i32[0] + 7);
  v322.i64[0] = 0x3F0000003F000000;
  v322.i64[1] = 0x3F0000003F000000;
  v323 = vmulq_n_f32(vaddq_f32(v315, v322), v321);
  v502 = v323.i32[2];
  v501 = v323.i64[0];
  if (v320)
  {
    if ((v320 & 0x80000000) == 0)
      goto LABEL_201;
    v324 = v318 + 2896;
    v319 = -1;
    v325 = 2;
  }
  else
  {
    v324 = v318 + 2896;
    v325 = 0;
  }
  sub_223FFDF1C(v324, &v501, v319, v325, v321);
LABEL_201:
  v326 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v327 = *(_BYTE *)(***(_QWORD ***)a1 + 14641);
  v328 = *(char *)(***(_QWORD ***)a1 + 14646);
  v329 = *(float *)(*(_QWORD *)(v326 + 40784) + 312);
  *(float32x2_t *)v323.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v323.f32[2] = (float)(a2[1].i32[0] + 6);
  v330.i64[0] = 0x3F0000003F000000;
  v330.i64[1] = 0x3F0000003F000000;
  v331 = vmulq_n_f32(vaddq_f32(v323, v330), v329);
  v502 = v331.i32[2];
  v501 = v331.i64[0];
  if (v328)
  {
    if ((v328 & 0x80000000) == 0)
      goto LABEL_206;
    v332 = v326 + 2896;
    v327 = -1;
    v333 = 2;
  }
  else
  {
    v332 = v326 + 2896;
    v333 = 0;
  }
  sub_223FFDF1C(v332, &v501, v327, v333, v329);
LABEL_206:
  v334 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v335 = *(_BYTE *)(***(_QWORD ***)a1 + 14681);
  v336 = *(char *)(***(_QWORD ***)a1 + 14686);
  v337 = *(float *)(*(_QWORD *)(v334 + 40784) + 312);
  *(float32x2_t *)v331.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x100000007));
  v331.f32[2] = (float)(a2[1].i32[0] + 7);
  v338.i64[0] = 0x3F0000003F000000;
  v338.i64[1] = 0x3F0000003F000000;
  v339 = vmulq_n_f32(vaddq_f32(v331, v338), v337);
  v502 = v339.i32[2];
  v501 = v339.i64[0];
  if (v336)
  {
    if ((v336 & 0x80000000) == 0)
      goto LABEL_211;
    v340 = v334 + 2896;
    v335 = -1;
    v341 = 2;
  }
  else
  {
    v340 = v334 + 2896;
    v341 = 0;
  }
  sub_223FFDF1C(v340, &v501, v335, v341, v337);
LABEL_211:
  v342 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v343 = *(_BYTE *)(***(_QWORD ***)a1 + 14721);
  v344 = *(char *)(***(_QWORD ***)a1 + 14726);
  v345 = *(float *)(*(_QWORD *)(v342 + 40784) + 312);
  *(float32x2_t *)v339.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v339.f32[2] = (float)(a2[1].i32[0] + 4);
  v346.i64[0] = 0x3F0000003F000000;
  v346.i64[1] = 0x3F0000003F000000;
  v347 = vmulq_n_f32(vaddq_f32(v339, v346), v345);
  v502 = v347.i32[2];
  v501 = v347.i64[0];
  if (v344)
  {
    if ((v344 & 0x80000000) == 0)
      goto LABEL_216;
    v348 = v342 + 2896;
    v343 = -1;
    v349 = 2;
  }
  else
  {
    v348 = v342 + 2896;
    v349 = 0;
  }
  sub_223FFDF1C(v348, &v501, v343, v349, v345);
LABEL_216:
  v350 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v351 = *(_BYTE *)(***(_QWORD ***)a1 + 14761);
  v352 = *(char *)(***(_QWORD ***)a1 + 14766);
  v353 = *(float *)(*(_QWORD *)(v350 + 40784) + 312);
  *(float32x2_t *)v347.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v347.f32[2] = (float)(a2[1].i32[0] + 5);
  v354.i64[0] = 0x3F0000003F000000;
  v354.i64[1] = 0x3F0000003F000000;
  v355 = vmulq_n_f32(vaddq_f32(v347, v354), v353);
  v502 = v355.i32[2];
  v501 = v355.i64[0];
  if (v352)
  {
    if ((v352 & 0x80000000) == 0)
      goto LABEL_221;
    v356 = v350 + 2896;
    v351 = -1;
    v357 = 2;
  }
  else
  {
    v356 = v350 + 2896;
    v357 = 0;
  }
  sub_223FFDF1C(v356, &v501, v351, v357, v353);
LABEL_221:
  v358 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v359 = *(_BYTE *)(***(_QWORD ***)a1 + 14801);
  v360 = *(char *)(***(_QWORD ***)a1 + 14806);
  v361 = *(float *)(*(_QWORD *)(v358 + 40784) + 312);
  *(float32x2_t *)v355.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v355.f32[2] = (float)(a2[1].i32[0] + 4);
  v362.i64[0] = 0x3F0000003F000000;
  v362.i64[1] = 0x3F0000003F000000;
  v363 = vmulq_n_f32(vaddq_f32(v355, v362), v361);
  v502 = v363.i32[2];
  v501 = v363.i64[0];
  if (v360)
  {
    if ((v360 & 0x80000000) == 0)
      goto LABEL_226;
    v364 = v358 + 2896;
    v359 = -1;
    v365 = 2;
  }
  else
  {
    v364 = v358 + 2896;
    v365 = 0;
  }
  sub_223FFDF1C(v364, &v501, v359, v365, v361);
LABEL_226:
  v366 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v367 = *(_BYTE *)(***(_QWORD ***)a1 + 14841);
  v368 = *(char *)(***(_QWORD ***)a1 + 14846);
  v369 = *(float *)(*(_QWORD *)(v366 + 40784) + 312);
  *(float32x2_t *)v363.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v363.f32[2] = (float)(a2[1].i32[0] + 5);
  v370.i64[0] = 0x3F0000003F000000;
  v370.i64[1] = 0x3F0000003F000000;
  v371 = vmulq_n_f32(vaddq_f32(v363, v370), v369);
  v502 = v371.i32[2];
  v501 = v371.i64[0];
  if (v368)
  {
    if ((v368 & 0x80000000) == 0)
      goto LABEL_231;
    v372 = v366 + 2896;
    v367 = -1;
    v373 = 2;
  }
  else
  {
    v372 = v366 + 2896;
    v373 = 0;
  }
  sub_223FFDF1C(v372, &v501, v367, v373, v369);
LABEL_231:
  v374 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v375 = *(_BYTE *)(***(_QWORD ***)a1 + 14881);
  v376 = *(char *)(***(_QWORD ***)a1 + 14886);
  v377 = *(float *)(*(_QWORD *)(v374 + 40784) + 312);
  *(float32x2_t *)v371.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v371.f32[2] = (float)(a2[1].i32[0] + 4);
  v378.i64[0] = 0x3F0000003F000000;
  v378.i64[1] = 0x3F0000003F000000;
  v379 = vmulq_n_f32(vaddq_f32(v371, v378), v377);
  v502 = v379.i32[2];
  v501 = v379.i64[0];
  if (v376)
  {
    if ((v376 & 0x80000000) == 0)
      goto LABEL_236;
    v380 = v374 + 2896;
    v375 = -1;
    v381 = 2;
  }
  else
  {
    v380 = v374 + 2896;
    v381 = 0;
  }
  sub_223FFDF1C(v380, &v501, v375, v381, v377);
LABEL_236:
  v382 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v383 = *(_BYTE *)(***(_QWORD ***)a1 + 14921);
  v384 = *(char *)(***(_QWORD ***)a1 + 14926);
  v385 = *(float *)(*(_QWORD *)(v382 + 40784) + 312);
  *(float32x2_t *)v379.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v379.f32[2] = (float)(a2[1].i32[0] + 5);
  v386.i64[0] = 0x3F0000003F000000;
  v386.i64[1] = 0x3F0000003F000000;
  v387 = vmulq_n_f32(vaddq_f32(v379, v386), v385);
  v502 = v387.i32[2];
  v501 = v387.i64[0];
  if (v384)
  {
    if ((v384 & 0x80000000) == 0)
      goto LABEL_241;
    v388 = v382 + 2896;
    v383 = -1;
    v389 = 2;
  }
  else
  {
    v388 = v382 + 2896;
    v389 = 0;
  }
  sub_223FFDF1C(v388, &v501, v383, v389, v385);
LABEL_241:
  v390 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v391 = *(_BYTE *)(***(_QWORD ***)a1 + 14961);
  v392 = *(char *)(***(_QWORD ***)a1 + 14966);
  v393 = *(float *)(*(_QWORD *)(v390 + 40784) + 312);
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v387.f32[2] = (float)(a2[1].i32[0] + 4);
  v394.i64[0] = 0x3F0000003F000000;
  v394.i64[1] = 0x3F0000003F000000;
  v395 = vmulq_n_f32(vaddq_f32(v387, v394), v393);
  v502 = v395.i32[2];
  v501 = v395.i64[0];
  if (v392)
  {
    if ((v392 & 0x80000000) == 0)
      goto LABEL_246;
    v396 = v390 + 2896;
    v391 = -1;
    v397 = 2;
  }
  else
  {
    v396 = v390 + 2896;
    v397 = 0;
  }
  sub_223FFDF1C(v396, &v501, v391, v397, v393);
LABEL_246:
  v398 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v399 = *(_BYTE *)(***(_QWORD ***)a1 + 15001);
  v400 = *(char *)(***(_QWORD ***)a1 + 15006);
  v401 = *(float *)(*(_QWORD *)(v398 + 40784) + 312);
  *(float32x2_t *)v395.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v395.f32[2] = (float)(a2[1].i32[0] + 5);
  v402.i64[0] = 0x3F0000003F000000;
  v402.i64[1] = 0x3F0000003F000000;
  v403 = vmulq_n_f32(vaddq_f32(v395, v402), v401);
  v502 = v403.i32[2];
  v501 = v403.i64[0];
  if (v400)
  {
    if ((v400 & 0x80000000) == 0)
      goto LABEL_251;
    v404 = v398 + 2896;
    v399 = -1;
    v405 = 2;
  }
  else
  {
    v404 = v398 + 2896;
    v405 = 0;
  }
  sub_223FFDF1C(v404, &v501, v399, v405, v401);
LABEL_251:
  v406 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v407 = *(_BYTE *)(***(_QWORD ***)a1 + 15041);
  v408 = *(char *)(***(_QWORD ***)a1 + 15046);
  v409 = *(float *)(*(_QWORD *)(v406 + 40784) + 312);
  *(float32x2_t *)v403.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v403.f32[2] = (float)(a2[1].i32[0] + 6);
  v410.i64[0] = 0x3F0000003F000000;
  v410.i64[1] = 0x3F0000003F000000;
  v411 = vmulq_n_f32(vaddq_f32(v403, v410), v409);
  v502 = v411.i32[2];
  v501 = v411.i64[0];
  if (v408)
  {
    if ((v408 & 0x80000000) == 0)
      goto LABEL_256;
    v412 = v406 + 2896;
    v407 = -1;
    v413 = 2;
  }
  else
  {
    v412 = v406 + 2896;
    v413 = 0;
  }
  sub_223FFDF1C(v412, &v501, v407, v413, v409);
LABEL_256:
  v414 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v415 = *(_BYTE *)(***(_QWORD ***)a1 + 15081);
  v416 = *(char *)(***(_QWORD ***)a1 + 15086);
  v417 = *(float *)(*(_QWORD *)(v414 + 40784) + 312);
  *(float32x2_t *)v411.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000006));
  v411.f32[2] = (float)(a2[1].i32[0] + 7);
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  v419 = vmulq_n_f32(vaddq_f32(v411, v418), v417);
  v502 = v419.i32[2];
  v501 = v419.i64[0];
  if (v416)
  {
    if ((v416 & 0x80000000) == 0)
      goto LABEL_261;
    v420 = v414 + 2896;
    v415 = -1;
    v421 = 2;
  }
  else
  {
    v420 = v414 + 2896;
    v421 = 0;
  }
  sub_223FFDF1C(v420, &v501, v415, v421, v417);
LABEL_261:
  v422 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v423 = *(_BYTE *)(***(_QWORD ***)a1 + 15121);
  v424 = *(char *)(***(_QWORD ***)a1 + 15126);
  v425 = *(float *)(*(_QWORD *)(v422 + 40784) + 312);
  *(float32x2_t *)v419.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v419.f32[2] = (float)(a2[1].i32[0] + 6);
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  v427 = vmulq_n_f32(vaddq_f32(v419, v426), v425);
  v502 = v427.i32[2];
  v501 = v427.i64[0];
  if (v424)
  {
    if ((v424 & 0x80000000) == 0)
      goto LABEL_266;
    v428 = v422 + 2896;
    v423 = -1;
    v429 = 2;
  }
  else
  {
    v428 = v422 + 2896;
    v429 = 0;
  }
  sub_223FFDF1C(v428, &v501, v423, v429, v425);
LABEL_266:
  v430 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v431 = *(_BYTE *)(***(_QWORD ***)a1 + 15161);
  v432 = *(char *)(***(_QWORD ***)a1 + 15166);
  v433 = *(float *)(*(_QWORD *)(v430 + 40784) + 312);
  *(float32x2_t *)v427.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000006));
  v427.f32[2] = (float)(a2[1].i32[0] + 7);
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  v435 = vmulq_n_f32(vaddq_f32(v427, v434), v433);
  v502 = v435.i32[2];
  v501 = v435.i64[0];
  if (v432)
  {
    if ((v432 & 0x80000000) == 0)
      goto LABEL_271;
    v436 = v430 + 2896;
    v431 = -1;
    v437 = 2;
  }
  else
  {
    v436 = v430 + 2896;
    v437 = 0;
  }
  sub_223FFDF1C(v436, &v501, v431, v437, v433);
LABEL_271:
  v438 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v439 = *(_BYTE *)(***(_QWORD ***)a1 + 15201);
  v440 = *(char *)(***(_QWORD ***)a1 + 15206);
  v441 = *(float *)(*(_QWORD *)(v438 + 40784) + 312);
  *(float32x2_t *)v435.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v435.f32[2] = (float)(a2[1].i32[0] + 6);
  v442.i64[0] = 0x3F0000003F000000;
  v442.i64[1] = 0x3F0000003F000000;
  v443 = vmulq_n_f32(vaddq_f32(v435, v442), v441);
  v502 = v443.i32[2];
  v501 = v443.i64[0];
  if (v440)
  {
    if ((v440 & 0x80000000) == 0)
      goto LABEL_276;
    v444 = v438 + 2896;
    v439 = -1;
    v445 = 2;
  }
  else
  {
    v444 = v438 + 2896;
    v445 = 0;
  }
  sub_223FFDF1C(v444, &v501, v439, v445, v441);
LABEL_276:
  v446 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v447 = *(_BYTE *)(***(_QWORD ***)a1 + 15241);
  v448 = *(char *)(***(_QWORD ***)a1 + 15246);
  v449 = *(float *)(*(_QWORD *)(v446 + 40784) + 312);
  *(float32x2_t *)v443.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x200000007));
  v443.f32[2] = (float)(a2[1].i32[0] + 7);
  v450.i64[0] = 0x3F0000003F000000;
  v450.i64[1] = 0x3F0000003F000000;
  v451 = vmulq_n_f32(vaddq_f32(v443, v450), v449);
  v502 = v451.i32[2];
  v501 = v451.i64[0];
  if (v448)
  {
    if ((v448 & 0x80000000) == 0)
      goto LABEL_281;
    v452 = v446 + 2896;
    v447 = -1;
    v453 = 2;
  }
  else
  {
    v452 = v446 + 2896;
    v453 = 0;
  }
  sub_223FFDF1C(v452, &v501, v447, v453, v449);
LABEL_281:
  v454 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v455 = *(_BYTE *)(***(_QWORD ***)a1 + 15281);
  v456 = *(char *)(***(_QWORD ***)a1 + 15286);
  v457 = *(float *)(*(_QWORD *)(v454 + 40784) + 312);
  *(float32x2_t *)v451.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v451.f32[2] = (float)(a2[1].i32[0] + 6);
  v458.i64[0] = 0x3F0000003F000000;
  v458.i64[1] = 0x3F0000003F000000;
  v459 = vmulq_n_f32(vaddq_f32(v451, v458), v457);
  v502 = v459.i32[2];
  v501 = v459.i64[0];
  if (v456)
  {
    if ((v456 & 0x80000000) == 0)
      goto LABEL_286;
    v460 = v454 + 2896;
    v455 = -1;
    v461 = 2;
  }
  else
  {
    v460 = v454 + 2896;
    v461 = 0;
  }
  sub_223FFDF1C(v460, &v501, v455, v461, v457);
LABEL_286:
  v462 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v463 = *(_BYTE *)(***(_QWORD ***)a1 + 15321);
  v464 = *(char *)(***(_QWORD ***)a1 + 15326);
  v465 = *(float *)(*(_QWORD *)(v462 + 40784) + 312);
  *(float32x2_t *)v459.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x300000007));
  v459.f32[2] = (float)(a2[1].i32[0] + 7);
  v466.i64[0] = 0x3F0000003F000000;
  v466.i64[1] = 0x3F0000003F000000;
  v467 = vmulq_n_f32(vaddq_f32(v459, v466), v465);
  v502 = v467.i32[2];
  v501 = v467.i64[0];
  if (v464)
  {
    if ((v464 & 0x80000000) == 0)
      goto LABEL_291;
    v468 = v462 + 2896;
    v463 = -1;
    v469 = 2;
  }
  else
  {
    v468 = v462 + 2896;
    v469 = 0;
  }
  sub_223FFDF1C(v468, &v501, v463, v469, v465);
LABEL_291:
  v470 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v471 = *(_BYTE *)(***(_QWORD ***)a1 + 15361);
  v472 = *(char *)(***(_QWORD ***)a1 + 15366);
  v473 = *(float *)(*(_QWORD *)(v470 + 40784) + 312);
  *(float32x2_t *)v466.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v466.f32[2] = (float)a2[1].i32[0];
  v474.i64[0] = 0x3F0000003F000000;
  v474.i64[1] = 0x3F0000003F000000;
  v475 = vmulq_n_f32(vaddq_f32(v466, v474), v473);
  v502 = v475.i32[2];
  v501 = v475.i64[0];
  if (v472)
  {
    if ((v472 & 0x80000000) == 0)
      goto LABEL_296;
    v476 = v470 + 2896;
    v471 = -1;
    v477 = 2;
  }
  else
  {
    v476 = v470 + 2896;
    v477 = 0;
  }
  sub_223FFDF1C(v476, &v501, v471, v477, v473);
LABEL_296:
  v478 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v479 = *(_BYTE *)(***(_QWORD ***)a1 + 15401);
  v480 = *(char *)(***(_QWORD ***)a1 + 15406);
  v481 = *(float *)(*(_QWORD *)(v478 + 40784) + 312);
  *(float32x2_t *)v475.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v475.f32[2] = (float)(a2[1].i32[0] + 1);
  v482.i64[0] = 0x3F0000003F000000;
  v482.i64[1] = 0x3F0000003F000000;
  v483 = vmulq_n_f32(vaddq_f32(v475, v482), v481);
  v502 = v483.i32[2];
  v501 = v483.i64[0];
  if (v480)
  {
    if ((v480 & 0x80000000) == 0)
      goto LABEL_301;
    v484 = v478 + 2896;
    v479 = -1;
    v485 = 2;
  }
  else
  {
    v484 = v478 + 2896;
    v485 = 0;
  }
  sub_223FFDF1C(v484, &v501, v479, v485, v481);
LABEL_301:
  v486 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v487 = *(_BYTE *)(***(_QWORD ***)a1 + 15441);
  v488 = *(char *)(***(_QWORD ***)a1 + 15446);
  v489 = *(float *)(*(_QWORD *)(v486 + 40784) + 312);
  *(float32x2_t *)v482.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v482.f32[2] = (float)a2[1].i32[0];
  v490.i64[0] = 0x3F0000003F000000;
  v490.i64[1] = 0x3F0000003F000000;
  v491 = vmulq_n_f32(vaddq_f32(v482, v490), v489);
  v502 = v491.i32[2];
  v501 = v491.i64[0];
  if (v488)
  {
    if ((v488 & 0x80000000) == 0)
      goto LABEL_306;
    v492 = v486 + 2896;
    v487 = -1;
    v493 = 2;
  }
  else
  {
    v492 = v486 + 2896;
    v493 = 0;
  }
  sub_223FFDF1C(v492, &v501, v487, v493, v489);
LABEL_306:
  v494 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v495 = *(_BYTE *)(***(_QWORD ***)a1 + 15481);
  v496 = *(char *)(***(_QWORD ***)a1 + 15486);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v494 + 40784) + 312);
  *(float32x2_t *)v491.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v491.f32[2] = (float)(a2[1].i32[0] + 1);
  v497.i64[0] = 0x3F0000003F000000;
  v497.i64[1] = 0x3F0000003F000000;
  v498 = vmulq_n_f32(vaddq_f32(v491, v497), *(float *)&a3);
  v502 = v498.i32[2];
  v501 = v498.i64[0];
  if (!v496)
  {
    v499 = v494 + 2896;
    v500 = 0;
    goto LABEL_310;
  }
  if (v496 < 0)
  {
    v499 = v494 + 2896;
    v495 = -1;
    v500 = 2;
LABEL_310:
    sub_223FFDF1C(v499, &v501, v495, v500, *(float *)&a3);
  }
  sub_22394B620(a1, a2, a3, *(double *)v498.i64, v497);
}

void sub_22394B620(uint64_t a1, int32x2_t *a2, double a3, double a4, float32x4_t a5)
{
  uint64_t v7;
  char v8;
  int v9;
  float v10;
  float32x4_t v11;
  float32x4_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  int v17;
  float v18;
  float32x4_t v19;
  float32x4_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  int v25;
  float v26;
  float32x4_t v27;
  float32x4_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char v32;
  int v33;
  float v34;
  float32x4_t v35;
  float32x4_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char v40;
  int v41;
  float v42;
  float32x4_t v43;
  float32x4_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48;
  int v49;
  float v50;
  float32x4_t v51;
  float32x4_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char v56;
  int v57;
  float v58;
  float32x4_t v59;
  float32x4_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char v64;
  int v65;
  float v66;
  float32x4_t v67;
  float32x4_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char v72;
  int v73;
  float v74;
  float32x4_t v75;
  float32x4_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char v80;
  int v81;
  float v82;
  float32x4_t v83;
  float32x4_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char v88;
  int v89;
  float v90;
  float32x4_t v91;
  float32x4_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char v96;
  int v97;
  float v98;
  float32x4_t v99;
  float32x4_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  char v104;
  int v105;
  float v106;
  float32x4_t v107;
  float32x4_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char v112;
  int v113;
  float v114;
  float32x4_t v115;
  float32x4_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  char v120;
  int v121;
  float v122;
  float32x4_t v123;
  float32x4_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  char v128;
  int v129;
  float v130;
  float32x4_t v131;
  float32x4_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  char v136;
  int v137;
  float v138;
  float32x4_t v139;
  float32x4_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  char v144;
  int v145;
  float v146;
  float32x4_t v147;
  float32x4_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  char v152;
  int v153;
  float v154;
  float32x4_t v155;
  float32x4_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  char v160;
  int v161;
  float v162;
  float32x4_t v163;
  float32x4_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  char v168;
  int v169;
  float v170;
  float32x4_t v171;
  float32x4_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  char v176;
  int v177;
  float v178;
  float32x4_t v179;
  float32x4_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  char v184;
  int v185;
  float v186;
  float32x4_t v187;
  float32x4_t v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  char v192;
  int v193;
  float v194;
  float32x4_t v195;
  float32x4_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  char v200;
  int v201;
  float v202;
  float32x4_t v203;
  float32x4_t v204;
  uint64_t v205;
  int v206;
  uint64_t v207;
  char v208;
  int v209;
  float v210;
  float32x4_t v211;
  float32x4_t v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  char v216;
  int v217;
  float v218;
  float32x4_t v219;
  float32x4_t v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  char v224;
  int v225;
  float v226;
  float32x4_t v227;
  float32x4_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  char v232;
  int v233;
  float v234;
  float32x4_t v235;
  float32x4_t v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  char v240;
  int v241;
  float v242;
  float32x4_t v243;
  float32x4_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  char v248;
  int v249;
  float v250;
  float32x4_t v251;
  float32x4_t v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  char v256;
  int v257;
  float v258;
  float32x4_t v259;
  float32x4_t v260;
  uint64_t v261;
  int v262;
  uint64_t v263;
  char v264;
  int v265;
  float v266;
  float32x4_t v267;
  float32x4_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  char v272;
  int v273;
  float v274;
  float32x4_t v275;
  float32x4_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  char v280;
  int v281;
  float v282;
  float32x4_t v283;
  float32x4_t v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  char v288;
  int v289;
  float v290;
  float32x4_t v291;
  float32x4_t v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  char v296;
  int v297;
  float v298;
  float32x4_t v299;
  float32x4_t v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  char v304;
  int v305;
  float v306;
  float32x4_t v307;
  float32x4_t v308;
  uint64_t v309;
  int v310;
  uint64_t v311;
  char v312;
  int v313;
  float v314;
  float32x4_t v315;
  float32x4_t v316;
  uint64_t v317;
  int v318;
  uint64_t v319;
  char v320;
  int v321;
  float v322;
  float32x4_t v323;
  float32x4_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  char v328;
  int v329;
  float v330;
  float32x4_t v331;
  float32x4_t v332;
  uint64_t v333;
  int v334;
  uint64_t v335;
  char v336;
  int v337;
  float v338;
  float32x4_t v339;
  float32x4_t v340;
  uint64_t v341;
  int v342;
  uint64_t v343;
  char v344;
  int v345;
  float v346;
  float32x4_t v347;
  float32x4_t v348;
  uint64_t v349;
  int v350;
  uint64_t v351;
  char v352;
  int v353;
  float v354;
  float32x4_t v355;
  float32x4_t v356;
  uint64_t v357;
  int v358;
  uint64_t v359;
  char v360;
  int v361;
  float v362;
  float32x4_t v363;
  float32x4_t v364;
  uint64_t v365;
  int v366;
  uint64_t v367;
  char v368;
  int v369;
  float v370;
  float32x4_t v371;
  float32x4_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  char v376;
  int v377;
  float v378;
  float32x4_t v379;
  float32x4_t v380;
  uint64_t v381;
  int v382;
  uint64_t v383;
  char v384;
  int v385;
  float v386;
  float32x4_t v387;
  float32x4_t v388;
  uint64_t v389;
  int v390;
  uint64_t v391;
  char v392;
  int v393;
  float v394;
  float32x4_t v395;
  float32x4_t v396;
  uint64_t v397;
  int v398;
  uint64_t v399;
  char v400;
  int v401;
  float v402;
  float32x4_t v403;
  float32x4_t v404;
  uint64_t v405;
  int v406;
  uint64_t v407;
  char v408;
  int v409;
  float v410;
  float32x4_t v411;
  float32x4_t v412;
  uint64_t v413;
  int v414;
  uint64_t v415;
  char v416;
  int v417;
  float v418;
  float32x4_t v419;
  float32x4_t v420;
  uint64_t v421;
  int v422;
  uint64_t v423;
  char v424;
  int v425;
  float v426;
  float32x4_t v427;
  float32x4_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  char v432;
  int v433;
  float v434;
  float32x4_t v435;
  float32x4_t v436;
  uint64_t v437;
  int v438;
  uint64_t v439;
  char v440;
  int v441;
  float v442;
  float32x4_t v443;
  float32x4_t v444;
  uint64_t v445;
  int v446;
  uint64_t v447;
  char v448;
  int v449;
  float v450;
  float32x4_t v451;
  float32x4_t v452;
  uint64_t v453;
  int v454;
  uint64_t v455;
  char v456;
  int v457;
  float v458;
  float32x4_t v459;
  float32x4_t v460;
  uint64_t v461;
  int v462;
  uint64_t v463;
  char v464;
  int v465;
  float v466;
  float32x4_t v467;
  float32x4_t v468;
  uint64_t v469;
  int v470;
  uint64_t v471;
  char v472;
  int v473;
  float v474;
  float32x4_t v475;
  float32x4_t v476;
  uint64_t v477;
  int v478;
  uint64_t v479;
  char v480;
  int v481;
  float v482;
  float32x4_t v483;
  float32x4_t v484;
  uint64_t v485;
  int v486;
  uint64_t v487;
  char v488;
  int v489;
  float v490;
  float32x4_t v491;
  float32x4_t v492;
  uint64_t v493;
  int v494;
  uint64_t v495;
  char v496;
  int v497;
  float32x4_t v498;
  float32x4_t v499;
  uint64_t v500;
  int v501;
  uint64_t v502;
  __int32 v503;

  v7 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v8 = *(_BYTE *)(***(_QWORD ***)a1 + 15521);
  v9 = *(char *)(***(_QWORD ***)a1 + 15526);
  v10 = *(float *)(*(_QWORD *)(v7 + 40784) + 312);
  *(float32x2_t *)a5.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  a5.f32[2] = (float)a2[1].i32[0];
  v11.i64[0] = 0x3F0000003F000000;
  v11.i64[1] = 0x3F0000003F000000;
  v12 = vmulq_n_f32(vaddq_f32(a5, v11), v10);
  v503 = v12.i32[2];
  v502 = v12.i64[0];
  if (v9)
  {
    if ((v9 & 0x80000000) == 0)
      goto LABEL_6;
    v13 = v7 + 2896;
    v8 = -1;
    v14 = 2;
  }
  else
  {
    v13 = v7 + 2896;
    v14 = 0;
  }
  sub_223FFDF1C(v13, &v502, v8, v14, v10);
LABEL_6:
  v15 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v16 = *(_BYTE *)(***(_QWORD ***)a1 + 15561);
  v17 = *(char *)(***(_QWORD ***)a1 + 15566);
  v18 = *(float *)(*(_QWORD *)(v15 + 40784) + 312);
  *(float32x2_t *)v12.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v12.f32[2] = (float)(a2[1].i32[0] + 1);
  v19.i64[0] = 0x3F0000003F000000;
  v19.i64[1] = 0x3F0000003F000000;
  v20 = vmulq_n_f32(vaddq_f32(v12, v19), v18);
  v503 = v20.i32[2];
  v502 = v20.i64[0];
  if (v17)
  {
    if ((v17 & 0x80000000) == 0)
      goto LABEL_11;
    v21 = v15 + 2896;
    v16 = -1;
    v22 = 2;
  }
  else
  {
    v21 = v15 + 2896;
    v22 = 0;
  }
  sub_223FFDF1C(v21, &v502, v16, v22, v18);
LABEL_11:
  v23 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v24 = *(_BYTE *)(***(_QWORD ***)a1 + 15601);
  v25 = *(char *)(***(_QWORD ***)a1 + 15606);
  v26 = *(float *)(*(_QWORD *)(v23 + 40784) + 312);
  *(float32x2_t *)v19.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v19.f32[2] = (float)a2[1].i32[0];
  v27.i64[0] = 0x3F0000003F000000;
  v27.i64[1] = 0x3F0000003F000000;
  v28 = vmulq_n_f32(vaddq_f32(v19, v27), v26);
  v503 = v28.i32[2];
  v502 = v28.i64[0];
  if (v25)
  {
    if ((v25 & 0x80000000) == 0)
      goto LABEL_16;
    v29 = v23 + 2896;
    v24 = -1;
    v30 = 2;
  }
  else
  {
    v29 = v23 + 2896;
    v30 = 0;
  }
  sub_223FFDF1C(v29, &v502, v24, v30, v26);
LABEL_16:
  v31 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v32 = *(_BYTE *)(***(_QWORD ***)a1 + 15641);
  v33 = *(char *)(***(_QWORD ***)a1 + 15646);
  v34 = *(float *)(*(_QWORD *)(v31 + 40784) + 312);
  *(float32x2_t *)v28.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v28.f32[2] = (float)(a2[1].i32[0] + 1);
  v35.i64[0] = 0x3F0000003F000000;
  v35.i64[1] = 0x3F0000003F000000;
  v36 = vmulq_n_f32(vaddq_f32(v28, v35), v34);
  v503 = v36.i32[2];
  v502 = v36.i64[0];
  if (v33)
  {
    if ((v33 & 0x80000000) == 0)
      goto LABEL_21;
    v37 = v31 + 2896;
    v32 = -1;
    v38 = 2;
  }
  else
  {
    v37 = v31 + 2896;
    v38 = 0;
  }
  sub_223FFDF1C(v37, &v502, v32, v38, v34);
LABEL_21:
  v39 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v40 = *(_BYTE *)(***(_QWORD ***)a1 + 15681);
  v41 = *(char *)(***(_QWORD ***)a1 + 15686);
  v42 = *(float *)(*(_QWORD *)(v39 + 40784) + 312);
  *(float32x2_t *)v36.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v36.f32[2] = (float)(a2[1].i32[0] + 2);
  v43.i64[0] = 0x3F0000003F000000;
  v43.i64[1] = 0x3F0000003F000000;
  v44 = vmulq_n_f32(vaddq_f32(v36, v43), v42);
  v503 = v44.i32[2];
  v502 = v44.i64[0];
  if (v41)
  {
    if ((v41 & 0x80000000) == 0)
      goto LABEL_26;
    v45 = v39 + 2896;
    v40 = -1;
    v46 = 2;
  }
  else
  {
    v45 = v39 + 2896;
    v46 = 0;
  }
  sub_223FFDF1C(v45, &v502, v40, v46, v42);
LABEL_26:
  v47 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v48 = *(_BYTE *)(***(_QWORD ***)a1 + 15721);
  v49 = *(char *)(***(_QWORD ***)a1 + 15726);
  v50 = *(float *)(*(_QWORD *)(v47 + 40784) + 312);
  *(float32x2_t *)v44.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v44.f32[2] = (float)(a2[1].i32[0] + 3);
  v51.i64[0] = 0x3F0000003F000000;
  v51.i64[1] = 0x3F0000003F000000;
  v52 = vmulq_n_f32(vaddq_f32(v44, v51), v50);
  v503 = v52.i32[2];
  v502 = v52.i64[0];
  if (v49)
  {
    if ((v49 & 0x80000000) == 0)
      goto LABEL_31;
    v53 = v47 + 2896;
    v48 = -1;
    v54 = 2;
  }
  else
  {
    v53 = v47 + 2896;
    v54 = 0;
  }
  sub_223FFDF1C(v53, &v502, v48, v54, v50);
LABEL_31:
  v55 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v56 = *(_BYTE *)(***(_QWORD ***)a1 + 15761);
  v57 = *(char *)(***(_QWORD ***)a1 + 15766);
  v58 = *(float *)(*(_QWORD *)(v55 + 40784) + 312);
  *(float32x2_t *)v52.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v52.f32[2] = (float)(a2[1].i32[0] + 2);
  v59.i64[0] = 0x3F0000003F000000;
  v59.i64[1] = 0x3F0000003F000000;
  v60 = vmulq_n_f32(vaddq_f32(v52, v59), v58);
  v503 = v60.i32[2];
  v502 = v60.i64[0];
  if (v57)
  {
    if ((v57 & 0x80000000) == 0)
      goto LABEL_36;
    v61 = v55 + 2896;
    v56 = -1;
    v62 = 2;
  }
  else
  {
    v61 = v55 + 2896;
    v62 = 0;
  }
  sub_223FFDF1C(v61, &v502, v56, v62, v58);
LABEL_36:
  v63 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v64 = *(_BYTE *)(***(_QWORD ***)a1 + 15801);
  v65 = *(char *)(***(_QWORD ***)a1 + 15806);
  v66 = *(float *)(*(_QWORD *)(v63 + 40784) + 312);
  *(float32x2_t *)v60.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v60.f32[2] = (float)(a2[1].i32[0] + 3);
  v67.i64[0] = 0x3F0000003F000000;
  v67.i64[1] = 0x3F0000003F000000;
  v68 = vmulq_n_f32(vaddq_f32(v60, v67), v66);
  v503 = v68.i32[2];
  v502 = v68.i64[0];
  if (v65)
  {
    if ((v65 & 0x80000000) == 0)
      goto LABEL_41;
    v69 = v63 + 2896;
    v64 = -1;
    v70 = 2;
  }
  else
  {
    v69 = v63 + 2896;
    v70 = 0;
  }
  sub_223FFDF1C(v69, &v502, v64, v70, v66);
LABEL_41:
  v71 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v72 = *(_BYTE *)(***(_QWORD ***)a1 + 15841);
  v73 = *(char *)(***(_QWORD ***)a1 + 15846);
  v74 = *(float *)(*(_QWORD *)(v71 + 40784) + 312);
  *(float32x2_t *)v68.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v68.f32[2] = (float)(a2[1].i32[0] + 2);
  v75.i64[0] = 0x3F0000003F000000;
  v75.i64[1] = 0x3F0000003F000000;
  v76 = vmulq_n_f32(vaddq_f32(v68, v75), v74);
  v503 = v76.i32[2];
  v502 = v76.i64[0];
  if (v73)
  {
    if ((v73 & 0x80000000) == 0)
      goto LABEL_46;
    v77 = v71 + 2896;
    v72 = -1;
    v78 = 2;
  }
  else
  {
    v77 = v71 + 2896;
    v78 = 0;
  }
  sub_223FFDF1C(v77, &v502, v72, v78, v74);
LABEL_46:
  v79 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v80 = *(_BYTE *)(***(_QWORD ***)a1 + 15881);
  v81 = *(char *)(***(_QWORD ***)a1 + 15886);
  v82 = *(float *)(*(_QWORD *)(v79 + 40784) + 312);
  *(float32x2_t *)v76.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v76.f32[2] = (float)(a2[1].i32[0] + 3);
  v83.i64[0] = 0x3F0000003F000000;
  v83.i64[1] = 0x3F0000003F000000;
  v84 = vmulq_n_f32(vaddq_f32(v76, v83), v82);
  v503 = v84.i32[2];
  v502 = v84.i64[0];
  if (v81)
  {
    if ((v81 & 0x80000000) == 0)
      goto LABEL_51;
    v85 = v79 + 2896;
    v80 = -1;
    v86 = 2;
  }
  else
  {
    v85 = v79 + 2896;
    v86 = 0;
  }
  sub_223FFDF1C(v85, &v502, v80, v86, v82);
LABEL_51:
  v87 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v88 = *(_BYTE *)(***(_QWORD ***)a1 + 15921);
  v89 = *(char *)(***(_QWORD ***)a1 + 15926);
  v90 = *(float *)(*(_QWORD *)(v87 + 40784) + 312);
  *(float32x2_t *)v84.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v84.f32[2] = (float)(a2[1].i32[0] + 2);
  v91.i64[0] = 0x3F0000003F000000;
  v91.i64[1] = 0x3F0000003F000000;
  v92 = vmulq_n_f32(vaddq_f32(v84, v91), v90);
  v503 = v92.i32[2];
  v502 = v92.i64[0];
  if (v89)
  {
    if ((v89 & 0x80000000) == 0)
      goto LABEL_56;
    v93 = v87 + 2896;
    v88 = -1;
    v94 = 2;
  }
  else
  {
    v93 = v87 + 2896;
    v94 = 0;
  }
  sub_223FFDF1C(v93, &v502, v88, v94, v90);
LABEL_56:
  v95 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v96 = *(_BYTE *)(***(_QWORD ***)a1 + 15961);
  v97 = *(char *)(***(_QWORD ***)a1 + 15966);
  v98 = *(float *)(*(_QWORD *)(v95 + 40784) + 312);
  *(float32x2_t *)v92.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v92.f32[2] = (float)(a2[1].i32[0] + 3);
  v99.i64[0] = 0x3F0000003F000000;
  v99.i64[1] = 0x3F0000003F000000;
  v100 = vmulq_n_f32(vaddq_f32(v92, v99), v98);
  v503 = v100.i32[2];
  v502 = v100.i64[0];
  if (v97)
  {
    if ((v97 & 0x80000000) == 0)
      goto LABEL_61;
    v101 = v95 + 2896;
    v96 = -1;
    v102 = 2;
  }
  else
  {
    v101 = v95 + 2896;
    v102 = 0;
  }
  sub_223FFDF1C(v101, &v502, v96, v102, v98);
LABEL_61:
  v103 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v104 = *(_BYTE *)(***(_QWORD ***)a1 + 16001);
  v105 = *(char *)(***(_QWORD ***)a1 + 16006);
  v106 = *(float *)(*(_QWORD *)(v103 + 40784) + 312);
  *(float32x2_t *)v99.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v99.f32[2] = (float)a2[1].i32[0];
  v107.i64[0] = 0x3F0000003F000000;
  v107.i64[1] = 0x3F0000003F000000;
  v108 = vmulq_n_f32(vaddq_f32(v99, v107), v106);
  v503 = v108.i32[2];
  v502 = v108.i64[0];
  if (v105)
  {
    if ((v105 & 0x80000000) == 0)
      goto LABEL_66;
    v109 = v103 + 2896;
    v104 = -1;
    v110 = 2;
  }
  else
  {
    v109 = v103 + 2896;
    v110 = 0;
  }
  sub_223FFDF1C(v109, &v502, v104, v110, v106);
LABEL_66:
  v111 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v112 = *(_BYTE *)(***(_QWORD ***)a1 + 16041);
  v113 = *(char *)(***(_QWORD ***)a1 + 16046);
  v114 = *(float *)(*(_QWORD *)(v111 + 40784) + 312);
  *(float32x2_t *)v108.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v108.f32[2] = (float)(a2[1].i32[0] + 1);
  v115.i64[0] = 0x3F0000003F000000;
  v115.i64[1] = 0x3F0000003F000000;
  v116 = vmulq_n_f32(vaddq_f32(v108, v115), v114);
  v503 = v116.i32[2];
  v502 = v116.i64[0];
  if (v113)
  {
    if ((v113 & 0x80000000) == 0)
      goto LABEL_71;
    v117 = v111 + 2896;
    v112 = -1;
    v118 = 2;
  }
  else
  {
    v117 = v111 + 2896;
    v118 = 0;
  }
  sub_223FFDF1C(v117, &v502, v112, v118, v114);
LABEL_71:
  v119 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v120 = *(_BYTE *)(***(_QWORD ***)a1 + 16081);
  v121 = *(char *)(***(_QWORD ***)a1 + 16086);
  v122 = *(float *)(*(_QWORD *)(v119 + 40784) + 312);
  *(float32x2_t *)v115.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v115.f32[2] = (float)a2[1].i32[0];
  v123.i64[0] = 0x3F0000003F000000;
  v123.i64[1] = 0x3F0000003F000000;
  v124 = vmulq_n_f32(vaddq_f32(v115, v123), v122);
  v503 = v124.i32[2];
  v502 = v124.i64[0];
  if (v121)
  {
    if ((v121 & 0x80000000) == 0)
      goto LABEL_76;
    v125 = v119 + 2896;
    v120 = -1;
    v126 = 2;
  }
  else
  {
    v125 = v119 + 2896;
    v126 = 0;
  }
  sub_223FFDF1C(v125, &v502, v120, v126, v122);
LABEL_76:
  v127 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v128 = *(_BYTE *)(***(_QWORD ***)a1 + 16121);
  v129 = *(char *)(***(_QWORD ***)a1 + 16126);
  v130 = *(float *)(*(_QWORD *)(v127 + 40784) + 312);
  *(float32x2_t *)v124.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v124.f32[2] = (float)(a2[1].i32[0] + 1);
  v131.i64[0] = 0x3F0000003F000000;
  v131.i64[1] = 0x3F0000003F000000;
  v132 = vmulq_n_f32(vaddq_f32(v124, v131), v130);
  v503 = v132.i32[2];
  v502 = v132.i64[0];
  if (v129)
  {
    if ((v129 & 0x80000000) == 0)
      goto LABEL_81;
    v133 = v127 + 2896;
    v128 = -1;
    v134 = 2;
  }
  else
  {
    v133 = v127 + 2896;
    v134 = 0;
  }
  sub_223FFDF1C(v133, &v502, v128, v134, v130);
LABEL_81:
  v135 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v136 = *(_BYTE *)(***(_QWORD ***)a1 + 16161);
  v137 = *(char *)(***(_QWORD ***)a1 + 16166);
  v138 = *(float *)(*(_QWORD *)(v135 + 40784) + 312);
  *(float32x2_t *)v131.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v131.f32[2] = (float)a2[1].i32[0];
  v139.i64[0] = 0x3F0000003F000000;
  v139.i64[1] = 0x3F0000003F000000;
  v140 = vmulq_n_f32(vaddq_f32(v131, v139), v138);
  v503 = v140.i32[2];
  v502 = v140.i64[0];
  if (v137)
  {
    if ((v137 & 0x80000000) == 0)
      goto LABEL_86;
    v141 = v135 + 2896;
    v136 = -1;
    v142 = 2;
  }
  else
  {
    v141 = v135 + 2896;
    v142 = 0;
  }
  sub_223FFDF1C(v141, &v502, v136, v142, v138);
LABEL_86:
  v143 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v144 = *(_BYTE *)(***(_QWORD ***)a1 + 16201);
  v145 = *(char *)(***(_QWORD ***)a1 + 16206);
  v146 = *(float *)(*(_QWORD *)(v143 + 40784) + 312);
  *(float32x2_t *)v140.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v140.f32[2] = (float)(a2[1].i32[0] + 1);
  v147.i64[0] = 0x3F0000003F000000;
  v147.i64[1] = 0x3F0000003F000000;
  v148 = vmulq_n_f32(vaddq_f32(v140, v147), v146);
  v503 = v148.i32[2];
  v502 = v148.i64[0];
  if (v145)
  {
    if ((v145 & 0x80000000) == 0)
      goto LABEL_91;
    v149 = v143 + 2896;
    v144 = -1;
    v150 = 2;
  }
  else
  {
    v149 = v143 + 2896;
    v150 = 0;
  }
  sub_223FFDF1C(v149, &v502, v144, v150, v146);
LABEL_91:
  v151 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v152 = *(_BYTE *)(***(_QWORD ***)a1 + 16241);
  v153 = *(char *)(***(_QWORD ***)a1 + 16246);
  v154 = *(float *)(*(_QWORD *)(v151 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v147.f32[2] = (float)a2[1].i32[0];
  v155.i64[0] = 0x3F0000003F000000;
  v155.i64[1] = 0x3F0000003F000000;
  v156 = vmulq_n_f32(vaddq_f32(v147, v155), v154);
  v503 = v156.i32[2];
  v502 = v156.i64[0];
  if (v153)
  {
    if ((v153 & 0x80000000) == 0)
      goto LABEL_96;
    v157 = v151 + 2896;
    v152 = -1;
    v158 = 2;
  }
  else
  {
    v157 = v151 + 2896;
    v158 = 0;
  }
  sub_223FFDF1C(v157, &v502, v152, v158, v154);
LABEL_96:
  v159 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v160 = *(_BYTE *)(***(_QWORD ***)a1 + 16281);
  v161 = *(char *)(***(_QWORD ***)a1 + 16286);
  v162 = *(float *)(*(_QWORD *)(v159 + 40784) + 312);
  *(float32x2_t *)v156.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v156.f32[2] = (float)(a2[1].i32[0] + 1);
  v163.i64[0] = 0x3F0000003F000000;
  v163.i64[1] = 0x3F0000003F000000;
  v164 = vmulq_n_f32(vaddq_f32(v156, v163), v162);
  v503 = v164.i32[2];
  v502 = v164.i64[0];
  if (v161)
  {
    if ((v161 & 0x80000000) == 0)
      goto LABEL_101;
    v165 = v159 + 2896;
    v160 = -1;
    v166 = 2;
  }
  else
  {
    v165 = v159 + 2896;
    v166 = 0;
  }
  sub_223FFDF1C(v165, &v502, v160, v166, v162);
LABEL_101:
  v167 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v168 = *(_BYTE *)(***(_QWORD ***)a1 + 16321);
  v169 = *(char *)(***(_QWORD ***)a1 + 16326);
  v170 = *(float *)(*(_QWORD *)(v167 + 40784) + 312);
  *(float32x2_t *)v164.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v164.f32[2] = (float)(a2[1].i32[0] + 2);
  v171.i64[0] = 0x3F0000003F000000;
  v171.i64[1] = 0x3F0000003F000000;
  v172 = vmulq_n_f32(vaddq_f32(v164, v171), v170);
  v503 = v172.i32[2];
  v502 = v172.i64[0];
  if (v169)
  {
    if ((v169 & 0x80000000) == 0)
      goto LABEL_106;
    v173 = v167 + 2896;
    v168 = -1;
    v174 = 2;
  }
  else
  {
    v173 = v167 + 2896;
    v174 = 0;
  }
  sub_223FFDF1C(v173, &v502, v168, v174, v170);
LABEL_106:
  v175 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v176 = *(_BYTE *)(***(_QWORD ***)a1 + 16361);
  v177 = *(char *)(***(_QWORD ***)a1 + 16366);
  v178 = *(float *)(*(_QWORD *)(v175 + 40784) + 312);
  *(float32x2_t *)v172.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v172.f32[2] = (float)(a2[1].i32[0] + 3);
  v179.i64[0] = 0x3F0000003F000000;
  v179.i64[1] = 0x3F0000003F000000;
  v180 = vmulq_n_f32(vaddq_f32(v172, v179), v178);
  v503 = v180.i32[2];
  v502 = v180.i64[0];
  if (v177)
  {
    if ((v177 & 0x80000000) == 0)
      goto LABEL_111;
    v181 = v175 + 2896;
    v176 = -1;
    v182 = 2;
  }
  else
  {
    v181 = v175 + 2896;
    v182 = 0;
  }
  sub_223FFDF1C(v181, &v502, v176, v182, v178);
LABEL_111:
  v183 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v184 = *(_BYTE *)(***(_QWORD ***)a1 + 16401);
  v185 = *(char *)(***(_QWORD ***)a1 + 16406);
  v186 = *(float *)(*(_QWORD *)(v183 + 40784) + 312);
  *(float32x2_t *)v180.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v180.f32[2] = (float)(a2[1].i32[0] + 2);
  v187.i64[0] = 0x3F0000003F000000;
  v187.i64[1] = 0x3F0000003F000000;
  v188 = vmulq_n_f32(vaddq_f32(v180, v187), v186);
  v503 = v188.i32[2];
  v502 = v188.i64[0];
  if (v185)
  {
    if ((v185 & 0x80000000) == 0)
      goto LABEL_116;
    v189 = v183 + 2896;
    v184 = -1;
    v190 = 2;
  }
  else
  {
    v189 = v183 + 2896;
    v190 = 0;
  }
  sub_223FFDF1C(v189, &v502, v184, v190, v186);
LABEL_116:
  v191 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v192 = *(_BYTE *)(***(_QWORD ***)a1 + 16441);
  v193 = *(char *)(***(_QWORD ***)a1 + 16446);
  v194 = *(float *)(*(_QWORD *)(v191 + 40784) + 312);
  *(float32x2_t *)v188.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v188.f32[2] = (float)(a2[1].i32[0] + 3);
  v195.i64[0] = 0x3F0000003F000000;
  v195.i64[1] = 0x3F0000003F000000;
  v196 = vmulq_n_f32(vaddq_f32(v188, v195), v194);
  v503 = v196.i32[2];
  v502 = v196.i64[0];
  if (v193)
  {
    if ((v193 & 0x80000000) == 0)
      goto LABEL_121;
    v197 = v191 + 2896;
    v192 = -1;
    v198 = 2;
  }
  else
  {
    v197 = v191 + 2896;
    v198 = 0;
  }
  sub_223FFDF1C(v197, &v502, v192, v198, v194);
LABEL_121:
  v199 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v200 = *(_BYTE *)(***(_QWORD ***)a1 + 16481);
  v201 = *(char *)(***(_QWORD ***)a1 + 16486);
  v202 = *(float *)(*(_QWORD *)(v199 + 40784) + 312);
  *(float32x2_t *)v196.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v196.f32[2] = (float)(a2[1].i32[0] + 2);
  v203.i64[0] = 0x3F0000003F000000;
  v203.i64[1] = 0x3F0000003F000000;
  v204 = vmulq_n_f32(vaddq_f32(v196, v203), v202);
  v503 = v204.i32[2];
  v502 = v204.i64[0];
  if (v201)
  {
    if ((v201 & 0x80000000) == 0)
      goto LABEL_126;
    v205 = v199 + 2896;
    v200 = -1;
    v206 = 2;
  }
  else
  {
    v205 = v199 + 2896;
    v206 = 0;
  }
  sub_223FFDF1C(v205, &v502, v200, v206, v202);
LABEL_126:
  v207 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v208 = *(_BYTE *)(***(_QWORD ***)a1 + 16521);
  v209 = *(char *)(***(_QWORD ***)a1 + 16526);
  v210 = *(float *)(*(_QWORD *)(v207 + 40784) + 312);
  *(float32x2_t *)v204.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v204.f32[2] = (float)(a2[1].i32[0] + 3);
  v211.i64[0] = 0x3F0000003F000000;
  v211.i64[1] = 0x3F0000003F000000;
  v212 = vmulq_n_f32(vaddq_f32(v204, v211), v210);
  v503 = v212.i32[2];
  v502 = v212.i64[0];
  if (v209)
  {
    if ((v209 & 0x80000000) == 0)
      goto LABEL_131;
    v213 = v207 + 2896;
    v208 = -1;
    v214 = 2;
  }
  else
  {
    v213 = v207 + 2896;
    v214 = 0;
  }
  sub_223FFDF1C(v213, &v502, v208, v214, v210);
LABEL_131:
  v215 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v216 = *(_BYTE *)(***(_QWORD ***)a1 + 16561);
  v217 = *(char *)(***(_QWORD ***)a1 + 16566);
  v218 = *(float *)(*(_QWORD *)(v215 + 40784) + 312);
  *(float32x2_t *)v212.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v212.f32[2] = (float)(a2[1].i32[0] + 2);
  v219.i64[0] = 0x3F0000003F000000;
  v219.i64[1] = 0x3F0000003F000000;
  v220 = vmulq_n_f32(vaddq_f32(v212, v219), v218);
  v503 = v220.i32[2];
  v502 = v220.i64[0];
  if (v217)
  {
    if ((v217 & 0x80000000) == 0)
      goto LABEL_136;
    v221 = v215 + 2896;
    v216 = -1;
    v222 = 2;
  }
  else
  {
    v221 = v215 + 2896;
    v222 = 0;
  }
  sub_223FFDF1C(v221, &v502, v216, v222, v218);
LABEL_136:
  v223 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v224 = *(_BYTE *)(***(_QWORD ***)a1 + 16601);
  v225 = *(char *)(***(_QWORD ***)a1 + 16606);
  v226 = *(float *)(*(_QWORD *)(v223 + 40784) + 312);
  *(float32x2_t *)v220.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v220.f32[2] = (float)(a2[1].i32[0] + 3);
  v227.i64[0] = 0x3F0000003F000000;
  v227.i64[1] = 0x3F0000003F000000;
  v228 = vmulq_n_f32(vaddq_f32(v220, v227), v226);
  v503 = v228.i32[2];
  v502 = v228.i64[0];
  if (v225)
  {
    if ((v225 & 0x80000000) == 0)
      goto LABEL_141;
    v229 = v223 + 2896;
    v224 = -1;
    v230 = 2;
  }
  else
  {
    v229 = v223 + 2896;
    v230 = 0;
  }
  sub_223FFDF1C(v229, &v502, v224, v230, v226);
LABEL_141:
  v231 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v232 = *(_BYTE *)(***(_QWORD ***)a1 + 16641);
  v233 = *(char *)(***(_QWORD ***)a1 + 16646);
  v234 = *(float *)(*(_QWORD *)(v231 + 40784) + 312);
  *(float32x2_t *)v227.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v227.f32[2] = (float)a2[1].i32[0];
  v235.i64[0] = 0x3F0000003F000000;
  v235.i64[1] = 0x3F0000003F000000;
  v236 = vmulq_n_f32(vaddq_f32(v227, v235), v234);
  v503 = v236.i32[2];
  v502 = v236.i64[0];
  if (v233)
  {
    if ((v233 & 0x80000000) == 0)
      goto LABEL_146;
    v237 = v231 + 2896;
    v232 = -1;
    v238 = 2;
  }
  else
  {
    v237 = v231 + 2896;
    v238 = 0;
  }
  sub_223FFDF1C(v237, &v502, v232, v238, v234);
LABEL_146:
  v239 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v240 = *(_BYTE *)(***(_QWORD ***)a1 + 16681);
  v241 = *(char *)(***(_QWORD ***)a1 + 16686);
  v242 = *(float *)(*(_QWORD *)(v239 + 40784) + 312);
  *(float32x2_t *)v236.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v236.f32[2] = (float)(a2[1].i32[0] + 1);
  v243.i64[0] = 0x3F0000003F000000;
  v243.i64[1] = 0x3F0000003F000000;
  v244 = vmulq_n_f32(vaddq_f32(v236, v243), v242);
  v503 = v244.i32[2];
  v502 = v244.i64[0];
  if (v241)
  {
    if ((v241 & 0x80000000) == 0)
      goto LABEL_151;
    v245 = v239 + 2896;
    v240 = -1;
    v246 = 2;
  }
  else
  {
    v245 = v239 + 2896;
    v246 = 0;
  }
  sub_223FFDF1C(v245, &v502, v240, v246, v242);
LABEL_151:
  v247 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v248 = *(_BYTE *)(***(_QWORD ***)a1 + 16721);
  v249 = *(char *)(***(_QWORD ***)a1 + 16726);
  v250 = *(float *)(*(_QWORD *)(v247 + 40784) + 312);
  *(float32x2_t *)v243.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v243.f32[2] = (float)a2[1].i32[0];
  v251.i64[0] = 0x3F0000003F000000;
  v251.i64[1] = 0x3F0000003F000000;
  v252 = vmulq_n_f32(vaddq_f32(v243, v251), v250);
  v503 = v252.i32[2];
  v502 = v252.i64[0];
  if (v249)
  {
    if ((v249 & 0x80000000) == 0)
      goto LABEL_156;
    v253 = v247 + 2896;
    v248 = -1;
    v254 = 2;
  }
  else
  {
    v253 = v247 + 2896;
    v254 = 0;
  }
  sub_223FFDF1C(v253, &v502, v248, v254, v250);
LABEL_156:
  v255 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v256 = *(_BYTE *)(***(_QWORD ***)a1 + 16761);
  v257 = *(char *)(***(_QWORD ***)a1 + 16766);
  v258 = *(float *)(*(_QWORD *)(v255 + 40784) + 312);
  *(float32x2_t *)v252.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v252.f32[2] = (float)(a2[1].i32[0] + 1);
  v259.i64[0] = 0x3F0000003F000000;
  v259.i64[1] = 0x3F0000003F000000;
  v260 = vmulq_n_f32(vaddq_f32(v252, v259), v258);
  v503 = v260.i32[2];
  v502 = v260.i64[0];
  if (v257)
  {
    if ((v257 & 0x80000000) == 0)
      goto LABEL_161;
    v261 = v255 + 2896;
    v256 = -1;
    v262 = 2;
  }
  else
  {
    v261 = v255 + 2896;
    v262 = 0;
  }
  sub_223FFDF1C(v261, &v502, v256, v262, v258);
LABEL_161:
  v263 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v264 = *(_BYTE *)(***(_QWORD ***)a1 + 16801);
  v265 = *(char *)(***(_QWORD ***)a1 + 16806);
  v266 = *(float *)(*(_QWORD *)(v263 + 40784) + 312);
  *(float32x2_t *)v259.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v259.f32[2] = (float)a2[1].i32[0];
  v267.i64[0] = 0x3F0000003F000000;
  v267.i64[1] = 0x3F0000003F000000;
  v268 = vmulq_n_f32(vaddq_f32(v259, v267), v266);
  v503 = v268.i32[2];
  v502 = v268.i64[0];
  if (v265)
  {
    if ((v265 & 0x80000000) == 0)
      goto LABEL_166;
    v269 = v263 + 2896;
    v264 = -1;
    v270 = 2;
  }
  else
  {
    v269 = v263 + 2896;
    v270 = 0;
  }
  sub_223FFDF1C(v269, &v502, v264, v270, v266);
LABEL_166:
  v271 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v272 = *(_BYTE *)(***(_QWORD ***)a1 + 16841);
  v273 = *(char *)(***(_QWORD ***)a1 + 16846);
  v274 = *(float *)(*(_QWORD *)(v271 + 40784) + 312);
  *(float32x2_t *)v268.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v268.f32[2] = (float)(a2[1].i32[0] + 1);
  v275.i64[0] = 0x3F0000003F000000;
  v275.i64[1] = 0x3F0000003F000000;
  v276 = vmulq_n_f32(vaddq_f32(v268, v275), v274);
  v503 = v276.i32[2];
  v502 = v276.i64[0];
  if (v273)
  {
    if ((v273 & 0x80000000) == 0)
      goto LABEL_171;
    v277 = v271 + 2896;
    v272 = -1;
    v278 = 2;
  }
  else
  {
    v277 = v271 + 2896;
    v278 = 0;
  }
  sub_223FFDF1C(v277, &v502, v272, v278, v274);
LABEL_171:
  v279 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v280 = *(_BYTE *)(***(_QWORD ***)a1 + 16881);
  v281 = *(char *)(***(_QWORD ***)a1 + 16886);
  v282 = *(float *)(*(_QWORD *)(v279 + 40784) + 312);
  *(float32x2_t *)v275.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v275.f32[2] = (float)a2[1].i32[0];
  v283.i64[0] = 0x3F0000003F000000;
  v283.i64[1] = 0x3F0000003F000000;
  v284 = vmulq_n_f32(vaddq_f32(v275, v283), v282);
  v503 = v284.i32[2];
  v502 = v284.i64[0];
  if (v281)
  {
    if ((v281 & 0x80000000) == 0)
      goto LABEL_176;
    v285 = v279 + 2896;
    v280 = -1;
    v286 = 2;
  }
  else
  {
    v285 = v279 + 2896;
    v286 = 0;
  }
  sub_223FFDF1C(v285, &v502, v280, v286, v282);
LABEL_176:
  v287 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v288 = *(_BYTE *)(***(_QWORD ***)a1 + 16921);
  v289 = *(char *)(***(_QWORD ***)a1 + 16926);
  v290 = *(float *)(*(_QWORD *)(v287 + 40784) + 312);
  *(float32x2_t *)v284.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v284.f32[2] = (float)(a2[1].i32[0] + 1);
  v291.i64[0] = 0x3F0000003F000000;
  v291.i64[1] = 0x3F0000003F000000;
  v292 = vmulq_n_f32(vaddq_f32(v284, v291), v290);
  v503 = v292.i32[2];
  v502 = v292.i64[0];
  if (v289)
  {
    if ((v289 & 0x80000000) == 0)
      goto LABEL_181;
    v293 = v287 + 2896;
    v288 = -1;
    v294 = 2;
  }
  else
  {
    v293 = v287 + 2896;
    v294 = 0;
  }
  sub_223FFDF1C(v293, &v502, v288, v294, v290);
LABEL_181:
  v295 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v296 = *(_BYTE *)(***(_QWORD ***)a1 + 16961);
  v297 = *(char *)(***(_QWORD ***)a1 + 16966);
  v298 = *(float *)(*(_QWORD *)(v295 + 40784) + 312);
  *(float32x2_t *)v292.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v292.f32[2] = (float)(a2[1].i32[0] + 2);
  v299.i64[0] = 0x3F0000003F000000;
  v299.i64[1] = 0x3F0000003F000000;
  v300 = vmulq_n_f32(vaddq_f32(v292, v299), v298);
  v503 = v300.i32[2];
  v502 = v300.i64[0];
  if (v297)
  {
    if ((v297 & 0x80000000) == 0)
      goto LABEL_186;
    v301 = v295 + 2896;
    v296 = -1;
    v302 = 2;
  }
  else
  {
    v301 = v295 + 2896;
    v302 = 0;
  }
  sub_223FFDF1C(v301, &v502, v296, v302, v298);
LABEL_186:
  v303 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v304 = *(_BYTE *)(***(_QWORD ***)a1 + 17001);
  v305 = *(char *)(***(_QWORD ***)a1 + 17006);
  v306 = *(float *)(*(_QWORD *)(v303 + 40784) + 312);
  *(float32x2_t *)v300.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v300.f32[2] = (float)(a2[1].i32[0] + 3);
  v307.i64[0] = 0x3F0000003F000000;
  v307.i64[1] = 0x3F0000003F000000;
  v308 = vmulq_n_f32(vaddq_f32(v300, v307), v306);
  v503 = v308.i32[2];
  v502 = v308.i64[0];
  if (v305)
  {
    if ((v305 & 0x80000000) == 0)
      goto LABEL_191;
    v309 = v303 + 2896;
    v304 = -1;
    v310 = 2;
  }
  else
  {
    v309 = v303 + 2896;
    v310 = 0;
  }
  sub_223FFDF1C(v309, &v502, v304, v310, v306);
LABEL_191:
  v311 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v312 = *(_BYTE *)(***(_QWORD ***)a1 + 17041);
  v313 = *(char *)(***(_QWORD ***)a1 + 17046);
  v314 = *(float *)(*(_QWORD *)(v311 + 40784) + 312);
  *(float32x2_t *)v308.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v308.f32[2] = (float)(a2[1].i32[0] + 2);
  v315.i64[0] = 0x3F0000003F000000;
  v315.i64[1] = 0x3F0000003F000000;
  v316 = vmulq_n_f32(vaddq_f32(v308, v315), v314);
  v503 = v316.i32[2];
  v502 = v316.i64[0];
  if (v313)
  {
    if ((v313 & 0x80000000) == 0)
      goto LABEL_196;
    v317 = v311 + 2896;
    v312 = -1;
    v318 = 2;
  }
  else
  {
    v317 = v311 + 2896;
    v318 = 0;
  }
  sub_223FFDF1C(v317, &v502, v312, v318, v314);
LABEL_196:
  v319 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v320 = *(_BYTE *)(***(_QWORD ***)a1 + 17081);
  v321 = *(char *)(***(_QWORD ***)a1 + 17086);
  v322 = *(float *)(*(_QWORD *)(v319 + 40784) + 312);
  *(float32x2_t *)v316.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v316.f32[2] = (float)(a2[1].i32[0] + 3);
  v323.i64[0] = 0x3F0000003F000000;
  v323.i64[1] = 0x3F0000003F000000;
  v324 = vmulq_n_f32(vaddq_f32(v316, v323), v322);
  v503 = v324.i32[2];
  v502 = v324.i64[0];
  if (v321)
  {
    if ((v321 & 0x80000000) == 0)
      goto LABEL_201;
    v325 = v319 + 2896;
    v320 = -1;
    v326 = 2;
  }
  else
  {
    v325 = v319 + 2896;
    v326 = 0;
  }
  sub_223FFDF1C(v325, &v502, v320, v326, v322);
LABEL_201:
  v327 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v328 = *(_BYTE *)(***(_QWORD ***)a1 + 17121);
  v329 = *(char *)(***(_QWORD ***)a1 + 17126);
  v330 = *(float *)(*(_QWORD *)(v327 + 40784) + 312);
  *(float32x2_t *)v324.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v324.f32[2] = (float)(a2[1].i32[0] + 2);
  v331.i64[0] = 0x3F0000003F000000;
  v331.i64[1] = 0x3F0000003F000000;
  v332 = vmulq_n_f32(vaddq_f32(v324, v331), v330);
  v503 = v332.i32[2];
  v502 = v332.i64[0];
  if (v329)
  {
    if ((v329 & 0x80000000) == 0)
      goto LABEL_206;
    v333 = v327 + 2896;
    v328 = -1;
    v334 = 2;
  }
  else
  {
    v333 = v327 + 2896;
    v334 = 0;
  }
  sub_223FFDF1C(v333, &v502, v328, v334, v330);
LABEL_206:
  v335 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v336 = *(_BYTE *)(***(_QWORD ***)a1 + 17161);
  v337 = *(char *)(***(_QWORD ***)a1 + 17166);
  v338 = *(float *)(*(_QWORD *)(v335 + 40784) + 312);
  *(float32x2_t *)v332.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v332.f32[2] = (float)(a2[1].i32[0] + 3);
  v339.i64[0] = 0x3F0000003F000000;
  v339.i64[1] = 0x3F0000003F000000;
  v340 = vmulq_n_f32(vaddq_f32(v332, v339), v338);
  v503 = v340.i32[2];
  v502 = v340.i64[0];
  if (v337)
  {
    if ((v337 & 0x80000000) == 0)
      goto LABEL_211;
    v341 = v335 + 2896;
    v336 = -1;
    v342 = 2;
  }
  else
  {
    v341 = v335 + 2896;
    v342 = 0;
  }
  sub_223FFDF1C(v341, &v502, v336, v342, v338);
LABEL_211:
  v343 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v344 = *(_BYTE *)(***(_QWORD ***)a1 + 17201);
  v345 = *(char *)(***(_QWORD ***)a1 + 17206);
  v346 = *(float *)(*(_QWORD *)(v343 + 40784) + 312);
  *(float32x2_t *)v340.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v340.f32[2] = (float)(a2[1].i32[0] + 2);
  v347.i64[0] = 0x3F0000003F000000;
  v347.i64[1] = 0x3F0000003F000000;
  v348 = vmulq_n_f32(vaddq_f32(v340, v347), v346);
  v503 = v348.i32[2];
  v502 = v348.i64[0];
  if (v345)
  {
    if ((v345 & 0x80000000) == 0)
      goto LABEL_216;
    v349 = v343 + 2896;
    v344 = -1;
    v350 = 2;
  }
  else
  {
    v349 = v343 + 2896;
    v350 = 0;
  }
  sub_223FFDF1C(v349, &v502, v344, v350, v346);
LABEL_216:
  v351 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v352 = *(_BYTE *)(***(_QWORD ***)a1 + 17241);
  v353 = *(char *)(***(_QWORD ***)a1 + 17246);
  v354 = *(float *)(*(_QWORD *)(v351 + 40784) + 312);
  *(float32x2_t *)v348.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v348.f32[2] = (float)(a2[1].i32[0] + 3);
  v355.i64[0] = 0x3F0000003F000000;
  v355.i64[1] = 0x3F0000003F000000;
  v356 = vmulq_n_f32(vaddq_f32(v348, v355), v354);
  v503 = v356.i32[2];
  v502 = v356.i64[0];
  if (v353)
  {
    if ((v353 & 0x80000000) == 0)
      goto LABEL_221;
    v357 = v351 + 2896;
    v352 = -1;
    v358 = 2;
  }
  else
  {
    v357 = v351 + 2896;
    v358 = 0;
  }
  sub_223FFDF1C(v357, &v502, v352, v358, v354);
LABEL_221:
  v359 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v360 = *(_BYTE *)(***(_QWORD ***)a1 + 17281);
  v361 = *(char *)(***(_QWORD ***)a1 + 17286);
  v362 = *(float *)(*(_QWORD *)(v359 + 40784) + 312);
  *(float32x2_t *)v355.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v355.f32[2] = (float)a2[1].i32[0];
  v363.i64[0] = 0x3F0000003F000000;
  v363.i64[1] = 0x3F0000003F000000;
  v364 = vmulq_n_f32(vaddq_f32(v355, v363), v362);
  v503 = v364.i32[2];
  v502 = v364.i64[0];
  if (v361)
  {
    if ((v361 & 0x80000000) == 0)
      goto LABEL_226;
    v365 = v359 + 2896;
    v360 = -1;
    v366 = 2;
  }
  else
  {
    v365 = v359 + 2896;
    v366 = 0;
  }
  sub_223FFDF1C(v365, &v502, v360, v366, v362);
LABEL_226:
  v367 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v368 = *(_BYTE *)(***(_QWORD ***)a1 + 17321);
  v369 = *(char *)(***(_QWORD ***)a1 + 17326);
  v370 = *(float *)(*(_QWORD *)(v367 + 40784) + 312);
  *(float32x2_t *)v364.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v364.f32[2] = (float)(a2[1].i32[0] + 1);
  v371.i64[0] = 0x3F0000003F000000;
  v371.i64[1] = 0x3F0000003F000000;
  v372 = vmulq_n_f32(vaddq_f32(v364, v371), v370);
  v503 = v372.i32[2];
  v502 = v372.i64[0];
  if (v369)
  {
    if ((v369 & 0x80000000) == 0)
      goto LABEL_231;
    v373 = v367 + 2896;
    v368 = -1;
    v374 = 2;
  }
  else
  {
    v373 = v367 + 2896;
    v374 = 0;
  }
  sub_223FFDF1C(v373, &v502, v368, v374, v370);
LABEL_231:
  v375 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v376 = *(_BYTE *)(***(_QWORD ***)a1 + 17361);
  v377 = *(char *)(***(_QWORD ***)a1 + 17366);
  v378 = *(float *)(*(_QWORD *)(v375 + 40784) + 312);
  *(float32x2_t *)v371.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v371.f32[2] = (float)a2[1].i32[0];
  v379.i64[0] = 0x3F0000003F000000;
  v379.i64[1] = 0x3F0000003F000000;
  v380 = vmulq_n_f32(vaddq_f32(v371, v379), v378);
  v503 = v380.i32[2];
  v502 = v380.i64[0];
  if (v377)
  {
    if ((v377 & 0x80000000) == 0)
      goto LABEL_236;
    v381 = v375 + 2896;
    v376 = -1;
    v382 = 2;
  }
  else
  {
    v381 = v375 + 2896;
    v382 = 0;
  }
  sub_223FFDF1C(v381, &v502, v376, v382, v378);
LABEL_236:
  v383 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v384 = *(_BYTE *)(***(_QWORD ***)a1 + 17401);
  v385 = *(char *)(***(_QWORD ***)a1 + 17406);
  v386 = *(float *)(*(_QWORD *)(v383 + 40784) + 312);
  *(float32x2_t *)v380.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v380.f32[2] = (float)(a2[1].i32[0] + 1);
  v387.i64[0] = 0x3F0000003F000000;
  v387.i64[1] = 0x3F0000003F000000;
  v388 = vmulq_n_f32(vaddq_f32(v380, v387), v386);
  v503 = v388.i32[2];
  v502 = v388.i64[0];
  if (v385)
  {
    if ((v385 & 0x80000000) == 0)
      goto LABEL_241;
    v389 = v383 + 2896;
    v384 = -1;
    v390 = 2;
  }
  else
  {
    v389 = v383 + 2896;
    v390 = 0;
  }
  sub_223FFDF1C(v389, &v502, v384, v390, v386);
LABEL_241:
  v391 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v392 = *(_BYTE *)(***(_QWORD ***)a1 + 17441);
  v393 = *(char *)(***(_QWORD ***)a1 + 17446);
  v394 = *(float *)(*(_QWORD *)(v391 + 40784) + 312);
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v387.f32[2] = (float)a2[1].i32[0];
  v395.i64[0] = 0x3F0000003F000000;
  v395.i64[1] = 0x3F0000003F000000;
  v396 = vmulq_n_f32(vaddq_f32(v387, v395), v394);
  v503 = v396.i32[2];
  v502 = v396.i64[0];
  if (v393)
  {
    if ((v393 & 0x80000000) == 0)
      goto LABEL_246;
    v397 = v391 + 2896;
    v392 = -1;
    v398 = 2;
  }
  else
  {
    v397 = v391 + 2896;
    v398 = 0;
  }
  sub_223FFDF1C(v397, &v502, v392, v398, v394);
LABEL_246:
  v399 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v400 = *(_BYTE *)(***(_QWORD ***)a1 + 17481);
  v401 = *(char *)(***(_QWORD ***)a1 + 17486);
  v402 = *(float *)(*(_QWORD *)(v399 + 40784) + 312);
  *(float32x2_t *)v396.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v396.f32[2] = (float)(a2[1].i32[0] + 1);
  v403.i64[0] = 0x3F0000003F000000;
  v403.i64[1] = 0x3F0000003F000000;
  v404 = vmulq_n_f32(vaddq_f32(v396, v403), v402);
  v503 = v404.i32[2];
  v502 = v404.i64[0];
  if (v401)
  {
    if ((v401 & 0x80000000) == 0)
      goto LABEL_251;
    v405 = v399 + 2896;
    v400 = -1;
    v406 = 2;
  }
  else
  {
    v405 = v399 + 2896;
    v406 = 0;
  }
  sub_223FFDF1C(v405, &v502, v400, v406, v402);
LABEL_251:
  v407 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v408 = *(_BYTE *)(***(_QWORD ***)a1 + 17521);
  v409 = *(char *)(***(_QWORD ***)a1 + 17526);
  v410 = *(float *)(*(_QWORD *)(v407 + 40784) + 312);
  *(float32x2_t *)v403.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v403.f32[2] = (float)a2[1].i32[0];
  v411.i64[0] = 0x3F0000003F000000;
  v411.i64[1] = 0x3F0000003F000000;
  v412 = vmulq_n_f32(vaddq_f32(v403, v411), v410);
  v503 = v412.i32[2];
  v502 = v412.i64[0];
  if (v409)
  {
    if ((v409 & 0x80000000) == 0)
      goto LABEL_256;
    v413 = v407 + 2896;
    v408 = -1;
    v414 = 2;
  }
  else
  {
    v413 = v407 + 2896;
    v414 = 0;
  }
  sub_223FFDF1C(v413, &v502, v408, v414, v410);
LABEL_256:
  v415 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v416 = *(_BYTE *)(***(_QWORD ***)a1 + 17561);
  v417 = *(char *)(***(_QWORD ***)a1 + 17566);
  v418 = *(float *)(*(_QWORD *)(v415 + 40784) + 312);
  *(float32x2_t *)v412.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v412.f32[2] = (float)(a2[1].i32[0] + 1);
  v419.i64[0] = 0x3F0000003F000000;
  v419.i64[1] = 0x3F0000003F000000;
  v420 = vmulq_n_f32(vaddq_f32(v412, v419), v418);
  v503 = v420.i32[2];
  v502 = v420.i64[0];
  if (v417)
  {
    if ((v417 & 0x80000000) == 0)
      goto LABEL_261;
    v421 = v415 + 2896;
    v416 = -1;
    v422 = 2;
  }
  else
  {
    v421 = v415 + 2896;
    v422 = 0;
  }
  sub_223FFDF1C(v421, &v502, v416, v422, v418);
LABEL_261:
  v423 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v424 = *(_BYTE *)(***(_QWORD ***)a1 + 17601);
  v425 = *(char *)(***(_QWORD ***)a1 + 17606);
  v426 = *(float *)(*(_QWORD *)(v423 + 40784) + 312);
  *(float32x2_t *)v420.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v420.f32[2] = (float)(a2[1].i32[0] + 2);
  v427.i64[0] = 0x3F0000003F000000;
  v427.i64[1] = 0x3F0000003F000000;
  v428 = vmulq_n_f32(vaddq_f32(v420, v427), v426);
  v503 = v428.i32[2];
  v502 = v428.i64[0];
  if (v425)
  {
    if ((v425 & 0x80000000) == 0)
      goto LABEL_266;
    v429 = v423 + 2896;
    v424 = -1;
    v430 = 2;
  }
  else
  {
    v429 = v423 + 2896;
    v430 = 0;
  }
  sub_223FFDF1C(v429, &v502, v424, v430, v426);
LABEL_266:
  v431 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v432 = *(_BYTE *)(***(_QWORD ***)a1 + 17641);
  v433 = *(char *)(***(_QWORD ***)a1 + 17646);
  v434 = *(float *)(*(_QWORD *)(v431 + 40784) + 312);
  *(float32x2_t *)v428.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v428.f32[2] = (float)(a2[1].i32[0] + 3);
  v435.i64[0] = 0x3F0000003F000000;
  v435.i64[1] = 0x3F0000003F000000;
  v436 = vmulq_n_f32(vaddq_f32(v428, v435), v434);
  v503 = v436.i32[2];
  v502 = v436.i64[0];
  if (v433)
  {
    if ((v433 & 0x80000000) == 0)
      goto LABEL_271;
    v437 = v431 + 2896;
    v432 = -1;
    v438 = 2;
  }
  else
  {
    v437 = v431 + 2896;
    v438 = 0;
  }
  sub_223FFDF1C(v437, &v502, v432, v438, v434);
LABEL_271:
  v439 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v440 = *(_BYTE *)(***(_QWORD ***)a1 + 17681);
  v441 = *(char *)(***(_QWORD ***)a1 + 17686);
  v442 = *(float *)(*(_QWORD *)(v439 + 40784) + 312);
  *(float32x2_t *)v436.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v436.f32[2] = (float)(a2[1].i32[0] + 2);
  v443.i64[0] = 0x3F0000003F000000;
  v443.i64[1] = 0x3F0000003F000000;
  v444 = vmulq_n_f32(vaddq_f32(v436, v443), v442);
  v503 = v444.i32[2];
  v502 = v444.i64[0];
  if (v441)
  {
    if ((v441 & 0x80000000) == 0)
      goto LABEL_276;
    v445 = v439 + 2896;
    v440 = -1;
    v446 = 2;
  }
  else
  {
    v445 = v439 + 2896;
    v446 = 0;
  }
  sub_223FFDF1C(v445, &v502, v440, v446, v442);
LABEL_276:
  v447 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v448 = *(_BYTE *)(***(_QWORD ***)a1 + 17721);
  v449 = *(char *)(***(_QWORD ***)a1 + 17726);
  v450 = *(float *)(*(_QWORD *)(v447 + 40784) + 312);
  *(float32x2_t *)v444.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v444.f32[2] = (float)(a2[1].i32[0] + 3);
  v451.i64[0] = 0x3F0000003F000000;
  v451.i64[1] = 0x3F0000003F000000;
  v452 = vmulq_n_f32(vaddq_f32(v444, v451), v450);
  v503 = v452.i32[2];
  v502 = v452.i64[0];
  if (v449)
  {
    if ((v449 & 0x80000000) == 0)
      goto LABEL_281;
    v453 = v447 + 2896;
    v448 = -1;
    v454 = 2;
  }
  else
  {
    v453 = v447 + 2896;
    v454 = 0;
  }
  sub_223FFDF1C(v453, &v502, v448, v454, v450);
LABEL_281:
  v455 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v456 = *(_BYTE *)(***(_QWORD ***)a1 + 17761);
  v457 = *(char *)(***(_QWORD ***)a1 + 17766);
  v458 = *(float *)(*(_QWORD *)(v455 + 40784) + 312);
  *(float32x2_t *)v452.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v452.f32[2] = (float)(a2[1].i32[0] + 2);
  v459.i64[0] = 0x3F0000003F000000;
  v459.i64[1] = 0x3F0000003F000000;
  v460 = vmulq_n_f32(vaddq_f32(v452, v459), v458);
  v503 = v460.i32[2];
  v502 = v460.i64[0];
  if (v457)
  {
    if ((v457 & 0x80000000) == 0)
      goto LABEL_286;
    v461 = v455 + 2896;
    v456 = -1;
    v462 = 2;
  }
  else
  {
    v461 = v455 + 2896;
    v462 = 0;
  }
  sub_223FFDF1C(v461, &v502, v456, v462, v458);
LABEL_286:
  v463 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v464 = *(_BYTE *)(***(_QWORD ***)a1 + 17801);
  v465 = *(char *)(***(_QWORD ***)a1 + 17806);
  v466 = *(float *)(*(_QWORD *)(v463 + 40784) + 312);
  *(float32x2_t *)v460.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v460.f32[2] = (float)(a2[1].i32[0] + 3);
  v467.i64[0] = 0x3F0000003F000000;
  v467.i64[1] = 0x3F0000003F000000;
  v468 = vmulq_n_f32(vaddq_f32(v460, v467), v466);
  v503 = v468.i32[2];
  v502 = v468.i64[0];
  if (v465)
  {
    if ((v465 & 0x80000000) == 0)
      goto LABEL_291;
    v469 = v463 + 2896;
    v464 = -1;
    v470 = 2;
  }
  else
  {
    v469 = v463 + 2896;
    v470 = 0;
  }
  sub_223FFDF1C(v469, &v502, v464, v470, v466);
LABEL_291:
  v471 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v472 = *(_BYTE *)(***(_QWORD ***)a1 + 17841);
  v473 = *(char *)(***(_QWORD ***)a1 + 17846);
  v474 = *(float *)(*(_QWORD *)(v471 + 40784) + 312);
  *(float32x2_t *)v468.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v468.f32[2] = (float)(a2[1].i32[0] + 2);
  v475.i64[0] = 0x3F0000003F000000;
  v475.i64[1] = 0x3F0000003F000000;
  v476 = vmulq_n_f32(vaddq_f32(v468, v475), v474);
  v503 = v476.i32[2];
  v502 = v476.i64[0];
  if (v473)
  {
    if ((v473 & 0x80000000) == 0)
      goto LABEL_296;
    v477 = v471 + 2896;
    v472 = -1;
    v478 = 2;
  }
  else
  {
    v477 = v471 + 2896;
    v478 = 0;
  }
  sub_223FFDF1C(v477, &v502, v472, v478, v474);
LABEL_296:
  v479 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v480 = *(_BYTE *)(***(_QWORD ***)a1 + 17881);
  v481 = *(char *)(***(_QWORD ***)a1 + 17886);
  v482 = *(float *)(*(_QWORD *)(v479 + 40784) + 312);
  *(float32x2_t *)v476.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v476.f32[2] = (float)(a2[1].i32[0] + 3);
  v483.i64[0] = 0x3F0000003F000000;
  v483.i64[1] = 0x3F0000003F000000;
  v484 = vmulq_n_f32(vaddq_f32(v476, v483), v482);
  v503 = v484.i32[2];
  v502 = v484.i64[0];
  if (v481)
  {
    if ((v481 & 0x80000000) == 0)
      goto LABEL_301;
    v485 = v479 + 2896;
    v480 = -1;
    v486 = 2;
  }
  else
  {
    v485 = v479 + 2896;
    v486 = 0;
  }
  sub_223FFDF1C(v485, &v502, v480, v486, v482);
LABEL_301:
  v487 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v488 = *(_BYTE *)(***(_QWORD ***)a1 + 17921);
  v489 = *(char *)(***(_QWORD ***)a1 + 17926);
  v490 = *(float *)(*(_QWORD *)(v487 + 40784) + 312);
  *(float32x2_t *)v484.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v484.f32[2] = (float)(a2[1].i32[0] + 4);
  v491.i64[0] = 0x3F0000003F000000;
  v491.i64[1] = 0x3F0000003F000000;
  v492 = vmulq_n_f32(vaddq_f32(v484, v491), v490);
  v503 = v492.i32[2];
  v502 = v492.i64[0];
  if (v489)
  {
    if ((v489 & 0x80000000) == 0)
      goto LABEL_306;
    v493 = v487 + 2896;
    v488 = -1;
    v494 = 2;
  }
  else
  {
    v493 = v487 + 2896;
    v494 = 0;
  }
  sub_223FFDF1C(v493, &v502, v488, v494, v490);
LABEL_306:
  v495 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v496 = *(_BYTE *)(***(_QWORD ***)a1 + 17961);
  v497 = *(char *)(***(_QWORD ***)a1 + 17966);
  LODWORD(a3) = *(_DWORD *)(*(_QWORD *)(v495 + 40784) + 312);
  *(float32x2_t *)v492.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v492.f32[2] = (float)(a2[1].i32[0] + 5);
  v498.i64[0] = 0x3F0000003F000000;
  v498.i64[1] = 0x3F0000003F000000;
  v499 = vmulq_n_f32(vaddq_f32(v492, v498), *(float *)&a3);
  v503 = v499.i32[2];
  v502 = v499.i64[0];
  if (!v497)
  {
    v500 = v495 + 2896;
    v501 = 0;
    goto LABEL_310;
  }
  if (v497 < 0)
  {
    v500 = v495 + 2896;
    v496 = -1;
    v501 = 2;
LABEL_310:
    sub_223FFDF1C(v500, &v502, v496, v501, *(float *)&a3);
  }
  sub_22394DAA0(a1, a2, a3, v499);
}

void sub_22394DAA0(uint64_t a1, int32x2_t *a2, double a3, float32x4_t a4)
{
  uint64_t v6;
  char v7;
  int v8;
  float v9;
  float32x4_t v10;
  float32x4_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  int v24;
  float v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  float v33;
  float32x4_t v34;
  float32x4_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  int v40;
  float v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  int v48;
  float v49;
  float32x4_t v50;
  float32x4_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  int v56;
  float v57;
  float32x4_t v58;
  float32x4_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  int v64;
  float v65;
  float32x4_t v66;
  float32x4_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  int v72;
  float v73;
  float32x4_t v74;
  float32x4_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  int v80;
  float v81;
  float32x4_t v82;
  float32x4_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char v87;
  int v88;
  float v89;
  float32x4_t v90;
  float32x4_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char v95;
  int v96;
  float v97;
  float32x4_t v98;
  float32x4_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char v103;
  int v104;
  float v105;
  float32x4_t v106;
  float32x4_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  char v111;
  int v112;
  float v113;
  float32x4_t v114;
  float32x4_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  char v119;
  int v120;
  float v121;
  float32x4_t v122;
  float32x4_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char v127;
  int v128;
  float v129;
  float32x4_t v130;
  float32x4_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  char v135;
  int v136;
  float v137;
  float32x4_t v138;
  float32x4_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  char v143;
  int v144;
  float v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  char v151;
  int v152;
  float v153;
  float32x4_t v154;
  float32x4_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char v159;
  int v160;
  float v161;
  float32x4_t v162;
  float32x4_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  int v168;
  float v169;
  float32x4_t v170;
  float32x4_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  int v176;
  float v177;
  float32x4_t v178;
  float32x4_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  char v183;
  int v184;
  float v185;
  float32x4_t v186;
  float32x4_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  char v191;
  int v192;
  float v193;
  float32x4_t v194;
  float32x4_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  char v199;
  int v200;
  float v201;
  float32x4_t v202;
  float32x4_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  char v207;
  int v208;
  float v209;
  float32x4_t v210;
  float32x4_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  char v215;
  int v216;
  float v217;
  float32x4_t v218;
  float32x4_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  char v223;
  int v224;
  float v225;
  float32x4_t v226;
  float32x4_t v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  char v231;
  int v232;
  float v233;
  float32x4_t v234;
  float32x4_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  char v239;
  int v240;
  float v241;
  float32x4_t v242;
  float32x4_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  char v247;
  int v248;
  float v249;
  float32x4_t v250;
  float32x4_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char v255;
  int v256;
  float v257;
  float32x4_t v258;
  float32x4_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  char v263;
  int v264;
  float v265;
  float32x4_t v266;
  float32x4_t v267;
  uint64_t v268;
  int v269;
  uint64_t v270;
  char v271;
  int v272;
  float v273;
  float32x4_t v274;
  float32x4_t v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  char v279;
  int v280;
  float v281;
  float32x4_t v282;
  float32x4_t v283;
  uint64_t v284;
  int v285;
  uint64_t v286;
  char v287;
  int v288;
  float v289;
  float32x4_t v290;
  float32x4_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  char v295;
  int v296;
  float v297;
  float32x4_t v298;
  float32x4_t v299;
  uint64_t v300;
  int v301;
  uint64_t v302;
  char v303;
  int v304;
  float v305;
  float32x4_t v306;
  float32x4_t v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  char v311;
  int v312;
  float v313;
  float32x4_t v314;
  float32x4_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  char v319;
  int v320;
  float v321;
  float32x4_t v322;
  float32x4_t v323;
  uint64_t v324;
  int v325;
  uint64_t v326;
  char v327;
  int v328;
  float v329;
  float32x4_t v330;
  float32x4_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  char v335;
  int v336;
  float v337;
  float32x4_t v338;
  float32x4_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  char v343;
  int v344;
  float v345;
  float32x4_t v346;
  float32x4_t v347;
  uint64_t v348;
  int v349;
  uint64_t v350;
  char v351;
  int v352;
  float v353;
  float32x4_t v354;
  float32x4_t v355;
  uint64_t v356;
  int v357;
  uint64_t v358;
  char v359;
  int v360;
  float v361;
  float32x4_t v362;
  float32x4_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  char v367;
  int v368;
  float v369;
  float32x4_t v370;
  float32x4_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  char v375;
  int v376;
  float v377;
  float32x4_t v378;
  float32x4_t v379;
  uint64_t v380;
  int v381;
  uint64_t v382;
  char v383;
  int v384;
  float v385;
  float32x4_t v386;
  float32x4_t v387;
  uint64_t v388;
  int v389;
  uint64_t v390;
  char v391;
  int v392;
  float v393;
  float32x4_t v394;
  float32x4_t v395;
  uint64_t v396;
  int v397;
  uint64_t v398;
  char v399;
  int v400;
  float v401;
  float32x4_t v402;
  float32x4_t v403;
  uint64_t v404;
  int v405;
  uint64_t v406;
  char v407;
  int v408;
  float v409;
  float32x4_t v410;
  float32x4_t v411;
  uint64_t v412;
  int v413;
  uint64_t v414;
  char v415;
  int v416;
  float v417;
  float32x4_t v418;
  float32x4_t v419;
  uint64_t v420;
  int v421;
  uint64_t v422;
  char v423;
  int v424;
  float v425;
  float32x4_t v426;
  float32x4_t v427;
  uint64_t v428;
  int v429;
  uint64_t v430;
  char v431;
  int v432;
  float v433;
  float32x4_t v434;
  float32x4_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  char v439;
  int v440;
  float v441;
  float32x4_t v442;
  float32x4_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  char v447;
  int v448;
  float v449;
  float32x4_t v450;
  float32x4_t v451;
  uint64_t v452;
  int v453;
  uint64_t v454;
  char v455;
  int v456;
  float v457;
  float32x4_t v458;
  float32x4_t v459;
  uint64_t v460;
  int v461;
  uint64_t v462;
  char v463;
  int v464;
  float v465;
  float32x4_t v466;
  float32x4_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  char v471;
  int v472;
  float v473;
  float32x4_t v474;
  float32x4_t v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  char v479;
  int v480;
  float v481;
  float32x4_t v482;
  float32x4_t v483;
  uint64_t v484;
  int v485;
  uint64_t v486;
  char v487;
  int v488;
  float v489;
  float32x4_t v490;
  float32x4_t v491;
  uint64_t v492;
  int v493;
  uint64_t v494;
  char v495;
  int v496;
  float v497;
  float32x4_t v498;
  float32x4_t v499;
  uint64_t v500;
  int v501;
  uint64_t v502;
  __int32 v503;

  v6 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v7 = *(_BYTE *)(***(_QWORD ***)a1 + 18001);
  v8 = *(char *)(***(_QWORD ***)a1 + 18006);
  v9 = *(float *)(*(_QWORD *)(v6 + 40784) + 312);
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  a4.f32[2] = (float)(a2[1].i32[0] + 4);
  v10.i64[0] = 0x3F0000003F000000;
  v10.i64[1] = 0x3F0000003F000000;
  v11 = vmulq_n_f32(vaddq_f32(a4, v10), v9);
  v503 = v11.i32[2];
  v502 = v11.i64[0];
  if (v8)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
    v12 = v6 + 2896;
    v7 = -1;
    v13 = 2;
  }
  else
  {
    v12 = v6 + 2896;
    v13 = 0;
  }
  sub_223FFDF1C(v12, &v502, v7, v13, v9);
LABEL_6:
  v14 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v15 = *(_BYTE *)(***(_QWORD ***)a1 + 18041);
  v16 = *(char *)(***(_QWORD ***)a1 + 18046);
  v17 = *(float *)(*(_QWORD *)(v14 + 40784) + 312);
  *(float32x2_t *)v11.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v11.f32[2] = (float)(a2[1].i32[0] + 5);
  v18.i64[0] = 0x3F0000003F000000;
  v18.i64[1] = 0x3F0000003F000000;
  v19 = vmulq_n_f32(vaddq_f32(v11, v18), v17);
  v503 = v19.i32[2];
  v502 = v19.i64[0];
  if (v16)
  {
    if ((v16 & 0x80000000) == 0)
      goto LABEL_11;
    v20 = v14 + 2896;
    v15 = -1;
    v21 = 2;
  }
  else
  {
    v20 = v14 + 2896;
    v21 = 0;
  }
  sub_223FFDF1C(v20, &v502, v15, v21, v17);
LABEL_11:
  v22 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v23 = *(_BYTE *)(***(_QWORD ***)a1 + 18081);
  v24 = *(char *)(***(_QWORD ***)a1 + 18086);
  v25 = *(float *)(*(_QWORD *)(v22 + 40784) + 312);
  *(float32x2_t *)v19.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v19.f32[2] = (float)(a2[1].i32[0] + 4);
  v26.i64[0] = 0x3F0000003F000000;
  v26.i64[1] = 0x3F0000003F000000;
  v27 = vmulq_n_f32(vaddq_f32(v19, v26), v25);
  v503 = v27.i32[2];
  v502 = v27.i64[0];
  if (v24)
  {
    if ((v24 & 0x80000000) == 0)
      goto LABEL_16;
    v28 = v22 + 2896;
    v23 = -1;
    v29 = 2;
  }
  else
  {
    v28 = v22 + 2896;
    v29 = 0;
  }
  sub_223FFDF1C(v28, &v502, v23, v29, v25);
LABEL_16:
  v30 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v31 = *(_BYTE *)(***(_QWORD ***)a1 + 18121);
  v32 = *(char *)(***(_QWORD ***)a1 + 18126);
  v33 = *(float *)(*(_QWORD *)(v30 + 40784) + 312);
  *(float32x2_t *)v27.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v27.f32[2] = (float)(a2[1].i32[0] + 5);
  v34.i64[0] = 0x3F0000003F000000;
  v34.i64[1] = 0x3F0000003F000000;
  v35 = vmulq_n_f32(vaddq_f32(v27, v34), v33);
  v503 = v35.i32[2];
  v502 = v35.i64[0];
  if (v32)
  {
    if ((v32 & 0x80000000) == 0)
      goto LABEL_21;
    v36 = v30 + 2896;
    v31 = -1;
    v37 = 2;
  }
  else
  {
    v36 = v30 + 2896;
    v37 = 0;
  }
  sub_223FFDF1C(v36, &v502, v31, v37, v33);
LABEL_21:
  v38 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v39 = *(_BYTE *)(***(_QWORD ***)a1 + 18161);
  v40 = *(char *)(***(_QWORD ***)a1 + 18166);
  v41 = *(float *)(*(_QWORD *)(v38 + 40784) + 312);
  *(float32x2_t *)v35.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v35.f32[2] = (float)(a2[1].i32[0] + 4);
  v42.i64[0] = 0x3F0000003F000000;
  v42.i64[1] = 0x3F0000003F000000;
  v43 = vmulq_n_f32(vaddq_f32(v35, v42), v41);
  v503 = v43.i32[2];
  v502 = v43.i64[0];
  if (v40)
  {
    if ((v40 & 0x80000000) == 0)
      goto LABEL_26;
    v44 = v38 + 2896;
    v39 = -1;
    v45 = 2;
  }
  else
  {
    v44 = v38 + 2896;
    v45 = 0;
  }
  sub_223FFDF1C(v44, &v502, v39, v45, v41);
LABEL_26:
  v46 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v47 = *(_BYTE *)(***(_QWORD ***)a1 + 18201);
  v48 = *(char *)(***(_QWORD ***)a1 + 18206);
  v49 = *(float *)(*(_QWORD *)(v46 + 40784) + 312);
  *(float32x2_t *)v43.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v43.f32[2] = (float)(a2[1].i32[0] + 5);
  v50.i64[0] = 0x3F0000003F000000;
  v50.i64[1] = 0x3F0000003F000000;
  v51 = vmulq_n_f32(vaddq_f32(v43, v50), v49);
  v503 = v51.i32[2];
  v502 = v51.i64[0];
  if (v48)
  {
    if ((v48 & 0x80000000) == 0)
      goto LABEL_31;
    v52 = v46 + 2896;
    v47 = -1;
    v53 = 2;
  }
  else
  {
    v52 = v46 + 2896;
    v53 = 0;
  }
  sub_223FFDF1C(v52, &v502, v47, v53, v49);
LABEL_31:
  v54 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v55 = *(_BYTE *)(***(_QWORD ***)a1 + 18241);
  v56 = *(char *)(***(_QWORD ***)a1 + 18246);
  v57 = *(float *)(*(_QWORD *)(v54 + 40784) + 312);
  *(float32x2_t *)v51.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v51.f32[2] = (float)(a2[1].i32[0] + 6);
  v58.i64[0] = 0x3F0000003F000000;
  v58.i64[1] = 0x3F0000003F000000;
  v59 = vmulq_n_f32(vaddq_f32(v51, v58), v57);
  v503 = v59.i32[2];
  v502 = v59.i64[0];
  if (v56)
  {
    if ((v56 & 0x80000000) == 0)
      goto LABEL_36;
    v60 = v54 + 2896;
    v55 = -1;
    v61 = 2;
  }
  else
  {
    v60 = v54 + 2896;
    v61 = 0;
  }
  sub_223FFDF1C(v60, &v502, v55, v61, v57);
LABEL_36:
  v62 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v63 = *(_BYTE *)(***(_QWORD ***)a1 + 18281);
  v64 = *(char *)(***(_QWORD ***)a1 + 18286);
  v65 = *(float *)(*(_QWORD *)(v62 + 40784) + 312);
  *(float32x2_t *)v59.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000004));
  v59.f32[2] = (float)(a2[1].i32[0] + 7);
  v66.i64[0] = 0x3F0000003F000000;
  v66.i64[1] = 0x3F0000003F000000;
  v67 = vmulq_n_f32(vaddq_f32(v59, v66), v65);
  v503 = v67.i32[2];
  v502 = v67.i64[0];
  if (v64)
  {
    if ((v64 & 0x80000000) == 0)
      goto LABEL_41;
    v68 = v62 + 2896;
    v63 = -1;
    v69 = 2;
  }
  else
  {
    v68 = v62 + 2896;
    v69 = 0;
  }
  sub_223FFDF1C(v68, &v502, v63, v69, v65);
LABEL_41:
  v70 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v71 = *(_BYTE *)(***(_QWORD ***)a1 + 18321);
  v72 = *(char *)(***(_QWORD ***)a1 + 18326);
  v73 = *(float *)(*(_QWORD *)(v70 + 40784) + 312);
  *(float32x2_t *)v67.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v67.f32[2] = (float)(a2[1].i32[0] + 6);
  v74.i64[0] = 0x3F0000003F000000;
  v74.i64[1] = 0x3F0000003F000000;
  v75 = vmulq_n_f32(vaddq_f32(v67, v74), v73);
  v503 = v75.i32[2];
  v502 = v75.i64[0];
  if (v72)
  {
    if ((v72 & 0x80000000) == 0)
      goto LABEL_46;
    v76 = v70 + 2896;
    v71 = -1;
    v77 = 2;
  }
  else
  {
    v76 = v70 + 2896;
    v77 = 0;
  }
  sub_223FFDF1C(v76, &v502, v71, v77, v73);
LABEL_46:
  v78 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v79 = *(_BYTE *)(***(_QWORD ***)a1 + 18361);
  v80 = *(char *)(***(_QWORD ***)a1 + 18366);
  v81 = *(float *)(*(_QWORD *)(v78 + 40784) + 312);
  *(float32x2_t *)v75.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000004));
  v75.f32[2] = (float)(a2[1].i32[0] + 7);
  v82.i64[0] = 0x3F0000003F000000;
  v82.i64[1] = 0x3F0000003F000000;
  v83 = vmulq_n_f32(vaddq_f32(v75, v82), v81);
  v503 = v83.i32[2];
  v502 = v83.i64[0];
  if (v80)
  {
    if ((v80 & 0x80000000) == 0)
      goto LABEL_51;
    v84 = v78 + 2896;
    v79 = -1;
    v85 = 2;
  }
  else
  {
    v84 = v78 + 2896;
    v85 = 0;
  }
  sub_223FFDF1C(v84, &v502, v79, v85, v81);
LABEL_51:
  v86 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v87 = *(_BYTE *)(***(_QWORD ***)a1 + 18401);
  v88 = *(char *)(***(_QWORD ***)a1 + 18406);
  v89 = *(float *)(*(_QWORD *)(v86 + 40784) + 312);
  *(float32x2_t *)v83.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v83.f32[2] = (float)(a2[1].i32[0] + 6);
  v90.i64[0] = 0x3F0000003F000000;
  v90.i64[1] = 0x3F0000003F000000;
  v91 = vmulq_n_f32(vaddq_f32(v83, v90), v89);
  v503 = v91.i32[2];
  v502 = v91.i64[0];
  if (v88)
  {
    if ((v88 & 0x80000000) == 0)
      goto LABEL_56;
    v92 = v86 + 2896;
    v87 = -1;
    v93 = 2;
  }
  else
  {
    v92 = v86 + 2896;
    v93 = 0;
  }
  sub_223FFDF1C(v92, &v502, v87, v93, v89);
LABEL_56:
  v94 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v95 = *(_BYTE *)(***(_QWORD ***)a1 + 18441);
  v96 = *(char *)(***(_QWORD ***)a1 + 18446);
  v97 = *(float *)(*(_QWORD *)(v94 + 40784) + 312);
  *(float32x2_t *)v91.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000005));
  v91.f32[2] = (float)(a2[1].i32[0] + 7);
  v98.i64[0] = 0x3F0000003F000000;
  v98.i64[1] = 0x3F0000003F000000;
  v99 = vmulq_n_f32(vaddq_f32(v91, v98), v97);
  v503 = v99.i32[2];
  v502 = v99.i64[0];
  if (v96)
  {
    if ((v96 & 0x80000000) == 0)
      goto LABEL_61;
    v100 = v94 + 2896;
    v95 = -1;
    v101 = 2;
  }
  else
  {
    v100 = v94 + 2896;
    v101 = 0;
  }
  sub_223FFDF1C(v100, &v502, v95, v101, v97);
LABEL_61:
  v102 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v103 = *(_BYTE *)(***(_QWORD ***)a1 + 18481);
  v104 = *(char *)(***(_QWORD ***)a1 + 18486);
  v105 = *(float *)(*(_QWORD *)(v102 + 40784) + 312);
  *(float32x2_t *)v99.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v99.f32[2] = (float)(a2[1].i32[0] + 6);
  v106.i64[0] = 0x3F0000003F000000;
  v106.i64[1] = 0x3F0000003F000000;
  v107 = vmulq_n_f32(vaddq_f32(v99, v106), v105);
  v503 = v107.i32[2];
  v502 = v107.i64[0];
  if (v104)
  {
    if ((v104 & 0x80000000) == 0)
      goto LABEL_66;
    v108 = v102 + 2896;
    v103 = -1;
    v109 = 2;
  }
  else
  {
    v108 = v102 + 2896;
    v109 = 0;
  }
  sub_223FFDF1C(v108, &v502, v103, v109, v105);
LABEL_66:
  v110 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v111 = *(_BYTE *)(***(_QWORD ***)a1 + 18521);
  v112 = *(char *)(***(_QWORD ***)a1 + 18526);
  v113 = *(float *)(*(_QWORD *)(v110 + 40784) + 312);
  *(float32x2_t *)v107.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000005));
  v107.f32[2] = (float)(a2[1].i32[0] + 7);
  v114.i64[0] = 0x3F0000003F000000;
  v114.i64[1] = 0x3F0000003F000000;
  v115 = vmulq_n_f32(vaddq_f32(v107, v114), v113);
  v503 = v115.i32[2];
  v502 = v115.i64[0];
  if (v112)
  {
    if ((v112 & 0x80000000) == 0)
      goto LABEL_71;
    v116 = v110 + 2896;
    v111 = -1;
    v117 = 2;
  }
  else
  {
    v116 = v110 + 2896;
    v117 = 0;
  }
  sub_223FFDF1C(v116, &v502, v111, v117, v113);
LABEL_71:
  v118 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v119 = *(_BYTE *)(***(_QWORD ***)a1 + 18561);
  v120 = *(char *)(***(_QWORD ***)a1 + 18566);
  v121 = *(float *)(*(_QWORD *)(v118 + 40784) + 312);
  *(float32x2_t *)v115.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v115.f32[2] = (float)(a2[1].i32[0] + 4);
  v122.i64[0] = 0x3F0000003F000000;
  v122.i64[1] = 0x3F0000003F000000;
  v123 = vmulq_n_f32(vaddq_f32(v115, v122), v121);
  v503 = v123.i32[2];
  v502 = v123.i64[0];
  if (v120)
  {
    if ((v120 & 0x80000000) == 0)
      goto LABEL_76;
    v124 = v118 + 2896;
    v119 = -1;
    v125 = 2;
  }
  else
  {
    v124 = v118 + 2896;
    v125 = 0;
  }
  sub_223FFDF1C(v124, &v502, v119, v125, v121);
LABEL_76:
  v126 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v127 = *(_BYTE *)(***(_QWORD ***)a1 + 18601);
  v128 = *(char *)(***(_QWORD ***)a1 + 18606);
  v129 = *(float *)(*(_QWORD *)(v126 + 40784) + 312);
  *(float32x2_t *)v123.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v123.f32[2] = (float)(a2[1].i32[0] + 5);
  v130.i64[0] = 0x3F0000003F000000;
  v130.i64[1] = 0x3F0000003F000000;
  v131 = vmulq_n_f32(vaddq_f32(v123, v130), v129);
  v503 = v131.i32[2];
  v502 = v131.i64[0];
  if (v128)
  {
    if ((v128 & 0x80000000) == 0)
      goto LABEL_81;
    v132 = v126 + 2896;
    v127 = -1;
    v133 = 2;
  }
  else
  {
    v132 = v126 + 2896;
    v133 = 0;
  }
  sub_223FFDF1C(v132, &v502, v127, v133, v129);
LABEL_81:
  v134 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v135 = *(_BYTE *)(***(_QWORD ***)a1 + 18641);
  v136 = *(char *)(***(_QWORD ***)a1 + 18646);
  v137 = *(float *)(*(_QWORD *)(v134 + 40784) + 312);
  *(float32x2_t *)v131.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v131.f32[2] = (float)(a2[1].i32[0] + 4);
  v138.i64[0] = 0x3F0000003F000000;
  v138.i64[1] = 0x3F0000003F000000;
  v139 = vmulq_n_f32(vaddq_f32(v131, v138), v137);
  v503 = v139.i32[2];
  v502 = v139.i64[0];
  if (v136)
  {
    if ((v136 & 0x80000000) == 0)
      goto LABEL_86;
    v140 = v134 + 2896;
    v135 = -1;
    v141 = 2;
  }
  else
  {
    v140 = v134 + 2896;
    v141 = 0;
  }
  sub_223FFDF1C(v140, &v502, v135, v141, v137);
LABEL_86:
  v142 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v143 = *(_BYTE *)(***(_QWORD ***)a1 + 18681);
  v144 = *(char *)(***(_QWORD ***)a1 + 18686);
  v145 = *(float *)(*(_QWORD *)(v142 + 40784) + 312);
  *(float32x2_t *)v139.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v139.f32[2] = (float)(a2[1].i32[0] + 5);
  v146.i64[0] = 0x3F0000003F000000;
  v146.i64[1] = 0x3F0000003F000000;
  v147 = vmulq_n_f32(vaddq_f32(v139, v146), v145);
  v503 = v147.i32[2];
  v502 = v147.i64[0];
  if (v144)
  {
    if ((v144 & 0x80000000) == 0)
      goto LABEL_91;
    v148 = v142 + 2896;
    v143 = -1;
    v149 = 2;
  }
  else
  {
    v148 = v142 + 2896;
    v149 = 0;
  }
  sub_223FFDF1C(v148, &v502, v143, v149, v145);
LABEL_91:
  v150 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v151 = *(_BYTE *)(***(_QWORD ***)a1 + 18721);
  v152 = *(char *)(***(_QWORD ***)a1 + 18726);
  v153 = *(float *)(*(_QWORD *)(v150 + 40784) + 312);
  *(float32x2_t *)v147.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v147.f32[2] = (float)(a2[1].i32[0] + 4);
  v154.i64[0] = 0x3F0000003F000000;
  v154.i64[1] = 0x3F0000003F000000;
  v155 = vmulq_n_f32(vaddq_f32(v147, v154), v153);
  v503 = v155.i32[2];
  v502 = v155.i64[0];
  if (v152)
  {
    if ((v152 & 0x80000000) == 0)
      goto LABEL_96;
    v156 = v150 + 2896;
    v151 = -1;
    v157 = 2;
  }
  else
  {
    v156 = v150 + 2896;
    v157 = 0;
  }
  sub_223FFDF1C(v156, &v502, v151, v157, v153);
LABEL_96:
  v158 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v159 = *(_BYTE *)(***(_QWORD ***)a1 + 18761);
  v160 = *(char *)(***(_QWORD ***)a1 + 18766);
  v161 = *(float *)(*(_QWORD *)(v158 + 40784) + 312);
  *(float32x2_t *)v155.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v155.f32[2] = (float)(a2[1].i32[0] + 5);
  v162.i64[0] = 0x3F0000003F000000;
  v162.i64[1] = 0x3F0000003F000000;
  v163 = vmulq_n_f32(vaddq_f32(v155, v162), v161);
  v503 = v163.i32[2];
  v502 = v163.i64[0];
  if (v160)
  {
    if ((v160 & 0x80000000) == 0)
      goto LABEL_101;
    v164 = v158 + 2896;
    v159 = -1;
    v165 = 2;
  }
  else
  {
    v164 = v158 + 2896;
    v165 = 0;
  }
  sub_223FFDF1C(v164, &v502, v159, v165, v161);
LABEL_101:
  v166 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v167 = *(_BYTE *)(***(_QWORD ***)a1 + 18801);
  v168 = *(char *)(***(_QWORD ***)a1 + 18806);
  v169 = *(float *)(*(_QWORD *)(v166 + 40784) + 312);
  *(float32x2_t *)v163.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v163.f32[2] = (float)(a2[1].i32[0] + 4);
  v170.i64[0] = 0x3F0000003F000000;
  v170.i64[1] = 0x3F0000003F000000;
  v171 = vmulq_n_f32(vaddq_f32(v163, v170), v169);
  v503 = v171.i32[2];
  v502 = v171.i64[0];
  if (v168)
  {
    if ((v168 & 0x80000000) == 0)
      goto LABEL_106;
    v172 = v166 + 2896;
    v167 = -1;
    v173 = 2;
  }
  else
  {
    v172 = v166 + 2896;
    v173 = 0;
  }
  sub_223FFDF1C(v172, &v502, v167, v173, v169);
LABEL_106:
  v174 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v175 = *(_BYTE *)(***(_QWORD ***)a1 + 18841);
  v176 = *(char *)(***(_QWORD ***)a1 + 18846);
  v177 = *(float *)(*(_QWORD *)(v174 + 40784) + 312);
  *(float32x2_t *)v171.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v171.f32[2] = (float)(a2[1].i32[0] + 5);
  v178.i64[0] = 0x3F0000003F000000;
  v178.i64[1] = 0x3F0000003F000000;
  v179 = vmulq_n_f32(vaddq_f32(v171, v178), v177);
  v503 = v179.i32[2];
  v502 = v179.i64[0];
  if (v176)
  {
    if ((v176 & 0x80000000) == 0)
      goto LABEL_111;
    v180 = v174 + 2896;
    v175 = -1;
    v181 = 2;
  }
  else
  {
    v180 = v174 + 2896;
    v181 = 0;
  }
  sub_223FFDF1C(v180, &v502, v175, v181, v177);
LABEL_111:
  v182 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v183 = *(_BYTE *)(***(_QWORD ***)a1 + 18881);
  v184 = *(char *)(***(_QWORD ***)a1 + 18886);
  v185 = *(float *)(*(_QWORD *)(v182 + 40784) + 312);
  *(float32x2_t *)v179.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v179.f32[2] = (float)(a2[1].i32[0] + 6);
  v186.i64[0] = 0x3F0000003F000000;
  v186.i64[1] = 0x3F0000003F000000;
  v187 = vmulq_n_f32(vaddq_f32(v179, v186), v185);
  v503 = v187.i32[2];
  v502 = v187.i64[0];
  if (v184)
  {
    if ((v184 & 0x80000000) == 0)
      goto LABEL_116;
    v188 = v182 + 2896;
    v183 = -1;
    v189 = 2;
  }
  else
  {
    v188 = v182 + 2896;
    v189 = 0;
  }
  sub_223FFDF1C(v188, &v502, v183, v189, v185);
LABEL_116:
  v190 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v191 = *(_BYTE *)(***(_QWORD ***)a1 + 18921);
  v192 = *(char *)(***(_QWORD ***)a1 + 18926);
  v193 = *(float *)(*(_QWORD *)(v190 + 40784) + 312);
  *(float32x2_t *)v187.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000004));
  v187.f32[2] = (float)(a2[1].i32[0] + 7);
  v194.i64[0] = 0x3F0000003F000000;
  v194.i64[1] = 0x3F0000003F000000;
  v195 = vmulq_n_f32(vaddq_f32(v187, v194), v193);
  v503 = v195.i32[2];
  v502 = v195.i64[0];
  if (v192)
  {
    if ((v192 & 0x80000000) == 0)
      goto LABEL_121;
    v196 = v190 + 2896;
    v191 = -1;
    v197 = 2;
  }
  else
  {
    v196 = v190 + 2896;
    v197 = 0;
  }
  sub_223FFDF1C(v196, &v502, v191, v197, v193);
LABEL_121:
  v198 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v199 = *(_BYTE *)(***(_QWORD ***)a1 + 18961);
  v200 = *(char *)(***(_QWORD ***)a1 + 18966);
  v201 = *(float *)(*(_QWORD *)(v198 + 40784) + 312);
  *(float32x2_t *)v195.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v195.f32[2] = (float)(a2[1].i32[0] + 6);
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  v203 = vmulq_n_f32(vaddq_f32(v195, v202), v201);
  v503 = v203.i32[2];
  v502 = v203.i64[0];
  if (v200)
  {
    if ((v200 & 0x80000000) == 0)
      goto LABEL_126;
    v204 = v198 + 2896;
    v199 = -1;
    v205 = 2;
  }
  else
  {
    v204 = v198 + 2896;
    v205 = 0;
  }
  sub_223FFDF1C(v204, &v502, v199, v205, v201);
LABEL_126:
  v206 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v207 = *(_BYTE *)(***(_QWORD ***)a1 + 19001);
  v208 = *(char *)(***(_QWORD ***)a1 + 19006);
  v209 = *(float *)(*(_QWORD *)(v206 + 40784) + 312);
  *(float32x2_t *)v203.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000004));
  v203.f32[2] = (float)(a2[1].i32[0] + 7);
  v210.i64[0] = 0x3F0000003F000000;
  v210.i64[1] = 0x3F0000003F000000;
  v211 = vmulq_n_f32(vaddq_f32(v203, v210), v209);
  v503 = v211.i32[2];
  v502 = v211.i64[0];
  if (v208)
  {
    if ((v208 & 0x80000000) == 0)
      goto LABEL_131;
    v212 = v206 + 2896;
    v207 = -1;
    v213 = 2;
  }
  else
  {
    v212 = v206 + 2896;
    v213 = 0;
  }
  sub_223FFDF1C(v212, &v502, v207, v213, v209);
LABEL_131:
  v214 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v215 = *(_BYTE *)(***(_QWORD ***)a1 + 19041);
  v216 = *(char *)(***(_QWORD ***)a1 + 19046);
  v217 = *(float *)(*(_QWORD *)(v214 + 40784) + 312);
  *(float32x2_t *)v211.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v211.f32[2] = (float)(a2[1].i32[0] + 6);
  v218.i64[0] = 0x3F0000003F000000;
  v218.i64[1] = 0x3F0000003F000000;
  v219 = vmulq_n_f32(vaddq_f32(v211, v218), v217);
  v503 = v219.i32[2];
  v502 = v219.i64[0];
  if (v216)
  {
    if ((v216 & 0x80000000) == 0)
      goto LABEL_136;
    v220 = v214 + 2896;
    v215 = -1;
    v221 = 2;
  }
  else
  {
    v220 = v214 + 2896;
    v221 = 0;
  }
  sub_223FFDF1C(v220, &v502, v215, v221, v217);
LABEL_136:
  v222 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v223 = *(_BYTE *)(***(_QWORD ***)a1 + 19081);
  v224 = *(char *)(***(_QWORD ***)a1 + 19086);
  v225 = *(float *)(*(_QWORD *)(v222 + 40784) + 312);
  *(float32x2_t *)v219.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000005));
  v219.f32[2] = (float)(a2[1].i32[0] + 7);
  v226.i64[0] = 0x3F0000003F000000;
  v226.i64[1] = 0x3F0000003F000000;
  v227 = vmulq_n_f32(vaddq_f32(v219, v226), v225);
  v503 = v227.i32[2];
  v502 = v227.i64[0];
  if (v224)
  {
    if ((v224 & 0x80000000) == 0)
      goto LABEL_141;
    v228 = v222 + 2896;
    v223 = -1;
    v229 = 2;
  }
  else
  {
    v228 = v222 + 2896;
    v229 = 0;
  }
  sub_223FFDF1C(v228, &v502, v223, v229, v225);
LABEL_141:
  v230 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v231 = *(_BYTE *)(***(_QWORD ***)a1 + 19121);
  v232 = *(char *)(***(_QWORD ***)a1 + 19126);
  v233 = *(float *)(*(_QWORD *)(v230 + 40784) + 312);
  *(float32x2_t *)v227.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v227.f32[2] = (float)(a2[1].i32[0] + 6);
  v234.i64[0] = 0x3F0000003F000000;
  v234.i64[1] = 0x3F0000003F000000;
  v235 = vmulq_n_f32(vaddq_f32(v227, v234), v233);
  v503 = v235.i32[2];
  v502 = v235.i64[0];
  if (v232)
  {
    if ((v232 & 0x80000000) == 0)
      goto LABEL_146;
    v236 = v230 + 2896;
    v231 = -1;
    v237 = 2;
  }
  else
  {
    v236 = v230 + 2896;
    v237 = 0;
  }
  sub_223FFDF1C(v236, &v502, v231, v237, v233);
LABEL_146:
  v238 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v239 = *(_BYTE *)(***(_QWORD ***)a1 + 19161);
  v240 = *(char *)(***(_QWORD ***)a1 + 19166);
  v241 = *(float *)(*(_QWORD *)(v238 + 40784) + 312);
  *(float32x2_t *)v235.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000005));
  v235.f32[2] = (float)(a2[1].i32[0] + 7);
  v242.i64[0] = 0x3F0000003F000000;
  v242.i64[1] = 0x3F0000003F000000;
  v243 = vmulq_n_f32(vaddq_f32(v235, v242), v241);
  v503 = v243.i32[2];
  v502 = v243.i64[0];
  if (v240)
  {
    if ((v240 & 0x80000000) == 0)
      goto LABEL_151;
    v244 = v238 + 2896;
    v239 = -1;
    v245 = 2;
  }
  else
  {
    v244 = v238 + 2896;
    v245 = 0;
  }
  sub_223FFDF1C(v244, &v502, v239, v245, v241);
LABEL_151:
  v246 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v247 = *(_BYTE *)(***(_QWORD ***)a1 + 19201);
  v248 = *(char *)(***(_QWORD ***)a1 + 19206);
  v249 = *(float *)(*(_QWORD *)(v246 + 40784) + 312);
  *(float32x2_t *)v243.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v243.f32[2] = (float)(a2[1].i32[0] + 4);
  v250.i64[0] = 0x3F0000003F000000;
  v250.i64[1] = 0x3F0000003F000000;
  v251 = vmulq_n_f32(vaddq_f32(v243, v250), v249);
  v503 = v251.i32[2];
  v502 = v251.i64[0];
  if (v248)
  {
    if ((v248 & 0x80000000) == 0)
      goto LABEL_156;
    v252 = v246 + 2896;
    v247 = -1;
    v253 = 2;
  }
  else
  {
    v252 = v246 + 2896;
    v253 = 0;
  }
  sub_223FFDF1C(v252, &v502, v247, v253, v249);
LABEL_156:
  v254 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v255 = *(_BYTE *)(***(_QWORD ***)a1 + 19241);
  v256 = *(char *)(***(_QWORD ***)a1 + 19246);
  v257 = *(float *)(*(_QWORD *)(v254 + 40784) + 312);
  *(float32x2_t *)v251.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v251.f32[2] = (float)(a2[1].i32[0] + 5);
  v258.i64[0] = 0x3F0000003F000000;
  v258.i64[1] = 0x3F0000003F000000;
  v259 = vmulq_n_f32(vaddq_f32(v251, v258), v257);
  v503 = v259.i32[2];
  v502 = v259.i64[0];
  if (v256)
  {
    if ((v256 & 0x80000000) == 0)
      goto LABEL_161;
    v260 = v254 + 2896;
    v255 = -1;
    v261 = 2;
  }
  else
  {
    v260 = v254 + 2896;
    v261 = 0;
  }
  sub_223FFDF1C(v260, &v502, v255, v261, v257);
LABEL_161:
  v262 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v263 = *(_BYTE *)(***(_QWORD ***)a1 + 19281);
  v264 = *(char *)(***(_QWORD ***)a1 + 19286);
  v265 = *(float *)(*(_QWORD *)(v262 + 40784) + 312);
  *(float32x2_t *)v259.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v259.f32[2] = (float)(a2[1].i32[0] + 4);
  v266.i64[0] = 0x3F0000003F000000;
  v266.i64[1] = 0x3F0000003F000000;
  v267 = vmulq_n_f32(vaddq_f32(v259, v266), v265);
  v503 = v267.i32[2];
  v502 = v267.i64[0];
  if (v264)
  {
    if ((v264 & 0x80000000) == 0)
      goto LABEL_166;
    v268 = v262 + 2896;
    v263 = -1;
    v269 = 2;
  }
  else
  {
    v268 = v262 + 2896;
    v269 = 0;
  }
  sub_223FFDF1C(v268, &v502, v263, v269, v265);
LABEL_166:
  v270 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v271 = *(_BYTE *)(***(_QWORD ***)a1 + 19321);
  v272 = *(char *)(***(_QWORD ***)a1 + 19326);
  v273 = *(float *)(*(_QWORD *)(v270 + 40784) + 312);
  *(float32x2_t *)v267.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v267.f32[2] = (float)(a2[1].i32[0] + 5);
  v274.i64[0] = 0x3F0000003F000000;
  v274.i64[1] = 0x3F0000003F000000;
  v275 = vmulq_n_f32(vaddq_f32(v267, v274), v273);
  v503 = v275.i32[2];
  v502 = v275.i64[0];
  if (v272)
  {
    if ((v272 & 0x80000000) == 0)
      goto LABEL_171;
    v276 = v270 + 2896;
    v271 = -1;
    v277 = 2;
  }
  else
  {
    v276 = v270 + 2896;
    v277 = 0;
  }
  sub_223FFDF1C(v276, &v502, v271, v277, v273);
LABEL_171:
  v278 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v279 = *(_BYTE *)(***(_QWORD ***)a1 + 19361);
  v280 = *(char *)(***(_QWORD ***)a1 + 19366);
  v281 = *(float *)(*(_QWORD *)(v278 + 40784) + 312);
  *(float32x2_t *)v275.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v275.f32[2] = (float)(a2[1].i32[0] + 4);
  v282.i64[0] = 0x3F0000003F000000;
  v282.i64[1] = 0x3F0000003F000000;
  v283 = vmulq_n_f32(vaddq_f32(v275, v282), v281);
  v503 = v283.i32[2];
  v502 = v283.i64[0];
  if (v280)
  {
    if ((v280 & 0x80000000) == 0)
      goto LABEL_176;
    v284 = v278 + 2896;
    v279 = -1;
    v285 = 2;
  }
  else
  {
    v284 = v278 + 2896;
    v285 = 0;
  }
  sub_223FFDF1C(v284, &v502, v279, v285, v281);
LABEL_176:
  v286 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v287 = *(_BYTE *)(***(_QWORD ***)a1 + 19401);
  v288 = *(char *)(***(_QWORD ***)a1 + 19406);
  v289 = *(float *)(*(_QWORD *)(v286 + 40784) + 312);
  *(float32x2_t *)v283.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v283.f32[2] = (float)(a2[1].i32[0] + 5);
  v290.i64[0] = 0x3F0000003F000000;
  v290.i64[1] = 0x3F0000003F000000;
  v291 = vmulq_n_f32(vaddq_f32(v283, v290), v289);
  v503 = v291.i32[2];
  v502 = v291.i64[0];
  if (v288)
  {
    if ((v288 & 0x80000000) == 0)
      goto LABEL_181;
    v292 = v286 + 2896;
    v287 = -1;
    v293 = 2;
  }
  else
  {
    v292 = v286 + 2896;
    v293 = 0;
  }
  sub_223FFDF1C(v292, &v502, v287, v293, v289);
LABEL_181:
  v294 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v295 = *(_BYTE *)(***(_QWORD ***)a1 + 19441);
  v296 = *(char *)(***(_QWORD ***)a1 + 19446);
  v297 = *(float *)(*(_QWORD *)(v294 + 40784) + 312);
  *(float32x2_t *)v291.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v291.f32[2] = (float)(a2[1].i32[0] + 4);
  v298.i64[0] = 0x3F0000003F000000;
  v298.i64[1] = 0x3F0000003F000000;
  v299 = vmulq_n_f32(vaddq_f32(v291, v298), v297);
  v503 = v299.i32[2];
  v502 = v299.i64[0];
  if (v296)
  {
    if ((v296 & 0x80000000) == 0)
      goto LABEL_186;
    v300 = v294 + 2896;
    v295 = -1;
    v301 = 2;
  }
  else
  {
    v300 = v294 + 2896;
    v301 = 0;
  }
  sub_223FFDF1C(v300, &v502, v295, v301, v297);
LABEL_186:
  v302 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v303 = *(_BYTE *)(***(_QWORD ***)a1 + 19481);
  v304 = *(char *)(***(_QWORD ***)a1 + 19486);
  v305 = *(float *)(*(_QWORD *)(v302 + 40784) + 312);
  *(float32x2_t *)v299.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v299.f32[2] = (float)(a2[1].i32[0] + 5);
  v306.i64[0] = 0x3F0000003F000000;
  v306.i64[1] = 0x3F0000003F000000;
  v307 = vmulq_n_f32(vaddq_f32(v299, v306), v305);
  v503 = v307.i32[2];
  v502 = v307.i64[0];
  if (v304)
  {
    if ((v304 & 0x80000000) == 0)
      goto LABEL_191;
    v308 = v302 + 2896;
    v303 = -1;
    v309 = 2;
  }
  else
  {
    v308 = v302 + 2896;
    v309 = 0;
  }
  sub_223FFDF1C(v308, &v502, v303, v309, v305);
LABEL_191:
  v310 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v311 = *(_BYTE *)(***(_QWORD ***)a1 + 19521);
  v312 = *(char *)(***(_QWORD ***)a1 + 19526);
  v313 = *(float *)(*(_QWORD *)(v310 + 40784) + 312);
  *(float32x2_t *)v307.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v307.f32[2] = (float)(a2[1].i32[0] + 6);
  v314.i64[0] = 0x3F0000003F000000;
  v314.i64[1] = 0x3F0000003F000000;
  v315 = vmulq_n_f32(vaddq_f32(v307, v314), v313);
  v503 = v315.i32[2];
  v502 = v315.i64[0];
  if (v312)
  {
    if ((v312 & 0x80000000) == 0)
      goto LABEL_196;
    v316 = v310 + 2896;
    v311 = -1;
    v317 = 2;
  }
  else
  {
    v316 = v310 + 2896;
    v317 = 0;
  }
  sub_223FFDF1C(v316, &v502, v311, v317, v313);
LABEL_196:
  v318 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v319 = *(_BYTE *)(***(_QWORD ***)a1 + 19561);
  v320 = *(char *)(***(_QWORD ***)a1 + 19566);
  v321 = *(float *)(*(_QWORD *)(v318 + 40784) + 312);
  *(float32x2_t *)v315.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000006));
  v315.f32[2] = (float)(a2[1].i32[0] + 7);
  v322.i64[0] = 0x3F0000003F000000;
  v322.i64[1] = 0x3F0000003F000000;
  v323 = vmulq_n_f32(vaddq_f32(v315, v322), v321);
  v503 = v323.i32[2];
  v502 = v323.i64[0];
  if (v320)
  {
    if ((v320 & 0x80000000) == 0)
      goto LABEL_201;
    v324 = v318 + 2896;
    v319 = -1;
    v325 = 2;
  }
  else
  {
    v324 = v318 + 2896;
    v325 = 0;
  }
  sub_223FFDF1C(v324, &v502, v319, v325, v321);
LABEL_201:
  v326 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v327 = *(_BYTE *)(***(_QWORD ***)a1 + 19601);
  v328 = *(char *)(***(_QWORD ***)a1 + 19606);
  v329 = *(float *)(*(_QWORD *)(v326 + 40784) + 312);
  *(float32x2_t *)v323.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v323.f32[2] = (float)(a2[1].i32[0] + 6);
  v330.i64[0] = 0x3F0000003F000000;
  v330.i64[1] = 0x3F0000003F000000;
  v331 = vmulq_n_f32(vaddq_f32(v323, v330), v329);
  v503 = v331.i32[2];
  v502 = v331.i64[0];
  if (v328)
  {
    if ((v328 & 0x80000000) == 0)
      goto LABEL_206;
    v332 = v326 + 2896;
    v327 = -1;
    v333 = 2;
  }
  else
  {
    v332 = v326 + 2896;
    v333 = 0;
  }
  sub_223FFDF1C(v332, &v502, v327, v333, v329);
LABEL_206:
  v334 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v335 = *(_BYTE *)(***(_QWORD ***)a1 + 19641);
  v336 = *(char *)(***(_QWORD ***)a1 + 19646);
  v337 = *(float *)(*(_QWORD *)(v334 + 40784) + 312);
  *(float32x2_t *)v331.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000006));
  v331.f32[2] = (float)(a2[1].i32[0] + 7);
  v338.i64[0] = 0x3F0000003F000000;
  v338.i64[1] = 0x3F0000003F000000;
  v339 = vmulq_n_f32(vaddq_f32(v331, v338), v337);
  v503 = v339.i32[2];
  v502 = v339.i64[0];
  if (v336)
  {
    if ((v336 & 0x80000000) == 0)
      goto LABEL_211;
    v340 = v334 + 2896;
    v335 = -1;
    v341 = 2;
  }
  else
  {
    v340 = v334 + 2896;
    v341 = 0;
  }
  sub_223FFDF1C(v340, &v502, v335, v341, v337);
LABEL_211:
  v342 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v343 = *(_BYTE *)(***(_QWORD ***)a1 + 19681);
  v344 = *(char *)(***(_QWORD ***)a1 + 19686);
  v345 = *(float *)(*(_QWORD *)(v342 + 40784) + 312);
  *(float32x2_t *)v339.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v339.f32[2] = (float)(a2[1].i32[0] + 6);
  v346.i64[0] = 0x3F0000003F000000;
  v346.i64[1] = 0x3F0000003F000000;
  v347 = vmulq_n_f32(vaddq_f32(v339, v346), v345);
  v503 = v347.i32[2];
  v502 = v347.i64[0];
  if (v344)
  {
    if ((v344 & 0x80000000) == 0)
      goto LABEL_216;
    v348 = v342 + 2896;
    v343 = -1;
    v349 = 2;
  }
  else
  {
    v348 = v342 + 2896;
    v349 = 0;
  }
  sub_223FFDF1C(v348, &v502, v343, v349, v345);
LABEL_216:
  v350 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v351 = *(_BYTE *)(***(_QWORD ***)a1 + 19721);
  v352 = *(char *)(***(_QWORD ***)a1 + 19726);
  v353 = *(float *)(*(_QWORD *)(v350 + 40784) + 312);
  *(float32x2_t *)v347.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x400000007));
  v347.f32[2] = (float)(a2[1].i32[0] + 7);
  v354.i64[0] = 0x3F0000003F000000;
  v354.i64[1] = 0x3F0000003F000000;
  v355 = vmulq_n_f32(vaddq_f32(v347, v354), v353);
  v503 = v355.i32[2];
  v502 = v355.i64[0];
  if (v352)
  {
    if ((v352 & 0x80000000) == 0)
      goto LABEL_221;
    v356 = v350 + 2896;
    v351 = -1;
    v357 = 2;
  }
  else
  {
    v356 = v350 + 2896;
    v357 = 0;
  }
  sub_223FFDF1C(v356, &v502, v351, v357, v353);
LABEL_221:
  v358 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v359 = *(_BYTE *)(***(_QWORD ***)a1 + 19761);
  v360 = *(char *)(***(_QWORD ***)a1 + 19766);
  v361 = *(float *)(*(_QWORD *)(v358 + 40784) + 312);
  *(float32x2_t *)v355.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v355.f32[2] = (float)(a2[1].i32[0] + 6);
  v362.i64[0] = 0x3F0000003F000000;
  v362.i64[1] = 0x3F0000003F000000;
  v363 = vmulq_n_f32(vaddq_f32(v355, v362), v361);
  v503 = v363.i32[2];
  v502 = v363.i64[0];
  if (v360)
  {
    if ((v360 & 0x80000000) == 0)
      goto LABEL_226;
    v364 = v358 + 2896;
    v359 = -1;
    v365 = 2;
  }
  else
  {
    v364 = v358 + 2896;
    v365 = 0;
  }
  sub_223FFDF1C(v364, &v502, v359, v365, v361);
LABEL_226:
  v366 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v367 = *(_BYTE *)(***(_QWORD ***)a1 + 19801);
  v368 = *(char *)(***(_QWORD ***)a1 + 19806);
  v369 = *(float *)(*(_QWORD *)(v366 + 40784) + 312);
  *(float32x2_t *)v363.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x500000007));
  v363.f32[2] = (float)(a2[1].i32[0] + 7);
  v370.i64[0] = 0x3F0000003F000000;
  v370.i64[1] = 0x3F0000003F000000;
  v371 = vmulq_n_f32(vaddq_f32(v363, v370), v369);
  v503 = v371.i32[2];
  v502 = v371.i64[0];
  if (v368)
  {
    if ((v368 & 0x80000000) == 0)
      goto LABEL_231;
    v372 = v366 + 2896;
    v367 = -1;
    v373 = 2;
  }
  else
  {
    v372 = v366 + 2896;
    v373 = 0;
  }
  sub_223FFDF1C(v372, &v502, v367, v373, v369);
LABEL_231:
  v374 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v375 = *(_BYTE *)(***(_QWORD ***)a1 + 19841);
  v376 = *(char *)(***(_QWORD ***)a1 + 19846);
  v377 = *(float *)(*(_QWORD *)(v374 + 40784) + 312);
  *(float32x2_t *)v371.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v371.f32[2] = (float)(a2[1].i32[0] + 4);
  v378.i64[0] = 0x3F0000003F000000;
  v378.i64[1] = 0x3F0000003F000000;
  v379 = vmulq_n_f32(vaddq_f32(v371, v378), v377);
  v503 = v379.i32[2];
  v502 = v379.i64[0];
  if (v376)
  {
    if ((v376 & 0x80000000) == 0)
      goto LABEL_236;
    v380 = v374 + 2896;
    v375 = -1;
    v381 = 2;
  }
  else
  {
    v380 = v374 + 2896;
    v381 = 0;
  }
  sub_223FFDF1C(v380, &v502, v375, v381, v377);
LABEL_236:
  v382 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v383 = *(_BYTE *)(***(_QWORD ***)a1 + 19881);
  v384 = *(char *)(***(_QWORD ***)a1 + 19886);
  v385 = *(float *)(*(_QWORD *)(v382 + 40784) + 312);
  *(float32x2_t *)v379.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v379.f32[2] = (float)(a2[1].i32[0] + 5);
  v386.i64[0] = 0x3F0000003F000000;
  v386.i64[1] = 0x3F0000003F000000;
  v387 = vmulq_n_f32(vaddq_f32(v379, v386), v385);
  v503 = v387.i32[2];
  v502 = v387.i64[0];
  if (v384)
  {
    if ((v384 & 0x80000000) == 0)
      goto LABEL_241;
    v388 = v382 + 2896;
    v383 = -1;
    v389 = 2;
  }
  else
  {
    v388 = v382 + 2896;
    v389 = 0;
  }
  sub_223FFDF1C(v388, &v502, v383, v389, v385);
LABEL_241:
  v390 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v391 = *(_BYTE *)(***(_QWORD ***)a1 + 19921);
  v392 = *(char *)(***(_QWORD ***)a1 + 19926);
  v393 = *(float *)(*(_QWORD *)(v390 + 40784) + 312);
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v387.f32[2] = (float)(a2[1].i32[0] + 4);
  v394.i64[0] = 0x3F0000003F000000;
  v394.i64[1] = 0x3F0000003F000000;
  v395 = vmulq_n_f32(vaddq_f32(v387, v394), v393);
  v503 = v395.i32[2];
  v502 = v395.i64[0];
  if (v392)
  {
    if ((v392 & 0x80000000) == 0)
      goto LABEL_246;
    v396 = v390 + 2896;
    v391 = -1;
    v397 = 2;
  }
  else
  {
    v396 = v390 + 2896;
    v397 = 0;
  }
  sub_223FFDF1C(v396, &v502, v391, v397, v393);
LABEL_246:
  v398 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v399 = *(_BYTE *)(***(_QWORD ***)a1 + 19961);
  v400 = *(char *)(***(_QWORD ***)a1 + 19966);
  v401 = *(float *)(*(_QWORD *)(v398 + 40784) + 312);
  *(float32x2_t *)v395.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v395.f32[2] = (float)(a2[1].i32[0] + 5);
  v402.i64[0] = 0x3F0000003F000000;
  v402.i64[1] = 0x3F0000003F000000;
  v403 = vmulq_n_f32(vaddq_f32(v395, v402), v401);
  v503 = v403.i32[2];
  v502 = v403.i64[0];
  if (v400)
  {
    if ((v400 & 0x80000000) == 0)
      goto LABEL_251;
    v404 = v398 + 2896;
    v399 = -1;
    v405 = 2;
  }
  else
  {
    v404 = v398 + 2896;
    v405 = 0;
  }
  sub_223FFDF1C(v404, &v502, v399, v405, v401);
LABEL_251:
  v406 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v407 = *(_BYTE *)(***(_QWORD ***)a1 + 20001);
  v408 = *(char *)(***(_QWORD ***)a1 + 20006);
  v409 = *(float *)(*(_QWORD *)(v406 + 40784) + 312);
  *(float32x2_t *)v403.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v403.f32[2] = (float)(a2[1].i32[0] + 4);
  v410.i64[0] = 0x3F0000003F000000;
  v410.i64[1] = 0x3F0000003F000000;
  v411 = vmulq_n_f32(vaddq_f32(v403, v410), v409);
  v503 = v411.i32[2];
  v502 = v411.i64[0];
  if (v408)
  {
    if ((v408 & 0x80000000) == 0)
      goto LABEL_256;
    v412 = v406 + 2896;
    v407 = -1;
    v413 = 2;
  }
  else
  {
    v412 = v406 + 2896;
    v413 = 0;
  }
  sub_223FFDF1C(v412, &v502, v407, v413, v409);
LABEL_256:
  v414 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v415 = *(_BYTE *)(***(_QWORD ***)a1 + 20041);
  v416 = *(char *)(***(_QWORD ***)a1 + 20046);
  v417 = *(float *)(*(_QWORD *)(v414 + 40784) + 312);
  *(float32x2_t *)v411.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v411.f32[2] = (float)(a2[1].i32[0] + 5);
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  v419 = vmulq_n_f32(vaddq_f32(v411, v418), v417);
  v503 = v419.i32[2];
  v502 = v419.i64[0];
  if (v416)
  {
    if ((v416 & 0x80000000) == 0)
      goto LABEL_261;
    v420 = v414 + 2896;
    v415 = -1;
    v421 = 2;
  }
  else
  {
    v420 = v414 + 2896;
    v421 = 0;
  }
  sub_223FFDF1C(v420, &v502, v415, v421, v417);
LABEL_261:
  v422 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v423 = *(_BYTE *)(***(_QWORD ***)a1 + 20081);
  v424 = *(char *)(***(_QWORD ***)a1 + 20086);
  v425 = *(float *)(*(_QWORD *)(v422 + 40784) + 312);
  *(float32x2_t *)v419.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v419.f32[2] = (float)(a2[1].i32[0] + 4);
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  v427 = vmulq_n_f32(vaddq_f32(v419, v426), v425);
  v503 = v427.i32[2];
  v502 = v427.i64[0];
  if (v424)
  {
    if ((v424 & 0x80000000) == 0)
      goto LABEL_266;
    v428 = v422 + 2896;
    v423 = -1;
    v429 = 2;
  }
  else
  {
    v428 = v422 + 2896;
    v429 = 0;
  }
  sub_223FFDF1C(v428, &v502, v423, v429, v425);
LABEL_266:
  v430 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v431 = *(_BYTE *)(***(_QWORD ***)a1 + 20121);
  v432 = *(char *)(***(_QWORD ***)a1 + 20126);
  v433 = *(float *)(*(_QWORD *)(v430 + 40784) + 312);
  *(float32x2_t *)v427.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v427.f32[2] = (float)(a2[1].i32[0] + 5);
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  v435 = vmulq_n_f32(vaddq_f32(v427, v434), v433);
  v503 = v435.i32[2];
  v502 = v435.i64[0];
  if (v432)
  {
    if ((v432 & 0x80000000) == 0)
      goto LABEL_271;
    v436 = v430 + 2896;
    v431 = -1;
    v437 = 2;
  }
  else
  {
    v436 = v430 + 2896;
    v437 = 0;
  }
  sub_223FFDF1C(v436, &v502, v431, v437, v433);
LABEL_271:
  v438 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v439 = *(_BYTE *)(***(_QWORD ***)a1 + 20161);
  v440 = *(char *)(***(_QWORD ***)a1 + 20166);
  v441 = *(float *)(*(_QWORD *)(v438 + 40784) + 312);
  *(float32x2_t *)v435.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v435.f32[2] = (float)(a2[1].i32[0] + 6);
  v442.i64[0] = 0x3F0000003F000000;
  v442.i64[1] = 0x3F0000003F000000;
  v443 = vmulq_n_f32(vaddq_f32(v435, v442), v441);
  v503 = v443.i32[2];
  v502 = v443.i64[0];
  if (v440)
  {
    if ((v440 & 0x80000000) == 0)
      goto LABEL_276;
    v444 = v438 + 2896;
    v439 = -1;
    v445 = 2;
  }
  else
  {
    v444 = v438 + 2896;
    v445 = 0;
  }
  sub_223FFDF1C(v444, &v502, v439, v445, v441);
LABEL_276:
  v446 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v447 = *(_BYTE *)(***(_QWORD ***)a1 + 20201);
  v448 = *(char *)(***(_QWORD ***)a1 + 20206);
  v449 = *(float *)(*(_QWORD *)(v446 + 40784) + 312);
  *(float32x2_t *)v443.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000006));
  v443.f32[2] = (float)(a2[1].i32[0] + 7);
  v450.i64[0] = 0x3F0000003F000000;
  v450.i64[1] = 0x3F0000003F000000;
  v451 = vmulq_n_f32(vaddq_f32(v443, v450), v449);
  v503 = v451.i32[2];
  v502 = v451.i64[0];
  if (v448)
  {
    if ((v448 & 0x80000000) == 0)
      goto LABEL_281;
    v452 = v446 + 2896;
    v447 = -1;
    v453 = 2;
  }
  else
  {
    v452 = v446 + 2896;
    v453 = 0;
  }
  sub_223FFDF1C(v452, &v502, v447, v453, v449);
LABEL_281:
  v454 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v455 = *(_BYTE *)(***(_QWORD ***)a1 + 20241);
  v456 = *(char *)(***(_QWORD ***)a1 + 20246);
  v457 = *(float *)(*(_QWORD *)(v454 + 40784) + 312);
  *(float32x2_t *)v451.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v451.f32[2] = (float)(a2[1].i32[0] + 6);
  v458.i64[0] = 0x3F0000003F000000;
  v458.i64[1] = 0x3F0000003F000000;
  v459 = vmulq_n_f32(vaddq_f32(v451, v458), v457);
  v503 = v459.i32[2];
  v502 = v459.i64[0];
  if (v456)
  {
    if ((v456 & 0x80000000) == 0)
      goto LABEL_286;
    v460 = v454 + 2896;
    v455 = -1;
    v461 = 2;
  }
  else
  {
    v460 = v454 + 2896;
    v461 = 0;
  }
  sub_223FFDF1C(v460, &v502, v455, v461, v457);
LABEL_286:
  v462 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v463 = *(_BYTE *)(***(_QWORD ***)a1 + 20281);
  v464 = *(char *)(***(_QWORD ***)a1 + 20286);
  v465 = *(float *)(*(_QWORD *)(v462 + 40784) + 312);
  *(float32x2_t *)v459.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000006));
  v459.f32[2] = (float)(a2[1].i32[0] + 7);
  v466.i64[0] = 0x3F0000003F000000;
  v466.i64[1] = 0x3F0000003F000000;
  v467 = vmulq_n_f32(vaddq_f32(v459, v466), v465);
  v503 = v467.i32[2];
  v502 = v467.i64[0];
  if (v464)
  {
    if ((v464 & 0x80000000) == 0)
      goto LABEL_291;
    v468 = v462 + 2896;
    v463 = -1;
    v469 = 2;
  }
  else
  {
    v468 = v462 + 2896;
    v469 = 0;
  }
  sub_223FFDF1C(v468, &v502, v463, v469, v465);
LABEL_291:
  v470 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v471 = *(_BYTE *)(***(_QWORD ***)a1 + 20321);
  v472 = *(char *)(***(_QWORD ***)a1 + 20326);
  v473 = *(float *)(*(_QWORD *)(v470 + 40784) + 312);
  *(float32x2_t *)v467.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v467.f32[2] = (float)(a2[1].i32[0] + 6);
  v474.i64[0] = 0x3F0000003F000000;
  v474.i64[1] = 0x3F0000003F000000;
  v475 = vmulq_n_f32(vaddq_f32(v467, v474), v473);
  v503 = v475.i32[2];
  v502 = v475.i64[0];
  if (v472)
  {
    if ((v472 & 0x80000000) == 0)
      goto LABEL_296;
    v476 = v470 + 2896;
    v471 = -1;
    v477 = 2;
  }
  else
  {
    v476 = v470 + 2896;
    v477 = 0;
  }
  sub_223FFDF1C(v476, &v502, v471, v477, v473);
LABEL_296:
  v478 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v479 = *(_BYTE *)(***(_QWORD ***)a1 + 20361);
  v480 = *(char *)(***(_QWORD ***)a1 + 20366);
  v481 = *(float *)(*(_QWORD *)(v478 + 40784) + 312);
  *(float32x2_t *)v475.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x600000007));
  v475.f32[2] = (float)(a2[1].i32[0] + 7);
  v482.i64[0] = 0x3F0000003F000000;
  v482.i64[1] = 0x3F0000003F000000;
  v483 = vmulq_n_f32(vaddq_f32(v475, v482), v481);
  v503 = v483.i32[2];
  v502 = v483.i64[0];
  if (v480)
  {
    if ((v480 & 0x80000000) == 0)
      goto LABEL_301;
    v484 = v478 + 2896;
    v479 = -1;
    v485 = 2;
  }
  else
  {
    v484 = v478 + 2896;
    v485 = 0;
  }
  sub_223FFDF1C(v484, &v502, v479, v485, v481);
LABEL_301:
  v486 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v487 = *(_BYTE *)(***(_QWORD ***)a1 + 20401);
  v488 = *(char *)(***(_QWORD ***)a1 + 20406);
  v489 = *(float *)(*(_QWORD *)(v486 + 40784) + 312);
  *(float32x2_t *)v483.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v483.f32[2] = (float)(a2[1].i32[0] + 6);
  v490.i64[0] = 0x3F0000003F000000;
  v490.i64[1] = 0x3F0000003F000000;
  v491 = vmulq_n_f32(vaddq_f32(v483, v490), v489);
  v503 = v491.i32[2];
  v502 = v491.i64[0];
  if (v488)
  {
    if ((v488 & 0x80000000) == 0)
      goto LABEL_306;
    v492 = v486 + 2896;
    v487 = -1;
    v493 = 2;
  }
  else
  {
    v492 = v486 + 2896;
    v493 = 0;
  }
  sub_223FFDF1C(v492, &v502, v487, v493, v489);
LABEL_306:
  v494 = **(_QWORD **)(*(_QWORD *)a1 + 40);
  v495 = *(_BYTE *)(***(_QWORD ***)a1 + 20441);
  v496 = *(char *)(***(_QWORD ***)a1 + 20446);
  v497 = *(float *)(*(_QWORD *)(v494 + 40784) + 312);
  *(float32x2_t *)v491.f32 = vcvt_f32_s32(vadd_s32(*a2, (int32x2_t)0x700000007));
  v491.f32[2] = (float)(a2[1].i32[0] + 7);
  v498.i64[0] = 0x3F0000003F000000;
  v498.i64[1] = 0x3F0000003F000000;
  v499 = vmulq_n_f32(vaddq_f32(v491, v498), v497);
  v503 = v499.i32[2];
  v502 = v499.i64[0];
  if (!v496)
  {
    v500 = v494 + 2896;
    v501 = 0;
LABEL_311:
    sub_223FFDF1C(v500, &v502, v495, v501, v497);
    return;
  }
  if (v496 < 0)
  {
    v500 = v494 + 2896;
    v495 = -1;
    v501 = 2;
    goto LABEL_311;
  }
}

_QWORD *sub_22394FF60(uint64_t *a1, uint64_t a2, _OWORD **a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *v12;
  unint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  float v18;
  float v19;
  uint64_t v20;
  _QWORD *v21;
  _BOOL8 v22;
  unint64_t v23;
  unint64_t v24;
  size_t prime;
  void *v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  size_t v30;
  size_t v31;
  size_t v32;
  _QWORD *i;
  size_t v34;
  uint64_t v35;
  unint64_t v36;
  uint8x8_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  size_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;

  v7 = sub_22456636C((unsigned __int8 *)a2);
  v8 = v7;
  v9 = a1[1];
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v9)
        v3 = v7 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v7;
    }
    v11 = *(_QWORD ***)(*a1 + 8 * v3);
    if (v11)
    {
      v12 = *v11;
      if (*v11)
      {
        if (v10.u32[0] < 2uLL)
        {
          while (1)
          {
            v16 = v12[1];
            if (v16 == v7)
            {
              if (v12[2] == *(_QWORD *)a2 && v12[3] == *(_QWORD *)(a2 + 8))
                return v12;
            }
            else if ((v16 & (v9 - 1)) != v3)
            {
              goto LABEL_28;
            }
            v12 = (_QWORD *)*v12;
            if (!v12)
              goto LABEL_28;
          }
        }
        do
        {
          v14 = v12[1];
          if (v14 == v7)
          {
            if (v12[2] == *(_QWORD *)a2 && v12[3] == *(_QWORD *)(a2 + 8))
              return v12;
          }
          else
          {
            if (v14 >= v9)
              v14 %= v9;
            if (v14 != v3)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
LABEL_28:
  v17 = a1 + 2;
  v12 = operator new(0x38uLL);
  *v12 = 0;
  v12[1] = v8;
  *((_OWORD *)v12 + 1) = **a3;
  v12[5] = 0;
  v12[6] = 0;
  v12[4] = 0;
  v18 = (float)(unint64_t)(a1[3] + 1);
  v19 = *((float *)a1 + 8);
  if (!v9 || (float)(v19 * (float)v9) < v18)
  {
    v22 = 1;
    if (v9 >= 3)
      v22 = (v9 & (v9 - 1)) != 0;
    v23 = v22 | (2 * v9);
    v24 = vcvtps_u32_f32(v18 / v19);
    if (v23 <= v24)
      prime = v24;
    else
      prime = v23;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
      v9 = a1[1];
    }
    if (prime > v9)
    {
LABEL_42:
      if (prime >> 61)
        sub_223174E94();
      v26 = operator new(8 * prime);
      v27 = (void *)*a1;
      *a1 = (uint64_t)v26;
      if (v27)
        operator delete(v27);
      v28 = 0;
      a1[1] = prime;
      do
        *(_QWORD *)(*a1 + 8 * v28++) = 0;
      while (prime != v28);
      v29 = (_QWORD *)*v17;
      if (!*v17)
        goto LABEL_74;
      v30 = v29[1];
      v31 = prime - 1;
      if ((prime & (prime - 1)) == 0)
      {
        v32 = v30 & v31;
        *(_QWORD *)(*a1 + 8 * v32) = v17;
        for (i = (_QWORD *)*v29; *v29; i = (_QWORD *)*v29)
        {
          v34 = i[1] & v31;
          if (v34 == v32)
          {
            v29 = i;
          }
          else if (*(_QWORD *)(*a1 + 8 * v34))
          {
            *v29 = *i;
            v35 = 8 * v34;
            *i = **(_QWORD **)(*a1 + v35);
            **(_QWORD **)(*a1 + v35) = i;
          }
          else
          {
            *(_QWORD *)(*a1 + 8 * v34) = v29;
            v29 = i;
            v32 = v34;
          }
        }
        goto LABEL_74;
      }
      if (v30 >= prime)
        v30 %= prime;
      *(_QWORD *)(*a1 + 8 * v30) = v17;
      v39 = (_QWORD *)*v29;
      if (!*v29)
      {
LABEL_74:
        v9 = prime;
        v42 = prime - 1;
        if ((prime & (prime - 1)) != 0)
          goto LABEL_75;
        goto LABEL_90;
      }
      while (1)
      {
        v41 = v39[1];
        if (v41 >= prime)
          v41 %= prime;
        if (v41 == v30)
          goto LABEL_68;
        if (*(_QWORD *)(*a1 + 8 * v41))
        {
          *v29 = *v39;
          v40 = 8 * v41;
          *v39 = **(_QWORD **)(*a1 + v40);
          **(_QWORD **)(*a1 + v40) = v39;
          v39 = v29;
LABEL_68:
          v29 = v39;
          v39 = (_QWORD *)*v39;
          if (!v39)
            goto LABEL_74;
        }
        else
        {
          *(_QWORD *)(*a1 + 8 * v41) = v29;
          v29 = v39;
          v39 = (_QWORD *)*v39;
          v30 = v41;
          if (!v39)
            goto LABEL_74;
        }
      }
    }
    if (prime < v9)
    {
      v36 = vcvtps_u32_f32((float)(unint64_t)a1[3] / *((float *)a1 + 8));
      if (v9 < 3 || (v37 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        v36 = std::__next_prime(v36);
      }
      else
      {
        v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2)
          v36 = v38;
      }
      if (prime <= v36)
        prime = v36;
      if (prime < v9)
      {
        if (!prime)
        {
          v43 = (void *)*a1;
          *a1 = 0;
          if (v43)
            operator delete(v43);
          v9 = 0;
          a1[1] = 0;
          v42 = -1;
          goto LABEL_90;
        }
        goto LABEL_42;
      }
      v9 = a1[1];
    }
    v42 = v9 - 1;
    if ((v9 & (v9 - 1)) != 0)
    {
LABEL_75:
      if (v8 >= v9)
      {
        v3 = v8 % v9;
        v20 = *a1;
        v21 = *(_QWORD **)(*a1 + 8 * (v8 % v9));
        if (v21)
          goto LABEL_31;
      }
      else
      {
        v3 = v8;
        v20 = *a1;
        v21 = *(_QWORD **)(*a1 + 8 * v8);
        if (v21)
          goto LABEL_31;
      }
      goto LABEL_91;
    }
LABEL_90:
    v3 = v42 & v8;
    v20 = *a1;
    v21 = *(_QWORD **)(*a1 + 8 * (v42 & v8));
    if (v21)
      goto LABEL_31;
    goto LABEL_91;
  }
  v20 = *a1;
  v21 = *(_QWORD **)(*a1 + 8 * v3);
  if (v21)
  {
LABEL_31:
    *v12 = *v21;
LABEL_97:
    *v21 = v12;
    goto LABEL_98;
  }
LABEL_91:
  *v12 = *v17;
  *v17 = v12;
  *(_QWORD *)(v20 + 8 * v3) = v17;
  if (*v12)
  {
    v44 = *(_QWORD *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v44 >= v9)
        v44 %= v9;
    }
    else
    {
      v44 &= v9 - 1;
    }
    v21 = (_QWORD *)(*a1 + 8 * v44);
    goto LABEL_97;
  }
LABEL_98:
  ++a1[3];
  return v12;
}

void sub_223950430(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223950444((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_223950444(uint64_t a1)
{
  _QWORD *v2;
  void *v3;

  v2 = *(_QWORD **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
    {
      v3 = (void *)v2[4];
      if (v3)
      {
        v2[5] = v3;
        operator delete(v3);
      }
    }
    operator delete(v2);
  }
  return a1;
}

void sub_223950494()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_2239504A8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC5D028;
  result[1] = v3;
  return result;
}

uint64_t sub_2239504DC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC5D028;
  a2[1] = v2;
  return result;
}

size_t sub_2239504F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int v6;
  size_t result;
  size_t v8;
  char *v9;
  int8x16_t v10;
  float32x4_t v11;
  float32x2_t v12;
  int32x4_t v13;
  int32x4_t v14;
  float32x2_t v15;
  int8x16_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  float32x4_t v21;
  int8x16_t v22;
  int8x16_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  int32x4_t v27;
  int8x16_t v28;
  float32x4_t v29;
  uint64_t v30;
  float32x4_t v31;
  uint64_t v32;
  BOOL v33;
  float32x4_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint32x4_t v39;
  uint32x4_t v40;
  int v41;
  float32x4_t v42;
  float32x2_t v43;
  __int32 v44;
  int32x2_t v45;
  unsigned int v46;
  __int128 v47;
  char v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v6 = *(unsigned __int8 *)(a2 + 8);
  if (v6 == 2
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/OccupancyProvider.h", 68, (uint64_t)"granularity_hint != OccupancyGranularity::Fine", 46, (uint64_t)"Only medium and coarse granularity point queries are supported.", 63, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  if (result)
  {
    v8 = result;
    if ((result & 0x8000000000000000) != 0)
      sub_22316E078();
    v9 = (char *)operator new(result);
    *a3 = v9;
    a3[2] = &v9[v8];
    bzero(v9, v8);
    v17 = 0;
    a3[1] = &v9[v8];
    do
    {
      v18 = *(_DWORD *)(a2 + 60) * v17;
      v19 = *(_QWORD *)(a2 + 32);
      v12.i32[0] = *(_DWORD *)(v19 + 4 * v18);
      v11.i32[0] = *(_DWORD *)(v19 + 4 * (v18 + 1));
      v10.i32[0] = *(_DWORD *)(v19 + 4 * (v18 + 2));
      v20 = *(_QWORD *)(a1 + 8);
      v13.i64[0] = *(_QWORD *)(v20 + 40148);
      v13.i32[2] = *(_DWORD *)(v20 + 40156);
      v14.i64[0] = *(_QWORD *)(v20 + 40164);
      v14.i32[2] = *(_DWORD *)(v20 + 40172);
      v15.i32[0] = *(_DWORD *)(v20 + 40188);
      v21.i64[0] = vzip1q_s32(v13, v14).u64[0];
      v16.i64[0] = *(_QWORD *)(v20 + 40196);
      v16.i32[2] = *(_DWORD *)(v20 + 40204);
      v22 = (int8x16_t)vnegq_f32((float32x4_t)v16);
      v23 = (int8x16_t)vtrn2q_s32(v13, v14);
      v23.i32[2] = HIDWORD(*(_QWORD *)(v20 + 40180));
      v24 = (float32x4_t)vzip2q_s32(v13, v14);
      *(float32x2_t *)v25.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v21.f32, *(float *)v22.i32), *(float32x2_t *)v23.i8, *(float32x2_t *)v16.i8, 1), *(float32x2_t *)v24.f32, (float32x4_t)v16, 2);
      v24.i32[2] = v15.i32[0];
      v25.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v20 + 40180), *(float32x2_t *)v22.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v20 + 40180), 1), *(float32x2_t *)v16.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v22, v22, 8uLL), v15).u32[0]);
      v21.i64[1] = *(_QWORD *)(v20 + 40180);
      v26.i32[3] = 0;
      v26.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v23, 0).i32[3];
      *(uint64_t *)((char *)v26.i64 + 4) = vextq_s8(v23, v10, 4uLL).u64[0];
      v24.i64[1] = vdupq_laneq_s32((int32x4_t)v24, 2).u32[0];
      v27 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v21, COERCE_FLOAT(*(_OWORD *)(v20 + 40212))), v26, *(float32x2_t *)(v20 + 40212), 1), v24, *(float32x4_t *)(v20 + 40212), 2), v25, *(float32x4_t *)(v20 + 40212), 3);
      v14 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v21, COERCE_FLOAT(*(_OWORD *)(v20 + 40228))), v26, *(float32x2_t *)(v20 + 40228), 1), v24, *(float32x4_t *)(v20 + 40228), 2), v25, *(float32x4_t *)(v20 + 40228), 3);
      v28 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v21, COERCE_FLOAT(*(_OWORD *)(v20 + 40244))), v26, *(float32x2_t *)(v20 + 40244), 1), v24, *(float32x4_t *)(v20 + 40244), 2), v25, *(float32x4_t *)(v20 + 40244), 3);
      v29 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v21, COERCE_FLOAT(*(_OWORD *)(v20 + 40260))), v26, *(float32x2_t *)(v20 + 40260), 1), v24, *(float32x4_t *)(v20 + 40260), 2), v25, *(float32x4_t *)(v20 + 40260), 3);
      v25.i64[0] = vtrn2q_s32(v27, v14).u64[0];
      v13 = vzip2q_s32(v27, v14);
      v16 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v25.f32, 0);
      v30 = v29.i64[0];
      *(int32x2_t *)v14.i8 = vzip1_s32(*(int32x2_t *)v27.i8, *(int32x2_t *)v14.i8);
      *(float32x2_t *)v31.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v14.i8, COERCE_FLOAT(v30 ^ 0x80000000)), *(float32x2_t *)v25.f32, (float32x2_t)(v30 ^ 0x8000000080000000), 1), *(float32x2_t *)v13.i8, COERCE_FLOAT(v29.i32[2] ^ 0x80000000));
      v22.i64[0] = vextq_s8(v28, v28, 8uLL).u64[0];
      v15 = (float32x2_t)vextq_s8(v16, (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v25.f32, 1), 0xCuLL).u64[0];
      *(float32x2_t *)&v31.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v28.i8, (float32x2_t)(v30 ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v30 ^ 0x8000000080000000), 1), *(float32x2_t *)v28.i8, 1), (float32x2_t)(v29.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v22.i8);
      *(float32x2_t *)v25.f32 = vmla_n_f32(vmla_n_f32(vmul_n_f32(*(float32x2_t *)v14.i8, v12.f32[0]), v15, v11.f32[0]), *(float32x2_t *)v13.i8, *(float *)v10.i32);
      v12 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v28.i8, v12), *(float32x2_t *)v11.f32, *(float32x2_t *)v28.i8, 1), *(float32x2_t *)v10.i8, *(float32x2_t *)v22.i8);
      *(float32x2_t *)&v25.u32[2] = v12;
      v10 = (int8x16_t)vaddq_f32(v25, v31);
      v44 = v10.i32[2];
      v43 = *(float32x2_t *)v10.i8;
      if (*(_BYTE *)(v20 + 297))
      {
        v32 = *(_QWORD *)(v20 + 40784);
        if (v32)
        {
          v33 = (v43.i32[0] & 0x7FFFFFFFu) < 0x7F800000;
          if ((v43.i32[0] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          {
            v33 = (v43.i32[1] & 0x7FFFFFFFu) < 0x7F800000;
            if ((v43.i32[1] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              v33 = (v44 & 0x7FFFFFFFu) < 0x7F800000;
          }
          v42 = (float32x4_t)v10;
          if (!v33
            && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.h", 173, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v34 = vmulq_n_f32(v42, *(float *)(v32 + 316));
          v45 = vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v34.f32));
          v46 = vcvtms_s32_f32(v34.f32[2]);
          LOBYTE(v47) = 0;
          v48 = 0;
          v35 = sub_223950A98(v32 + 184, &v47, &v45);
          if ((v35 & 0x80000000) != 0)
          {
            v38 = v32 + 500;
          }
          else
          {
            v36 = v35;
            v37 = *(_QWORD *)(v32 + 20984);
            if (0xCCCCCCCCCCCCCCCDLL * ((*(_QWORD *)(v32 + 20992) - v37) >> 12) <= v35)
            {
              if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 205, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
              {
                abort();
              }
              v37 = *(_QWORD *)(v32 + 20984);
            }
            v38 = v37 + 20480 * v36;
          }
          *(int32x2_t *)v39.i8 = vdup_n_s32(v46 & 7);
          v39.u64[1] = (unint64_t)vdup_n_s32(v45.i8[0] & 7);
          v40.i32[0] = v45.i8[0] & 7;
          v40.i32[1] = v45.i8[4] & 7;
          v40.i32[2] = v40.i32[1];
          v40.i32[3] = v40.i32[1];
          v12.i32[1] = 128;
          v10 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u32(v39, (uint32x4_t)xmmword_224656630), (int8x16_t)xmmword_224656650), vandq_s8((int8x16_t)vshlq_u32(v40, (uint32x4_t)xmmword_224656620), (int8x16_t)xmmword_224656640));
          v11 = (float32x4_t)vextq_s8(v10, v10, 8uLL);
          *(int8x8_t *)v10.i8 = vorr_s8(*(int8x8_t *)v10.i8, *(int8x8_t *)v11.f32);
          v41 = *(unsigned __int8 *)(v38 + 40 * (v10.i32[0] | v46 & 1 | v10.i32[1]) + 6);
          if (v41)
            result = 2 * ((char)v41 < 1);
          else
            result = 1;
        }
        else
        {
          result = 2;
        }
      }
      else
      {
        result = sub_223CFE284(v20 + 304, &v43, (_QWORD *)(v20 + 39920), v6, *(double *)v10.i64, v11);
      }
      v9[v17++] = result;
    }
    while (v8 != v17);
  }
  return result;
}

void sub_2239509E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void **v10;
  void *v12;

  v12 = *v10;
  if (*v10)
  {
    *(_QWORD *)(a10 + 8) = v12;
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_223950A20(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZN"
                     "S3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_1"
                     "8IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_26OccupancyQueryPointRequestEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProvid"
                                "erEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt"
                                "3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_2"
                                "6OccupancyQueryPointRequestEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_26OccupancyQueryPointRequestEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_26OccupancyQueryPointRequestEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223950A8C()
{
  return &unk_24EC5D098;
}

uint64_t sub_223950A98(uint64_t a1, __int128 *a2, _DWORD *a3)
{
  unint64_t v5;
  signed int v6;
  signed int v7;
  signed int v8;
  uint64_t v9;
  int *v10;
  int v11;
  signed int v12;
  signed int v13;
  int v14;
  BOOL v15;
  signed int v17;
  signed int v18;
  signed int v19;
  _DWORD *v20;
  BOOL v21;
  int v23;
  int v24;
  int i;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  __int128 v30;
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v5 = *(unsigned int *)(a1 + 176);
  if ((v5 & 0x80000000) != 0)
    goto LABEL_27;
  v6 = *a3 & 0xFFFFFFF8;
  v7 = a3[1] & 0xFFFFFFF8;
  v8 = a3[2] & 0xFFFFFFF8;
  v9 = *(_QWORD *)(a1 + 184);
  v10 = (int *)(v9 + 4488 * (v5 & 0xFFFFFFFFCFFFFFFFLL));
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v6 - *v10;
  v15 = v6 < *v10 || v7 < v12;
  if (v15 || v8 < v13)
    goto LABEL_27;
  v17 = v10[3];
  v20 = v10 + 4;
  v19 = v10[4];
  v18 = v20[1];
  v21 = v6 < v17 && v7 < v19;
  if (!v21 || v8 >= v18)
    goto LABEL_27;
  v23 = v7 - v12;
  v24 = v8 - v13;
  for (i = v17 - v11; ; v24 -= i & v24)
  {
    i >>= 1;
    v5 = *(unsigned int *)(v9
                         + 4488 * (v5 & 0xCFFFFFFF)
                         + 4 * ((4 * ((i & v14) != 0)) | (2 * ((i & v23) != 0)) | ((i & v24) != 0))
                         + 24);
    if (i == *(_DWORD *)(a1 + 136) || v5 >> 30)
      break;
    v14 -= i & v14;
    v23 -= i & v23;
  }
  if ((v5 & 0x80000000) != 0)
  {
LABEL_27:
    v27 = a1 + 20872;
    v31 = *((_BYTE *)a2 + 16);
    v30 = *a2;
    if (!v31)
      return *(unsigned int *)(v27 + 40);
  }
  else
  {
    v26 = *(_QWORD *)(a1 + 20920);
    if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 20928) - v26) >> 4) <= v5)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 1042, (uint64_t)"info_index < allocated_voxel_block_infos_.size()", 48, (uint64_t)"Invalid map index", 17, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v26 = *(_QWORD *)(a1 + 20920);
    }
    v27 = v26 + 48 * v5;
    v31 = *((_BYTE *)a2 + 16);
    v30 = *a2;
    if (!v31)
      return *(unsigned int *)(v27 + 40);
  }
  v29 = sub_223340F28((_QWORD *)v27, (uint64_t)&v30);
  if (v29)
    return *((unsigned int *)v29 + 8);
  else
    return 0x80000000;
}

void sub_223950CAC()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223950CC0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC5D0B8;
  result[1] = v3;
  return result;
}

uint64_t sub_223950CF4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC5D0B8;
  a2[1] = v2;
  return result;
}

size_t sub_223950D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  size_t result;
  size_t v6;
  char *v7;
  char *v8;
  int8x16_t v9;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  float32x4_t v13;
  int8x16_t v14;
  float32x2_t v15;
  uint64_t v16;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float32x2_t v26;
  float32x2_t v27;
  int8x16_t v28;
  float32x2_t v29;
  float32x2_t v30;
  float32x4_t v31;
  float v32;
  int v33;
  int8x16_t v34;
  float32x4_t v35;
  float32x4_t v36;
  int32x4_t v37;
  float32x4_t v38;
  float32x2_t v39;
  float32x4_t v40;
  float32x4_t v41;
  uint64_t v42;
  uint64_t v43;
  float *v44;
  uint64_t v45;
  int v46;
  int v47;
  unsigned __int8 v49;
  uint64_t v50;
  __int32 v51;
  int v52;
  float v53;
  char v54;
  _QWORD v55[6];
  _QWORD v56[5];
  char v57;
  _BYTE v58[12];
  int v59;
  char v60;
  char v61;
  uint64_t v62;
  int v63;
  char v64;
  char v65;
  uint64_t v66;
  int v67;
  char v68;
  char v69;
  uint64_t v70;
  int v71;
  char v72;
  char v73;
  uint64_t v74;
  int v75;
  char v76;
  char v77;
  uint64_t v78;
  int v79;
  char v80;
  char v81;
  uint64_t v82;
  int v83;
  char v84;
  char v85;
  uint64_t v86;
  int v87;
  char v88;
  char v89;
  uint64_t v90;
  int v91;
  char v92;
  char v93;
  uint64_t v94;
  int v95;
  char v96;
  char v97;
  uint64_t v98;
  int v99;
  char v100;
  char v101;
  uint64_t v102;
  int v103;
  char v104;
  char v105;
  uint64_t v106;
  int v107;
  char v108;
  char v109;
  uint64_t v110;
  int v111;
  char v112;
  char v113;
  int v114;
  uint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  int v119;
  char v120;
  char v121;
  int v122;
  uint64_t v123;
  char v124;
  char v125;
  uint64_t v126;
  int v127;
  char v128;
  char v129;
  int v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  int v135;
  char v136;
  char v137;
  int v138;
  uint64_t v139;
  char v140;
  char v141;
  uint64_t v142;
  int v143;
  char v144;
  char v145;
  int v146;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t v150;
  int v151;
  char v152;
  char v153;
  int v154;
  uint64_t v155;
  char v156;
  char v157;
  uint64_t v158;
  int v159;
  char v160;
  char v161;
  int v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  unsigned __int8 *v166;
  _QWORD v167[4];
  _QWORD v168[2];
  char v169;
  _QWORD v170[2];
  _QWORD v171[3];
  _BYTE v172[24];
  uint64_t v173;

  v173 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a2 + 8)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/OccupancyMapper/include/Reconstruction/OccupancyMapper/OccupancyProvider.h", 88, (uint64_t)"granularity_hint == OccupancyGranularity::Coarse", 48, (uint64_t)"Only coarse granularity volume queries are supported.", 53, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  if (result)
  {
    v6 = result;
    if ((result & 0x8000000000000000) != 0)
      sub_22316E078();
    v7 = (char *)operator new(result);
    *a3 = v7;
    v8 = &v7[v6];
    a3[2] = &v7[v6];
    bzero(v7, v6);
    v16 = 0;
    a3[1] = v8;
    __asm { FMOV            V9.2S, #-1.0 }
    do
    {
      v22 = *(_DWORD *)(a2 + 60) * v16;
      v23 = *(_QWORD *)(a2 + 32);
      v24 = v23 + 4 * v22;
      v9.i32[0] = *(_DWORD *)(v23 + 4 * (v22 + 1));
      v10.i32[0] = *(_DWORD *)(v23 + 4 * (v22 + 2));
      v25 = *(_QWORD *)(a1 + 8);
      v12.i64[0] = *(_QWORD *)(v25 + 40148);
      v12.i32[2] = *(_DWORD *)(v25 + 40156);
      v11.i32[0] = *(_DWORD *)v24;
      v13.i64[0] = *(_QWORD *)(v25 + 40164);
      v13.i32[2] = *(_DWORD *)(v25 + 40172);
      v26 = *(float32x2_t *)(v25 + 40180);
      v27 = (float32x2_t)vzip1q_s32((int32x4_t)v12, (int32x4_t)v13).u64[0];
      v14.i64[0] = *(_QWORD *)(v25 + 40196);
      v14.i32[2] = *(_DWORD *)(v25 + 40204);
      v28 = (int8x16_t)vnegq_f32((float32x4_t)v14);
      v29 = vmul_n_f32(v27, *(float *)v28.i32);
      v30 = vmul_f32(v27, 0);
      *(float32x2_t *)v31.f32 = v27;
      v33 = *(_DWORD *)(v24 + 12);
      v32 = *(float *)(v24 + 16);
      v34 = (int8x16_t)vtrn2q_s32((int32x4_t)v12, (int32x4_t)v13);
      v34.i32[2] = v26.i32[1];
      v15.i32[0] = *(_DWORD *)(v25 + 40188);
      v12 = (float32x4_t)vzip2q_s32((int32x4_t)v12, (int32x4_t)v13);
      *(float32x2_t *)v35.f32 = vmls_laneq_f32(vmls_lane_f32(v29, *(float32x2_t *)v34.i8, *(float32x2_t *)v14.i8, 1), *(float32x2_t *)v12.f32, (float32x4_t)v14, 2);
      v12.i32[2] = v15.i32[0];
      v35.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(v26, *(float32x2_t *)v28.i8), (float32x2_t)vdup_lane_s32((int32x2_t)v26, 1), *(float32x2_t *)v14.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v28, v28, 8uLL), v15).u32[0]);
      v31.i64[1] = v26.u32[0];
      v28.i32[3] = 0;
      v28.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v34, 0).i32[3];
      *(uint64_t *)((char *)v28.i64 + 4) = vextq_s8(v34, v9, 4uLL).u64[0];
      v12.i64[1] = vdupq_laneq_s32((int32x4_t)v12, 2).u32[0];
      v36 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, COERCE_FLOAT(*(_OWORD *)(v25 + 40212))), (float32x4_t)v28, *(float32x2_t *)(v25 + 40212), 1), v12, *(float32x4_t *)(v25 + 40212), 2), v35, *(float32x4_t *)(v25 + 40212), 3);
      v37 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, COERCE_FLOAT(*(_OWORD *)(v25 + 40228))), (float32x4_t)v28, *(float32x2_t *)(v25 + 40228), 1), v12, *(float32x4_t *)(v25 + 40228), 2), v35, *(float32x4_t *)(v25 + 40228), 3);
      v14 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, COERCE_FLOAT(*(_OWORD *)(v25 + 40244))), (float32x4_t)v28, *(float32x2_t *)(v25 + 40244), 1), v12, *(float32x4_t *)(v25 + 40244), 2), v35, *(float32x4_t *)(v25 + 40244), 3);
      v38 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v31, COERCE_FLOAT(*(_OWORD *)(v25 + 40260))), (float32x4_t)v28, *(float32x2_t *)(v25 + 40260), 1), v12, *(float32x4_t *)(v25 + 40260), 2), v35, *(float32x4_t *)(v25 + 40260), 3);
      v35.i64[0] = vtrn2q_s32((int32x4_t)v36, v37).u64[0];
      v34.i64[0] = vzip2q_s32((int32x4_t)v36, v37).u64[0];
      *(int32x2_t *)v37.i8 = vzip1_s32(*(int32x2_t *)v36.f32, *(int32x2_t *)v37.i8);
      *(float32x2_t *)v36.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v37.i8, COERCE_FLOAT(v38.i32[0] ^ 0x80000000)), *(float32x2_t *)v35.f32, (float32x2_t)(v38.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v34.i8, COERCE_FLOAT(v38.i32[2] ^ 0x80000000));
      v39 = (float32x2_t)vextq_s8(v14, v14, 8uLL).u64[0];
      *(float32x2_t *)&v36.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v14.i8, (float32x2_t)(v38.i64[0] ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v38.i64[0] ^ 0x8000000080000000), 1), *(float32x2_t *)v14.i8, 1), (float32x2_t)(v38.i64[1] ^ 0xFFFFFFFF80000000), v39);
      *(float32x2_t *)v13.f32 = vmla_n_f32(vmla_n_f32(vmul_n_f32(*(float32x2_t *)v37.i8, *(float *)v24), (float32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)vdupq_lane_s32(*(int32x2_t *)v35.f32, 0), (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v35.f32, 1), 0xCuLL), *(float *)v9.i32), *(float32x2_t *)v34.i8, v10.f32[0]);
      *(float32x2_t *)v11.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v14.i8, *(float32x2_t *)v11.f32), *(float32x2_t *)v9.i8, *(float32x2_t *)v14.i8, 1), *(float32x2_t *)v10.f32, v39);
      v13.i64[1] = v11.i64[0];
      v9 = (int8x16_t)vaddq_f32(v13, v36);
      *(float32x2_t *)v40.f32 = vmla_f32(vmla_f32(v30, 0, *(float32x2_t *)v28.i8), _D9, *(float32x2_t *)v12.f32);
      *(float32x2_t *)&v40.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(v26, 0), 0, v26, 1), _D9, v15);
      v10 = vnegq_f32(v40);
      *(_DWORD *)&v58[8] = v10.i32[2];
      *(_QWORD *)v58 = v10.i64[0];
      v41 = vabsq_f32(v40);
      v11.i32[0] = v41.i32[1];
      v42 = v41.f32[1] > v41.f32[0];
      if (v41.f32[1] <= v41.f32[0])
        v11.f32[0] = v41.f32[0];
      v41.i32[0] = v41.i32[2];
      if (v11.f32[0] < v41.f32[2])
        v42 = 2;
      if (v42)
      {
        if (v42 == 1)
        {
          v51 = v9.i32[2];
          v10.i32[0] = v10.i32[1];
          v50 = v9.i64[0];
          v52 = v33;
          v53 = v32;
          v43 = 1;
          if (v10.f32[1] < 0.0)
            goto LABEL_19;
        }
        else
        {
          v51 = v9.i32[2];
          v10.i32[0] = *(_DWORD *)((unint64_t)v58 | (4 * v42));
          v50 = v9.i64[0];
          v52 = v33;
          v53 = v32;
          v43 = 2;
          if (v10.f32[0] < 0.0)
            goto LABEL_19;
        }
      }
      else
      {
        v51 = v9.i32[2];
        v50 = v9.i64[0];
        v52 = v33;
        v53 = v32;
        if (v10.f32[0] < 0.0)
        {
          v43 = 0;
LABEL_19:
          v54 = v43;
          v44 = (float *)((unint64_t)&v50 | (4 * v43));
          *(float *)v9.i32 = *v44 - v32;
          *v44 = *(float *)v9.i32;
          if (*(_BYTE *)(v25 + 297))
            goto LABEL_23;
          goto LABEL_6;
        }
        LOBYTE(v43) = 0;
      }
      v54 = v43;
      if (*(_BYTE *)(v25 + 297))
      {
LABEL_23:
        v45 = *(_QWORD *)(v25 + 40784);
        if (v45)
        {
          v49 = 0;
          v172[0] = 0;
          v172[16] = 0;
          v166 = &v49;
          v165 = 0;
          v58[0] = 1;
          v9.i32[1] = -1;
          v9.i64[1] = -1;
          *(_QWORD *)&v58[4] = -1;
          v59 = -1;
          v60 = 8;
          v61 = 1;
          v62 = -1;
          v63 = -1;
          v64 = 8;
          v65 = 1;
          v66 = -1;
          v67 = -1;
          v68 = 8;
          v69 = 1;
          v70 = -1;
          v71 = -1;
          v72 = 8;
          v73 = 1;
          v74 = -1;
          v75 = -1;
          v76 = 8;
          v77 = 1;
          v78 = -1;
          v79 = -1;
          v80 = 8;
          v81 = 1;
          v82 = -1;
          v83 = -1;
          v84 = 8;
          v85 = 1;
          v86 = -1;
          v87 = -1;
          v88 = 8;
          v89 = 1;
          v90 = -1;
          v91 = -1;
          v92 = 8;
          v93 = 1;
          v94 = -1;
          v95 = -1;
          v96 = 8;
          v97 = 1;
          v98 = -1;
          v99 = -1;
          v100 = 8;
          v101 = 1;
          v102 = -1;
          v103 = -1;
          v104 = 8;
          v105 = 1;
          v106 = -1;
          v107 = -1;
          v108 = 8;
          v109 = 1;
          v110 = -1;
          v111 = -1;
          v112 = 8;
          v113 = 1;
          v114 = -1;
          v115 = -1;
          v116 = 8;
          v117 = 1;
          v118 = -1;
          v119 = -1;
          v120 = 8;
          v121 = 1;
          v122 = -1;
          v123 = -1;
          v124 = 8;
          v125 = 1;
          v126 = -1;
          v127 = -1;
          v128 = 8;
          v129 = 1;
          v130 = -1;
          v131 = -1;
          v132 = 8;
          v133 = 1;
          v134 = -1;
          v135 = -1;
          v136 = 8;
          v137 = 1;
          v138 = -1;
          v139 = -1;
          v140 = 8;
          v141 = 1;
          v142 = -1;
          v143 = -1;
          v144 = 8;
          v145 = 1;
          v146 = -1;
          v147 = -1;
          v148 = 8;
          v149 = 1;
          v150 = -1;
          v151 = -1;
          v152 = 8;
          v153 = 1;
          v154 = -1;
          v155 = -1;
          v156 = 8;
          v157 = 1;
          v158 = -1;
          v159 = -1;
          v160 = 8;
          v161 = 1;
          v162 = -1;
          v163 = -1;
          v164 = 8;
          v56[0] = v45 + 184;
          v56[1] = v172;
          v56[2] = &v165;
          v56[3] = v58;
          v56[4] = &v57;
          v55[0] = &v165;
          v55[1] = v45 + 184;
          v55[2] = v172;
          v55[3] = v58;
          v55[4] = &v57;
          v55[5] = &v166;
          v168[0] = v45 + 184;
          v168[1] = &v50;
          v167[0] = v56;
          v167[1] = v55;
          v167[2] = v45 + 184;
          v167[3] = v168;
          v170[0] = v45 + 184;
          v170[1] = &v50;
          v169 = 1;
          v46 = *(_DWORD *)(v45 + 360);
          if ((v46 & 0x80000000) == 0)
          {
            v57 = 0;
            v47 = *(_DWORD *)(v45 + 364);
            v171[0] = v170;
            v171[1] = v167;
            v171[2] = &v169;
            sub_223951418(v45 + 184, v47, v46, 0, (uint64_t)v171, NAN, *(double *)v10.i64, v41, v11, *(double *)v12.i64, v13);
          }
          result = v49;
        }
        else
        {
          result = 2;
        }
        goto LABEL_7;
      }
LABEL_6:
      result = sub_223CFEDD4(v25 + 304, (uint64_t)&v50, *(double *)v9.i64, *(double *)v10.i64, v41, v11, *(double *)v12.i64, v13);
LABEL_7:
      *(_BYTE *)(*a3 + v16++) = result;
    }
    while (v6 != v16);
  }
  return result;
}

void sub_223951380(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2239513A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZN"
                     "S3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_1"
                     "8IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_37OccupancyQueryVerticalCylinderRequestEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProvid"
                                "erEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt"
                                "3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_3"
                                "7OccupancyQueryVerticalCylinderRequestEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_37OccupancyQueryVerticalCylinderRequestEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_37OccupancyQueryVerticalCylinderRequestEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_22395140C()
{
  return &unk_24EC5D128;
}

uint64_t sub_223951418(uint64_t a1, int a2, int a3, char a4, uint64_t a5, double a6, double a7, float32x4_t a8, float32x4_t a9, double a10, float32x4_t a11)
{
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  double v19;
  double v20;
  float32x4_t v21;
  float32x4_t v22;
  double v23;
  float32x4_t v24;
  int v25;
  uint64_t v26;
  double v27;
  float32x4_t v28;
  float32x4_t v29;
  double v30;
  float32x4_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  double v42;
  float32x4_t v43;
  float32x4_t v44;
  double v45;
  float32x4_t v46;
  unsigned int v47;
  double v48;
  float32x4_t v49;
  float32x4_t v50;
  double v51;
  float32x4_t v52;
  unsigned int v53;
  double v54;
  float32x4_t v55;
  float32x4_t v56;
  double v57;
  float32x4_t v58;
  unsigned int v59;
  double v60;
  float32x4_t v61;
  float32x4_t v62;
  double v63;
  float32x4_t v64;
  unsigned int v65;
  double v66;
  float32x4_t v67;
  float32x4_t v68;
  double v69;
  float32x4_t v70;
  unsigned int v71;
  double v72;
  float32x4_t v73;
  float32x4_t v74;
  double v75;
  float32x4_t v76;
  unsigned int v77;
  unsigned int v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _BYTE v83[12];
  int v84;
  unsigned int v85;
  unsigned int v86;
  uint64_t v87;
  int v88;
  char v89;
  char v90;
  uint64_t v91;
  int v92;
  char v93;
  char v94;
  uint64_t v95;
  int v96;
  char v97;
  char v98;
  uint64_t v99;
  int v100;
  char v101;
  char v102;
  uint64_t v103;
  int v104;
  char v105;
  char v106;
  uint64_t v107;
  int v108;
  char v109;
  char v110;
  uint64_t v111;
  int v112;
  char v113;
  char v114;
  uint64_t v115;
  int v116;
  char v117;
  char v118;
  uint64_t v119;
  int v120;
  char v121;
  char v122;
  uint64_t v123;
  int v124;
  char v125;
  char v126;
  uint64_t v127;
  int v128;
  char v129;
  char v130;
  uint64_t v131;
  int v132;
  char v133;
  char v134;
  uint64_t v135;
  int v136;
  char v137;
  char v138;
  int v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  int v144;
  char v145;
  char v146;
  int v147;
  uint64_t v148;
  char v149;
  char v150;
  uint64_t v151;
  int v152;
  char v153;
  char v154;
  int v155;
  uint64_t v156;
  char v157;
  char v158;
  uint64_t v159;
  int v160;
  char v161;
  char v162;
  int v163;
  uint64_t v164;
  char v165;
  char v166;
  uint64_t v167;
  int v168;
  char v169;
  char v170;
  int v171;
  uint64_t v172;
  char v173;
  char v174;
  uint64_t v175;
  int v176;
  char v177;
  char v178;
  int v179;
  uint64_t v180;
  char v181;
  char v182;
  uint64_t v183;
  int v184;
  char v185;
  char v186;
  int v187;
  uint64_t v188;
  char v189;
  _BYTE v190[12];
  uint64_t v191;
  int v192;

  v14 = a3 & 0xCFFFFFFF;
  v15 = *(_QWORD *)(a1 + 184) + 4488 * (a3 & 0xCFFFFFFF);
  v16 = *(_QWORD *)v15;
  *(_DWORD *)&v190[8] = *(_DWORD *)(v15 + 8);
  *(_QWORD *)v190 = v16;
  v17 = *(_QWORD *)(v15 + 12);
  v192 = *(_DWORD *)(v15 + 20);
  v191 = v17;
  v83[0] = 1;
  *(_QWORD *)&v83[4] = -1;
  v84 = -1;
  LOBYTE(v85) = 8;
  LOBYTE(v86) = 1;
  v87 = -1;
  v88 = -1;
  v89 = 8;
  v90 = 1;
  v91 = -1;
  v92 = -1;
  v93 = 8;
  v94 = 1;
  v95 = -1;
  v96 = -1;
  v97 = 8;
  v98 = 1;
  v99 = -1;
  v100 = -1;
  v101 = 8;
  v102 = 1;
  v103 = -1;
  v104 = -1;
  v105 = 8;
  v106 = 1;
  v107 = -1;
  v108 = -1;
  v109 = 8;
  v110 = 1;
  v111 = -1;
  v112 = -1;
  v113 = 8;
  v114 = 1;
  v115 = -1;
  v116 = -1;
  v117 = 8;
  v118 = 1;
  v119 = -1;
  v120 = -1;
  v121 = 8;
  v122 = 1;
  v123 = -1;
  v124 = -1;
  v125 = 8;
  v126 = 1;
  v127 = -1;
  v128 = -1;
  v129 = 8;
  v130 = 1;
  v131 = -1;
  v132 = -1;
  v133 = 8;
  v134 = 1;
  v135 = -1;
  v136 = -1;
  v137 = 8;
  v138 = 1;
  v139 = -1;
  v140 = -1;
  v141 = 8;
  v142 = 1;
  v143 = -1;
  v144 = -1;
  v145 = 8;
  v146 = 1;
  v147 = -1;
  v148 = -1;
  v149 = 8;
  v150 = 1;
  v151 = -1;
  v152 = -1;
  v153 = 8;
  v154 = 1;
  v155 = -1;
  v156 = -1;
  v157 = 8;
  v158 = 1;
  v159 = -1;
  v160 = -1;
  v161 = 8;
  v162 = 1;
  v163 = -1;
  v164 = -1;
  v165 = 8;
  v166 = 1;
  v167 = -1;
  v168 = -1;
  v169 = 8;
  v170 = 1;
  v171 = -1;
  v172 = -1;
  v173 = 8;
  v174 = 1;
  v175 = -1;
  v176 = -1;
  v177 = 8;
  v178 = 1;
  v179 = -1;
  v180 = -1;
  v181 = 8;
  v182 = 1;
  v183 = -1;
  v184 = -1;
  v185 = 8;
  v186 = 1;
  v187 = -1;
  v188 = -1;
  v189 = 8;
  result = sub_223951C94(a5, a4, a2, 0, (int32x2_t *)v190, v83, NAN, a7, a8, a9, a10, a11);
  if ((_DWORD)result)
  {
    v25 = result;
    result = 1;
    if (a2)
    {
      if (v25 != 3)
      {
        v26 = (a2 - 1);
        if (!(_DWORD)v26)
        {
          v32 = 0;
          while (1)
          {
            v34 = byte_2246559E2[v32];
            v35 = *(_QWORD *)(a1 + 184);
            v36 = *(_DWORD *)(v35 + 4488 * v14 + 4 * v34 + 24);
            v37 = (v34 >> 2) & 1;
            v38 = (v34 >> 1) & 1;
            v39 = v34 & 1;
            if ((v36 & 0x80000000) != 0)
            {
              v33 = (v191 - *(_DWORD *)v190) >> 1;
              *(_DWORD *)v83 = *(_DWORD *)v190 + v33 * v37;
              *(_DWORD *)&v83[4] = *(_DWORD *)&v190[4] + v33 * v38;
              *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8] + v33 * v39;
              v84 = *(_DWORD *)v83 + v33;
              v85 = *(_DWORD *)&v83[4] + v33;
              v86 = *(_DWORD *)&v83[8] + v33;
              v81 = *(_OWORD *)a5;
              v82 = *(_QWORD *)(a5 + 16);
              result = sub_223952704(0, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v20, v21, v22, v23, v24);
              if (!(_DWORD)result)
                return result;
            }
            else
            {
              v40 = (v191 - *(_DWORD *)v190) >> 1;
              *(_DWORD *)v83 = *(_DWORD *)v190 + v40 * v37;
              *(_DWORD *)&v83[4] = *(_DWORD *)&v190[4] + v40 * v38;
              *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8] + v40 * v39;
              v84 = *(_DWORD *)v83 + v40;
              v85 = *(_DWORD *)&v83[4] + v40;
              v86 = *(_DWORD *)&v83[8] + v40;
              result = sub_223951C94(a5, v25 == 2, 0, v36, (int32x2_t *)v83, (const void *)(v35 + 4488 * v14 + 540 * v34 + 68), v19, v20, v21, v22, v23, v24);
              if (!(_DWORD)result)
                return result;
            }
            if (++v32 == 8)
              return 1;
          }
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 24) & 0x80000000) != 0)
        {
          v41 = (v191 - *(_DWORD *)v190) >> 1;
          *(_QWORD *)v83 = *(_QWORD *)v190;
          *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8];
          v84 = v41 + *(_DWORD *)v190;
          v85 = *(_DWORD *)&v190[4] + v41;
          v86 = *(_DWORD *)&v190[8] + v41;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          if ((sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v20, v21, v22, v23, v24) & 1) == 0)
            return 0;
        }
        else
        {
          v79 = *(_OWORD *)a5;
          v80 = *(_QWORD *)(a5 + 16);
          result = sub_223951418(a1, v26);
          if (!(_DWORD)result)
            return result;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 28) & 0x80000000) != 0)
        {
          v47 = (v191 - *(_DWORD *)v190) >> 1;
          *(_QWORD *)v83 = *(_QWORD *)v190;
          *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8] + v47;
          v84 = v47 + *(_DWORD *)v190;
          v85 = *(_DWORD *)&v190[4] + v47;
          v86 = *(_DWORD *)&v190[8] + v47 + v47;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v27, v28, v29, v30, v31);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v79 = *(_OWORD *)a5;
          v80 = *(_QWORD *)(a5 + 16);
          if ((sub_223951418(a1, v26) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 32) & 0x80000000) != 0)
        {
          v53 = (v191 - *(_DWORD *)v190) >> 1;
          *(_DWORD *)v83 = *(_DWORD *)v190;
          *(_DWORD *)&v83[4] = v53 + *(_DWORD *)&v190[4];
          *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8];
          v84 = v53 + *(_DWORD *)v190;
          v85 = v53 + *(_DWORD *)&v190[4] + v53;
          v86 = *(_DWORD *)&v190[8] + v53;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v42, v43, v44, v45, v46);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v79 = *(_OWORD *)a5;
          v80 = *(_QWORD *)(a5 + 16);
          if ((sub_223951418(a1, v26) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 36) & 0x80000000) != 0)
        {
          v59 = (v191 - *(_DWORD *)v190) >> 1;
          *(_DWORD *)v83 = *(_DWORD *)v190;
          *(_DWORD *)&v83[4] = v59 + *(_DWORD *)&v190[4];
          *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8] + v59;
          v84 = v59 + *(_DWORD *)v190;
          v85 = v59 + *(_DWORD *)&v190[4] + v59;
          v86 = *(_DWORD *)&v190[8] + v59 + v59;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v48, v49, v50, v51, v52);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v79 = *(_OWORD *)a5;
          v80 = *(_QWORD *)(a5 + 16);
          if ((sub_223951418(a1, v26) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 40) & 0x80000000) != 0)
        {
          v65 = (v191 - *(_DWORD *)v190) >> 1;
          *(_DWORD *)v83 = v65 + *(_DWORD *)v190;
          *(_QWORD *)&v83[4] = *(_QWORD *)&v190[4];
          v84 = v65 + *(_DWORD *)v190 + v65;
          v85 = *(_DWORD *)&v190[4] + v65;
          v86 = *(_DWORD *)&v190[8] + v65;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v54, v55, v56, v57, v58);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v79 = *(_OWORD *)a5;
          v80 = *(_QWORD *)(a5 + 16);
          if ((sub_223951418(a1, v26) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 44) & 0x80000000) != 0)
        {
          v71 = (v191 - *(_DWORD *)v190) >> 1;
          *(_DWORD *)v83 = v71 + *(_DWORD *)v190;
          *(_DWORD *)&v83[4] = *(_DWORD *)&v190[4];
          *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8] + v71;
          v84 = v71 + *(_DWORD *)v190 + v71;
          v85 = *(_DWORD *)&v190[4] + v71;
          v86 = *(_DWORD *)&v190[8] + v71 + v71;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v60, v61, v62, v63, v64);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v79 = *(_OWORD *)a5;
          v80 = *(_QWORD *)(a5 + 16);
          if ((sub_223951418(a1, v26) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 48) & 0x80000000) != 0)
        {
          v77 = (v191 - *(_DWORD *)v190) >> 1;
          *(_DWORD *)v83 = v77 + *(_DWORD *)v190;
          *(_DWORD *)&v83[4] = v77 + *(_DWORD *)&v190[4];
          *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8];
          v84 = v77 + *(_DWORD *)v190 + v77;
          v85 = v77 + *(_DWORD *)&v190[4] + v77;
          v86 = *(_DWORD *)&v190[8] + v77;
          v81 = *(_OWORD *)a5;
          v82 = *(_QWORD *)(a5 + 16);
          result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v66, v67, v68, v69, v70);
          if (!(_DWORD)result)
            return result;
LABEL_39:
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v14 + 52) & 0x80000000) != 0)
          {
            v78 = (v191 - *(_DWORD *)v190) >> 1;
            *(_DWORD *)v83 = v78 + *(_DWORD *)v190;
            *(_DWORD *)&v83[4] = v78 + *(_DWORD *)&v190[4];
            *(_DWORD *)&v83[8] = *(_DWORD *)&v190[8] + v78;
            v84 = v78 + *(_DWORD *)v190 + v78;
            v85 = v78 + *(_DWORD *)&v190[4] + v78;
            v86 = *(_DWORD *)&v190[8] + v78 + v78;
            v81 = *(_OWORD *)a5;
            v82 = *(_QWORD *)(a5 + 16);
            result = sub_223952704(v26, (int32x2_t *)v83, v25 == 2, (uint64_t)&v81, *(double *)&v81, v72, v73, v74, v75, v76);
            if (!(_DWORD)result)
              return result;
          }
          else
          {
            v79 = *(_OWORD *)a5;
            v80 = *(_QWORD *)(a5 + 16);
            if ((sub_223951418(a1, v26) & 1) == 0)
              return 0;
          }
          return 1;
        }
        v79 = *(_OWORD *)a5;
        v80 = *(_QWORD *)(a5 + 16);
        if ((sub_223951418(a1, v26) & 1) != 0)
          goto LABEL_39;
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_223951C94(uint64_t a1, char a2, int a3, unsigned int a4, int32x2_t *a5, const void *a6, double a7, double a8, float32x4_t a9, float32x4_t a10, double a11, float32x4_t a12)
{
  int v17;
  uint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 *v27;
  __int128 v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 *v33;
  __int128 v34;
  float32x4_t v35;
  float32x4_t v36;
  double v37;
  float32x4_t v38;
  _BYTE *v39;
  _BYTE **v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  int v46;
  _BYTE v47[32];
  __int128 v48;
  _BYTE v49[20];
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v17 = 2;
  v46 = 2;
  if ((a2 & 1) == 0)
  {
    v18 = *(_QWORD *)(*(_QWORD *)a1 + 8);
    LODWORD(a7) = *(_DWORD *)(**(_QWORD **)a1 + 128);
    *(float32x2_t *)a9.f32 = vcvt_f32_s32(*a5);
    a10.f32[0] = (float)a5[1].i32[0];
    a9.f32[2] = a10.f32[0];
    v19 = vmulq_n_f32(a9, *(float *)&a7);
    *(float *)&a7 = *(float *)&a7 * (float)(int)(a5[1].i32[1] - *(_QWORD *)a5);
    *(_DWORD *)&v47[8] = v19.i32[2];
    *(_QWORD *)v47 = v19.i64[0];
    v20 = vaddq_f32(v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a7, 0));
    *(_DWORD *)&v47[20] = v20.i32[2];
    *(_QWORD *)&v47[12] = v20.i64[0];
    if (*(_BYTE *)(v18 + 20) == 1)
      v17 = sub_223E998FC((float *)v47, (float *)v18, *(float *)(v18 + 12), *(float *)(v18 + 16), v19, *(double *)a10.i64, a11, a12);
    else
      v17 = *(_BYTE *)(v18 + 20)
          ? sub_223E99B90((float *)v47, (float *)v18, *(float *)(v18 + 12), *(float *)(v18 + 16), v19, a10)
          : sub_223E99668((float *)v47, (float *)v18, *(float *)(v18 + 12), *(float *)(v18 + 16), v19, a10);
    v46 = v17;
    if (!v17)
      return 3;
  }
  if (!a3)
  {
    v22 = *(_QWORD *)(a1 + 8);
    v23 = *(_QWORD **)v22;
    v24 = **(_QWORD ***)v22;
    if ((a4 & 0x80000000) != 0)
    {
      v26 = v24 + 2609;
      v33 = (__int128 *)v23[1];
      v34 = *v33;
      LODWORD(v33) = *((unsigned __int8 *)v33 + 16);
      v49[16] = (_BYTE)v33;
      *(_OWORD *)v49 = v34;
      if ((_DWORD)v33)
        goto LABEL_18;
    }
    else
    {
      v25 = v24[2615];
      if (0xAAAAAAAAAAAAAAABLL * ((v24[2616] - v25) >> 4) <= a4)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 1042, (uint64_t)"info_index < allocated_voxel_block_infos_.size()", 48, (uint64_t)"Invalid map index", 17, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v25 = v24[2615];
      }
      v26 = (_QWORD *)(v25 + 48 * a4);
      v27 = (__int128 *)v23[1];
      v28 = *v27;
      LODWORD(v27) = *((unsigned __int8 *)v27 + 16);
      v49[16] = (_BYTE)v27;
      *(_OWORD *)v49 = v28;
      if ((_DWORD)v27)
      {
LABEL_18:
        v29 = sub_223340F28(v26, (uint64_t)v49);
        if (v29)
        {
          v30 = *((unsigned int *)v29 + 8);
          if ((v30 & 0x80000000) == 0)
            goto LABEL_20;
        }
        goto LABEL_26;
      }
    }
    v30 = *((unsigned int *)v26 + 10);
    if ((v30 & 0x80000000) == 0)
    {
LABEL_20:
      v31 = v24[2600];
      if (0xCCCCCCCCCCCCCCCDLL * ((v24[2601] - v31) >> 12) <= v30)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 205, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v31 = v24[2600];
      }
      v32 = (char *)(v31 + 20480 * v30);
LABEL_27:
      *(_QWORD *)v23[2] = v32;
      memcpy((void *)v23[3], a6, 0x21CuLL);
      *(_BYTE *)v23[4] = (a4 & 0x80000000) == 0;
      if (v46 == 2)
      {
        *(_QWORD *)v49 = *(_QWORD *)(v22 + 8);
        *(_QWORD *)&v49[8] = &v46;
        v39 = ***(_BYTE ****)v49;
        v40 = *(_BYTE ***)(*(_QWORD *)v49 + 40);
        if (((char)v39[6] & 0x80000000) == 0)
        {
          if (!v39[6])
            **v40 = 1;
          if (((char)v39[46] & 0x80000000) == 0)
          {
            if (!v39[46])
              **v40 = 1;
            if (((char)v39[86] & 0x80000000) == 0)
            {
              if (!v39[86])
                **v40 = 1;
              if (((char)v39[126] & 0x80000000) == 0)
              {
                if (!v39[126])
                  **v40 = 1;
                if (((char)v39[166] & 0x80000000) == 0)
                {
                  if (!v39[166])
                    **v40 = 1;
                  if (((char)v39[206] & 0x80000000) == 0)
                  {
                    if (!v39[206])
                      **v40 = 1;
                    if (((char)v39[246] & 0x80000000) == 0)
                    {
                      if (!v39[246])
                        **v40 = 1;
                      if (((char)v39[286] & 0x80000000) == 0)
                      {
                        if (!v39[286])
                          **v40 = 1;
                        if (((char)v39[326] & 0x80000000) == 0)
                        {
                          if (!v39[326])
                            **v40 = 1;
                          if (((char)v39[366] & 0x80000000) == 0)
                          {
                            if (!v39[366])
                              **v40 = 1;
                            if (((char)v39[406] & 0x80000000) == 0)
                            {
                              if (!v39[406])
                                **v40 = 1;
                              if (((char)v39[446] & 0x80000000) == 0)
                              {
                                if (!v39[446])
                                  **v40 = 1;
                                if (((char)v39[486] & 0x80000000) == 0)
                                {
                                  if (!v39[486])
                                    **v40 = 1;
                                  if (((char)v39[526] & 0x80000000) == 0)
                                  {
                                    if (!v39[526])
                                      **v40 = 1;
                                    if (((char)v39[566] & 0x80000000) == 0)
                                    {
                                      if (!v39[566])
                                        **v40 = 1;
                                      if (((char)v39[606] & 0x80000000) == 0)
                                      {
                                        if (!v39[606])
                                          **v40 = 1;
                                        if (((char)v39[646] & 0x80000000) == 0)
                                        {
                                          if (!v39[646])
                                            **v40 = 1;
                                          if (((char)v39[686] & 0x80000000) == 0)
                                          {
                                            if (!v39[686])
                                              **v40 = 1;
                                            if (((char)v39[726] & 0x80000000) == 0)
                                            {
                                              if (!v39[726])
                                                **v40 = 1;
                                              if (((char)v39[766] & 0x80000000) == 0)
                                              {
                                                if (!v39[766])
                                                  **v40 = 1;
                                                if (((char)v39[806] & 0x80000000) == 0)
                                                {
                                                  if (!v39[806])
                                                    **v40 = 1;
                                                  if (((char)v39[846] & 0x80000000) == 0)
                                                  {
                                                    if (!v39[846])
                                                      **v40 = 1;
                                                    if (((char)v39[886] & 0x80000000) == 0)
                                                    {
                                                      if (!v39[886])
                                                        **v40 = 1;
                                                      if (((char)v39[926] & 0x80000000) == 0)
                                                      {
                                                        if (!v39[926])
                                                          **v40 = 1;
                                                        if (((char)v39[966] & 0x80000000) == 0)
                                                        {
                                                          if (!v39[966])
                                                            **v40 = 1;
                                                          if (((char)v39[1006] & 0x80000000) == 0)
                                                          {
                                                            if (!v39[1006])
                                                              **v40 = 1;
                                                            if (((char)v39[1046] & 0x80000000) == 0)
                                                            {
                                                              if (!v39[1046])
                                                                **v40 = 1;
                                                              if (((char)v39[1086] & 0x80000000) == 0)
                                                              {
                                                                if (!v39[1086])
                                                                  **v40 = 1;
                                                                if (((char)v39[1126] & 0x80000000) == 0)
                                                                {
                                                                  if (!v39[1126])
                                                                    **v40 = 1;
                                                                  if (((char)v39[1166] & 0x80000000) == 0)
                                                                  {
                                                                    if (!v39[1166])
                                                                      **v40 = 1;
                                                                    if (((char)v39[1206] & 0x80000000) == 0)
                                                                    {
                                                                      if (!v39[1206])
                                                                        **v40 = 1;
                                                                      if (((char)v39[1246] & 0x80000000) == 0)
                                                                      {
                                                                        if (!v39[1246])
                                                                          **v40 = 1;
                                                                        if (((char)v39[1286] & 0x80000000) == 0)
                                                                        {
                                                                          if (!v39[1286])
                                                                            **v40 = 1;
                                                                          if (((char)v39[1326] & 0x80000000) == 0)
                                                                          {
                                                                            if (!v39[1326])
                                                                              **v40 = 1;
                                                                            if (((char)v39[1366] & 0x80000000) == 0)
                                                                            {
                                                                              if (!v39[1366])
                                                                                **v40 = 1;
                                                                              if (((char)v39[1406] & 0x80000000) == 0)
                                                                              {
                                                                                if (!v39[1406])
                                                                                  **v40 = 1;
                                                                                if (((char)v39[1446] & 0x80000000) == 0)
                                                                                {
                                                                                  if (!v39[1446])
                                                                                    **v40 = 1;
                                                                                  if (((char)v39[1486] & 0x80000000) == 0)
                                                                                  {
                                                                                    if (!v39[1486])
                                                                                      **v40 = 1;
                                                                                    if (((char)v39[1526] & 0x80000000) == 0)
                                                                                    {
                                                                                      if (!v39[1526])
                                                                                        **v40 = 1;
                                                                                      if (((char)v39[1566] & 0x80000000) == 0)
                                                                                      {
                                                                                        if (!v39[1566])
                                                                                          **v40 = 1;
                                                                                        if (((char)v39[1606] & 0x80000000) == 0)
                                                                                        {
                                                                                          if (!v39[1606])
                                                                                            **v40 = 1;
                                                                                          if (((char)v39[1646] & 0x80000000) == 0)
                                                                                          {
                                                                                            if (!v39[1646])
                                                                                              **v40 = 1;
                                                                                            if (((char)v39[1686] & 0x80000000) == 0)
                                                                                            {
                                                                                              if (!v39[1686])
                                                                                                **v40 = 1;
                                                                                              if (((char)v39[1726] & 0x80000000) == 0)
                                                                                              {
                                                                                                if (!v39[1726])
                                                                                                  **v40 = 1;
                                                                                                if (((char)v39[1766] & 0x80000000) == 0)
                                                                                                {
                                                                                                  if (!v39[1766])
                                                                                                    **v40 = 1;
                                                                                                  if (((char)v39[1806] & 0x80000000) == 0)
                                                                                                  {
                                                                                                    if (!v39[1806])
                                                                                                      **v40 = 1;
                                                                                                    if (((char)v39[1846] & 0x80000000) == 0)
                                                                                                    {
                                                                                                      if (!v39[1846])
                                                                                                        **v40 = 1;
                                                                                                      if (((char)v39[1886] & 0x80000000) == 0)
                                                                                                      {
                                                                                                        if (!v39[1886])
                                                                                                          **v40 = 1;
                                                                                                        if (((char)v39[1926] & 0x80000000) == 0)
                                                                                                        {
                                                                                                          if (!v39[1926])
                                                                                                            **v40 = 1;
                                                                                                          if (((char)v39[1966] & 0x80000000) == 0)
                                                                                                          {
                                                                                                            if (!v39[1966])
                                                                                                              **v40 = 1;
                                                                                                            if (((char)v39[2006] & 0x80000000) == 0)
                                                                                                            {
                                                                                                              if (!v39[2006])
                                                                                                                **v40 = 1;
                                                                                                              if (((char)v39[2046] & 0x80000000) == 0)
                                                                                                              {
                                                                                                                if (!v39[2046])
                                                                                                                  **v40 = 1;
                                                                                                                if (((char)v39[2086] & 0x80000000) == 0)
                                                                                                                {
                                                                                                                  if (!v39[2086])
                                                                                                                    **v40 = 1;
                                                                                                                  if (((char)v39[2126] & 0x80000000) == 0)
                                                                                                                  {
                                                                                                                    if (!v39[2126])
                                                                                                                      **v40 = 1;
                                                                                                                    if (((char)v39[2166] & 0x80000000) == 0)
                                                                                                                    {
                                                                                                                      if (!v39[2166])
                                                                                                                        **v40 = 1;
                                                                                                                      if (((char)v39[2206] & 0x80000000) == 0)
                                                                                                                      {
                                                                                                                        if (!v39[2206])
                                                                                                                          **v40 = 1;
                                                                                                                        if (((char)v39[2246] & 0x80000000) == 0)
                                                                                                                        {
                                                                                                                          if (!v39[2246])
                                                                                                                            **v40 = 1;
                                                                                                                          if (((char)v39[2286] & 0x80000000) == 0)
                                                                                                                          {
                                                                                                                            if (!v39[2286])
                                                                                                                              **v40 = 1;
                                                                                                                            if (((char)v39[2326] & 0x80000000) == 0)
                                                                                                                            {
                                                                                                                              if (!v39[2326])
                                                                                                                                **v40 = 1;
                                                                                                                              if (((char)v39[2366] & 0x80000000) == 0)
                                                                                                                              {
                                                                                                                                if (!v39[2366])
                                                                                                                                  **v40 = 1;
                                                                                                                                if (((char)v39[2406] & 0x80000000) == 0)
                                                                                                                                {
                                                                                                                                  if (!v39[2406])
                                                                                                                                    **v40 = 1;
                                                                                                                                  if (((char)v39[2446] & 0x80000000) == 0)
                                                                                                                                  {
                                                                                                                                    if (!v39[2446])
                                                                                                                                      **v40 = 1;
                                                                                                                                    if (((char)v39[2486] & 0x80000000) == 0)
                                                                                                                                    {
                                                                                                                                      if (!v39[2486])
                                                                                                                                        **v40 = 1;
                                                                                                                                      if (((char)v39[2526] & 0x80000000) == 0)
                                                                                                                                      {
                                                                                                                                        if (!v39[2526])
                                                                                                                                          **v40 = 1;
                                                                                                                                        if (((char)v39[2566] & 0x80000000) == 0)
                                                                                                                                        {
                                                                                                                                          if (!v39[2566])
                                                                                                                                            **v40 = 1;
                                                                                                                                          if (((char)v39[2606] & 0x80000000) == 0)
                                                                                                                                          {
                                                                                                                                            if (!v39[2606])
                                                                                                                                              **v40 = 1;
                                                                                                                                            if (((char)v39[2646] & 0x80000000) == 0)
                                                                                                                                            {
                                                                                                                                              if (!v39[2646])
                                                                                                                                                **v40 = 1;
                                                                                                                                              if (((char)v39[2686] & 0x80000000) == 0)
                                                                                                                                              {
                                                                                                                                                if (!v39[2686])
                                                                                                                                                  **v40 = 1;
                                                                                                                                                if (((char)v39[2726] & 0x80000000) == 0)
                                                                                                                                                {
                                                                                                                                                  if (!v39[2726])
                                                                                                                                                    **v40 = 1;
                                                                                                                                                  if (((char)v39[2766] & 0x80000000) == 0)
                                                                                                                                                  {
                                                                                                                                                    if (!v39[2766])
                                                                                                                                                      **v40 = 1;
                                                                                                                                                    if (((char)v39[2806] & 0x80000000) == 0)
                                                                                                                                                    {
                                                                                                                                                      if (!v39[2806])
                                                                                                                                                        **v40 = 1;
                                                                                                                                                      if (((char)v39[2846] & 0x80000000) == 0)
                                                                                                                                                      {
                                                                                                                                                        if (!v39[2846])
                                                                                                                                                          **v40 = 1;
                                                                                                                                                        v41 = (char)v39[2886];
                                                                                                                                                        if ((v41 & 0x80000000) == 0)
                                                                                                                                                        {
                                                                                                                                                          if (!v41)
                                                                                                                                                            **v40 = 1;
                                                                                                                                                          if ((sub_223953204((char ****)v49) & 1) == 0)
                                                                                                                                                            goto LABEL_253;
                                                                                                                                                          return 3;
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        **v40 = 2;
      }
      else
      {
        *(int32x2_t *)v49 = *a5;
        *(_DWORD *)&v49[8] = a5[1].i32[0];
        *(int32x2_t *)&v49[12] = vadd_s32(*a5, (int32x2_t)0x800000008);
        v50 = *(_DWORD *)&v49[8] + 8;
        v42 = *(uint64_t **)(v22 + 24);
        v43 = *v42;
        v44 = v42[1];
        v45 = *(_OWORD **)(v22 + 8);
        *(_OWORD *)v47 = *v45;
        *(_OWORD *)&v47[16] = v45[1];
        v48 = v45[2];
        if ((sub_223952C08((uint64_t)a5, 3, (uint64_t)v49, v43, v44, (uint64_t **)v47, *(double *)&v48, COERCE_DOUBLE(0x800000008), v35, v36, v37, v38) & 1) != 0)return 3;
      }
LABEL_253:
      result = 0;
      **(_BYTE **)(a1 + 16) = 0;
      return result;
    }
LABEL_26:
    v32 = (char *)v24 + 316;
    goto LABEL_27;
  }
  if (v17 == 1)
    return 1;
  else
    return 2;
}

uint64_t sub_223952704(int a1, int32x2_t *a2, char a3, uint64_t a4, double a5, double a6, float32x4_t a7, float32x4_t a8, double a9, float32x4_t a10)
{
  uint64_t result;
  int v14;
  uint64_t v15;
  __int32 v16;
  __int32 v17;
  unsigned int v18;
  __int32 v19;
  __int32 v20;
  unsigned int v21;
  __int32 v22;
  unsigned int v23;
  unsigned __int32 v24;
  __int32 v25;
  unsigned int v26;
  unsigned __int32 v27;
  __int32 v28;
  __int32 v29;
  unsigned int v30;
  __int32 v31;
  __int32 v32;
  unsigned int v33;
  __int32 v34;
  unsigned int v35;
  unsigned __int32 v36;
  __int32 v37;
  unsigned int v38;
  unsigned __int32 v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int32 v42;
  unint64_t v43;
  int v44;
  unsigned __int32 v45;
  unsigned int v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  uint64_t v51;
  int v52;
  char v53;
  char v54;
  uint64_t v55;
  int v56;
  char v57;
  char v58;
  uint64_t v59;
  int v60;
  char v61;
  char v62;
  uint64_t v63;
  int v64;
  char v65;
  char v66;
  uint64_t v67;
  int v68;
  char v69;
  char v70;
  uint64_t v71;
  int v72;
  char v73;
  char v74;
  uint64_t v75;
  int v76;
  char v77;
  char v78;
  uint64_t v79;
  int v80;
  char v81;
  char v82;
  uint64_t v83;
  int v84;
  char v85;
  char v86;
  uint64_t v87;
  int v88;
  char v89;
  char v90;
  uint64_t v91;
  int v92;
  char v93;
  char v94;
  uint64_t v95;
  int v96;
  char v97;
  char v98;
  int v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  int v104;
  char v105;
  char v106;
  int v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  int v112;
  char v113;
  char v114;
  int v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  int v120;
  char v121;
  char v122;
  int v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  int v128;
  char v129;
  char v130;
  int v131;
  uint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  int v136;
  char v137;
  char v138;
  int v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  int v144;
  char v145;
  char v146;
  int v147;
  uint64_t v148;
  char v149;

  LOBYTE(v42) = 1;
  v43 = -1;
  v44 = -1;
  LOBYTE(v45) = 8;
  LOBYTE(v46) = 1;
  v47 = -1;
  v48 = -1;
  v49 = 8;
  v50 = 1;
  v51 = -1;
  v52 = -1;
  v53 = 8;
  v54 = 1;
  v55 = -1;
  v56 = -1;
  v57 = 8;
  v58 = 1;
  v59 = -1;
  v60 = -1;
  v61 = 8;
  v62 = 1;
  v63 = -1;
  v64 = -1;
  v65 = 8;
  v66 = 1;
  v67 = -1;
  v68 = -1;
  v69 = 8;
  v70 = 1;
  v71 = -1;
  v72 = -1;
  v73 = 8;
  v74 = 1;
  v75 = -1;
  v76 = -1;
  v77 = 8;
  v78 = 1;
  v79 = -1;
  v80 = -1;
  v81 = 8;
  v82 = 1;
  v83 = -1;
  v84 = -1;
  v85 = 8;
  v86 = 1;
  v87 = -1;
  v88 = -1;
  v89 = 8;
  v90 = 1;
  v91 = -1;
  v92 = -1;
  v93 = 8;
  v94 = 1;
  v95 = -1;
  v96 = -1;
  v97 = 8;
  v98 = 1;
  v99 = -1;
  v100 = -1;
  v101 = 8;
  v102 = 1;
  v103 = -1;
  v104 = -1;
  v105 = 8;
  v106 = 1;
  v107 = -1;
  v108 = -1;
  v109 = 8;
  v110 = 1;
  v111 = -1;
  v112 = -1;
  v113 = 8;
  v114 = 1;
  v115 = -1;
  v116 = -1;
  v117 = 8;
  v118 = 1;
  v119 = -1;
  v120 = -1;
  v121 = 8;
  v122 = 1;
  v123 = -1;
  v124 = -1;
  v125 = 8;
  v126 = 1;
  v127 = -1;
  v128 = -1;
  v129 = 8;
  v130 = 1;
  v131 = -1;
  v132 = -1;
  v133 = 8;
  v134 = 1;
  v135 = -1;
  v136 = -1;
  v137 = 8;
  v138 = 1;
  v139 = -1;
  v140 = -1;
  v141 = 8;
  v142 = 1;
  v143 = -1;
  v144 = -1;
  v145 = 8;
  v146 = 1;
  v147 = -1;
  v148 = -1;
  v149 = 8;
  result = sub_223951C94(a4, a3, a1, 0x80000000, a2, &v42, NAN, a6, a7, a8, a9, a10);
  if ((_DWORD)result)
  {
    v14 = result;
    result = 1;
    if (a1)
    {
      if (v14 != 3)
      {
        v15 = (a1 - 1);
        v16 = a2->i32[1];
        v17 = a2[1].i32[0];
        v18 = (a2[1].i32[1] - a2->i32[0]) >> 1;
        v42 = a2->i32[0];
        v43 = __PAIR64__(v17, v16);
        v44 = v18 + v42;
        v45 = v16 + v18;
        v46 = v17 + v18;
        v40 = *(_OWORD *)a4;
        v41 = *(_QWORD *)(a4 + 16);
        result = sub_223952704(v15, &v42, v14 == 2, &v40);
        if ((_DWORD)result)
        {
          v19 = a2->i32[1];
          v20 = a2[1].i32[0];
          v21 = (a2[1].i32[1] - a2->i32[0]) >> 1;
          v42 = a2->i32[0];
          LODWORD(v43) = v19;
          HIDWORD(v43) = v20 + v21;
          v44 = v21 + v42;
          v45 = v19 + v21;
          v46 = v20 + v21 + v21;
          v40 = *(_OWORD *)a4;
          v41 = *(_QWORD *)(a4 + 16);
          result = sub_223952704(v15, &v42, v14 == 2, &v40);
          if ((_DWORD)result)
          {
            v22 = a2[1].i32[0];
            v23 = (a2[1].i32[1] - a2->i32[0]) >> 1;
            v24 = v23 + a2->i32[1];
            v42 = a2->i32[0];
            v43 = __PAIR64__(v22, v24);
            v44 = v23 + v42;
            v45 = v24 + v23;
            v46 = v22 + v23;
            v40 = *(_OWORD *)a4;
            v41 = *(_QWORD *)(a4 + 16);
            result = sub_223952704(v15, &v42, v14 == 2, &v40);
            if ((_DWORD)result)
            {
              v25 = a2[1].i32[0];
              v26 = (a2[1].i32[1] - a2->i32[0]) >> 1;
              v27 = v26 + a2->i32[1];
              v42 = a2->i32[0];
              LODWORD(v43) = v27;
              HIDWORD(v43) = v25 + v26;
              v44 = v26 + v42;
              v45 = v27 + v26;
              v46 = v25 + v26 + v26;
              v40 = *(_OWORD *)a4;
              v41 = *(_QWORD *)(a4 + 16);
              result = sub_223952704(v15, &v42, v14 == 2, &v40);
              if ((_DWORD)result)
              {
                v28 = a2->i32[1];
                v29 = a2[1].i32[0];
                v30 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                v42 = v30 + a2->i32[0];
                v43 = __PAIR64__(v29, v28);
                v44 = v42 + v30;
                v45 = v28 + v30;
                v46 = v29 + v30;
                v40 = *(_OWORD *)a4;
                v41 = *(_QWORD *)(a4 + 16);
                result = sub_223952704(v15, &v42, v14 == 2, &v40);
                if ((_DWORD)result)
                {
                  v31 = a2->i32[1];
                  v32 = a2[1].i32[0];
                  v33 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                  v42 = v33 + a2->i32[0];
                  LODWORD(v43) = v31;
                  HIDWORD(v43) = v32 + v33;
                  v44 = v42 + v33;
                  v45 = v31 + v33;
                  v46 = v32 + v33 + v33;
                  v40 = *(_OWORD *)a4;
                  v41 = *(_QWORD *)(a4 + 16);
                  result = sub_223952704(v15, &v42, v14 == 2, &v40);
                  if ((_DWORD)result)
                  {
                    v34 = a2[1].i32[0];
                    v35 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                    v36 = v35 + a2->i32[1];
                    v42 = v35 + a2->i32[0];
                    v43 = __PAIR64__(v34, v36);
                    v44 = v42 + v35;
                    v45 = v36 + v35;
                    v46 = v34 + v35;
                    v40 = *(_OWORD *)a4;
                    v41 = *(_QWORD *)(a4 + 16);
                    result = sub_223952704(v15, &v42, v14 == 2, &v40);
                    if ((_DWORD)result)
                    {
                      v37 = a2[1].i32[0];
                      v38 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                      v39 = v38 + a2->i32[1];
                      v42 = v38 + a2->i32[0];
                      LODWORD(v43) = v39;
                      HIDWORD(v43) = v37 + v38;
                      v44 = v42 + v38;
                      v45 = v39 + v38;
                      v46 = v37 + v38 + v38;
                      v40 = *(_OWORD *)a4;
                      v41 = *(_QWORD *)(a4 + 16);
                      return sub_223952704(v15, &v42, v14 == 2, &v40);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_223952C08(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t **a6, double a7, double a8, float32x4_t a9, float32x4_t a10, double a11, float32x4_t a12)
{
  float32x4_t v18;
  float32x4_t v19;
  int v20;
  uint64_t v21;
  int v22;
  __int32 v23;
  unsigned int v24;
  __int128 v25;
  uint64_t result;
  int v27;
  int v28;
  unsigned int v29;
  __int128 v30;
  __int32 v31;
  unsigned int v32;
  unsigned int v33;
  __int128 v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  __int128 v38;
  int v39;
  __int32 v40;
  unsigned int v41;
  __int128 v42;
  int v43;
  int v44;
  unsigned int v45;
  __int128 v46;
  __int32 v47;
  unsigned int v48;
  unsigned int v49;
  __int128 v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  __int128 v54;
  uint32x4_t v55;
  uint32x4_t v56;
  int8x16_t v57;
  unsigned __int32 v58;
  char **v59;
  char v60;
  int v61;
  int v62;
  int32x2_t v63;
  int32x2_t v64;
  int32x2_t v65;
  int32x2_t v66;
  unsigned __int32 v67;
  uint64_t v68;
  unsigned __int32 v69;
  unsigned int v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int32 v75;
  uint64_t v76;
  unsigned int v77;

  LODWORD(a7) = *(_DWORD *)(a4 + 128);
  *(float32x2_t *)a9.f32 = vcvt_f32_s32(*(int32x2_t *)a3);
  a10.f32[0] = (float)*(int *)(a3 + 8);
  a9.f32[2] = a10.f32[0];
  v18 = vmulq_n_f32(a9, *(float *)&a7);
  *(float *)&a7 = *(float *)&a7 * (float)(int)(*(_DWORD *)(a3 + 12) - *(_QWORD *)a3);
  v75 = v18.i32[2];
  v74 = v18.i64[0];
  v19 = vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a7, 0));
  v77 = v19.u32[2];
  v76 = v19.i64[0];
  if (*(_BYTE *)(a5 + 20) == 1)
  {
    v20 = sub_223E998FC((float *)&v74, (float *)a5, *(float *)(a5 + 12), *(float *)(a5 + 16), v18, *(double *)a10.i64, a11, a12);
    if (v20)
      goto LABEL_6;
    return 1;
  }
  if (*(_BYTE *)(a5 + 20))
  {
    v20 = sub_223E99B90((float *)&v74, (float *)a5, *(float *)(a5 + 12), *(float *)(a5 + 16), v18, a10);
    if (v20)
      goto LABEL_6;
    return 1;
  }
  v20 = sub_223E99668((float *)&v74, (float *)a5, *(float *)(a5 + 12), *(float *)(a5 + 16), v18, a10);
  if (!v20)
    return 1;
LABEL_6:
  if (!a2)
  {
    *(int32x2_t *)v55.i8 = vdup_n_s32(*(_DWORD *)(a3 + 8) & 7);
    v55.u64[1] = (unint64_t)vdup_n_s32(*(_DWORD *)a3 & 7);
    v56.i64[0] = *(_QWORD *)a3 & 0x700000007;
    v56.i32[2] = v56.i32[1];
    v56.i32[3] = v56.i32[1];
    v57 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u32(v55, (uint32x4_t)xmmword_224656630), (int8x16_t)xmmword_224656650), vandq_s8((int8x16_t)vshlq_u32(v56, (uint32x4_t)xmmword_224656620), (int8x16_t)xmmword_224656640));
    *(int8x8_t *)v57.i8 = vorr_s8(*(int8x8_t *)v57.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL));
    v58 = v57.i32[0] | *(_DWORD *)(a3 + 8) & 1 | v57.i32[1];
    v59 = (char **)a6[5];
    if ((*(char *)(**a6 + 40 * v58 + 6) & 0x80000000) == 0)
    {
      result = 1;
      if (*(_BYTE *)(**a6 + 40 * v58 + 6))
        return result;
      v60 = 1;
LABEL_40:
      **v59 = v60;
      return result;
    }
LABEL_39:
    result = 0;
    v60 = 2;
    goto LABEL_40;
  }
  if (v20 == 1)
  {
    v21 = (a2 - 1);
    v22 = *(_DWORD *)(a3 + 4);
    v23 = *(_DWORD *)(a3 + 8);
    v24 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
    LODWORD(v74) = *(_DWORD *)a3;
    HIDWORD(v74) = v22;
    v75 = v23;
    LODWORD(v76) = v24 + v74;
    HIDWORD(v76) = v22 + v24;
    v77 = v23 + v24;
    v25 = *((_OWORD *)a6 + 1);
    v71 = *(_OWORD *)a6;
    v72 = v25;
    v73 = *((_OWORD *)a6 + 2);
    result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
    if ((_DWORD)result)
    {
      v27 = *(_DWORD *)(a3 + 4);
      v28 = *(_DWORD *)(a3 + 8);
      v29 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
      LODWORD(v74) = *(_DWORD *)a3;
      HIDWORD(v74) = v27;
      v75 = v28 + v29;
      LODWORD(v76) = v29 + v74;
      HIDWORD(v76) = v27 + v29;
      v77 = v28 + v29 + v29;
      v30 = *((_OWORD *)a6 + 1);
      v71 = *(_OWORD *)a6;
      v72 = v30;
      v73 = *((_OWORD *)a6 + 2);
      result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
      if ((_DWORD)result)
      {
        v31 = *(_DWORD *)(a3 + 8);
        v32 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
        v33 = v32 + *(_DWORD *)(a3 + 4);
        LODWORD(v74) = *(_DWORD *)a3;
        HIDWORD(v74) = v33;
        v75 = v31;
        LODWORD(v76) = v32 + v74;
        HIDWORD(v76) = v33 + v32;
        v77 = v31 + v32;
        v34 = *((_OWORD *)a6 + 1);
        v71 = *(_OWORD *)a6;
        v72 = v34;
        v73 = *((_OWORD *)a6 + 2);
        result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
        if ((_DWORD)result)
        {
          v35 = *(_DWORD *)(a3 + 8);
          v36 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
          v37 = v36 + *(_DWORD *)(a3 + 4);
          LODWORD(v74) = *(_DWORD *)a3;
          HIDWORD(v74) = v37;
          v75 = v35 + v36;
          LODWORD(v76) = v36 + v74;
          HIDWORD(v76) = v37 + v36;
          v77 = v35 + v36 + v36;
          v38 = *((_OWORD *)a6 + 1);
          v71 = *(_OWORD *)a6;
          v72 = v38;
          v73 = *((_OWORD *)a6 + 2);
          result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
          if ((_DWORD)result)
          {
            v39 = *(_DWORD *)(a3 + 4);
            v40 = *(_DWORD *)(a3 + 8);
            v41 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
            LODWORD(v74) = v41 + *(_DWORD *)a3;
            HIDWORD(v74) = v39;
            v75 = v40;
            LODWORD(v76) = v74 + v41;
            HIDWORD(v76) = v39 + v41;
            v77 = v40 + v41;
            v42 = *((_OWORD *)a6 + 1);
            v71 = *(_OWORD *)a6;
            v72 = v42;
            v73 = *((_OWORD *)a6 + 2);
            result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
            if ((_DWORD)result)
            {
              v43 = *(_DWORD *)(a3 + 4);
              v44 = *(_DWORD *)(a3 + 8);
              v45 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
              LODWORD(v74) = v45 + *(_DWORD *)a3;
              HIDWORD(v74) = v43;
              v75 = v44 + v45;
              LODWORD(v76) = v74 + v45;
              HIDWORD(v76) = v43 + v45;
              v77 = v44 + v45 + v45;
              v46 = *((_OWORD *)a6 + 1);
              v71 = *(_OWORD *)a6;
              v72 = v46;
              v73 = *((_OWORD *)a6 + 2);
              result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
              if ((_DWORD)result)
              {
                v47 = *(_DWORD *)(a3 + 8);
                v48 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
                v49 = v48 + *(_DWORD *)(a3 + 4);
                LODWORD(v74) = v48 + *(_DWORD *)a3;
                HIDWORD(v74) = v49;
                v75 = v47;
                LODWORD(v76) = v74 + v48;
                HIDWORD(v76) = v49 + v48;
                v77 = v47 + v48;
                v50 = *((_OWORD *)a6 + 1);
                v71 = *(_OWORD *)a6;
                v72 = v50;
                v73 = *((_OWORD *)a6 + 2);
                result = sub_223952C08(a1, v21, &v74, a4, a5, &v71);
                if ((_DWORD)result)
                {
                  v51 = *(_DWORD *)(a3 + 8);
                  v52 = (*(_DWORD *)(a3 + 12) - *(_DWORD *)a3) >> 1;
                  v53 = v52 + *(_DWORD *)(a3 + 4);
                  LODWORD(v74) = v52 + *(_DWORD *)a3;
                  HIDWORD(v74) = v53;
                  v75 = v51 + v52;
                  LODWORD(v76) = v74 + v52;
                  HIDWORD(v76) = v53 + v52;
                  v77 = v51 + v52 + v52;
                  v54 = *((_OWORD *)a6 + 1);
                  v71 = *(_OWORD *)a6;
                  v72 = v54;
                  v73 = *((_OWORD *)a6 + 2);
                  return sub_223952C08(a1, v21, &v74, a4, a5, &v71);
                }
              }
            }
          }
        }
      }
    }
    return result;
  }
  v61 = *(_DWORD *)a3;
  if (*(_DWORD *)a1 > *(_DWORD *)a3)
    v61 = *(_DWORD *)a1;
  v62 = *(_DWORD *)(a3 + 12);
  if (v62 >= *(_DWORD *)a1 + 8)
    v62 = *(_DWORD *)a1 + 8;
  result = 1;
  if (v62 > v61)
  {
    v63 = *(int32x2_t *)(a1 + 4);
    v64 = vmax_s32(v63, *(int32x2_t *)(a3 + 4));
    v65 = vmin_s32(*(int32x2_t *)(a3 + 16), vadd_s32(v63, (int32x2_t)0x800000008));
    v66 = vcgt_s32(v65, v64);
    if ((v66.i8[0] & 1) != 0 && (v66.i8[4] & 1) != 0)
    {
      v67 = v64.u32[1];
      v68 = **a6;
      v59 = (char **)a6[5];
LABEL_30:
      v69 = v64.i32[0];
LABEL_31:
      v70 = v61;
      while ((*(char *)(v68
                       + 40
                       * (v67 & 1 | (((v67 >> 2) & 1) << 6) & 0xFFFFFE7F | (8 * ((v67 >> 1) & 1)) & 0xFFFFFE7F | (((v69 >> 2) & 1) << 7) & 0xFFFFFEFF | (8 * v69) & 0x10 | (2 * (v69 & 1)) | (16 * v70) & 0x20 | (((v70 >> 2) & 1) << 8) | (4 * (v70 & 1)))
                       + 6) & 0x80000000) == 0)
      {
        if (!*(_BYTE *)(v68
                       + 40
                       * (v67 & 1 | (((v67 >> 2) & 1) << 6) & 0xFFFFFE7F | (8 * ((v67 >> 1) & 1)) & 0xFFFFFE7F | (((v69 >> 2) & 1) << 7) & 0xFFFFFEFF | (8 * v69) & 0x10 | (2 * (v69 & 1)) | (16 * v70) & 0x20 | (((v70 >> 2) & 1) << 8) | (4 * (v70 & 1)))
                       + 6))
          **v59 = 1;
        if (v62 == ++v70)
        {
          if (++v69 != v65.i32[0])
            goto LABEL_31;
          ++v67;
          result = 1;
          if (v67 != v65.i32[1])
            goto LABEL_30;
          return result;
        }
      }
      goto LABEL_39;
    }
  }
  return result;
}

uint64_t sub_223953204(char ****a1)
{
  char *v1;
  char **v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  char *v8;
  int v9;
  uint64_t result;
  char v11;

  v1 = ***a1;
  v2 = (*a1)[5];
  if (v1[2926] < 0)
    goto LABEL_1322;
  if (v1[2926])
  {
    v3 = v1[2966];
    if (v3 < 0)
      goto LABEL_1322;
  }
  else
  {
    **v2 = 1;
    v3 = v1[2966];
    if (v3 < 0)
      goto LABEL_1322;
  }
  if (v3)
  {
    v4 = v1[3006];
    if (v4 < 0)
      goto LABEL_1322;
  }
  else
  {
    **v2 = 1;
    v4 = v1[3006];
    if (v4 < 0)
      goto LABEL_1322;
  }
  if (v4)
  {
    v5 = v1[3046];
    if (v5 < 0)
      goto LABEL_1322;
  }
  else
  {
    **v2 = 1;
    v5 = v1[3046];
    if (v5 < 0)
      goto LABEL_1322;
  }
  if (!v5)
  {
    **v2 = 1;
    v6 = v1[3086];
    if ((v6 & 0x80000000) == 0)
      goto LABEL_18;
LABEL_1322:
    result = 0;
    v11 = 2;
    goto LABEL_1323;
  }
  v6 = v1[3086];
  if (v6 < 0)
    goto LABEL_1322;
LABEL_18:
  if (!v6)
    **v2 = 1;
  if (v1[3126] < 0)
    goto LABEL_1322;
  if (!v1[3126])
    **v2 = 1;
  if (v1[3166] < 0)
    goto LABEL_1322;
  if (!v1[3166])
    **v2 = 1;
  if (v1[3206] < 0)
    goto LABEL_1322;
  if (!v1[3206])
    **v2 = 1;
  if (v1[3246] < 0)
    goto LABEL_1322;
  if (!v1[3246])
    **v2 = 1;
  if (v1[3286] < 0)
    goto LABEL_1322;
  if (!v1[3286])
    **v2 = 1;
  if (v1[3326] < 0)
    goto LABEL_1322;
  if (!v1[3326])
    **v2 = 1;
  if (v1[3366] < 0)
    goto LABEL_1322;
  if (!v1[3366])
    **v2 = 1;
  if (v1[3406] < 0)
    goto LABEL_1322;
  if (!v1[3406])
    **v2 = 1;
  if (v1[3446] < 0)
    goto LABEL_1322;
  if (!v1[3446])
    **v2 = 1;
  if (v1[3486] < 0)
    goto LABEL_1322;
  if (!v1[3486])
    **v2 = 1;
  if (v1[3526] < 0)
    goto LABEL_1322;
  if (!v1[3526])
    **v2 = 1;
  if (v1[3566] < 0)
    goto LABEL_1322;
  if (!v1[3566])
    **v2 = 1;
  if (v1[3606] < 0)
    goto LABEL_1322;
  if (!v1[3606])
    **v2 = 1;
  if (v1[3646] < 0)
    goto LABEL_1322;
  if (!v1[3646])
    **v2 = 1;
  if (v1[3686] < 0)
    goto LABEL_1322;
  if (!v1[3686])
    **v2 = 1;
  if (v1[3726] < 0)
    goto LABEL_1322;
  if (!v1[3726])
    **v2 = 1;
  if (v1[3766] < 0)
    goto LABEL_1322;
  if (!v1[3766])
    **v2 = 1;
  if (v1[3806] < 0)
    goto LABEL_1322;
  if (!v1[3806])
    **v2 = 1;
  if (v1[3846] < 0)
    goto LABEL_1322;
  if (!v1[3846])
    **v2 = 1;
  if (v1[3886] < 0)
    goto LABEL_1322;
  if (!v1[3886])
    **v2 = 1;
  if (v1[3926] < 0)
    goto LABEL_1322;
  if (!v1[3926])
    **v2 = 1;
  if (v1[3966] < 0)
    goto LABEL_1322;
  if (!v1[3966])
    **v2 = 1;
  if (v1[4006] < 0)
    goto LABEL_1322;
  if (!v1[4006])
    **v2 = 1;
  if (v1[4046] < 0)
    goto LABEL_1322;
  if (!v1[4046])
    **v2 = 1;
  if (v1[4086] < 0)
    goto LABEL_1322;
  if (!v1[4086])
    **v2 = 1;
  if (v1[4126] < 0)
    goto LABEL_1322;
  if (!v1[4126])
    **v2 = 1;
  if (v1[4166] < 0)
    goto LABEL_1322;
  if (!v1[4166])
    **v2 = 1;
  if (v1[4206] < 0)
    goto LABEL_1322;
  if (!v1[4206])
    **v2 = 1;
  if (v1[4246] < 0)
    goto LABEL_1322;
  if (!v1[4246])
    **v2 = 1;
  if (v1[4286] < 0)
    goto LABEL_1322;
  if (!v1[4286])
    **v2 = 1;
  if (v1[4326] < 0)
    goto LABEL_1322;
  if (!v1[4326])
    **v2 = 1;
  if (v1[4366] < 0)
    goto LABEL_1322;
  if (!v1[4366])
    **v2 = 1;
  if (v1[4406] < 0)
    goto LABEL_1322;
  if (!v1[4406])
    **v2 = 1;
  if (v1[4446] < 0)
    goto LABEL_1322;
  if (!v1[4446])
    **v2 = 1;
  if (v1[4486] < 0)
    goto LABEL_1322;
  if (!v1[4486])
    **v2 = 1;
  if (v1[4526] < 0)
    goto LABEL_1322;
  if (!v1[4526])
    **v2 = 1;
  if (v1[4566] < 0)
    goto LABEL_1322;
  if (!v1[4566])
    **v2 = 1;
  if (v1[4606] < 0)
    goto LABEL_1322;
  if (!v1[4606])
    **v2 = 1;
  if (v1[4646] < 0)
    goto LABEL_1322;
  if (!v1[4646])
    **v2 = 1;
  if (v1[4686] < 0)
    goto LABEL_1322;
  if (!v1[4686])
    **v2 = 1;
  if (v1[4726] < 0)
    goto LABEL_1322;
  if (!v1[4726])
    **v2 = 1;
  if (v1[4766] < 0)
    goto LABEL_1322;
  if (!v1[4766])
    **v2 = 1;
  if (v1[4806] < 0)
    goto LABEL_1322;
  if (!v1[4806])
    **v2 = 1;
  if (v1[4846] < 0)
    goto LABEL_1322;
  if (!v1[4846])
    **v2 = 1;
  if (v1[4886] < 0)
    goto LABEL_1322;
  if (!v1[4886])
    **v2 = 1;
  if (v1[4926] < 0)
    goto LABEL_1322;
  if (!v1[4926])
    **v2 = 1;
  if (v1[4966] < 0)
    goto LABEL_1322;
  if (!v1[4966])
    **v2 = 1;
  if (v1[5006] < 0)
    goto LABEL_1322;
  if (!v1[5006])
    **v2 = 1;
  if (v1[5046] < 0)
    goto LABEL_1322;
  if (!v1[5046])
    **v2 = 1;
  if (v1[5086] < 0)
    goto LABEL_1322;
  if (!v1[5086])
    **v2 = 1;
  if (v1[5126] < 0)
    goto LABEL_1322;
  if (!v1[5126])
    **v2 = 1;
  if (v1[5166] < 0)
    goto LABEL_1322;
  if (!v1[5166])
    **v2 = 1;
  if (v1[5206] < 0)
    goto LABEL_1322;
  if (!v1[5206])
    **v2 = 1;
  if (v1[5246] < 0)
    goto LABEL_1322;
  if (!v1[5246])
    **v2 = 1;
  if (v1[5286] < 0)
    goto LABEL_1322;
  if (!v1[5286])
    **v2 = 1;
  if (v1[5326] < 0)
    goto LABEL_1322;
  if (!v1[5326])
    **v2 = 1;
  if (v1[5366] < 0)
    goto LABEL_1322;
  if (!v1[5366])
    **v2 = 1;
  if (v1[5406] < 0)
    goto LABEL_1322;
  if (!v1[5406])
    **v2 = 1;
  if (v1[5446] < 0)
    goto LABEL_1322;
  if (!v1[5446])
    **v2 = 1;
  if (v1[5486] < 0)
    goto LABEL_1322;
  if (!v1[5486])
    **v2 = 1;
  if (v1[5526] < 0)
    goto LABEL_1322;
  if (!v1[5526])
    **v2 = 1;
  if (v1[5566] < 0)
    goto LABEL_1322;
  if (!v1[5566])
    **v2 = 1;
  if (v1[5606] < 0)
    goto LABEL_1322;
  if (!v1[5606])
    **v2 = 1;
  if (v1[5646] < 0)
    goto LABEL_1322;
  if (!v1[5646])
    **v2 = 1;
  if (v1[5686] < 0)
    goto LABEL_1322;
  if (!v1[5686])
    **v2 = 1;
  if (v1[5726] < 0)
    goto LABEL_1322;
  if (!v1[5726])
    **v2 = 1;
  if (v1[5766] < 0)
    goto LABEL_1322;
  if (!v1[5766])
    **v2 = 1;
  if (v1[5806] < 0)
    goto LABEL_1322;
  if (!v1[5806])
    **v2 = 1;
  if (v1[5846] < 0)
    goto LABEL_1322;
  if (!v1[5846])
    **v2 = 1;
  if (v1[5886] < 0)
    goto LABEL_1322;
  if (!v1[5886])
    **v2 = 1;
  if (v1[5926] < 0)
    goto LABEL_1322;
  if (!v1[5926])
    **v2 = 1;
  if (v1[5966] < 0)
    goto LABEL_1322;
  if (!v1[5966])
    **v2 = 1;
  if (v1[6006] < 0)
    goto LABEL_1322;
  if (!v1[6006])
    **v2 = 1;
  if (v1[6046] < 0)
    goto LABEL_1322;
  if (!v1[6046])
    **v2 = 1;
  if (v1[6086] < 0)
    goto LABEL_1322;
  if (!v1[6086])
    **v2 = 1;
  if (v1[6126] < 0)
    goto LABEL_1322;
  if (!v1[6126])
    **v2 = 1;
  if (v1[6166] < 0)
    goto LABEL_1322;
  if (!v1[6166])
    **v2 = 1;
  if (v1[6206] < 0)
    goto LABEL_1322;
  if (!v1[6206])
    **v2 = 1;
  if (v1[6246] < 0)
    goto LABEL_1322;
  if (!v1[6246])
    **v2 = 1;
  if (v1[6286] < 0)
    goto LABEL_1322;
  if (!v1[6286])
    **v2 = 1;
  if (v1[6326] < 0)
    goto LABEL_1322;
  if (!v1[6326])
    **v2 = 1;
  if (v1[6366] < 0)
    goto LABEL_1322;
  if (!v1[6366])
    **v2 = 1;
  if (v1[6406] < 0)
    goto LABEL_1322;
  if (!v1[6406])
    **v2 = 1;
  if (v1[6446] < 0)
    goto LABEL_1322;
  if (!v1[6446])
    **v2 = 1;
  if (v1[6486] < 0)
    goto LABEL_1322;
  if (!v1[6486])
    **v2 = 1;
  if (v1[6526] < 0)
    goto LABEL_1322;
  if (!v1[6526])
    **v2 = 1;
  if (v1[6566] < 0)
    goto LABEL_1322;
  if (!v1[6566])
    **v2 = 1;
  if (v1[6606] < 0)
    goto LABEL_1322;
  if (!v1[6606])
    **v2 = 1;
  if (v1[6646] < 0)
    goto LABEL_1322;
  if (!v1[6646])
    **v2 = 1;
  if (v1[6686] < 0)
    goto LABEL_1322;
  if (!v1[6686])
    **v2 = 1;
  if (v1[6726] < 0)
    goto LABEL_1322;
  if (!v1[6726])
    **v2 = 1;
  if (v1[6766] < 0)
    goto LABEL_1322;
  if (!v1[6766])
    **v2 = 1;
  if (v1[6806] < 0)
    goto LABEL_1322;
  if (!v1[6806])
    **v2 = 1;
  if (v1[6846] < 0)
    goto LABEL_1322;
  if (!v1[6846])
    **v2 = 1;
  if (v1[6886] < 0)
    goto LABEL_1322;
  if (!v1[6886])
    **v2 = 1;
  if (v1[6926] < 0)
    goto LABEL_1322;
  if (!v1[6926])
    **v2 = 1;
  if (v1[6966] < 0)
    goto LABEL_1322;
  if (!v1[6966])
    **v2 = 1;
  if (v1[7006] < 0)
    goto LABEL_1322;
  if (!v1[7006])
    **v2 = 1;
  if (v1[7046] < 0)
    goto LABEL_1322;
  if (!v1[7046])
    **v2 = 1;
  if (v1[7086] < 0)
    goto LABEL_1322;
  if (!v1[7086])
    **v2 = 1;
  if (v1[7126] < 0)
    goto LABEL_1322;
  if (!v1[7126])
    **v2 = 1;
  if (v1[7166] < 0)
    goto LABEL_1322;
  if (!v1[7166])
    **v2 = 1;
  if (v1[7206] < 0)
    goto LABEL_1322;
  if (!v1[7206])
    **v2 = 1;
  if (v1[7246] < 0)
    goto LABEL_1322;
  if (!v1[7246])
    **v2 = 1;
  if (v1[7286] < 0)
    goto LABEL_1322;
  if (!v1[7286])
    **v2 = 1;
  if (v1[7326] < 0)
    goto LABEL_1322;
  if (!v1[7326])
    **v2 = 1;
  if (v1[7366] < 0)
    goto LABEL_1322;
  if (!v1[7366])
    **v2 = 1;
  if (v1[7406] < 0)
    goto LABEL_1322;
  if (!v1[7406])
    **v2 = 1;
  if (v1[7446] < 0)
    goto LABEL_1322;
  if (!v1[7446])
    **v2 = 1;
  if (v1[7486] < 0)
    goto LABEL_1322;
  if (!v1[7486])
    **v2 = 1;
  if (v1[7526] < 0)
    goto LABEL_1322;
  if (!v1[7526])
    **v2 = 1;
  if (v1[7566] < 0)
    goto LABEL_1322;
  if (!v1[7566])
    **v2 = 1;
  if (v1[7606] < 0)
    goto LABEL_1322;
  if (!v1[7606])
    **v2 = 1;
  if (v1[7646] < 0)
    goto LABEL_1322;
  if (!v1[7646])
    **v2 = 1;
  if (v1[7686] < 0)
    goto LABEL_1322;
  if (!v1[7686])
    **v2 = 1;
  if (v1[7726] < 0)
    goto LABEL_1322;
  if (!v1[7726])
    **v2 = 1;
  if (v1[7766] < 0)
    goto LABEL_1322;
  if (!v1[7766])
    **v2 = 1;
  if (v1[7806] < 0)
    goto LABEL_1322;
  if (!v1[7806])
    **v2 = 1;
  if (v1[7846] < 0)
    goto LABEL_1322;
  if (!v1[7846])
    **v2 = 1;
  if (v1[7886] < 0)
    goto LABEL_1322;
  if (!v1[7886])
    **v2 = 1;
  if (v1[7926] < 0)
    goto LABEL_1322;
  if (!v1[7926])
    **v2 = 1;
  if (v1[7966] < 0)
    goto LABEL_1322;
  if (!v1[7966])
    **v2 = 1;
  if (v1[8006] < 0)
    goto LABEL_1322;
  if (!v1[8006])
    **v2 = 1;
  if (v1[8046] < 0)
    goto LABEL_1322;
  if (!v1[8046])
    **v2 = 1;
  if (v1[8086] < 0)
    goto LABEL_1322;
  if (!v1[8086])
    **v2 = 1;
  if (v1[8126] < 0)
    goto LABEL_1322;
  if (!v1[8126])
    **v2 = 1;
  if (v1[8166] < 0)
    goto LABEL_1322;
  if (!v1[8166])
    **v2 = 1;
  if (v1[8206] < 0)
    goto LABEL_1322;
  if (!v1[8206])
    **v2 = 1;
  if (v1[8246] < 0)
    goto LABEL_1322;
  if (!v1[8246])
    **v2 = 1;
  if (v1[8286] < 0)
    goto LABEL_1322;
  if (!v1[8286])
    **v2 = 1;
  if (v1[8326] < 0)
    goto LABEL_1322;
  if (!v1[8326])
    **v2 = 1;
  if (v1[8366] < 0)
    goto LABEL_1322;
  if (!v1[8366])
    **v2 = 1;
  if (v1[8406] < 0)
    goto LABEL_1322;
  if (!v1[8406])
    **v2 = 1;
  if (v1[8446] < 0)
    goto LABEL_1322;
  if (!v1[8446])
    **v2 = 1;
  if (v1[8486] < 0)
    goto LABEL_1322;
  if (!v1[8486])
    **v2 = 1;
  if (v1[8526] < 0)
    goto LABEL_1322;
  if (!v1[8526])
    **v2 = 1;
  if (v1[8566] < 0)
    goto LABEL_1322;
  if (!v1[8566])
    **v2 = 1;
  if (v1[8606] < 0)
    goto LABEL_1322;
  if (!v1[8606])
    **v2 = 1;
  if (v1[8646] < 0)
    goto LABEL_1322;
  if (!v1[8646])
    **v2 = 1;
  if (v1[8686] < 0)
    goto LABEL_1322;
  if (!v1[8686])
    **v2 = 1;
  if (v1[8726] < 0)
    goto LABEL_1322;
  if (!v1[8726])
    **v2 = 1;
  if (v1[8766] < 0)
    goto LABEL_1322;
  if (!v1[8766])
    **v2 = 1;
  if (v1[8806] < 0)
    goto LABEL_1322;
  if (!v1[8806])
    **v2 = 1;
  if (v1[8846] < 0)
    goto LABEL_1322;
  if (!v1[8846])
    **v2 = 1;
  if (v1[8886] < 0)
    goto LABEL_1322;
  if (!v1[8886])
    **v2 = 1;
  if (v1[8926] < 0)
    goto LABEL_1322;
  if (!v1[8926])
    **v2 = 1;
  if (v1[8966] < 0)
    goto LABEL_1322;
  if (!v1[8966])
    **v2 = 1;
  if (v1[9006] < 0)
    goto LABEL_1322;
  if (!v1[9006])
    **v2 = 1;
  if (v1[9046] < 0)
    goto LABEL_1322;
  if (!v1[9046])
    **v2 = 1;
  if (v1[9086] < 0)
    goto LABEL_1322;
  if (!v1[9086])
    **v2 = 1;
  if (v1[9126] < 0)
    goto LABEL_1322;
  if (!v1[9126])
    **v2 = 1;
  if (v1[9166] < 0)
    goto LABEL_1322;
  if (!v1[9166])
    **v2 = 1;
  if (v1[9206] < 0)
    goto LABEL_1322;
  if (!v1[9206])
    **v2 = 1;
  if (v1[9246] < 0)
    goto LABEL_1322;
  if (!v1[9246])
    **v2 = 1;
  if (v1[9286] < 0)
    goto LABEL_1322;
  if (!v1[9286])
    **v2 = 1;
  if (v1[9326] < 0)
    goto LABEL_1322;
  if (!v1[9326])
    **v2 = 1;
  if (v1[9366] < 0)
    goto LABEL_1322;
  if (!v1[9366])
    **v2 = 1;
  if (v1[9406] < 0)
    goto LABEL_1322;
  if (!v1[9406])
    **v2 = 1;
  if (v1[9446] < 0)
    goto LABEL_1322;
  if (!v1[9446])
    **v2 = 1;
  if (v1[9486] < 0)
    goto LABEL_1322;
  if (!v1[9486])
    **v2 = 1;
  if (v1[9526] < 0)
    goto LABEL_1322;
  if (!v1[9526])
    **v2 = 1;
  if (v1[9566] < 0)
    goto LABEL_1322;
  if (!v1[9566])
    **v2 = 1;
  if (v1[9606] < 0)
    goto LABEL_1322;
  if (!v1[9606])
    **v2 = 1;
  if (v1[9646] < 0)
    goto LABEL_1322;
  if (!v1[9646])
    **v2 = 1;
  if (v1[9686] < 0)
    goto LABEL_1322;
  if (!v1[9686])
    **v2 = 1;
  if (v1[9726] < 0)
    goto LABEL_1322;
  if (!v1[9726])
    **v2 = 1;
  if (v1[9766] < 0)
    goto LABEL_1322;
  if (!v1[9766])
    **v2 = 1;
  if (v1[9806] < 0)
    goto LABEL_1322;
  if (!v1[9806])
    **v2 = 1;
  if (v1[9846] < 0)
    goto LABEL_1322;
  if (!v1[9846])
    **v2 = 1;
  if (v1[9886] < 0)
    goto LABEL_1322;
  if (!v1[9886])
    **v2 = 1;
  if (v1[9926] < 0)
    goto LABEL_1322;
  if (!v1[9926])
    **v2 = 1;
  if (v1[9966] < 0)
    goto LABEL_1322;
  if (!v1[9966])
    **v2 = 1;
  if (v1[10006] < 0)
    goto LABEL_1322;
  if (!v1[10006])
    **v2 = 1;
  if (v1[10046] < 0)
    goto LABEL_1322;
  if (!v1[10046])
    **v2 = 1;
  if (v1[10086] < 0)
    goto LABEL_1322;
  if (!v1[10086])
    **v2 = 1;
  if (v1[10126] < 0)
    goto LABEL_1322;
  if (!v1[10126])
    **v2 = 1;
  if (v1[10166] < 0)
    goto LABEL_1322;
  if (!v1[10166])
    **v2 = 1;
  if (v1[10206] < 0)
    goto LABEL_1322;
  if (!v1[10206])
    **v2 = 1;
  if (v1[10246] < 0)
    goto LABEL_1322;
  if (!v1[10246])
    **v2 = 1;
  if (v1[10286] < 0)
    goto LABEL_1322;
  if (!v1[10286])
    **v2 = 1;
  if (v1[10326] < 0)
    goto LABEL_1322;
  if (!v1[10326])
    **v2 = 1;
  if (v1[10366] < 0)
    goto LABEL_1322;
  if (!v1[10366])
    **v2 = 1;
  if (v1[10406] < 0)
    goto LABEL_1322;
  if (!v1[10406])
    **v2 = 1;
  if (v1[10446] < 0)
    goto LABEL_1322;
  if (!v1[10446])
    **v2 = 1;
  if (v1[10486] < 0)
    goto LABEL_1322;
  if (!v1[10486])
    **v2 = 1;
  if (v1[10526] < 0)
    goto LABEL_1322;
  if (!v1[10526])
    **v2 = 1;
  if (v1[10566] < 0)
    goto LABEL_1322;
  if (!v1[10566])
    **v2 = 1;
  if (v1[10606] < 0)
    goto LABEL_1322;
  if (!v1[10606])
    **v2 = 1;
  if (v1[10646] < 0)
    goto LABEL_1322;
  if (!v1[10646])
    **v2 = 1;
  if (v1[10686] < 0)
    goto LABEL_1322;
  if (!v1[10686])
    **v2 = 1;
  if (v1[10726] < 0)
    goto LABEL_1322;
  if (!v1[10726])
    **v2 = 1;
  if (v1[10766] < 0)
    goto LABEL_1322;
  if (!v1[10766])
    **v2 = 1;
  if (v1[10806] < 0)
    goto LABEL_1322;
  if (!v1[10806])
    **v2 = 1;
  if (v1[10846] < 0)
    goto LABEL_1322;
  if (!v1[10846])
    **v2 = 1;
  if (v1[10886] < 0)
    goto LABEL_1322;
  if (!v1[10886])
    **v2 = 1;
  if (v1[10926] < 0)
    goto LABEL_1322;
  if (!v1[10926])
    **v2 = 1;
  if (v1[10966] < 0)
    goto LABEL_1322;
  if (!v1[10966])
    **v2 = 1;
  if (v1[11006] < 0)
    goto LABEL_1322;
  if (!v1[11006])
    **v2 = 1;
  if (v1[11046] < 0)
    goto LABEL_1322;
  if (!v1[11046])
    **v2 = 1;
  if (v1[11086] < 0)
    goto LABEL_1322;
  if (!v1[11086])
    **v2 = 1;
  if (v1[11126] < 0)
    goto LABEL_1322;
  if (!v1[11126])
    **v2 = 1;
  if (v1[11166] < 0)
    goto LABEL_1322;
  if (!v1[11166])
    **v2 = 1;
  if (v1[11206] < 0)
    goto LABEL_1322;
  if (!v1[11206])
    **v2 = 1;
  if (v1[11246] < 0)
    goto LABEL_1322;
  if (!v1[11246])
    **v2 = 1;
  if (v1[11286] < 0)
    goto LABEL_1322;
  if (!v1[11286])
    **v2 = 1;
  if (v1[11326] < 0)
    goto LABEL_1322;
  if (!v1[11326])
    **v2 = 1;
  if (v1[11366] < 0)
    goto LABEL_1322;
  if (!v1[11366])
    **v2 = 1;
  if (v1[11406] < 0)
    goto LABEL_1322;
  if (!v1[11406])
    **v2 = 1;
  if (v1[11446] < 0)
    goto LABEL_1322;
  if (!v1[11446])
    **v2 = 1;
  if (v1[11486] < 0)
    goto LABEL_1322;
  if (!v1[11486])
    **v2 = 1;
  if (v1[11526] < 0)
    goto LABEL_1322;
  if (!v1[11526])
    **v2 = 1;
  if (v1[11566] < 0)
    goto LABEL_1322;
  if (!v1[11566])
    **v2 = 1;
  if (v1[11606] < 0)
    goto LABEL_1322;
  if (!v1[11606])
    **v2 = 1;
  if (v1[11646] < 0)
    goto LABEL_1322;
  if (!v1[11646])
    **v2 = 1;
  if (v1[11686] < 0)
    goto LABEL_1322;
  if (!v1[11686])
    **v2 = 1;
  if (v1[11726] < 0)
    goto LABEL_1322;
  if (!v1[11726])
    **v2 = 1;
  if (v1[11766] < 0)
    goto LABEL_1322;
  if (!v1[11766])
    **v2 = 1;
  if (v1[11806] < 0)
    goto LABEL_1322;
  if (!v1[11806])
    **v2 = 1;
  if (v1[11846] < 0)
    goto LABEL_1322;
  if (!v1[11846])
    **v2 = 1;
  if (v1[11886] < 0)
    goto LABEL_1322;
  if (!v1[11886])
    **v2 = 1;
  if (v1[11926] < 0)
    goto LABEL_1322;
  if (!v1[11926])
    **v2 = 1;
  if (v1[11966] < 0)
    goto LABEL_1322;
  if (!v1[11966])
    **v2 = 1;
  if (v1[12006] < 0)
    goto LABEL_1322;
  if (!v1[12006])
    **v2 = 1;
  if (v1[12046] < 0)
    goto LABEL_1322;
  if (!v1[12046])
    **v2 = 1;
  if (v1[12086] < 0)
    goto LABEL_1322;
  if (!v1[12086])
    **v2 = 1;
  if (v1[12126] < 0)
    goto LABEL_1322;
  if (!v1[12126])
    **v2 = 1;
  if (v1[12166] < 0)
    goto LABEL_1322;
  if (!v1[12166])
    **v2 = 1;
  if (v1[12206] < 0)
    goto LABEL_1322;
  if (!v1[12206])
    **v2 = 1;
  if (v1[12246] < 0)
    goto LABEL_1322;
  if (!v1[12246])
    **v2 = 1;
  if (v1[12286] < 0)
    goto LABEL_1322;
  if (!v1[12286])
    **v2 = 1;
  if (v1[12326] < 0)
    goto LABEL_1322;
  if (!v1[12326])
    **v2 = 1;
  if (v1[12366] < 0)
    goto LABEL_1322;
  if (!v1[12366])
    **v2 = 1;
  if (v1[12406] < 0)
    goto LABEL_1322;
  if (!v1[12406])
    **v2 = 1;
  if (v1[12446] < 0)
    goto LABEL_1322;
  if (!v1[12446])
    **v2 = 1;
  if (v1[12486] < 0)
    goto LABEL_1322;
  if (!v1[12486])
    **v2 = 1;
  if (v1[12526] < 0)
    goto LABEL_1322;
  if (!v1[12526])
    **v2 = 1;
  if (v1[12566] < 0)
    goto LABEL_1322;
  if (!v1[12566])
    **v2 = 1;
  if (v1[12606] < 0)
    goto LABEL_1322;
  if (!v1[12606])
    **v2 = 1;
  if (v1[12646] < 0)
    goto LABEL_1322;
  if (!v1[12646])
    **v2 = 1;
  if (v1[12686] < 0)
    goto LABEL_1322;
  if (!v1[12686])
    **v2 = 1;
  if (v1[12726] < 0)
    goto LABEL_1322;
  if (!v1[12726])
    **v2 = 1;
  if (v1[12766] < 0)
    goto LABEL_1322;
  if (!v1[12766])
    **v2 = 1;
  if (v1[12806] < 0)
    goto LABEL_1322;
  if (!v1[12806])
    **v2 = 1;
  if (v1[12846] < 0)
    goto LABEL_1322;
  if (!v1[12846])
    **v2 = 1;
  if (v1[12886] < 0)
    goto LABEL_1322;
  if (!v1[12886])
    **v2 = 1;
  if (v1[12926] < 0)
    goto LABEL_1322;
  if (!v1[12926])
    **v2 = 1;
  if (v1[12966] < 0)
    goto LABEL_1322;
  if (!v1[12966])
    **v2 = 1;
  if (v1[13006] < 0)
    goto LABEL_1322;
  if (!v1[13006])
    **v2 = 1;
  if (v1[13046] < 0)
    goto LABEL_1322;
  if (!v1[13046])
    **v2 = 1;
  if (v1[13086] < 0)
    goto LABEL_1322;
  if (!v1[13086])
    **v2 = 1;
  if (v1[13126] < 0)
    goto LABEL_1322;
  if (!v1[13126])
    **v2 = 1;
  if (v1[13166] < 0)
    goto LABEL_1322;
  if (!v1[13166])
    **v2 = 1;
  if (v1[13206] < 0)
    goto LABEL_1322;
  if (!v1[13206])
    **v2 = 1;
  if (v1[13246] < 0)
    goto LABEL_1322;
  if (!v1[13246])
    **v2 = 1;
  if (v1[13286] < 0)
    goto LABEL_1322;
  if (!v1[13286])
    **v2 = 1;
  if (v1[13326] < 0)
    goto LABEL_1322;
  if (!v1[13326])
    **v2 = 1;
  if (v1[13366] < 0)
    goto LABEL_1322;
  if (!v1[13366])
    **v2 = 1;
  if (v1[13406] < 0)
    goto LABEL_1322;
  if (!v1[13406])
    **v2 = 1;
  if (v1[13446] < 0)
    goto LABEL_1322;
  if (!v1[13446])
    **v2 = 1;
  if (v1[13486] < 0)
    goto LABEL_1322;
  if (!v1[13486])
    **v2 = 1;
  if (v1[13526] < 0)
    goto LABEL_1322;
  if (!v1[13526])
    **v2 = 1;
  if (v1[13566] < 0)
    goto LABEL_1322;
  if (!v1[13566])
    **v2 = 1;
  if (v1[13606] < 0)
    goto LABEL_1322;
  if (!v1[13606])
    **v2 = 1;
  if (v1[13646] < 0)
    goto LABEL_1322;
  if (!v1[13646])
    **v2 = 1;
  if (v1[13686] < 0)
    goto LABEL_1322;
  if (!v1[13686])
    **v2 = 1;
  if (v1[13726] < 0)
    goto LABEL_1322;
  if (!v1[13726])
    **v2 = 1;
  if (v1[13766] < 0)
    goto LABEL_1322;
  if (!v1[13766])
    **v2 = 1;
  if (v1[13806] < 0)
    goto LABEL_1322;
  if (!v1[13806])
    **v2 = 1;
  if (v1[13846] < 0)
    goto LABEL_1322;
  if (!v1[13846])
    **v2 = 1;
  if (v1[13886] < 0)
    goto LABEL_1322;
  if (!v1[13886])
    **v2 = 1;
  if (v1[13926] < 0)
    goto LABEL_1322;
  if (!v1[13926])
    **v2 = 1;
  if (v1[13966] < 0)
    goto LABEL_1322;
  if (!v1[13966])
    **v2 = 1;
  if (v1[14006] < 0)
    goto LABEL_1322;
  if (!v1[14006])
    **v2 = 1;
  if (v1[14046] < 0)
    goto LABEL_1322;
  if (!v1[14046])
    **v2 = 1;
  if (v1[14086] < 0)
    goto LABEL_1322;
  if (!v1[14086])
    **v2 = 1;
  if (v1[14126] < 0)
    goto LABEL_1322;
  if (!v1[14126])
    **v2 = 1;
  if (v1[14166] < 0)
    goto LABEL_1322;
  if (!v1[14166])
    **v2 = 1;
  if (v1[14206] < 0)
    goto LABEL_1322;
  if (!v1[14206])
    **v2 = 1;
  if (v1[14246] < 0)
    goto LABEL_1322;
  if (!v1[14246])
    **v2 = 1;
  if (v1[14286] < 0)
    goto LABEL_1322;
  if (!v1[14286])
    **v2 = 1;
  if (v1[14326] < 0)
    goto LABEL_1322;
  if (!v1[14326])
    **v2 = 1;
  if (v1[14366] < 0)
    goto LABEL_1322;
  if (!v1[14366])
    **v2 = 1;
  if (v1[14406] < 0)
    goto LABEL_1322;
  if (!v1[14406])
    **v2 = 1;
  if (v1[14446] < 0)
    goto LABEL_1322;
  if (!v1[14446])
    **v2 = 1;
  if (v1[14486] < 0)
    goto LABEL_1322;
  if (!v1[14486])
    **v2 = 1;
  if (v1[14526] < 0)
    goto LABEL_1322;
  if (!v1[14526])
    **v2 = 1;
  if (v1[14566] < 0)
    goto LABEL_1322;
  if (!v1[14566])
    **v2 = 1;
  if (v1[14606] < 0)
    goto LABEL_1322;
  if (!v1[14606])
    **v2 = 1;
  if (v1[14646] < 0)
    goto LABEL_1322;
  if (!v1[14646])
    **v2 = 1;
  if (v1[14686] < 0)
    goto LABEL_1322;
  if (!v1[14686])
    **v2 = 1;
  if (v1[14726] < 0)
    goto LABEL_1322;
  if (!v1[14726])
    **v2 = 1;
  if (v1[14766] < 0)
    goto LABEL_1322;
  if (!v1[14766])
    **v2 = 1;
  if (v1[14806] < 0)
    goto LABEL_1322;
  if (!v1[14806])
    **v2 = 1;
  if (v1[14846] < 0)
    goto LABEL_1322;
  if (!v1[14846])
    **v2 = 1;
  if (v1[14886] < 0)
    goto LABEL_1322;
  if (!v1[14886])
    **v2 = 1;
  if (v1[14926] < 0)
    goto LABEL_1322;
  if (!v1[14926])
    **v2 = 1;
  if (v1[14966] < 0)
    goto LABEL_1322;
  if (!v1[14966])
    **v2 = 1;
  if (v1[15006] < 0)
    goto LABEL_1322;
  if (!v1[15006])
    **v2 = 1;
  if (v1[15046] < 0)
    goto LABEL_1322;
  if (!v1[15046])
    **v2 = 1;
  if (v1[15086] < 0)
    goto LABEL_1322;
  if (!v1[15086])
    **v2 = 1;
  if (v1[15126] < 0)
    goto LABEL_1322;
  if (!v1[15126])
    **v2 = 1;
  if (v1[15166] < 0)
    goto LABEL_1322;
  if (!v1[15166])
    **v2 = 1;
  if (v1[15206] < 0)
    goto LABEL_1322;
  if (!v1[15206])
    **v2 = 1;
  if (v1[15246] < 0)
    goto LABEL_1322;
  if (!v1[15246])
    **v2 = 1;
  if (v1[15286] < 0)
    goto LABEL_1322;
  if (!v1[15286])
    **v2 = 1;
  if (v1[15326] < 0)
    goto LABEL_1322;
  if (!v1[15326])
    **v2 = 1;
  if (v1[15366] < 0)
    goto LABEL_1322;
  if (!v1[15366])
    **v2 = 1;
  if (v1[15406] < 0)
    goto LABEL_1322;
  if (!v1[15406])
    **v2 = 1;
  if (v1[15446] < 0)
    goto LABEL_1322;
  if (!v1[15446])
    **v2 = 1;
  if (v1[15486] < 0)
    goto LABEL_1322;
  if (!v1[15486])
    **v2 = 1;
  if (v1[15526] < 0)
    goto LABEL_1322;
  if (!v1[15526])
    **v2 = 1;
  if (v1[15566] < 0)
    goto LABEL_1322;
  if (!v1[15566])
    **v2 = 1;
  if (v1[15606] < 0)
    goto LABEL_1322;
  if (!v1[15606])
    **v2 = 1;
  if (v1[15646] < 0)
    goto LABEL_1322;
  if (!v1[15646])
    **v2 = 1;
  if (v1[15686] < 0)
    goto LABEL_1322;
  if (!v1[15686])
    **v2 = 1;
  if (v1[15726] < 0)
    goto LABEL_1322;
  if (!v1[15726])
    **v2 = 1;
  if (v1[15766] < 0)
    goto LABEL_1322;
  if (!v1[15766])
    **v2 = 1;
  if (v1[15806] < 0)
    goto LABEL_1322;
  if (!v1[15806])
    **v2 = 1;
  if (v1[15846] < 0)
    goto LABEL_1322;
  if (!v1[15846])
    **v2 = 1;
  if (v1[15886] < 0)
    goto LABEL_1322;
  if (!v1[15886])
    **v2 = 1;
  if (v1[15926] < 0)
    goto LABEL_1322;
  if (!v1[15926])
    **v2 = 1;
  if (v1[15966] < 0)
    goto LABEL_1322;
  if (!v1[15966])
    **v2 = 1;
  if (v1[16006] < 0)
    goto LABEL_1322;
  if (!v1[16006])
    **v2 = 1;
  if (v1[16046] < 0)
    goto LABEL_1322;
  if (!v1[16046])
    **v2 = 1;
  if (v1[16086] < 0)
    goto LABEL_1322;
  if (!v1[16086])
    **v2 = 1;
  if (v1[16126] < 0)
    goto LABEL_1322;
  if (!v1[16126])
    **v2 = 1;
  if (v1[16166] < 0)
    goto LABEL_1322;
  if (!v1[16166])
    **v2 = 1;
  if (v1[16206] < 0)
    goto LABEL_1322;
  if (!v1[16206])
    **v2 = 1;
  if (v1[16246] < 0)
    goto LABEL_1322;
  if (!v1[16246])
    **v2 = 1;
  if (v1[16286] < 0)
    goto LABEL_1322;
  if (!v1[16286])
    **v2 = 1;
  if (v1[16326] < 0)
    goto LABEL_1322;
  if (!v1[16326])
    **v2 = 1;
  if (v1[16366] < 0)
    goto LABEL_1322;
  if (!v1[16366])
    **v2 = 1;
  if (v1[16406] < 0)
    goto LABEL_1322;
  if (!v1[16406])
    **v2 = 1;
  v7 = v1[16446];
  if (v7 < 0)
    goto LABEL_1322;
  v8 = v1 + 16486;
  if (!v7)
    **v2 = 1;
  if (*v8 < 0)
    goto LABEL_1322;
  if (!*v8)
    **v2 = 1;
  if (v8[40] < 0)
    goto LABEL_1322;
  if (!v8[40])
    **v2 = 1;
  if (v8[80] < 0)
    goto LABEL_1322;
  if (!v8[80])
    **v2 = 1;
  if (v8[120] < 0)
    goto LABEL_1322;
  if (!v8[120])
    **v2 = 1;
  if (v8[160] < 0)
    goto LABEL_1322;
  if (!v8[160])
    **v2 = 1;
  if (v8[200] < 0)
    goto LABEL_1322;
  if (!v8[200])
    **v2 = 1;
  if (v8[240] < 0)
    goto LABEL_1322;
  if (!v8[240])
    **v2 = 1;
  if (v8[280] < 0)
    goto LABEL_1322;
  if (!v8[280])
    **v2 = 1;
  if (v8[320] < 0)
    goto LABEL_1322;
  if (!v8[320])
    **v2 = 1;
  if (v8[360] < 0)
    goto LABEL_1322;
  if (!v8[360])
    **v2 = 1;
  if (v8[400] < 0)
    goto LABEL_1322;
  if (!v8[400])
    **v2 = 1;
  if (v8[440] < 0)
    goto LABEL_1322;
  if (!v8[440])
    **v2 = 1;
  if (v8[480] < 0)
    goto LABEL_1322;
  if (!v8[480])
    **v2 = 1;
  if (v8[520] < 0)
    goto LABEL_1322;
  if (!v8[520])
    **v2 = 1;
  if (v8[560] < 0)
    goto LABEL_1322;
  if (!v8[560])
    **v2 = 1;
  if (v8[600] < 0)
    goto LABEL_1322;
  if (!v8[600])
    **v2 = 1;
  if (v8[640] < 0)
    goto LABEL_1322;
  if (!v8[640])
    **v2 = 1;
  if (v8[680] < 0)
    goto LABEL_1322;
  if (!v8[680])
    **v2 = 1;
  if (v8[720] < 0)
    goto LABEL_1322;
  if (!v8[720])
    **v2 = 1;
  if (v8[760] < 0)
    goto LABEL_1322;
  if (!v8[760])
    **v2 = 1;
  if (v8[800] < 0)
    goto LABEL_1322;
  if (!v8[800])
    **v2 = 1;
  if (v8[840] < 0)
    goto LABEL_1322;
  if (!v8[840])
    **v2 = 1;
  if (v8[880] < 0)
    goto LABEL_1322;
  if (!v8[880])
    **v2 = 1;
  if (v8[920] < 0)
    goto LABEL_1322;
  if (!v8[920])
    **v2 = 1;
  if (v8[960] < 0)
    goto LABEL_1322;
  if (!v8[960])
    **v2 = 1;
  if (v8[1000] < 0)
    goto LABEL_1322;
  if (!v8[1000])
    **v2 = 1;
  if (v8[1040] < 0)
    goto LABEL_1322;
  if (!v8[1040])
    **v2 = 1;
  if (v8[1080] < 0)
    goto LABEL_1322;
  if (!v8[1080])
    **v2 = 1;
  if (v8[1120] < 0)
    goto LABEL_1322;
  if (!v8[1120])
    **v2 = 1;
  if (v8[1160] < 0)
    goto LABEL_1322;
  if (!v8[1160])
    **v2 = 1;
  if (v8[1200] < 0)
    goto LABEL_1322;
  if (!v8[1200])
    **v2 = 1;
  if (v8[1240] < 0)
    goto LABEL_1322;
  if (!v8[1240])
    **v2 = 1;
  if (v8[1280] < 0)
    goto LABEL_1322;
  if (!v8[1280])
    **v2 = 1;
  if (v8[1320] < 0)
    goto LABEL_1322;
  if (!v8[1320])
    **v2 = 1;
  if (v8[1360] < 0)
    goto LABEL_1322;
  if (!v8[1360])
    **v2 = 1;
  if (v8[1400] < 0)
    goto LABEL_1322;
  if (!v8[1400])
    **v2 = 1;
  if (v8[1440] < 0)
    goto LABEL_1322;
  if (!v8[1440])
    **v2 = 1;
  if (v8[1480] < 0)
    goto LABEL_1322;
  if (!v8[1480])
    **v2 = 1;
  if (v8[1520] < 0)
    goto LABEL_1322;
  if (!v8[1520])
    **v2 = 1;
  if (v8[1560] < 0)
    goto LABEL_1322;
  if (!v8[1560])
    **v2 = 1;
  if (v8[1600] < 0)
    goto LABEL_1322;
  if (!v8[1600])
    **v2 = 1;
  if (v8[1640] < 0)
    goto LABEL_1322;
  if (!v8[1640])
    **v2 = 1;
  if (v8[1680] < 0)
    goto LABEL_1322;
  if (!v8[1680])
    **v2 = 1;
  if (v8[1720] < 0)
    goto LABEL_1322;
  if (!v8[1720])
    **v2 = 1;
  if (v8[1760] < 0)
    goto LABEL_1322;
  if (!v8[1760])
    **v2 = 1;
  if (v8[1800] < 0)
    goto LABEL_1322;
  if (!v8[1800])
    **v2 = 1;
  if (v8[1840] < 0)
    goto LABEL_1322;
  if (!v8[1840])
    **v2 = 1;
  if (v8[1880] < 0)
    goto LABEL_1322;
  if (!v8[1880])
    **v2 = 1;
  if (v8[1920] < 0)
    goto LABEL_1322;
  if (!v8[1920])
    **v2 = 1;
  if (v8[1960] < 0)
    goto LABEL_1322;
  if (!v8[1960])
    **v2 = 1;
  if (v8[2000] < 0)
    goto LABEL_1322;
  if (!v8[2000])
    **v2 = 1;
  if (v8[2040] < 0)
    goto LABEL_1322;
  if (!v8[2040])
    **v2 = 1;
  if (v8[2080] < 0)
    goto LABEL_1322;
  if (!v8[2080])
    **v2 = 1;
  if (v8[2120] < 0)
    goto LABEL_1322;
  if (!v8[2120])
    **v2 = 1;
  if (v8[2160] < 0)
    goto LABEL_1322;
  if (!v8[2160])
    **v2 = 1;
  if (v8[2200] < 0)
    goto LABEL_1322;
  if (!v8[2200])
    **v2 = 1;
  if (v8[2240] < 0)
    goto LABEL_1322;
  if (!v8[2240])
    **v2 = 1;
  if (v8[2280] < 0)
    goto LABEL_1322;
  if (!v8[2280])
    **v2 = 1;
  if (v8[2320] < 0)
    goto LABEL_1322;
  if (!v8[2320])
    **v2 = 1;
  if (v8[2360] < 0)
    goto LABEL_1322;
  if (!v8[2360])
    **v2 = 1;
  if (v8[2400] < 0)
    goto LABEL_1322;
  if (!v8[2400])
    **v2 = 1;
  if (v8[2440] < 0)
    goto LABEL_1322;
  if (!v8[2440])
    **v2 = 1;
  if (v8[2480] < 0)
    goto LABEL_1322;
  if (!v8[2480])
    **v2 = 1;
  if (v8[2520] < 0)
    goto LABEL_1322;
  if (!v8[2520])
    **v2 = 1;
  if (v8[2560] < 0)
    goto LABEL_1322;
  if (!v8[2560])
    **v2 = 1;
  if (v8[2600] < 0)
    goto LABEL_1322;
  if (!v8[2600])
    **v2 = 1;
  if (v8[2640] < 0)
    goto LABEL_1322;
  if (!v8[2640])
    **v2 = 1;
  if (v8[2680] < 0)
    goto LABEL_1322;
  if (!v8[2680])
    **v2 = 1;
  if (v8[2720] < 0)
    goto LABEL_1322;
  if (!v8[2720])
    **v2 = 1;
  if (v8[2760] < 0)
    goto LABEL_1322;
  if (!v8[2760])
    **v2 = 1;
  if (v8[2800] < 0)
    goto LABEL_1322;
  if (!v8[2800])
    **v2 = 1;
  if (v8[2840] < 0)
    goto LABEL_1322;
  if (!v8[2840])
    **v2 = 1;
  if (v8[2880] < 0)
    goto LABEL_1322;
  if (!v8[2880])
    **v2 = 1;
  if (v8[2920] < 0)
    goto LABEL_1322;
  if (!v8[2920])
    **v2 = 1;
  if (v8[2960] < 0)
    goto LABEL_1322;
  if (!v8[2960])
    **v2 = 1;
  if (v8[3000] < 0)
    goto LABEL_1322;
  if (!v8[3000])
    **v2 = 1;
  if (v8[3040] < 0)
    goto LABEL_1322;
  if (!v8[3040])
    **v2 = 1;
  if (v8[3080] < 0)
    goto LABEL_1322;
  if (!v8[3080])
    **v2 = 1;
  if (v8[3120] < 0)
    goto LABEL_1322;
  if (!v8[3120])
    **v2 = 1;
  if (v8[3160] < 0)
    goto LABEL_1322;
  if (!v8[3160])
    **v2 = 1;
  if (v8[3200] < 0)
    goto LABEL_1322;
  if (!v8[3200])
    **v2 = 1;
  if (v8[3240] < 0)
    goto LABEL_1322;
  if (!v8[3240])
    **v2 = 1;
  if (v8[3280] < 0)
    goto LABEL_1322;
  if (!v8[3280])
    **v2 = 1;
  if (v8[3320] < 0)
    goto LABEL_1322;
  if (!v8[3320])
    **v2 = 1;
  if (v8[3360] < 0)
    goto LABEL_1322;
  if (!v8[3360])
    **v2 = 1;
  if (v8[3400] < 0)
    goto LABEL_1322;
  if (!v8[3400])
    **v2 = 1;
  if (v8[3440] < 0)
    goto LABEL_1322;
  if (!v8[3440])
    **v2 = 1;
  if (v8[3480] < 0)
    goto LABEL_1322;
  if (!v8[3480])
    **v2 = 1;
  if (v8[3520] < 0)
    goto LABEL_1322;
  if (!v8[3520])
    **v2 = 1;
  if (v8[3560] < 0)
    goto LABEL_1322;
  if (!v8[3560])
    **v2 = 1;
  if (v8[3600] < 0)
    goto LABEL_1322;
  if (!v8[3600])
    **v2 = 1;
  if (v8[3640] < 0)
    goto LABEL_1322;
  if (!v8[3640])
    **v2 = 1;
  if (v8[3680] < 0)
    goto LABEL_1322;
  if (!v8[3680])
    **v2 = 1;
  if (v8[3720] < 0)
    goto LABEL_1322;
  if (!v8[3720])
    **v2 = 1;
  if (v8[3760] < 0)
    goto LABEL_1322;
  if (!v8[3760])
    **v2 = 1;
  if (v8[3800] < 0)
    goto LABEL_1322;
  if (!v8[3800])
    **v2 = 1;
  if (v8[3840] < 0)
    goto LABEL_1322;
  if (!v8[3840])
    **v2 = 1;
  if (v8[3880] < 0)
    goto LABEL_1322;
  if (!v8[3880])
    **v2 = 1;
  if (v8[3920] < 0)
    goto LABEL_1322;
  if (!v8[3920])
    **v2 = 1;
  v9 = v8[3960];
  if (v9 < 0)
    goto LABEL_1322;
  result = 1;
  if (v9)
    return result;
  v11 = 1;
LABEL_1323:
  **v2 = v11;
  return result;
}

void sub_223955BA4()
{
  JUMPOUT(0x227684CE8);
}

_QWORD *sub_223955BB8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24EC5D148;
  result[1] = v3;
  return result;
}

uint64_t sub_223955BEC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24EC5D148;
  a2[1] = v2;
  return result;
}

size_t sub_223955C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  size_t v9;
  const char *v10;
  unsigned __int8 v11;
  const char *v12;
  size_t v13;
  const char *v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *p_p;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  size_t v22;
  std::__shared_weak_count_vtbl *v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  void *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  size_t result;
  size_t v44;
  char *v45;
  char *v46;
  int8x16_t v47;
  float32x4_t v48;
  float32x2_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x2_t v52;
  int8x16_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  float32x4_t v59;
  int8x16_t v60;
  int8x16_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  int32x4_t v65;
  int8x16_t v66;
  float32x4_t v67;
  uint64_t v68;
  float32x4_t v69;
  float32x4_t v70;
  _DWORD *v71;
  float32x4_t v72;
  int8x16_t v73;
  int8x16_t v74;
  float32x2_t v75;
  int16x4_t v76;
  int8x16_t v77;
  float32x4_t v78;
  int32x2_t v79;
  BOOL v80;
  BOOL v81;
  float32x4_t v82;
  const float *v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t *v89;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep rep;
  _BYTE *v91;
  void **v92;
  const char *v93;
  _QWORD **v94;
  const char *v95;
  uint64_t v96;
  std::__shared_weak_count *v97;
  unsigned __int8 v98;
  _BYTE v99[24];
  float v100;
  uint64_t v101;
  __int32 v102;
  _QWORD v103[4];
  float32x2_t v104;
  unsigned int v105;
  int32x2_t v106;
  unsigned int v107;
  uint64_t v108[5];
  char v109;
  void *object[2];
  size_t v111;
  unint64_t v112;
  int v113;
  char v114;
  __int128 __p;
  unint64_t v116;
  uint64_t v117;
  int v118;
  char v119;
  char v120;
  uint64_t v121;
  int v122;
  char v123;
  char v124;
  uint64_t v125;
  int v126;
  char v127;
  char v128;
  uint64_t v129;
  int v130;
  char v131;
  char v132;
  uint64_t v133;
  int v134;
  char v135;
  char v136;
  uint64_t v137;
  int v138;
  char v139;
  char v140;
  uint64_t v141;
  int v142;
  char v143;
  char v144;
  uint64_t v145;
  int v146;
  char v147;
  char v148;
  uint64_t v149;
  int v150;
  char v151;
  char v152;
  uint64_t v153;
  int v154;
  char v155;
  char v156;
  uint64_t v157;
  int v158;
  char v159;
  char v160;
  int v161;
  uint64_t v162;
  char v163;
  char v164;
  uint64_t v165;
  int v166;
  char v167;
  char v168;
  int v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  int v174;
  char v175;
  char v176;
  int v177;
  uint64_t v178;
  char v179;
  char v180;
  uint64_t v181;
  int v182;
  char v183;
  char v184;
  int v185;
  uint64_t v186;
  char v187;
  char v188;
  uint64_t v189;
  int v190;
  char v191;
  char v192;
  int v193;
  uint64_t v194;
  char v195;
  char v196;
  uint64_t v197;
  int v198;
  char v199;
  char v200;
  int v201;
  uint64_t v202;
  char v203;
  char v204;
  uint64_t v205;
  int v206;
  char v207;
  char v208;
  int v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD v214[4];
  float32x2_t *v215;
  char v216;
  float32x2_t *v217;
  _QWORD v218[3];
  _BYTE v219[24];
  uint64_t v220;

  v220 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a2 + 8))
    goto LABEL_70;
  sub_223919B38(v108);
  if (**(int **)(v108[0] + 56) > 4)
    goto LABEL_70;
  v4 = *(unsigned __int8 *)(v108[0] + 72);
  v5 = sub_22322F254(v108[0], "OSLogSurrogateAppender", 1, 0);
  v6 = v5;
  if (!v4 && v5 == 0)
    goto LABEL_70;
  v89 = v108;
  rep = std::chrono::steady_clock::now().__d_.__rep_;
  v91 = (_BYTE *)std::chrono::system_clock::now().__d_.__rep_;
  LODWORD(v92) = 4;
  v93 = "unknown file";
  LODWORD(v94) = 114;
  v96 = 0;
  v97 = 0;
  v95 = "unknown function";
  v8 = v108[0];
  if (*(char *)(v108[0] + 39) < 0)
  {
    v10 = *(const char **)(v108[0] + 16);
    v9 = *(_QWORD *)(v108[0] + 24);
  }
  else
  {
    v9 = *(unsigned __int8 *)(v108[0] + 39);
    v10 = (const char *)(*v89 + 16);
  }
  v86 = *v89 + 16;
  v11 = atomic_load((unsigned __int8 *)&qword_255788F58);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_255788F58))
  {
    sub_224568628((uint64_t)object);
    if ((_BYTE)v112)
    {
      *(_OWORD *)byte_255788F40 = *(_OWORD *)object;
      *(_QWORD *)&byte_255788F40[16] = v111;
    }
    else
    {
      byte_255788F40[23] = 14;
      strcpy(byte_255788F40, "com.apple.cv3d");
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_255788F40, &dword_22314D000);
    __cxa_guard_release(&qword_255788F58);
  }
  if (byte_255788F40[23] >= 0)
    v12 = byte_255788F40;
  else
    v12 = *(const char **)byte_255788F40;
  if (byte_255788F40[23] >= 0)
    v13 = byte_255788F40[23];
  else
    v13 = *(_QWORD *)&byte_255788F40[8];
  v14 = v10;
  object[0] = os_log_create(v12, v10);
  v15 = &object[1];
  if (v13 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v13 >= 0x17)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v16 = v13 | 7;
    v17 = v16 + 1;
    v15 = (void **)operator new(v16 + 1);
    v111 = v13;
    v112 = v17 | 0x8000000000000000;
    object[1] = v15;
    goto LABEL_24;
  }
  HIBYTE(v112) = v13;
  if (v13)
LABEL_24:
    memmove(v15, v12, v13);
  *((_BYTE *)v15 + v13) = 0;
  LOBYTE(v113) = 1;
  p_p = &__p;
  if (v9 > 0x7FFFFFFFFFFFFFF7)
    sub_22316DBC0();
  if (v9 >= 0x17)
  {
    v19 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v19 = v9 | 7;
    v20 = v19 + 1;
    p_p = (__int128 *)operator new(v19 + 1);
    *((_QWORD *)&__p + 1) = v9;
    v116 = v20 | 0x8000000000000000;
    *(_QWORD *)&__p = p_p;
  }
  else
  {
    HIBYTE(v116) = v9;
    if (!v9)
      goto LABEL_33;
  }
  memmove(p_p, v14, v9);
LABEL_33:
  *((_BYTE *)p_p + v9) = 0;
  LOBYTE(v117) = 1;
  v21 = object[0];
  if (SHIBYTE(v116) < 0)
    operator delete((void *)__p);
  if ((_BYTE)v113 && SHIBYTE(v112) < 0)
    operator delete(object[1]);
  if (object[0])
    os_release(object[0]);
  if (v6 && *(_QWORD *)(v6 + 24))
  {
    v22 = _os_log_pack_size();
    v23 = (std::__shared_weak_count_vtbl *)operator new(v22, (std::align_val_t)8uLL);
    v24 = (std::__shared_weak_count *)operator new();
    v25 = v24;
    v24->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    v24->__vftable = (std::__shared_weak_count_vtbl *)&off_24EC1F7F0;
    v24->__shared_weak_owners_ = 0;
    v24[1].__vftable = v23;
    do
      v27 = __ldxr(p_shared_owners);
    while (__stxr(v27 + 1, p_shared_owners));
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v25);
    }
    *(_WORD *)_os_log_pack_fill() = 0;
    v29 = (_QWORD *)operator new();
    v30 = *(unsigned __int8 *)(v8 + 39);
    v31 = v86;
    if ((v30 & 0x80u) != 0)
    {
      v31 = *(_QWORD *)(v8 + 16);
      v30 = *(_QWORD *)(v8 + 24);
    }
    *v29 = v23;
    v29[1] = v23;
    v29[2] = v25;
    v29[3] = 0;
    v29[4] = 0;
    v29[5] = v31;
    v29[6] = v30;
    *((_BYTE *)v29 + 56) = 16;
    object[0] = v29;
    (*(void (**)(_QWORD, void **))(**(_QWORD **)(v6 + 24) + 40))(*(_QWORD *)(v6 + 24), object);
    v32 = object[0];
    object[0] = 0;
    if (v32)
    {
      v33 = (std::__shared_weak_count *)*((_QWORD *)v32 + 4);
      if (v33)
      {
        v34 = (unint64_t *)&v33->__shared_owners_;
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      v36 = (std::__shared_weak_count *)*((_QWORD *)v32 + 2);
      if (v36)
      {
        v37 = (unint64_t *)&v36->__shared_owners_;
        do
          v38 = __ldaxr(v37);
        while (__stlxr(v38 - 1, v37));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      MEMORY[0x227684CE8](v32, 0x10F0C40B62ED6C6);
    }
  }
  else
  {
    os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);
    LOWORD(object[0]) = 0;
    v39 = (void *)_os_log_send_and_compose_impl();
    if (v39)
      free(v39);
  }
  if (v4)
  {
    sub_22322C138((uint64_t)&v89, "Only coarse granularity volume queries are supported. Other granularity queries will be treated as coarse granularity queries.");
    sub_223182C08((uint64_t)&v89);
  }
  sub_223182C08((uint64_t)&v89);
  v40 = v97;
  if (v97)
  {
    v41 = (unint64_t *)&v97->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
LABEL_70:
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  v44 = result;
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
      sub_22316E078();
    v45 = (char *)operator new(result);
    *a3 = v45;
    v46 = &v45[v44];
    a3[2] = &v45[v44];
    bzero(v45, v44);
    v54 = 0;
    a3[1] = v46;
    do
    {
      v55 = *(_DWORD *)(a2 + 60) * v54;
      v56 = *(_QWORD *)(a2 + 32);
      v57 = v56 + 4 * v55;
      v49.i32[0] = *(_DWORD *)v57;
      v48.i32[0] = *(_DWORD *)(v56 + 4 * (v55 + 1));
      v47.i32[0] = *(_DWORD *)(v56 + 4 * (v55 + 2));
      v58 = *(_QWORD *)(a1 + 8);
      v50.i64[0] = *(_QWORD *)(v58 + 40148);
      v50.i32[2] = *(_DWORD *)(v58 + 40156);
      v51.i64[0] = *(_QWORD *)(v58 + 40164);
      v51.i32[2] = *(_DWORD *)(v58 + 40172);
      v52.i32[0] = *(_DWORD *)(v58 + 40188);
      v59.i64[0] = vzip1q_s32((int32x4_t)v50, (int32x4_t)v51).u64[0];
      v53.i64[0] = *(_QWORD *)(v58 + 40196);
      v53.i32[2] = *(_DWORD *)(v58 + 40204);
      v60 = (int8x16_t)vnegq_f32((float32x4_t)v53);
      v61 = (int8x16_t)vtrn2q_s32((int32x4_t)v50, (int32x4_t)v51);
      v61.i32[2] = HIDWORD(*(_QWORD *)(v58 + 40180));
      v62 = (float32x4_t)vzip2q_s32((int32x4_t)v50, (int32x4_t)v51);
      *(float32x2_t *)v63.f32 = vmls_laneq_f32(vmls_lane_f32(vmul_n_f32(*(float32x2_t *)v59.f32, *(float *)v60.i32), *(float32x2_t *)v61.i8, *(float32x2_t *)v53.i8, 1), *(float32x2_t *)v62.f32, (float32x4_t)v53, 2);
      v62.i32[2] = v52.i32[0];
      v63.i64[1] = __PAIR64__(1.0, vmla_f32(vmls_lane_f32(vmul_f32(*(float32x2_t *)(v58 + 40180), *(float32x2_t *)v60.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)(v58 + 40180), 1), *(float32x2_t *)v53.i8, 1), (float32x2_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL), v52).u32[0]);
      v59.i64[1] = *(_QWORD *)(v58 + 40180);
      v64.i32[3] = 0;
      v64.i32[0] = vdupq_lane_s32(*(int32x2_t *)&v61, 0).i32[3];
      *(uint64_t *)((char *)v64.i64 + 4) = vextq_s8(v61, v47, 4uLL).u64[0];
      v62.i64[1] = vdupq_laneq_s32((int32x4_t)v62, 2).u32[0];
      v65 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v59, COERCE_FLOAT(*(_OWORD *)(v58 + 40212))), v64, *(float32x2_t *)(v58 + 40212), 1), v62, *(float32x4_t *)(v58 + 40212), 2), v63, *(float32x4_t *)(v58 + 40212), 3);
      v51 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v59, COERCE_FLOAT(*(_OWORD *)(v58 + 40228))), v64, *(float32x2_t *)(v58 + 40228), 1), v62, *(float32x4_t *)(v58 + 40228), 2), v63, *(float32x4_t *)(v58 + 40228), 3);
      v66 = (int8x16_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v59, COERCE_FLOAT(*(_OWORD *)(v58 + 40244))), v64, *(float32x2_t *)(v58 + 40244), 1), v62, *(float32x4_t *)(v58 + 40244), 2), v63, *(float32x4_t *)(v58 + 40244), 3);
      v67 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v59, COERCE_FLOAT(*(_OWORD *)(v58 + 40260))), v64, *(float32x2_t *)(v58 + 40260), 1), v62, *(float32x4_t *)(v58 + 40260), 2), v63, *(float32x4_t *)(v58 + 40260), 3);
      v63.i64[0] = vtrn2q_s32(v65, (int32x4_t)v51).u64[0];
      v50 = (float32x4_t)vzip2q_s32(v65, (int32x4_t)v51);
      v53 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v63.f32, 0);
      v68 = v67.i64[0];
      *(int32x2_t *)v51.f32 = vzip1_s32(*(int32x2_t *)v65.i8, *(int32x2_t *)v51.f32);
      *(float32x2_t *)v69.f32 = vmla_n_f32(vmla_lane_f32(vmul_n_f32(*(float32x2_t *)v51.f32, COERCE_FLOAT(v68 ^ 0x80000000)), *(float32x2_t *)v63.f32, (float32x2_t)(v68 ^ 0x8000000080000000), 1), *(float32x2_t *)v50.f32, COERCE_FLOAT(v67.i32[2] ^ 0x80000000));
      v60.i64[0] = vextq_s8(v66, v66, 8uLL).u64[0];
      v52 = (float32x2_t)vextq_s8(v53, (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v63.f32, 1), 0xCuLL).u64[0];
      *(float32x2_t *)&v69.u32[2] = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v66.i8, (float32x2_t)(v68 ^ 0x8000000080000000)), (float32x2_t)vdup_lane_s32((int32x2_t)(v68 ^ 0x8000000080000000), 1), *(float32x2_t *)v66.i8, 1), (float32x2_t)(v67.i64[1] ^ 0xFFFFFFFF80000000), *(float32x2_t *)v60.i8);
      *(float32x2_t *)v70.f32 = vmla_n_f32(vmla_n_f32(vmul_n_f32(*(float32x2_t *)v51.f32, *(float *)v57), v52, v48.f32[0]), *(float32x2_t *)v50.f32, *(float *)v47.i32);
      v49 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v66.i8, v49), *(float32x2_t *)v48.f32, *(float32x2_t *)v66.i8, 1), *(float32x2_t *)v47.i8, *(float32x2_t *)v60.i8);
      *(float32x2_t *)&v70.u32[2] = v49;
      v47.i32[0] = *(_DWORD *)(v57 + 12);
      v48 = vaddq_f32(v70, v69);
      v102 = v48.i32[2];
      v101 = v48.i64[0];
      if (*(_BYTE *)(v58 + 297))
      {
        v71 = *(_DWORD **)(v58 + 40784);
        if (v71)
        {
          v100 = *(float *)v47.i32 * *(float *)v47.i32;
          v72 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v47.i8, 0);
          v73 = (int8x16_t)vsubq_f32(v48, v72);
          v74 = (int8x16_t)vaddq_f32(v72, v48);
          v75 = (float32x2_t)vextq_s8(v73, v73, 4uLL).u64[0];
          v73.i32[3] = v73.i32[0];
          v76 = vmovn_s32(vcgtq_f32((float32x4_t)xmmword_224656660, (float32x4_t)v73));
          v76.i16[3] = vmovn_s32(vcgtq_f32(*(float32x4_t *)&v73, (float32x4_t)xmmword_224656660)).i16[3];
          v77 = vbslq_s8((int8x16_t)vmovl_s16(v76), v73, (int8x16_t)xmmword_224656660);
          v78 = (float32x4_t)v77;
          v78.i32[3] = v74.i32[0];
          v50 = (float32x4_t)vextq_s8(v74, v74, 4uLL);
          v74.i32[3] = v74.i32[0];
          v51 = (float32x4_t)v74;
          v51.i32[3] = v77.i32[3];
          *(int8x16_t *)v99 = vbslq_s8((int8x16_t)vcgtq_f32(v78, v51), v74, v77);
          *(float32x2_t *)v74.i8 = vmaxnm_f32(v75, (float32x2_t)0x80000000800000);
          v79 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)v50.f32, *(float32x2_t *)v74.i8), *(int8x8_t *)v50.f32, *(int8x8_t *)v74.i8);
          *(int32x2_t *)&v99[16] = v79;
          v98 = 0;
          v80 = (*(_DWORD *)v99 & 0x7FFFFFFFu) < 0x7F800000;
          if ((*(_DWORD *)v99 & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          {
            v80 = (*(_DWORD *)&v99[4] & 0x7FFFFFFFu) < 0x7F800000;
            if ((*(_DWORD *)&v99[4] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              v80 = (*(_DWORD *)&v99[8] & 0x7FFFFFFFu) < 0x7F800000;
          }
          if (!v80
            && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.h", 173, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
          {
LABEL_94:
            abort();
          }
          v79.i32[0] = v71[79];
          v48 = vmulq_n_f32(*(float32x4_t *)v99, *(float *)v79.i32);
          v49 = (float32x2_t)vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v48.f32));
          v104 = v49;
          v105 = vcvtms_s32_f32(v48.f32[2]);
          v81 = (*(_DWORD *)&v99[12] & 0x7FFFFFFFu) < 0x7F800000;
          if ((*(_DWORD *)&v99[12] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
          {
            v81 = (*(_DWORD *)&v99[16] & 0x7FFFFFFFu) < 0x7F800000;
            if ((*(_DWORD *)&v99[16] & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              v81 = (*(_DWORD *)&v99[20] & 0x7FFFFFFFu) < 0x7F800000;
          }
          if (v81)
          {
            v82 = (float32x4_t)vdupq_lane_s32(v79, 0);
          }
          else
          {
            if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.h", 173, (uint64_t)"math::IsFinite(pos)", 19, (uint64_t)"Converting nan value to voxel position", 38, (void (*)(void **))sub_22457406C))
            {
              goto LABEL_94;
            }
            v83 = (const float *)(v71 + 79);
            v82 = vld1q_dup_f32(v83);
          }
          v48.i64[0] = *(_QWORD *)&v99[12];
          v48.i32[2] = *(_DWORD *)&v99[20];
          v47 = (int8x16_t)vmulq_f32(v82, v48);
          v106 = vadd_s32(vcvt_s32_f32(vrndm_f32(*(float32x2_t *)v47.i8)), (int32x2_t)0x100000001);
          v107 = vcvtms_s32_f32(*(float *)&v47.i32[2]) + 1;
          v219[0] = 0;
          v219[16] = 0;
          v103[0] = v58;
          v103[1] = &v101;
          v103[2] = &v100;
          v103[3] = &v98;
          v212 = 0;
          v213 = v103;
          LOBYTE(object[0]) = 1;
          v47.i32[1] = -1;
          v47.i64[1] = -1;
          *(void **)((char *)object + 4) = (void *)-1;
          HIDWORD(object[1]) = -1;
          LOBYTE(v111) = 8;
          BYTE4(v111) = 1;
          v112 = -1;
          v113 = -1;
          v114 = 8;
          LOBYTE(__p) = 1;
          *(_QWORD *)((char *)&__p + 4) = -1;
          HIDWORD(__p) = -1;
          LOBYTE(v116) = 8;
          BYTE4(v116) = 1;
          v117 = -1;
          v118 = -1;
          v119 = 8;
          v120 = 1;
          v121 = -1;
          v122 = -1;
          v123 = 8;
          v124 = 1;
          v125 = -1;
          v126 = -1;
          v127 = 8;
          v128 = 1;
          v129 = -1;
          v130 = -1;
          v131 = 8;
          v132 = 1;
          v133 = -1;
          v134 = -1;
          v135 = 8;
          v136 = 1;
          v137 = -1;
          v138 = -1;
          v139 = 8;
          v140 = 1;
          v141 = -1;
          v142 = -1;
          v143 = 8;
          v144 = 1;
          v145 = -1;
          v146 = -1;
          v147 = 8;
          v148 = 1;
          v149 = -1;
          v150 = -1;
          v151 = 8;
          v152 = 1;
          v153 = -1;
          v154 = -1;
          v155 = 8;
          v156 = 1;
          v157 = -1;
          v158 = -1;
          v159 = 8;
          v160 = 1;
          v161 = -1;
          v162 = -1;
          v163 = 8;
          v164 = 1;
          v165 = -1;
          v166 = -1;
          v167 = 8;
          v168 = 1;
          v169 = -1;
          v170 = -1;
          v171 = 8;
          v172 = 1;
          v173 = -1;
          v174 = -1;
          v175 = 8;
          v176 = 1;
          v177 = -1;
          v178 = -1;
          v179 = 8;
          v180 = 1;
          v181 = -1;
          v182 = -1;
          v183 = 8;
          v184 = 1;
          v185 = -1;
          v186 = -1;
          v187 = 8;
          v188 = 1;
          v189 = -1;
          v190 = -1;
          v191 = 8;
          v192 = 1;
          v193 = -1;
          v194 = -1;
          v195 = 8;
          v196 = 1;
          v197 = -1;
          v198 = -1;
          v199 = 8;
          v200 = 1;
          v201 = -1;
          v202 = -1;
          v203 = 8;
          v204 = 1;
          v205 = -1;
          v206 = -1;
          v207 = 8;
          v208 = 1;
          v209 = -1;
          v210 = -1;
          v211 = 8;
          v108[0] = (uint64_t)(v71 + 46);
          v108[1] = (uint64_t)v219;
          v108[2] = (uint64_t)&v212;
          v108[3] = (uint64_t)object;
          v108[4] = (uint64_t)&v109;
          v89 = &v212;
          rep = (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep)(v71 + 46);
          v91 = v219;
          v92 = object;
          v93 = &v109;
          v94 = &v213;
          v214[0] = v108;
          v214[1] = &v89;
          v214[2] = v71 + 46;
          v214[3] = &v215;
          v215 = &v104;
          v217 = &v104;
          v216 = 1;
          v84 = v71[90];
          if ((v84 & 0x80000000) == 0)
          {
            v109 = 0;
            v85 = v71[91];
            v218[0] = &v217;
            v218[1] = v214;
            v218[2] = &v216;
            sub_223956AE0((uint64_t)(v71 + 46), v85, v84, 0, (uint64_t)v218);
          }
          result = v98;
        }
        else
        {
          result = 2;
        }
      }
      else
      {
        result = sub_223CFEF24(v58 + 304, (uint64_t)&v101, *(double *)v47.i64, v48, *(double *)&v49, *(double *)v70.i64, v50);
      }
      *(_BYTE *)(*a3 + v54++) = result;
    }
    while (v44 != v54);
  }
  return result;
}

void sub_223956884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,std::__shared_weak_count *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *object,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53,char a54)
{
  std::__shared_weak_count *v55;
  unint64_t *p_shared_owners;
  unint64_t v57;

  __cxa_guard_abort(&qword_255788F58);
  sub_223182C08((uint64_t)&a17);
  v55 = a25;
  if (a25)
  {
    p_shared_owners = (unint64_t *)&a25->__shared_owners_;
    do
      v57 = __ldaxr(p_shared_owners);
    while (__stlxr(v57 - 1, p_shared_owners));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_223956A68(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZN"
                     "S3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_1"
                     "8IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_27OccupancyQuerySphereRequestEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProvid"
                                "erEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt"
                                "3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_2"
                                "7OccupancyQuerySphereRequestEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_27OccupancyQuerySphereRequestEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d5recon3vlm23CreateOccupancyProviderIZNS1_15OccupancyMapper23CreateOccupancyProviderEvE3$_0ZNS3_23CreateOccupancyProviderEvE3$_1ZNS3_23CreateOccupancyProviderEvE3$_2EENSt3__110unique_ptrINS0_18IOccupancyProviderENS7_14default_deleteIS9_EEEET_T0_T1_EUlRKNS0_27OccupancyQuerySphereRequestEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_223956AD4()
{
  return &unk_24EC5D1B8;
}

uint64_t sub_223956AE0(uint64_t a1, int a2, int a3, char a4, uint64_t a5)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  char v42;
  char v43;
  uint64_t v44;
  int v45;
  char v46;
  char v47;
  uint64_t v48;
  int v49;
  char v50;
  char v51;
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;
  int v57;
  char v58;
  char v59;
  uint64_t v60;
  int v61;
  char v62;
  char v63;
  uint64_t v64;
  int v65;
  char v66;
  char v67;
  uint64_t v68;
  int v69;
  char v70;
  char v71;
  uint64_t v72;
  int v73;
  char v74;
  char v75;
  uint64_t v76;
  int v77;
  char v78;
  char v79;
  uint64_t v80;
  int v81;
  char v82;
  char v83;
  uint64_t v84;
  int v85;
  char v86;
  char v87;
  uint64_t v88;
  int v89;
  char v90;
  char v91;
  int v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  int v97;
  char v98;
  char v99;
  int v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  int v105;
  char v106;
  char v107;
  int v108;
  uint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  int v113;
  char v114;
  char v115;
  int v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  int v121;
  char v122;
  char v123;
  int v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  int v129;
  char v130;
  char v131;
  int v132;
  uint64_t v133;
  char v134;
  char v135;
  uint64_t v136;
  int v137;
  char v138;
  char v139;
  int v140;
  uint64_t v141;
  char v142;
  _BYTE v143[12];
  uint64_t v144;
  int v145;

  v8 = a3 & 0xCFFFFFFF;
  v9 = *(_QWORD *)(a1 + 184) + 4488 * (a3 & 0xCFFFFFFF);
  v10 = *(_QWORD *)v9;
  *(_DWORD *)&v143[8] = *(_DWORD *)(v9 + 8);
  *(_QWORD *)v143 = v10;
  v11 = *(_QWORD *)(v9 + 12);
  v145 = *(_DWORD *)(v9 + 20);
  v144 = v11;
  v36[0] = 1;
  *(_QWORD *)&v36[4] = -1;
  v37 = -1;
  LOBYTE(v38) = 8;
  LOBYTE(v39) = 1;
  v40 = -1;
  v41 = -1;
  v42 = 8;
  v43 = 1;
  v44 = -1;
  v45 = -1;
  v46 = 8;
  v47 = 1;
  v48 = -1;
  v49 = -1;
  v50 = 8;
  v51 = 1;
  v52 = -1;
  v53 = -1;
  v54 = 8;
  v55 = 1;
  v56 = -1;
  v57 = -1;
  v58 = 8;
  v59 = 1;
  v60 = -1;
  v61 = -1;
  v62 = 8;
  v63 = 1;
  v64 = -1;
  v65 = -1;
  v66 = 8;
  v67 = 1;
  v68 = -1;
  v69 = -1;
  v70 = 8;
  v71 = 1;
  v72 = -1;
  v73 = -1;
  v74 = 8;
  v75 = 1;
  v76 = -1;
  v77 = -1;
  v78 = 8;
  v79 = 1;
  v80 = -1;
  v81 = -1;
  v82 = 8;
  v83 = 1;
  v84 = -1;
  v85 = -1;
  v86 = 8;
  v87 = 1;
  v88 = -1;
  v89 = -1;
  v90 = 8;
  v91 = 1;
  v92 = -1;
  v93 = -1;
  v94 = 8;
  v95 = 1;
  v96 = -1;
  v97 = -1;
  v98 = 8;
  v99 = 1;
  v100 = -1;
  v101 = -1;
  v102 = 8;
  v103 = 1;
  v104 = -1;
  v105 = -1;
  v106 = 8;
  v107 = 1;
  v108 = -1;
  v109 = -1;
  v110 = 8;
  v111 = 1;
  v112 = -1;
  v113 = -1;
  v114 = 8;
  v115 = 1;
  v116 = -1;
  v117 = -1;
  v118 = 8;
  v119 = 1;
  v120 = -1;
  v121 = -1;
  v122 = 8;
  v123 = 1;
  v124 = -1;
  v125 = -1;
  v126 = 8;
  v127 = 1;
  v128 = -1;
  v129 = -1;
  v130 = 8;
  v131 = 1;
  v132 = -1;
  v133 = -1;
  v134 = 8;
  v135 = 1;
  v136 = -1;
  v137 = -1;
  v138 = 8;
  v139 = 1;
  v140 = -1;
  v141 = -1;
  v142 = 8;
  result = sub_22395735C(a5, a4, a2, 0, (int32x2_t *)v143, v36);
  if ((_DWORD)result)
  {
    v13 = result;
    result = 1;
    if (a2)
    {
      if (v13 != 3)
      {
        v14 = (a2 - 1);
        if (!(_DWORD)v14)
        {
          v15 = 0;
          while (1)
          {
            v17 = byte_2246559E2[v15];
            v18 = *(_QWORD *)(a1 + 184);
            v19 = *(_DWORD *)(v18 + 4488 * v8 + 4 * v17 + 24);
            v20 = (v17 >> 2) & 1;
            v21 = (v17 >> 1) & 1;
            v22 = v17 & 1;
            if ((v19 & 0x80000000) != 0)
            {
              v16 = (v144 - *(_DWORD *)v143) >> 1;
              *(_DWORD *)v36 = *(_DWORD *)v143 + v16 * v20;
              *(_DWORD *)&v36[4] = *(_DWORD *)&v143[4] + v16 * v21;
              *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8] + v16 * v22;
              v37 = *(_DWORD *)v36 + v16;
              v38 = *(_DWORD *)&v36[4] + v16;
              v39 = *(_DWORD *)&v36[8] + v16;
              v34 = *(_OWORD *)a5;
              v35 = *(_QWORD *)(a5 + 16);
              result = sub_223958718(0, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
              if (!(_DWORD)result)
                return result;
            }
            else
            {
              v23 = (v144 - *(_DWORD *)v143) >> 1;
              *(_DWORD *)v36 = *(_DWORD *)v143 + v23 * v20;
              *(_DWORD *)&v36[4] = *(_DWORD *)&v143[4] + v23 * v21;
              *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8] + v23 * v22;
              v37 = *(_DWORD *)v36 + v23;
              v38 = *(_DWORD *)&v36[4] + v23;
              v39 = *(_DWORD *)&v36[8] + v23;
              result = sub_22395735C(a5, v13 == 2, 0, v19, (int32x2_t *)v36, (const void *)(v18 + 4488 * v8 + 540 * v17 + 68));
              if (!(_DWORD)result)
                return result;
            }
            if (++v15 == 8)
              return 1;
          }
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 24) & 0x80000000) != 0)
        {
          v24 = (v144 - *(_DWORD *)v143) >> 1;
          *(_QWORD *)v36 = *(_QWORD *)v143;
          *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8];
          v37 = v24 + *(_DWORD *)v143;
          v38 = *(_DWORD *)&v143[4] + v24;
          v39 = *(_DWORD *)&v143[8] + v24;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          if ((sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34) & 1) == 0)
            return 0;
        }
        else
        {
          v32 = *(_OWORD *)a5;
          v33 = *(_QWORD *)(a5 + 16);
          result = sub_223956AE0(a1, v14);
          if (!(_DWORD)result)
            return result;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 28) & 0x80000000) != 0)
        {
          v25 = (v144 - *(_DWORD *)v143) >> 1;
          *(_QWORD *)v36 = *(_QWORD *)v143;
          *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8] + v25;
          v37 = v25 + *(_DWORD *)v143;
          v38 = *(_DWORD *)&v143[4] + v25;
          v39 = *(_DWORD *)&v143[8] + v25 + v25;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v32 = *(_OWORD *)a5;
          v33 = *(_QWORD *)(a5 + 16);
          if ((sub_223956AE0(a1, v14) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 32) & 0x80000000) != 0)
        {
          v26 = (v144 - *(_DWORD *)v143) >> 1;
          *(_DWORD *)v36 = *(_DWORD *)v143;
          *(_DWORD *)&v36[4] = v26 + *(_DWORD *)&v143[4];
          *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8];
          v37 = v26 + *(_DWORD *)v143;
          v38 = v26 + *(_DWORD *)&v143[4] + v26;
          v39 = *(_DWORD *)&v143[8] + v26;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v32 = *(_OWORD *)a5;
          v33 = *(_QWORD *)(a5 + 16);
          if ((sub_223956AE0(a1, v14) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 36) & 0x80000000) != 0)
        {
          v27 = (v144 - *(_DWORD *)v143) >> 1;
          *(_DWORD *)v36 = *(_DWORD *)v143;
          *(_DWORD *)&v36[4] = v27 + *(_DWORD *)&v143[4];
          *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8] + v27;
          v37 = v27 + *(_DWORD *)v143;
          v38 = v27 + *(_DWORD *)&v143[4] + v27;
          v39 = *(_DWORD *)&v143[8] + v27 + v27;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v32 = *(_OWORD *)a5;
          v33 = *(_QWORD *)(a5 + 16);
          if ((sub_223956AE0(a1, v14) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 40) & 0x80000000) != 0)
        {
          v28 = (v144 - *(_DWORD *)v143) >> 1;
          *(_DWORD *)v36 = v28 + *(_DWORD *)v143;
          *(_QWORD *)&v36[4] = *(_QWORD *)&v143[4];
          v37 = v28 + *(_DWORD *)v143 + v28;
          v38 = *(_DWORD *)&v143[4] + v28;
          v39 = *(_DWORD *)&v143[8] + v28;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v32 = *(_OWORD *)a5;
          v33 = *(_QWORD *)(a5 + 16);
          if ((sub_223956AE0(a1, v14) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 44) & 0x80000000) != 0)
        {
          v29 = (v144 - *(_DWORD *)v143) >> 1;
          *(_DWORD *)v36 = v29 + *(_DWORD *)v143;
          *(_DWORD *)&v36[4] = *(_DWORD *)&v143[4];
          *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8] + v29;
          v37 = v29 + *(_DWORD *)v143 + v29;
          v38 = *(_DWORD *)&v143[4] + v29;
          v39 = *(_DWORD *)&v143[8] + v29 + v29;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
          if (!(_DWORD)result)
            return result;
        }
        else
        {
          v32 = *(_OWORD *)a5;
          v33 = *(_QWORD *)(a5 + 16);
          if ((sub_223956AE0(a1, v14) & 1) == 0)
            return 0;
        }
        if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 48) & 0x80000000) != 0)
        {
          v30 = (v144 - *(_DWORD *)v143) >> 1;
          *(_DWORD *)v36 = v30 + *(_DWORD *)v143;
          *(_DWORD *)&v36[4] = v30 + *(_DWORD *)&v143[4];
          *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8];
          v37 = v30 + *(_DWORD *)v143 + v30;
          v38 = v30 + *(_DWORD *)&v143[4] + v30;
          v39 = *(_DWORD *)&v143[8] + v30;
          v34 = *(_OWORD *)a5;
          v35 = *(_QWORD *)(a5 + 16);
          result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
          if (!(_DWORD)result)
            return result;
LABEL_39:
          if ((*(_DWORD *)(*(_QWORD *)(a1 + 184) + 4488 * v8 + 52) & 0x80000000) != 0)
          {
            v31 = (v144 - *(_DWORD *)v143) >> 1;
            *(_DWORD *)v36 = v31 + *(_DWORD *)v143;
            *(_DWORD *)&v36[4] = v31 + *(_DWORD *)&v143[4];
            *(_DWORD *)&v36[8] = *(_DWORD *)&v143[8] + v31;
            v37 = v31 + *(_DWORD *)v143 + v31;
            v38 = v31 + *(_DWORD *)&v143[4] + v31;
            v39 = *(_DWORD *)&v143[8] + v31 + v31;
            v34 = *(_OWORD *)a5;
            v35 = *(_QWORD *)(a5 + 16);
            result = sub_223958718(v14, (int32x2_t *)v36, v13 == 2, (uint64_t)&v34);
            if (!(_DWORD)result)
              return result;
          }
          else
          {
            v32 = *(_OWORD *)a5;
            v33 = *(_QWORD *)(a5 + 16);
            if ((sub_223956AE0(a1, v14) & 1) == 0)
              return 0;
          }
          return 1;
        }
        v32 = *(_OWORD *)a5;
        v33 = *(_QWORD *)(a5 + 16);
        if ((sub_223956AE0(a1, v14) & 1) != 0)
          goto LABEL_39;
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_22395735C(uint64_t a1, char a2, int a3, unsigned int a4, int32x2_t *a5, const void *a6)
{
  int v10;
  uint64_t v11;
  __int32 *v12;
  __int32 v13;
  __int32 v14;
  __int32 v15;
  __int32 v16;
  __int32 v17;
  __int32 v18;
  __int32 v19;
  __int32 v20;
  __int32 v21;
  __int32 v22;
  __int32 v23;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;
  _QWORD *v34;
  __int128 *v35;
  __int128 v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 *v41;
  __int128 v42;
  float32x2_t v43;
  float32x4_t v44;
  int8x8_t v45;
  int8x8_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  int8x8_t v51;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  int v55;
  float v56;
  float32x4_t v57;
  float32x4_t v58;
  int8x8_t v59;
  float32x4_t v60;
  uint64_t v61;
  int8x16_t v62;
  float32x2_t v63;
  char v64;
  int v65;
  float v66;
  float32x4_t v67;
  float32x4_t v68;
  int8x8_t v69;
  float32x4_t v70;
  int8x16_t v71;
  char v72;
  int v73;
  int v74;
  float32x4_t v75;
  float32x4_t v76;
  int *v77;
  _OWORD *v78;
  __int128 v79;
  int8x8_t v80;
  float32x4_t v81;
  int8x16_t v82;
  char v83;
  int v84;
  float32x4_t v85;
  float32x4_t v86;
  int8x8_t v87;
  float32x4_t v88;
  int8x16_t v89;
  char v90;
  __int32 v91;
  int v92;
  float32x4_t v93;
  float32x4_t v94;
  int8x8_t v95;
  float32x4_t v96;
  int8x16_t v97;
  char v98;
  int v99;
  float32x4_t v100;
  float32x4_t v101;
  int8x8_t v102;
  float32x4_t v103;
  int8x16_t v104;
  char v105;
  int v106;
  float32x4_t v107;
  int8x8_t v108;
  float32x4_t v109;
  int8x16_t v110;
  char v111;
  int v112;
  float32x4_t v113;
  int8x8_t v114;
  float32x4_t v115;
  int8x16_t v116;
  char v117;
  int v118;
  int v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x4_t v122;
  int8x8_t v123;
  float32x4_t v124;
  int8x16_t v125;
  char v126;
  int v127;
  int v128;
  float v129;
  float32x4_t v130;
  int8x8_t v131;
  float32x4_t v132;
  int8x16_t v133;
  char v134;
  int v135;
  float32x4_t v136;
  float32x4_t v137;
  int8x8_t v138;
  float32x4_t v139;
  int8x16_t v140;
  char v141;
  int v142;
  float32x4_t v143;
  float32x4_t v144;
  int8x8_t v145;
  float32x4_t v146;
  int8x16_t v147;
  char v148;
  int v149;
  float32x4_t v150;
  float32x4_t v151;
  int8x8_t v152;
  float32x4_t v153;
  int8x16_t v154;
  char v155;
  int v156;
  float32x4_t v157;
  float32x4_t v158;
  int8x8_t v159;
  float32x4_t v160;
  int8x16_t v161;
  char v162;
  int v163;
  int8x16_t v164;
  int8x8_t v165;
  float32x4_t v166;
  char v167;
  int v168;
  float32x4_t v169;
  int8x8_t v170;
  float32x4_t v171;
  int8x16_t v172;
  char v173;
  int v174;
  float32x4_t v175;
  float32x4_t v176;
  int8x8_t v177;
  float32x4_t v178;
  int8x16_t v179;
  char v180;
  int v181;
  float32x4_t v182;
  int8x16_t v183;
  int8x8_t v184;
  float32x4_t v185;
  char v186;
  int v187;
  int8x16_t v188;
  float32x4_t v189;
  float32x4_t v190;
  int8x8_t v191;
  float32x4_t v192;
  char v193;
  int v194;
  int8x16_t v195;
  int8x8_t v196;
  float32x4_t v197;
  char v198;
  int v200;
  _OWORD v201[2];
  __int128 v202;
  _BYTE v203[20];
  int v204;
  uint64_t v205;

  v205 = *MEMORY[0x24BDAC8D0];
  v10 = 2;
  v200 = 2;
  if ((a2 & 1) == 0)
  {
    v12 = **(__int32 ***)a1;
    v13 = a5[1].i32[1];
    v14 = *v12;
    if (v13 <= *v12)
      return 3;
    v15 = a5[2].i32[0];
    v16 = v12[1];
    if (v15 <= v16)
      return 3;
    v17 = a5[2].i32[1];
    v18 = v12[2];
    if (v17 <= v18)
      return 3;
    v19 = v12[3];
    if (a5->i32[0] >= v19)
      return 3;
    v20 = a5->i32[1];
    v21 = v12[4];
    if (v20 >= v21)
      return 3;
    v22 = a5[1].i32[0];
    v23 = v12[5];
    if (v22 >= v23)
      return 3;
    if (v22 >= v18 && v20 >= v16 && a5->i32[0] >= v14 && v13 <= v19 && v15 <= v21 && v17 <= v23)
      v10 = 2;
    else
      v10 = 1;
    v200 = v10;
    if (a3)
      goto LABEL_3;
LABEL_31:
    v29 = *(_QWORD *)(a1 + 8);
    v30 = *(_QWORD **)v29;
    v31 = **(_QWORD ***)v29;
    if ((a4 & 0x80000000) != 0)
    {
      v34 = v31 + 2609;
      v41 = (__int128 *)v30[1];
      v42 = *v41;
      LODWORD(v41) = *((unsigned __int8 *)v41 + 16);
      v203[16] = (_BYTE)v41;
      *(_OWORD *)v203 = v42;
      if ((_DWORD)v41)
        goto LABEL_36;
    }
    else
    {
      v33 = v31[2615];
      if (0xAAAAAAAAAAAAAAABLL * ((v31[2616] - v33) >> 4) <= a4)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 1042, (uint64_t)"info_index < allocated_voxel_block_infos_.size()", 48, (uint64_t)"Invalid map index", 17, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v33 = v31[2615];
      }
      v34 = (_QWORD *)(v33 + 48 * a4);
      v35 = (__int128 *)v30[1];
      v36 = *v35;
      LODWORD(v35) = *((unsigned __int8 *)v35 + 16);
      v203[16] = (_BYTE)v35;
      *(_OWORD *)v203 = v36;
      if ((_DWORD)v35)
      {
LABEL_36:
        v37 = sub_223340F28(v34, (uint64_t)v203);
        if (v37)
        {
          v38 = *((unsigned int *)v37 + 8);
          if ((v38 & 0x80000000) == 0)
            goto LABEL_38;
        }
        goto LABEL_44;
      }
    }
    v38 = *((unsigned int *)v34 + 10);
    if ((v38 & 0x80000000) == 0)
    {
LABEL_38:
      v39 = v31[2600];
      if (0xCCCCCCCCCCCCCCCDLL * ((v31[2601] - v39) >> 12) <= v38)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Reconstruction/Block/include/Reconstruction/Block/MultiVoxelStore.hpp", 205, (uint64_t)"block_index < allocated_voxel_blocks_.size()", 44, (uint64_t)"Invalid block index", 19, (void (*)(void **))sub_22457406C))
        {
          abort();
        }
        v39 = v31[2600];
      }
      v40 = (char *)(v39 + 20480 * v38);
LABEL_45:
      *(_QWORD *)v30[2] = v40;
      memcpy((void *)v30[3], a6, 0x21CuLL);
      *(_BYTE *)v30[4] = (a4 & 0x80000000) == 0;
      if (v200 == 2)
      {
        *(_QWORD *)v203 = *(_QWORD *)(v29 + 8);
        *(_QWORD *)&v203[8] = &v200;
        *(int32x2_t *)v44.f32 = *a5;
        v52 = a5[1].i32[0];
        v53 = ***(_BYTE ****)v203;
        v54 = **(_QWORD **)(*(_QWORD *)v203 + 40);
        v55 = (char)v53[6];
        v43.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v54 + 40784) + 312);
        *(float32x2_t *)v47.f32 = vcvt_f32_s32(*a5);
        v56 = (float)v52;
        v57 = v47;
        v57.f32[2] = (float)v52;
        v58.i64[0] = 0x3F0000003F000000;
        v58.i64[1] = 0x3F0000003F000000;
        if (!v53[6])
        {
          v48.i8[0] = v53[3];
          v48 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v48.f32));
          v48.f32[0] = (float)v48.i32[0];
          v49.i8[0] = v53[4];
          v59 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v49.f32)).u64[0];
          *(float *)v59.i32 = (float)v59.i32[0];
          v48.i32[1] = v59.i32[0];
          v59.i8[0] = v53[5];
          v48.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v59)).i32[0];
          v57 = vaddq_f32(v57, v58);
          v58 = vmulq_f32(v48, (float32x4_t)vdupq_n_s32(0x3B808081u));
        }
        v60 = vaddq_f32(v57, v58);
        v61 = *(_QWORD *)(v54 + 8);
        v57.i32[0] = **(_DWORD **)(v54 + 16);
        if (v55 > 0
          || (v48.i64[0] = *(_QWORD *)v61,
              v48.i32[2] = *(_DWORD *)(v61 + 8),
              v62 = (int8x16_t)vmlsq_lane_f32(v48, v60, v43, 0),
              v63 = (float32x2_t)vextq_s8(v62, v62, 8uLL).u64[0],
              *(float32x2_t *)v50.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v62.i8, *(float32x2_t *)v62.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v62.i8, 1), *(float32x2_t *)v62.i8, 1), v63, v63), v50.f32[0] > v57.f32[0])|| (!v53[6] ? (v64 = 1) : (v64 = 2), **(_BYTE **)(v54 + 24) = v64, !v55))
        {
          v65 = (char)v53[46];
          v66 = (float)(v52 + 1);
          v67 = v47;
          v67.f32[2] = v66;
          v68.i64[0] = 0x3F0000003F000000;
          v68.i64[1] = 0x3F0000003F000000;
          if (!v53[46])
          {
            v50.i8[0] = v53[43];
            v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
            v50.f32[0] = (float)v50.i32[0];
            v51.i8[0] = v53[44];
            v69 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
            *(float *)v69.i32 = (float)v69.i32[0];
            v50.i32[1] = v69.i32[0];
            v69.i8[0] = v53[45];
            v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v69)).u64[0];
            *(float *)v51.i32 = (float)v51.i32[0];
            v50.i32[2] = v51.i32[0];
            v67 = vaddq_f32(v67, v68);
            v68 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
          }
          v70 = vaddq_f32(v67, v68);
          if (v65 > 0)
            goto LABEL_211;
          v68.i64[0] = *(_QWORD *)v61;
          v68.i32[2] = *(_DWORD *)(v61 + 8);
          v71 = (int8x16_t)vmlsq_lane_f32(v68, v70, v43, 0);
          v50.i64[0] = vextq_s8(v71, v71, 8uLL).u64[0];
          v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v71.i8, *(float32x2_t *)v71.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v71.i8, 1), *(float32x2_t *)v71.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
          if (*(float *)v51.i32 > v57.f32[0])
            goto LABEL_211;
          v72 = v53[46] ? 2 : 1;
          **(_BYTE **)(v54 + 24) = v72;
          if (!v65)
          {
LABEL_211:
            v73 = v44.i32[1] + 1;
            v74 = (char)v53[86];
            v75 = v44;
            v75.i32[1] = v44.i32[1] + 1;
            *(float32x2_t *)v75.f32 = vcvt_f32_s32(*(int32x2_t *)v75.f32);
            v75.f32[2] = (float)v52;
            v76.i64[0] = 0x3F0000003F000000;
            v76.i64[1] = 0x3F0000003F000000;
            if (!v53[86])
            {
              v50.i8[0] = v53[83];
              v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
              v50.f32[0] = (float)v50.i32[0];
              v51.i8[0] = v53[84];
              v80 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
              *(float *)v80.i32 = (float)v80.i32[0];
              v50.i32[1] = v80.i32[0];
              v80.i8[0] = v53[85];
              v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v80)).u64[0];
              *(float *)v51.i32 = (float)v51.i32[0];
              v50.i32[2] = v51.i32[0];
              v75 = vaddq_f32(v75, v76);
              v76 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
            }
            v81 = vaddq_f32(v75, v76);
            if (v74 > 0)
              goto LABEL_219;
            v76.i64[0] = *(_QWORD *)v61;
            v76.i32[2] = *(_DWORD *)(v61 + 8);
            v82 = (int8x16_t)vmlsq_lane_f32(v76, v81, v43, 0);
            v50.i64[0] = vextq_s8(v82, v82, 8uLL).u64[0];
            v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v82.i8, *(float32x2_t *)v82.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v82.i8, 1), *(float32x2_t *)v82.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
            if (*(float *)v51.i32 > v57.f32[0])
              goto LABEL_219;
            v83 = v53[86] ? 2 : 1;
            **(_BYTE **)(v54 + 24) = v83;
            if (!v74)
            {
LABEL_219:
              v84 = (char)v53[126];
              v85 = v44;
              v85.i32[1] = v44.i32[1] + 1;
              *(float32x2_t *)v85.f32 = vcvt_f32_s32(*(int32x2_t *)v85.f32);
              v85.f32[2] = (float)(v52 + 1);
              v86.i64[0] = 0x3F0000003F000000;
              v86.i64[1] = 0x3F0000003F000000;
              if (!v53[126])
              {
                v50.i8[0] = v53[123];
                v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                v50.f32[0] = (float)v50.i32[0];
                v51.i8[0] = v53[124];
                v87 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                *(float *)v87.i32 = (float)v87.i32[0];
                v50.i32[1] = v87.i32[0];
                v87.i8[0] = v53[125];
                v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v87)).u64[0];
                *(float *)v51.i32 = (float)v51.i32[0];
                v50.i32[2] = v51.i32[0];
                v85 = vaddq_f32(v85, v86);
                v86 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
              }
              v88 = vaddq_f32(v85, v86);
              if (v84 > 0)
                goto LABEL_220;
              v86.i64[0] = *(_QWORD *)v61;
              v86.i32[2] = *(_DWORD *)(v61 + 8);
              v89 = (int8x16_t)vmlsq_lane_f32(v86, v88, v43, 0);
              v50.i64[0] = vextq_s8(v89, v89, 8uLL).u64[0];
              v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v89.i8, *(float32x2_t *)v89.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v89.i8, 1), *(float32x2_t *)v89.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
              if (*(float *)v51.i32 > v57.f32[0])
                goto LABEL_220;
              v90 = v53[126] ? 2 : 1;
              **(_BYTE **)(v54 + 24) = v90;
              if (!v84)
              {
LABEL_220:
                v91 = v44.i32[0] + 1;
                v92 = (char)v53[166];
                v93 = v44;
                v93.i32[0] = v44.i32[0] + 1;
                *(float32x2_t *)v93.f32 = vcvt_f32_s32(*(int32x2_t *)v93.f32);
                v93.f32[2] = (float)v52;
                v94.i64[0] = 0x3F0000003F000000;
                v94.i64[1] = 0x3F0000003F000000;
                if (!v53[166])
                {
                  v50.i8[0] = v53[163];
                  v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                  v50.f32[0] = (float)v50.i32[0];
                  v51.i8[0] = v53[164];
                  v95 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                  *(float *)v95.i32 = (float)v95.i32[0];
                  v50.i32[1] = v95.i32[0];
                  v95.i8[0] = v53[165];
                  v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v95)).u64[0];
                  *(float *)v51.i32 = (float)v51.i32[0];
                  v50.i32[2] = v51.i32[0];
                  v93 = vaddq_f32(v93, v94);
                  v94 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                }
                v96 = vaddq_f32(v93, v94);
                if (v92 > 0)
                  goto LABEL_221;
                v94.i64[0] = *(_QWORD *)v61;
                v94.i32[2] = *(_DWORD *)(v61 + 8);
                v97 = (int8x16_t)vmlsq_lane_f32(v94, v96, v43, 0);
                v50.i64[0] = vextq_s8(v97, v97, 8uLL).u64[0];
                v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v97.i8, *(float32x2_t *)v97.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v97.i8, 1), *(float32x2_t *)v97.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                if (*(float *)v51.i32 > v57.f32[0])
                  goto LABEL_221;
                v98 = v53[166] ? 2 : 1;
                **(_BYTE **)(v54 + 24) = v98;
                if (!v92)
                {
LABEL_221:
                  v99 = (char)v53[206];
                  v100 = v44;
                  v100.i32[0] = v44.i32[0] + 1;
                  *(float32x2_t *)v100.f32 = vcvt_f32_s32(*(int32x2_t *)v100.f32);
                  v100.f32[2] = (float)(v52 + 1);
                  v101.i64[0] = 0x3F0000003F000000;
                  v101.i64[1] = 0x3F0000003F000000;
                  if (!v53[206])
                  {
                    v50.i8[0] = v53[203];
                    v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                    v50.f32[0] = (float)v50.i32[0];
                    v51.i8[0] = v53[204];
                    v102 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                    *(float *)v102.i32 = (float)v102.i32[0];
                    v50.i32[1] = v102.i32[0];
                    v102.i8[0] = v53[205];
                    v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v102)).u64[0];
                    *(float *)v51.i32 = (float)v51.i32[0];
                    v50.i32[2] = v51.i32[0];
                    v100 = vaddq_f32(v100, v101);
                    v101 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                  }
                  v103 = vaddq_f32(v100, v101);
                  if (v99 > 0)
                    goto LABEL_222;
                  v101.i64[0] = *(_QWORD *)v61;
                  v101.i32[2] = *(_DWORD *)(v61 + 8);
                  v104 = (int8x16_t)vmlsq_lane_f32(v101, v103, v43, 0);
                  v50.i64[0] = vextq_s8(v104, v104, 8uLL).u64[0];
                  v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v104.i8, *(float32x2_t *)v104.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v104.i8, 1), *(float32x2_t *)v104.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                  if (*(float *)v51.i32 > v57.f32[0])
                    goto LABEL_222;
                  v105 = v53[206] ? 2 : 1;
                  **(_BYTE **)(v54 + 24) = v105;
                  if (!v99)
                  {
LABEL_222:
                    v106 = (char)v53[246];
                    *(float32x2_t *)v103.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v73, v91));
                    v103.f32[2] = (float)v52;
                    v107.i64[0] = 0x3F0000003F000000;
                    v107.i64[1] = 0x3F0000003F000000;
                    if (!v53[246])
                    {
                      v50.i8[0] = v53[243];
                      v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                      v50.f32[0] = (float)v50.i32[0];
                      v51.i8[0] = v53[244];
                      v108 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                      *(float *)v108.i32 = (float)v108.i32[0];
                      v50.i32[1] = v108.i32[0];
                      v108.i8[0] = v53[245];
                      v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v108)).u64[0];
                      *(float *)v51.i32 = (float)v51.i32[0];
                      v50.i32[2] = v51.i32[0];
                      v103 = vaddq_f32(v103, v107);
                      v107 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                    }
                    v109 = vaddq_f32(v103, v107);
                    if (v106 > 0)
                      goto LABEL_223;
                    v107.i64[0] = *(_QWORD *)v61;
                    v107.i32[2] = *(_DWORD *)(v61 + 8);
                    v110 = (int8x16_t)vmlsq_lane_f32(v107, v109, v43, 0);
                    v50.i64[0] = vextq_s8(v110, v110, 8uLL).u64[0];
                    v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v110.i8, *(float32x2_t *)v110.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v110.i8, 1), *(float32x2_t *)v110.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                    if (*(float *)v51.i32 > v57.f32[0])
                      goto LABEL_223;
                    v111 = v53[246] ? 2 : 1;
                    **(_BYTE **)(v54 + 24) = v111;
                    if (!v106)
                    {
LABEL_223:
                      v112 = (char)v53[286];
                      *(float32x2_t *)v109.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v73, v91));
                      v109.f32[2] = (float)(v52 + 1);
                      v113.i64[0] = 0x3F0000003F000000;
                      v113.i64[1] = 0x3F0000003F000000;
                      if (!v53[286])
                      {
                        v50.i8[0] = v53[283];
                        v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                        v50.f32[0] = (float)v50.i32[0];
                        v51.i8[0] = v53[284];
                        v114 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                        *(float *)v114.i32 = (float)v114.i32[0];
                        v50.i32[1] = v114.i32[0];
                        v114.i8[0] = v53[285];
                        v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v114)).u64[0];
                        *(float *)v51.i32 = (float)v51.i32[0];
                        v50.i32[2] = v51.i32[0];
                        v109 = vaddq_f32(v109, v113);
                        v113 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                      }
                      v115 = vaddq_f32(v109, v113);
                      if (v112 > 0)
                        goto LABEL_232;
                      v113.i64[0] = *(_QWORD *)v61;
                      v113.i32[2] = *(_DWORD *)(v61 + 8);
                      v116 = (int8x16_t)vmlsq_lane_f32(v113, v115, v43, 0);
                      v50.i64[0] = vextq_s8(v116, v116, 8uLL).u64[0];
                      v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v116.i8, *(float32x2_t *)v116.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v116.i8, 1), *(float32x2_t *)v116.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                      if (*(float *)v51.i32 > v57.f32[0])
                        goto LABEL_232;
                      v117 = v53[286] ? 2 : 1;
                      **(_BYTE **)(v54 + 24) = v117;
                      if (!v112)
                      {
LABEL_232:
                        v118 = v52 + 2;
                        v119 = (char)v53[326];
                        v120 = v47;
                        v120.f32[2] = (float)(v52 + 2);
                        v121.i64[0] = 0x3F0000003F000000;
                        v121.i64[1] = 0x3F0000003F000000;
                        if (v53[326])
                        {
                          v122 = vaddq_f32(v120, v121);
                        }
                        else
                        {
                          v50.i8[0] = v53[323];
                          v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                          v50.f32[0] = (float)v50.i32[0];
                          v51.i8[0] = v53[324];
                          v123 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                          *(float *)v123.i32 = (float)v123.i32[0];
                          v50.i32[1] = v123.i32[0];
                          v123.i8[0] = v53[325];
                          v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v123)).u64[0];
                          *(float *)v51.i32 = (float)v51.i32[0];
                          v50.i32[2] = v51.i32[0];
                          v124 = vaddq_f32(v120, v121);
                          v120 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                          v122 = vaddq_f32(v124, v120);
                        }
                        if (v119 > 0
                          || (v120.i64[0] = *(_QWORD *)v61,
                              v120.i32[2] = *(_DWORD *)(v61 + 8),
                              v125 = (int8x16_t)vmlsq_lane_f32(v120, v122, v43, 0),
                              v50.i64[0] = vextq_s8(v125, v125, 8uLL).u64[0],
                              v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v125.i8, *(float32x2_t *)v125.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v125.i8, 1), *(float32x2_t *)v125.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32), *(float *)v51.i32 > v57.f32[0])|| (!v53[326] ? (v126 = 1) : (v126 = 2), **(_BYTE **)(v54 + 24) = v126, !v119))
                        {
                          v127 = v52 + 3;
                          v128 = (char)v53[366];
                          v129 = (float)v127;
                          v47.f32[2] = (float)v127;
                          v130.i64[0] = 0x3F0000003F000000;
                          v130.i64[1] = 0x3F0000003F000000;
                          if (!v53[366])
                          {
                            v50.i8[0] = v53[363];
                            v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                            v50.f32[0] = (float)v50.i32[0];
                            v51.i8[0] = v53[364];
                            v131 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                            *(float *)v131.i32 = (float)v131.i32[0];
                            v50.i32[1] = v131.i32[0];
                            v131.i8[0] = v53[365];
                            v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v131)).u64[0];
                            *(float *)v51.i32 = (float)v51.i32[0];
                            v50.i32[2] = v51.i32[0];
                            v47 = vaddq_f32(v47, v130);
                            v130 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                          }
                          v132 = vaddq_f32(v47, v130);
                          if (v128 > 0)
                            goto LABEL_224;
                          v130.i64[0] = *(_QWORD *)v61;
                          v130.i32[2] = *(_DWORD *)(v61 + 8);
                          v133 = (int8x16_t)vmlsq_lane_f32(v130, v132, v43, 0);
                          v50.i64[0] = vextq_s8(v133, v133, 8uLL).u64[0];
                          v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v133.i8, *(float32x2_t *)v133.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v133.i8, 1), *(float32x2_t *)v133.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                          if (*(float *)v51.i32 > v57.f32[0])
                            goto LABEL_224;
                          v134 = v53[366] ? 2 : 1;
                          **(_BYTE **)(v54 + 24) = v134;
                          if (!v128)
                          {
LABEL_224:
                            v135 = (char)v53[406];
                            v136 = v44;
                            v136.i32[1] = v44.i32[1] + 1;
                            *(float32x2_t *)v136.f32 = vcvt_f32_s32(*(int32x2_t *)v136.f32);
                            v136.f32[2] = (float)v118;
                            v137.i64[0] = 0x3F0000003F000000;
                            v137.i64[1] = 0x3F0000003F000000;
                            if (!v53[406])
                            {
                              v50.i8[0] = v53[403];
                              v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                              v50.f32[0] = (float)v50.i32[0];
                              v51.i8[0] = v53[404];
                              v138 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                              *(float *)v138.i32 = (float)v138.i32[0];
                              v50.i32[1] = v138.i32[0];
                              v138.i8[0] = v53[405];
                              v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v138)).u64[0];
                              *(float *)v51.i32 = (float)v51.i32[0];
                              v50.i32[2] = v51.i32[0];
                              v136 = vaddq_f32(v136, v137);
                              v137 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                            }
                            v139 = vaddq_f32(v136, v137);
                            if (v135 > 0)
                              goto LABEL_225;
                            v137.i64[0] = *(_QWORD *)v61;
                            v137.i32[2] = *(_DWORD *)(v61 + 8);
                            v140 = (int8x16_t)vmlsq_lane_f32(v137, v139, v43, 0);
                            v50.i64[0] = vextq_s8(v140, v140, 8uLL).u64[0];
                            v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v140.i8, *(float32x2_t *)v140.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v140.i8, 1), *(float32x2_t *)v140.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                            if (*(float *)v51.i32 > v57.f32[0])
                              goto LABEL_225;
                            v141 = v53[406] ? 2 : 1;
                            **(_BYTE **)(v54 + 24) = v141;
                            if (!v135)
                            {
LABEL_225:
                              v142 = (char)v53[446];
                              v143 = v44;
                              v143.i32[1] = v44.i32[1] + 1;
                              *(float32x2_t *)v143.f32 = vcvt_f32_s32(*(int32x2_t *)v143.f32);
                              v143.f32[2] = v129;
                              v144.i64[0] = 0x3F0000003F000000;
                              v144.i64[1] = 0x3F0000003F000000;
                              if (!v53[446])
                              {
                                v50.i8[0] = v53[443];
                                v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                                v50.f32[0] = (float)v50.i32[0];
                                v51.i8[0] = v53[444];
                                v145 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                                *(float *)v145.i32 = (float)v145.i32[0];
                                v50.i32[1] = v145.i32[0];
                                v145.i8[0] = v53[445];
                                v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v145)).u64[0];
                                *(float *)v51.i32 = (float)v51.i32[0];
                                v50.i32[2] = v51.i32[0];
                                v143 = vaddq_f32(v143, v144);
                                v144 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                              }
                              v146 = vaddq_f32(v143, v144);
                              if (v142 > 0)
                                goto LABEL_226;
                              v144.i64[0] = *(_QWORD *)v61;
                              v144.i32[2] = *(_DWORD *)(v61 + 8);
                              v147 = (int8x16_t)vmlsq_lane_f32(v144, v146, v43, 0);
                              v50.i64[0] = vextq_s8(v147, v147, 8uLL).u64[0];
                              v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v147.i8, *(float32x2_t *)v147.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v147.i8, 1), *(float32x2_t *)v147.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                              if (*(float *)v51.i32 > v57.f32[0])
                                goto LABEL_226;
                              v148 = v53[446] ? 2 : 1;
                              **(_BYTE **)(v54 + 24) = v148;
                              if (!v142)
                              {
LABEL_226:
                                v149 = (char)v53[486];
                                v150 = v44;
                                v150.i32[0] = v44.i32[0] + 1;
                                *(float32x2_t *)v150.f32 = vcvt_f32_s32(*(int32x2_t *)v150.f32);
                                v150.f32[2] = (float)v118;
                                v151.i64[0] = 0x3F0000003F000000;
                                v151.i64[1] = 0x3F0000003F000000;
                                if (!v53[486])
                                {
                                  v50.i8[0] = v53[483];
                                  v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                                  v50.f32[0] = (float)v50.i32[0];
                                  v51.i8[0] = v53[484];
                                  v152 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                                  *(float *)v152.i32 = (float)v152.i32[0];
                                  v50.i32[1] = v152.i32[0];
                                  v152.i8[0] = v53[485];
                                  v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v152)).u64[0];
                                  *(float *)v51.i32 = (float)v51.i32[0];
                                  v50.i32[2] = v51.i32[0];
                                  v150 = vaddq_f32(v150, v151);
                                  v151 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                }
                                v153 = vaddq_f32(v150, v151);
                                if (v149 > 0)
                                  goto LABEL_227;
                                v151.i64[0] = *(_QWORD *)v61;
                                v151.i32[2] = *(_DWORD *)(v61 + 8);
                                v154 = (int8x16_t)vmlsq_lane_f32(v151, v153, v43, 0);
                                v50.i64[0] = vextq_s8(v154, v154, 8uLL).u64[0];
                                v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v154.i8, *(float32x2_t *)v154.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v154.i8, 1), *(float32x2_t *)v154.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                                if (*(float *)v51.i32 > v57.f32[0])
                                  goto LABEL_227;
                                v155 = v53[486] ? 2 : 1;
                                **(_BYTE **)(v54 + 24) = v155;
                                if (!v149)
                                {
LABEL_227:
                                  v156 = (char)v53[526];
                                  v157 = v44;
                                  v157.i32[0] = v44.i32[0] + 1;
                                  *(float32x2_t *)v157.f32 = vcvt_f32_s32(*(int32x2_t *)v157.f32);
                                  v157.f32[2] = v129;
                                  v158.i64[0] = 0x3F0000003F000000;
                                  v158.i64[1] = 0x3F0000003F000000;
                                  if (!v53[526])
                                  {
                                    v50.i8[0] = v53[523];
                                    v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                                    v50.f32[0] = (float)v50.i32[0];
                                    v51.i8[0] = v53[524];
                                    v159 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                                    *(float *)v159.i32 = (float)v159.i32[0];
                                    v50.i32[1] = v159.i32[0];
                                    v159.i8[0] = v53[525];
                                    v51 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v159)).u64[0];
                                    *(float *)v51.i32 = (float)v51.i32[0];
                                    v50.i32[2] = v51.i32[0];
                                    v157 = vaddq_f32(v157, v158);
                                    v158 = vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                  }
                                  v160 = vaddq_f32(v157, v158);
                                  if (v156 > 0)
                                    goto LABEL_228;
                                  v158.i64[0] = *(_QWORD *)v61;
                                  v158.i32[2] = *(_DWORD *)(v61 + 8);
                                  v161 = (int8x16_t)vmlsq_lane_f32(v158, v160, v43, 0);
                                  v50.i64[0] = vextq_s8(v161, v161, 8uLL).u64[0];
                                  v51 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v161.i8, *(float32x2_t *)v161.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v161.i8, 1), *(float32x2_t *)v161.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32);
                                  if (*(float *)v51.i32 > v57.f32[0])
                                    goto LABEL_228;
                                  v162 = v53[526] ? 2 : 1;
                                  **(_BYTE **)(v54 + 24) = v162;
                                  if (!v156)
                                  {
LABEL_228:
                                    v163 = (char)v53[566];
                                    *(float32x2_t *)v160.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v73, v91));
                                    v160.f32[2] = (float)v118;
                                    v164.i64[0] = 0x3F0000003F000000;
                                    v164.i64[1] = 0x3F0000003F000000;
                                    if (!v53[566])
                                    {
                                      v50.i8[0] = v53[563];
                                      v50 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32));
                                      v50.f32[0] = (float)v50.i32[0];
                                      v51.i8[0] = v53[564];
                                      v165 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v51)).u64[0];
                                      *(float *)v165.i32 = (float)v165.i32[0];
                                      v50.i32[1] = v165.i32[0];
                                      v165.i8[0] = v53[565];
                                      v50.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v165)).i32[0];
                                      v160 = vaddq_f32(v160, (float32x4_t)v164);
                                      v164 = (int8x16_t)vmulq_f32(v50, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                    }
                                    if ((v166 = vaddq_f32(v160, (float32x4_t)v164), v163 > 0)
                                      || (v164.i64[0] = *(_QWORD *)v61,
                                          v164.i32[2] = *(_DWORD *)(v61 + 8),
                                          v164 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v164, v166, v43, 0),
                                          v50.i64[0] = vextq_s8(v164, v164, 8uLL).u64[0],
                                          vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v164.i8, *(float32x2_t *)v164.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v164.i8, 1), *(float32x2_t *)v164.i8, 1), *(float32x2_t *)v50.f32, *(float32x2_t *)v50.f32).f32[0] > v57.f32[0])|| (!v53[566] ? (v167 = 1) : (v167 = 2), **(_BYTE **)(v54 + 24) = v167, !v163))
                                    {
                                      v168 = (char)v53[606];
                                      *(float32x2_t *)v166.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v73, v91));
                                      v166.f32[2] = v129;
                                      v169.i64[0] = 0x3F0000003F000000;
                                      v169.i64[1] = 0x3F0000003F000000;
                                      if (!v53[606])
                                      {
                                        v164.i8[0] = v53[603];
                                        v164 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v164.i8));
                                        *(float *)v164.i32 = (float)v164.i32[0];
                                        v50.i8[0] = v53[604];
                                        v170 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32)).u64[0];
                                        *(float *)v170.i32 = (float)v170.i32[0];
                                        v164.i32[1] = v170.i32[0];
                                        v170.i8[0] = v53[605];
                                        v50.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v170)).u64[0];
                                        v50.f32[0] = (float)v50.i32[0];
                                        v164.i32[2] = v50.i32[0];
                                        v166 = vaddq_f32(v166, v169);
                                        v169 = vmulq_f32((float32x4_t)v164, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                      }
                                      v171 = vaddq_f32(v166, v169);
                                      if (v168 > 0)
                                        goto LABEL_229;
                                      v169.i64[0] = *(_QWORD *)v61;
                                      v169.i32[2] = *(_DWORD *)(v61 + 8);
                                      v172 = (int8x16_t)vmlsq_lane_f32(v169, v171, v43, 0);
                                      v164 = vextq_s8(v172, v172, 8uLL);
                                      *(float32x2_t *)v50.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v172.i8, *(float32x2_t *)v172.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v172.i8, 1), *(float32x2_t *)v172.i8, 1), *(float32x2_t *)v164.i8, *(float32x2_t *)v164.i8);
                                      if (v50.f32[0] > v57.f32[0])
                                        goto LABEL_229;
                                      v173 = v53[606] ? 2 : 1;
                                      **(_BYTE **)(v54 + 24) = v173;
                                      if (!v168)
                                      {
LABEL_229:
                                        v174 = (char)v53[646];
                                        v175 = v44;
                                        v175.i32[1] = v44.i32[1] + 2;
                                        *(float32x2_t *)v175.f32 = vcvt_f32_s32(*(int32x2_t *)v175.f32);
                                        v175.f32[2] = v56;
                                        v176.i64[0] = 0x3F0000003F000000;
                                        v176.i64[1] = 0x3F0000003F000000;
                                        if (!v53[646])
                                        {
                                          v164.i8[0] = v53[643];
                                          v164 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v164.i8));
                                          *(float *)v164.i32 = (float)v164.i32[0];
                                          v50.i8[0] = v53[644];
                                          v177 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32)).u64[0];
                                          *(float *)v177.i32 = (float)v177.i32[0];
                                          v164.i32[1] = v177.i32[0];
                                          v177.i8[0] = v53[645];
                                          v50.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v177)).u64[0];
                                          v50.f32[0] = (float)v50.i32[0];
                                          v164.i32[2] = v50.i32[0];
                                          v175 = vaddq_f32(v175, v176);
                                          v176 = vmulq_f32((float32x4_t)v164, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                        }
                                        v178 = vaddq_f32(v175, v176);
                                        if (v174 > 0)
                                          goto LABEL_230;
                                        v176.i64[0] = *(_QWORD *)v61;
                                        v176.i32[2] = *(_DWORD *)(v61 + 8);
                                        v179 = (int8x16_t)vmlsq_lane_f32(v176, v178, v43, 0);
                                        v164 = vextq_s8(v179, v179, 8uLL);
                                        *(float32x2_t *)v50.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v179.i8, *(float32x2_t *)v179.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v179.i8, 1), *(float32x2_t *)v179.i8, 1), *(float32x2_t *)v164.i8, *(float32x2_t *)v164.i8);
                                        if (v50.f32[0] > v57.f32[0])
                                          goto LABEL_230;
                                        v180 = v53[646] ? 2 : 1;
                                        **(_BYTE **)(v54 + 24) = v180;
                                        if (!v174)
                                        {
LABEL_230:
                                          v181 = (char)v53[686];
                                          v182 = v44;
                                          v182.i32[1] = v44.i32[1] + 2;
                                          *(float32x2_t *)v182.f32 = vcvt_f32_s32(*(int32x2_t *)v182.f32);
                                          v182.f32[2] = v66;
                                          v183.i64[0] = 0x3F0000003F000000;
                                          v183.i64[1] = 0x3F0000003F000000;
                                          if (!v53[686])
                                          {
                                            v164.i8[0] = v53[683];
                                            v164 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v164.i8));
                                            *(float *)v164.i32 = (float)v164.i32[0];
                                            v50.i8[0] = v53[684];
                                            v184 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v50.f32)).u64[0];
                                            *(float *)v184.i32 = (float)v184.i32[0];
                                            v164.i32[1] = v184.i32[0];
                                            v184.i8[0] = v53[685];
                                            *(float *)&v164.i32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v184)).i32[0];
                                            v182 = vaddq_f32(v182, (float32x4_t)v183);
                                            v183 = (int8x16_t)vmulq_f32((float32x4_t)v164, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                          }
                                          if ((v185 = vaddq_f32(v182, (float32x4_t)v183), v181 > 0)
                                            || (v183.i64[0] = *(_QWORD *)v61,
                                                v183.i32[2] = *(_DWORD *)(v61 + 8),
                                                v183 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v183, v185, v43, 0),
                                                v164 = vextq_s8(v183, v183, 8uLL),
                                                vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v183.i8, *(float32x2_t *)v183.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v183.i8, 1), *(float32x2_t *)v183.i8, 1), *(float32x2_t *)v164.i8, *(float32x2_t *)v164.i8).f32[0] > v57.f32[0])|| (!v53[686] ? (v186 = 1) : (v186 = 2), **(_BYTE **)(v54 + 24) = v186, !v181))
                                          {
                                            v187 = (char)v53[726];
                                            v188 = (int8x16_t)v44;
                                            v188.i32[1] = v44.i32[1] + 3;
                                            *(float32x2_t *)v188.i8 = vcvt_f32_s32(*(int32x2_t *)v188.i8);
                                            *(float *)&v188.i32[2] = v56;
                                            v189.i64[0] = 0x3F0000003F000000;
                                            v189.i64[1] = 0x3F0000003F000000;
                                            if (v53[726])
                                            {
                                              v190 = vaddq_f32((float32x4_t)v188, v189);
                                            }
                                            else
                                            {
                                              v183.i8[0] = v53[723];
                                              v183 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v183.i8));
                                              *(float *)v183.i32 = (float)v183.i32[0];
                                              v164.i8[0] = v53[724];
                                              v191 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v164.i8)).u64[0];
                                              *(float *)v191.i32 = (float)v191.i32[0];
                                              v183.i32[1] = v191.i32[0];
                                              v191.i8[0] = v53[725];
                                              v164 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v191));
                                              *(float *)v164.i32 = (float)v164.i32[0];
                                              v183.i32[2] = v164.i32[0];
                                              v192 = vaddq_f32((float32x4_t)v188, v189);
                                              v188 = (int8x16_t)vmulq_f32((float32x4_t)v183, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                              v190 = vaddq_f32(v192, (float32x4_t)v188);
                                            }
                                            if (v187 > 0)
                                              goto LABEL_203;
                                            v188.i64[0] = *(_QWORD *)v61;
                                            v188.i32[2] = *(_DWORD *)(v61 + 8);
                                            v188 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v188, v190, v43, 0);
                                            *(int32x2_t *)v190.f32 = vdup_lane_s32(*(int32x2_t *)v188.i8, 1);
                                            v183.i64[0] = vextq_s8(v188, v188, 8uLL).u64[0];
                                            *(float32x2_t *)v164.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v188.i8, *(float32x2_t *)v188.i8), *(float32x2_t *)v190.f32, *(float32x2_t *)v188.i8, 1), *(float32x2_t *)v183.i8, *(float32x2_t *)v183.i8);
                                            if (*(float *)v164.i32 > v57.f32[0])
                                              goto LABEL_203;
                                            v193 = v53[726] ? 2 : 1;
                                            **(_BYTE **)(v54 + 24) = v193;
                                            if (!v187)
                                            {
LABEL_203:
                                              v194 = (char)v53[766];
                                              v44.i32[1] += 3;
                                              *(float32x2_t *)v44.f32 = vcvt_f32_s32(*(int32x2_t *)v44.f32);
                                              v44.f32[2] = v66;
                                              v195.i64[0] = 0x3F0000003F000000;
                                              v195.i64[1] = 0x3F0000003F000000;
                                              if (!v53[766])
                                              {
                                                v190.i8[0] = v53[763];
                                                v190 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v190.f32));
                                                v190.f32[0] = (float)v190.i32[0];
                                                v188.i8[0] = v53[764];
                                                v196 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v188.i8)).u64[0];
                                                *(float *)v196.i32 = (float)v196.i32[0];
                                                v190.i32[1] = v196.i32[0];
                                                v196.i8[0] = v53[765];
                                                v188.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v196)).u64[0];
                                                *(float *)v188.i32 = (float)v188.i32[0];
                                                v190.i32[2] = v188.i32[0];
                                                v44 = vaddq_f32(v44, (float32x4_t)v195);
                                                v195 = (int8x16_t)vmulq_f32(v190, (float32x4_t)vdupq_n_s32(0x3B808081u));
                                              }
                                              v197 = vaddq_f32(v44, (float32x4_t)v195);
                                              if (v194 > 0)
                                                goto LABEL_231;
                                              v195.i64[0] = *(_QWORD *)v61;
                                              v195.i32[2] = *(_DWORD *)(v61 + 8);
                                              v195 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v195, v197, v43, 0);
                                              v43 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v195.i8, 1);
                                              v197.i64[0] = vextq_s8(v195, v195, 8uLL).u64[0];
                                              *(float32x2_t *)v190.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v195.i8, *(float32x2_t *)v195.i8), v43, *(float32x2_t *)v195.i8, 1), *(float32x2_t *)v197.f32, *(float32x2_t *)v197.f32);
                                              if (v190.f32[0] > v57.f32[0])
                                                goto LABEL_231;
                                              v198 = v53[766] ? 2 : 1;
                                              **(_BYTE **)(v54 + 24) = v198;
                                              if (!v194)
                                              {
LABEL_231:
                                                if ((sub_223959384((_QWORD ***)v203, a5, *(double *)&v43, v57, *(double *)v197.i64, (float32x4_t)v195, v190, *(double *)v188.i64, *(double *)v183.i64, (float32x4_t)v164) & 1) != 0)return 3;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      else
      {
        *(int32x2_t *)v203 = *a5;
        *(_DWORD *)&v203[8] = a5[1].i32[0];
        *(int32x2_t *)&v203[12] = vadd_s32(*a5, (int32x2_t)0x800000008);
        v204 = *(_DWORD *)&v203[8] + 8;
        v77 = **(int ***)(v29 + 24);
        v78 = *(_OWORD **)(v29 + 8);
        v79 = v78[1];
        v201[0] = *v78;
        v201[1] = v79;
        v202 = v78[2];
        v11 = 3;
        if ((sub_223958C1C((int *)a5, 3, (unsigned int *)v203, v77, (uint64_t **)v201, *(double *)&v202, *(double *)&v79, *(double *)v44.i64, v45, v46, *(double *)v47.i64, v48, v49) & 1) != 0)return v11;
      }
      v11 = 0;
      **(_BYTE **)(a1 + 16) = 0;
      return v11;
    }
LABEL_44:
    v40 = (char *)v31 + 316;
    goto LABEL_45;
  }
  if (!a3)
    goto LABEL_31;
LABEL_3:
  if (v10 == 1)
    return 1;
  else
    return 2;
}

uint64_t sub_223958718(int a1, int32x2_t *a2, char a3, uint64_t a4)
{
  uint64_t result;
  int v8;
  uint64_t v9;
  __int32 v10;
  __int32 v11;
  unsigned int v12;
  __int32 v13;
  __int32 v14;
  unsigned int v15;
  __int32 v16;
  unsigned int v17;
  unsigned __int32 v18;
  __int32 v19;
  unsigned int v20;
  unsigned __int32 v21;
  __int32 v22;
  __int32 v23;
  unsigned int v24;
  __int32 v25;
  __int32 v26;
  unsigned int v27;
  __int32 v28;
  unsigned int v29;
  unsigned __int32 v30;
  __int32 v31;
  unsigned int v32;
  unsigned __int32 v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int32 v36;
  unint64_t v37;
  int v38;
  unsigned __int32 v39;
  unsigned int v40;
  uint64_t v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  int v46;
  char v47;
  char v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  uint64_t v53;
  int v54;
  char v55;
  char v56;
  uint64_t v57;
  int v58;
  char v59;
  char v60;
  uint64_t v61;
  int v62;
  char v63;
  char v64;
  uint64_t v65;
  int v66;
  char v67;
  char v68;
  uint64_t v69;
  int v70;
  char v71;
  char v72;
  uint64_t v73;
  int v74;
  char v75;
  char v76;
  uint64_t v77;
  int v78;
  char v79;
  char v80;
  uint64_t v81;
  int v82;
  char v83;
  char v84;
  uint64_t v85;
  int v86;
  char v87;
  char v88;
  uint64_t v89;
  int v90;
  char v91;
  char v92;
  int v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  int v98;
  char v99;
  char v100;
  int v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  int v106;
  char v107;
  char v108;
  int v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  int v114;
  char v115;
  char v116;
  int v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  int v122;
  char v123;
  char v124;
  int v125;
  uint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  int v130;
  char v131;
  char v132;
  int v133;
  uint64_t v134;
  char v135;
  char v136;
  uint64_t v137;
  int v138;
  char v139;
  char v140;
  int v141;
  uint64_t v142;
  char v143;

  LOBYTE(v36) = 1;
  v37 = -1;
  v38 = -1;
  LOBYTE(v39) = 8;
  LOBYTE(v40) = 1;
  v41 = -1;
  v42 = -1;
  v43 = 8;
  v44 = 1;
  v45 = -1;
  v46 = -1;
  v47 = 8;
  v48 = 1;
  v49 = -1;
  v50 = -1;
  v51 = 8;
  v52 = 1;
  v53 = -1;
  v54 = -1;
  v55 = 8;
  v56 = 1;
  v57 = -1;
  v58 = -1;
  v59 = 8;
  v60 = 1;
  v61 = -1;
  v62 = -1;
  v63 = 8;
  v64 = 1;
  v65 = -1;
  v66 = -1;
  v67 = 8;
  v68 = 1;
  v69 = -1;
  v70 = -1;
  v71 = 8;
  v72 = 1;
  v73 = -1;
  v74 = -1;
  v75 = 8;
  v76 = 1;
  v77 = -1;
  v78 = -1;
  v79 = 8;
  v80 = 1;
  v81 = -1;
  v82 = -1;
  v83 = 8;
  v84 = 1;
  v85 = -1;
  v86 = -1;
  v87 = 8;
  v88 = 1;
  v89 = -1;
  v90 = -1;
  v91 = 8;
  v92 = 1;
  v93 = -1;
  v94 = -1;
  v95 = 8;
  v96 = 1;
  v97 = -1;
  v98 = -1;
  v99 = 8;
  v100 = 1;
  v101 = -1;
  v102 = -1;
  v103 = 8;
  v104 = 1;
  v105 = -1;
  v106 = -1;
  v107 = 8;
  v108 = 1;
  v109 = -1;
  v110 = -1;
  v111 = 8;
  v112 = 1;
  v113 = -1;
  v114 = -1;
  v115 = 8;
  v116 = 1;
  v117 = -1;
  v118 = -1;
  v119 = 8;
  v120 = 1;
  v121 = -1;
  v122 = -1;
  v123 = 8;
  v124 = 1;
  v125 = -1;
  v126 = -1;
  v127 = 8;
  v128 = 1;
  v129 = -1;
  v130 = -1;
  v131 = 8;
  v132 = 1;
  v133 = -1;
  v134 = -1;
  v135 = 8;
  v136 = 1;
  v137 = -1;
  v138 = -1;
  v139 = 8;
  v140 = 1;
  v141 = -1;
  v142 = -1;
  v143 = 8;
  result = sub_22395735C(a4, a3, a1, 0x80000000, a2, &v36);
  if ((_DWORD)result)
  {
    v8 = result;
    result = 1;
    if (a1)
    {
      if (v8 != 3)
      {
        v9 = (a1 - 1);
        v10 = a2->i32[1];
        v11 = a2[1].i32[0];
        v12 = (a2[1].i32[1] - a2->i32[0]) >> 1;
        v36 = a2->i32[0];
        v37 = __PAIR64__(v11, v10);
        v38 = v12 + v36;
        v39 = v10 + v12;
        v40 = v11 + v12;
        v34 = *(_OWORD *)a4;
        v35 = *(_QWORD *)(a4 + 16);
        result = sub_223958718(v9, &v36, v8 == 2, &v34);
        if ((_DWORD)result)
        {
          v13 = a2->i32[1];
          v14 = a2[1].i32[0];
          v15 = (a2[1].i32[1] - a2->i32[0]) >> 1;
          v36 = a2->i32[0];
          LODWORD(v37) = v13;
          HIDWORD(v37) = v14 + v15;
          v38 = v15 + v36;
          v39 = v13 + v15;
          v40 = v14 + v15 + v15;
          v34 = *(_OWORD *)a4;
          v35 = *(_QWORD *)(a4 + 16);
          result = sub_223958718(v9, &v36, v8 == 2, &v34);
          if ((_DWORD)result)
          {
            v16 = a2[1].i32[0];
            v17 = (a2[1].i32[1] - a2->i32[0]) >> 1;
            v18 = v17 + a2->i32[1];
            v36 = a2->i32[0];
            v37 = __PAIR64__(v16, v18);
            v38 = v17 + v36;
            v39 = v18 + v17;
            v40 = v16 + v17;
            v34 = *(_OWORD *)a4;
            v35 = *(_QWORD *)(a4 + 16);
            result = sub_223958718(v9, &v36, v8 == 2, &v34);
            if ((_DWORD)result)
            {
              v19 = a2[1].i32[0];
              v20 = (a2[1].i32[1] - a2->i32[0]) >> 1;
              v21 = v20 + a2->i32[1];
              v36 = a2->i32[0];
              LODWORD(v37) = v21;
              HIDWORD(v37) = v19 + v20;
              v38 = v20 + v36;
              v39 = v21 + v20;
              v40 = v19 + v20 + v20;
              v34 = *(_OWORD *)a4;
              v35 = *(_QWORD *)(a4 + 16);
              result = sub_223958718(v9, &v36, v8 == 2, &v34);
              if ((_DWORD)result)
              {
                v22 = a2->i32[1];
                v23 = a2[1].i32[0];
                v24 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                v36 = v24 + a2->i32[0];
                v37 = __PAIR64__(v23, v22);
                v38 = v36 + v24;
                v39 = v22 + v24;
                v40 = v23 + v24;
                v34 = *(_OWORD *)a4;
                v35 = *(_QWORD *)(a4 + 16);
                result = sub_223958718(v9, &v36, v8 == 2, &v34);
                if ((_DWORD)result)
                {
                  v25 = a2->i32[1];
                  v26 = a2[1].i32[0];
                  v27 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                  v36 = v27 + a2->i32[0];
                  LODWORD(v37) = v25;
                  HIDWORD(v37) = v26 + v27;
                  v38 = v36 + v27;
                  v39 = v25 + v27;
                  v40 = v26 + v27 + v27;
                  v34 = *(_OWORD *)a4;
                  v35 = *(_QWORD *)(a4 + 16);
                  result = sub_223958718(v9, &v36, v8 == 2, &v34);
                  if ((_DWORD)result)
                  {
                    v28 = a2[1].i32[0];
                    v29 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                    v30 = v29 + a2->i32[1];
                    v36 = v29 + a2->i32[0];
                    v37 = __PAIR64__(v28, v30);
                    v38 = v36 + v29;
                    v39 = v30 + v29;
                    v40 = v28 + v29;
                    v34 = *(_OWORD *)a4;
                    v35 = *(_QWORD *)(a4 + 16);
                    result = sub_223958718(v9, &v36, v8 == 2, &v34);
                    if ((_DWORD)result)
                    {
                      v31 = a2[1].i32[0];
                      v32 = (a2[1].i32[1] - a2->i32[0]) >> 1;
                      v33 = v32 + a2->i32[1];
                      v36 = v32 + a2->i32[0];
                      LODWORD(v37) = v33;
                      HIDWORD(v37) = v31 + v32;
                      v38 = v36 + v32;
                      v39 = v33 + v32;
                      v40 = v31 + v32 + v32;
                      v34 = *(_OWORD *)a4;
                      v35 = *(_QWORD *)(a4 + 16);
                      return sub_223958718(v9, &v36, v8 == 2, &v34);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_223958C1C(int *a1, int a2, unsigned int *a3, int *a4, uint64_t **a5, double a6, double a7, double a8, int8x8_t a9, int8x8_t a10, double a11, float32x4_t a12, float32x4_t a13)
{
  float32x2_t v13;
  int8x8_t v14;
  int v15;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v25;
  int v26;
  int v27;
  int v28;
  int v30;
  int v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const float *v36;
  float32x4_t v37;
  float v38;
  float32x4_t v39;
  float32x4_t v40;
  int v41;
  int v42;
  _BYTE *v43;
  int v44;
  float32x4_t v45;
  char v46;
  uint32x4_t v47;
  uint32x4_t v48;
  int8x16_t v49;
  float32x2_t v50;
  _BYTE *v51;
  uint64_t v52;
  _BOOL8 v53;
  float32x4_t v54;
  float32x4_t v55;
  float32x4_t v56;
  int8x8_t v57;
  float32x4_t v58;
  uint64_t v59;
  int8x16_t v60;
  float v61;
  char v63;
  uint64_t v64;
  unsigned int v65;
  __int128 v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  __int128 v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  __int128 v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  __int128 v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  __int128 v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  __int128 v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  __int128 v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;

  v15 = a3[3];
  if (v15 <= *a4)
    return 1;
  v18 = a3[4];
  v19 = a4[1];
  if (v18 <= v19)
    return 1;
  v20 = a3[5];
  v21 = a4[2];
  if (v20 <= v21)
    return 1;
  v22 = *a3;
  v23 = a4[3];
  if ((int)*a3 >= v23)
    return 1;
  v25 = a3[1];
  v26 = a4[4];
  if (v25 >= v26)
    return 1;
  v27 = a3[2];
  v28 = a4[5];
  if (v27 >= v28)
    return 1;
  if (!a2)
  {
    *(int32x2_t *)v47.i8 = vdup_n_s32(v27 & 7);
    v47.u64[1] = (unint64_t)vdup_n_s32(v22 & 7);
    v48.i32[0] = v22 & 7;
    v48.i32[1] = v25 & 7;
    v48.i32[2] = v48.i32[1];
    v48.i32[3] = v48.i32[1];
    v49 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u32(v47, (uint32x4_t)xmmword_224656630), (int8x16_t)xmmword_224656650), vandq_s8((int8x16_t)vshlq_u32(v48, (uint32x4_t)xmmword_224656620), (int8x16_t)xmmword_224656640));
    v54 = (float32x4_t)vextq_s8(v49, v49, 8uLL);
    v50 = (float32x2_t)vorr_s8(*(int8x8_t *)v49.i8, *(int8x8_t *)v54.f32);
    v51 = (_BYTE *)(**a5 + 40 * (v50.i32[0] | v27 & 1u | v50.i32[1]));
    v52 = *a5[5];
    v53 = v51[6] == 0;
    *(float32x2_t *)v54.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v25, v22));
    v54.f32[2] = (float)v27;
    v55.i64[0] = 0x3F0000003F000000;
    v55.i64[1] = 0x3F0000003F000000;
    if (!v51[6])
    {
      a9.i8[0] = v51[3];
      v56 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(a9));
      v56.f32[0] = (float)v56.i32[0];
      a10.i8[0] = v51[4];
      v57 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(a10)).u64[0];
      *(float *)v57.i32 = (float)v57.i32[0];
      v56.i32[1] = v57.i32[0];
      v57.i8[0] = v51[5];
      v56.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v57)).i32[0];
      v54 = vaddq_f32(v54, v55);
      v55 = vmulq_f32(v56, (float32x4_t)vdupq_n_s32(0x3B808081u));
    }
    v58 = vaddq_f32(v54, v55);
    v59 = *(_QWORD *)(v52 + 8);
    v55.i64[0] = *(_QWORD *)v59;
    v55.i32[2] = *(_DWORD *)(v59 + 8);
    v50.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v52 + 40784) + 312);
    v60 = (int8x16_t)vmlsq_lane_f32(v55, v58, v50, 0);
    v58.i64[0] = vextq_s8(v60, v60, 8uLL).u64[0];
    LODWORD(v61) = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v60.i8, *(float32x2_t *)v60.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v60.i8, 1), *(float32x2_t *)v60.i8, 1), *(float32x2_t *)v58.f32, *(float32x2_t *)v58.f32).u32[0];
    result = 1;
    if ((char)v51[6] <= 0 && v61 <= **(float **)(v52 + 16))
    {
      if (v51[6])
        v63 = 2;
      else
        v63 = 1;
      **(_BYTE **)(v52 + 24) = v63;
      return v53;
    }
    return result;
  }
  if (v20 > v28 || v18 > v26 || v15 > v23 || v22 < *a4 || v25 < v19 || v27 < v21)
  {
    v64 = (a2 - 1);
    v65 = (v15 - v22) >> 1;
    v98 = v22;
    v99 = v25;
    v100 = v27;
    v101 = v65 + v22;
    v102 = v25 + v65;
    v103 = v27 + v65;
    v66 = *((_OWORD *)a5 + 1);
    v95 = *(_OWORD *)a5;
    v96 = v66;
    v97 = *((_OWORD *)a5 + 2);
    result = sub_223958C1C(a1, v64, &v98, a4, &v95);
    if ((_DWORD)result)
    {
      v67 = a3[1];
      v68 = a3[2];
      v69 = (a3[3] - *a3) >> 1;
      v98 = *a3;
      v99 = v67;
      v100 = v68 + v69;
      v101 = v69 + v98;
      v102 = v67 + v69;
      v103 = v68 + v69 + v69;
      v70 = *((_OWORD *)a5 + 1);
      v95 = *(_OWORD *)a5;
      v96 = v70;
      v97 = *((_OWORD *)a5 + 2);
      result = sub_223958C1C(a1, v64, &v98, a4, &v95);
      if ((_DWORD)result)
      {
        v71 = a3[2];
        v72 = (a3[3] - *a3) >> 1;
        v73 = v72 + a3[1];
        v98 = *a3;
        v99 = v73;
        v100 = v71;
        v101 = v72 + v98;
        v102 = v73 + v72;
        v103 = v71 + v72;
        v74 = *((_OWORD *)a5 + 1);
        v95 = *(_OWORD *)a5;
        v96 = v74;
        v97 = *((_OWORD *)a5 + 2);
        result = sub_223958C1C(a1, v64, &v98, a4, &v95);
        if ((_DWORD)result)
        {
          v75 = a3[2];
          v76 = (a3[3] - *a3) >> 1;
          v77 = v76 + a3[1];
          v98 = *a3;
          v99 = v77;
          v100 = v75 + v76;
          v101 = v76 + v98;
          v102 = v77 + v76;
          v103 = v75 + v76 + v76;
          v78 = *((_OWORD *)a5 + 1);
          v95 = *(_OWORD *)a5;
          v96 = v78;
          v97 = *((_OWORD *)a5 + 2);
          result = sub_223958C1C(a1, v64, &v98, a4, &v95);
          if ((_DWORD)result)
          {
            v79 = a3[1];
            v80 = a3[2];
            v81 = (a3[3] - *a3) >> 1;
            v98 = v81 + *a3;
            v99 = v79;
            v100 = v80;
            v101 = v98 + v81;
            v102 = v79 + v81;
            v103 = v80 + v81;
            v82 = *((_OWORD *)a5 + 1);
            v95 = *(_OWORD *)a5;
            v96 = v82;
            v97 = *((_OWORD *)a5 + 2);
            result = sub_223958C1C(a1, v64, &v98, a4, &v95);
            if ((_DWORD)result)
            {
              v83 = a3[1];
              v84 = a3[2];
              v85 = (a3[3] - *a3) >> 1;
              v98 = v85 + *a3;
              v99 = v83;
              v100 = v84 + v85;
              v101 = v98 + v85;
              v102 = v83 + v85;
              v103 = v84 + v85 + v85;
              v86 = *((_OWORD *)a5 + 1);
              v95 = *(_OWORD *)a5;
              v96 = v86;
              v97 = *((_OWORD *)a5 + 2);
              result = sub_223958C1C(a1, v64, &v98, a4, &v95);
              if ((_DWORD)result)
              {
                v87 = a3[2];
                v88 = (a3[3] - *a3) >> 1;
                v89 = v88 + a3[1];
                v98 = v88 + *a3;
                v99 = v89;
                v100 = v87;
                v101 = v98 + v88;
                v102 = v89 + v88;
                v103 = v87 + v88;
                v90 = *((_OWORD *)a5 + 1);
                v95 = *(_OWORD *)a5;
                v96 = v90;
                v97 = *((_OWORD *)a5 + 2);
                result = sub_223958C1C(a1, v64, &v98, a4, &v95);
                if ((_DWORD)result)
                {
                  v91 = a3[2];
                  v92 = (a3[3] - *a3) >> 1;
                  v93 = v92 + a3[1];
                  v98 = v92 + *a3;
                  v99 = v93;
                  v100 = v91 + v92;
                  v101 = v98 + v92;
                  v102 = v93 + v92;
                  v103 = v91 + v92 + v92;
                  v94 = *((_OWORD *)a5 + 1);
                  v95 = *(_OWORD *)a5;
                  v96 = v94;
                  v97 = *((_OWORD *)a5 + 2);
                  return sub_223958C1C(a1, v64, &v98, a4, &v95);
                }
              }
            }
          }
        }
      }
    }
    return result;
  }
  v30 = a1[1];
  if (*a1 > v22)
    v22 = *a1;
  if (v30 > v25)
    v25 = a1[1];
  v31 = a1[2];
  if (v31 > v27)
    v27 = a1[2];
  if (v15 >= *a1 + 8)
    v15 = *a1 + 8;
  if (v18 >= v30 + 8)
    v18 = v30 + 8;
  if (v20 >= v31 + 8)
    v20 = v31 + 8;
  result = 1;
  if (v15 <= v22 || v18 <= v25 || v20 <= v27)
    return result;
  v33 = *a5[5];
  v34 = *(_QWORD *)(v33 + 8);
  v35 = **a5;
  v36 = (const float *)(*(_QWORD *)(*(_QWORD *)v33 + 40784) + 312);
  v37 = vld1q_dup_f32(v36);
  v38 = **(float **)(v33 + 16);
  v39.i64[0] = 0x3F0000003F000000;
  v39.i64[1] = 0x3F0000003F000000;
  v40 = (float32x4_t)vdupq_n_s32(0x3B808081u);
  do
  {
    v41 = v25;
    while (2)
    {
      v42 = v22;
      do
      {
        v43 = (_BYTE *)(v35
                      + 40
                      * (v27 & 1 | (((v27 >> 2) & 1) << 6) & 0xFFFFFE7F | (8
                                                                                       * ((v27 >> 1) & 1)) & 0xFFFFFE7F | (((v41 >> 2) & 1) << 7) & 0xFFFFFEFF | (8 * v41) & 0x10 | (2 * (v41 & 1)) | (16 * v42) & 0x20 | (((v42 >> 2) & 1) << 8) | (4 * (v42 & 1))));
        v44 = (char)v43[6];
        if (v43[6])
        {
          a12.f32[0] = (float)v42;
          a12.f32[1] = (float)v41;
          a12.f32[2] = (float)v27;
          a12 = vaddq_f32(a12, v39);
          if (v44 > 0)
            goto LABEL_33;
        }
        else
        {
          a12.f32[0] = (float)v42;
          a12.f32[1] = (float)v41;
          a12.f32[2] = (float)v27;
          a13.i8[0] = v43[3];
          v45 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a13.f32));
          v45.f32[0] = (float)v45.i32[0];
          v13.i8[0] = v43[4];
          v13 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v13)).u64[0];
          v13.f32[0] = (float)v13.i32[0];
          v14.i8[0] = v43[5];
          v14 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v14)).u64[0];
          *(float *)v14.i32 = (float)v14.i32[0];
          v45.i32[1] = v13.i32[0];
          v45.i32[2] = v14.i32[0];
          a13 = vmulq_f32(v45, v40);
          a12 = vaddq_f32(vaddq_f32(a12, v39), a13);
          if (v44 > 0)
            goto LABEL_33;
        }
        a13.i64[0] = *(_QWORD *)v34;
        a13.i32[2] = *(_DWORD *)(v34 + 8);
        a13 = vmlsq_f32(a13, v37, a12);
        v13 = (float32x2_t)vextq_s8((int8x16_t)a13, (int8x16_t)a13, 8uLL).u64[0];
        v14 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)a13.f32, *(float32x2_t *)a13.f32), (float32x2_t)vdup_lane_s32(*(int32x2_t *)a13.f32, 1), *(float32x2_t *)a13.f32, 1), v13, v13);
        if (*(float *)v14.i32 <= v38)
        {
          v46 = v43[6] ? 2 : 1;
          **(_BYTE **)(v33 + 24) = v46;
          if (v44)
            return 0;
        }
LABEL_33:
        ++v42;
      }
      while (v15 != v42);
      if (++v41 != v18)
        continue;
      break;
    }
    ++v27;
    result = 1;
  }
  while (v27 != v20);
  return result;
}

uint64_t sub_223959384(_QWORD ***a1, int32x2_t *a2, double a3, float32x4_t a4, double a5, float32x4_t a6, float32x4_t a7, double a8, double a9, float32x4_t a10)
{
  float32x4_t v10;
  int8x8_t v11;
  float32x4_t v12;
  int8x8_t v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  int v17;
  float32x2_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  uint64_t v22;
  int8x8_t v23;
  int8x16_t v24;
  char v25;
  int v26;
  int v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  int8x8_t v33;
  float32x4_t v34;
  int8x16_t v35;
  char v36;
  unsigned __int32 v37;
  int v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  int8x8_t v44;
  float32x4_t v45;
  int8x16_t v46;
  char v47;
  int v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  float32x4_t v53;
  int8x8_t v54;
  float32x4_t v55;
  int8x16_t v56;
  char v57;
  int v58;
  int v59;
  float32x4_t v60;
  int8x8_t v61;
  float32x4_t v62;
  int8x16_t v63;
  char v64;
  int v65;
  int v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  int8x8_t v70;
  float32x4_t v71;
  int8x16_t v72;
  char v73;
  int v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  int8x8_t v80;
  float32x4_t v81;
  int8x16_t v82;
  char v83;
  int v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  int8x8_t v90;
  float32x4_t v91;
  int8x16_t v92;
  char v93;
  int v94;
  float32x4_t v95;
  float32x4_t v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  int8x8_t v100;
  float32x4_t v101;
  int8x16_t v102;
  char v103;
  int v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  int8x8_t v108;
  float32x4_t v109;
  int8x16_t v110;
  char v111;
  int v112;
  float32x4_t v113;
  float32x4_t v114;
  int8x8_t v115;
  float32x4_t v116;
  int8x16_t v117;
  char v118;
  int v119;
  float32x4_t v120;
  float32x4_t v121;
  int8x8_t v122;
  float32x4_t v123;
  int8x16_t v124;
  char v125;
  unsigned __int32 v126;
  int v127;
  float32x4_t v128;
  float32x4_t v129;
  int8x8_t v130;
  float32x4_t v131;
  int8x16_t v132;
  char v133;
  int v134;
  float32x4_t v135;
  float32x4_t v136;
  int8x8_t v137;
  float32x4_t v138;
  int8x16_t v139;
  char v140;
  unsigned __int32 v141;
  int v142;
  float32x4_t v143;
  int8x8_t v144;
  float32x4_t v145;
  int8x16_t v146;
  char v147;
  int v148;
  float32x4_t v149;
  int8x8_t v150;
  float32x4_t v151;
  int8x16_t v152;
  char v153;
  unsigned __int32 v154;
  int v155;
  float32x4_t v156;
  float32x4_t v157;
  int8x8_t v158;
  float32x4_t v159;
  int8x16_t v160;
  char v161;
  int v162;
  float32x4_t v163;
  float32x4_t v164;
  int8x8_t v165;
  float32x4_t v166;
  int8x16_t v167;
  char v168;
  int v169;
  float32x4_t v170;
  int8x8_t v171;
  float32x4_t v172;
  int8x16_t v173;
  char v174;
  int v175;
  float32x4_t v176;
  int8x8_t v177;
  float32x4_t v178;
  int8x16_t v179;
  char v180;
  int v181;
  float32x4_t v182;
  float32x4_t v183;
  int8x8_t v184;
  float32x4_t v185;
  int8x16_t v186;
  char v187;
  int v188;
  float32x4_t v189;
  float32x4_t v190;
  int8x8_t v191;
  float32x4_t v192;
  int8x16_t v193;
  char v194;
  int v195;
  float32x4_t v196;
  int8x8_t v197;
  float32x4_t v198;
  int8x16_t v199;
  char v200;
  int v201;
  float32x4_t v202;
  int8x8_t v203;
  float32x4_t v204;
  int8x16_t v205;
  char v206;
  int v207;
  float32x4_t v208;
  float32x4_t v209;
  int8x8_t v210;
  float32x4_t v211;
  int8x16_t v212;
  char v213;
  int v214;
  float32x4_t v215;
  float32x4_t v216;
  int8x8_t v217;
  float32x4_t v218;
  int8x16_t v219;
  char v220;
  int v221;
  float32x4_t v222;
  int8x8_t v223;
  float32x4_t v224;
  int8x16_t v225;
  char v226;
  int v227;
  float32x4_t v228;
  int8x8_t v229;
  float32x4_t v230;
  int8x16_t v231;
  char v232;
  int v233;
  float32x4_t v234;
  float32x4_t v235;
  int8x8_t v236;
  float32x4_t v237;
  int8x16_t v238;
  char v239;
  int v240;
  float32x4_t v241;
  float32x4_t v242;
  int8x8_t v243;
  float32x4_t v244;
  int8x16_t v245;
  char v246;
  int v247;
  float32x4_t v248;
  int8x8_t v249;
  float32x4_t v250;
  int8x16_t v251;
  char v252;
  int v253;
  float32x4_t v254;
  int8x8_t v255;
  float32x4_t v256;
  int8x16_t v257;
  char v258;
  int v259;
  float32x4_t v260;
  float32x4_t v261;
  int8x8_t v262;
  float32x4_t v263;
  int8x16_t v264;
  char v265;
  int v266;
  float32x4_t v267;
  int8x16_t v268;
  int8x8_t v269;
  float32x4_t v270;
  char v271;
  int v272;
  float32x4_t v273;
  float32x4_t v274;
  int8x8_t v275;
  float32x4_t v276;
  int8x16_t v277;
  char v278;
  int v279;
  float32x4_t v280;
  int8x8_t v281;
  float32x4_t v282;
  int8x16_t v283;
  char v284;
  int v285;
  float32x4_t v286;
  float32x4_t v287;
  int8x8_t v288;
  float32x4_t v289;
  int8x16_t v290;
  char v291;
  int v292;
  float32x4_t v293;
  float32x4_t v294;
  int8x8_t v295;
  float32x4_t v296;
  int8x16_t v297;
  char v298;
  int v299;
  float32x4_t v300;
  int8x8_t v301;
  float32x4_t v302;
  int8x16_t v303;
  char v304;
  int v305;
  float32x4_t v306;
  int8x8_t v307;
  float32x4_t v308;
  int8x16_t v309;
  char v310;
  int v311;
  float32x4_t v312;
  float32x4_t v313;
  int8x8_t v314;
  float32x4_t v315;
  int8x16_t v316;
  char v317;
  int v318;
  float32x4_t v319;
  float32x4_t v320;
  int8x8_t v321;
  float32x4_t v322;
  int8x16_t v323;
  char v324;
  int v325;
  float32x4_t v326;
  int8x8_t v327;
  float32x4_t v328;
  int8x16_t v329;
  char v330;
  int v331;
  int8x16_t v332;
  float32x4_t v333;
  int8x8_t v334;
  float32x4_t v335;
  float32x2_t v336;
  char v337;
  int v338;
  float32x4_t v339;
  float32x4_t v340;
  float32x4_t v341;
  int8x8_t v342;
  float32x4_t v343;
  int8x16_t v344;
  float32x2_t v345;
  char v346;
  int v347;
  float32x4_t v348;
  float32x4_t v349;
  int8x8_t v350;
  float32x4_t v351;
  int8x16_t v352;
  char v353;
  int v354;
  float32x4_t v355;
  float32x4_t v356;
  int8x8_t v357;
  float32x4_t v358;
  int8x16_t v359;
  char v360;
  int v361;
  float32x4_t v362;
  float32x4_t v363;
  int8x8_t v364;
  float32x4_t v365;
  int8x16_t v366;
  char v367;
  int v368;
  float32x4_t v369;
  int8x8_t v370;
  float32x4_t v371;
  int8x16_t v372;
  char v373;
  int v374;
  float32x4_t v375;
  int8x8_t v376;
  float32x4_t v377;
  int8x16_t v378;
  char v379;
  int v380;
  float32x4_t v381;
  float32x4_t v382;
  int8x8_t v383;
  float32x4_t v384;
  int8x16_t v385;
  char v386;
  int v387;
  float32x4_t v388;
  float32x4_t v389;
  int8x8_t v390;
  float32x4_t v391;
  int8x16_t v392;
  char v393;
  int v394;
  int v395;
  float32x4_t v396;
  float32x4_t v397;
  int8x16_t v398;
  int8x8_t v399;
  float32x4_t v400;
  int8x16_t v401;
  char v402;
  int v403;
  int v404;
  float32x4_t v405;
  int8x8_t v406;
  float32x4_t v407;
  int8x16_t v408;
  char v409;
  int v410;
  float32x4_t v411;
  float32x4_t v412;
  int8x8_t v413;
  float32x4_t v414;
  int8x16_t v415;
  char v416;
  int v417;
  float32x4_t v418;
  float32x4_t v419;
  int8x8_t v420;
  float32x4_t v421;
  int8x16_t v422;
  char v423;
  int v424;
  float32x4_t v425;
  int8x8_t v426;
  float32x4_t v427;
  int8x16_t v428;
  char v429;
  int v430;
  float32x4_t v431;
  int8x8_t v432;
  float32x4_t v433;
  int8x16_t v434;
  char v435;
  int v436;
  float32x4_t v437;
  float32x4_t v438;
  int8x8_t v439;
  float32x4_t v440;
  int8x16_t v441;
  char v442;
  int v443;
  float32x4_t v444;
  float32x4_t v445;
  int8x8_t v446;
  float32x4_t v447;
  int8x16_t v448;
  char v449;
  int v450;
  float32x4_t v451;
  int8x8_t v452;
  float32x4_t v453;
  int8x16_t v454;
  char v455;
  int v456;
  float32x4_t v457;
  int8x8_t v458;
  float32x4_t v459;
  int8x16_t v460;
  char v461;
  int v462;
  float32x4_t v463;
  float32x4_t v464;
  int8x8_t v465;
  float32x4_t v466;
  int8x16_t v467;
  char v468;
  int v469;
  float32x4_t v470;
  float32x4_t v471;
  int8x8_t v472;
  float32x4_t v473;
  int8x16_t v474;
  char v475;
  int v476;
  float32x4_t v477;
  float32x4_t v478;
  int8x8_t v479;
  float32x4_t v480;
  int8x16_t v481;
  char v482;
  int v483;
  float32x4_t v484;
  float32x4_t v485;
  int8x8_t v486;
  float32x4_t v487;
  int8x16_t v488;
  char v489;
  int v490;
  float32x4_t v491;
  float32x4_t v492;
  int8x8_t v493;
  float32x4_t v494;
  int8x16_t v495;
  char v496;
  int v497;
  float32x4_t v498;
  float32x4_t v499;
  int8x8_t v500;
  float32x4_t v501;
  int8x16_t v502;
  char v503;
  int v504;
  float32x4_t v505;
  int8x8_t v506;
  float32x4_t v507;
  int8x16_t v508;
  char v509;
  int v510;
  float32x4_t v511;
  int8x8_t v512;
  float32x4_t v513;
  int8x16_t v514;
  char v515;
  int v516;
  float32x4_t v517;
  float32x4_t v518;
  int8x8_t v519;
  float32x4_t v520;
  int8x16_t v521;
  char v522;
  int v523;
  float32x4_t v524;
  float32x4_t v525;
  int8x8_t v526;
  float32x4_t v527;
  int8x16_t v528;
  char v529;
  int v530;
  int8x16_t v531;
  float32x4_t v532;
  float32x4_t v533;
  int8x8_t v534;
  float32x4_t v535;
  char v536;
  int v537;
  float32x4_t v538;
  int8x8_t v539;
  float32x4_t v540;
  int8x16_t v541;
  char v542;
  int v543;
  float32x4_t v544;
  int8x16_t v545;
  float32x4_t v546;
  int8x8_t v547;
  float32x4_t v548;
  float32x2_t v549;
  char v550;
  int v551;
  float32x4_t v552;
  int8x8_t v553;
  float32x4_t v554;
  int8x16_t v555;
  char v556;
  int v557;
  float32x4_t v558;
  float32x4_t v559;
  int8x8_t v560;
  float32x4_t v561;
  int8x16_t v562;
  char v563;
  int v564;
  float32x4_t v565;
  float32x4_t v566;
  int8x8_t v567;
  float32x4_t v568;
  int8x16_t v569;
  char v570;
  int v571;
  float32x4_t v572;
  int8x8_t v573;
  float32x4_t v574;
  int8x16_t v575;
  char v576;
  int v577;
  float32x4_t v578;
  int8x8_t v579;
  float32x4_t v580;
  int8x16_t v581;
  char v582;
  int v583;
  float32x4_t v584;
  int8x16_t v585;
  int8x8_t v586;
  float32x4_t v587;
  char v588;
  int v589;
  int8x16_t v590;
  int8x8_t v591;
  float32x4_t v592;
  char v593;

  *(int32x2_t *)a4.f32 = *a2;
  v18.i32[1] = 2;
  *(int32x2_t *)a6.f32 = vadd_s32(*a2, (int32x2_t)0x200000001);
  v14 = a2[1].i32[0];
  v15 = (_BYTE *)***a1;
  v16 = *(*a1)[5];
  v17 = (char)v15[806];
  v18.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v16 + 40784) + 312);
  *(float32x2_t *)a7.f32 = vcvt_f32_s32(*(int32x2_t *)a6.f32);
  v19 = a7;
  v19.f32[2] = (float)v14;
  v20.i64[0] = 0x3F0000003F000000;
  v20.i64[1] = 0x3F0000003F000000;
  if (v15[806])
  {
    v21 = vaddq_f32(v19, v20);
    v22 = *(_QWORD *)(v16 + 8);
    v19.i32[0] = **(_DWORD **)(v16 + 16);
    if (v17 > 0)
      goto LABEL_10;
  }
  else
  {
    a10.i8[0] = v15[803];
    a10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.f32));
    a10.f32[0] = (float)a10.i32[0];
    v10.i8[0] = v15[804];
    v23 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v23.i32 = (float)v23.i32[0];
    a10.i32[1] = v23.i32[0];
    v23.i8[0] = v15[805];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v23));
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v19 = vaddq_f32(v19, v20);
    v21 = vaddq_f32(v19, vmulq_f32(a10, (float32x4_t)vdupq_n_s32(0x3B808081u)));
    v22 = *(_QWORD *)(v16 + 8);
    v19.i32[0] = **(_DWORD **)(v16 + 16);
    if (v17 > 0)
      goto LABEL_10;
  }
  a10.i64[0] = *(_QWORD *)v22;
  a10.i32[2] = *(_DWORD *)(v22 + 8);
  v24 = (int8x16_t)vmlsq_lane_f32(a10, v21, v18, 0);
  v10 = (float32x4_t)vextq_s8(v24, v24, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v24.i8, *(float32x2_t *)v24.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.i8, 1), *(float32x2_t *)v24.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v25 = v15[806] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v25;
    if (v17)
      return 0;
  }
LABEL_10:
  v26 = v14 + 1;
  v27 = (char)v15[846];
  if (v15[846])
  {
    v28 = a7;
    v28.f32[2] = (float)v26;
    v29.i64[0] = 0x3F0000003F000000;
    v29.i64[1] = 0x3F0000003F000000;
    v30 = vaddq_f32(v28, v29);
    if (v27 > 0)
      goto LABEL_19;
  }
  else
  {
    v31 = a7;
    v31.f32[2] = (float)v26;
    v32.i64[0] = 0x3F0000003F000000;
    v32.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v15[843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[844];
    v33 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v33.i32 = (float)v33.i32[0];
    v10.i32[1] = v33.i32[0];
    v33.i8[0] = v15[845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v33)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v34 = vaddq_f32(v31, v32);
    v28 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v30 = vaddq_f32(v34, v28);
    if (v27 > 0)
      goto LABEL_19;
  }
  v28.i64[0] = *(_QWORD *)v22;
  v28.i32[2] = *(_DWORD *)(v22 + 8);
  v35 = (int8x16_t)vmlsq_lane_f32(v28, v30, v18, 0);
  v10 = (float32x4_t)vextq_s8(v35, v35, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v35.i8, *(float32x2_t *)v35.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v35.i8, 1), *(float32x2_t *)v35.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v36 = v15[846] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v36;
    if (v27)
      return 0;
  }
LABEL_19:
  v37 = a4.i32[1] + 3;
  v38 = (char)v15[886];
  if (v15[886])
  {
    v39 = a6;
    v39.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v39.f32 = vcvt_f32_s32(*(int32x2_t *)v39.f32);
    v39.f32[2] = (float)v14;
    v40.i64[0] = 0x3F0000003F000000;
    v40.i64[1] = 0x3F0000003F000000;
    v41 = vaddq_f32(v39, v40);
    if (v38 > 0)
      goto LABEL_28;
  }
  else
  {
    v42 = a6;
    v42.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v42.f32 = vcvt_f32_s32(*(int32x2_t *)v42.f32);
    v42.f32[2] = (float)v14;
    v43.i64[0] = 0x3F0000003F000000;
    v43.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v15[883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[884];
    v44 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v44.i32 = (float)v44.i32[0];
    v10.i32[1] = v44.i32[0];
    v44.i8[0] = v15[885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v44)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v45 = vaddq_f32(v42, v43);
    v40 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v41 = vaddq_f32(v45, v40);
    if (v38 > 0)
      goto LABEL_28;
  }
  v40.i64[0] = *(_QWORD *)v22;
  v40.i32[2] = *(_DWORD *)(v22 + 8);
  v46 = (int8x16_t)vmlsq_lane_f32(v40, v41, v18, 0);
  v10 = (float32x4_t)vextq_s8(v46, v46, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v46.i8, *(float32x2_t *)v46.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v46.i8, 1), *(float32x2_t *)v46.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v47 = v15[886] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v47;
    if (v38)
      return 0;
  }
LABEL_28:
  v48 = (char)v15[926];
  if (v15[926])
  {
    v49 = a6;
    v49.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v49.f32 = vcvt_f32_s32(*(int32x2_t *)v49.f32);
    v49.f32[2] = (float)v26;
    v50.i64[0] = 0x3F0000003F000000;
    v50.i64[1] = 0x3F0000003F000000;
    v51 = vaddq_f32(v49, v50);
    if (v48 > 0)
      goto LABEL_37;
  }
  else
  {
    v52 = a6;
    v52.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v52.f32 = vcvt_f32_s32(*(int32x2_t *)v52.f32);
    v52.f32[2] = (float)v26;
    v53.i64[0] = 0x3F0000003F000000;
    v53.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v15[923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[924];
    v54 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v54.i32 = (float)v54.i32[0];
    v10.i32[1] = v54.i32[0];
    v54.i8[0] = v15[925];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v54)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v55 = vaddq_f32(v52, v53);
    v50 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v51 = vaddq_f32(v55, v50);
    if (v48 > 0)
      goto LABEL_37;
  }
  v50.i64[0] = *(_QWORD *)v22;
  v50.i32[2] = *(_DWORD *)(v22 + 8);
  v56 = (int8x16_t)vmlsq_lane_f32(v50, v51, v18, 0);
  v10 = (float32x4_t)vextq_s8(v56, v56, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v56.i8, *(float32x2_t *)v56.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v56.i8, 1), *(float32x2_t *)v56.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v57 = v15[926] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v57;
    if (v48)
      return 0;
  }
LABEL_37:
  v58 = v14 + 2;
  v59 = (char)v15[966];
  *(float32x2_t *)v51.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
  v51.f32[2] = (float)(v14 + 2);
  v60.i64[0] = 0x3F0000003F000000;
  v60.i64[1] = 0x3F0000003F000000;
  if (!v15[966])
  {
    v10.i8[0] = v15[963];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[964];
    v61 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v61.i32 = (float)v61.i32[0];
    v10.i32[1] = v61.i32[0];
    v61.i8[0] = v15[965];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v61)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v51 = vaddq_f32(v51, v60);
    v60 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v62 = vaddq_f32(v51, v60);
  if (v59 <= 0)
  {
    v60.i64[0] = *(_QWORD *)v22;
    v60.i32[2] = *(_DWORD *)(v22 + 8);
    v63 = (int8x16_t)vmlsq_lane_f32(v60, v62, v18, 0);
    v10 = (float32x4_t)vextq_s8(v63, v63, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v63.i8, *(float32x2_t *)v63.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v63.i8, 1), *(float32x2_t *)v63.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v64 = v15[966] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v64;
      if (v59)
        return 0;
    }
  }
  v65 = v14 + 3;
  v66 = (char)v15[1006];
  if (v15[1006])
  {
    *(float32x2_t *)v62.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
    v62.f32[2] = (float)v65;
    v67.i64[0] = 0x3F0000003F000000;
    v67.i64[1] = 0x3F0000003F000000;
    v68 = vaddq_f32(v62, v67);
    if (v66 > 0)
      goto LABEL_54;
  }
  else
  {
    *(float32x2_t *)v62.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
    v62.f32[2] = (float)v65;
    v69.i64[0] = 0x3F0000003F000000;
    v69.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v15[1003];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1004];
    v70 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v70.i32 = (float)v70.i32[0];
    v10.i32[1] = v70.i32[0];
    v70.i8[0] = v15[1005];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v70)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v71 = vaddq_f32(v62, v69);
    v67 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v68 = vaddq_f32(v71, v67);
    if (v66 > 0)
      goto LABEL_54;
  }
  v67.i64[0] = *(_QWORD *)v22;
  v67.i32[2] = *(_DWORD *)(v22 + 8);
  v72 = (int8x16_t)vmlsq_lane_f32(v67, v68, v18, 0);
  v10 = (float32x4_t)vextq_s8(v72, v72, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v72.i8, *(float32x2_t *)v72.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v72.i8, 1), *(float32x2_t *)v72.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v73 = v15[1006] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v73;
    if (v66)
      return 0;
  }
LABEL_54:
  v74 = (char)v15[1046];
  if (v15[1046])
  {
    v75 = a4;
    v75.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v75.f32 = vcvt_f32_s32(*(int32x2_t *)v75.f32);
    v75.f32[2] = (float)v58;
    v76.i64[0] = 0x3F0000003F000000;
    v76.i64[1] = 0x3F0000003F000000;
    v77 = vaddq_f32(v75, v76);
    if (v74 > 0)
      goto LABEL_63;
  }
  else
  {
    v78 = a4;
    v78.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v78.f32 = vcvt_f32_s32(*(int32x2_t *)v78.f32);
    v78.f32[2] = (float)v58;
    v79.i64[0] = 0x3F0000003F000000;
    v79.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v15[1043];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1044];
    v80 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v80.i32 = (float)v80.i32[0];
    v10.i32[1] = v80.i32[0];
    v80.i8[0] = v15[1045];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v80)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v81 = vaddq_f32(v78, v79);
    v76 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v77 = vaddq_f32(v81, v76);
    if (v74 > 0)
      goto LABEL_63;
  }
  v76.i64[0] = *(_QWORD *)v22;
  v76.i32[2] = *(_DWORD *)(v22 + 8);
  v82 = (int8x16_t)vmlsq_lane_f32(v76, v77, v18, 0);
  v10 = (float32x4_t)vextq_s8(v82, v82, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v82.i8, *(float32x2_t *)v82.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v82.i8, 1), *(float32x2_t *)v82.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v83 = v15[1046] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v83;
    if (v74)
      return 0;
  }
LABEL_63:
  v84 = (char)v15[1086];
  if (v15[1086])
  {
    v85 = a4;
    v85.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v85.f32 = vcvt_f32_s32(*(int32x2_t *)v85.f32);
    v85.f32[2] = (float)v65;
    v86.i64[0] = 0x3F0000003F000000;
    v86.i64[1] = 0x3F0000003F000000;
    v87 = vaddq_f32(v85, v86);
    if (v84 > 0)
      goto LABEL_72;
  }
  else
  {
    v88 = a4;
    v88.i32[1] = a4.i32[1] + 3;
    *(float32x2_t *)v88.f32 = vcvt_f32_s32(*(int32x2_t *)v88.f32);
    v88.f32[2] = (float)v65;
    v89.i64[0] = 0x3F0000003F000000;
    v89.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v15[1083];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1084];
    v90 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v90.i32 = (float)v90.i32[0];
    v10.i32[1] = v90.i32[0];
    v90.i8[0] = v15[1085];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v90)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v91 = vaddq_f32(v88, v89);
    v86 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v87 = vaddq_f32(v91, v86);
    if (v84 > 0)
      goto LABEL_72;
  }
  v86.i64[0] = *(_QWORD *)v22;
  v86.i32[2] = *(_DWORD *)(v22 + 8);
  v92 = (int8x16_t)vmlsq_lane_f32(v86, v87, v18, 0);
  v10 = (float32x4_t)vextq_s8(v92, v92, 8uLL);
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v92.i8, *(float32x2_t *)v92.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v92.i8, 1), *(float32x2_t *)v92.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v19.f32[0])
  {
    v93 = v15[1086] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v93;
    if (v84)
      return 0;
  }
LABEL_72:
  v94 = (char)v15[1126];
  if (v15[1126])
  {
    v95 = a7;
    v95.f32[2] = (float)v58;
    v96.i64[0] = 0x3F0000003F000000;
    v96.i64[1] = 0x3F0000003F000000;
    v97 = vaddq_f32(v95, v96);
    if (v94 > 0)
      goto LABEL_81;
    goto LABEL_76;
  }
  v98 = a7;
  v98.f32[2] = (float)v58;
  v99.i64[0] = 0x3F0000003F000000;
  v99.i64[1] = 0x3F0000003F000000;
  v10.i8[0] = v15[1123];
  v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
  v10.f32[0] = (float)v10.i32[0];
  v11.i8[0] = v15[1124];
  v100 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
  *(float *)v100.i32 = (float)v100.i32[0];
  v10.i32[1] = v100.i32[0];
  v100.i8[0] = v15[1125];
  v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v100)).u64[0];
  *(float *)v11.i32 = (float)v11.i32[0];
  v10.i32[2] = v11.i32[0];
  v101 = vaddq_f32(v98, v99);
  v95 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  v97 = vaddq_f32(v101, v95);
  if (v94 <= 0)
  {
LABEL_76:
    v95.i64[0] = *(_QWORD *)v22;
    v95.i32[2] = *(_DWORD *)(v22 + 8);
    v102 = (int8x16_t)vmlsq_lane_f32(v95, v97, v18, 0);
    v10 = (float32x4_t)vextq_s8(v102, v102, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v102.i8, *(float32x2_t *)v102.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v102.i8, 1), *(float32x2_t *)v102.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 > v19.f32[0])
      goto LABEL_81;
    v103 = v15[1126] ? 2 : 1;
    **(_BYTE **)(v16 + 24) = v103;
    if (!v94)
      goto LABEL_81;
    return 0;
  }
LABEL_81:
  v104 = (char)v15[1166];
  v105 = a7;
  v105.f32[2] = (float)v65;
  v106.i64[0] = 0x3F0000003F000000;
  v106.i64[1] = 0x3F0000003F000000;
  if (v15[1166])
  {
    v107 = vaddq_f32(v105, v106);
  }
  else
  {
    v10.i8[0] = v15[1163];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1164];
    v108 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v108.i32 = (float)v108.i32[0];
    v10.i32[1] = v108.i32[0];
    v108.i8[0] = v15[1165];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v108)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v109 = vaddq_f32(v105, v106);
    v105 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v107 = vaddq_f32(v109, v105);
  }
  if (v104 <= 0)
  {
    v105.i64[0] = *(_QWORD *)v22;
    v105.i32[2] = *(_DWORD *)(v22 + 8);
    v110 = (int8x16_t)vmlsq_lane_f32(v105, v107, v18, 0);
    v10 = (float32x4_t)vextq_s8(v110, v110, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v110.i8, *(float32x2_t *)v110.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v110.i8, 1), *(float32x2_t *)v110.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v111 = v15[1166] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v111;
      if (v104)
        return 0;
    }
  }
  v112 = (char)v15[1206];
  v113 = a6;
  v113.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v113.f32 = vcvt_f32_s32(*(int32x2_t *)v113.f32);
  v113.f32[2] = (float)v58;
  v114.i64[0] = 0x3F0000003F000000;
  v114.i64[1] = 0x3F0000003F000000;
  if (!v15[1206])
  {
    v10.i8[0] = v15[1203];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1204];
    v115 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v115.i32 = (float)v115.i32[0];
    v10.i32[1] = v115.i32[0];
    v115.i8[0] = v15[1205];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v115)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v113 = vaddq_f32(v113, v114);
    v114 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v116 = vaddq_f32(v113, v114);
  if (v112 <= 0)
  {
    v114.i64[0] = *(_QWORD *)v22;
    v114.i32[2] = *(_DWORD *)(v22 + 8);
    v117 = (int8x16_t)vmlsq_lane_f32(v114, v116, v18, 0);
    v10 = (float32x4_t)vextq_s8(v117, v117, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v117.i8, *(float32x2_t *)v117.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v117.i8, 1), *(float32x2_t *)v117.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v118 = v15[1206] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v118;
      if (v112)
        return 0;
    }
  }
  v119 = (char)v15[1246];
  v120 = a6;
  v120.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v120.f32 = vcvt_f32_s32(*(int32x2_t *)v120.f32);
  v120.f32[2] = (float)v65;
  v121.i64[0] = 0x3F0000003F000000;
  v121.i64[1] = 0x3F0000003F000000;
  if (!v15[1246])
  {
    v10.i8[0] = v15[1243];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1244];
    v122 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v122.i32 = (float)v122.i32[0];
    v10.i32[1] = v122.i32[0];
    v122.i8[0] = v15[1245];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v122)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v120 = vaddq_f32(v120, v121);
    v121 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v123 = vaddq_f32(v120, v121);
  if (v119 <= 0)
  {
    v121.i64[0] = *(_QWORD *)v22;
    v121.i32[2] = *(_DWORD *)(v22 + 8);
    v124 = (int8x16_t)vmlsq_lane_f32(v121, v123, v18, 0);
    v10 = (float32x4_t)vextq_s8(v124, v124, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v124.i8, *(float32x2_t *)v124.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v124.i8, 1), *(float32x2_t *)v124.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v125 = v15[1246] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v125;
      if (v119)
        return 0;
    }
  }
  v126 = a4.i32[0] + 2;
  v127 = (char)v15[1286];
  v128 = a4;
  v128.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v128.f32 = vcvt_f32_s32(*(int32x2_t *)v128.f32);
  v128.f32[2] = (float)v14;
  v129.i64[0] = 0x3F0000003F000000;
  v129.i64[1] = 0x3F0000003F000000;
  if (!v15[1286])
  {
    v10.i8[0] = v15[1283];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1284];
    v130 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v130.i32 = (float)v130.i32[0];
    v10.i32[1] = v130.i32[0];
    v130.i8[0] = v15[1285];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v130)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v128 = vaddq_f32(v128, v129);
    v129 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v131 = vaddq_f32(v128, v129);
  if (v127 <= 0)
  {
    v129.i64[0] = *(_QWORD *)v22;
    v129.i32[2] = *(_DWORD *)(v22 + 8);
    v132 = (int8x16_t)vmlsq_lane_f32(v129, v131, v18, 0);
    v10 = (float32x4_t)vextq_s8(v132, v132, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v132.i8, *(float32x2_t *)v132.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v132.i8, 1), *(float32x2_t *)v132.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v133 = v15[1286] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v133;
      if (v127)
        return 0;
    }
  }
  v134 = (char)v15[1326];
  v135 = a4;
  v135.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v135.f32 = vcvt_f32_s32(*(int32x2_t *)v135.f32);
  v135.f32[2] = (float)v26;
  v136.i64[0] = 0x3F0000003F000000;
  v136.i64[1] = 0x3F0000003F000000;
  if (!v15[1326])
  {
    v10.i8[0] = v15[1323];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1324];
    v137 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v10.i32[1] = v137.i32[0];
    v137.i8[0] = v15[1325];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v137)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v135 = vaddq_f32(v135, v136);
    v136 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v138 = vaddq_f32(v135, v136);
  if (v134 <= 0)
  {
    v136.i64[0] = *(_QWORD *)v22;
    v136.i32[2] = *(_DWORD *)(v22 + 8);
    v139 = (int8x16_t)vmlsq_lane_f32(v136, v138, v18, 0);
    v10 = (float32x4_t)vextq_s8(v139, v139, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v139.i8, *(float32x2_t *)v139.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v139.i8, 1), *(float32x2_t *)v139.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v140 = v15[1326] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v140;
      if (v134)
        return 0;
    }
  }
  v141 = a4.i32[1] + 1;
  v142 = (char)v15[1366];
  *(float32x2_t *)v138.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(a4.i32[1] + 1, v126));
  v138.f32[2] = (float)v14;
  v143.i64[0] = 0x3F0000003F000000;
  v143.i64[1] = 0x3F0000003F000000;
  if (!v15[1366])
  {
    v10.i8[0] = v15[1363];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1364];
    v144 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v144.i32 = (float)v144.i32[0];
    v10.i32[1] = v144.i32[0];
    v144.i8[0] = v15[1365];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v144)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v138 = vaddq_f32(v138, v143);
    v143 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v145 = vaddq_f32(v138, v143);
  if (v142 <= 0)
  {
    v143.i64[0] = *(_QWORD *)v22;
    v143.i32[2] = *(_DWORD *)(v22 + 8);
    v146 = (int8x16_t)vmlsq_lane_f32(v143, v145, v18, 0);
    v10 = (float32x4_t)vextq_s8(v146, v146, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v146.i8, *(float32x2_t *)v146.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v146.i8, 1), *(float32x2_t *)v146.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v147 = v15[1366] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v147;
      if (v142)
        return 0;
    }
  }
  v148 = (char)v15[1406];
  *(float32x2_t *)v145.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v126));
  v145.f32[2] = (float)v26;
  v149.i64[0] = 0x3F0000003F000000;
  v149.i64[1] = 0x3F0000003F000000;
  if (!v15[1406])
  {
    v10.i8[0] = v15[1403];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1404];
    v150 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v150.i32 = (float)v150.i32[0];
    v10.i32[1] = v150.i32[0];
    v150.i8[0] = v15[1405];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v150)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v145 = vaddq_f32(v145, v149);
    v149 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v151 = vaddq_f32(v145, v149);
  if (v148 <= 0)
  {
    v149.i64[0] = *(_QWORD *)v22;
    v149.i32[2] = *(_DWORD *)(v22 + 8);
    v152 = (int8x16_t)vmlsq_lane_f32(v149, v151, v18, 0);
    v10 = (float32x4_t)vextq_s8(v152, v152, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v152.i8, *(float32x2_t *)v152.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v152.i8, 1), *(float32x2_t *)v152.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v153 = v15[1406] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v153;
      if (v148)
        return 0;
    }
  }
  v154 = a4.i32[0] + 3;
  v155 = (char)v15[1446];
  v156 = a4;
  v156.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v156.f32 = vcvt_f32_s32(*(int32x2_t *)v156.f32);
  v156.f32[2] = (float)v14;
  v157.i64[0] = 0x3F0000003F000000;
  v157.i64[1] = 0x3F0000003F000000;
  if (!v15[1446])
  {
    v10.i8[0] = v15[1443];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1444];
    v158 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v158.i32 = (float)v158.i32[0];
    v10.i32[1] = v158.i32[0];
    v158.i8[0] = v15[1445];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v158)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v156 = vaddq_f32(v156, v157);
    v157 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v159 = vaddq_f32(v156, v157);
  if (v155 <= 0)
  {
    v157.i64[0] = *(_QWORD *)v22;
    v157.i32[2] = *(_DWORD *)(v22 + 8);
    v160 = (int8x16_t)vmlsq_lane_f32(v157, v159, v18, 0);
    v10 = (float32x4_t)vextq_s8(v160, v160, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v160.i8, *(float32x2_t *)v160.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v160.i8, 1), *(float32x2_t *)v160.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v161 = v15[1446] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v161;
      if (v155)
        return 0;
    }
  }
  v162 = (char)v15[1486];
  v163 = a4;
  v163.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v163.f32 = vcvt_f32_s32(*(int32x2_t *)v163.f32);
  v163.f32[2] = (float)v26;
  v164.i64[0] = 0x3F0000003F000000;
  v164.i64[1] = 0x3F0000003F000000;
  if (!v15[1486])
  {
    v10.i8[0] = v15[1483];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1484];
    v165 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v165.i32 = (float)v165.i32[0];
    v10.i32[1] = v165.i32[0];
    v165.i8[0] = v15[1485];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v165)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v163 = vaddq_f32(v163, v164);
    v164 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v166 = vaddq_f32(v163, v164);
  if (v162 <= 0)
  {
    v164.i64[0] = *(_QWORD *)v22;
    v164.i32[2] = *(_DWORD *)(v22 + 8);
    v167 = (int8x16_t)vmlsq_lane_f32(v164, v166, v18, 0);
    v10 = (float32x4_t)vextq_s8(v167, v167, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v167.i8, *(float32x2_t *)v167.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v167.i8, 1), *(float32x2_t *)v167.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v168 = v15[1486] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v168;
      if (v162)
        return 0;
    }
  }
  v169 = (char)v15[1526];
  *(float32x2_t *)v166.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v154));
  v166.f32[2] = (float)v14;
  v170.i64[0] = 0x3F0000003F000000;
  v170.i64[1] = 0x3F0000003F000000;
  if (!v15[1526])
  {
    v10.i8[0] = v15[1523];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1524];
    v171 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v171.i32 = (float)v171.i32[0];
    v10.i32[1] = v171.i32[0];
    v171.i8[0] = v15[1525];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v171)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v166 = vaddq_f32(v166, v170);
    v170 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v172 = vaddq_f32(v166, v170);
  if (v169 <= 0)
  {
    v170.i64[0] = *(_QWORD *)v22;
    v170.i32[2] = *(_DWORD *)(v22 + 8);
    v173 = (int8x16_t)vmlsq_lane_f32(v170, v172, v18, 0);
    v10 = (float32x4_t)vextq_s8(v173, v173, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v173.i8, *(float32x2_t *)v173.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v173.i8, 1), *(float32x2_t *)v173.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v174 = v15[1526] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v174;
      if (v169)
        return 0;
    }
  }
  v175 = (char)v15[1566];
  *(float32x2_t *)v172.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v154));
  v172.f32[2] = (float)v26;
  v176.i64[0] = 0x3F0000003F000000;
  v176.i64[1] = 0x3F0000003F000000;
  if (!v15[1566])
  {
    v10.i8[0] = v15[1563];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1564];
    v177 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v177.i32 = (float)v177.i32[0];
    v10.i32[1] = v177.i32[0];
    v177.i8[0] = v15[1565];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v177)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v172 = vaddq_f32(v172, v176);
    v176 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v178 = vaddq_f32(v172, v176);
  if (v175 <= 0)
  {
    v176.i64[0] = *(_QWORD *)v22;
    v176.i32[2] = *(_DWORD *)(v22 + 8);
    v179 = (int8x16_t)vmlsq_lane_f32(v176, v178, v18, 0);
    v10 = (float32x4_t)vextq_s8(v179, v179, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v179.i8, *(float32x2_t *)v179.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v179.i8, 1), *(float32x2_t *)v179.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v180 = v15[1566] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v180;
      if (v175)
        return 0;
    }
  }
  v181 = (char)v15[1606];
  v182 = a4;
  v182.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v182.f32 = vcvt_f32_s32(*(int32x2_t *)v182.f32);
  v182.f32[2] = (float)v58;
  v183.i64[0] = 0x3F0000003F000000;
  v183.i64[1] = 0x3F0000003F000000;
  if (!v15[1606])
  {
    v10.i8[0] = v15[1603];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1604];
    v184 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v184.i32 = (float)v184.i32[0];
    v10.i32[1] = v184.i32[0];
    v184.i8[0] = v15[1605];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v184)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v182 = vaddq_f32(v182, v183);
    v183 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v185 = vaddq_f32(v182, v183);
  if (v181 <= 0)
  {
    v183.i64[0] = *(_QWORD *)v22;
    v183.i32[2] = *(_DWORD *)(v22 + 8);
    v186 = (int8x16_t)vmlsq_lane_f32(v183, v185, v18, 0);
    v10 = (float32x4_t)vextq_s8(v186, v186, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v186.i8, *(float32x2_t *)v186.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v186.i8, 1), *(float32x2_t *)v186.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v187 = v15[1606] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v187;
      if (v181)
        return 0;
    }
  }
  v188 = (char)v15[1646];
  v189 = a4;
  v189.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v189.f32 = vcvt_f32_s32(*(int32x2_t *)v189.f32);
  v189.f32[2] = (float)v65;
  v190.i64[0] = 0x3F0000003F000000;
  v190.i64[1] = 0x3F0000003F000000;
  if (!v15[1646])
  {
    v10.i8[0] = v15[1643];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1644];
    v191 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v191.i32 = (float)v191.i32[0];
    v10.i32[1] = v191.i32[0];
    v191.i8[0] = v15[1645];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v191)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v189 = vaddq_f32(v189, v190);
    v190 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v192 = vaddq_f32(v189, v190);
  if (v188 <= 0)
  {
    v190.i64[0] = *(_QWORD *)v22;
    v190.i32[2] = *(_DWORD *)(v22 + 8);
    v193 = (int8x16_t)vmlsq_lane_f32(v190, v192, v18, 0);
    v10 = (float32x4_t)vextq_s8(v193, v193, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v193.i8, *(float32x2_t *)v193.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v193.i8, 1), *(float32x2_t *)v193.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v194 = v15[1646] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v194;
      if (v188)
        return 0;
    }
  }
  v195 = (char)v15[1686];
  *(float32x2_t *)v192.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v126));
  v192.f32[2] = (float)v58;
  v196.i64[0] = 0x3F0000003F000000;
  v196.i64[1] = 0x3F0000003F000000;
  if (!v15[1686])
  {
    v10.i8[0] = v15[1683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1684];
    v197 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v197.i32 = (float)v197.i32[0];
    v10.i32[1] = v197.i32[0];
    v197.i8[0] = v15[1685];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v197)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v192 = vaddq_f32(v192, v196);
    v196 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v198 = vaddq_f32(v192, v196);
  if (v195 <= 0)
  {
    v196.i64[0] = *(_QWORD *)v22;
    v196.i32[2] = *(_DWORD *)(v22 + 8);
    v199 = (int8x16_t)vmlsq_lane_f32(v196, v198, v18, 0);
    v10 = (float32x4_t)vextq_s8(v199, v199, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v199.i8, *(float32x2_t *)v199.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v199.i8, 1), *(float32x2_t *)v199.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v200 = v15[1686] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v200;
      if (v195)
        return 0;
    }
  }
  v201 = (char)v15[1726];
  *(float32x2_t *)v198.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v126));
  v198.f32[2] = (float)v65;
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  if (!v15[1726])
  {
    v10.i8[0] = v15[1723];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1724];
    v203 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v203.i32 = (float)v203.i32[0];
    v10.i32[1] = v203.i32[0];
    v203.i8[0] = v15[1725];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v203)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v198 = vaddq_f32(v198, v202);
    v202 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v204 = vaddq_f32(v198, v202);
  if (v201 <= 0)
  {
    v202.i64[0] = *(_QWORD *)v22;
    v202.i32[2] = *(_DWORD *)(v22 + 8);
    v205 = (int8x16_t)vmlsq_lane_f32(v202, v204, v18, 0);
    v10 = (float32x4_t)vextq_s8(v205, v205, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v205.i8, *(float32x2_t *)v205.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v205.i8, 1), *(float32x2_t *)v205.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v206 = v15[1726] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v206;
      if (v201)
        return 0;
    }
  }
  v207 = (char)v15[1766];
  v208 = a4;
  v208.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v208.f32 = vcvt_f32_s32(*(int32x2_t *)v208.f32);
  v208.f32[2] = (float)v58;
  v209.i64[0] = 0x3F0000003F000000;
  v209.i64[1] = 0x3F0000003F000000;
  if (!v15[1766])
  {
    v10.i8[0] = v15[1763];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1764];
    v210 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v210.i32 = (float)v210.i32[0];
    v10.i32[1] = v210.i32[0];
    v210.i8[0] = v15[1765];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v210)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v208 = vaddq_f32(v208, v209);
    v209 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v211 = vaddq_f32(v208, v209);
  if (v207 <= 0)
  {
    v209.i64[0] = *(_QWORD *)v22;
    v209.i32[2] = *(_DWORD *)(v22 + 8);
    v212 = (int8x16_t)vmlsq_lane_f32(v209, v211, v18, 0);
    v10 = (float32x4_t)vextq_s8(v212, v212, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v212.i8, *(float32x2_t *)v212.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v212.i8, 1), *(float32x2_t *)v212.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v213 = v15[1766] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v213;
      if (v207)
        return 0;
    }
  }
  v214 = (char)v15[1806];
  v215 = a4;
  v215.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v215.f32 = vcvt_f32_s32(*(int32x2_t *)v215.f32);
  v215.f32[2] = (float)v65;
  v216.i64[0] = 0x3F0000003F000000;
  v216.i64[1] = 0x3F0000003F000000;
  if (!v15[1806])
  {
    v10.i8[0] = v15[1803];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1804];
    v217 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v217.i32 = (float)v217.i32[0];
    v10.i32[1] = v217.i32[0];
    v217.i8[0] = v15[1805];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v217)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v215 = vaddq_f32(v215, v216);
    v216 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v218 = vaddq_f32(v215, v216);
  if (v214 <= 0)
  {
    v216.i64[0] = *(_QWORD *)v22;
    v216.i32[2] = *(_DWORD *)(v22 + 8);
    v219 = (int8x16_t)vmlsq_lane_f32(v216, v218, v18, 0);
    v10 = (float32x4_t)vextq_s8(v219, v219, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v219.i8, *(float32x2_t *)v219.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v219.i8, 1), *(float32x2_t *)v219.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v220 = v15[1806] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v220;
      if (v214)
        return 0;
    }
  }
  v221 = (char)v15[1846];
  *(float32x2_t *)v218.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v154));
  v218.f32[2] = (float)v58;
  v222.i64[0] = 0x3F0000003F000000;
  v222.i64[1] = 0x3F0000003F000000;
  if (!v15[1846])
  {
    v10.i8[0] = v15[1843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1844];
    v223 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v223.i32 = (float)v223.i32[0];
    v10.i32[1] = v223.i32[0];
    v223.i8[0] = v15[1845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v223)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v218 = vaddq_f32(v218, v222);
    v222 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v224 = vaddq_f32(v218, v222);
  if (v221 <= 0)
  {
    v222.i64[0] = *(_QWORD *)v22;
    v222.i32[2] = *(_DWORD *)(v22 + 8);
    v225 = (int8x16_t)vmlsq_lane_f32(v222, v224, v18, 0);
    v10 = (float32x4_t)vextq_s8(v225, v225, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v225.i8, *(float32x2_t *)v225.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v225.i8, 1), *(float32x2_t *)v225.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v226 = v15[1846] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v226;
      if (v221)
        return 0;
    }
  }
  v227 = (char)v15[1886];
  *(float32x2_t *)v224.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v154));
  v224.f32[2] = (float)v65;
  v228.i64[0] = 0x3F0000003F000000;
  v228.i64[1] = 0x3F0000003F000000;
  if (!v15[1886])
  {
    v10.i8[0] = v15[1883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1884];
    v229 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v229.i32 = (float)v229.i32[0];
    v10.i32[1] = v229.i32[0];
    v229.i8[0] = v15[1885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v229)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v224 = vaddq_f32(v224, v228);
    v228 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v230 = vaddq_f32(v224, v228);
  if (v227 <= 0)
  {
    v228.i64[0] = *(_QWORD *)v22;
    v228.i32[2] = *(_DWORD *)(v22 + 8);
    v231 = (int8x16_t)vmlsq_lane_f32(v228, v230, v18, 0);
    v10 = (float32x4_t)vextq_s8(v231, v231, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v231.i8, *(float32x2_t *)v231.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v231.i8, 1), *(float32x2_t *)v231.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v232 = v15[1886] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v232;
      if (v227)
        return 0;
    }
  }
  v233 = (char)v15[1926];
  v234 = a6;
  v234.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v234.f32 = vcvt_f32_s32(*(int32x2_t *)v234.f32);
  v234.f32[2] = (float)v14;
  v235.i64[0] = 0x3F0000003F000000;
  v235.i64[1] = 0x3F0000003F000000;
  if (!v15[1926])
  {
    v10.i8[0] = v15[1923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1924];
    v236 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v236.i32 = (float)v236.i32[0];
    v10.i32[1] = v236.i32[0];
    v236.i8[0] = v15[1925];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v236)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v234 = vaddq_f32(v234, v235);
    v235 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v237 = vaddq_f32(v234, v235);
  if (v233 <= 0)
  {
    v235.i64[0] = *(_QWORD *)v22;
    v235.i32[2] = *(_DWORD *)(v22 + 8);
    v238 = (int8x16_t)vmlsq_lane_f32(v235, v237, v18, 0);
    v10 = (float32x4_t)vextq_s8(v238, v238, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v238.i8, *(float32x2_t *)v238.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v238.i8, 1), *(float32x2_t *)v238.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v239 = v15[1926] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v239;
      if (v233)
        return 0;
    }
  }
  v240 = (char)v15[1966];
  v241 = a6;
  v241.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v241.f32 = vcvt_f32_s32(*(int32x2_t *)v241.f32);
  v241.f32[2] = (float)v26;
  v242.i64[0] = 0x3F0000003F000000;
  v242.i64[1] = 0x3F0000003F000000;
  if (!v15[1966])
  {
    v10.i8[0] = v15[1963];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[1964];
    v243 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v243.i32 = (float)v243.i32[0];
    v10.i32[1] = v243.i32[0];
    v243.i8[0] = v15[1965];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v243)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v241 = vaddq_f32(v241, v242);
    v242 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v244 = vaddq_f32(v241, v242);
  if (v240 <= 0)
  {
    v242.i64[0] = *(_QWORD *)v22;
    v242.i32[2] = *(_DWORD *)(v22 + 8);
    v245 = (int8x16_t)vmlsq_lane_f32(v242, v244, v18, 0);
    v10 = (float32x4_t)vextq_s8(v245, v245, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v245.i8, *(float32x2_t *)v245.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v245.i8, 1), *(float32x2_t *)v245.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v246 = v15[1966] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v246;
      if (v240)
        return 0;
    }
  }
  v247 = (char)v15[2006];
  *(float32x2_t *)v244.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v126));
  v244.f32[2] = (float)v14;
  v248.i64[0] = 0x3F0000003F000000;
  v248.i64[1] = 0x3F0000003F000000;
  if (!v15[2006])
  {
    v10.i8[0] = v15[2003];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[2004];
    v249 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v249.i32 = (float)v249.i32[0];
    v10.i32[1] = v249.i32[0];
    v249.i8[0] = v15[2005];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v249)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v244 = vaddq_f32(v244, v248);
    v248 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v250 = vaddq_f32(v244, v248);
  if (v247 <= 0)
  {
    v248.i64[0] = *(_QWORD *)v22;
    v248.i32[2] = *(_DWORD *)(v22 + 8);
    v251 = (int8x16_t)vmlsq_lane_f32(v248, v250, v18, 0);
    v10 = (float32x4_t)vextq_s8(v251, v251, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v251.i8, *(float32x2_t *)v251.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v251.i8, 1), *(float32x2_t *)v251.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v252 = v15[2006] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v252;
      if (v247)
        return 0;
    }
  }
  v253 = (char)v15[2046];
  *(float32x2_t *)v250.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v126));
  v250.f32[2] = (float)v26;
  v254.i64[0] = 0x3F0000003F000000;
  v254.i64[1] = 0x3F0000003F000000;
  if (!v15[2046])
  {
    v10.i8[0] = v15[2043];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[2044];
    v255 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v255.i32 = (float)v255.i32[0];
    v10.i32[1] = v255.i32[0];
    v255.i8[0] = v15[2045];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v255)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v250 = vaddq_f32(v250, v254);
    v254 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v256 = vaddq_f32(v250, v254);
  if (v253 <= 0)
  {
    v254.i64[0] = *(_QWORD *)v22;
    v254.i32[2] = *(_DWORD *)(v22 + 8);
    v257 = (int8x16_t)vmlsq_lane_f32(v254, v256, v18, 0);
    v10 = (float32x4_t)vextq_s8(v257, v257, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v257.i8, *(float32x2_t *)v257.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v257.i8, 1), *(float32x2_t *)v257.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v258 = v15[2046] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v258;
      if (v253)
        return 0;
    }
  }
  v259 = (char)v15[2086];
  v260 = a6;
  v260.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v260.f32 = vcvt_f32_s32(*(int32x2_t *)v260.f32);
  v260.f32[2] = (float)v14;
  v261.i64[0] = 0x3F0000003F000000;
  v261.i64[1] = 0x3F0000003F000000;
  if (!v15[2086])
  {
    v10.i8[0] = v15[2083];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[2084];
    v262 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v262.i32 = (float)v262.i32[0];
    v10.i32[1] = v262.i32[0];
    v262.i8[0] = v15[2085];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v262)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v260 = vaddq_f32(v260, v261);
    v261 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v263 = vaddq_f32(v260, v261);
  if (v259 <= 0)
  {
    v261.i64[0] = *(_QWORD *)v22;
    v261.i32[2] = *(_DWORD *)(v22 + 8);
    v264 = (int8x16_t)vmlsq_lane_f32(v261, v263, v18, 0);
    v10 = (float32x4_t)vextq_s8(v264, v264, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v264.i8, *(float32x2_t *)v264.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v264.i8, 1), *(float32x2_t *)v264.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v265 = v15[2086] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v265;
      if (v259)
        return 0;
    }
  }
  v266 = (char)v15[2126];
  v267 = a6;
  v267.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v267.f32 = vcvt_f32_s32(*(int32x2_t *)v267.f32);
  v267.f32[2] = (float)v26;
  v268.i64[0] = 0x3F0000003F000000;
  v268.i64[1] = 0x3F0000003F000000;
  if (!v15[2126])
  {
    v10.i8[0] = v15[2123];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v15[2124];
    v269 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v269.i32 = (float)v269.i32[0];
    v10.i32[1] = v269.i32[0];
    v269.i8[0] = v15[2125];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v269)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v267 = vaddq_f32(v267, (float32x4_t)v268);
    v268 = (int8x16_t)vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v270 = vaddq_f32(v267, (float32x4_t)v268);
  if (v266 <= 0)
  {
    v268.i64[0] = *(_QWORD *)v22;
    v268.i32[2] = *(_DWORD *)(v22 + 8);
    v268 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v268, v270, v18, 0);
    v10 = (float32x4_t)vextq_s8(v268, v268, 8uLL);
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v268.i8, 1), *(float32x2_t *)v268.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v19.f32[0])
    {
      v271 = v15[2126] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v271;
      if (v266)
        return 0;
    }
  }
  v272 = (char)v15[2166];
  *(float32x2_t *)v270.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v154));
  v270.f32[2] = (float)v14;
  v273.i64[0] = 0x3F0000003F000000;
  v273.i64[1] = 0x3F0000003F000000;
  if (v15[2166])
  {
    v274 = vaddq_f32(v270, v273);
  }
  else
  {
    v268.i8[0] = v15[2163];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2164];
    v275 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v275.i32 = (float)v275.i32[0];
    v268.i32[1] = v275.i32[0];
    v275.i8[0] = v15[2165];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v275));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v276 = vaddq_f32(v270, v273);
    v270 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v274 = vaddq_f32(v276, v270);
  }
  if (v272 <= 0)
  {
    v270.i64[0] = *(_QWORD *)v22;
    v270.i32[2] = *(_DWORD *)(v22 + 8);
    v277 = (int8x16_t)vmlsq_lane_f32(v270, v274, v18, 0);
    v268.i64[0] = vextq_s8(v277, v277, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v277.i8, *(float32x2_t *)v277.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v277.i8, 1), *(float32x2_t *)v277.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v278 = v15[2166] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v278;
      if (v272)
        return 0;
    }
  }
  v279 = (char)v15[2206];
  *(float32x2_t *)v274.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v154));
  v274.f32[2] = (float)v26;
  v280.i64[0] = 0x3F0000003F000000;
  v280.i64[1] = 0x3F0000003F000000;
  if (!v15[2206])
  {
    v268.i8[0] = v15[2203];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2204];
    v281 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v281.i32 = (float)v281.i32[0];
    v268.i32[1] = v281.i32[0];
    v281.i8[0] = v15[2205];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v281));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v274 = vaddq_f32(v274, v280);
    v280 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v282 = vaddq_f32(v274, v280);
  if (v279 <= 0)
  {
    v280.i64[0] = *(_QWORD *)v22;
    v280.i32[2] = *(_DWORD *)(v22 + 8);
    v283 = (int8x16_t)vmlsq_lane_f32(v280, v282, v18, 0);
    v268.i64[0] = vextq_s8(v283, v283, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v283.i8, *(float32x2_t *)v283.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v283.i8, 1), *(float32x2_t *)v283.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v284 = v15[2206] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v284;
      if (v279)
        return 0;
    }
  }
  v285 = (char)v15[2246];
  v286 = a6;
  v286.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v286.f32 = vcvt_f32_s32(*(int32x2_t *)v286.f32);
  v286.f32[2] = (float)v58;
  v287.i64[0] = 0x3F0000003F000000;
  v287.i64[1] = 0x3F0000003F000000;
  if (!v15[2246])
  {
    v268.i8[0] = v15[2243];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2244];
    v288 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v288.i32 = (float)v288.i32[0];
    v268.i32[1] = v288.i32[0];
    v288.i8[0] = v15[2245];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v288));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v286 = vaddq_f32(v286, v287);
    v287 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v289 = vaddq_f32(v286, v287);
  if (v285 <= 0)
  {
    v287.i64[0] = *(_QWORD *)v22;
    v287.i32[2] = *(_DWORD *)(v22 + 8);
    v290 = (int8x16_t)vmlsq_lane_f32(v287, v289, v18, 0);
    v268.i64[0] = vextq_s8(v290, v290, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v290.i8, *(float32x2_t *)v290.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v290.i8, 1), *(float32x2_t *)v290.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v291 = v15[2246] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v291;
      if (v285)
        return 0;
    }
  }
  v292 = (char)v15[2286];
  v293 = a6;
  v293.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v293.f32 = vcvt_f32_s32(*(int32x2_t *)v293.f32);
  v293.f32[2] = (float)v65;
  v294.i64[0] = 0x3F0000003F000000;
  v294.i64[1] = 0x3F0000003F000000;
  if (!v15[2286])
  {
    v268.i8[0] = v15[2283];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2284];
    v295 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v295.i32 = (float)v295.i32[0];
    v268.i32[1] = v295.i32[0];
    v295.i8[0] = v15[2285];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v295));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v293 = vaddq_f32(v293, v294);
    v294 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v296 = vaddq_f32(v293, v294);
  if (v292 <= 0)
  {
    v294.i64[0] = *(_QWORD *)v22;
    v294.i32[2] = *(_DWORD *)(v22 + 8);
    v297 = (int8x16_t)vmlsq_lane_f32(v294, v296, v18, 0);
    v268.i64[0] = vextq_s8(v297, v297, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v297.i8, *(float32x2_t *)v297.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v297.i8, 1), *(float32x2_t *)v297.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v298 = v15[2286] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v298;
      if (v292)
        return 0;
    }
  }
  v299 = (char)v15[2326];
  *(float32x2_t *)v296.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v126));
  v296.f32[2] = (float)v58;
  v300.i64[0] = 0x3F0000003F000000;
  v300.i64[1] = 0x3F0000003F000000;
  if (!v15[2326])
  {
    v268.i8[0] = v15[2323];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2324];
    v301 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v301.i32 = (float)v301.i32[0];
    v268.i32[1] = v301.i32[0];
    v301.i8[0] = v15[2325];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v301));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v296 = vaddq_f32(v296, v300);
    v300 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v302 = vaddq_f32(v296, v300);
  if (v299 <= 0)
  {
    v300.i64[0] = *(_QWORD *)v22;
    v300.i32[2] = *(_DWORD *)(v22 + 8);
    v303 = (int8x16_t)vmlsq_lane_f32(v300, v302, v18, 0);
    v268.i64[0] = vextq_s8(v303, v303, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v303.i8, *(float32x2_t *)v303.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v303.i8, 1), *(float32x2_t *)v303.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v304 = v15[2326] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v304;
      if (v299)
        return 0;
    }
  }
  v305 = (char)v15[2366];
  *(float32x2_t *)v302.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v126));
  v302.f32[2] = (float)v65;
  v306.i64[0] = 0x3F0000003F000000;
  v306.i64[1] = 0x3F0000003F000000;
  if (!v15[2366])
  {
    v268.i8[0] = v15[2363];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2364];
    v307 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v307.i32 = (float)v307.i32[0];
    v268.i32[1] = v307.i32[0];
    v307.i8[0] = v15[2365];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v307));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v302 = vaddq_f32(v302, v306);
    v306 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v308 = vaddq_f32(v302, v306);
  if (v305 <= 0)
  {
    v306.i64[0] = *(_QWORD *)v22;
    v306.i32[2] = *(_DWORD *)(v22 + 8);
    v309 = (int8x16_t)vmlsq_lane_f32(v306, v308, v18, 0);
    v268.i64[0] = vextq_s8(v309, v309, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v309.i8, *(float32x2_t *)v309.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v309.i8, 1), *(float32x2_t *)v309.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v310 = v15[2366] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v310;
      if (v305)
        return 0;
    }
  }
  v311 = (char)v15[2406];
  v312 = a6;
  v312.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v312.f32 = vcvt_f32_s32(*(int32x2_t *)v312.f32);
  v312.f32[2] = (float)v58;
  v313.i64[0] = 0x3F0000003F000000;
  v313.i64[1] = 0x3F0000003F000000;
  if (!v15[2406])
  {
    v268.i8[0] = v15[2403];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2404];
    v314 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v314.i32 = (float)v314.i32[0];
    v268.i32[1] = v314.i32[0];
    v314.i8[0] = v15[2405];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v314));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v312 = vaddq_f32(v312, v313);
    v313 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v315 = vaddq_f32(v312, v313);
  if (v311 <= 0)
  {
    v313.i64[0] = *(_QWORD *)v22;
    v313.i32[2] = *(_DWORD *)(v22 + 8);
    v316 = (int8x16_t)vmlsq_lane_f32(v313, v315, v18, 0);
    v268.i64[0] = vextq_s8(v316, v316, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v316.i8, *(float32x2_t *)v316.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v316.i8, 1), *(float32x2_t *)v316.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v317 = v15[2406] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v317;
      if (v311)
        return 0;
    }
  }
  v318 = (char)v15[2446];
  v319 = a6;
  v319.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v319.f32 = vcvt_f32_s32(*(int32x2_t *)v319.f32);
  v319.f32[2] = (float)v65;
  v320.i64[0] = 0x3F0000003F000000;
  v320.i64[1] = 0x3F0000003F000000;
  if (!v15[2446])
  {
    v268.i8[0] = v15[2443];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2444];
    v321 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v321.i32 = (float)v321.i32[0];
    v268.i32[1] = v321.i32[0];
    v321.i8[0] = v15[2445];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v321));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v319 = vaddq_f32(v319, v320);
    v320 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v322 = vaddq_f32(v319, v320);
  if (v318 <= 0)
  {
    v320.i64[0] = *(_QWORD *)v22;
    v320.i32[2] = *(_DWORD *)(v22 + 8);
    v323 = (int8x16_t)vmlsq_lane_f32(v320, v322, v18, 0);
    v268.i64[0] = vextq_s8(v323, v323, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v323.i8, *(float32x2_t *)v323.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v323.i8, 1), *(float32x2_t *)v323.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v324 = v15[2446] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v324;
      if (v318)
        return 0;
    }
  }
  v325 = (char)v15[2486];
  *(float32x2_t *)v322.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v154));
  v322.f32[2] = (float)v58;
  v326.i64[0] = 0x3F0000003F000000;
  v326.i64[1] = 0x3F0000003F000000;
  if (!v15[2486])
  {
    v268.i8[0] = v15[2483];
    v268 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i8[0] = v15[2484];
    v327 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v327.i32 = (float)v327.i32[0];
    v268.i32[1] = v327.i32[0];
    v327.i8[0] = v15[2485];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v327));
    v10.f32[0] = (float)v10.i32[0];
    v268.i32[2] = v10.i32[0];
    v322 = vaddq_f32(v322, v326);
    v326 = vmulq_f32((float32x4_t)v268, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v328 = vaddq_f32(v322, v326);
  if (v325 <= 0)
  {
    v326.i64[0] = *(_QWORD *)v22;
    v326.i32[2] = *(_DWORD *)(v22 + 8);
    v329 = (int8x16_t)vmlsq_lane_f32(v326, v328, v18, 0);
    v268.i64[0] = vextq_s8(v329, v329, 8uLL).u64[0];
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v329.i8, *(float32x2_t *)v329.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v329.i8, 1), *(float32x2_t *)v329.i8, 1), *(float32x2_t *)v268.i8, *(float32x2_t *)v268.i8);
    if (v10.f32[0] <= v19.f32[0])
    {
      v330 = v15[2486] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v330;
      if (v325)
        return 0;
    }
  }
  v331 = (char)v15[2526];
  *(float32x2_t *)v328.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v37, v154));
  v328.f32[2] = (float)v65;
  v332.i64[0] = 0x3F0000003F000000;
  v332.i64[1] = 0x3F0000003F000000;
  if (!v15[2526])
  {
    v268.i8[0] = v15[2523];
    v333 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v268.i8));
    v333.f32[0] = (float)v333.i32[0];
    v10.i8[0] = v15[2524];
    v334 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v334.i32 = (float)v334.i32[0];
    v333.i32[1] = v334.i32[0];
    v334.i8[0] = v15[2525];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v334));
    v333.f32[2] = (float)v10.i32[0];
    v328 = vaddq_f32(v328, (float32x4_t)v332);
    v332 = (int8x16_t)vmulq_f32(v333, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v335 = vaddq_f32(v328, (float32x4_t)v332);
  if (v331 <= 0)
  {
    v332.i64[0] = *(_QWORD *)v22;
    v332.i32[2] = *(_DWORD *)(v22 + 8);
    v332 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v332, v335, v18, 0);
    v336 = (float32x2_t)vextq_s8(v332, v332, 8uLL).u64[0];
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v332.i8, *(float32x2_t *)v332.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v332.i8, 1), *(float32x2_t *)v332.i8, 1), v336, v336).f32[0] <= v19.f32[0])
    {
      v337 = v15[2526] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v337;
      if (v331)
        return 0;
    }
  }
  v338 = (char)v15[2566];
  *(float32x2_t *)v10.f32 = vcvt_f32_s32(*(int32x2_t *)a4.f32);
  *(float *)v332.i32 = (float)(v14 + 4);
  v339 = v10;
  v339.f32[2] = *(float *)v332.i32;
  v340.i64[0] = 0x3F0000003F000000;
  v340.i64[1] = 0x3F0000003F000000;
  if (!v15[2566])
  {
    v11.i8[0] = v15[2563];
    v341 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11));
    v341.f32[0] = (float)v341.i32[0];
    v12.i8[0] = v15[2564];
    v342 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32)).u64[0];
    *(float *)v342.i32 = (float)v342.i32[0];
    v341.i32[1] = v342.i32[0];
    v342.i8[0] = v15[2565];
    v12.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v342)).u64[0];
    v12.f32[0] = (float)v12.i32[0];
    v341.i32[2] = v12.i32[0];
    v339 = vaddq_f32(v339, v340);
    v340 = vmulq_f32(v341, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v343 = vaddq_f32(v339, v340);
  if (v338 <= 0)
  {
    v340.i64[0] = *(_QWORD *)v22;
    v340.i32[2] = *(_DWORD *)(v22 + 8);
    v344 = (int8x16_t)vmlsq_lane_f32(v340, v343, v18, 0);
    *(int32x2_t *)v343.f32 = vdup_lane_s32(*(int32x2_t *)v344.i8, 1);
    v345 = (float32x2_t)vextq_s8(v344, v344, 8uLL).u64[0];
    *(float32x2_t *)v12.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v344.i8, *(float32x2_t *)v344.i8), *(float32x2_t *)v343.f32, *(float32x2_t *)v344.i8, 1), v345, v345);
    if (v12.f32[0] <= v19.f32[0])
    {
      v346 = v15[2566] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v346;
      if (v338)
        return 0;
    }
  }
  v347 = (char)v15[2606];
  v343.f32[0] = (float)(v14 + 5);
  v348 = v10;
  v348.f32[2] = v343.f32[0];
  v349.i64[0] = 0x3F0000003F000000;
  v349.i64[1] = 0x3F0000003F000000;
  if (!v15[2606])
  {
    v12.i8[0] = v15[2603];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2604];
    v350 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v350.i32 = (float)v350.i32[0];
    v12.i32[1] = v350.i32[0];
    v350.i8[0] = v15[2605];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v350)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v348 = vaddq_f32(v348, v349);
    v349 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v351 = vaddq_f32(v348, v349);
  if (v347 <= 0)
  {
    v349.i64[0] = *(_QWORD *)v22;
    v349.i32[2] = *(_DWORD *)(v22 + 8);
    v352 = (int8x16_t)vmlsq_lane_f32(v349, v351, v18, 0);
    v12.i64[0] = vextq_s8(v352, v352, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v352.i8, *(float32x2_t *)v352.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v352.i8, 1), *(float32x2_t *)v352.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v353 = v15[2606] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v353;
      if (v347)
        return 0;
    }
  }
  v354 = (char)v15[2646];
  v355 = a4;
  v355.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v355.f32 = vcvt_f32_s32(*(int32x2_t *)v355.f32);
  v355.f32[2] = (float)(v14 + 4);
  v356.i64[0] = 0x3F0000003F000000;
  v356.i64[1] = 0x3F0000003F000000;
  if (!v15[2646])
  {
    v12.i8[0] = v15[2643];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2644];
    v357 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v357.i32 = (float)v357.i32[0];
    v12.i32[1] = v357.i32[0];
    v357.i8[0] = v15[2645];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v357)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v355 = vaddq_f32(v355, v356);
    v356 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v358 = vaddq_f32(v355, v356);
  if (v354 <= 0)
  {
    v356.i64[0] = *(_QWORD *)v22;
    v356.i32[2] = *(_DWORD *)(v22 + 8);
    v359 = (int8x16_t)vmlsq_lane_f32(v356, v358, v18, 0);
    v12.i64[0] = vextq_s8(v359, v359, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v359.i8, *(float32x2_t *)v359.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v359.i8, 1), *(float32x2_t *)v359.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v360 = v15[2646] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v360;
      if (v354)
        return 0;
    }
  }
  v361 = (char)v15[2686];
  v362 = a4;
  v362.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v362.f32 = vcvt_f32_s32(*(int32x2_t *)v362.f32);
  v362.f32[2] = (float)(v14 + 5);
  v363.i64[0] = 0x3F0000003F000000;
  v363.i64[1] = 0x3F0000003F000000;
  if (!v15[2686])
  {
    v12.i8[0] = v15[2683];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2684];
    v364 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v364.i32 = (float)v364.i32[0];
    v12.i32[1] = v364.i32[0];
    v364.i8[0] = v15[2685];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v364)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v362 = vaddq_f32(v362, v363);
    v363 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v365 = vaddq_f32(v362, v363);
  if (v361 <= 0)
  {
    v363.i64[0] = *(_QWORD *)v22;
    v363.i32[2] = *(_DWORD *)(v22 + 8);
    v366 = (int8x16_t)vmlsq_lane_f32(v363, v365, v18, 0);
    v12.i64[0] = vextq_s8(v366, v366, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v366.i8, *(float32x2_t *)v366.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v366.i8, 1), *(float32x2_t *)v366.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v367 = v15[2686] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v367;
      if (v361)
        return 0;
    }
  }
  v368 = (char)v15[2726];
  *(float32x2_t *)v365.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)1));
  v365.f32[2] = (float)(v14 + 4);
  v369.i64[0] = 0x3F0000003F000000;
  v369.i64[1] = 0x3F0000003F000000;
  if (!v15[2726])
  {
    v12.i8[0] = v15[2723];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2724];
    v370 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v370.i32 = (float)v370.i32[0];
    v12.i32[1] = v370.i32[0];
    v370.i8[0] = v15[2725];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v370)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v365 = vaddq_f32(v365, v369);
    v369 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v371 = vaddq_f32(v365, v369);
  if (v368 <= 0)
  {
    v369.i64[0] = *(_QWORD *)v22;
    v369.i32[2] = *(_DWORD *)(v22 + 8);
    v372 = (int8x16_t)vmlsq_lane_f32(v369, v371, v18, 0);
    v12.i64[0] = vextq_s8(v372, v372, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v372.i8, *(float32x2_t *)v372.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v372.i8, 1), *(float32x2_t *)v372.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v373 = v15[2726] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v373;
      if (v368)
        return 0;
    }
  }
  v374 = (char)v15[2766];
  *(float32x2_t *)v371.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)1));
  v371.f32[2] = (float)(v14 + 5);
  v375.i64[0] = 0x3F0000003F000000;
  v375.i64[1] = 0x3F0000003F000000;
  if (!v15[2766])
  {
    v12.i8[0] = v15[2763];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2764];
    v376 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v376.i32 = (float)v376.i32[0];
    v12.i32[1] = v376.i32[0];
    v376.i8[0] = v15[2765];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v376)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v371 = vaddq_f32(v371, v375);
    v375 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v377 = vaddq_f32(v371, v375);
  if (v374 <= 0)
  {
    v375.i64[0] = *(_QWORD *)v22;
    v375.i32[2] = *(_DWORD *)(v22 + 8);
    v378 = (int8x16_t)vmlsq_lane_f32(v375, v377, v18, 0);
    v12.i64[0] = vextq_s8(v378, v378, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v378.i8, *(float32x2_t *)v378.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v378.i8, 1), *(float32x2_t *)v378.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v379 = v15[2766] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v379;
      if (v374)
        return 0;
    }
  }
  v380 = (char)v15[2806];
  v381 = a6;
  v381.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v381.f32 = vcvt_f32_s32(*(int32x2_t *)v381.f32);
  v381.f32[2] = (float)(v14 + 4);
  v382.i64[0] = 0x3F0000003F000000;
  v382.i64[1] = 0x3F0000003F000000;
  if (!v15[2806])
  {
    v12.i8[0] = v15[2803];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2804];
    v383 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v383.i32 = (float)v383.i32[0];
    v12.i32[1] = v383.i32[0];
    v383.i8[0] = v15[2805];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v383)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v381 = vaddq_f32(v381, v382);
    v382 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v384 = vaddq_f32(v381, v382);
  if (v380 <= 0)
  {
    v382.i64[0] = *(_QWORD *)v22;
    v382.i32[2] = *(_DWORD *)(v22 + 8);
    v385 = (int8x16_t)vmlsq_lane_f32(v382, v384, v18, 0);
    v12.i64[0] = vextq_s8(v385, v385, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v385.i8, 1), *(float32x2_t *)v385.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v386 = v15[2806] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v386;
      if (v380)
        return 0;
    }
  }
  v387 = (char)v15[2846];
  v388 = a6;
  v388.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v388.f32 = vcvt_f32_s32(*(int32x2_t *)v388.f32);
  v388.f32[2] = (float)(v14 + 5);
  v389.i64[0] = 0x3F0000003F000000;
  v389.i64[1] = 0x3F0000003F000000;
  if (!v15[2846])
  {
    v12.i8[0] = v15[2843];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2844];
    v390 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v390.i32 = (float)v390.i32[0];
    v12.i32[1] = v390.i32[0];
    v390.i8[0] = v15[2845];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v390)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v388 = vaddq_f32(v388, v389);
    v389 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v391 = vaddq_f32(v388, v389);
  if (v387 <= 0)
  {
    v389.i64[0] = *(_QWORD *)v22;
    v389.i32[2] = *(_DWORD *)(v22 + 8);
    v392 = (int8x16_t)vmlsq_lane_f32(v389, v391, v18, 0);
    v12.i64[0] = vextq_s8(v392, v392, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v392.i8, *(float32x2_t *)v392.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v392.i8, 1), *(float32x2_t *)v392.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v393 = v15[2846] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v393;
      if (v387)
        return 0;
    }
  }
  v394 = v14 + 6;
  v395 = (char)v15[2886];
  v396 = v10;
  v396.f32[2] = (float)(v14 + 6);
  v397.i64[0] = 0x3F0000003F000000;
  v397.i64[1] = 0x3F0000003F000000;
  if (v15[2886])
  {
    v398 = (int8x16_t)vaddq_f32(v396, v397);
  }
  else
  {
    v12.i8[0] = v15[2883];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2884];
    v399 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v399.i32 = (float)v399.i32[0];
    v12.i32[1] = v399.i32[0];
    v399.i8[0] = v15[2885];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v399)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v400 = vaddq_f32(v396, v397);
    v396 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v398 = (int8x16_t)vaddq_f32(v400, v396);
  }
  if (v395 <= 0)
  {
    v396.i64[0] = *(_QWORD *)v22;
    v396.i32[2] = *(_DWORD *)(v22 + 8);
    v401 = (int8x16_t)vmlsq_lane_f32(v396, (float32x4_t)v398, v18, 0);
    *(int32x2_t *)v398.i8 = vdup_lane_s32(*(int32x2_t *)v401.i8, 1);
    v12.i64[0] = vextq_s8(v401, v401, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v401.i8, *(float32x2_t *)v401.i8), *(float32x2_t *)v398.i8, *(float32x2_t *)v401.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v402 = v15[2886] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v402;
      if (v395)
        return 0;
    }
  }
  v403 = v14 + 7;
  v404 = (char)v15[2926];
  *(float *)v398.i32 = (float)v403;
  v10.f32[2] = (float)v403;
  v405.i64[0] = 0x3F0000003F000000;
  v405.i64[1] = 0x3F0000003F000000;
  if (!v15[2926])
  {
    v12.i8[0] = v15[2923];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2924];
    v406 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v406.i32 = (float)v406.i32[0];
    v12.i32[1] = v406.i32[0];
    v406.i8[0] = v15[2925];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v406)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v10 = vaddq_f32(v10, v405);
    v405 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v407 = vaddq_f32(v10, v405);
  if (v404 <= 0)
  {
    v405.i64[0] = *(_QWORD *)v22;
    v405.i32[2] = *(_DWORD *)(v22 + 8);
    v408 = (int8x16_t)vmlsq_lane_f32(v405, v407, v18, 0);
    v12.i64[0] = vextq_s8(v408, v408, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v408.i8, *(float32x2_t *)v408.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v408.i8, 1), *(float32x2_t *)v408.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v409 = v15[2926] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v409;
      if (v404)
        return 0;
    }
  }
  v410 = (char)v15[2966];
  v411 = a4;
  v411.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v411.f32 = vcvt_f32_s32(*(int32x2_t *)v411.f32);
  v411.f32[2] = (float)v394;
  v412.i64[0] = 0x3F0000003F000000;
  v412.i64[1] = 0x3F0000003F000000;
  if (!v15[2966])
  {
    v12.i8[0] = v15[2963];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[2964];
    v413 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v413.i32 = (float)v413.i32[0];
    v12.i32[1] = v413.i32[0];
    v413.i8[0] = v15[2965];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v413)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v411 = vaddq_f32(v411, v412);
    v412 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v414 = vaddq_f32(v411, v412);
  if (v410 <= 0)
  {
    v412.i64[0] = *(_QWORD *)v22;
    v412.i32[2] = *(_DWORD *)(v22 + 8);
    v415 = (int8x16_t)vmlsq_lane_f32(v412, v414, v18, 0);
    v12.i64[0] = vextq_s8(v415, v415, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v415.i8, *(float32x2_t *)v415.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v415.i8, 1), *(float32x2_t *)v415.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v416 = v15[2966] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v416;
      if (v410)
        return 0;
    }
  }
  v417 = (char)v15[3006];
  v418 = a4;
  v418.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v418.f32 = vcvt_f32_s32(*(int32x2_t *)v418.f32);
  v418.i32[2] = v398.i32[0];
  v419.i64[0] = 0x3F0000003F000000;
  v419.i64[1] = 0x3F0000003F000000;
  if (!v15[3006])
  {
    v12.i8[0] = v15[3003];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3004];
    v420 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v420.i32 = (float)v420.i32[0];
    v12.i32[1] = v420.i32[0];
    v420.i8[0] = v15[3005];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v420)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v418 = vaddq_f32(v418, v419);
    v419 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v421 = vaddq_f32(v418, v419);
  if (v417 <= 0)
  {
    v419.i64[0] = *(_QWORD *)v22;
    v419.i32[2] = *(_DWORD *)(v22 + 8);
    v422 = (int8x16_t)vmlsq_lane_f32(v419, v421, v18, 0);
    v12.i64[0] = vextq_s8(v422, v422, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v422.i8, *(float32x2_t *)v422.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v422.i8, 1), *(float32x2_t *)v422.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v423 = v15[3006] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v423;
      if (v417)
        return 0;
    }
  }
  v424 = (char)v15[3046];
  *(float32x2_t *)v421.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)1));
  v421.f32[2] = (float)v394;
  v425.i64[0] = 0x3F0000003F000000;
  v425.i64[1] = 0x3F0000003F000000;
  if (!v15[3046])
  {
    v12.i8[0] = v15[3043];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3044];
    v426 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v426.i32 = (float)v426.i32[0];
    v12.i32[1] = v426.i32[0];
    v426.i8[0] = v15[3045];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v426)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v421 = vaddq_f32(v421, v425);
    v425 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v427 = vaddq_f32(v421, v425);
  if (v424 <= 0)
  {
    v425.i64[0] = *(_QWORD *)v22;
    v425.i32[2] = *(_DWORD *)(v22 + 8);
    v428 = (int8x16_t)vmlsq_lane_f32(v425, v427, v18, 0);
    v12.i64[0] = vextq_s8(v428, v428, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v428.i8, *(float32x2_t *)v428.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v428.i8, 1), *(float32x2_t *)v428.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v429 = v15[3046] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v429;
      if (v424)
        return 0;
    }
  }
  v430 = (char)v15[3086];
  *(float32x2_t *)v427.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)1));
  v427.i32[2] = v398.i32[0];
  v431.i64[0] = 0x3F0000003F000000;
  v431.i64[1] = 0x3F0000003F000000;
  if (!v15[3086])
  {
    v12.i8[0] = v15[3083];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3084];
    v432 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v432.i32 = (float)v432.i32[0];
    v12.i32[1] = v432.i32[0];
    v432.i8[0] = v15[3085];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v432)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v427 = vaddq_f32(v427, v431);
    v431 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v433 = vaddq_f32(v427, v431);
  if (v430 <= 0)
  {
    v431.i64[0] = *(_QWORD *)v22;
    v431.i32[2] = *(_DWORD *)(v22 + 8);
    v434 = (int8x16_t)vmlsq_lane_f32(v431, v433, v18, 0);
    v12.i64[0] = vextq_s8(v434, v434, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v434.i8, *(float32x2_t *)v434.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v434.i8, 1), *(float32x2_t *)v434.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v435 = v15[3086] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v435;
      if (v430)
        return 0;
    }
  }
  v436 = (char)v15[3126];
  v437 = a6;
  v437.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v437.f32 = vcvt_f32_s32(*(int32x2_t *)v437.f32);
  v437.f32[2] = (float)v394;
  v438.i64[0] = 0x3F0000003F000000;
  v438.i64[1] = 0x3F0000003F000000;
  if (!v15[3126])
  {
    v12.i8[0] = v15[3123];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3124];
    v439 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v439.i32 = (float)v439.i32[0];
    v12.i32[1] = v439.i32[0];
    v439.i8[0] = v15[3125];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v439)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v437 = vaddq_f32(v437, v438);
    v438 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v440 = vaddq_f32(v437, v438);
  if (v436 <= 0)
  {
    v438.i64[0] = *(_QWORD *)v22;
    v438.i32[2] = *(_DWORD *)(v22 + 8);
    v441 = (int8x16_t)vmlsq_lane_f32(v438, v440, v18, 0);
    v12.i64[0] = vextq_s8(v441, v441, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v441.i8, *(float32x2_t *)v441.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v441.i8, 1), *(float32x2_t *)v441.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v442 = v15[3126] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v442;
      if (v436)
        return 0;
    }
  }
  v443 = (char)v15[3166];
  v444 = a6;
  v444.i32[1] = a4.i32[1] + 1;
  *(float32x2_t *)v444.f32 = vcvt_f32_s32(*(int32x2_t *)v444.f32);
  v444.i32[2] = v398.i32[0];
  v445.i64[0] = 0x3F0000003F000000;
  v445.i64[1] = 0x3F0000003F000000;
  if (!v15[3166])
  {
    v12.i8[0] = v15[3163];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3164];
    v446 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v446.i32 = (float)v446.i32[0];
    v12.i32[1] = v446.i32[0];
    v446.i8[0] = v15[3165];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v446)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v444 = vaddq_f32(v444, v445);
    v445 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v447 = vaddq_f32(v444, v445);
  if (v443 <= 0)
  {
    v445.i64[0] = *(_QWORD *)v22;
    v445.i32[2] = *(_DWORD *)(v22 + 8);
    v448 = (int8x16_t)vmlsq_lane_f32(v445, v447, v18, 0);
    v12.i64[0] = vextq_s8(v448, v448, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v448.i8, *(float32x2_t *)v448.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v448.i8, 1), *(float32x2_t *)v448.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v449 = v15[3166] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v449;
      if (v443)
        return 0;
    }
  }
  v450 = (char)v15[3206];
  *(float32x2_t *)v447.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
  v447.i32[2] = v332.i32[0];
  v451.i64[0] = 0x3F0000003F000000;
  v451.i64[1] = 0x3F0000003F000000;
  if (!v15[3206])
  {
    v12.i8[0] = v15[3203];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3204];
    v452 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v452.i32 = (float)v452.i32[0];
    v12.i32[1] = v452.i32[0];
    v452.i8[0] = v15[3205];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v452)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v447 = vaddq_f32(v447, v451);
    v451 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v453 = vaddq_f32(v447, v451);
  if (v450 <= 0)
  {
    v451.i64[0] = *(_QWORD *)v22;
    v451.i32[2] = *(_DWORD *)(v22 + 8);
    v454 = (int8x16_t)vmlsq_lane_f32(v451, v453, v18, 0);
    v12.i64[0] = vextq_s8(v454, v454, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v454.i8, *(float32x2_t *)v454.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v454.i8, 1), *(float32x2_t *)v454.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v455 = v15[3206] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v455;
      if (v450)
        return 0;
    }
  }
  v456 = (char)v15[3246];
  *(float32x2_t *)v453.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
  v453.i32[2] = v343.i32[0];
  v457.i64[0] = 0x3F0000003F000000;
  v457.i64[1] = 0x3F0000003F000000;
  if (!v15[3246])
  {
    v12.i8[0] = v15[3243];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3244];
    v458 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v458.i32 = (float)v458.i32[0];
    v12.i32[1] = v458.i32[0];
    v458.i8[0] = v15[3245];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v458)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v453 = vaddq_f32(v453, v457);
    v457 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v459 = vaddq_f32(v453, v457);
  if (v456 <= 0)
  {
    v457.i64[0] = *(_QWORD *)v22;
    v457.i32[2] = *(_DWORD *)(v22 + 8);
    v460 = (int8x16_t)vmlsq_lane_f32(v457, v459, v18, 0);
    v12.i64[0] = vextq_s8(v460, v460, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v460.i8, *(float32x2_t *)v460.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v460.i8, 1), *(float32x2_t *)v460.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v461 = v15[3246] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v461;
      if (v456)
        return 0;
    }
  }
  v462 = (char)v15[3286];
  v463 = a4;
  v463.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v463.f32 = vcvt_f32_s32(*(int32x2_t *)v463.f32);
  v463.i32[2] = v332.i32[0];
  v464.i64[0] = 0x3F0000003F000000;
  v464.i64[1] = 0x3F0000003F000000;
  if (!v15[3286])
  {
    v12.i8[0] = v15[3283];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3284];
    v465 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v465.i32 = (float)v465.i32[0];
    v12.i32[1] = v465.i32[0];
    v465.i8[0] = v15[3285];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v465)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v463 = vaddq_f32(v463, v464);
    v464 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v466 = vaddq_f32(v463, v464);
  if (v462 <= 0)
  {
    v464.i64[0] = *(_QWORD *)v22;
    v464.i32[2] = *(_DWORD *)(v22 + 8);
    v467 = (int8x16_t)vmlsq_lane_f32(v464, v466, v18, 0);
    v12.i64[0] = vextq_s8(v467, v467, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v467.i8, *(float32x2_t *)v467.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v467.i8, 1), *(float32x2_t *)v467.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v468 = v15[3286] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v468;
      if (v462)
        return 0;
    }
  }
  v469 = (char)v15[3326];
  v470 = a4;
  v470.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v470.f32 = vcvt_f32_s32(*(int32x2_t *)v470.f32);
  v470.i32[2] = v343.i32[0];
  v471.i64[0] = 0x3F0000003F000000;
  v471.i64[1] = 0x3F0000003F000000;
  if (!v15[3326])
  {
    v12.i8[0] = v15[3323];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3324];
    v472 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v472.i32 = (float)v472.i32[0];
    v12.i32[1] = v472.i32[0];
    v472.i8[0] = v15[3325];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v472)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v470 = vaddq_f32(v470, v471);
    v471 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v473 = vaddq_f32(v470, v471);
  if (v469 <= 0)
  {
    v471.i64[0] = *(_QWORD *)v22;
    v471.i32[2] = *(_DWORD *)(v22 + 8);
    v474 = (int8x16_t)vmlsq_lane_f32(v471, v473, v18, 0);
    v12.i64[0] = vextq_s8(v474, v474, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v474.i8, *(float32x2_t *)v474.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v474.i8, 1), *(float32x2_t *)v474.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v475 = v15[3326] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v475;
      if (v469)
        return 0;
    }
  }
  v476 = (char)v15[3366];
  v477 = a7;
  v477.i32[2] = v332.i32[0];
  v478.i64[0] = 0x3F0000003F000000;
  v478.i64[1] = 0x3F0000003F000000;
  if (!v15[3366])
  {
    v12.i8[0] = v15[3363];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3364];
    v479 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v479.i32 = (float)v479.i32[0];
    v12.i32[1] = v479.i32[0];
    v479.i8[0] = v15[3365];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v479)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v477 = vaddq_f32(v477, v478);
    v478 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v480 = vaddq_f32(v477, v478);
  if (v476 <= 0)
  {
    v478.i64[0] = *(_QWORD *)v22;
    v478.i32[2] = *(_DWORD *)(v22 + 8);
    v481 = (int8x16_t)vmlsq_lane_f32(v478, v480, v18, 0);
    v12.i64[0] = vextq_s8(v481, v481, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v481.i8, *(float32x2_t *)v481.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v481.i8, 1), *(float32x2_t *)v481.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v482 = v15[3366] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v482;
      if (v476)
        return 0;
    }
  }
  v483 = (char)v15[3406];
  v484 = a7;
  v484.i32[2] = v343.i32[0];
  v485.i64[0] = 0x3F0000003F000000;
  v485.i64[1] = 0x3F0000003F000000;
  if (!v15[3406])
  {
    v12.i8[0] = v15[3403];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3404];
    v486 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v486.i32 = (float)v486.i32[0];
    v12.i32[1] = v486.i32[0];
    v486.i8[0] = v15[3405];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v486)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v484 = vaddq_f32(v484, v485);
    v485 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v487 = vaddq_f32(v484, v485);
  if (v483 <= 0)
  {
    v485.i64[0] = *(_QWORD *)v22;
    v485.i32[2] = *(_DWORD *)(v22 + 8);
    v488 = (int8x16_t)vmlsq_lane_f32(v485, v487, v18, 0);
    v12.i64[0] = vextq_s8(v488, v488, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v488.i8, *(float32x2_t *)v488.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v488.i8, 1), *(float32x2_t *)v488.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v489 = v15[3406] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v489;
      if (v483)
        return 0;
    }
  }
  v490 = (char)v15[3446];
  v491 = a6;
  v491.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v491.f32 = vcvt_f32_s32(*(int32x2_t *)v491.f32);
  v491.i32[2] = v332.i32[0];
  v492.i64[0] = 0x3F0000003F000000;
  v492.i64[1] = 0x3F0000003F000000;
  if (!v15[3446])
  {
    v12.i8[0] = v15[3443];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3444];
    v493 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v493.i32 = (float)v493.i32[0];
    v12.i32[1] = v493.i32[0];
    v493.i8[0] = v15[3445];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v493)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v491 = vaddq_f32(v491, v492);
    v492 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v494 = vaddq_f32(v491, v492);
  if (v490 <= 0)
  {
    v492.i64[0] = *(_QWORD *)v22;
    v492.i32[2] = *(_DWORD *)(v22 + 8);
    v495 = (int8x16_t)vmlsq_lane_f32(v492, v494, v18, 0);
    v12.i64[0] = vextq_s8(v495, v495, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v495.i8, *(float32x2_t *)v495.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v495.i8, 1), *(float32x2_t *)v495.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v496 = v15[3446] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v496;
      if (v490)
        return 0;
    }
  }
  v497 = (char)v15[3486];
  v498 = a6;
  v498.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v498.f32 = vcvt_f32_s32(*(int32x2_t *)v498.f32);
  v498.i32[2] = v343.i32[0];
  v499.i64[0] = 0x3F0000003F000000;
  v499.i64[1] = 0x3F0000003F000000;
  if (!v15[3486])
  {
    v12.i8[0] = v15[3483];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3484];
    v500 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v500.i32 = (float)v500.i32[0];
    v12.i32[1] = v500.i32[0];
    v500.i8[0] = v15[3485];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v500)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v498 = vaddq_f32(v498, v499);
    v499 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v501 = vaddq_f32(v498, v499);
  if (v497 <= 0)
  {
    v499.i64[0] = *(_QWORD *)v22;
    v499.i32[2] = *(_DWORD *)(v22 + 8);
    v502 = (int8x16_t)vmlsq_lane_f32(v499, v501, v18, 0);
    v12.i64[0] = vextq_s8(v502, v502, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v502.i8, *(float32x2_t *)v502.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v502.i8, 1), *(float32x2_t *)v502.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v503 = v15[3486] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v503;
      if (v497)
        return 0;
    }
  }
  v504 = (char)v15[3526];
  *(float32x2_t *)v501.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
  v501.f32[2] = (float)v394;
  v505.i64[0] = 0x3F0000003F000000;
  v505.i64[1] = 0x3F0000003F000000;
  if (!v15[3526])
  {
    v12.i8[0] = v15[3523];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3524];
    v506 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v506.i32 = (float)v506.i32[0];
    v12.i32[1] = v506.i32[0];
    v506.i8[0] = v15[3525];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v506)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v501 = vaddq_f32(v501, v505);
    v505 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v507 = vaddq_f32(v501, v505);
  if (v504 <= 0)
  {
    v505.i64[0] = *(_QWORD *)v22;
    v505.i32[2] = *(_DWORD *)(v22 + 8);
    v508 = (int8x16_t)vmlsq_lane_f32(v505, v507, v18, 0);
    v12.i64[0] = vextq_s8(v508, v508, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v508.i8, *(float32x2_t *)v508.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v508.i8, 1), *(float32x2_t *)v508.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v509 = v15[3526] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v509;
      if (v504)
        return 0;
    }
  }
  v510 = (char)v15[3566];
  *(float32x2_t *)v507.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x200000000));
  v507.i32[2] = v398.i32[0];
  v511.i64[0] = 0x3F0000003F000000;
  v511.i64[1] = 0x3F0000003F000000;
  if (!v15[3566])
  {
    v12.i8[0] = v15[3563];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3564];
    v512 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v512.i32 = (float)v512.i32[0];
    v12.i32[1] = v512.i32[0];
    v512.i8[0] = v15[3565];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v512)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v507 = vaddq_f32(v507, v511);
    v511 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v513 = vaddq_f32(v507, v511);
  if (v510 <= 0)
  {
    v511.i64[0] = *(_QWORD *)v22;
    v511.i32[2] = *(_DWORD *)(v22 + 8);
    v514 = (int8x16_t)vmlsq_lane_f32(v511, v513, v18, 0);
    v12.i64[0] = vextq_s8(v514, v514, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v514.i8, *(float32x2_t *)v514.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v514.i8, 1), *(float32x2_t *)v514.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v515 = v15[3566] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v515;
      if (v510)
        return 0;
    }
  }
  v516 = (char)v15[3606];
  v517 = a4;
  v517.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v517.f32 = vcvt_f32_s32(*(int32x2_t *)v517.f32);
  v517.f32[2] = (float)v394;
  v518.i64[0] = 0x3F0000003F000000;
  v518.i64[1] = 0x3F0000003F000000;
  if (!v15[3606])
  {
    v12.i8[0] = v15[3603];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3604];
    v519 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v519.i32 = (float)v519.i32[0];
    v12.i32[1] = v519.i32[0];
    v519.i8[0] = v15[3605];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v519)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v517 = vaddq_f32(v517, v518);
    v518 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v520 = vaddq_f32(v517, v518);
  if (v516 <= 0)
  {
    v518.i64[0] = *(_QWORD *)v22;
    v518.i32[2] = *(_DWORD *)(v22 + 8);
    v521 = (int8x16_t)vmlsq_lane_f32(v518, v520, v18, 0);
    v12.i64[0] = vextq_s8(v521, v521, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v521.i8, *(float32x2_t *)v521.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v521.i8, 1), *(float32x2_t *)v521.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v522 = v15[3606] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v522;
      if (v516)
        return 0;
    }
  }
  v523 = (char)v15[3646];
  v524 = a4;
  v524.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v524.f32 = vcvt_f32_s32(*(int32x2_t *)v524.f32);
  v524.i32[2] = v398.i32[0];
  v525.i64[0] = 0x3F0000003F000000;
  v525.i64[1] = 0x3F0000003F000000;
  if (!v15[3646])
  {
    v12.i8[0] = v15[3643];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3644];
    v526 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v526.i32 = (float)v526.i32[0];
    v12.i32[1] = v526.i32[0];
    v526.i8[0] = v15[3645];
    v13 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v526)).u64[0];
    *(float *)v13.i32 = (float)v13.i32[0];
    v12.i32[2] = v13.i32[0];
    v524 = vaddq_f32(v524, v525);
    v525 = vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v527 = vaddq_f32(v524, v525);
  if (v523 <= 0)
  {
    v525.i64[0] = *(_QWORD *)v22;
    v525.i32[2] = *(_DWORD *)(v22 + 8);
    v528 = (int8x16_t)vmlsq_lane_f32(v525, v527, v18, 0);
    v12.i64[0] = vextq_s8(v528, v528, 8uLL).u64[0];
    v13 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v528.i8, *(float32x2_t *)v528.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v528.i8, 1), *(float32x2_t *)v528.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32);
    if (*(float *)v13.i32 <= v19.f32[0])
    {
      v529 = v15[3646] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v529;
      if (v523)
        return 0;
    }
  }
  v530 = (char)v15[3686];
  v531 = (int8x16_t)a7;
  *(float *)&v531.i32[2] = (float)v394;
  v532.i64[0] = 0x3F0000003F000000;
  v532.i64[1] = 0x3F0000003F000000;
  if (v15[3686])
  {
    v533 = vaddq_f32((float32x4_t)v531, v532);
  }
  else
  {
    v12.i8[0] = v15[3683];
    v12 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32));
    v12.f32[0] = (float)v12.i32[0];
    v13.i8[0] = v15[3684];
    v534 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v13)).u64[0];
    *(float *)v534.i32 = (float)v534.i32[0];
    v12.i32[1] = v534.i32[0];
    v534.i8[0] = v15[3685];
    v12.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v534)).i32[0];
    v535 = vaddq_f32((float32x4_t)v531, v532);
    v531 = (int8x16_t)vmulq_f32(v12, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v533 = vaddq_f32(v535, (float32x4_t)v531);
  }
  if (v530 <= 0)
  {
    v531.i64[0] = *(_QWORD *)v22;
    v531.i32[2] = *(_DWORD *)(v22 + 8);
    v531 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v531, v533, v18, 0);
    v12.i64[0] = vextq_s8(v531, v531, 8uLL).u64[0];
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v531.i8, *(float32x2_t *)v531.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v531.i8, 1), *(float32x2_t *)v531.i8, 1), *(float32x2_t *)v12.f32, *(float32x2_t *)v12.f32).f32[0] <= v19.f32[0])
    {
      v536 = v15[3686] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v536;
      if (v530)
        return 0;
    }
  }
  v537 = (char)v15[3726];
  a7.i32[2] = v398.i32[0];
  v538.i64[0] = 0x3F0000003F000000;
  v538.i64[1] = 0x3F0000003F000000;
  if (!v15[3726])
  {
    v531.i8[0] = v15[3723];
    v531 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v531.i8));
    *(float *)v531.i32 = (float)v531.i32[0];
    v12.i8[0] = v15[3724];
    v539 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32)).u64[0];
    *(float *)v539.i32 = (float)v539.i32[0];
    v531.i32[1] = v539.i32[0];
    v539.i8[0] = v15[3725];
    v12.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v539)).u64[0];
    v12.f32[0] = (float)v12.i32[0];
    v531.i32[2] = v12.i32[0];
    a7 = vaddq_f32(a7, v538);
    v538 = vmulq_f32((float32x4_t)v531, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v540 = vaddq_f32(a7, v538);
  if (v537 <= 0)
  {
    v538.i64[0] = *(_QWORD *)v22;
    v538.i32[2] = *(_DWORD *)(v22 + 8);
    v541 = (int8x16_t)vmlsq_lane_f32(v538, v540, v18, 0);
    v531.i64[0] = vextq_s8(v541, v541, 8uLL).u64[0];
    *(float32x2_t *)v12.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v541.i8, *(float32x2_t *)v541.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v541.i8, 1), *(float32x2_t *)v541.i8, 1), *(float32x2_t *)v531.i8, *(float32x2_t *)v531.i8);
    if (v12.f32[0] <= v19.f32[0])
    {
      v542 = v15[3726] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v542;
      if (v537)
        return 0;
    }
  }
  v543 = (char)v15[3766];
  v544 = a6;
  v544.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)v544.f32 = vcvt_f32_s32(*(int32x2_t *)v544.f32);
  v544.f32[2] = (float)v394;
  v545.i64[0] = 0x3F0000003F000000;
  v545.i64[1] = 0x3F0000003F000000;
  if (!v15[3766])
  {
    v531.i8[0] = v15[3763];
    v546 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v531.i8));
    v546.f32[0] = (float)v546.i32[0];
    v12.i8[0] = v15[3764];
    v547 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v12.f32)).u64[0];
    *(float *)v547.i32 = (float)v547.i32[0];
    v546.i32[1] = v547.i32[0];
    v547.i8[0] = v15[3765];
    v546.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v547)).i32[0];
    v544 = vaddq_f32(v544, (float32x4_t)v545);
    v545 = (int8x16_t)vmulq_f32(v546, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v548 = vaddq_f32(v544, (float32x4_t)v545);
  if (v543 <= 0)
  {
    v545.i64[0] = *(_QWORD *)v22;
    v545.i32[2] = *(_DWORD *)(v22 + 8);
    v545 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v545, v548, v18, 0);
    v549 = (float32x2_t)vextq_s8(v545, v545, 8uLL).u64[0];
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v545.i8, *(float32x2_t *)v545.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v545.i8, 1), *(float32x2_t *)v545.i8, 1), v549, v549).f32[0] <= v19.f32[0])
    {
      v550 = v15[3766] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v550;
      if (v543)
        return 0;
    }
  }
  v551 = (char)v15[3806];
  a6.i32[1] = a4.i32[1] + 3;
  *(float32x2_t *)a6.f32 = vcvt_f32_s32(*(int32x2_t *)a6.f32);
  a6.i32[2] = v398.i32[0];
  v552.i64[0] = 0x3F0000003F000000;
  v552.i64[1] = 0x3F0000003F000000;
  if (!v15[3806])
  {
    v398.i8[0] = v15[3803];
    v398 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v398.i8));
    *(float *)v398.i32 = (float)v398.i32[0];
    v545.i8[0] = v15[3804];
    v553 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v545.i8)).u64[0];
    *(float *)v553.i32 = (float)v553.i32[0];
    v398.i32[1] = v553.i32[0];
    v553.i8[0] = v15[3805];
    v545.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v553)).u64[0];
    *(float *)v545.i32 = (float)v545.i32[0];
    v398.i32[2] = v545.i32[0];
    a6 = vaddq_f32(a6, v552);
    v552 = vmulq_f32((float32x4_t)v398, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v554 = vaddq_f32(a6, v552);
  if (v551 <= 0)
  {
    v552.i64[0] = *(_QWORD *)v22;
    v552.i32[2] = *(_DWORD *)(v22 + 8);
    v555 = (int8x16_t)vmlsq_lane_f32(v552, v554, v18, 0);
    v398 = vextq_s8(v555, v555, 8uLL);
    *(float32x2_t *)v545.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v555.i8, *(float32x2_t *)v555.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v555.i8, 1), *(float32x2_t *)v555.i8, 1), *(float32x2_t *)v398.i8, *(float32x2_t *)v398.i8);
    if (*(float *)v545.i32 <= v19.f32[0])
    {
      v556 = v15[3806] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v556;
      if (v551)
        return 0;
    }
  }
  v557 = (char)v15[3846];
  v558 = a4;
  v558.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v558.f32 = vcvt_f32_s32(*(int32x2_t *)v558.f32);
  v558.i32[2] = v332.i32[0];
  v559.i64[0] = 0x3F0000003F000000;
  v559.i64[1] = 0x3F0000003F000000;
  if (!v15[3846])
  {
    v398.i8[0] = v15[3843];
    v398 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v398.i8));
    *(float *)v398.i32 = (float)v398.i32[0];
    v545.i8[0] = v15[3844];
    v560 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v545.i8)).u64[0];
    *(float *)v560.i32 = (float)v560.i32[0];
    v398.i32[1] = v560.i32[0];
    v560.i8[0] = v15[3845];
    v545.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v560)).u64[0];
    *(float *)v545.i32 = (float)v545.i32[0];
    v398.i32[2] = v545.i32[0];
    v558 = vaddq_f32(v558, v559);
    v559 = vmulq_f32((float32x4_t)v398, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v561 = vaddq_f32(v558, v559);
  if (v557 <= 0)
  {
    v559.i64[0] = *(_QWORD *)v22;
    v559.i32[2] = *(_DWORD *)(v22 + 8);
    v562 = (int8x16_t)vmlsq_lane_f32(v559, v561, v18, 0);
    v398 = vextq_s8(v562, v562, 8uLL);
    *(float32x2_t *)v545.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v562.i8, *(float32x2_t *)v562.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v562.i8, 1), *(float32x2_t *)v562.i8, 1), *(float32x2_t *)v398.i8, *(float32x2_t *)v398.i8);
    if (*(float *)v545.i32 <= v19.f32[0])
    {
      v563 = v15[3846] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v563;
      if (v557)
        return 0;
    }
  }
  v564 = (char)v15[3886];
  v565 = a4;
  v565.i32[0] = a4.i32[0] + 2;
  *(float32x2_t *)v565.f32 = vcvt_f32_s32(*(int32x2_t *)v565.f32);
  v565.i32[2] = v343.i32[0];
  v566.i64[0] = 0x3F0000003F000000;
  v566.i64[1] = 0x3F0000003F000000;
  if (!v15[3886])
  {
    v398.i8[0] = v15[3883];
    v398 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v398.i8));
    *(float *)v398.i32 = (float)v398.i32[0];
    v545.i8[0] = v15[3884];
    v567 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v545.i8)).u64[0];
    *(float *)v567.i32 = (float)v567.i32[0];
    v398.i32[1] = v567.i32[0];
    v567.i8[0] = v15[3885];
    v545.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v567)).u64[0];
    *(float *)v545.i32 = (float)v545.i32[0];
    v398.i32[2] = v545.i32[0];
    v565 = vaddq_f32(v565, v566);
    v566 = vmulq_f32((float32x4_t)v398, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v568 = vaddq_f32(v565, v566);
  if (v564 <= 0)
  {
    v566.i64[0] = *(_QWORD *)v22;
    v566.i32[2] = *(_DWORD *)(v22 + 8);
    v569 = (int8x16_t)vmlsq_lane_f32(v566, v568, v18, 0);
    v398 = vextq_s8(v569, v569, 8uLL);
    *(float32x2_t *)v545.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v569.i8, *(float32x2_t *)v569.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v569.i8, 1), *(float32x2_t *)v569.i8, 1), *(float32x2_t *)v398.i8, *(float32x2_t *)v398.i8);
    if (*(float *)v545.i32 <= v19.f32[0])
    {
      v570 = v15[3886] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v570;
      if (v564)
        return 0;
    }
  }
  v571 = (char)v15[3926];
  *(float32x2_t *)v568.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v126));
  v568.i32[2] = v332.i32[0];
  v572.i64[0] = 0x3F0000003F000000;
  v572.i64[1] = 0x3F0000003F000000;
  if (!v15[3926])
  {
    v398.i8[0] = v15[3923];
    v398 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v398.i8));
    *(float *)v398.i32 = (float)v398.i32[0];
    v545.i8[0] = v15[3924];
    v573 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v545.i8)).u64[0];
    *(float *)v573.i32 = (float)v573.i32[0];
    v398.i32[1] = v573.i32[0];
    v573.i8[0] = v15[3925];
    v545.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v573)).u64[0];
    *(float *)v545.i32 = (float)v545.i32[0];
    v398.i32[2] = v545.i32[0];
    v568 = vaddq_f32(v568, v572);
    v572 = vmulq_f32((float32x4_t)v398, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v574 = vaddq_f32(v568, v572);
  if (v571 <= 0)
  {
    v572.i64[0] = *(_QWORD *)v22;
    v572.i32[2] = *(_DWORD *)(v22 + 8);
    v575 = (int8x16_t)vmlsq_lane_f32(v572, v574, v18, 0);
    v398 = vextq_s8(v575, v575, 8uLL);
    *(float32x2_t *)v545.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v575.i8, *(float32x2_t *)v575.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v575.i8, 1), *(float32x2_t *)v575.i8, 1), *(float32x2_t *)v398.i8, *(float32x2_t *)v398.i8);
    if (*(float *)v545.i32 <= v19.f32[0])
    {
      v576 = v15[3926] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v576;
      if (v571)
        return 0;
    }
  }
  v577 = (char)v15[3966];
  *(float32x2_t *)v574.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v141, v126));
  v574.i32[2] = v343.i32[0];
  v578.i64[0] = 0x3F0000003F000000;
  v578.i64[1] = 0x3F0000003F000000;
  if (!v15[3966])
  {
    v398.i8[0] = v15[3963];
    v398 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v398.i8));
    *(float *)v398.i32 = (float)v398.i32[0];
    v545.i8[0] = v15[3964];
    v579 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v545.i8)).u64[0];
    *(float *)v579.i32 = (float)v579.i32[0];
    v398.i32[1] = v579.i32[0];
    v579.i8[0] = v15[3965];
    *(float *)&v398.i32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v579)).i32[0];
    v574 = vaddq_f32(v574, v578);
    v578 = vmulq_f32((float32x4_t)v398, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v580 = vaddq_f32(v574, v578);
  if (v577 <= 0)
  {
    v578.i64[0] = *(_QWORD *)v22;
    v578.i32[2] = *(_DWORD *)(v22 + 8);
    v581 = (int8x16_t)vmlsq_lane_f32(v578, v580, v18, 0);
    v398 = vextq_s8(v581, v581, 8uLL);
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v581.i8, *(float32x2_t *)v581.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v581.i8, 1), *(float32x2_t *)v581.i8, 1), *(float32x2_t *)v398.i8, *(float32x2_t *)v398.i8).f32[0] <= v19.f32[0])
    {
      v582 = v15[3966] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v582;
      if (v577)
        return 0;
    }
  }
  v583 = (char)v15[4006];
  v584 = a4;
  v584.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v584.f32 = vcvt_f32_s32(*(int32x2_t *)v584.f32);
  v584.i32[2] = v332.i32[0];
  v585.i64[0] = 0x3F0000003F000000;
  v585.i64[1] = 0x3F0000003F000000;
  if (!v15[4006])
  {
    v332.i8[0] = v15[4003];
    v332 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v332.i8));
    *(float *)v332.i32 = (float)v332.i32[0];
    v398.i8[0] = v15[4004];
    v586 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v398.i8)).u64[0];
    *(float *)v586.i32 = (float)v586.i32[0];
    v332.i32[1] = v586.i32[0];
    v586.i8[0] = v15[4005];
    v398 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v586));
    *(float *)v398.i32 = (float)v398.i32[0];
    v332.i32[2] = v398.i32[0];
    v584 = vaddq_f32(v584, (float32x4_t)v585);
    v585 = (int8x16_t)vmulq_f32((float32x4_t)v332, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v587 = vaddq_f32(v584, (float32x4_t)v585);
  if (v583 <= 0)
  {
    v585.i64[0] = *(_QWORD *)v22;
    v585.i32[2] = *(_DWORD *)(v22 + 8);
    v585 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v585, v587, v18, 0);
    v332.i64[0] = vextq_s8(v585, v585, 8uLL).u64[0];
    *(float32x2_t *)v398.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v585.i8, *(float32x2_t *)v585.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v585.i8, 1), *(float32x2_t *)v585.i8, 1), *(float32x2_t *)v332.i8, *(float32x2_t *)v332.i8);
    if (*(float *)v398.i32 <= v19.f32[0])
    {
      v588 = v15[4006] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v588;
      if (v583)
        return 0;
    }
  }
  v589 = (char)v15[4046];
  a4.i32[0] += 3;
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a4.f32);
  a4.i32[2] = v343.i32[0];
  v590.i64[0] = 0x3F0000003F000000;
  v590.i64[1] = 0x3F0000003F000000;
  if (!v15[4046])
  {
    v585.i8[0] = v15[4043];
    v585 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v585.i8));
    *(float *)v585.i32 = (float)v585.i32[0];
    v343.i8[0] = v15[4044];
    v591 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v343.f32)).u64[0];
    *(float *)v591.i32 = (float)v591.i32[0];
    v585.i32[1] = v591.i32[0];
    v591.i8[0] = v15[4045];
    v343 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v591));
    v343.f32[0] = (float)v343.i32[0];
    v585.i32[2] = v343.i32[0];
    a4 = vaddq_f32(a4, (float32x4_t)v590);
    v590 = (int8x16_t)vmulq_f32((float32x4_t)v585, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v592 = vaddq_f32(a4, (float32x4_t)v590);
  if (v589 <= 0)
  {
    v590.i64[0] = *(_QWORD *)v22;
    v590.i32[2] = *(_DWORD *)(v22 + 8);
    v590 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v590, v592, v18, 0);
    v18 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v590.i8, 1);
    v592.i64[0] = vextq_s8(v590, v590, 8uLL).u64[0];
    *(float32x2_t *)v585.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v590.i8, *(float32x2_t *)v590.i8), v18, *(float32x2_t *)v590.i8, 1), *(float32x2_t *)v592.f32, *(float32x2_t *)v592.f32);
    if (*(float *)v585.i32 <= v19.f32[0])
    {
      v593 = v15[4046] ? 2 : 1;
      **(_BYTE **)(v16 + 24) = v593;
      if (v589)
        return 0;
    }
  }
  return sub_22395D740(a1, a2, *(double *)&v18, *(double *)v592.i64, v19, (float32x4_t)v590, *(double *)v585.i64, v343, *(double *)v332.i64, v398);
}

uint64_t sub_22395D740(_QWORD ***a1, int32x2_t *a2, double a3, double a4, float32x4_t a5, float32x4_t a6, double a7, float32x4_t a8, double a9, int8x16_t a10)
{
  float32x2_t v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  float32x2_t v15;
  float32x4_t v16;
  float32x4_t v17;
  float32x4_t v18;
  uint64_t v19;
  int8x8_t v20;
  char v21;
  int v22;
  int v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  int8x8_t v27;
  float32x4_t v28;
  int8x16_t v29;
  char v30;
  unsigned __int32 v31;
  int v32;
  int v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  int8x8_t v39;
  float32x4_t v40;
  int8x16_t v41;
  char v42;
  int v43;
  int v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  int8x8_t v50;
  float32x4_t v51;
  int8x16_t v52;
  char v53;
  int v54;
  float32x4_t v55;
  float32x4_t v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  int8x8_t v60;
  float32x4_t v61;
  int8x16_t v62;
  char v63;
  int v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  int8x8_t v70;
  float32x4_t v71;
  int8x16_t v72;
  char v73;
  int v74;
  float32x4_t v75;
  int8x8_t v76;
  float32x4_t v77;
  int8x16_t v78;
  char v79;
  int v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  int8x8_t v84;
  float32x4_t v85;
  int8x16_t v86;
  char v87;
  int v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  int8x8_t v92;
  float32x4_t v93;
  int8x16_t v94;
  char v95;
  int v96;
  float32x4_t v97;
  int8x8_t v98;
  float32x4_t v99;
  int8x16_t v100;
  char v101;
  unsigned __int32 v102;
  int v103;
  float32x4_t v104;
  int8x8_t v105;
  float32x4_t v106;
  int8x16_t v107;
  char v108;
  int v109;
  float32x4_t v110;
  int8x8_t v111;
  float32x4_t v112;
  int8x16_t v113;
  char v114;
  unsigned __int32 v115;
  int v116;
  float32x4_t v117;
  int8x8_t v118;
  float32x4_t v119;
  int8x16_t v120;
  char v121;
  int v122;
  float32x4_t v123;
  int8x8_t v124;
  float32x4_t v125;
  int8x16_t v126;
  char v127;
  int v128;
  float32x4_t v129;
  float32x4_t v130;
  int8x8_t v131;
  float32x4_t v132;
  int8x16_t v133;
  char v134;
  int v135;
  float32x4_t v136;
  int8x16_t v137;
  int8x8_t v138;
  float32x4_t v139;
  char v140;
  int v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  int8x8_t v145;
  float32x4_t v146;
  int8x16_t v147;
  char v148;
  int v149;
  float32x4_t v150;
  float32x4_t v151;
  int8x8_t v152;
  float32x4_t v153;
  int8x16_t v154;
  char v155;
  int v156;
  float32x4_t v157;
  int8x8_t v158;
  float32x4_t v159;
  int8x16_t v160;
  char v161;
  int v162;
  float32x4_t v163;
  int8x8_t v164;
  float32x4_t v165;
  int8x16_t v166;
  char v167;
  int v168;
  float32x4_t v169;
  int8x8_t v170;
  float32x4_t v171;
  int8x16_t v172;
  char v173;
  int v174;
  float32x4_t v175;
  int8x8_t v176;
  float32x4_t v177;
  int8x16_t v178;
  char v179;
  int v180;
  float32x4_t v181;
  float32x4_t v182;
  int8x8_t v183;
  float32x4_t v184;
  int8x16_t v185;
  char v186;
  int v187;
  float32x4_t v188;
  float32x4_t v189;
  int8x8_t v190;
  float32x4_t v191;
  int8x16_t v192;
  char v193;
  int v194;
  float32x4_t v195;
  float32x4_t v196;
  int8x8_t v197;
  float32x4_t v198;
  int8x16_t v199;
  char v200;
  int v201;
  float32x4_t v202;
  float32x4_t v203;
  int8x8_t v204;
  float32x4_t v205;
  int8x16_t v206;
  char v207;
  unsigned __int32 v208;
  int v209;
  float32x4_t v210;
  float32x4_t v211;
  int8x8_t v212;
  float32x4_t v213;
  int8x16_t v214;
  char v215;
  int v216;
  int v217;
  float32x4_t v218;
  float32x4_t v219;
  int8x8_t v220;
  float32x4_t v221;
  int8x16_t v222;
  char v223;
  unsigned __int32 v224;
  int v225;
  float32x4_t v226;
  float32x4_t v227;
  int8x8_t v228;
  float32x4_t v229;
  int8x16_t v230;
  char v231;
  int v232;
  float32x4_t v233;
  float32x4_t v234;
  int8x8_t v235;
  float32x4_t v236;
  int8x16_t v237;
  char v238;
  unsigned __int32 v239;
  int v240;
  float32x4_t v241;
  int8x8_t v242;
  float32x4_t v243;
  int8x16_t v244;
  char v245;
  int v246;
  float32x4_t v247;
  int8x8_t v248;
  float32x4_t v249;
  int8x16_t v250;
  char v251;
  int v252;
  float32x4_t v253;
  int8x8_t v254;
  float32x4_t v255;
  int8x16_t v256;
  char v257;
  int v258;
  float32x4_t v259;
  int8x8_t v260;
  float32x4_t v261;
  int8x16_t v262;
  char v263;
  int v264;
  int v265;
  float32x4_t v266;
  float32x4_t v267;
  int8x8_t v268;
  float32x4_t v269;
  int8x16_t v270;
  char v271;
  int v272;
  int v273;
  float32x4_t v274;
  float32x4_t v275;
  int8x8_t v276;
  float32x4_t v277;
  int8x16_t v278;
  char v279;
  int v280;
  float32x4_t v281;
  float32x4_t v282;
  int8x8_t v283;
  float32x4_t v284;
  int8x16_t v285;
  char v286;
  int v287;
  float32x4_t v288;
  float32x4_t v289;
  int8x8_t v290;
  float32x4_t v291;
  int8x16_t v292;
  char v293;
  int v294;
  float32x4_t v295;
  int8x8_t v296;
  float32x4_t v297;
  int8x16_t v298;
  char v299;
  int v300;
  float32x4_t v301;
  int8x8_t v302;
  float32x4_t v303;
  int8x16_t v304;
  char v305;
  int v306;
  float32x4_t v307;
  int8x8_t v308;
  float32x4_t v309;
  int8x16_t v310;
  char v311;
  int v312;
  float32x4_t v313;
  int8x8_t v314;
  float32x4_t v315;
  int8x16_t v316;
  char v317;
  unsigned __int32 v318;
  int v319;
  float32x4_t v320;
  float32x4_t v321;
  int8x8_t v322;
  float32x4_t v323;
  int8x16_t v324;
  char v325;
  int v326;
  float32x4_t v327;
  float32x4_t v328;
  int8x8_t v329;
  float32x4_t v330;
  int8x16_t v331;
  char v332;
  unsigned __int32 v333;
  int v334;
  float32x4_t v335;
  float32x4_t v336;
  int8x8_t v337;
  float32x4_t v338;
  int8x16_t v339;
  char v340;
  int v341;
  float32x4_t v342;
  float32x4_t v343;
  int8x8_t v344;
  float32x4_t v345;
  int8x16_t v346;
  char v347;
  int v348;
  float32x4_t v349;
  int8x8_t v350;
  float32x4_t v351;
  int8x16_t v352;
  char v353;
  int v354;
  float32x4_t v355;
  int8x8_t v356;
  float32x4_t v357;
  int8x16_t v358;
  char v359;
  int v360;
  float32x4_t v361;
  int8x8_t v362;
  float32x4_t v363;
  int8x16_t v364;
  char v365;
  int v366;
  float32x4_t v367;
  int8x8_t v368;
  float32x4_t v369;
  int8x16_t v370;
  char v371;
  int v372;
  float32x4_t v373;
  float32x4_t v374;
  int8x8_t v375;
  float32x4_t v376;
  int8x16_t v377;
  char v378;
  int v379;
  float32x4_t v380;
  float32x4_t v381;
  int8x8_t v382;
  float32x4_t v383;
  int8x16_t v384;
  char v385;
  int v386;
  float32x4_t v387;
  int8x16_t v388;
  int8x8_t v389;
  float32x4_t v390;
  char v391;
  int v392;
  float32x4_t v393;
  int8x8_t v394;
  float32x4_t v395;
  int8x16_t v396;
  char v397;
  int v398;
  float32x4_t v399;
  int8x8_t v400;
  float32x4_t v401;
  int8x16_t v402;
  char v403;
  int v404;
  float32x4_t v405;
  int8x8_t v406;
  float32x4_t v407;
  int8x16_t v408;
  char v409;
  int v410;
  float32x4_t v411;
  int8x8_t v412;
  float32x4_t v413;
  int8x16_t v414;
  char v415;
  int v416;
  float32x4_t v417;
  int8x8_t v418;
  float32x4_t v419;
  int8x16_t v420;
  char v421;
  int v422;
  float32x4_t v423;
  int8x8_t v424;
  float32x4_t v425;
  int8x16_t v426;
  char v427;
  int v428;
  float32x4_t v429;
  int8x8_t v430;
  float32x4_t v431;
  int8x16_t v432;
  char v433;
  int v434;
  float32x4_t v435;
  int8x8_t v436;
  float32x4_t v437;
  int8x16_t v438;
  char v439;
  int v440;
  float32x4_t v441;
  int8x8_t v442;
  float32x4_t v443;
  int8x16_t v444;
  char v445;
  int v446;
  float32x4_t v447;
  float32x4_t v448;
  int8x8_t v449;
  float32x4_t v450;
  int8x16_t v451;
  char v452;
  int v453;
  float32x4_t v454;
  float32x4_t v455;
  int8x8_t v456;
  float32x4_t v457;
  int8x16_t v458;
  char v459;
  int v460;
  float32x4_t v461;
  float32x4_t v462;
  int8x8_t v463;
  float32x4_t v464;
  int8x16_t v465;
  char v466;
  int v467;
  float32x4_t v468;
  float32x4_t v469;
  int8x8_t v470;
  float32x4_t v471;
  int8x16_t v472;
  char v473;
  int v474;
  float32x4_t v475;
  int8x8_t v476;
  float32x4_t v477;
  int8x16_t v478;
  char v479;
  int v480;
  float32x4_t v481;
  int8x8_t v482;
  float32x4_t v483;
  int8x16_t v484;
  char v485;
  int v486;
  float32x4_t v487;
  int8x8_t v488;
  float32x4_t v489;
  int8x16_t v490;
  char v491;
  int v492;
  float32x4_t v493;
  int8x8_t v494;
  float32x4_t v495;
  int8x16_t v496;
  char v497;
  int v498;
  float32x4_t v499;
  float32x4_t v500;
  int8x8_t v501;
  float32x4_t v502;
  int8x16_t v503;
  char v504;
  int v505;
  float32x4_t v506;
  float32x4_t v507;
  int8x8_t v508;
  float32x4_t v509;
  int8x16_t v510;
  char v511;
  int v512;
  float32x4_t v513;
  float32x4_t v514;
  int8x8_t v515;
  float32x4_t v516;
  int8x16_t v517;
  char v518;
  int v519;
  float32x4_t v520;
  float32x4_t v521;
  int8x8_t v522;
  float32x4_t v523;
  int8x16_t v524;
  char v525;
  int v526;
  float32x4_t v527;
  int8x8_t v528;
  float32x4_t v529;
  int8x16_t v530;
  char v531;
  int v532;
  float32x4_t v533;
  int8x8_t v534;
  float32x4_t v535;
  int8x16_t v536;
  char v537;
  int v538;
  float32x4_t v539;
  int8x8_t v540;
  float32x4_t v541;
  int8x16_t v542;
  char v543;
  int v544;
  float32x4_t v545;
  int8x8_t v546;
  float32x4_t v547;
  int8x16_t v548;
  char v549;
  __int8 *v550;
  int v551;
  float32x4_t v552;
  float32x4_t v553;
  int8x8_t v554;
  float32x4_t v555;
  int8x16_t v556;
  char v557;
  int v558;
  float32x4_t v559;
  float32x4_t v560;
  int8x8_t v561;
  float32x4_t v562;
  int8x16_t v563;
  char v564;
  int v565;
  float32x4_t v566;
  int8x16_t v567;
  int8x8_t v568;
  float32x4_t v569;
  char v570;
  int v571;
  int8x16_t v572;
  int8x8_t v573;
  float32x4_t v574;
  char v575;

  *(int32x2_t *)a6.f32 = *a2;
  v15.i32[1] = 1;
  *(int32x2_t *)a5.f32 = vadd_s32(*a2, (int32x2_t)0x100000003);
  v11 = a2[1].i32[0];
  v12 = (_BYTE *)***a1;
  v13 = *(*a1)[5];
  v14 = (char)v12[4086];
  v15.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v13 + 40784) + 312);
  *(float32x2_t *)a8.f32 = vcvt_f32_s32(*(int32x2_t *)a5.f32);
  v16 = a8;
  v16.f32[2] = (float)(v11 + 4);
  v17.i64[0] = 0x3F0000003F000000;
  v17.i64[1] = 0x3F0000003F000000;
  if (v12[4086])
  {
    v18 = vaddq_f32(v16, v17);
    v19 = *(_QWORD *)(v13 + 8);
    v16.i32[0] = **(_DWORD **)(v13 + 16);
    if (v14 > 0)
      goto LABEL_10;
  }
  else
  {
    a10.i8[0] = v12[4083];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4084];
    v20 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v20.i32 = (float)v20.i32[0];
    a10.i32[1] = v20.i32[0];
    v20.i8[0] = v12[4085];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v20)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v16 = vaddq_f32(v16, v17);
    v18 = vaddq_f32(v16, vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u)));
    v19 = *(_QWORD *)(v13 + 8);
    v16.i32[0] = **(_DWORD **)(v13 + 16);
    if (v14 > 0)
      goto LABEL_10;
  }
  a10.i64[0] = *(_QWORD *)v19;
  a10.i32[2] = *(_DWORD *)(v19 + 8);
  a10 = (int8x16_t)vmlsq_lane_f32((float32x4_t)a10, v18, v15, 0);
  v10 = (float32x2_t)vextq_s8(a10, a10, 8uLL).u64[0];
  if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)a10.i8, 1), *(float32x2_t *)a10.i8, 1), v10, v10).f32[0] <= v16.f32[0])
  {
    v21 = v12[4086] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v21;
    if (v14)
      return 0;
  }
LABEL_10:
  v22 = v11 + 5;
  v23 = (char)v12[4126];
  if (v12[4126])
  {
    a8.f32[2] = (float)v22;
    v24.i64[0] = 0x3F0000003F000000;
    v24.i64[1] = 0x3F0000003F000000;
    v25 = vaddq_f32(a8, v24);
    if (v23 > 0)
      goto LABEL_19;
  }
  else
  {
    a8.f32[2] = (float)v22;
    v26.i64[0] = 0x3F0000003F000000;
    v26.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4123];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4124];
    v27 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v27.i32 = (float)v27.i32[0];
    a10.i32[1] = v27.i32[0];
    v27.i8[0] = v12[4125];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v27)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v28 = vaddq_f32(a8, v26);
    v24 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v25 = vaddq_f32(v28, v24);
    if (v23 > 0)
      goto LABEL_19;
  }
  v24.i64[0] = *(_QWORD *)v19;
  v24.i32[2] = *(_DWORD *)(v19 + 8);
  v29 = (int8x16_t)vmlsq_lane_f32(v24, v25, v15, 0);
  a10 = vextq_s8(v29, v29, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v29.i8, *(float32x2_t *)v29.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v29.i8, 1), *(float32x2_t *)v29.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v30 = v12[4126] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v30;
    if (v23)
      return 0;
  }
LABEL_19:
  v31 = a6.i32[0] + 2;
  v32 = v11 + 6;
  v33 = (char)v12[4166];
  if (v12[4166])
  {
    v34 = a6;
    v34.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v34.f32 = vcvt_f32_s32(*(int32x2_t *)v34.f32);
    v34.f32[2] = (float)v32;
    v35.i64[0] = 0x3F0000003F000000;
    v35.i64[1] = 0x3F0000003F000000;
    v36 = vaddq_f32(v34, v35);
    if (v33 > 0)
      goto LABEL_28;
  }
  else
  {
    v37 = a6;
    v37.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v37.f32 = vcvt_f32_s32(*(int32x2_t *)v37.f32);
    v37.f32[2] = (float)v32;
    v38.i64[0] = 0x3F0000003F000000;
    v38.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4163];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4164];
    v39 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v39.i32 = (float)v39.i32[0];
    a10.i32[1] = v39.i32[0];
    v39.i8[0] = v12[4165];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v39)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v40 = vaddq_f32(v37, v38);
    v35 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v36 = vaddq_f32(v40, v35);
    if (v33 > 0)
      goto LABEL_28;
  }
  v35.i64[0] = *(_QWORD *)v19;
  v35.i32[2] = *(_DWORD *)(v19 + 8);
  v41 = (int8x16_t)vmlsq_lane_f32(v35, v36, v15, 0);
  a10 = vextq_s8(v41, v41, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v41.i8, *(float32x2_t *)v41.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v41.i8, 1), *(float32x2_t *)v41.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v42 = v12[4166] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v42;
    if (v33)
      return 0;
  }
LABEL_28:
  v43 = v11 + 7;
  v44 = (char)v12[4206];
  if (v12[4206])
  {
    v45 = a6;
    v45.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v45.f32 = vcvt_f32_s32(*(int32x2_t *)v45.f32);
    v45.f32[2] = (float)v43;
    v46.i64[0] = 0x3F0000003F000000;
    v46.i64[1] = 0x3F0000003F000000;
    v47 = vaddq_f32(v45, v46);
    if (v44 > 0)
      goto LABEL_37;
  }
  else
  {
    v48 = a6;
    v48.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v48.f32 = vcvt_f32_s32(*(int32x2_t *)v48.f32);
    v48.f32[2] = (float)v43;
    v49.i64[0] = 0x3F0000003F000000;
    v49.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4203];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4204];
    v50 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v50.i32 = (float)v50.i32[0];
    a10.i32[1] = v50.i32[0];
    v50.i8[0] = v12[4205];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v50)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v51 = vaddq_f32(v48, v49);
    v46 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v47 = vaddq_f32(v51, v46);
    if (v44 > 0)
      goto LABEL_37;
  }
  v46.i64[0] = *(_QWORD *)v19;
  v46.i32[2] = *(_DWORD *)(v19 + 8);
  v52 = (int8x16_t)vmlsq_lane_f32(v46, v47, v15, 0);
  a10 = vextq_s8(v52, v52, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v52.i8, *(float32x2_t *)v52.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v52.i8, 1), *(float32x2_t *)v52.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v53 = v12[4206] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v53;
    if (v44)
      return 0;
  }
LABEL_37:
  v54 = (char)v12[4246];
  if (v12[4246])
  {
    v55 = a5;
    v55.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v55.f32 = vcvt_f32_s32(*(int32x2_t *)v55.f32);
    v55.f32[2] = (float)v32;
    v56.i64[0] = 0x3F0000003F000000;
    v56.i64[1] = 0x3F0000003F000000;
    v57 = vaddq_f32(v55, v56);
    if (v54 > 0)
      goto LABEL_46;
  }
  else
  {
    v58 = a5;
    v58.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v58.f32 = vcvt_f32_s32(*(int32x2_t *)v58.f32);
    v58.f32[2] = (float)v32;
    v59.i64[0] = 0x3F0000003F000000;
    v59.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4243];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4244];
    v60 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v60.i32 = (float)v60.i32[0];
    a10.i32[1] = v60.i32[0];
    v60.i8[0] = v12[4245];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v60)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v61 = vaddq_f32(v58, v59);
    v56 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v57 = vaddq_f32(v61, v56);
    if (v54 > 0)
      goto LABEL_46;
  }
  v56.i64[0] = *(_QWORD *)v19;
  v56.i32[2] = *(_DWORD *)(v19 + 8);
  v62 = (int8x16_t)vmlsq_lane_f32(v56, v57, v15, 0);
  a10 = vextq_s8(v62, v62, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v62.i8, *(float32x2_t *)v62.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v62.i8, 1), *(float32x2_t *)v62.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v63 = v12[4246] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v63;
    if (v54)
      return 0;
  }
LABEL_46:
  v64 = (char)v12[4286];
  if (v12[4286])
  {
    v65 = a5;
    v65.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v65.f32 = vcvt_f32_s32(*(int32x2_t *)v65.f32);
    v65.f32[2] = (float)v43;
    v66.i64[0] = 0x3F0000003F000000;
    v66.i64[1] = 0x3F0000003F000000;
    v67 = vaddq_f32(v65, v66);
    if (v64 > 0)
      goto LABEL_55;
  }
  else
  {
    v68 = a5;
    v68.i32[0] = a6.i32[0] + 2;
    *(float32x2_t *)v68.f32 = vcvt_f32_s32(*(int32x2_t *)v68.f32);
    v68.f32[2] = (float)v43;
    v69.i64[0] = 0x3F0000003F000000;
    v69.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4283];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4284];
    v70 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v70.i32 = (float)v70.i32[0];
    a10.i32[1] = v70.i32[0];
    v70.i8[0] = v12[4285];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v70)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v71 = vaddq_f32(v68, v69);
    v66 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v67 = vaddq_f32(v71, v66);
    if (v64 > 0)
      goto LABEL_55;
  }
  v66.i64[0] = *(_QWORD *)v19;
  v66.i32[2] = *(_DWORD *)(v19 + 8);
  v72 = (int8x16_t)vmlsq_lane_f32(v66, v67, v15, 0);
  a10 = vextq_s8(v72, v72, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v72.i8, *(float32x2_t *)v72.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v72.i8, 1), *(float32x2_t *)v72.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v73 = v12[4286] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v73;
    if (v64)
      return 0;
  }
LABEL_55:
  v74 = (char)v12[4326];
  *(float32x2_t *)v67.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)3));
  v67.f32[2] = (float)v32;
  v75.i64[0] = 0x3F0000003F000000;
  v75.i64[1] = 0x3F0000003F000000;
  if (!v12[4326])
  {
    a10.i8[0] = v12[4323];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4324];
    v76 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v76.i32 = (float)v76.i32[0];
    a10.i32[1] = v76.i32[0];
    v76.i8[0] = v12[4325];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v76)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v67 = vaddq_f32(v67, v75);
    v75 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v77 = vaddq_f32(v67, v75);
  if (v74 <= 0)
  {
    v75.i64[0] = *(_QWORD *)v19;
    v75.i32[2] = *(_DWORD *)(v19 + 8);
    v78 = (int8x16_t)vmlsq_lane_f32(v75, v77, v15, 0);
    a10 = vextq_s8(v78, v78, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v78.i8, *(float32x2_t *)v78.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v78.i8, 1), *(float32x2_t *)v78.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v79 = v12[4326] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v79;
      if (v74)
        return 0;
    }
  }
  v80 = (char)v12[4366];
  if (v12[4366])
  {
    *(float32x2_t *)v77.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)3));
    v77.f32[2] = (float)v43;
    v81.i64[0] = 0x3F0000003F000000;
    v81.i64[1] = 0x3F0000003F000000;
    v82 = vaddq_f32(v77, v81);
    if (v80 > 0)
      goto LABEL_72;
  }
  else
  {
    *(float32x2_t *)v77.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)3));
    v77.f32[2] = (float)v43;
    v83.i64[0] = 0x3F0000003F000000;
    v83.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4363];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4364];
    v84 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v84.i32 = (float)v84.i32[0];
    a10.i32[1] = v84.i32[0];
    v84.i8[0] = v12[4365];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v84)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v85 = vaddq_f32(v77, v83);
    v81 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v82 = vaddq_f32(v85, v81);
    if (v80 > 0)
      goto LABEL_72;
  }
  v81.i64[0] = *(_QWORD *)v19;
  v81.i32[2] = *(_DWORD *)(v19 + 8);
  v86 = (int8x16_t)vmlsq_lane_f32(v81, v82, v15, 0);
  a10 = vextq_s8(v86, v86, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v86.i8, *(float32x2_t *)v86.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v86.i8, 1), *(float32x2_t *)v86.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v87 = v12[4366] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v87;
    if (v80)
      return 0;
  }
LABEL_72:
  v88 = (char)v12[4406];
  if (v12[4406])
  {
    v82.f32[0] = (float)a5.i32[0];
    v82.f32[1] = (float)a5.i32[1];
    v82.f32[2] = (float)v32;
    v89.i64[0] = 0x3F0000003F000000;
    v89.i64[1] = 0x3F0000003F000000;
    v90 = vaddq_f32(v82, v89);
    if (v88 > 0)
      goto LABEL_81;
  }
  else
  {
    v82.f32[0] = (float)a5.i32[0];
    *(float *)a10.i32 = (float)v32;
    v82.f32[1] = (float)a5.i32[1];
    v82.f32[2] = (float)v32;
    v91.i64[0] = 0x3F0000003F000000;
    v91.i64[1] = 0x3F0000003F000000;
    a10.i8[0] = v12[4403];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4404];
    v92 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v92.i32 = (float)v92.i32[0];
    a10.i32[1] = v92.i32[0];
    v92.i8[0] = v12[4405];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v92)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v93 = vaddq_f32(v82, v91);
    v89 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v90 = vaddq_f32(v93, v89);
    if (v88 > 0)
      goto LABEL_81;
  }
  v89.i64[0] = *(_QWORD *)v19;
  v89.i32[2] = *(_DWORD *)(v19 + 8);
  v94 = (int8x16_t)vmlsq_lane_f32(v89, v90, v15, 0);
  a10 = vextq_s8(v94, v94, 8uLL);
  v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v94.i8, *(float32x2_t *)v94.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v94.i8, 1), *(float32x2_t *)v94.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
  if (v10.f32[0] <= v16.f32[0])
  {
    v95 = v12[4406] ? 2 : 1;
    **(_BYTE **)(v13 + 24) = v95;
    if (v88)
      return 0;
  }
LABEL_81:
  v96 = (char)v12[4446];
  v90.f32[0] = (float)a5.i32[0];
  *(float *)a10.i32 = (float)v43;
  v90.f32[1] = (float)a5.i32[1];
  v90.f32[2] = (float)v43;
  v97.i64[0] = 0x3F0000003F000000;
  v97.i64[1] = 0x3F0000003F000000;
  if (!v12[4446])
  {
    a10.i8[0] = v12[4443];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4444];
    v98 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v98.i32 = (float)v98.i32[0];
    a10.i32[1] = v98.i32[0];
    v98.i8[0] = v12[4445];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v98)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v90 = vaddq_f32(v90, v97);
    v97 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v99 = vaddq_f32(v90, v97);
  if (v96 <= 0)
  {
    v97.i64[0] = *(_QWORD *)v19;
    v97.i32[2] = *(_DWORD *)(v19 + 8);
    v100 = (int8x16_t)vmlsq_lane_f32(v97, v99, v15, 0);
    a10 = vextq_s8(v100, v100, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v100.i8, *(float32x2_t *)v100.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v100.i8, 1), *(float32x2_t *)v100.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v101 = v12[4446] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v101;
      if (v96)
        return 0;
    }
  }
  v102 = a6.i32[1] + 2;
  v103 = (char)v12[4486];
  *(float32x2_t *)v99.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(a6.i32[1] + 2, v31));
  v99.f32[2] = (float)(v11 + 4);
  v104.i64[0] = 0x3F0000003F000000;
  v104.i64[1] = 0x3F0000003F000000;
  if (!v12[4486])
  {
    a10.i8[0] = v12[4483];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4484];
    v105 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v105.i32 = (float)v105.i32[0];
    a10.i32[1] = v105.i32[0];
    v105.i8[0] = v12[4485];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v105)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v99 = vaddq_f32(v99, v104);
    v104 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v106 = vaddq_f32(v99, v104);
  if (v103 <= 0)
  {
    v104.i64[0] = *(_QWORD *)v19;
    v104.i32[2] = *(_DWORD *)(v19 + 8);
    v107 = (int8x16_t)vmlsq_lane_f32(v104, v106, v15, 0);
    a10 = vextq_s8(v107, v107, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v107.i8, *(float32x2_t *)v107.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v107.i8, 1), *(float32x2_t *)v107.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v108 = v12[4486] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v108;
      if (v103)
        return 0;
    }
  }
  v109 = (char)v12[4526];
  *(float32x2_t *)v106.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v102, v31));
  v106.f32[2] = (float)v22;
  v110.i64[0] = 0x3F0000003F000000;
  v110.i64[1] = 0x3F0000003F000000;
  if (!v12[4526])
  {
    a10.i8[0] = v12[4523];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4524];
    v111 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v111.i32 = (float)v111.i32[0];
    a10.i32[1] = v111.i32[0];
    v111.i8[0] = v12[4525];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v111)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v106 = vaddq_f32(v106, v110);
    v110 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v112 = vaddq_f32(v106, v110);
  if (v109 <= 0)
  {
    v110.i64[0] = *(_QWORD *)v19;
    v110.i32[2] = *(_DWORD *)(v19 + 8);
    v113 = (int8x16_t)vmlsq_lane_f32(v110, v112, v15, 0);
    a10 = vextq_s8(v113, v113, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v113.i8, *(float32x2_t *)v113.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v113.i8, 1), *(float32x2_t *)v113.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v114 = v12[4526] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v114;
      if (v109)
        return 0;
    }
  }
  v115 = a6.i32[1] + 3;
  v116 = (char)v12[4566];
  *(float32x2_t *)v112.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(a6.i32[1] + 3, v31));
  v112.f32[2] = (float)(v11 + 4);
  v117.i64[0] = 0x3F0000003F000000;
  v117.i64[1] = 0x3F0000003F000000;
  if (!v12[4566])
  {
    a10.i8[0] = v12[4563];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4564];
    v118 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v118.i32 = (float)v118.i32[0];
    a10.i32[1] = v118.i32[0];
    v118.i8[0] = v12[4565];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v118)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v112 = vaddq_f32(v112, v117);
    v117 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v119 = vaddq_f32(v112, v117);
  if (v116 <= 0)
  {
    v117.i64[0] = *(_QWORD *)v19;
    v117.i32[2] = *(_DWORD *)(v19 + 8);
    v120 = (int8x16_t)vmlsq_lane_f32(v117, v119, v15, 0);
    a10 = vextq_s8(v120, v120, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v120.i8, *(float32x2_t *)v120.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v120.i8, 1), *(float32x2_t *)v120.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v121 = v12[4566] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v121;
      if (v116)
        return 0;
    }
  }
  v122 = (char)v12[4606];
  *(float32x2_t *)v119.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v115, v31));
  v119.f32[2] = (float)v22;
  v123.i64[0] = 0x3F0000003F000000;
  v123.i64[1] = 0x3F0000003F000000;
  if (!v12[4606])
  {
    a10.i8[0] = v12[4603];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4604];
    v124 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v124.i32 = (float)v124.i32[0];
    a10.i32[1] = v124.i32[0];
    v124.i8[0] = v12[4605];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v124)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v119 = vaddq_f32(v119, v123);
    v123 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v125 = vaddq_f32(v119, v123);
  if (v122 <= 0)
  {
    v123.i64[0] = *(_QWORD *)v19;
    v123.i32[2] = *(_DWORD *)(v19 + 8);
    v126 = (int8x16_t)vmlsq_lane_f32(v123, v125, v15, 0);
    a10 = vextq_s8(v126, v126, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v126.i8, *(float32x2_t *)v126.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v126.i8, 1), *(float32x2_t *)v126.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v127 = v12[4606] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v127;
      if (v122)
        return 0;
    }
  }
  v128 = (char)v12[4646];
  v129 = a5;
  v129.i32[1] = a6.i32[1] + 2;
  *(float32x2_t *)v129.f32 = vcvt_f32_s32(*(int32x2_t *)v129.f32);
  v129.f32[2] = (float)(v11 + 4);
  v130.i64[0] = 0x3F0000003F000000;
  v130.i64[1] = 0x3F0000003F000000;
  if (!v12[4646])
  {
    a10.i8[0] = v12[4643];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4644];
    v131 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v131.i32 = (float)v131.i32[0];
    a10.i32[1] = v131.i32[0];
    v131.i8[0] = v12[4645];
    v10 = (float32x2_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v131)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v129 = vaddq_f32(v129, v130);
    v130 = vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v132 = vaddq_f32(v129, v130);
  if (v128 <= 0)
  {
    v130.i64[0] = *(_QWORD *)v19;
    v130.i32[2] = *(_DWORD *)(v19 + 8);
    v133 = (int8x16_t)vmlsq_lane_f32(v130, v132, v15, 0);
    a10 = vextq_s8(v133, v133, 8uLL);
    v10 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v133.i8, *(float32x2_t *)v133.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v133.i8, 1), *(float32x2_t *)v133.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8);
    if (v10.f32[0] <= v16.f32[0])
    {
      v134 = v12[4646] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v134;
      if (v128)
        return 0;
    }
  }
  v135 = (char)v12[4686];
  v136 = a5;
  v136.i32[1] = a6.i32[1] + 2;
  *(float32x2_t *)v136.f32 = vcvt_f32_s32(*(int32x2_t *)v136.f32);
  v136.f32[2] = (float)v22;
  v137.i64[0] = 0x3F0000003F000000;
  v137.i64[1] = 0x3F0000003F000000;
  if (!v12[4686])
  {
    a10.i8[0] = v12[4683];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8));
    *(float *)a10.i32 = (float)a10.i32[0];
    v10.i8[0] = v12[4684];
    v138 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)v10)).u64[0];
    *(float *)v138.i32 = (float)v138.i32[0];
    a10.i32[1] = v138.i32[0];
    v138.i8[0] = v12[4685];
    *(float *)&a10.i32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v138)).i32[0];
    v136 = vaddq_f32(v136, (float32x4_t)v137);
    v137 = (int8x16_t)vmulq_f32((float32x4_t)a10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v139 = vaddq_f32(v136, (float32x4_t)v137);
  if (v135 <= 0)
  {
    v137.i64[0] = *(_QWORD *)v19;
    v137.i32[2] = *(_DWORD *)(v19 + 8);
    v137 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v137, v139, v15, 0);
    a10 = vextq_s8(v137, v137, 8uLL);
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v137.i8, 1), *(float32x2_t *)v137.i8, 1), *(float32x2_t *)a10.i8, *(float32x2_t *)a10.i8).f32[0] <= v16.f32[0])
    {
      v140 = v12[4686] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v140;
      if (v135)
        return 0;
    }
  }
  v141 = (char)v12[4726];
  v142 = a5;
  v142.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v142.f32 = vcvt_f32_s32(*(int32x2_t *)v142.f32);
  v142.f32[2] = (float)(v11 + 4);
  v143.i64[0] = 0x3F0000003F000000;
  v143.i64[1] = 0x3F0000003F000000;
  if (v12[4726])
  {
    v144 = vaddq_f32(v142, v143);
  }
  else
  {
    v137.i8[0] = v12[4723];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4724];
    v145 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v145.i32 = (float)v145.i32[0];
    v137.i32[1] = v145.i32[0];
    v145.i8[0] = v12[4725];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v145));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v146 = vaddq_f32(v142, v143);
    v142 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v144 = vaddq_f32(v146, v142);
  }
  if (v141 <= 0)
  {
    v142.i64[0] = *(_QWORD *)v19;
    v142.i32[2] = *(_DWORD *)(v19 + 8);
    v147 = (int8x16_t)vmlsq_lane_f32(v142, v144, v15, 0);
    v137.i64[0] = vextq_s8(v147, v147, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v147.i8, *(float32x2_t *)v147.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v147.i8, 1), *(float32x2_t *)v147.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v148 = v12[4726] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v148;
      if (v141)
        return 0;
    }
  }
  v149 = (char)v12[4766];
  v150 = a5;
  v150.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v150.f32 = vcvt_f32_s32(*(int32x2_t *)v150.f32);
  v150.f32[2] = (float)v22;
  v151.i64[0] = 0x3F0000003F000000;
  v151.i64[1] = 0x3F0000003F000000;
  if (!v12[4766])
  {
    v137.i8[0] = v12[4763];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4764];
    v152 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v152.i32 = (float)v152.i32[0];
    v137.i32[1] = v152.i32[0];
    v152.i8[0] = v12[4765];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v152));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v150 = vaddq_f32(v150, v151);
    v151 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v153 = vaddq_f32(v150, v151);
  if (v149 <= 0)
  {
    v151.i64[0] = *(_QWORD *)v19;
    v151.i32[2] = *(_DWORD *)(v19 + 8);
    v154 = (int8x16_t)vmlsq_lane_f32(v151, v153, v15, 0);
    v137.i64[0] = vextq_s8(v154, v154, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v154.i8, *(float32x2_t *)v154.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v154.i8, 1), *(float32x2_t *)v154.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v155 = v12[4766] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v155;
      if (v149)
        return 0;
    }
  }
  v156 = (char)v12[4806];
  *(float32x2_t *)v153.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v102, v31));
  v153.f32[2] = (float)v32;
  v157.i64[0] = 0x3F0000003F000000;
  v157.i64[1] = 0x3F0000003F000000;
  if (!v12[4806])
  {
    v137.i8[0] = v12[4803];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4804];
    v158 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v158.i32 = (float)v158.i32[0];
    v137.i32[1] = v158.i32[0];
    v158.i8[0] = v12[4805];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v158));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v153 = vaddq_f32(v153, v157);
    v157 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v159 = vaddq_f32(v153, v157);
  if (v156 <= 0)
  {
    v157.i64[0] = *(_QWORD *)v19;
    v157.i32[2] = *(_DWORD *)(v19 + 8);
    v160 = (int8x16_t)vmlsq_lane_f32(v157, v159, v15, 0);
    v137.i64[0] = vextq_s8(v160, v160, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v160.i8, *(float32x2_t *)v160.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v160.i8, 1), *(float32x2_t *)v160.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v161 = v12[4806] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v161;
      if (v156)
        return 0;
    }
  }
  v162 = (char)v12[4846];
  *(float32x2_t *)v159.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v102, v31));
  v159.f32[2] = (float)v43;
  v163.i64[0] = 0x3F0000003F000000;
  v163.i64[1] = 0x3F0000003F000000;
  if (!v12[4846])
  {
    v137.i8[0] = v12[4843];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4844];
    v164 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v164.i32 = (float)v164.i32[0];
    v137.i32[1] = v164.i32[0];
    v164.i8[0] = v12[4845];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v164));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v159 = vaddq_f32(v159, v163);
    v163 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v165 = vaddq_f32(v159, v163);
  if (v162 <= 0)
  {
    v163.i64[0] = *(_QWORD *)v19;
    v163.i32[2] = *(_DWORD *)(v19 + 8);
    v166 = (int8x16_t)vmlsq_lane_f32(v163, v165, v15, 0);
    v137.i64[0] = vextq_s8(v166, v166, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v166.i8, *(float32x2_t *)v166.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v166.i8, 1), *(float32x2_t *)v166.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v167 = v12[4846] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v167;
      if (v162)
        return 0;
    }
  }
  v168 = (char)v12[4886];
  *(float32x2_t *)v165.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v115, v31));
  v165.f32[2] = (float)v32;
  v169.i64[0] = 0x3F0000003F000000;
  v169.i64[1] = 0x3F0000003F000000;
  if (!v12[4886])
  {
    v137.i8[0] = v12[4883];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4884];
    v170 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v170.i32 = (float)v170.i32[0];
    v137.i32[1] = v170.i32[0];
    v170.i8[0] = v12[4885];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v170));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v165 = vaddq_f32(v165, v169);
    v169 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v171 = vaddq_f32(v165, v169);
  if (v168 <= 0)
  {
    v169.i64[0] = *(_QWORD *)v19;
    v169.i32[2] = *(_DWORD *)(v19 + 8);
    v172 = (int8x16_t)vmlsq_lane_f32(v169, v171, v15, 0);
    v137.i64[0] = vextq_s8(v172, v172, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v172.i8, *(float32x2_t *)v172.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v172.i8, 1), *(float32x2_t *)v172.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v173 = v12[4886] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v173;
      if (v168)
        return 0;
    }
  }
  v174 = (char)v12[4926];
  *(float32x2_t *)v171.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v115, v31));
  v171.f32[2] = (float)v43;
  v175.i64[0] = 0x3F0000003F000000;
  v175.i64[1] = 0x3F0000003F000000;
  if (!v12[4926])
  {
    v137.i8[0] = v12[4923];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4924];
    v176 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v176.i32 = (float)v176.i32[0];
    v137.i32[1] = v176.i32[0];
    v176.i8[0] = v12[4925];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v176));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v171 = vaddq_f32(v171, v175);
    v175 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v177 = vaddq_f32(v171, v175);
  if (v174 <= 0)
  {
    v175.i64[0] = *(_QWORD *)v19;
    v175.i32[2] = *(_DWORD *)(v19 + 8);
    v178 = (int8x16_t)vmlsq_lane_f32(v175, v177, v15, 0);
    v137.i64[0] = vextq_s8(v178, v178, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v178.i8, *(float32x2_t *)v178.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v178.i8, 1), *(float32x2_t *)v178.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v179 = v12[4926] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v179;
      if (v174)
        return 0;
    }
  }
  v180 = (char)v12[4966];
  v181 = a5;
  v181.i32[1] = a6.i32[1] + 2;
  *(float32x2_t *)v181.f32 = vcvt_f32_s32(*(int32x2_t *)v181.f32);
  v181.f32[2] = (float)v32;
  v182.i64[0] = 0x3F0000003F000000;
  v182.i64[1] = 0x3F0000003F000000;
  if (!v12[4966])
  {
    v137.i8[0] = v12[4963];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[4964];
    v183 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v183.i32 = (float)v183.i32[0];
    v137.i32[1] = v183.i32[0];
    v183.i8[0] = v12[4965];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v183));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v181 = vaddq_f32(v181, v182);
    v182 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v184 = vaddq_f32(v181, v182);
  if (v180 <= 0)
  {
    v182.i64[0] = *(_QWORD *)v19;
    v182.i32[2] = *(_DWORD *)(v19 + 8);
    v185 = (int8x16_t)vmlsq_lane_f32(v182, v184, v15, 0);
    v137.i64[0] = vextq_s8(v185, v185, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v185.i8, *(float32x2_t *)v185.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v185.i8, 1), *(float32x2_t *)v185.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v186 = v12[4966] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v186;
      if (v180)
        return 0;
    }
  }
  v187 = (char)v12[5006];
  v188 = a5;
  v188.i32[1] = a6.i32[1] + 2;
  *(float32x2_t *)v188.f32 = vcvt_f32_s32(*(int32x2_t *)v188.f32);
  v188.f32[2] = (float)v43;
  v189.i64[0] = 0x3F0000003F000000;
  v189.i64[1] = 0x3F0000003F000000;
  if (!v12[5006])
  {
    v137.i8[0] = v12[5003];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5004];
    v190 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v190.i32 = (float)v190.i32[0];
    v137.i32[1] = v190.i32[0];
    v190.i8[0] = v12[5005];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v190));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v188 = vaddq_f32(v188, v189);
    v189 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v191 = vaddq_f32(v188, v189);
  if (v187 <= 0)
  {
    v189.i64[0] = *(_QWORD *)v19;
    v189.i32[2] = *(_DWORD *)(v19 + 8);
    v192 = (int8x16_t)vmlsq_lane_f32(v189, v191, v15, 0);
    v137.i64[0] = vextq_s8(v192, v192, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v192.i8, *(float32x2_t *)v192.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v192.i8, 1), *(float32x2_t *)v192.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v193 = v12[5006] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v193;
      if (v187)
        return 0;
    }
  }
  v194 = (char)v12[5046];
  v195 = a5;
  v195.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v195.f32 = vcvt_f32_s32(*(int32x2_t *)v195.f32);
  v195.f32[2] = (float)v32;
  v196.i64[0] = 0x3F0000003F000000;
  v196.i64[1] = 0x3F0000003F000000;
  if (!v12[5046])
  {
    v137.i8[0] = v12[5043];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5044];
    v197 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v197.i32 = (float)v197.i32[0];
    v137.i32[1] = v197.i32[0];
    v197.i8[0] = v12[5045];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v197));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v195 = vaddq_f32(v195, v196);
    v196 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v198 = vaddq_f32(v195, v196);
  if (v194 <= 0)
  {
    v196.i64[0] = *(_QWORD *)v19;
    v196.i32[2] = *(_DWORD *)(v19 + 8);
    v199 = (int8x16_t)vmlsq_lane_f32(v196, v198, v15, 0);
    v137.i64[0] = vextq_s8(v199, v199, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v199.i8, *(float32x2_t *)v199.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v199.i8, 1), *(float32x2_t *)v199.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v200 = v12[5046] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v200;
      if (v194)
        return 0;
    }
  }
  v201 = (char)v12[5086];
  v202 = a5;
  v202.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v202.f32 = vcvt_f32_s32(*(int32x2_t *)v202.f32);
  v202.f32[2] = (float)v43;
  v203.i64[0] = 0x3F0000003F000000;
  v203.i64[1] = 0x3F0000003F000000;
  if (!v12[5086])
  {
    v137.i8[0] = v12[5083];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5084];
    v204 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v204.i32 = (float)v204.i32[0];
    v137.i32[1] = v204.i32[0];
    v204.i8[0] = v12[5085];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v204));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v202 = vaddq_f32(v202, v203);
    v203 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v205 = vaddq_f32(v202, v203);
  if (v201 <= 0)
  {
    v203.i64[0] = *(_QWORD *)v19;
    v203.i32[2] = *(_DWORD *)(v19 + 8);
    v206 = (int8x16_t)vmlsq_lane_f32(v203, v205, v15, 0);
    v137.i64[0] = vextq_s8(v206, v206, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v206.i8, *(float32x2_t *)v206.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v206.i8, 1), *(float32x2_t *)v206.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v207 = v12[5086] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v207;
      if (v201)
        return 0;
    }
  }
  v208 = a6.i32[1] + 4;
  v209 = (char)v12[5126];
  v210 = a6;
  v210.i32[1] = a6.i32[1] + 4;
  *(float32x2_t *)v210.f32 = vcvt_f32_s32(*(int32x2_t *)v210.f32);
  v210.f32[2] = (float)v11;
  v211.i64[0] = 0x3F0000003F000000;
  v211.i64[1] = 0x3F0000003F000000;
  if (!v12[5126])
  {
    v137.i8[0] = v12[5123];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5124];
    v212 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v212.i32 = (float)v212.i32[0];
    v137.i32[1] = v212.i32[0];
    v212.i8[0] = v12[5125];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v212));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v210 = vaddq_f32(v210, v211);
    v211 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v213 = vaddq_f32(v210, v211);
  if (v209 <= 0)
  {
    v211.i64[0] = *(_QWORD *)v19;
    v211.i32[2] = *(_DWORD *)(v19 + 8);
    v214 = (int8x16_t)vmlsq_lane_f32(v211, v213, v15, 0);
    v137.i64[0] = vextq_s8(v214, v214, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v214.i8, *(float32x2_t *)v214.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v214.i8, 1), *(float32x2_t *)v214.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v215 = v12[5126] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v215;
      if (v209)
        return 0;
    }
  }
  v216 = v11 + 1;
  v217 = (char)v12[5166];
  v218 = a6;
  v218.i32[1] = a6.i32[1] + 4;
  *(float32x2_t *)v218.f32 = vcvt_f32_s32(*(int32x2_t *)v218.f32);
  v218.f32[2] = (float)(v11 + 1);
  v219.i64[0] = 0x3F0000003F000000;
  v219.i64[1] = 0x3F0000003F000000;
  if (!v12[5166])
  {
    v137.i8[0] = v12[5163];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5164];
    v220 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v220.i32 = (float)v220.i32[0];
    v137.i32[1] = v220.i32[0];
    v220.i8[0] = v12[5165];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v220));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v218 = vaddq_f32(v218, v219);
    v219 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v221 = vaddq_f32(v218, v219);
  if (v217 <= 0)
  {
    v219.i64[0] = *(_QWORD *)v19;
    v219.i32[2] = *(_DWORD *)(v19 + 8);
    v222 = (int8x16_t)vmlsq_lane_f32(v219, v221, v15, 0);
    v137.i64[0] = vextq_s8(v222, v222, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v222.i8, *(float32x2_t *)v222.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v222.i8, 1), *(float32x2_t *)v222.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v223 = v12[5166] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v223;
      if (v217)
        return 0;
    }
  }
  v224 = a6.i32[1] + 5;
  v225 = (char)v12[5206];
  v226 = a6;
  v226.i32[1] = a6.i32[1] + 5;
  *(float32x2_t *)v226.f32 = vcvt_f32_s32(*(int32x2_t *)v226.f32);
  v226.f32[2] = (float)v11;
  v227.i64[0] = 0x3F0000003F000000;
  v227.i64[1] = 0x3F0000003F000000;
  if (!v12[5206])
  {
    v137.i8[0] = v12[5203];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5204];
    v228 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v228.i32 = (float)v228.i32[0];
    v137.i32[1] = v228.i32[0];
    v228.i8[0] = v12[5205];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v228));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v226 = vaddq_f32(v226, v227);
    v227 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v229 = vaddq_f32(v226, v227);
  if (v225 <= 0)
  {
    v227.i64[0] = *(_QWORD *)v19;
    v227.i32[2] = *(_DWORD *)(v19 + 8);
    v230 = (int8x16_t)vmlsq_lane_f32(v227, v229, v15, 0);
    v137.i64[0] = vextq_s8(v230, v230, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v230.i8, *(float32x2_t *)v230.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v230.i8, 1), *(float32x2_t *)v230.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v231 = v12[5206] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v231;
      if (v225)
        return 0;
    }
  }
  v232 = (char)v12[5246];
  v233 = a6;
  v233.i32[1] = a6.i32[1] + 5;
  *(float32x2_t *)v233.f32 = vcvt_f32_s32(*(int32x2_t *)v233.f32);
  v233.f32[2] = (float)v216;
  v234.i64[0] = 0x3F0000003F000000;
  v234.i64[1] = 0x3F0000003F000000;
  if (!v12[5246])
  {
    v137.i8[0] = v12[5243];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5244];
    v235 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v235.i32 = (float)v235.i32[0];
    v137.i32[1] = v235.i32[0];
    v235.i8[0] = v12[5245];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v235));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v233 = vaddq_f32(v233, v234);
    v234 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v236 = vaddq_f32(v233, v234);
  if (v232 <= 0)
  {
    v234.i64[0] = *(_QWORD *)v19;
    v234.i32[2] = *(_DWORD *)(v19 + 8);
    v237 = (int8x16_t)vmlsq_lane_f32(v234, v236, v15, 0);
    v137.i64[0] = vextq_s8(v237, v237, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v237.i8, *(float32x2_t *)v237.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v237.i8, 1), *(float32x2_t *)v237.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v238 = v12[5246] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v238;
      if (v232)
        return 0;
    }
  }
  v239 = a6.i32[0] + 1;
  v240 = (char)v12[5286];
  *(float32x2_t *)v236.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, a6.i32[0] + 1));
  v236.f32[2] = (float)v11;
  v241.i64[0] = 0x3F0000003F000000;
  v241.i64[1] = 0x3F0000003F000000;
  if (!v12[5286])
  {
    v137.i8[0] = v12[5283];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5284];
    v242 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v242.i32 = (float)v242.i32[0];
    v137.i32[1] = v242.i32[0];
    v242.i8[0] = v12[5285];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v242));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v236 = vaddq_f32(v236, v241);
    v241 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v243 = vaddq_f32(v236, v241);
  if (v240 <= 0)
  {
    v241.i64[0] = *(_QWORD *)v19;
    v241.i32[2] = *(_DWORD *)(v19 + 8);
    v244 = (int8x16_t)vmlsq_lane_f32(v241, v243, v15, 0);
    v137.i64[0] = vextq_s8(v244, v244, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v244.i8, *(float32x2_t *)v244.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v244.i8, 1), *(float32x2_t *)v244.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v245 = v12[5286] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v245;
      if (v240)
        return 0;
    }
  }
  v246 = (char)v12[5326];
  *(float32x2_t *)v243.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v239));
  v243.f32[2] = (float)v216;
  v247.i64[0] = 0x3F0000003F000000;
  v247.i64[1] = 0x3F0000003F000000;
  if (!v12[5326])
  {
    v137.i8[0] = v12[5323];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5324];
    v248 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v248.i32 = (float)v248.i32[0];
    v137.i32[1] = v248.i32[0];
    v248.i8[0] = v12[5325];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v248));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v243 = vaddq_f32(v243, v247);
    v247 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v249 = vaddq_f32(v243, v247);
  if (v246 <= 0)
  {
    v247.i64[0] = *(_QWORD *)v19;
    v247.i32[2] = *(_DWORD *)(v19 + 8);
    v250 = (int8x16_t)vmlsq_lane_f32(v247, v249, v15, 0);
    v137.i64[0] = vextq_s8(v250, v250, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v250.i8, *(float32x2_t *)v250.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v250.i8, 1), *(float32x2_t *)v250.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v251 = v12[5326] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v251;
      if (v246)
        return 0;
    }
  }
  v252 = (char)v12[5366];
  *(float32x2_t *)v249.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v239));
  v249.f32[2] = (float)v11;
  v253.i64[0] = 0x3F0000003F000000;
  v253.i64[1] = 0x3F0000003F000000;
  if (!v12[5366])
  {
    v137.i8[0] = v12[5363];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5364];
    v254 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v254.i32 = (float)v254.i32[0];
    v137.i32[1] = v254.i32[0];
    v254.i8[0] = v12[5365];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v254));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v249 = vaddq_f32(v249, v253);
    v253 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v255 = vaddq_f32(v249, v253);
  if (v252 <= 0)
  {
    v253.i64[0] = *(_QWORD *)v19;
    v253.i32[2] = *(_DWORD *)(v19 + 8);
    v256 = (int8x16_t)vmlsq_lane_f32(v253, v255, v15, 0);
    v137.i64[0] = vextq_s8(v256, v256, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v256.i8, *(float32x2_t *)v256.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v256.i8, 1), *(float32x2_t *)v256.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v257 = v12[5366] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v257;
      if (v252)
        return 0;
    }
  }
  v258 = (char)v12[5406];
  *(float32x2_t *)v255.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v239));
  v255.f32[2] = (float)v216;
  v259.i64[0] = 0x3F0000003F000000;
  v259.i64[1] = 0x3F0000003F000000;
  if (!v12[5406])
  {
    v137.i8[0] = v12[5403];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5404];
    v260 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v260.i32 = (float)v260.i32[0];
    v137.i32[1] = v260.i32[0];
    v260.i8[0] = v12[5405];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v260));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v255 = vaddq_f32(v255, v259);
    v259 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v261 = vaddq_f32(v255, v259);
  if (v258 <= 0)
  {
    v259.i64[0] = *(_QWORD *)v19;
    v259.i32[2] = *(_DWORD *)(v19 + 8);
    v262 = (int8x16_t)vmlsq_lane_f32(v259, v261, v15, 0);
    v137.i64[0] = vextq_s8(v262, v262, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v262.i8, *(float32x2_t *)v262.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v262.i8, 1), *(float32x2_t *)v262.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v263 = v12[5406] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v263;
      if (v258)
        return 0;
    }
  }
  v264 = v11 + 2;
  v265 = (char)v12[5446];
  v266 = a6;
  v266.i32[1] = a6.i32[1] + 4;
  *(float32x2_t *)v266.f32 = vcvt_f32_s32(*(int32x2_t *)v266.f32);
  v266.f32[2] = (float)(v11 + 2);
  v267.i64[0] = 0x3F0000003F000000;
  v267.i64[1] = 0x3F0000003F000000;
  if (!v12[5446])
  {
    v137.i8[0] = v12[5443];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5444];
    v268 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v268.i32 = (float)v268.i32[0];
    v137.i32[1] = v268.i32[0];
    v268.i8[0] = v12[5445];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v268));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v266 = vaddq_f32(v266, v267);
    v267 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v269 = vaddq_f32(v266, v267);
  if (v265 <= 0)
  {
    v267.i64[0] = *(_QWORD *)v19;
    v267.i32[2] = *(_DWORD *)(v19 + 8);
    v270 = (int8x16_t)vmlsq_lane_f32(v267, v269, v15, 0);
    v137.i64[0] = vextq_s8(v270, v270, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v270.i8, *(float32x2_t *)v270.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v270.i8, 1), *(float32x2_t *)v270.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v271 = v12[5446] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v271;
      if (v265)
        return 0;
    }
  }
  v272 = v11 + 3;
  v273 = (char)v12[5486];
  v274 = a6;
  v274.i32[1] = a6.i32[1] + 4;
  *(float32x2_t *)v274.f32 = vcvt_f32_s32(*(int32x2_t *)v274.f32);
  v274.f32[2] = (float)(v11 + 3);
  v275.i64[0] = 0x3F0000003F000000;
  v275.i64[1] = 0x3F0000003F000000;
  if (!v12[5486])
  {
    v137.i8[0] = v12[5483];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5484];
    v276 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v276.i32 = (float)v276.i32[0];
    v137.i32[1] = v276.i32[0];
    v276.i8[0] = v12[5485];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v276));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v274 = vaddq_f32(v274, v275);
    v275 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v277 = vaddq_f32(v274, v275);
  if (v273 <= 0)
  {
    v275.i64[0] = *(_QWORD *)v19;
    v275.i32[2] = *(_DWORD *)(v19 + 8);
    v278 = (int8x16_t)vmlsq_lane_f32(v275, v277, v15, 0);
    v137.i64[0] = vextq_s8(v278, v278, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v278.i8, *(float32x2_t *)v278.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v278.i8, 1), *(float32x2_t *)v278.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v279 = v12[5486] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v279;
      if (v273)
        return 0;
    }
  }
  v280 = (char)v12[5526];
  v281 = a6;
  v281.i32[1] = a6.i32[1] + 5;
  *(float32x2_t *)v281.f32 = vcvt_f32_s32(*(int32x2_t *)v281.f32);
  v281.f32[2] = (float)v264;
  v282.i64[0] = 0x3F0000003F000000;
  v282.i64[1] = 0x3F0000003F000000;
  if (!v12[5526])
  {
    v137.i8[0] = v12[5523];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5524];
    v283 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v283.i32 = (float)v283.i32[0];
    v137.i32[1] = v283.i32[0];
    v283.i8[0] = v12[5525];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v283));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v281 = vaddq_f32(v281, v282);
    v282 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v284 = vaddq_f32(v281, v282);
  if (v280 <= 0)
  {
    v282.i64[0] = *(_QWORD *)v19;
    v282.i32[2] = *(_DWORD *)(v19 + 8);
    v285 = (int8x16_t)vmlsq_lane_f32(v282, v284, v15, 0);
    v137.i64[0] = vextq_s8(v285, v285, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v285.i8, *(float32x2_t *)v285.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v285.i8, 1), *(float32x2_t *)v285.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v286 = v12[5526] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v286;
      if (v280)
        return 0;
    }
  }
  v287 = (char)v12[5566];
  v288 = a6;
  v288.i32[1] = a6.i32[1] + 5;
  *(float32x2_t *)v288.f32 = vcvt_f32_s32(*(int32x2_t *)v288.f32);
  v288.f32[2] = (float)v272;
  v289.i64[0] = 0x3F0000003F000000;
  v289.i64[1] = 0x3F0000003F000000;
  if (!v12[5566])
  {
    v137.i8[0] = v12[5563];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5564];
    v290 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v290.i32 = (float)v290.i32[0];
    v137.i32[1] = v290.i32[0];
    v290.i8[0] = v12[5565];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v290));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v288 = vaddq_f32(v288, v289);
    v289 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v291 = vaddq_f32(v288, v289);
  if (v287 <= 0)
  {
    v289.i64[0] = *(_QWORD *)v19;
    v289.i32[2] = *(_DWORD *)(v19 + 8);
    v292 = (int8x16_t)vmlsq_lane_f32(v289, v291, v15, 0);
    v137.i64[0] = vextq_s8(v292, v292, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v292.i8, *(float32x2_t *)v292.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v292.i8, 1), *(float32x2_t *)v292.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v293 = v12[5566] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v293;
      if (v287)
        return 0;
    }
  }
  v294 = (char)v12[5606];
  *(float32x2_t *)v291.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v239));
  v291.f32[2] = (float)v264;
  v295.i64[0] = 0x3F0000003F000000;
  v295.i64[1] = 0x3F0000003F000000;
  if (!v12[5606])
  {
    v137.i8[0] = v12[5603];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5604];
    v296 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v296.i32 = (float)v296.i32[0];
    v137.i32[1] = v296.i32[0];
    v296.i8[0] = v12[5605];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v296));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v291 = vaddq_f32(v291, v295);
    v295 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v297 = vaddq_f32(v291, v295);
  if (v294 <= 0)
  {
    v295.i64[0] = *(_QWORD *)v19;
    v295.i32[2] = *(_DWORD *)(v19 + 8);
    v298 = (int8x16_t)vmlsq_lane_f32(v295, v297, v15, 0);
    v137.i64[0] = vextq_s8(v298, v298, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v298.i8, *(float32x2_t *)v298.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v298.i8, 1), *(float32x2_t *)v298.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v299 = v12[5606] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v299;
      if (v294)
        return 0;
    }
  }
  v300 = (char)v12[5646];
  *(float32x2_t *)v297.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v239));
  v297.f32[2] = (float)v272;
  v301.i64[0] = 0x3F0000003F000000;
  v301.i64[1] = 0x3F0000003F000000;
  if (!v12[5646])
  {
    v137.i8[0] = v12[5643];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5644];
    v302 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v302.i32 = (float)v302.i32[0];
    v137.i32[1] = v302.i32[0];
    v302.i8[0] = v12[5645];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v302));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v297 = vaddq_f32(v297, v301);
    v301 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v303 = vaddq_f32(v297, v301);
  if (v300 <= 0)
  {
    v301.i64[0] = *(_QWORD *)v19;
    v301.i32[2] = *(_DWORD *)(v19 + 8);
    v304 = (int8x16_t)vmlsq_lane_f32(v301, v303, v15, 0);
    v137.i64[0] = vextq_s8(v304, v304, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v304.i8, *(float32x2_t *)v304.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v304.i8, 1), *(float32x2_t *)v304.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v305 = v12[5646] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v305;
      if (v300)
        return 0;
    }
  }
  v306 = (char)v12[5686];
  *(float32x2_t *)v303.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v239));
  v303.f32[2] = (float)v264;
  v307.i64[0] = 0x3F0000003F000000;
  v307.i64[1] = 0x3F0000003F000000;
  if (!v12[5686])
  {
    v137.i8[0] = v12[5683];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5684];
    v308 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v308.i32 = (float)v308.i32[0];
    v137.i32[1] = v308.i32[0];
    v308.i8[0] = v12[5685];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v308));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v303 = vaddq_f32(v303, v307);
    v307 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v309 = vaddq_f32(v303, v307);
  if (v306 <= 0)
  {
    v307.i64[0] = *(_QWORD *)v19;
    v307.i32[2] = *(_DWORD *)(v19 + 8);
    v310 = (int8x16_t)vmlsq_lane_f32(v307, v309, v15, 0);
    v137.i64[0] = vextq_s8(v310, v310, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v310.i8, *(float32x2_t *)v310.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v310.i8, 1), *(float32x2_t *)v310.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v311 = v12[5686] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v311;
      if (v306)
        return 0;
    }
  }
  v312 = (char)v12[5726];
  *(float32x2_t *)v309.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v239));
  v309.f32[2] = (float)v272;
  v313.i64[0] = 0x3F0000003F000000;
  v313.i64[1] = 0x3F0000003F000000;
  if (!v12[5726])
  {
    v137.i8[0] = v12[5723];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5724];
    v314 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v314.i32 = (float)v314.i32[0];
    v137.i32[1] = v314.i32[0];
    v314.i8[0] = v12[5725];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v314));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v309 = vaddq_f32(v309, v313);
    v313 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v315 = vaddq_f32(v309, v313);
  if (v312 <= 0)
  {
    v313.i64[0] = *(_QWORD *)v19;
    v313.i32[2] = *(_DWORD *)(v19 + 8);
    v316 = (int8x16_t)vmlsq_lane_f32(v313, v315, v15, 0);
    v137.i64[0] = vextq_s8(v316, v316, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v316.i8, *(float32x2_t *)v316.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v316.i8, 1), *(float32x2_t *)v316.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v317 = v12[5726] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v317;
      if (v312)
        return 0;
    }
  }
  v318 = a6.i32[1] + 6;
  v319 = (char)v12[5766];
  v320 = a6;
  v320.i32[1] = a6.i32[1] + 6;
  *(float32x2_t *)v320.f32 = vcvt_f32_s32(*(int32x2_t *)v320.f32);
  v320.f32[2] = (float)v11;
  v321.i64[0] = 0x3F0000003F000000;
  v321.i64[1] = 0x3F0000003F000000;
  if (!v12[5766])
  {
    v137.i8[0] = v12[5763];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5764];
    v322 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v322.i32 = (float)v322.i32[0];
    v137.i32[1] = v322.i32[0];
    v322.i8[0] = v12[5765];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v322));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v320 = vaddq_f32(v320, v321);
    v321 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v323 = vaddq_f32(v320, v321);
  if (v319 <= 0)
  {
    v321.i64[0] = *(_QWORD *)v19;
    v321.i32[2] = *(_DWORD *)(v19 + 8);
    v324 = (int8x16_t)vmlsq_lane_f32(v321, v323, v15, 0);
    v137.i64[0] = vextq_s8(v324, v324, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v324.i8, *(float32x2_t *)v324.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v324.i8, 1), *(float32x2_t *)v324.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v325 = v12[5766] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v325;
      if (v319)
        return 0;
    }
  }
  v326 = (char)v12[5806];
  v327 = a6;
  v327.i32[1] = a6.i32[1] + 6;
  *(float32x2_t *)v327.f32 = vcvt_f32_s32(*(int32x2_t *)v327.f32);
  v327.f32[2] = (float)v216;
  v328.i64[0] = 0x3F0000003F000000;
  v328.i64[1] = 0x3F0000003F000000;
  if (!v12[5806])
  {
    v137.i8[0] = v12[5803];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5804];
    v329 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v329.i32 = (float)v329.i32[0];
    v137.i32[1] = v329.i32[0];
    v329.i8[0] = v12[5805];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v329));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v327 = vaddq_f32(v327, v328);
    v328 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v330 = vaddq_f32(v327, v328);
  if (v326 <= 0)
  {
    v328.i64[0] = *(_QWORD *)v19;
    v328.i32[2] = *(_DWORD *)(v19 + 8);
    v331 = (int8x16_t)vmlsq_lane_f32(v328, v330, v15, 0);
    v137.i64[0] = vextq_s8(v331, v331, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v331.i8, *(float32x2_t *)v331.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v331.i8, 1), *(float32x2_t *)v331.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v332 = v12[5806] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v332;
      if (v326)
        return 0;
    }
  }
  v333 = a6.i32[1] + 7;
  v334 = (char)v12[5846];
  v335 = a6;
  v335.i32[1] = a6.i32[1] + 7;
  *(float32x2_t *)v335.f32 = vcvt_f32_s32(*(int32x2_t *)v335.f32);
  v335.f32[2] = (float)v11;
  v336.i64[0] = 0x3F0000003F000000;
  v336.i64[1] = 0x3F0000003F000000;
  if (!v12[5846])
  {
    v137.i8[0] = v12[5843];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5844];
    v337 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v337.i32 = (float)v337.i32[0];
    v137.i32[1] = v337.i32[0];
    v337.i8[0] = v12[5845];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v337));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v335 = vaddq_f32(v335, v336);
    v336 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v338 = vaddq_f32(v335, v336);
  if (v334 <= 0)
  {
    v336.i64[0] = *(_QWORD *)v19;
    v336.i32[2] = *(_DWORD *)(v19 + 8);
    v339 = (int8x16_t)vmlsq_lane_f32(v336, v338, v15, 0);
    v137.i64[0] = vextq_s8(v339, v339, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v339.i8, *(float32x2_t *)v339.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v339.i8, 1), *(float32x2_t *)v339.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v340 = v12[5846] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v340;
      if (v334)
        return 0;
    }
  }
  v341 = (char)v12[5886];
  v342 = a6;
  v342.i32[1] = a6.i32[1] + 7;
  *(float32x2_t *)v342.f32 = vcvt_f32_s32(*(int32x2_t *)v342.f32);
  v342.f32[2] = (float)v216;
  v343.i64[0] = 0x3F0000003F000000;
  v343.i64[1] = 0x3F0000003F000000;
  if (!v12[5886])
  {
    v137.i8[0] = v12[5883];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5884];
    v344 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v344.i32 = (float)v344.i32[0];
    v137.i32[1] = v344.i32[0];
    v344.i8[0] = v12[5885];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v344));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v342 = vaddq_f32(v342, v343);
    v343 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v345 = vaddq_f32(v342, v343);
  if (v341 <= 0)
  {
    v343.i64[0] = *(_QWORD *)v19;
    v343.i32[2] = *(_DWORD *)(v19 + 8);
    v346 = (int8x16_t)vmlsq_lane_f32(v343, v345, v15, 0);
    v137.i64[0] = vextq_s8(v346, v346, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v346.i8, *(float32x2_t *)v346.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v346.i8, 1), *(float32x2_t *)v346.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v347 = v12[5886] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v347;
      if (v341)
        return 0;
    }
  }
  v348 = (char)v12[5926];
  *(float32x2_t *)v345.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v318, v239));
  v345.f32[2] = (float)v11;
  v349.i64[0] = 0x3F0000003F000000;
  v349.i64[1] = 0x3F0000003F000000;
  if (!v12[5926])
  {
    v137.i8[0] = v12[5923];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5924];
    v350 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v350.i32 = (float)v350.i32[0];
    v137.i32[1] = v350.i32[0];
    v350.i8[0] = v12[5925];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v350));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v345 = vaddq_f32(v345, v349);
    v349 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v351 = vaddq_f32(v345, v349);
  if (v348 <= 0)
  {
    v349.i64[0] = *(_QWORD *)v19;
    v349.i32[2] = *(_DWORD *)(v19 + 8);
    v352 = (int8x16_t)vmlsq_lane_f32(v349, v351, v15, 0);
    v137.i64[0] = vextq_s8(v352, v352, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v352.i8, *(float32x2_t *)v352.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v352.i8, 1), *(float32x2_t *)v352.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v353 = v12[5926] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v353;
      if (v348)
        return 0;
    }
  }
  v354 = (char)v12[5966];
  *(float32x2_t *)v351.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v318, v239));
  v351.f32[2] = (float)v216;
  v355.i64[0] = 0x3F0000003F000000;
  v355.i64[1] = 0x3F0000003F000000;
  if (!v12[5966])
  {
    v137.i8[0] = v12[5963];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[5964];
    v356 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v356.i32 = (float)v356.i32[0];
    v137.i32[1] = v356.i32[0];
    v356.i8[0] = v12[5965];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v356));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v351 = vaddq_f32(v351, v355);
    v355 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v357 = vaddq_f32(v351, v355);
  if (v354 <= 0)
  {
    v355.i64[0] = *(_QWORD *)v19;
    v355.i32[2] = *(_DWORD *)(v19 + 8);
    v358 = (int8x16_t)vmlsq_lane_f32(v355, v357, v15, 0);
    v137.i64[0] = vextq_s8(v358, v358, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v358.i8, *(float32x2_t *)v358.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v358.i8, 1), *(float32x2_t *)v358.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v359 = v12[5966] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v359;
      if (v354)
        return 0;
    }
  }
  v360 = (char)v12[6006];
  *(float32x2_t *)v357.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v239));
  v357.f32[2] = (float)v11;
  v361.i64[0] = 0x3F0000003F000000;
  v361.i64[1] = 0x3F0000003F000000;
  if (!v12[6006])
  {
    v137.i8[0] = v12[6003];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[6004];
    v362 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v362.i32 = (float)v362.i32[0];
    v137.i32[1] = v362.i32[0];
    v362.i8[0] = v12[6005];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v362));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v357 = vaddq_f32(v357, v361);
    v361 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v363 = vaddq_f32(v357, v361);
  if (v360 <= 0)
  {
    v361.i64[0] = *(_QWORD *)v19;
    v361.i32[2] = *(_DWORD *)(v19 + 8);
    v364 = (int8x16_t)vmlsq_lane_f32(v361, v363, v15, 0);
    v137.i64[0] = vextq_s8(v364, v364, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v364.i8, *(float32x2_t *)v364.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v364.i8, 1), *(float32x2_t *)v364.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v365 = v12[6006] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v365;
      if (v360)
        return 0;
    }
  }
  v366 = (char)v12[6046];
  *(float32x2_t *)v363.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v239));
  v363.f32[2] = (float)v216;
  v367.i64[0] = 0x3F0000003F000000;
  v367.i64[1] = 0x3F0000003F000000;
  if (!v12[6046])
  {
    v137.i8[0] = v12[6043];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[6044];
    v368 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v368.i32 = (float)v368.i32[0];
    v137.i32[1] = v368.i32[0];
    v368.i8[0] = v12[6045];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v368));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v363 = vaddq_f32(v363, v367);
    v367 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v369 = vaddq_f32(v363, v367);
  if (v366 <= 0)
  {
    v367.i64[0] = *(_QWORD *)v19;
    v367.i32[2] = *(_DWORD *)(v19 + 8);
    v370 = (int8x16_t)vmlsq_lane_f32(v367, v369, v15, 0);
    v137.i64[0] = vextq_s8(v370, v370, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v370.i8, *(float32x2_t *)v370.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v370.i8, 1), *(float32x2_t *)v370.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v371 = v12[6046] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v371;
      if (v366)
        return 0;
    }
  }
  v372 = (char)v12[6086];
  v373 = a6;
  v373.i32[1] = a6.i32[1] + 6;
  *(float32x2_t *)v373.f32 = vcvt_f32_s32(*(int32x2_t *)v373.f32);
  v373.f32[2] = (float)v264;
  v374.i64[0] = 0x3F0000003F000000;
  v374.i64[1] = 0x3F0000003F000000;
  if (!v12[6086])
  {
    v137.i8[0] = v12[6083];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[6084];
    v375 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v375.i32 = (float)v375.i32[0];
    v137.i32[1] = v375.i32[0];
    v375.i8[0] = v12[6085];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v375));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v373 = vaddq_f32(v373, v374);
    v374 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v376 = vaddq_f32(v373, v374);
  if (v372 <= 0)
  {
    v374.i64[0] = *(_QWORD *)v19;
    v374.i32[2] = *(_DWORD *)(v19 + 8);
    v377 = (int8x16_t)vmlsq_lane_f32(v374, v376, v15, 0);
    v137.i64[0] = vextq_s8(v377, v377, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v377.i8, *(float32x2_t *)v377.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v377.i8, 1), *(float32x2_t *)v377.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v378 = v12[6086] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v378;
      if (v372)
        return 0;
    }
  }
  v379 = (char)v12[6126];
  v380 = a6;
  v380.i32[1] = a6.i32[1] + 6;
  *(float32x2_t *)v380.f32 = vcvt_f32_s32(*(int32x2_t *)v380.f32);
  v380.f32[2] = (float)v272;
  v381.i64[0] = 0x3F0000003F000000;
  v381.i64[1] = 0x3F0000003F000000;
  if (!v12[6126])
  {
    v137.i8[0] = v12[6123];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[6124];
    v382 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v382.i32 = (float)v382.i32[0];
    v137.i32[1] = v382.i32[0];
    v382.i8[0] = v12[6125];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v382));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v380 = vaddq_f32(v380, v381);
    v381 = vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v383 = vaddq_f32(v380, v381);
  if (v379 <= 0)
  {
    v381.i64[0] = *(_QWORD *)v19;
    v381.i32[2] = *(_DWORD *)(v19 + 8);
    v384 = (int8x16_t)vmlsq_lane_f32(v381, v383, v15, 0);
    v137.i64[0] = vextq_s8(v384, v384, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v384.i8, *(float32x2_t *)v384.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v384.i8, 1), *(float32x2_t *)v384.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v385 = v12[6126] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v385;
      if (v379)
        return 0;
    }
  }
  v386 = (char)v12[6166];
  v387 = a6;
  v387.i32[1] = a6.i32[1] + 7;
  *(float32x2_t *)v387.f32 = vcvt_f32_s32(*(int32x2_t *)v387.f32);
  v387.f32[2] = (float)v264;
  v388.i64[0] = 0x3F0000003F000000;
  v388.i64[1] = 0x3F0000003F000000;
  if (!v12[6166])
  {
    v137.i8[0] = v12[6163];
    v137 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8));
    *(float *)v137.i32 = (float)v137.i32[0];
    a10.i8[0] = v12[6164];
    v389 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
    *(float *)v389.i32 = (float)v389.i32[0];
    v137.i32[1] = v389.i32[0];
    v389.i8[0] = v12[6165];
    a10 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v389));
    *(float *)a10.i32 = (float)a10.i32[0];
    v137.i32[2] = a10.i32[0];
    v387 = vaddq_f32(v387, (float32x4_t)v388);
    v388 = (int8x16_t)vmulq_f32((float32x4_t)v137, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v390 = vaddq_f32(v387, (float32x4_t)v388);
  if (v386 <= 0)
  {
    v388.i64[0] = *(_QWORD *)v19;
    v388.i32[2] = *(_DWORD *)(v19 + 8);
    v388 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v388, v390, v15, 0);
    v137.i64[0] = vextq_s8(v388, v388, 8uLL).u64[0];
    *(float32x2_t *)a10.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v388.i8, 1), *(float32x2_t *)v388.i8, 1), *(float32x2_t *)v137.i8, *(float32x2_t *)v137.i8);
    if (*(float *)a10.i32 <= v16.f32[0])
    {
      v391 = v12[6166] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v391;
      if (v386)
        return 0;
    }
  }
  v392 = (char)v12[6206];
  a6.i32[1] += 7;
  *(float32x2_t *)a6.f32 = vcvt_f32_s32(*(int32x2_t *)a6.f32);
  a6.f32[2] = (float)v272;
  v393.i64[0] = 0x3F0000003F000000;
  v393.i64[1] = 0x3F0000003F000000;
  if (!v12[6206])
  {
    v388.i8[0] = v12[6203];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6204];
    v394 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v394.i32 = (float)v394.i32[0];
    v388.i32[1] = v394.i32[0];
    v394.i8[0] = v12[6205];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v394)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    a6 = vaddq_f32(a6, v393);
    v393 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v395 = vaddq_f32(a6, v393);
  if (v392 <= 0)
  {
    v393.i64[0] = *(_QWORD *)v19;
    v393.i32[2] = *(_DWORD *)(v19 + 8);
    v396 = (int8x16_t)vmlsq_lane_f32(v393, v395, v15, 0);
    v388 = vextq_s8(v396, v396, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v396.i8, *(float32x2_t *)v396.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v396.i8, 1), *(float32x2_t *)v396.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v397 = v12[6206] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v397;
      if (v392)
        return 0;
    }
  }
  v398 = (char)v12[6246];
  *(float32x2_t *)v395.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v318, v239));
  v395.f32[2] = (float)v264;
  v399.i64[0] = 0x3F0000003F000000;
  v399.i64[1] = 0x3F0000003F000000;
  if (!v12[6246])
  {
    v388.i8[0] = v12[6243];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6244];
    v400 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v400.i32 = (float)v400.i32[0];
    v388.i32[1] = v400.i32[0];
    v400.i8[0] = v12[6245];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v400)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v395 = vaddq_f32(v395, v399);
    v399 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v401 = vaddq_f32(v395, v399);
  if (v398 <= 0)
  {
    v399.i64[0] = *(_QWORD *)v19;
    v399.i32[2] = *(_DWORD *)(v19 + 8);
    v402 = (int8x16_t)vmlsq_lane_f32(v399, v401, v15, 0);
    v388 = vextq_s8(v402, v402, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v402.i8, *(float32x2_t *)v402.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v402.i8, 1), *(float32x2_t *)v402.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v403 = v12[6246] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v403;
      if (v398)
        return 0;
    }
  }
  v404 = (char)v12[6286];
  *(float32x2_t *)v401.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v318, v239));
  v401.f32[2] = (float)v272;
  v405.i64[0] = 0x3F0000003F000000;
  v405.i64[1] = 0x3F0000003F000000;
  if (!v12[6286])
  {
    v388.i8[0] = v12[6283];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6284];
    v406 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v406.i32 = (float)v406.i32[0];
    v388.i32[1] = v406.i32[0];
    v406.i8[0] = v12[6285];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v406)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v401 = vaddq_f32(v401, v405);
    v405 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v407 = vaddq_f32(v401, v405);
  if (v404 <= 0)
  {
    v405.i64[0] = *(_QWORD *)v19;
    v405.i32[2] = *(_DWORD *)(v19 + 8);
    v408 = (int8x16_t)vmlsq_lane_f32(v405, v407, v15, 0);
    v388 = vextq_s8(v408, v408, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v408.i8, *(float32x2_t *)v408.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v408.i8, 1), *(float32x2_t *)v408.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v409 = v12[6286] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v409;
      if (v404)
        return 0;
    }
  }
  v410 = (char)v12[6326];
  *(float32x2_t *)v407.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v239));
  v407.f32[2] = (float)v264;
  v411.i64[0] = 0x3F0000003F000000;
  v411.i64[1] = 0x3F0000003F000000;
  if (!v12[6326])
  {
    v388.i8[0] = v12[6323];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6324];
    v412 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v412.i32 = (float)v412.i32[0];
    v388.i32[1] = v412.i32[0];
    v412.i8[0] = v12[6325];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v412)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v407 = vaddq_f32(v407, v411);
    v411 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v413 = vaddq_f32(v407, v411);
  if (v410 <= 0)
  {
    v411.i64[0] = *(_QWORD *)v19;
    v411.i32[2] = *(_DWORD *)(v19 + 8);
    v414 = (int8x16_t)vmlsq_lane_f32(v411, v413, v15, 0);
    v388 = vextq_s8(v414, v414, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v414.i8, *(float32x2_t *)v414.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v414.i8, 1), *(float32x2_t *)v414.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v415 = v12[6326] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v415;
      if (v410)
        return 0;
    }
  }
  v416 = (char)v12[6366];
  *(float32x2_t *)v413.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v239));
  v413.f32[2] = (float)v272;
  v417.i64[0] = 0x3F0000003F000000;
  v417.i64[1] = 0x3F0000003F000000;
  if (!v12[6366])
  {
    v388.i8[0] = v12[6363];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6364];
    v418 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v418.i32 = (float)v418.i32[0];
    v388.i32[1] = v418.i32[0];
    v418.i8[0] = v12[6365];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v418)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v413 = vaddq_f32(v413, v417);
    v417 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v419 = vaddq_f32(v413, v417);
  if (v416 <= 0)
  {
    v417.i64[0] = *(_QWORD *)v19;
    v417.i32[2] = *(_DWORD *)(v19 + 8);
    v420 = (int8x16_t)vmlsq_lane_f32(v417, v419, v15, 0);
    v388 = vextq_s8(v420, v420, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v420.i8, *(float32x2_t *)v420.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v420.i8, 1), *(float32x2_t *)v420.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v421 = v12[6366] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v421;
      if (v416)
        return 0;
    }
  }
  v422 = (char)v12[6406];
  *(float32x2_t *)v419.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v31));
  v419.f32[2] = (float)v11;
  v423.i64[0] = 0x3F0000003F000000;
  v423.i64[1] = 0x3F0000003F000000;
  if (!v12[6406])
  {
    v388.i8[0] = v12[6403];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6404];
    v424 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v424.i32 = (float)v424.i32[0];
    v388.i32[1] = v424.i32[0];
    v424.i8[0] = v12[6405];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v424)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v419 = vaddq_f32(v419, v423);
    v423 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v425 = vaddq_f32(v419, v423);
  if (v422 <= 0)
  {
    v423.i64[0] = *(_QWORD *)v19;
    v423.i32[2] = *(_DWORD *)(v19 + 8);
    v426 = (int8x16_t)vmlsq_lane_f32(v423, v425, v15, 0);
    v388 = vextq_s8(v426, v426, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v426.i8, *(float32x2_t *)v426.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v426.i8, 1), *(float32x2_t *)v426.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v427 = v12[6406] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v427;
      if (v422)
        return 0;
    }
  }
  v428 = (char)v12[6446];
  *(float32x2_t *)v425.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v31));
  v425.f32[2] = (float)v216;
  v429.i64[0] = 0x3F0000003F000000;
  v429.i64[1] = 0x3F0000003F000000;
  if (!v12[6446])
  {
    v388.i8[0] = v12[6443];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6444];
    v430 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v430.i32 = (float)v430.i32[0];
    v388.i32[1] = v430.i32[0];
    v430.i8[0] = v12[6445];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v430)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v425 = vaddq_f32(v425, v429);
    v429 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v431 = vaddq_f32(v425, v429);
  if (v428 <= 0)
  {
    v429.i64[0] = *(_QWORD *)v19;
    v429.i32[2] = *(_DWORD *)(v19 + 8);
    v432 = (int8x16_t)vmlsq_lane_f32(v429, v431, v15, 0);
    v388 = vextq_s8(v432, v432, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v432.i8, *(float32x2_t *)v432.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v432.i8, 1), *(float32x2_t *)v432.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v433 = v12[6446] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v433;
      if (v428)
        return 0;
    }
  }
  v434 = (char)v12[6486];
  *(float32x2_t *)v431.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v31));
  v431.f32[2] = (float)v11;
  v435.i64[0] = 0x3F0000003F000000;
  v435.i64[1] = 0x3F0000003F000000;
  if (!v12[6486])
  {
    v388.i8[0] = v12[6483];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6484];
    v436 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v436.i32 = (float)v436.i32[0];
    v388.i32[1] = v436.i32[0];
    v436.i8[0] = v12[6485];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v436)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v431 = vaddq_f32(v431, v435);
    v435 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v437 = vaddq_f32(v431, v435);
  if (v434 <= 0)
  {
    v435.i64[0] = *(_QWORD *)v19;
    v435.i32[2] = *(_DWORD *)(v19 + 8);
    v438 = (int8x16_t)vmlsq_lane_f32(v435, v437, v15, 0);
    v388 = vextq_s8(v438, v438, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v438.i8, *(float32x2_t *)v438.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v438.i8, 1), *(float32x2_t *)v438.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v439 = v12[6486] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v439;
      if (v434)
        return 0;
    }
  }
  v440 = (char)v12[6526];
  *(float32x2_t *)v437.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v31));
  v437.f32[2] = (float)v216;
  v441.i64[0] = 0x3F0000003F000000;
  v441.i64[1] = 0x3F0000003F000000;
  if (!v12[6526])
  {
    v388.i8[0] = v12[6523];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6524];
    v442 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v442.i32 = (float)v442.i32[0];
    v388.i32[1] = v442.i32[0];
    v442.i8[0] = v12[6525];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v442)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v437 = vaddq_f32(v437, v441);
    v441 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v443 = vaddq_f32(v437, v441);
  if (v440 <= 0)
  {
    v441.i64[0] = *(_QWORD *)v19;
    v441.i32[2] = *(_DWORD *)(v19 + 8);
    v444 = (int8x16_t)vmlsq_lane_f32(v441, v443, v15, 0);
    v388 = vextq_s8(v444, v444, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v444.i8, *(float32x2_t *)v444.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v444.i8, 1), *(float32x2_t *)v444.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v445 = v12[6526] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v445;
      if (v440)
        return 0;
    }
  }
  v446 = (char)v12[6566];
  v447 = a5;
  v447.i32[1] = v208;
  *(float32x2_t *)v447.f32 = vcvt_f32_s32(*(int32x2_t *)v447.f32);
  v447.f32[2] = (float)v11;
  v448.i64[0] = 0x3F0000003F000000;
  v448.i64[1] = 0x3F0000003F000000;
  if (!v12[6566])
  {
    v388.i8[0] = v12[6563];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6564];
    v449 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v449.i32 = (float)v449.i32[0];
    v388.i32[1] = v449.i32[0];
    v449.i8[0] = v12[6565];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v449)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v447 = vaddq_f32(v447, v448);
    v448 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v450 = vaddq_f32(v447, v448);
  if (v446 <= 0)
  {
    v448.i64[0] = *(_QWORD *)v19;
    v448.i32[2] = *(_DWORD *)(v19 + 8);
    v451 = (int8x16_t)vmlsq_lane_f32(v448, v450, v15, 0);
    v388 = vextq_s8(v451, v451, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v451.i8, *(float32x2_t *)v451.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v451.i8, 1), *(float32x2_t *)v451.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v452 = v12[6566] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v452;
      if (v446)
        return 0;
    }
  }
  v453 = (char)v12[6606];
  v454 = a5;
  v454.i32[1] = v208;
  *(float32x2_t *)v454.f32 = vcvt_f32_s32(*(int32x2_t *)v454.f32);
  v454.f32[2] = (float)v216;
  v455.i64[0] = 0x3F0000003F000000;
  v455.i64[1] = 0x3F0000003F000000;
  if (!v12[6606])
  {
    v388.i8[0] = v12[6603];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6604];
    v456 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v456.i32 = (float)v456.i32[0];
    v388.i32[1] = v456.i32[0];
    v456.i8[0] = v12[6605];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v456)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v454 = vaddq_f32(v454, v455);
    v455 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v457 = vaddq_f32(v454, v455);
  if (v453 <= 0)
  {
    v455.i64[0] = *(_QWORD *)v19;
    v455.i32[2] = *(_DWORD *)(v19 + 8);
    v458 = (int8x16_t)vmlsq_lane_f32(v455, v457, v15, 0);
    v388 = vextq_s8(v458, v458, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v458.i8, *(float32x2_t *)v458.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v458.i8, 1), *(float32x2_t *)v458.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v459 = v12[6606] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v459;
      if (v453)
        return 0;
    }
  }
  v460 = (char)v12[6646];
  v461 = a5;
  v461.i32[1] = v224;
  *(float32x2_t *)v461.f32 = vcvt_f32_s32(*(int32x2_t *)v461.f32);
  v461.f32[2] = (float)v11;
  v462.i64[0] = 0x3F0000003F000000;
  v462.i64[1] = 0x3F0000003F000000;
  if (!v12[6646])
  {
    v388.i8[0] = v12[6643];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6644];
    v463 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v463.i32 = (float)v463.i32[0];
    v388.i32[1] = v463.i32[0];
    v463.i8[0] = v12[6645];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v463)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v461 = vaddq_f32(v461, v462);
    v462 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v464 = vaddq_f32(v461, v462);
  if (v460 <= 0)
  {
    v462.i64[0] = *(_QWORD *)v19;
    v462.i32[2] = *(_DWORD *)(v19 + 8);
    v465 = (int8x16_t)vmlsq_lane_f32(v462, v464, v15, 0);
    v388 = vextq_s8(v465, v465, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v465.i8, *(float32x2_t *)v465.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v465.i8, 1), *(float32x2_t *)v465.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v466 = v12[6646] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v466;
      if (v460)
        return 0;
    }
  }
  v467 = (char)v12[6686];
  v468 = a5;
  v468.i32[1] = v224;
  *(float32x2_t *)v468.f32 = vcvt_f32_s32(*(int32x2_t *)v468.f32);
  v468.f32[2] = (float)v216;
  v469.i64[0] = 0x3F0000003F000000;
  v469.i64[1] = 0x3F0000003F000000;
  if (!v12[6686])
  {
    v388.i8[0] = v12[6683];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6684];
    v470 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v470.i32 = (float)v470.i32[0];
    v388.i32[1] = v470.i32[0];
    v470.i8[0] = v12[6685];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v470)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v468 = vaddq_f32(v468, v469);
    v469 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v471 = vaddq_f32(v468, v469);
  if (v467 <= 0)
  {
    v469.i64[0] = *(_QWORD *)v19;
    v469.i32[2] = *(_DWORD *)(v19 + 8);
    v472 = (int8x16_t)vmlsq_lane_f32(v469, v471, v15, 0);
    v388 = vextq_s8(v472, v472, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v472.i8, *(float32x2_t *)v472.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v472.i8, 1), *(float32x2_t *)v472.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v473 = v12[6686] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v473;
      if (v467)
        return 0;
    }
  }
  v474 = (char)v12[6726];
  *(float32x2_t *)v471.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v31));
  v471.f32[2] = (float)v264;
  v475.i64[0] = 0x3F0000003F000000;
  v475.i64[1] = 0x3F0000003F000000;
  if (!v12[6726])
  {
    v388.i8[0] = v12[6723];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6724];
    v476 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v476.i32 = (float)v476.i32[0];
    v388.i32[1] = v476.i32[0];
    v476.i8[0] = v12[6725];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v476)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v471 = vaddq_f32(v471, v475);
    v475 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v477 = vaddq_f32(v471, v475);
  if (v474 <= 0)
  {
    v475.i64[0] = *(_QWORD *)v19;
    v475.i32[2] = *(_DWORD *)(v19 + 8);
    v478 = (int8x16_t)vmlsq_lane_f32(v475, v477, v15, 0);
    v388 = vextq_s8(v478, v478, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v478.i8, *(float32x2_t *)v478.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v478.i8, 1), *(float32x2_t *)v478.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v479 = v12[6726] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v479;
      if (v474)
        return 0;
    }
  }
  v480 = (char)v12[6766];
  *(float32x2_t *)v477.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v208, v31));
  v477.f32[2] = (float)v272;
  v481.i64[0] = 0x3F0000003F000000;
  v481.i64[1] = 0x3F0000003F000000;
  if (!v12[6766])
  {
    v388.i8[0] = v12[6763];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6764];
    v482 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v482.i32 = (float)v482.i32[0];
    v388.i32[1] = v482.i32[0];
    v482.i8[0] = v12[6765];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v482)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v477 = vaddq_f32(v477, v481);
    v481 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v483 = vaddq_f32(v477, v481);
  if (v480 <= 0)
  {
    v481.i64[0] = *(_QWORD *)v19;
    v481.i32[2] = *(_DWORD *)(v19 + 8);
    v484 = (int8x16_t)vmlsq_lane_f32(v481, v483, v15, 0);
    v388 = vextq_s8(v484, v484, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v484.i8, *(float32x2_t *)v484.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v484.i8, 1), *(float32x2_t *)v484.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v485 = v12[6766] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v485;
      if (v480)
        return 0;
    }
  }
  v486 = (char)v12[6806];
  *(float32x2_t *)v483.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v31));
  v483.f32[2] = (float)v264;
  v487.i64[0] = 0x3F0000003F000000;
  v487.i64[1] = 0x3F0000003F000000;
  if (!v12[6806])
  {
    v388.i8[0] = v12[6803];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6804];
    v488 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v488.i32 = (float)v488.i32[0];
    v388.i32[1] = v488.i32[0];
    v488.i8[0] = v12[6805];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v488)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v483 = vaddq_f32(v483, v487);
    v487 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v489 = vaddq_f32(v483, v487);
  if (v486 <= 0)
  {
    v487.i64[0] = *(_QWORD *)v19;
    v487.i32[2] = *(_DWORD *)(v19 + 8);
    v490 = (int8x16_t)vmlsq_lane_f32(v487, v489, v15, 0);
    v388 = vextq_s8(v490, v490, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v490.i8, *(float32x2_t *)v490.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v490.i8, 1), *(float32x2_t *)v490.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v491 = v12[6806] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v491;
      if (v486)
        return 0;
    }
  }
  v492 = (char)v12[6846];
  *(float32x2_t *)v489.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v224, v31));
  v489.f32[2] = (float)v272;
  v493.i64[0] = 0x3F0000003F000000;
  v493.i64[1] = 0x3F0000003F000000;
  if (!v12[6846])
  {
    v388.i8[0] = v12[6843];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6844];
    v494 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v494.i32 = (float)v494.i32[0];
    v388.i32[1] = v494.i32[0];
    v494.i8[0] = v12[6845];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v494)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v489 = vaddq_f32(v489, v493);
    v493 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v495 = vaddq_f32(v489, v493);
  if (v492 <= 0)
  {
    v493.i64[0] = *(_QWORD *)v19;
    v493.i32[2] = *(_DWORD *)(v19 + 8);
    v496 = (int8x16_t)vmlsq_lane_f32(v493, v495, v15, 0);
    v388 = vextq_s8(v496, v496, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v496.i8, *(float32x2_t *)v496.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v496.i8, 1), *(float32x2_t *)v496.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v497 = v12[6846] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v497;
      if (v492)
        return 0;
    }
  }
  v498 = (char)v12[6886];
  v499 = a5;
  v499.i32[1] = v208;
  *(float32x2_t *)v499.f32 = vcvt_f32_s32(*(int32x2_t *)v499.f32);
  v499.f32[2] = (float)v264;
  v500.i64[0] = 0x3F0000003F000000;
  v500.i64[1] = 0x3F0000003F000000;
  if (!v12[6886])
  {
    v388.i8[0] = v12[6883];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6884];
    v501 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v501.i32 = (float)v501.i32[0];
    v388.i32[1] = v501.i32[0];
    v501.i8[0] = v12[6885];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v501)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v499 = vaddq_f32(v499, v500);
    v500 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v502 = vaddq_f32(v499, v500);
  if (v498 <= 0)
  {
    v500.i64[0] = *(_QWORD *)v19;
    v500.i32[2] = *(_DWORD *)(v19 + 8);
    v503 = (int8x16_t)vmlsq_lane_f32(v500, v502, v15, 0);
    v388 = vextq_s8(v503, v503, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v503.i8, *(float32x2_t *)v503.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v503.i8, 1), *(float32x2_t *)v503.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v504 = v12[6886] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v504;
      if (v498)
        return 0;
    }
  }
  v505 = (char)v12[6926];
  v506 = a5;
  v506.i32[1] = v208;
  *(float32x2_t *)v506.f32 = vcvt_f32_s32(*(int32x2_t *)v506.f32);
  v506.f32[2] = (float)v272;
  v507.i64[0] = 0x3F0000003F000000;
  v507.i64[1] = 0x3F0000003F000000;
  if (!v12[6926])
  {
    v388.i8[0] = v12[6923];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6924];
    v508 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v508.i32 = (float)v508.i32[0];
    v388.i32[1] = v508.i32[0];
    v508.i8[0] = v12[6925];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v508)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v506 = vaddq_f32(v506, v507);
    v507 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v509 = vaddq_f32(v506, v507);
  if (v505 <= 0)
  {
    v507.i64[0] = *(_QWORD *)v19;
    v507.i32[2] = *(_DWORD *)(v19 + 8);
    v510 = (int8x16_t)vmlsq_lane_f32(v507, v509, v15, 0);
    v388 = vextq_s8(v510, v510, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v510.i8, *(float32x2_t *)v510.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v510.i8, 1), *(float32x2_t *)v510.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v511 = v12[6926] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v511;
      if (v505)
        return 0;
    }
  }
  v512 = (char)v12[6966];
  v513 = a5;
  v513.i32[1] = v224;
  *(float32x2_t *)v513.f32 = vcvt_f32_s32(*(int32x2_t *)v513.f32);
  v513.f32[2] = (float)v264;
  v514.i64[0] = 0x3F0000003F000000;
  v514.i64[1] = 0x3F0000003F000000;
  if (!v12[6966])
  {
    v388.i8[0] = v12[6963];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[6964];
    v515 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v515.i32 = (float)v515.i32[0];
    v388.i32[1] = v515.i32[0];
    v515.i8[0] = v12[6965];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v515)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v513 = vaddq_f32(v513, v514);
    v514 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v516 = vaddq_f32(v513, v514);
  if (v512 <= 0)
  {
    v514.i64[0] = *(_QWORD *)v19;
    v514.i32[2] = *(_DWORD *)(v19 + 8);
    v517 = (int8x16_t)vmlsq_lane_f32(v514, v516, v15, 0);
    v388 = vextq_s8(v517, v517, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v517.i8, *(float32x2_t *)v517.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v517.i8, 1), *(float32x2_t *)v517.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v518 = v12[6966] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v518;
      if (v512)
        return 0;
    }
  }
  v519 = (char)v12[7006];
  v520 = a5;
  v520.i32[1] = v224;
  *(float32x2_t *)v520.f32 = vcvt_f32_s32(*(int32x2_t *)v520.f32);
  v520.f32[2] = (float)v272;
  v521.i64[0] = 0x3F0000003F000000;
  v521.i64[1] = 0x3F0000003F000000;
  if (!v12[7006])
  {
    v388.i8[0] = v12[7003];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[7004];
    v522 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v522.i32 = (float)v522.i32[0];
    v388.i32[1] = v522.i32[0];
    v522.i8[0] = v12[7005];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v522)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v520 = vaddq_f32(v520, v521);
    v521 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v523 = vaddq_f32(v520, v521);
  if (v519 <= 0)
  {
    v521.i64[0] = *(_QWORD *)v19;
    v521.i32[2] = *(_DWORD *)(v19 + 8);
    v524 = (int8x16_t)vmlsq_lane_f32(v521, v523, v15, 0);
    v388 = vextq_s8(v524, v524, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v524.i8, *(float32x2_t *)v524.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v524.i8, 1), *(float32x2_t *)v524.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v525 = v12[7006] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v525;
      if (v519)
        return 0;
    }
  }
  v526 = (char)v12[7046];
  *(float32x2_t *)v523.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v318, v31));
  v523.f32[2] = (float)v11;
  v527.i64[0] = 0x3F0000003F000000;
  v527.i64[1] = 0x3F0000003F000000;
  if (!v12[7046])
  {
    v388.i8[0] = v12[7043];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[7044];
    v528 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v528.i32 = (float)v528.i32[0];
    v388.i32[1] = v528.i32[0];
    v528.i8[0] = v12[7045];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v528)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v523 = vaddq_f32(v523, v527);
    v527 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v529 = vaddq_f32(v523, v527);
  if (v526 <= 0)
  {
    v527.i64[0] = *(_QWORD *)v19;
    v527.i32[2] = *(_DWORD *)(v19 + 8);
    v530 = (int8x16_t)vmlsq_lane_f32(v527, v529, v15, 0);
    v388 = vextq_s8(v530, v530, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v530.i8, *(float32x2_t *)v530.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v530.i8, 1), *(float32x2_t *)v530.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v531 = v12[7046] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v531;
      if (v526)
        return 0;
    }
  }
  v532 = (char)v12[7086];
  *(float32x2_t *)v529.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v318, v31));
  v529.f32[2] = (float)v216;
  v533.i64[0] = 0x3F0000003F000000;
  v533.i64[1] = 0x3F0000003F000000;
  if (!v12[7086])
  {
    v388.i8[0] = v12[7083];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[7084];
    v534 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v534.i32 = (float)v534.i32[0];
    v388.i32[1] = v534.i32[0];
    v534.i8[0] = v12[7085];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v534)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v529 = vaddq_f32(v529, v533);
    v533 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v535 = vaddq_f32(v529, v533);
  if (v532 <= 0)
  {
    v533.i64[0] = *(_QWORD *)v19;
    v533.i32[2] = *(_DWORD *)(v19 + 8);
    v536 = (int8x16_t)vmlsq_lane_f32(v533, v535, v15, 0);
    v388 = vextq_s8(v536, v536, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v536.i8, *(float32x2_t *)v536.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v536.i8, 1), *(float32x2_t *)v536.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v537 = v12[7086] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v537;
      if (v532)
        return 0;
    }
  }
  v538 = (char)v12[7126];
  *(float32x2_t *)v535.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v31));
  v535.f32[2] = (float)v11;
  v539.i64[0] = 0x3F0000003F000000;
  v539.i64[1] = 0x3F0000003F000000;
  if (!v12[7126])
  {
    v388.i8[0] = v12[7123];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[7124];
    v540 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v540.i32 = (float)v540.i32[0];
    v388.i32[1] = v540.i32[0];
    v540.i8[0] = v12[7125];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v540)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v535 = vaddq_f32(v535, v539);
    v539 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v541 = vaddq_f32(v535, v539);
  if (v538 <= 0)
  {
    v539.i64[0] = *(_QWORD *)v19;
    v539.i32[2] = *(_DWORD *)(v19 + 8);
    v542 = (int8x16_t)vmlsq_lane_f32(v539, v541, v15, 0);
    v388 = vextq_s8(v542, v542, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v542.i8, *(float32x2_t *)v542.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v542.i8, 1), *(float32x2_t *)v542.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v543 = v12[7126] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v543;
      if (v538)
        return 0;
    }
  }
  v544 = (char)v12[7166];
  *(float32x2_t *)v541.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v333, v31));
  v541.f32[2] = (float)v216;
  v545.i64[0] = 0x3F0000003F000000;
  v545.i64[1] = 0x3F0000003F000000;
  if (!v12[7166])
  {
    v388.i8[0] = v12[7163];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v12[7164];
    v546 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v546.i32 = (float)v546.i32[0];
    v388.i32[1] = v546.i32[0];
    v546.i8[0] = v12[7165];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v546)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v541 = vaddq_f32(v541, v545);
    v545 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v547 = vaddq_f32(v541, v545);
  if (v544 <= 0)
  {
    v545.i64[0] = *(_QWORD *)v19;
    v545.i32[2] = *(_DWORD *)(v19 + 8);
    v548 = (int8x16_t)vmlsq_lane_f32(v545, v547, v15, 0);
    v388 = vextq_s8(v548, v548, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v548.i8, *(float32x2_t *)v548.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v548.i8, 1), *(float32x2_t *)v548.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v549 = v12[7166] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v549;
      if (v544)
        return 0;
    }
  }
  v550 = v12 + 7203;
  v551 = v550[3];
  v552 = a5;
  v552.i32[1] = v318;
  *(float32x2_t *)v552.f32 = vcvt_f32_s32(*(int32x2_t *)v552.f32);
  v552.f32[2] = (float)v11;
  v553.i64[0] = 0x3F0000003F000000;
  v553.i64[1] = 0x3F0000003F000000;
  if (!v550[3])
  {
    v388.i8[0] = *v550;
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v550[1];
    v554 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v554.i32 = (float)v554.i32[0];
    v388.i32[1] = v554.i32[0];
    v554.i8[0] = v550[2];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v554)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v552 = vaddq_f32(v552, v553);
    v553 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v555 = vaddq_f32(v552, v553);
  if (v551 <= 0)
  {
    v553.i64[0] = *(_QWORD *)v19;
    v553.i32[2] = *(_DWORD *)(v19 + 8);
    v556 = (int8x16_t)vmlsq_lane_f32(v553, v555, v15, 0);
    v388 = vextq_s8(v556, v556, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v556.i8, *(float32x2_t *)v556.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v556.i8, 1), *(float32x2_t *)v556.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v557 = v550[3] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v557;
      if (v551)
        return 0;
    }
  }
  v558 = v550[43];
  v559 = a5;
  v559.i32[1] = v318;
  *(float32x2_t *)v559.f32 = vcvt_f32_s32(*(int32x2_t *)v559.f32);
  v559.f32[2] = (float)v216;
  v560.i64[0] = 0x3F0000003F000000;
  v560.i64[1] = 0x3F0000003F000000;
  if (!v550[43])
  {
    v388.i8[0] = v550[40];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v550[41];
    v561 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v561.i32 = (float)v561.i32[0];
    v388.i32[1] = v561.i32[0];
    v561.i8[0] = v550[42];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v561)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v559 = vaddq_f32(v559, v560);
    v560 = vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v562 = vaddq_f32(v559, v560);
  if (v558 <= 0)
  {
    v560.i64[0] = *(_QWORD *)v19;
    v560.i32[2] = *(_DWORD *)(v19 + 8);
    v563 = (int8x16_t)vmlsq_lane_f32(v560, v562, v15, 0);
    v388 = vextq_s8(v563, v563, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v563.i8, *(float32x2_t *)v563.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v563.i8, 1), *(float32x2_t *)v563.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v564 = v550[43] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v564;
      if (v558)
        return 0;
    }
  }
  v565 = v550[83];
  v566 = a5;
  v566.i32[1] = v333;
  *(float32x2_t *)v566.f32 = vcvt_f32_s32(*(int32x2_t *)v566.f32);
  v566.f32[2] = (float)v11;
  v567.i64[0] = 0x3F0000003F000000;
  v567.i64[1] = 0x3F0000003F000000;
  if (!v550[83])
  {
    v388.i8[0] = v550[80];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8));
    *(float *)v388.i32 = (float)v388.i32[0];
    v137.i8[0] = v550[81];
    v568 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v137.i8)).u64[0];
    *(float *)v568.i32 = (float)v568.i32[0];
    v388.i32[1] = v568.i32[0];
    v568.i8[0] = v550[82];
    v137.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v568)).u64[0];
    *(float *)v137.i32 = (float)v137.i32[0];
    v388.i32[2] = v137.i32[0];
    v566 = vaddq_f32(v566, (float32x4_t)v567);
    v567 = (int8x16_t)vmulq_f32((float32x4_t)v388, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v569 = vaddq_f32(v566, (float32x4_t)v567);
  if (v565 <= 0)
  {
    v567.i64[0] = *(_QWORD *)v19;
    v567.i32[2] = *(_DWORD *)(v19 + 8);
    v567 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v567, v569, v15, 0);
    v388 = vextq_s8(v567, v567, 8uLL);
    *(float32x2_t *)v137.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v567.i8, *(float32x2_t *)v567.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v567.i8, 1), *(float32x2_t *)v567.i8, 1), *(float32x2_t *)v388.i8, *(float32x2_t *)v388.i8);
    if (*(float *)v137.i32 <= v16.f32[0])
    {
      v570 = v550[83] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v570;
      if (v565)
        return 0;
    }
  }
  v571 = v550[123];
  a5.i32[1] = v333;
  *(float32x2_t *)a5.f32 = vcvt_f32_s32(*(int32x2_t *)a5.f32);
  a5.f32[2] = (float)v216;
  v572.i64[0] = 0x3F0000003F000000;
  v572.i64[1] = 0x3F0000003F000000;
  if (!v550[123])
  {
    v567.i8[0] = v550[120];
    v567 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v567.i8));
    *(float *)v567.i32 = (float)v567.i32[0];
    v388.i8[0] = v550[121];
    v573 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v388.i8)).u64[0];
    *(float *)v573.i32 = (float)v573.i32[0];
    v567.i32[1] = v573.i32[0];
    v573.i8[0] = v550[122];
    v388 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v573));
    *(float *)v388.i32 = (float)v388.i32[0];
    v567.i32[2] = v388.i32[0];
    a5 = vaddq_f32(a5, (float32x4_t)v572);
    v572 = (int8x16_t)vmulq_f32((float32x4_t)v567, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v574 = vaddq_f32(a5, (float32x4_t)v572);
  if (v571 <= 0)
  {
    v572.i64[0] = *(_QWORD *)v19;
    v572.i32[2] = *(_DWORD *)(v19 + 8);
    v572 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v572, v574, v15, 0);
    v15 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v572.i8, 1);
    v574.i64[0] = vextq_s8(v572, v572, 8uLL).u64[0];
    *(float32x2_t *)v567.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v572.i8, *(float32x2_t *)v572.i8), v15, *(float32x2_t *)v572.i8, 1), *(float32x2_t *)v574.f32, *(float32x2_t *)v574.f32);
    if (*(float *)v567.i32 <= v16.f32[0])
    {
      v575 = v550[123] ? 2 : 1;
      **(_BYTE **)(v13 + 24) = v575;
      if (v571)
        return 0;
    }
  }
  return sub_223961D78(a1, a2, *(double *)&v15, v16, *(double *)v574.i64, *(double *)v572.i64, (float32x4_t)v567, (float32x4_t)v388, *(double *)v137.i64, (float32x4_t)a10);
}

uint64_t sub_223961D78(_QWORD ***a1, int32x2_t *a2, double a3, float32x4_t a4, double a5, double a6, float32x4_t a7, float32x4_t a8, double a9, float32x4_t a10)
{
  float32x4_t v10;
  int8x8_t v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  float32x2_t v16;
  float v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  uint64_t v21;
  int8x8_t v22;
  int8x16_t v23;
  char v24;
  int v25;
  int v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  int8x8_t v32;
  float32x4_t v33;
  int8x16_t v34;
  char v35;
  unsigned __int32 v36;
  int v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  int8x8_t v43;
  float32x4_t v44;
  int8x16_t v45;
  char v46;
  int v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  int8x8_t v53;
  float32x4_t v54;
  int8x16_t v55;
  char v56;
  unsigned __int32 v57;
  int v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;
  int8x8_t v64;
  float32x4_t v65;
  int8x16_t v66;
  char v67;
  int v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  int8x8_t v74;
  float32x4_t v75;
  int8x16_t v76;
  char v77;
  int v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  int8x8_t v82;
  float32x4_t v83;
  int8x16_t v84;
  char v85;
  int v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  int8x8_t v90;
  float32x4_t v91;
  int8x16_t v92;
  char v93;
  unsigned __int32 v94;
  int v95;
  int v96;
  float32x4_t v97;
  float32x4_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  int8x8_t v102;
  float32x4_t v103;
  int8x16_t v104;
  char v105;
  int v106;
  int v107;
  float32x4_t v108;
  float32x4_t v109;
  int8x8_t v110;
  float32x4_t v111;
  int8x16_t v112;
  char v113;
  unsigned __int32 v114;
  int v115;
  float32x4_t v116;
  float32x4_t v117;
  int8x8_t v118;
  float32x4_t v119;
  int8x16_t v120;
  char v121;
  int v122;
  float32x4_t v123;
  float32x4_t v124;
  int8x8_t v125;
  float32x4_t v126;
  int8x16_t v127;
  char v128;
  unsigned __int32 v129;
  int v130;
  float32x4_t v131;
  int8x8_t v132;
  float32x4_t v133;
  int8x16_t v134;
  char v135;
  int v136;
  float32x4_t v137;
  int8x8_t v138;
  float32x4_t v139;
  int8x16_t v140;
  char v141;
  int v142;
  float32x4_t v143;
  int8x8_t v144;
  float32x4_t v145;
  int8x16_t v146;
  char v147;
  int v148;
  float32x4_t v149;
  int8x8_t v150;
  float32x4_t v151;
  int8x16_t v152;
  char v153;
  int v154;
  int v155;
  float32x4_t v156;
  float32x4_t v157;
  int8x8_t v158;
  float32x4_t v159;
  int8x16_t v160;
  char v161;
  int v162;
  int v163;
  float32x4_t v164;
  float32x4_t v165;
  int8x8_t v166;
  float32x4_t v167;
  int8x16_t v168;
  char v169;
  int v170;
  float32x4_t v171;
  float32x4_t v172;
  int8x8_t v173;
  float32x4_t v174;
  int8x16_t v175;
  char v176;
  int v177;
  float32x4_t v178;
  float32x4_t v179;
  int8x8_t v180;
  float32x4_t v181;
  int8x16_t v182;
  char v183;
  int v184;
  float32x4_t v185;
  int8x8_t v186;
  float32x4_t v187;
  int8x16_t v188;
  char v189;
  int v190;
  float32x4_t v191;
  int8x8_t v192;
  float32x4_t v193;
  int8x16_t v194;
  char v195;
  int v196;
  float32x4_t v197;
  int8x8_t v198;
  float32x4_t v199;
  int8x16_t v200;
  char v201;
  int v202;
  float32x4_t v203;
  int8x8_t v204;
  float32x4_t v205;
  int8x16_t v206;
  char v207;
  int v208;
  float32x4_t v209;
  int8x8_t v210;
  float32x4_t v211;
  int8x16_t v212;
  char v213;
  int v214;
  float32x4_t v215;
  int8x8_t v216;
  float32x4_t v217;
  int8x16_t v218;
  char v219;
  int v220;
  float32x4_t v221;
  float32x4_t v222;
  int8x8_t v223;
  float32x4_t v224;
  int8x16_t v225;
  char v226;
  int v227;
  float32x4_t v228;
  float32x4_t v229;
  int8x8_t v230;
  float32x4_t v231;
  int8x16_t v232;
  char v233;
  int v234;
  float32x4_t v235;
  float32x4_t v236;
  int8x8_t v237;
  float32x4_t v238;
  int8x16_t v239;
  char v240;
  int v241;
  float32x4_t v242;
  float32x4_t v243;
  int8x8_t v244;
  float32x4_t v245;
  int8x16_t v246;
  char v247;
  int v248;
  float32x4_t v249;
  int8x8_t v250;
  float32x4_t v251;
  int8x16_t v252;
  char v253;
  int v254;
  float32x4_t v255;
  int8x8_t v256;
  float32x4_t v257;
  int8x16_t v258;
  char v259;
  int v260;
  float32x4_t v261;
  int8x8_t v262;
  float32x4_t v263;
  int8x16_t v264;
  char v265;
  int v266;
  float32x4_t v267;
  int8x8_t v268;
  float32x4_t v269;
  int8x16_t v270;
  char v271;
  int v272;
  float32x4_t v273;
  float32x4_t v274;
  int8x8_t v275;
  float32x4_t v276;
  int8x16_t v277;
  char v278;
  int v279;
  float32x4_t v280;
  float32x4_t v281;
  int8x8_t v282;
  float32x4_t v283;
  int8x16_t v284;
  char v285;
  int v286;
  float32x4_t v287;
  float32x4_t v288;
  int8x8_t v289;
  float32x4_t v290;
  int8x16_t v291;
  char v292;
  int v293;
  float32x4_t v294;
  float32x4_t v295;
  int8x8_t v296;
  float32x4_t v297;
  int8x16_t v298;
  char v299;
  int v300;
  float32x4_t v301;
  int8x8_t v302;
  float32x4_t v303;
  int8x16_t v304;
  char v305;
  int v306;
  float32x4_t v307;
  int8x8_t v308;
  float32x4_t v309;
  int8x16_t v310;
  char v311;
  int v312;
  float32x4_t v313;
  float32x4_t v314;
  int8x8_t v315;
  float32x4_t v316;
  int8x16_t v317;
  char v318;
  int v319;
  float32x4_t v320;
  float32x4_t v321;
  int8x8_t v322;
  float32x4_t v323;
  int8x16_t v324;
  char v325;
  int v326;
  float32x4_t v327;
  float32x4_t v328;
  int8x8_t v329;
  float32x4_t v330;
  int8x16_t v331;
  char v332;
  int v333;
  float32x4_t v334;
  float32x4_t v335;
  int8x8_t v336;
  float32x4_t v337;
  int8x16_t v338;
  char v339;
  int v340;
  float32x4_t v341;
  int8x8_t v342;
  float32x4_t v343;
  int8x16_t v344;
  char v345;
  int v346;
  float32x4_t v347;
  int8x8_t v348;
  float32x4_t v349;
  int8x16_t v350;
  char v351;
  int v352;
  float32x4_t v353;
  int8x8_t v354;
  float32x4_t v355;
  int8x16_t v356;
  char v357;
  int v358;
  float32x4_t v359;
  int8x8_t v360;
  float32x4_t v361;
  int8x16_t v362;
  char v363;
  int v364;
  float32x4_t v365;
  float32x4_t v366;
  int8x8_t v367;
  float32x4_t v368;
  int8x16_t v369;
  char v370;
  int v371;
  float32x4_t v372;
  float32x4_t v373;
  int8x8_t v374;
  float32x4_t v375;
  int8x16_t v376;
  char v377;
  int v378;
  float32x4_t v379;
  float32x4_t v380;
  int8x8_t v381;
  float32x4_t v382;
  int8x16_t v383;
  char v384;
  int v385;
  float32x4_t v386;
  float32x4_t v387;
  int8x8_t v388;
  float32x4_t v389;
  int8x16_t v390;
  char v391;
  int v392;
  float32x4_t v393;
  int8x8_t v394;
  float32x4_t v395;
  int8x16_t v396;
  char v397;
  int v398;
  float32x4_t v399;
  int8x8_t v400;
  float32x4_t v401;
  int8x16_t v402;
  char v403;
  int v404;
  float32x4_t v405;
  int8x8_t v406;
  float32x4_t v407;
  int8x16_t v408;
  char v409;
  int v410;
  float32x4_t v411;
  int8x8_t v412;
  float32x4_t v413;
  int8x16_t v414;
  char v415;
  int v416;
  float32x4_t v417;
  float32x4_t v418;
  float32x4_t v419;
  int8x8_t v420;
  float32x4_t v421;
  int8x16_t v422;
  char v423;
  int v424;
  float32x4_t v425;
  float32x4_t v426;
  float32x4_t v427;
  int8x8_t v428;
  float32x4_t v429;
  int8x16_t v430;
  char v431;
  int v432;
  float32x4_t v433;
  float32x4_t v434;
  int8x8_t v435;
  float32x4_t v436;
  int8x16_t v437;
  char v438;
  int v439;
  float32x4_t v440;
  float32x4_t v441;
  int8x8_t v442;
  float32x4_t v443;
  int8x16_t v444;
  char v445;
  int v446;
  float32x4_t v447;
  float32x4_t v448;
  int8x8_t v449;
  float32x4_t v450;
  int8x16_t v451;
  char v452;
  int v453;
  float32x4_t v454;
  float32x4_t v455;
  int8x8_t v456;
  float32x4_t v457;
  int8x16_t v458;
  char v459;
  int v460;
  float32x4_t v461;
  int8x8_t v462;
  float32x4_t v463;
  int8x16_t v464;
  char v465;
  int v466;
  float32x4_t v467;
  int8x8_t v468;
  float32x4_t v469;
  int8x16_t v470;
  char v471;
  int v472;
  int8x16_t v473;
  float32x4_t v474;
  float32x4_t v475;
  int8x8_t v476;
  float32x4_t v477;
  char v478;
  int v479;
  float32x4_t v480;
  int8x8_t v481;
  float32x4_t v482;
  int8x16_t v483;
  char v484;
  int v485;
  float32x4_t v486;
  float32x4_t v487;
  int8x8_t v488;
  float32x4_t v489;
  int8x16_t v490;
  char v491;
  int v492;
  float32x4_t v493;
  float32x4_t v494;
  int8x8_t v495;
  float32x4_t v496;
  int8x16_t v497;
  char v498;
  int v499;
  float32x4_t v500;
  int8x16_t v501;
  int8x8_t v502;
  float32x4_t v503;
  char v504;
  int v505;
  float32x4_t v506;
  int8x8_t v507;
  float32x4_t v508;
  int8x16_t v509;
  char v510;
  int v511;
  float32x4_t v512;
  int8x8_t v513;
  float32x4_t v514;
  int8x16_t v515;
  char v516;
  int v517;
  float32x4_t v518;
  int8x8_t v519;
  float32x4_t v520;
  int8x16_t v521;
  char v522;
  unsigned __int32 v523;
  int v524;
  float32x4_t v525;
  float32x4_t v526;
  int8x8_t v527;
  float32x4_t v528;
  int8x16_t v529;
  char v530;
  int v531;
  int v532;
  float32x4_t v533;
  float32x4_t v534;
  int8x8_t v535;
  float32x4_t v536;
  int8x16_t v537;
  char v538;
  unsigned __int32 v539;
  int v540;
  float32x4_t v541;
  int8x8_t v542;
  float32x4_t v543;
  int8x16_t v544;
  char v545;
  int v546;
  float32x4_t v547;
  int8x8_t v548;
  float32x4_t v549;
  int8x16_t v550;
  char v551;
  unsigned __int32 v552;
  int v553;
  float32x4_t v554;
  float32x4_t v555;
  int8x8_t v556;
  float32x4_t v557;
  int8x16_t v558;
  char v559;
  __int8 *v560;
  int v561;
  float32x4_t v562;
  float32x4_t v563;
  int8x8_t v564;
  float32x4_t v565;
  int8x16_t v566;
  char v567;
  int v568;
  float32x4_t v569;
  int8x8_t v570;
  float32x4_t v571;
  int8x16_t v572;
  char v573;
  int v574;
  int8x16_t v575;
  int8x8_t v576;
  float32x4_t v577;
  char v578;
  int v579;
  int8x16_t v580;
  float32x4_t v581;
  float32x4_t v582;
  int8x8_t v583;
  float32x4_t v584;
  char v585;
  int v586;
  int8x16_t v587;
  int8x8_t v588;
  float32x4_t v589;
  char v590;

  *(int32x2_t *)a4.f32 = *a2;
  v16.i32[1] = 6;
  *(int32x2_t *)a7.f32 = vadd_s32(*a2, (int32x2_t)0x600000002);
  v12 = a2[1].i32[0];
  v13 = (_BYTE *)***a1;
  v14 = *(*a1)[5];
  v15 = (char)v13[7366];
  v16.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v14 + 40784) + 312);
  *(float32x2_t *)a8.f32 = vcvt_f32_s32(*(int32x2_t *)a7.f32);
  v17 = (float)(v12 + 2);
  v18 = a8;
  v18.f32[2] = v17;
  v19.i64[0] = 0x3F0000003F000000;
  v19.i64[1] = 0x3F0000003F000000;
  if (v13[7366])
  {
    v20 = vaddq_f32(v18, v19);
    v21 = *(_QWORD *)(v14 + 8);
    v18.i32[0] = **(_DWORD **)(v14 + 16);
    if (v15 > 0)
      goto LABEL_10;
  }
  else
  {
    a10.i8[0] = v13[7363];
    a10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.f32));
    a10.f32[0] = (float)a10.i32[0];
    v10.i8[0] = v13[7364];
    v22 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v22.i32 = (float)v22.i32[0];
    a10.i32[1] = v22.i32[0];
    v22.i8[0] = v13[7365];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v22)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v18 = vaddq_f32(v18, v19);
    v20 = vaddq_f32(v18, vmulq_f32(a10, (float32x4_t)vdupq_n_s32(0x3B808081u)));
    v21 = *(_QWORD *)(v14 + 8);
    v18.i32[0] = **(_DWORD **)(v14 + 16);
    if (v15 > 0)
      goto LABEL_10;
  }
  a10.i64[0] = *(_QWORD *)v21;
  a10.i32[2] = *(_DWORD *)(v21 + 8);
  v23 = (int8x16_t)vmlsq_lane_f32(a10, v20, v16, 0);
  v10.i64[0] = vextq_s8(v23, v23, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v23.i8, *(float32x2_t *)v23.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v23.i8, 1), *(float32x2_t *)v23.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v24 = v13[7366] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v24;
    if (v15)
      return 0;
  }
LABEL_10:
  v25 = v12 + 3;
  v26 = (char)v13[7406];
  if (v13[7406])
  {
    v27 = a8;
    v27.f32[2] = (float)v25;
    v28.i64[0] = 0x3F0000003F000000;
    v28.i64[1] = 0x3F0000003F000000;
    v29 = vaddq_f32(v27, v28);
    if (v26 > 0)
      goto LABEL_19;
  }
  else
  {
    v30 = a8;
    v30.f32[2] = (float)v25;
    v31.i64[0] = 0x3F0000003F000000;
    v31.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7403];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7404];
    v32 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v32.i32 = (float)v32.i32[0];
    v10.i32[1] = v32.i32[0];
    v32.i8[0] = v13[7405];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v32)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v33 = vaddq_f32(v30, v31);
    v27 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v29 = vaddq_f32(v33, v27);
    if (v26 > 0)
      goto LABEL_19;
  }
  v27.i64[0] = *(_QWORD *)v21;
  v27.i32[2] = *(_DWORD *)(v21 + 8);
  v34 = (int8x16_t)vmlsq_lane_f32(v27, v29, v16, 0);
  v10.i64[0] = vextq_s8(v34, v34, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v34.i8, *(float32x2_t *)v34.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v34.i8, 1), *(float32x2_t *)v34.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v35 = v13[7406] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v35;
    if (v26)
      return 0;
  }
LABEL_19:
  v36 = a4.i32[1] + 7;
  v37 = (char)v13[7446];
  if (v13[7446])
  {
    v38 = a7;
    v38.i32[1] = a4.i32[1] + 7;
    *(float32x2_t *)v38.f32 = vcvt_f32_s32(*(int32x2_t *)v38.f32);
    v38.f32[2] = (float)(v12 + 2);
    v39.i64[0] = 0x3F0000003F000000;
    v39.i64[1] = 0x3F0000003F000000;
    v40 = vaddq_f32(v38, v39);
    if (v37 > 0)
      goto LABEL_28;
  }
  else
  {
    v41 = a7;
    v41.i32[1] = a4.i32[1] + 7;
    *(float32x2_t *)v41.f32 = vcvt_f32_s32(*(int32x2_t *)v41.f32);
    v41.f32[2] = (float)(v12 + 2);
    v42.i64[0] = 0x3F0000003F000000;
    v42.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7443];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7444];
    v43 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v43.i32 = (float)v43.i32[0];
    v10.i32[1] = v43.i32[0];
    v43.i8[0] = v13[7445];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v43)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v44 = vaddq_f32(v41, v42);
    v39 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v40 = vaddq_f32(v44, v39);
    if (v37 > 0)
      goto LABEL_28;
  }
  v39.i64[0] = *(_QWORD *)v21;
  v39.i32[2] = *(_DWORD *)(v21 + 8);
  v45 = (int8x16_t)vmlsq_lane_f32(v39, v40, v16, 0);
  v10.i64[0] = vextq_s8(v45, v45, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v45.i8, *(float32x2_t *)v45.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v45.i8, 1), *(float32x2_t *)v45.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v46 = v13[7446] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v46;
    if (v37)
      return 0;
  }
LABEL_28:
  v47 = (char)v13[7486];
  if (v13[7486])
  {
    v48 = a7;
    v48.i32[1] = a4.i32[1] + 7;
    *(float32x2_t *)v48.f32 = vcvt_f32_s32(*(int32x2_t *)v48.f32);
    v48.f32[2] = (float)v25;
    v49.i64[0] = 0x3F0000003F000000;
    v49.i64[1] = 0x3F0000003F000000;
    v50 = vaddq_f32(v48, v49);
    if (v47 > 0)
      goto LABEL_37;
  }
  else
  {
    v51 = a7;
    v51.i32[1] = a4.i32[1] + 7;
    *(float32x2_t *)v51.f32 = vcvt_f32_s32(*(int32x2_t *)v51.f32);
    v51.f32[2] = (float)v25;
    v52.i64[0] = 0x3F0000003F000000;
    v52.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7483];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7484];
    v53 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v53.i32 = (float)v53.i32[0];
    v10.i32[1] = v53.i32[0];
    v53.i8[0] = v13[7485];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v53)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v54 = vaddq_f32(v51, v52);
    v49 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v50 = vaddq_f32(v54, v49);
    if (v47 > 0)
      goto LABEL_37;
  }
  v49.i64[0] = *(_QWORD *)v21;
  v49.i32[2] = *(_DWORD *)(v21 + 8);
  v55 = (int8x16_t)vmlsq_lane_f32(v49, v50, v16, 0);
  v10.i64[0] = vextq_s8(v55, v55, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v55.i8, *(float32x2_t *)v55.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v55.i8, 1), *(float32x2_t *)v55.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v56 = v13[7486] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v56;
    if (v47)
      return 0;
  }
LABEL_37:
  v57 = a4.i32[0] + 3;
  v58 = (char)v13[7526];
  if (v13[7526])
  {
    v59 = a7;
    v59.i32[0] = a4.i32[0] + 3;
    *(float32x2_t *)v59.f32 = vcvt_f32_s32(*(int32x2_t *)v59.f32);
    v59.f32[2] = (float)(v12 + 2);
    v60.i64[0] = 0x3F0000003F000000;
    v60.i64[1] = 0x3F0000003F000000;
    v61 = vaddq_f32(v59, v60);
    if (v58 > 0)
      goto LABEL_46;
  }
  else
  {
    v62 = a7;
    v62.i32[0] = a4.i32[0] + 3;
    *(float32x2_t *)v62.f32 = vcvt_f32_s32(*(int32x2_t *)v62.f32);
    v62.f32[2] = (float)(v12 + 2);
    v63.i64[0] = 0x3F0000003F000000;
    v63.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7523];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7524];
    v64 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v64.i32 = (float)v64.i32[0];
    v10.i32[1] = v64.i32[0];
    v64.i8[0] = v13[7525];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v64)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v65 = vaddq_f32(v62, v63);
    v60 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v61 = vaddq_f32(v65, v60);
    if (v58 > 0)
      goto LABEL_46;
  }
  v60.i64[0] = *(_QWORD *)v21;
  v60.i32[2] = *(_DWORD *)(v21 + 8);
  v66 = (int8x16_t)vmlsq_lane_f32(v60, v61, v16, 0);
  v10.i64[0] = vextq_s8(v66, v66, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v66.i8, *(float32x2_t *)v66.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v66.i8, 1), *(float32x2_t *)v66.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v67 = v13[7526] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v67;
    if (v58)
      return 0;
  }
LABEL_46:
  v68 = (char)v13[7566];
  if (v13[7566])
  {
    v69 = a7;
    v69.i32[0] = a4.i32[0] + 3;
    *(float32x2_t *)v69.f32 = vcvt_f32_s32(*(int32x2_t *)v69.f32);
    v69.f32[2] = (float)v25;
    v70.i64[0] = 0x3F0000003F000000;
    v70.i64[1] = 0x3F0000003F000000;
    v71 = vaddq_f32(v69, v70);
    if (v68 > 0)
      goto LABEL_55;
  }
  else
  {
    v72 = a7;
    v72.i32[0] = a4.i32[0] + 3;
    *(float32x2_t *)v72.f32 = vcvt_f32_s32(*(int32x2_t *)v72.f32);
    v72.f32[2] = (float)v25;
    v73.i64[0] = 0x3F0000003F000000;
    v73.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7563];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7564];
    v74 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v74.i32 = (float)v74.i32[0];
    v10.i32[1] = v74.i32[0];
    v74.i8[0] = v13[7565];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v74)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v75 = vaddq_f32(v72, v73);
    v70 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v71 = vaddq_f32(v75, v70);
    if (v68 > 0)
      goto LABEL_55;
  }
  v70.i64[0] = *(_QWORD *)v21;
  v70.i32[2] = *(_DWORD *)(v21 + 8);
  v76 = (int8x16_t)vmlsq_lane_f32(v70, v71, v16, 0);
  v10.i64[0] = vextq_s8(v76, v76, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v76.i8, *(float32x2_t *)v76.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v76.i8, 1), *(float32x2_t *)v76.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v77 = v13[7566] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v77;
    if (v68)
      return 0;
  }
LABEL_55:
  v78 = (char)v13[7606];
  if (v13[7606])
  {
    *(float32x2_t *)v71.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
    v71.f32[2] = (float)(v12 + 2);
    v79.i64[0] = 0x3F0000003F000000;
    v79.i64[1] = 0x3F0000003F000000;
    v80 = vaddq_f32(v71, v79);
    if (v78 > 0)
      goto LABEL_64;
  }
  else
  {
    *(float32x2_t *)v71.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
    v71.f32[2] = (float)(v12 + 2);
    v81.i64[0] = 0x3F0000003F000000;
    v81.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7603];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7604];
    v82 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v82.i32 = (float)v82.i32[0];
    v10.i32[1] = v82.i32[0];
    v82.i8[0] = v13[7605];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v82)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v83 = vaddq_f32(v71, v81);
    v79 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v80 = vaddq_f32(v83, v79);
    if (v78 > 0)
      goto LABEL_64;
  }
  v79.i64[0] = *(_QWORD *)v21;
  v79.i32[2] = *(_DWORD *)(v21 + 8);
  v84 = (int8x16_t)vmlsq_lane_f32(v79, v80, v16, 0);
  v10.i64[0] = vextq_s8(v84, v84, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v84.i8, *(float32x2_t *)v84.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v84.i8, 1), *(float32x2_t *)v84.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v85 = v13[7606] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v85;
    if (v78)
      return 0;
  }
LABEL_64:
  v86 = (char)v13[7646];
  if (v13[7646])
  {
    *(float32x2_t *)v80.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
    v80.f32[2] = (float)v25;
    v87.i64[0] = 0x3F0000003F000000;
    v87.i64[1] = 0x3F0000003F000000;
    v88 = vaddq_f32(v80, v87);
    if (v86 > 0)
      goto LABEL_73;
  }
  else
  {
    *(float32x2_t *)v80.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
    v80.f32[2] = (float)v25;
    v89.i64[0] = 0x3F0000003F000000;
    v89.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7643];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7644];
    v90 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v90.i32 = (float)v90.i32[0];
    v10.i32[1] = v90.i32[0];
    v90.i8[0] = v13[7645];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v90)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v91 = vaddq_f32(v80, v89);
    v87 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v88 = vaddq_f32(v91, v87);
    if (v86 > 0)
      goto LABEL_73;
  }
  v87.i64[0] = *(_QWORD *)v21;
  v87.i32[2] = *(_DWORD *)(v21 + 8);
  v92 = (int8x16_t)vmlsq_lane_f32(v87, v88, v16, 0);
  v10.i64[0] = vextq_s8(v92, v92, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v92.i8, *(float32x2_t *)v92.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v92.i8, 1), *(float32x2_t *)v92.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v93 = v13[7646] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v93;
    if (v86)
      return 0;
  }
LABEL_73:
  v94 = a4.i32[1] + 4;
  v95 = v12 + 4;
  v96 = (char)v13[7686];
  if (v13[7686])
  {
    v97 = a4;
    v97.i32[1] = a4.i32[1] + 4;
    *(float32x2_t *)v97.f32 = vcvt_f32_s32(*(int32x2_t *)v97.f32);
    v97.f32[2] = (float)v95;
    v98.i64[0] = 0x3F0000003F000000;
    v98.i64[1] = 0x3F0000003F000000;
    v99 = vaddq_f32(v97, v98);
    if (v96 > 0)
      goto LABEL_82;
  }
  else
  {
    v100 = a4;
    v100.i32[1] = a4.i32[1] + 4;
    *(float32x2_t *)v100.f32 = vcvt_f32_s32(*(int32x2_t *)v100.f32);
    v100.f32[2] = (float)v95;
    v101.i64[0] = 0x3F0000003F000000;
    v101.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[7683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7684];
    v102 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v102.i32 = (float)v102.i32[0];
    v10.i32[1] = v102.i32[0];
    v102.i8[0] = v13[7685];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v102)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v103 = vaddq_f32(v100, v101);
    v98 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v99 = vaddq_f32(v103, v98);
    if (v96 > 0)
      goto LABEL_82;
  }
  v98.i64[0] = *(_QWORD *)v21;
  v98.i32[2] = *(_DWORD *)(v21 + 8);
  v104 = (int8x16_t)vmlsq_lane_f32(v98, v99, v16, 0);
  v10.i64[0] = vextq_s8(v104, v104, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v104.i8, *(float32x2_t *)v104.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v104.i8, 1), *(float32x2_t *)v104.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v18.f32[0])
  {
    v105 = v13[7686] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v105;
    if (v96)
      return 0;
  }
LABEL_82:
  v106 = v12 + 5;
  v107 = (char)v13[7726];
  v108 = a4;
  v108.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v108.f32 = vcvt_f32_s32(*(int32x2_t *)v108.f32);
  v108.f32[2] = (float)(v12 + 5);
  v109.i64[0] = 0x3F0000003F000000;
  v109.i64[1] = 0x3F0000003F000000;
  if (!v13[7726])
  {
    v10.i8[0] = v13[7723];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7724];
    v110 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v110.i32 = (float)v110.i32[0];
    v10.i32[1] = v110.i32[0];
    v110.i8[0] = v13[7725];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v110)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v108 = vaddq_f32(v108, v109);
    v109 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v111 = vaddq_f32(v108, v109);
  if (v107 <= 0)
  {
    v109.i64[0] = *(_QWORD *)v21;
    v109.i32[2] = *(_DWORD *)(v21 + 8);
    v112 = (int8x16_t)vmlsq_lane_f32(v109, v111, v16, 0);
    v10.i64[0] = vextq_s8(v112, v112, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v112.i8, *(float32x2_t *)v112.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v112.i8, 1), *(float32x2_t *)v112.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v113 = v13[7726] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v113;
      if (v107)
        return 0;
    }
  }
  v114 = a4.i32[1] + 5;
  v115 = (char)v13[7766];
  v116 = a4;
  v116.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v116.f32 = vcvt_f32_s32(*(int32x2_t *)v116.f32);
  v116.f32[2] = (float)v95;
  v117.i64[0] = 0x3F0000003F000000;
  v117.i64[1] = 0x3F0000003F000000;
  if (!v13[7766])
  {
    v10.i8[0] = v13[7763];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7764];
    v118 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v118.i32 = (float)v118.i32[0];
    v10.i32[1] = v118.i32[0];
    v118.i8[0] = v13[7765];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v118)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v116 = vaddq_f32(v116, v117);
    v117 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v119 = vaddq_f32(v116, v117);
  if (v115 <= 0)
  {
    v117.i64[0] = *(_QWORD *)v21;
    v117.i32[2] = *(_DWORD *)(v21 + 8);
    v120 = (int8x16_t)vmlsq_lane_f32(v117, v119, v16, 0);
    v10.i64[0] = vextq_s8(v120, v120, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v120.i8, *(float32x2_t *)v120.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v120.i8, 1), *(float32x2_t *)v120.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v121 = v13[7766] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v121;
      if (v115)
        return 0;
    }
  }
  v122 = (char)v13[7806];
  v123 = a4;
  v123.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v123.f32 = vcvt_f32_s32(*(int32x2_t *)v123.f32);
  v123.f32[2] = (float)v106;
  v124.i64[0] = 0x3F0000003F000000;
  v124.i64[1] = 0x3F0000003F000000;
  if (!v13[7806])
  {
    v10.i8[0] = v13[7803];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7804];
    v125 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v125.i32 = (float)v125.i32[0];
    v10.i32[1] = v125.i32[0];
    v125.i8[0] = v13[7805];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v125)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v123 = vaddq_f32(v123, v124);
    v124 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v126 = vaddq_f32(v123, v124);
  if (v122 <= 0)
  {
    v124.i64[0] = *(_QWORD *)v21;
    v124.i32[2] = *(_DWORD *)(v21 + 8);
    v127 = (int8x16_t)vmlsq_lane_f32(v124, v126, v16, 0);
    v10.i64[0] = vextq_s8(v127, v127, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v127.i8, *(float32x2_t *)v127.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v127.i8, 1), *(float32x2_t *)v127.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v128 = v13[7806] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v128;
      if (v122)
        return 0;
    }
  }
  v129 = a4.i32[0] + 1;
  v130 = (char)v13[7846];
  *(float32x2_t *)v126.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, a4.i32[0] + 1));
  v126.f32[2] = (float)v95;
  v131.i64[0] = 0x3F0000003F000000;
  v131.i64[1] = 0x3F0000003F000000;
  if (!v13[7846])
  {
    v10.i8[0] = v13[7843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7844];
    v132 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v132.i32 = (float)v132.i32[0];
    v10.i32[1] = v132.i32[0];
    v132.i8[0] = v13[7845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v132)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v126 = vaddq_f32(v126, v131);
    v131 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v133 = vaddq_f32(v126, v131);
  if (v130 <= 0)
  {
    v131.i64[0] = *(_QWORD *)v21;
    v131.i32[2] = *(_DWORD *)(v21 + 8);
    v134 = (int8x16_t)vmlsq_lane_f32(v131, v133, v16, 0);
    v10.i64[0] = vextq_s8(v134, v134, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v134.i8, *(float32x2_t *)v134.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v134.i8, 1), *(float32x2_t *)v134.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v135 = v13[7846] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v135;
      if (v130)
        return 0;
    }
  }
  v136 = (char)v13[7886];
  *(float32x2_t *)v133.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v129));
  v133.f32[2] = (float)v106;
  v137.i64[0] = 0x3F0000003F000000;
  v137.i64[1] = 0x3F0000003F000000;
  if (!v13[7886])
  {
    v10.i8[0] = v13[7883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7884];
    v138 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v138.i32 = (float)v138.i32[0];
    v10.i32[1] = v138.i32[0];
    v138.i8[0] = v13[7885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v138)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v133 = vaddq_f32(v133, v137);
    v137 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v139 = vaddq_f32(v133, v137);
  if (v136 <= 0)
  {
    v137.i64[0] = *(_QWORD *)v21;
    v137.i32[2] = *(_DWORD *)(v21 + 8);
    v140 = (int8x16_t)vmlsq_lane_f32(v137, v139, v16, 0);
    v10.i64[0] = vextq_s8(v140, v140, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v140.i8, *(float32x2_t *)v140.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v140.i8, 1), *(float32x2_t *)v140.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v141 = v13[7886] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v141;
      if (v136)
        return 0;
    }
  }
  v142 = (char)v13[7926];
  *(float32x2_t *)v139.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v129));
  v139.f32[2] = (float)v95;
  v143.i64[0] = 0x3F0000003F000000;
  v143.i64[1] = 0x3F0000003F000000;
  if (!v13[7926])
  {
    v10.i8[0] = v13[7923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7924];
    v144 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v144.i32 = (float)v144.i32[0];
    v10.i32[1] = v144.i32[0];
    v144.i8[0] = v13[7925];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v144)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v139 = vaddq_f32(v139, v143);
    v143 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v145 = vaddq_f32(v139, v143);
  if (v142 <= 0)
  {
    v143.i64[0] = *(_QWORD *)v21;
    v143.i32[2] = *(_DWORD *)(v21 + 8);
    v146 = (int8x16_t)vmlsq_lane_f32(v143, v145, v16, 0);
    v10.i64[0] = vextq_s8(v146, v146, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v146.i8, *(float32x2_t *)v146.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v146.i8, 1), *(float32x2_t *)v146.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v147 = v13[7926] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v147;
      if (v142)
        return 0;
    }
  }
  v148 = (char)v13[7966];
  *(float32x2_t *)v145.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v129));
  v145.f32[2] = (float)v106;
  v149.i64[0] = 0x3F0000003F000000;
  v149.i64[1] = 0x3F0000003F000000;
  if (!v13[7966])
  {
    v10.i8[0] = v13[7963];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[7964];
    v150 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v150.i32 = (float)v150.i32[0];
    v10.i32[1] = v150.i32[0];
    v150.i8[0] = v13[7965];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v150)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v145 = vaddq_f32(v145, v149);
    v149 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v151 = vaddq_f32(v145, v149);
  if (v148 <= 0)
  {
    v149.i64[0] = *(_QWORD *)v21;
    v149.i32[2] = *(_DWORD *)(v21 + 8);
    v152 = (int8x16_t)vmlsq_lane_f32(v149, v151, v16, 0);
    v10.i64[0] = vextq_s8(v152, v152, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v152.i8, *(float32x2_t *)v152.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v152.i8, 1), *(float32x2_t *)v152.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v153 = v13[7966] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v153;
      if (v148)
        return 0;
    }
  }
  v154 = v12 + 6;
  v155 = (char)v13[8006];
  v156 = a4;
  v156.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v156.f32 = vcvt_f32_s32(*(int32x2_t *)v156.f32);
  v156.f32[2] = (float)(v12 + 6);
  v157.i64[0] = 0x3F0000003F000000;
  v157.i64[1] = 0x3F0000003F000000;
  if (!v13[8006])
  {
    v10.i8[0] = v13[8003];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8004];
    v158 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v158.i32 = (float)v158.i32[0];
    v10.i32[1] = v158.i32[0];
    v158.i8[0] = v13[8005];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v158)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v156 = vaddq_f32(v156, v157);
    v157 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v159 = vaddq_f32(v156, v157);
  if (v155 <= 0)
  {
    v157.i64[0] = *(_QWORD *)v21;
    v157.i32[2] = *(_DWORD *)(v21 + 8);
    v160 = (int8x16_t)vmlsq_lane_f32(v157, v159, v16, 0);
    v10.i64[0] = vextq_s8(v160, v160, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v160.i8, *(float32x2_t *)v160.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v160.i8, 1), *(float32x2_t *)v160.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v161 = v13[8006] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v161;
      if (v155)
        return 0;
    }
  }
  v162 = v12 + 7;
  v163 = (char)v13[8046];
  v164 = a4;
  v164.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v164.f32 = vcvt_f32_s32(*(int32x2_t *)v164.f32);
  v164.f32[2] = (float)(v12 + 7);
  v165.i64[0] = 0x3F0000003F000000;
  v165.i64[1] = 0x3F0000003F000000;
  if (!v13[8046])
  {
    v10.i8[0] = v13[8043];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8044];
    v166 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v166.i32 = (float)v166.i32[0];
    v10.i32[1] = v166.i32[0];
    v166.i8[0] = v13[8045];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v166)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v164 = vaddq_f32(v164, v165);
    v165 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v167 = vaddq_f32(v164, v165);
  if (v163 <= 0)
  {
    v165.i64[0] = *(_QWORD *)v21;
    v165.i32[2] = *(_DWORD *)(v21 + 8);
    v168 = (int8x16_t)vmlsq_lane_f32(v165, v167, v16, 0);
    v10.i64[0] = vextq_s8(v168, v168, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v168.i8, *(float32x2_t *)v168.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v168.i8, 1), *(float32x2_t *)v168.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v169 = v13[8046] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v169;
      if (v163)
        return 0;
    }
  }
  v170 = (char)v13[8086];
  v171 = a4;
  v171.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v171.f32 = vcvt_f32_s32(*(int32x2_t *)v171.f32);
  v171.f32[2] = (float)v154;
  v172.i64[0] = 0x3F0000003F000000;
  v172.i64[1] = 0x3F0000003F000000;
  if (!v13[8086])
  {
    v10.i8[0] = v13[8083];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8084];
    v173 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v173.i32 = (float)v173.i32[0];
    v10.i32[1] = v173.i32[0];
    v173.i8[0] = v13[8085];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v173)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v171 = vaddq_f32(v171, v172);
    v172 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v174 = vaddq_f32(v171, v172);
  if (v170 <= 0)
  {
    v172.i64[0] = *(_QWORD *)v21;
    v172.i32[2] = *(_DWORD *)(v21 + 8);
    v175 = (int8x16_t)vmlsq_lane_f32(v172, v174, v16, 0);
    v10.i64[0] = vextq_s8(v175, v175, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v175.i8, *(float32x2_t *)v175.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v175.i8, 1), *(float32x2_t *)v175.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v176 = v13[8086] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v176;
      if (v170)
        return 0;
    }
  }
  v177 = (char)v13[8126];
  v178 = a4;
  v178.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v178.f32 = vcvt_f32_s32(*(int32x2_t *)v178.f32);
  v178.f32[2] = (float)v162;
  v179.i64[0] = 0x3F0000003F000000;
  v179.i64[1] = 0x3F0000003F000000;
  if (!v13[8126])
  {
    v10.i8[0] = v13[8123];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8124];
    v180 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v180.i32 = (float)v180.i32[0];
    v10.i32[1] = v180.i32[0];
    v180.i8[0] = v13[8125];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v180)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v178 = vaddq_f32(v178, v179);
    v179 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v181 = vaddq_f32(v178, v179);
  if (v177 <= 0)
  {
    v179.i64[0] = *(_QWORD *)v21;
    v179.i32[2] = *(_DWORD *)(v21 + 8);
    v182 = (int8x16_t)vmlsq_lane_f32(v179, v181, v16, 0);
    v10.i64[0] = vextq_s8(v182, v182, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v182.i8, *(float32x2_t *)v182.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v182.i8, 1), *(float32x2_t *)v182.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v183 = v13[8126] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v183;
      if (v177)
        return 0;
    }
  }
  v184 = (char)v13[8166];
  *(float32x2_t *)v181.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v129));
  v181.f32[2] = (float)v154;
  v185.i64[0] = 0x3F0000003F000000;
  v185.i64[1] = 0x3F0000003F000000;
  if (!v13[8166])
  {
    v10.i8[0] = v13[8163];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8164];
    v186 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v186.i32 = (float)v186.i32[0];
    v10.i32[1] = v186.i32[0];
    v186.i8[0] = v13[8165];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v186)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v181 = vaddq_f32(v181, v185);
    v185 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v187 = vaddq_f32(v181, v185);
  if (v184 <= 0)
  {
    v185.i64[0] = *(_QWORD *)v21;
    v185.i32[2] = *(_DWORD *)(v21 + 8);
    v188 = (int8x16_t)vmlsq_lane_f32(v185, v187, v16, 0);
    v10.i64[0] = vextq_s8(v188, v188, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v188.i8, *(float32x2_t *)v188.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v188.i8, 1), *(float32x2_t *)v188.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v189 = v13[8166] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v189;
      if (v184)
        return 0;
    }
  }
  v190 = (char)v13[8206];
  *(float32x2_t *)v187.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v129));
  v187.f32[2] = (float)v162;
  v191.i64[0] = 0x3F0000003F000000;
  v191.i64[1] = 0x3F0000003F000000;
  if (!v13[8206])
  {
    v10.i8[0] = v13[8203];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8204];
    v192 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v192.i32 = (float)v192.i32[0];
    v10.i32[1] = v192.i32[0];
    v192.i8[0] = v13[8205];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v192)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v187 = vaddq_f32(v187, v191);
    v191 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v193 = vaddq_f32(v187, v191);
  if (v190 <= 0)
  {
    v191.i64[0] = *(_QWORD *)v21;
    v191.i32[2] = *(_DWORD *)(v21 + 8);
    v194 = (int8x16_t)vmlsq_lane_f32(v191, v193, v16, 0);
    v10.i64[0] = vextq_s8(v194, v194, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v194.i8, *(float32x2_t *)v194.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v194.i8, 1), *(float32x2_t *)v194.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v195 = v13[8206] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v195;
      if (v190)
        return 0;
    }
  }
  v196 = (char)v13[8246];
  *(float32x2_t *)v193.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v129));
  v193.f32[2] = (float)v154;
  v197.i64[0] = 0x3F0000003F000000;
  v197.i64[1] = 0x3F0000003F000000;
  if (!v13[8246])
  {
    v10.i8[0] = v13[8243];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8244];
    v198 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v198.i32 = (float)v198.i32[0];
    v10.i32[1] = v198.i32[0];
    v198.i8[0] = v13[8245];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v198)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v193 = vaddq_f32(v193, v197);
    v197 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v199 = vaddq_f32(v193, v197);
  if (v196 <= 0)
  {
    v197.i64[0] = *(_QWORD *)v21;
    v197.i32[2] = *(_DWORD *)(v21 + 8);
    v200 = (int8x16_t)vmlsq_lane_f32(v197, v199, v16, 0);
    v10.i64[0] = vextq_s8(v200, v200, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v200.i8, *(float32x2_t *)v200.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v200.i8, 1), *(float32x2_t *)v200.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v201 = v13[8246] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v201;
      if (v196)
        return 0;
    }
  }
  v202 = (char)v13[8286];
  *(float32x2_t *)v199.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v129));
  v199.f32[2] = (float)v162;
  v203.i64[0] = 0x3F0000003F000000;
  v203.i64[1] = 0x3F0000003F000000;
  if (!v13[8286])
  {
    v10.i8[0] = v13[8283];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8284];
    v204 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v204.i32 = (float)v204.i32[0];
    v10.i32[1] = v204.i32[0];
    v204.i8[0] = v13[8285];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v204)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v199 = vaddq_f32(v199, v203);
    v203 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v205 = vaddq_f32(v199, v203);
  if (v202 <= 0)
  {
    v203.i64[0] = *(_QWORD *)v21;
    v203.i32[2] = *(_DWORD *)(v21 + 8);
    v206 = (int8x16_t)vmlsq_lane_f32(v203, v205, v16, 0);
    v10.i64[0] = vextq_s8(v206, v206, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v206.i8, *(float32x2_t *)v206.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v206.i8, 1), *(float32x2_t *)v206.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v207 = v13[8286] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v207;
      if (v202)
        return 0;
    }
  }
  v208 = (char)v13[8326];
  *(float32x2_t *)v205.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x600000000));
  v205.f32[2] = (float)v95;
  v209.i64[0] = 0x3F0000003F000000;
  v209.i64[1] = 0x3F0000003F000000;
  if (!v13[8326])
  {
    v10.i8[0] = v13[8323];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8324];
    v210 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v210.i32 = (float)v210.i32[0];
    v10.i32[1] = v210.i32[0];
    v210.i8[0] = v13[8325];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v210)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v205 = vaddq_f32(v205, v209);
    v209 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v211 = vaddq_f32(v205, v209);
  if (v208 <= 0)
  {
    v209.i64[0] = *(_QWORD *)v21;
    v209.i32[2] = *(_DWORD *)(v21 + 8);
    v212 = (int8x16_t)vmlsq_lane_f32(v209, v211, v16, 0);
    v10.i64[0] = vextq_s8(v212, v212, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v212.i8, *(float32x2_t *)v212.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v212.i8, 1), *(float32x2_t *)v212.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v213 = v13[8326] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v213;
      if (v208)
        return 0;
    }
  }
  v214 = (char)v13[8366];
  *(float32x2_t *)v211.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x600000000));
  v211.f32[2] = (float)v106;
  v215.i64[0] = 0x3F0000003F000000;
  v215.i64[1] = 0x3F0000003F000000;
  if (!v13[8366])
  {
    v10.i8[0] = v13[8363];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8364];
    v216 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v216.i32 = (float)v216.i32[0];
    v10.i32[1] = v216.i32[0];
    v216.i8[0] = v13[8365];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v216)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v211 = vaddq_f32(v211, v215);
    v215 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v217 = vaddq_f32(v211, v215);
  if (v214 <= 0)
  {
    v215.i64[0] = *(_QWORD *)v21;
    v215.i32[2] = *(_DWORD *)(v21 + 8);
    v218 = (int8x16_t)vmlsq_lane_f32(v215, v217, v16, 0);
    v10.i64[0] = vextq_s8(v218, v218, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v218.i8, *(float32x2_t *)v218.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v218.i8, 1), *(float32x2_t *)v218.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v219 = v13[8366] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v219;
      if (v214)
        return 0;
    }
  }
  v220 = (char)v13[8406];
  v221 = a4;
  v221.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v221.f32 = vcvt_f32_s32(*(int32x2_t *)v221.f32);
  v221.f32[2] = (float)v95;
  v222.i64[0] = 0x3F0000003F000000;
  v222.i64[1] = 0x3F0000003F000000;
  if (!v13[8406])
  {
    v10.i8[0] = v13[8403];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8404];
    v223 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v223.i32 = (float)v223.i32[0];
    v10.i32[1] = v223.i32[0];
    v223.i8[0] = v13[8405];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v223)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v221 = vaddq_f32(v221, v222);
    v222 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v224 = vaddq_f32(v221, v222);
  if (v220 <= 0)
  {
    v222.i64[0] = *(_QWORD *)v21;
    v222.i32[2] = *(_DWORD *)(v21 + 8);
    v225 = (int8x16_t)vmlsq_lane_f32(v222, v224, v16, 0);
    v10.i64[0] = vextq_s8(v225, v225, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v225.i8, *(float32x2_t *)v225.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v225.i8, 1), *(float32x2_t *)v225.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v226 = v13[8406] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v226;
      if (v220)
        return 0;
    }
  }
  v227 = (char)v13[8446];
  v228 = a4;
  v228.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v228.f32 = vcvt_f32_s32(*(int32x2_t *)v228.f32);
  v228.f32[2] = (float)v106;
  v229.i64[0] = 0x3F0000003F000000;
  v229.i64[1] = 0x3F0000003F000000;
  if (!v13[8446])
  {
    v10.i8[0] = v13[8443];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8444];
    v230 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v230.i32 = (float)v230.i32[0];
    v10.i32[1] = v230.i32[0];
    v230.i8[0] = v13[8445];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v230)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v228 = vaddq_f32(v228, v229);
    v229 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v231 = vaddq_f32(v228, v229);
  if (v227 <= 0)
  {
    v229.i64[0] = *(_QWORD *)v21;
    v229.i32[2] = *(_DWORD *)(v21 + 8);
    v232 = (int8x16_t)vmlsq_lane_f32(v229, v231, v16, 0);
    v10.i64[0] = vextq_s8(v232, v232, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v232.i8, *(float32x2_t *)v232.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v232.i8, 1), *(float32x2_t *)v232.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v233 = v13[8446] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v233;
      if (v227)
        return 0;
    }
  }
  v234 = (char)v13[8486];
  v235 = a7;
  v235.i32[0] = a4.i32[0] + 1;
  *(float32x2_t *)v235.f32 = vcvt_f32_s32(*(int32x2_t *)v235.f32);
  v235.f32[2] = (float)v95;
  v236.i64[0] = 0x3F0000003F000000;
  v236.i64[1] = 0x3F0000003F000000;
  if (!v13[8486])
  {
    v10.i8[0] = v13[8483];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8484];
    v237 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v237.i32 = (float)v237.i32[0];
    v10.i32[1] = v237.i32[0];
    v237.i8[0] = v13[8485];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v237)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v235 = vaddq_f32(v235, v236);
    v236 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v238 = vaddq_f32(v235, v236);
  if (v234 <= 0)
  {
    v236.i64[0] = *(_QWORD *)v21;
    v236.i32[2] = *(_DWORD *)(v21 + 8);
    v239 = (int8x16_t)vmlsq_lane_f32(v236, v238, v16, 0);
    v10.i64[0] = vextq_s8(v239, v239, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v239.i8, *(float32x2_t *)v239.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v239.i8, 1), *(float32x2_t *)v239.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v240 = v13[8486] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v240;
      if (v234)
        return 0;
    }
  }
  v241 = (char)v13[8526];
  v242 = a7;
  v242.i32[0] = a4.i32[0] + 1;
  *(float32x2_t *)v242.f32 = vcvt_f32_s32(*(int32x2_t *)v242.f32);
  v242.f32[2] = (float)v106;
  v243.i64[0] = 0x3F0000003F000000;
  v243.i64[1] = 0x3F0000003F000000;
  if (!v13[8526])
  {
    v10.i8[0] = v13[8523];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8524];
    v244 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v244.i32 = (float)v244.i32[0];
    v10.i32[1] = v244.i32[0];
    v244.i8[0] = v13[8525];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v244)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v242 = vaddq_f32(v242, v243);
    v243 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v245 = vaddq_f32(v242, v243);
  if (v241 <= 0)
  {
    v243.i64[0] = *(_QWORD *)v21;
    v243.i32[2] = *(_DWORD *)(v21 + 8);
    v246 = (int8x16_t)vmlsq_lane_f32(v243, v245, v16, 0);
    v10.i64[0] = vextq_s8(v246, v246, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v246.i8, *(float32x2_t *)v246.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v246.i8, 1), *(float32x2_t *)v246.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v247 = v13[8526] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v247;
      if (v241)
        return 0;
    }
  }
  v248 = (char)v13[8566];
  *(float32x2_t *)v245.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v129));
  v245.f32[2] = (float)v95;
  v249.i64[0] = 0x3F0000003F000000;
  v249.i64[1] = 0x3F0000003F000000;
  if (!v13[8566])
  {
    v10.i8[0] = v13[8563];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8564];
    v250 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v250.i32 = (float)v250.i32[0];
    v10.i32[1] = v250.i32[0];
    v250.i8[0] = v13[8565];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v250)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v245 = vaddq_f32(v245, v249);
    v249 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v251 = vaddq_f32(v245, v249);
  if (v248 <= 0)
  {
    v249.i64[0] = *(_QWORD *)v21;
    v249.i32[2] = *(_DWORD *)(v21 + 8);
    v252 = (int8x16_t)vmlsq_lane_f32(v249, v251, v16, 0);
    v10.i64[0] = vextq_s8(v252, v252, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v252.i8, *(float32x2_t *)v252.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v252.i8, 1), *(float32x2_t *)v252.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v253 = v13[8566] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v253;
      if (v248)
        return 0;
    }
  }
  v254 = (char)v13[8606];
  *(float32x2_t *)v251.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v129));
  v251.f32[2] = (float)v106;
  v255.i64[0] = 0x3F0000003F000000;
  v255.i64[1] = 0x3F0000003F000000;
  if (!v13[8606])
  {
    v10.i8[0] = v13[8603];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8604];
    v256 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v256.i32 = (float)v256.i32[0];
    v10.i32[1] = v256.i32[0];
    v256.i8[0] = v13[8605];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v256)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v251 = vaddq_f32(v251, v255);
    v255 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v257 = vaddq_f32(v251, v255);
  if (v254 <= 0)
  {
    v255.i64[0] = *(_QWORD *)v21;
    v255.i32[2] = *(_DWORD *)(v21 + 8);
    v258 = (int8x16_t)vmlsq_lane_f32(v255, v257, v16, 0);
    v10.i64[0] = vextq_s8(v258, v258, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v258.i8, *(float32x2_t *)v258.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v258.i8, 1), *(float32x2_t *)v258.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v259 = v13[8606] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v259;
      if (v254)
        return 0;
    }
  }
  v260 = (char)v13[8646];
  *(float32x2_t *)v257.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x600000000));
  v257.f32[2] = (float)v154;
  v261.i64[0] = 0x3F0000003F000000;
  v261.i64[1] = 0x3F0000003F000000;
  if (!v13[8646])
  {
    v10.i8[0] = v13[8643];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8644];
    v262 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v262.i32 = (float)v262.i32[0];
    v10.i32[1] = v262.i32[0];
    v262.i8[0] = v13[8645];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v262)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v257 = vaddq_f32(v257, v261);
    v261 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v263 = vaddq_f32(v257, v261);
  if (v260 <= 0)
  {
    v261.i64[0] = *(_QWORD *)v21;
    v261.i32[2] = *(_DWORD *)(v21 + 8);
    v264 = (int8x16_t)vmlsq_lane_f32(v261, v263, v16, 0);
    v10.i64[0] = vextq_s8(v264, v264, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v264.i8, *(float32x2_t *)v264.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v264.i8, 1), *(float32x2_t *)v264.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v265 = v13[8646] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v265;
      if (v260)
        return 0;
    }
  }
  v266 = (char)v13[8686];
  *(float32x2_t *)v263.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a4.f32, (int32x2_t)0x600000000));
  v263.f32[2] = (float)v162;
  v267.i64[0] = 0x3F0000003F000000;
  v267.i64[1] = 0x3F0000003F000000;
  if (!v13[8686])
  {
    v10.i8[0] = v13[8683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8684];
    v268 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v268.i32 = (float)v268.i32[0];
    v10.i32[1] = v268.i32[0];
    v268.i8[0] = v13[8685];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v268)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v263 = vaddq_f32(v263, v267);
    v267 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v269 = vaddq_f32(v263, v267);
  if (v266 <= 0)
  {
    v267.i64[0] = *(_QWORD *)v21;
    v267.i32[2] = *(_DWORD *)(v21 + 8);
    v270 = (int8x16_t)vmlsq_lane_f32(v267, v269, v16, 0);
    v10.i64[0] = vextq_s8(v270, v270, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v270.i8, *(float32x2_t *)v270.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v270.i8, 1), *(float32x2_t *)v270.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v271 = v13[8686] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v271;
      if (v266)
        return 0;
    }
  }
  v272 = (char)v13[8726];
  v273 = a4;
  v273.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v273.f32 = vcvt_f32_s32(*(int32x2_t *)v273.f32);
  v273.f32[2] = (float)v154;
  v274.i64[0] = 0x3F0000003F000000;
  v274.i64[1] = 0x3F0000003F000000;
  if (!v13[8726])
  {
    v10.i8[0] = v13[8723];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8724];
    v275 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v275.i32 = (float)v275.i32[0];
    v10.i32[1] = v275.i32[0];
    v275.i8[0] = v13[8725];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v275)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v273 = vaddq_f32(v273, v274);
    v274 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v276 = vaddq_f32(v273, v274);
  if (v272 <= 0)
  {
    v274.i64[0] = *(_QWORD *)v21;
    v274.i32[2] = *(_DWORD *)(v21 + 8);
    v277 = (int8x16_t)vmlsq_lane_f32(v274, v276, v16, 0);
    v10.i64[0] = vextq_s8(v277, v277, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v277.i8, *(float32x2_t *)v277.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v277.i8, 1), *(float32x2_t *)v277.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v278 = v13[8726] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v278;
      if (v272)
        return 0;
    }
  }
  v279 = (char)v13[8766];
  v280 = a4;
  v280.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v280.f32 = vcvt_f32_s32(*(int32x2_t *)v280.f32);
  v280.f32[2] = (float)v162;
  v281.i64[0] = 0x3F0000003F000000;
  v281.i64[1] = 0x3F0000003F000000;
  if (!v13[8766])
  {
    v10.i8[0] = v13[8763];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8764];
    v282 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v282.i32 = (float)v282.i32[0];
    v10.i32[1] = v282.i32[0];
    v282.i8[0] = v13[8765];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v282)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v280 = vaddq_f32(v280, v281);
    v281 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v283 = vaddq_f32(v280, v281);
  if (v279 <= 0)
  {
    v281.i64[0] = *(_QWORD *)v21;
    v281.i32[2] = *(_DWORD *)(v21 + 8);
    v284 = (int8x16_t)vmlsq_lane_f32(v281, v283, v16, 0);
    v10.i64[0] = vextq_s8(v284, v284, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v284.i8, *(float32x2_t *)v284.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v284.i8, 1), *(float32x2_t *)v284.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v285 = v13[8766] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v285;
      if (v279)
        return 0;
    }
  }
  v286 = (char)v13[8806];
  v287 = a7;
  v287.i32[0] = a4.i32[0] + 1;
  *(float32x2_t *)v287.f32 = vcvt_f32_s32(*(int32x2_t *)v287.f32);
  v287.f32[2] = (float)v154;
  v288.i64[0] = 0x3F0000003F000000;
  v288.i64[1] = 0x3F0000003F000000;
  if (!v13[8806])
  {
    v10.i8[0] = v13[8803];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8804];
    v289 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v289.i32 = (float)v289.i32[0];
    v10.i32[1] = v289.i32[0];
    v289.i8[0] = v13[8805];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v289)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v287 = vaddq_f32(v287, v288);
    v288 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v290 = vaddq_f32(v287, v288);
  if (v286 <= 0)
  {
    v288.i64[0] = *(_QWORD *)v21;
    v288.i32[2] = *(_DWORD *)(v21 + 8);
    v291 = (int8x16_t)vmlsq_lane_f32(v288, v290, v16, 0);
    v10.i64[0] = vextq_s8(v291, v291, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v291.i8, *(float32x2_t *)v291.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v291.i8, 1), *(float32x2_t *)v291.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v292 = v13[8806] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v292;
      if (v286)
        return 0;
    }
  }
  v293 = (char)v13[8846];
  v294 = a7;
  v294.i32[0] = a4.i32[0] + 1;
  *(float32x2_t *)v294.f32 = vcvt_f32_s32(*(int32x2_t *)v294.f32);
  v294.f32[2] = (float)v162;
  v295.i64[0] = 0x3F0000003F000000;
  v295.i64[1] = 0x3F0000003F000000;
  if (!v13[8846])
  {
    v10.i8[0] = v13[8843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8844];
    v296 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v296.i32 = (float)v296.i32[0];
    v10.i32[1] = v296.i32[0];
    v296.i8[0] = v13[8845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v296)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v294 = vaddq_f32(v294, v295);
    v295 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v297 = vaddq_f32(v294, v295);
  if (v293 <= 0)
  {
    v295.i64[0] = *(_QWORD *)v21;
    v295.i32[2] = *(_DWORD *)(v21 + 8);
    v298 = (int8x16_t)vmlsq_lane_f32(v295, v297, v16, 0);
    v10.i64[0] = vextq_s8(v298, v298, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v298.i8, *(float32x2_t *)v298.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v298.i8, 1), *(float32x2_t *)v298.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v299 = v13[8846] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v299;
      if (v293)
        return 0;
    }
  }
  v300 = (char)v13[8886];
  *(float32x2_t *)v297.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v129));
  v297.f32[2] = (float)v154;
  v301.i64[0] = 0x3F0000003F000000;
  v301.i64[1] = 0x3F0000003F000000;
  if (!v13[8886])
  {
    v10.i8[0] = v13[8883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8884];
    v302 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v302.i32 = (float)v302.i32[0];
    v10.i32[1] = v302.i32[0];
    v302.i8[0] = v13[8885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v302)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v297 = vaddq_f32(v297, v301);
    v301 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v303 = vaddq_f32(v297, v301);
  if (v300 <= 0)
  {
    v301.i64[0] = *(_QWORD *)v21;
    v301.i32[2] = *(_DWORD *)(v21 + 8);
    v304 = (int8x16_t)vmlsq_lane_f32(v301, v303, v16, 0);
    v10.i64[0] = vextq_s8(v304, v304, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v304.i8, *(float32x2_t *)v304.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v304.i8, 1), *(float32x2_t *)v304.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v305 = v13[8886] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v305;
      if (v300)
        return 0;
    }
  }
  v306 = (char)v13[8926];
  *(float32x2_t *)v303.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v129));
  v303.f32[2] = (float)v162;
  v307.i64[0] = 0x3F0000003F000000;
  v307.i64[1] = 0x3F0000003F000000;
  if (!v13[8926])
  {
    v10.i8[0] = v13[8923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8924];
    v308 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v308.i32 = (float)v308.i32[0];
    v10.i32[1] = v308.i32[0];
    v308.i8[0] = v13[8925];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v308)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v303 = vaddq_f32(v303, v307);
    v307 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v309 = vaddq_f32(v303, v307);
  if (v306 <= 0)
  {
    v307.i64[0] = *(_QWORD *)v21;
    v307.i32[2] = *(_DWORD *)(v21 + 8);
    v310 = (int8x16_t)vmlsq_lane_f32(v307, v309, v16, 0);
    v10.i64[0] = vextq_s8(v310, v310, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v310.i8, *(float32x2_t *)v310.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v310.i8, 1), *(float32x2_t *)v310.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v311 = v13[8926] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v311;
      if (v306)
        return 0;
    }
  }
  v312 = (char)v13[8966];
  v313 = a7;
  v313.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v313.f32 = vcvt_f32_s32(*(int32x2_t *)v313.f32);
  v313.f32[2] = (float)v95;
  v314.i64[0] = 0x3F0000003F000000;
  v314.i64[1] = 0x3F0000003F000000;
  if (!v13[8966])
  {
    v10.i8[0] = v13[8963];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[8964];
    v315 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v315.i32 = (float)v315.i32[0];
    v10.i32[1] = v315.i32[0];
    v315.i8[0] = v13[8965];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v315)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v313 = vaddq_f32(v313, v314);
    v314 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v316 = vaddq_f32(v313, v314);
  if (v312 <= 0)
  {
    v314.i64[0] = *(_QWORD *)v21;
    v314.i32[2] = *(_DWORD *)(v21 + 8);
    v317 = (int8x16_t)vmlsq_lane_f32(v314, v316, v16, 0);
    v10.i64[0] = vextq_s8(v317, v317, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v317.i8, *(float32x2_t *)v317.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v317.i8, 1), *(float32x2_t *)v317.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v318 = v13[8966] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v318;
      if (v312)
        return 0;
    }
  }
  v319 = (char)v13[9006];
  v320 = a7;
  v320.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v320.f32 = vcvt_f32_s32(*(int32x2_t *)v320.f32);
  v320.f32[2] = (float)v106;
  v321.i64[0] = 0x3F0000003F000000;
  v321.i64[1] = 0x3F0000003F000000;
  if (!v13[9006])
  {
    v10.i8[0] = v13[9003];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9004];
    v322 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v322.i32 = (float)v322.i32[0];
    v10.i32[1] = v322.i32[0];
    v322.i8[0] = v13[9005];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v322)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v320 = vaddq_f32(v320, v321);
    v321 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v323 = vaddq_f32(v320, v321);
  if (v319 <= 0)
  {
    v321.i64[0] = *(_QWORD *)v21;
    v321.i32[2] = *(_DWORD *)(v21 + 8);
    v324 = (int8x16_t)vmlsq_lane_f32(v321, v323, v16, 0);
    v10.i64[0] = vextq_s8(v324, v324, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v324.i8, *(float32x2_t *)v324.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v324.i8, 1), *(float32x2_t *)v324.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v325 = v13[9006] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v325;
      if (v319)
        return 0;
    }
  }
  v326 = (char)v13[9046];
  v327 = a7;
  v327.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v327.f32 = vcvt_f32_s32(*(int32x2_t *)v327.f32);
  v327.f32[2] = (float)v95;
  v328.i64[0] = 0x3F0000003F000000;
  v328.i64[1] = 0x3F0000003F000000;
  if (!v13[9046])
  {
    v10.i8[0] = v13[9043];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9044];
    v329 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v329.i32 = (float)v329.i32[0];
    v10.i32[1] = v329.i32[0];
    v329.i8[0] = v13[9045];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v329)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v327 = vaddq_f32(v327, v328);
    v328 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v330 = vaddq_f32(v327, v328);
  if (v326 <= 0)
  {
    v328.i64[0] = *(_QWORD *)v21;
    v328.i32[2] = *(_DWORD *)(v21 + 8);
    v331 = (int8x16_t)vmlsq_lane_f32(v328, v330, v16, 0);
    v10.i64[0] = vextq_s8(v331, v331, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v331.i8, *(float32x2_t *)v331.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v331.i8, 1), *(float32x2_t *)v331.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v332 = v13[9046] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v332;
      if (v326)
        return 0;
    }
  }
  v333 = (char)v13[9086];
  v334 = a7;
  v334.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v334.f32 = vcvt_f32_s32(*(int32x2_t *)v334.f32);
  v334.f32[2] = (float)v106;
  v335.i64[0] = 0x3F0000003F000000;
  v335.i64[1] = 0x3F0000003F000000;
  if (!v13[9086])
  {
    v10.i8[0] = v13[9083];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9084];
    v336 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v336.i32 = (float)v336.i32[0];
    v10.i32[1] = v336.i32[0];
    v336.i8[0] = v13[9085];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v336)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v334 = vaddq_f32(v334, v335);
    v335 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v337 = vaddq_f32(v334, v335);
  if (v333 <= 0)
  {
    v335.i64[0] = *(_QWORD *)v21;
    v335.i32[2] = *(_DWORD *)(v21 + 8);
    v338 = (int8x16_t)vmlsq_lane_f32(v335, v337, v16, 0);
    v10.i64[0] = vextq_s8(v338, v338, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v338.i8, *(float32x2_t *)v338.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v338.i8, 1), *(float32x2_t *)v338.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v339 = v13[9086] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v339;
      if (v333)
        return 0;
    }
  }
  v340 = (char)v13[9126];
  *(float32x2_t *)v337.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v57));
  v337.f32[2] = (float)v95;
  v341.i64[0] = 0x3F0000003F000000;
  v341.i64[1] = 0x3F0000003F000000;
  if (!v13[9126])
  {
    v10.i8[0] = v13[9123];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9124];
    v342 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v342.i32 = (float)v342.i32[0];
    v10.i32[1] = v342.i32[0];
    v342.i8[0] = v13[9125];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v342)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v337 = vaddq_f32(v337, v341);
    v341 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v343 = vaddq_f32(v337, v341);
  if (v340 <= 0)
  {
    v341.i64[0] = *(_QWORD *)v21;
    v341.i32[2] = *(_DWORD *)(v21 + 8);
    v344 = (int8x16_t)vmlsq_lane_f32(v341, v343, v16, 0);
    v10.i64[0] = vextq_s8(v344, v344, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v344.i8, *(float32x2_t *)v344.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v344.i8, 1), *(float32x2_t *)v344.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v345 = v13[9126] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v345;
      if (v340)
        return 0;
    }
  }
  v346 = (char)v13[9166];
  *(float32x2_t *)v343.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v57));
  v343.f32[2] = (float)v106;
  v347.i64[0] = 0x3F0000003F000000;
  v347.i64[1] = 0x3F0000003F000000;
  if (!v13[9166])
  {
    v10.i8[0] = v13[9163];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9164];
    v348 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v348.i32 = (float)v348.i32[0];
    v10.i32[1] = v348.i32[0];
    v348.i8[0] = v13[9165];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v348)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v343 = vaddq_f32(v343, v347);
    v347 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v349 = vaddq_f32(v343, v347);
  if (v346 <= 0)
  {
    v347.i64[0] = *(_QWORD *)v21;
    v347.i32[2] = *(_DWORD *)(v21 + 8);
    v350 = (int8x16_t)vmlsq_lane_f32(v347, v349, v16, 0);
    v10.i64[0] = vextq_s8(v350, v350, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v350.i8, *(float32x2_t *)v350.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v350.i8, 1), *(float32x2_t *)v350.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v351 = v13[9166] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v351;
      if (v346)
        return 0;
    }
  }
  v352 = (char)v13[9206];
  *(float32x2_t *)v349.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v57));
  v349.f32[2] = (float)v95;
  v353.i64[0] = 0x3F0000003F000000;
  v353.i64[1] = 0x3F0000003F000000;
  if (!v13[9206])
  {
    v10.i8[0] = v13[9203];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9204];
    v354 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v354.i32 = (float)v354.i32[0];
    v10.i32[1] = v354.i32[0];
    v354.i8[0] = v13[9205];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v354)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v349 = vaddq_f32(v349, v353);
    v353 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v355 = vaddq_f32(v349, v353);
  if (v352 <= 0)
  {
    v353.i64[0] = *(_QWORD *)v21;
    v353.i32[2] = *(_DWORD *)(v21 + 8);
    v356 = (int8x16_t)vmlsq_lane_f32(v353, v355, v16, 0);
    v10.i64[0] = vextq_s8(v356, v356, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v356.i8, *(float32x2_t *)v356.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v356.i8, 1), *(float32x2_t *)v356.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v357 = v13[9206] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v357;
      if (v352)
        return 0;
    }
  }
  v358 = (char)v13[9246];
  *(float32x2_t *)v355.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v57));
  v355.f32[2] = (float)v106;
  v359.i64[0] = 0x3F0000003F000000;
  v359.i64[1] = 0x3F0000003F000000;
  if (!v13[9246])
  {
    v10.i8[0] = v13[9243];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9244];
    v360 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v360.i32 = (float)v360.i32[0];
    v10.i32[1] = v360.i32[0];
    v360.i8[0] = v13[9245];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v360)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v355 = vaddq_f32(v355, v359);
    v359 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v361 = vaddq_f32(v355, v359);
  if (v358 <= 0)
  {
    v359.i64[0] = *(_QWORD *)v21;
    v359.i32[2] = *(_DWORD *)(v21 + 8);
    v362 = (int8x16_t)vmlsq_lane_f32(v359, v361, v16, 0);
    v10.i64[0] = vextq_s8(v362, v362, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v362.i8, *(float32x2_t *)v362.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v362.i8, 1), *(float32x2_t *)v362.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v363 = v13[9246] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v363;
      if (v358)
        return 0;
    }
  }
  v364 = (char)v13[9286];
  v365 = a7;
  v365.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v365.f32 = vcvt_f32_s32(*(int32x2_t *)v365.f32);
  v365.f32[2] = (float)v154;
  v366.i64[0] = 0x3F0000003F000000;
  v366.i64[1] = 0x3F0000003F000000;
  if (!v13[9286])
  {
    v10.i8[0] = v13[9283];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9284];
    v367 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v367.i32 = (float)v367.i32[0];
    v10.i32[1] = v367.i32[0];
    v367.i8[0] = v13[9285];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v367)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v365 = vaddq_f32(v365, v366);
    v366 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v368 = vaddq_f32(v365, v366);
  if (v364 <= 0)
  {
    v366.i64[0] = *(_QWORD *)v21;
    v366.i32[2] = *(_DWORD *)(v21 + 8);
    v369 = (int8x16_t)vmlsq_lane_f32(v366, v368, v16, 0);
    v10.i64[0] = vextq_s8(v369, v369, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v369.i8, *(float32x2_t *)v369.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v369.i8, 1), *(float32x2_t *)v369.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v370 = v13[9286] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v370;
      if (v364)
        return 0;
    }
  }
  v371 = (char)v13[9326];
  v372 = a7;
  v372.i32[1] = a4.i32[1] + 4;
  *(float32x2_t *)v372.f32 = vcvt_f32_s32(*(int32x2_t *)v372.f32);
  v372.f32[2] = (float)v162;
  v373.i64[0] = 0x3F0000003F000000;
  v373.i64[1] = 0x3F0000003F000000;
  if (!v13[9326])
  {
    v10.i8[0] = v13[9323];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9324];
    v374 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v374.i32 = (float)v374.i32[0];
    v10.i32[1] = v374.i32[0];
    v374.i8[0] = v13[9325];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v374)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v372 = vaddq_f32(v372, v373);
    v373 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v375 = vaddq_f32(v372, v373);
  if (v371 <= 0)
  {
    v373.i64[0] = *(_QWORD *)v21;
    v373.i32[2] = *(_DWORD *)(v21 + 8);
    v376 = (int8x16_t)vmlsq_lane_f32(v373, v375, v16, 0);
    v10.i64[0] = vextq_s8(v376, v376, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v376.i8, *(float32x2_t *)v376.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v376.i8, 1), *(float32x2_t *)v376.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v377 = v13[9326] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v377;
      if (v371)
        return 0;
    }
  }
  v378 = (char)v13[9366];
  v379 = a7;
  v379.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v379.f32 = vcvt_f32_s32(*(int32x2_t *)v379.f32);
  v379.f32[2] = (float)v154;
  v380.i64[0] = 0x3F0000003F000000;
  v380.i64[1] = 0x3F0000003F000000;
  if (!v13[9366])
  {
    v10.i8[0] = v13[9363];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9364];
    v381 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v381.i32 = (float)v381.i32[0];
    v10.i32[1] = v381.i32[0];
    v381.i8[0] = v13[9365];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v381)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v379 = vaddq_f32(v379, v380);
    v380 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v382 = vaddq_f32(v379, v380);
  if (v378 <= 0)
  {
    v380.i64[0] = *(_QWORD *)v21;
    v380.i32[2] = *(_DWORD *)(v21 + 8);
    v383 = (int8x16_t)vmlsq_lane_f32(v380, v382, v16, 0);
    v10.i64[0] = vextq_s8(v383, v383, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v383.i8, *(float32x2_t *)v383.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v383.i8, 1), *(float32x2_t *)v383.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v384 = v13[9366] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v384;
      if (v378)
        return 0;
    }
  }
  v385 = (char)v13[9406];
  v386 = a7;
  v386.i32[1] = a4.i32[1] + 5;
  *(float32x2_t *)v386.f32 = vcvt_f32_s32(*(int32x2_t *)v386.f32);
  v386.f32[2] = (float)v162;
  v387.i64[0] = 0x3F0000003F000000;
  v387.i64[1] = 0x3F0000003F000000;
  if (!v13[9406])
  {
    v10.i8[0] = v13[9403];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9404];
    v388 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v388.i32 = (float)v388.i32[0];
    v10.i32[1] = v388.i32[0];
    v388.i8[0] = v13[9405];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v388)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v386 = vaddq_f32(v386, v387);
    v387 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v389 = vaddq_f32(v386, v387);
  if (v385 <= 0)
  {
    v387.i64[0] = *(_QWORD *)v21;
    v387.i32[2] = *(_DWORD *)(v21 + 8);
    v390 = (int8x16_t)vmlsq_lane_f32(v387, v389, v16, 0);
    v10.i64[0] = vextq_s8(v390, v390, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v390.i8, *(float32x2_t *)v390.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v390.i8, 1), *(float32x2_t *)v390.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v391 = v13[9406] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v391;
      if (v385)
        return 0;
    }
  }
  v392 = (char)v13[9446];
  *(float32x2_t *)v389.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v57));
  v389.f32[2] = (float)v154;
  v393.i64[0] = 0x3F0000003F000000;
  v393.i64[1] = 0x3F0000003F000000;
  if (!v13[9446])
  {
    v10.i8[0] = v13[9443];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9444];
    v394 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v394.i32 = (float)v394.i32[0];
    v10.i32[1] = v394.i32[0];
    v394.i8[0] = v13[9445];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v394)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v389 = vaddq_f32(v389, v393);
    v393 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v395 = vaddq_f32(v389, v393);
  if (v392 <= 0)
  {
    v393.i64[0] = *(_QWORD *)v21;
    v393.i32[2] = *(_DWORD *)(v21 + 8);
    v396 = (int8x16_t)vmlsq_lane_f32(v393, v395, v16, 0);
    v10.i64[0] = vextq_s8(v396, v396, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v396.i8, *(float32x2_t *)v396.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v396.i8, 1), *(float32x2_t *)v396.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v397 = v13[9446] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v397;
      if (v392)
        return 0;
    }
  }
  v398 = (char)v13[9486];
  *(float32x2_t *)v395.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v94, v57));
  v395.f32[2] = (float)v162;
  v399.i64[0] = 0x3F0000003F000000;
  v399.i64[1] = 0x3F0000003F000000;
  if (!v13[9486])
  {
    v10.i8[0] = v13[9483];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9484];
    v400 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v400.i32 = (float)v400.i32[0];
    v10.i32[1] = v400.i32[0];
    v400.i8[0] = v13[9485];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v400)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v395 = vaddq_f32(v395, v399);
    v399 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v401 = vaddq_f32(v395, v399);
  if (v398 <= 0)
  {
    v399.i64[0] = *(_QWORD *)v21;
    v399.i32[2] = *(_DWORD *)(v21 + 8);
    v402 = (int8x16_t)vmlsq_lane_f32(v399, v401, v16, 0);
    v10.i64[0] = vextq_s8(v402, v402, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v402.i8, *(float32x2_t *)v402.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v402.i8, 1), *(float32x2_t *)v402.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v403 = v13[9486] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v403;
      if (v398)
        return 0;
    }
  }
  v404 = (char)v13[9526];
  *(float32x2_t *)v401.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v57));
  v401.f32[2] = (float)v154;
  v405.i64[0] = 0x3F0000003F000000;
  v405.i64[1] = 0x3F0000003F000000;
  if (!v13[9526])
  {
    v10.i8[0] = v13[9523];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9524];
    v406 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v406.i32 = (float)v406.i32[0];
    v10.i32[1] = v406.i32[0];
    v406.i8[0] = v13[9525];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v406)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v401 = vaddq_f32(v401, v405);
    v405 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v407 = vaddq_f32(v401, v405);
  if (v404 <= 0)
  {
    v405.i64[0] = *(_QWORD *)v21;
    v405.i32[2] = *(_DWORD *)(v21 + 8);
    v408 = (int8x16_t)vmlsq_lane_f32(v405, v407, v16, 0);
    v10.i64[0] = vextq_s8(v408, v408, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v408.i8, *(float32x2_t *)v408.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v408.i8, 1), *(float32x2_t *)v408.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v409 = v13[9526] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v409;
      if (v404)
        return 0;
    }
  }
  v410 = (char)v13[9566];
  *(float32x2_t *)v407.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v114, v57));
  v407.f32[2] = (float)v162;
  v411.i64[0] = 0x3F0000003F000000;
  v411.i64[1] = 0x3F0000003F000000;
  if (!v13[9566])
  {
    v10.i8[0] = v13[9563];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9564];
    v412 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v412.i32 = (float)v412.i32[0];
    v10.i32[1] = v412.i32[0];
    v412.i8[0] = v13[9565];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v412)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v407 = vaddq_f32(v407, v411);
    v411 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v413 = vaddq_f32(v407, v411);
  if (v410 <= 0)
  {
    v411.i64[0] = *(_QWORD *)v21;
    v411.i32[2] = *(_DWORD *)(v21 + 8);
    v414 = (int8x16_t)vmlsq_lane_f32(v411, v413, v16, 0);
    v10.i64[0] = vextq_s8(v414, v414, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v414.i8, *(float32x2_t *)v414.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v414.i8, 1), *(float32x2_t *)v414.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v415 = v13[9566] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v415;
      if (v410)
        return 0;
    }
  }
  v416 = (char)v13[9606];
  v417 = a8;
  v417.f32[2] = (float)v95;
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  if (v13[9606])
  {
    v419 = vaddq_f32(v417, v418);
  }
  else
  {
    v10.i8[0] = v13[9603];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9604];
    v420 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v420.i32 = (float)v420.i32[0];
    v10.i32[1] = v420.i32[0];
    v420.i8[0] = v13[9605];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v420)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v421 = vaddq_f32(v417, v418);
    v417 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v419 = vaddq_f32(v421, v417);
  }
  if (v416 <= 0)
  {
    v417.i64[0] = *(_QWORD *)v21;
    v417.i32[2] = *(_DWORD *)(v21 + 8);
    v422 = (int8x16_t)vmlsq_lane_f32(v417, v419, v16, 0);
    v10.i64[0] = vextq_s8(v422, v422, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v422.i8, *(float32x2_t *)v422.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v422.i8, 1), *(float32x2_t *)v422.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v423 = v13[9606] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v423;
      if (v416)
        return 0;
    }
  }
  v424 = (char)v13[9646];
  v425 = a8;
  v425.f32[2] = (float)v106;
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  if (v13[9646])
  {
    v427 = vaddq_f32(v425, v426);
  }
  else
  {
    v10.i8[0] = v13[9643];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9644];
    v428 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v428.i32 = (float)v428.i32[0];
    v10.i32[1] = v428.i32[0];
    v428.i8[0] = v13[9645];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v428)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v429 = vaddq_f32(v425, v426);
    v425 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v427 = vaddq_f32(v429, v425);
  }
  if (v424 <= 0)
  {
    v425.i64[0] = *(_QWORD *)v21;
    v425.i32[2] = *(_DWORD *)(v21 + 8);
    v430 = (int8x16_t)vmlsq_lane_f32(v425, v427, v16, 0);
    v10.i64[0] = vextq_s8(v430, v430, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v430.i8, *(float32x2_t *)v430.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v430.i8, 1), *(float32x2_t *)v430.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v431 = v13[9646] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v431;
      if (v424)
        return 0;
    }
  }
  v432 = (char)v13[9686];
  v433 = a7;
  v433.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v433.f32 = vcvt_f32_s32(*(int32x2_t *)v433.f32);
  v433.f32[2] = (float)v95;
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  if (!v13[9686])
  {
    v10.i8[0] = v13[9683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9684];
    v435 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v435.i32 = (float)v435.i32[0];
    v10.i32[1] = v435.i32[0];
    v435.i8[0] = v13[9685];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v435)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v433 = vaddq_f32(v433, v434);
    v434 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v436 = vaddq_f32(v433, v434);
  if (v432 <= 0)
  {
    v434.i64[0] = *(_QWORD *)v21;
    v434.i32[2] = *(_DWORD *)(v21 + 8);
    v437 = (int8x16_t)vmlsq_lane_f32(v434, v436, v16, 0);
    v10.i64[0] = vextq_s8(v437, v437, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v437.i8, *(float32x2_t *)v437.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v437.i8, 1), *(float32x2_t *)v437.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v438 = v13[9686] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v438;
      if (v432)
        return 0;
    }
  }
  v439 = (char)v13[9726];
  v440 = a7;
  v440.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v440.f32 = vcvt_f32_s32(*(int32x2_t *)v440.f32);
  v440.f32[2] = (float)v106;
  v441.i64[0] = 0x3F0000003F000000;
  v441.i64[1] = 0x3F0000003F000000;
  if (!v13[9726])
  {
    v10.i8[0] = v13[9723];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9724];
    v442 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v442.i32 = (float)v442.i32[0];
    v10.i32[1] = v442.i32[0];
    v442.i8[0] = v13[9725];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v442)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v440 = vaddq_f32(v440, v441);
    v441 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v443 = vaddq_f32(v440, v441);
  if (v439 <= 0)
  {
    v441.i64[0] = *(_QWORD *)v21;
    v441.i32[2] = *(_DWORD *)(v21 + 8);
    v444 = (int8x16_t)vmlsq_lane_f32(v441, v443, v16, 0);
    v10.i64[0] = vextq_s8(v444, v444, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v444.i8, *(float32x2_t *)v444.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v444.i8, 1), *(float32x2_t *)v444.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v445 = v13[9726] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v445;
      if (v439)
        return 0;
    }
  }
  v446 = (char)v13[9766];
  v447 = a7;
  v447.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v447.f32 = vcvt_f32_s32(*(int32x2_t *)v447.f32);
  v447.f32[2] = (float)v95;
  v448.i64[0] = 0x3F0000003F000000;
  v448.i64[1] = 0x3F0000003F000000;
  if (!v13[9766])
  {
    v10.i8[0] = v13[9763];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9764];
    v449 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v449.i32 = (float)v449.i32[0];
    v10.i32[1] = v449.i32[0];
    v449.i8[0] = v13[9765];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v449)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v447 = vaddq_f32(v447, v448);
    v448 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v450 = vaddq_f32(v447, v448);
  if (v446 <= 0)
  {
    v448.i64[0] = *(_QWORD *)v21;
    v448.i32[2] = *(_DWORD *)(v21 + 8);
    v451 = (int8x16_t)vmlsq_lane_f32(v448, v450, v16, 0);
    v10.i64[0] = vextq_s8(v451, v451, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v451.i8, *(float32x2_t *)v451.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v451.i8, 1), *(float32x2_t *)v451.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v452 = v13[9766] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v452;
      if (v446)
        return 0;
    }
  }
  v453 = (char)v13[9806];
  v454 = a7;
  v454.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v454.f32 = vcvt_f32_s32(*(int32x2_t *)v454.f32);
  v454.f32[2] = (float)v106;
  v455.i64[0] = 0x3F0000003F000000;
  v455.i64[1] = 0x3F0000003F000000;
  if (!v13[9806])
  {
    v10.i8[0] = v13[9803];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9804];
    v456 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v456.i32 = (float)v456.i32[0];
    v10.i32[1] = v456.i32[0];
    v456.i8[0] = v13[9805];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v456)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v454 = vaddq_f32(v454, v455);
    v455 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v457 = vaddq_f32(v454, v455);
  if (v453 <= 0)
  {
    v455.i64[0] = *(_QWORD *)v21;
    v455.i32[2] = *(_DWORD *)(v21 + 8);
    v458 = (int8x16_t)vmlsq_lane_f32(v455, v457, v16, 0);
    v10.i64[0] = vextq_s8(v458, v458, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v458.i8, *(float32x2_t *)v458.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v458.i8, 1), *(float32x2_t *)v458.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v459 = v13[9806] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v459;
      if (v453)
        return 0;
    }
  }
  v460 = (char)v13[9846];
  *(float32x2_t *)v457.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
  v457.f32[2] = (float)v95;
  v461.i64[0] = 0x3F0000003F000000;
  v461.i64[1] = 0x3F0000003F000000;
  if (!v13[9846])
  {
    v10.i8[0] = v13[9843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9844];
    v462 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v462.i32 = (float)v462.i32[0];
    v10.i32[1] = v462.i32[0];
    v462.i8[0] = v13[9845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v462)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v457 = vaddq_f32(v457, v461);
    v461 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v463 = vaddq_f32(v457, v461);
  if (v460 <= 0)
  {
    v461.i64[0] = *(_QWORD *)v21;
    v461.i32[2] = *(_DWORD *)(v21 + 8);
    v464 = (int8x16_t)vmlsq_lane_f32(v461, v463, v16, 0);
    v10.i64[0] = vextq_s8(v464, v464, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v464.i8, *(float32x2_t *)v464.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v464.i8, 1), *(float32x2_t *)v464.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v465 = v13[9846] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v465;
      if (v460)
        return 0;
    }
  }
  v466 = (char)v13[9886];
  *(float32x2_t *)v463.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
  v463.f32[2] = (float)v106;
  v467.i64[0] = 0x3F0000003F000000;
  v467.i64[1] = 0x3F0000003F000000;
  if (!v13[9886])
  {
    v10.i8[0] = v13[9883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9884];
    v468 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v468.i32 = (float)v468.i32[0];
    v10.i32[1] = v468.i32[0];
    v468.i8[0] = v13[9885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v468)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v463 = vaddq_f32(v463, v467);
    v467 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v469 = vaddq_f32(v463, v467);
  if (v466 <= 0)
  {
    v467.i64[0] = *(_QWORD *)v21;
    v467.i32[2] = *(_DWORD *)(v21 + 8);
    v470 = (int8x16_t)vmlsq_lane_f32(v467, v469, v16, 0);
    v10.i64[0] = vextq_s8(v470, v470, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v470.i8, *(float32x2_t *)v470.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v470.i8, 1), *(float32x2_t *)v470.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v18.f32[0])
    {
      v471 = v13[9886] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v471;
      if (v466)
        return 0;
    }
  }
  v472 = (char)v13[9926];
  v473 = (int8x16_t)a8;
  *(float *)&v473.i32[2] = (float)v154;
  v474.i64[0] = 0x3F0000003F000000;
  v474.i64[1] = 0x3F0000003F000000;
  if (v13[9926])
  {
    v475 = vaddq_f32((float32x4_t)v473, v474);
  }
  else
  {
    v10.i8[0] = v13[9923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[9924];
    v476 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v476.i32 = (float)v476.i32[0];
    v10.i32[1] = v476.i32[0];
    v476.i8[0] = v13[9925];
    v10.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v476)).i32[0];
    v477 = vaddq_f32((float32x4_t)v473, v474);
    v473 = (int8x16_t)vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v475 = vaddq_f32(v477, (float32x4_t)v473);
  }
  if (v472 <= 0)
  {
    v473.i64[0] = *(_QWORD *)v21;
    v473.i32[2] = *(_DWORD *)(v21 + 8);
    v473 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v473, v475, v16, 0);
    v10.i64[0] = vextq_s8(v473, v473, 8uLL).u64[0];
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v473.i8, *(float32x2_t *)v473.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v473.i8, 1), *(float32x2_t *)v473.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32).f32[0] <= v18.f32[0])
    {
      v478 = v13[9926] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v478;
      if (v472)
        return 0;
    }
  }
  v479 = (char)v13[9966];
  a8.f32[2] = (float)v162;
  v480.i64[0] = 0x3F0000003F000000;
  v480.i64[1] = 0x3F0000003F000000;
  if (!v13[9966])
  {
    v473.i8[0] = v13[9963];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8));
    *(float *)v473.i32 = (float)v473.i32[0];
    v10.i8[0] = v13[9964];
    v481 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v481.i32 = (float)v481.i32[0];
    v473.i32[1] = v481.i32[0];
    v481.i8[0] = v13[9965];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v481)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v473.i32[2] = v10.i32[0];
    a8 = vaddq_f32(a8, v480);
    v480 = vmulq_f32((float32x4_t)v473, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v482 = vaddq_f32(a8, v480);
  if (v479 <= 0)
  {
    v480.i64[0] = *(_QWORD *)v21;
    v480.i32[2] = *(_DWORD *)(v21 + 8);
    v483 = (int8x16_t)vmlsq_lane_f32(v480, v482, v16, 0);
    v473 = vextq_s8(v483, v483, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v483.i8, *(float32x2_t *)v483.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v483.i8, 1), *(float32x2_t *)v483.i8, 1), *(float32x2_t *)v473.i8, *(float32x2_t *)v473.i8);
    if (v10.f32[0] <= v18.f32[0])
    {
      v484 = v13[9966] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v484;
      if (v479)
        return 0;
    }
  }
  v485 = (char)v13[10006];
  v486 = a7;
  v486.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v486.f32 = vcvt_f32_s32(*(int32x2_t *)v486.f32);
  v486.f32[2] = (float)v154;
  v487.i64[0] = 0x3F0000003F000000;
  v487.i64[1] = 0x3F0000003F000000;
  if (!v13[10006])
  {
    v473.i8[0] = v13[10003];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8));
    *(float *)v473.i32 = (float)v473.i32[0];
    v10.i8[0] = v13[10004];
    v488 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v488.i32 = (float)v488.i32[0];
    v473.i32[1] = v488.i32[0];
    v488.i8[0] = v13[10005];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v488)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v473.i32[2] = v10.i32[0];
    v486 = vaddq_f32(v486, v487);
    v487 = vmulq_f32((float32x4_t)v473, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v489 = vaddq_f32(v486, v487);
  if (v485 <= 0)
  {
    v487.i64[0] = *(_QWORD *)v21;
    v487.i32[2] = *(_DWORD *)(v21 + 8);
    v490 = (int8x16_t)vmlsq_lane_f32(v487, v489, v16, 0);
    v473 = vextq_s8(v490, v490, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v490.i8, *(float32x2_t *)v490.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v490.i8, 1), *(float32x2_t *)v490.i8, 1), *(float32x2_t *)v473.i8, *(float32x2_t *)v473.i8);
    if (v10.f32[0] <= v18.f32[0])
    {
      v491 = v13[10006] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v491;
      if (v485)
        return 0;
    }
  }
  v492 = (char)v13[10046];
  v493 = a7;
  v493.i32[1] = a4.i32[1] + 7;
  *(float32x2_t *)v493.f32 = vcvt_f32_s32(*(int32x2_t *)v493.f32);
  v493.f32[2] = (float)v162;
  v494.i64[0] = 0x3F0000003F000000;
  v494.i64[1] = 0x3F0000003F000000;
  if (!v13[10046])
  {
    v473.i8[0] = v13[10043];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8));
    *(float *)v473.i32 = (float)v473.i32[0];
    v10.i8[0] = v13[10044];
    v495 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v495.i32 = (float)v495.i32[0];
    v473.i32[1] = v495.i32[0];
    v495.i8[0] = v13[10045];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v495)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v473.i32[2] = v10.i32[0];
    v493 = vaddq_f32(v493, v494);
    v494 = vmulq_f32((float32x4_t)v473, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v496 = vaddq_f32(v493, v494);
  if (v492 <= 0)
  {
    v494.i64[0] = *(_QWORD *)v21;
    v494.i32[2] = *(_DWORD *)(v21 + 8);
    v497 = (int8x16_t)vmlsq_lane_f32(v494, v496, v16, 0);
    v473 = vextq_s8(v497, v497, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v497.i8, *(float32x2_t *)v497.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v497.i8, 1), *(float32x2_t *)v497.i8, 1), *(float32x2_t *)v473.i8, *(float32x2_t *)v473.i8);
    if (v10.f32[0] <= v18.f32[0])
    {
      v498 = v13[10046] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v498;
      if (v492)
        return 0;
    }
  }
  v499 = (char)v13[10086];
  v500 = a7;
  v500.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)v500.f32 = vcvt_f32_s32(*(int32x2_t *)v500.f32);
  v500.f32[2] = (float)v154;
  v501.i64[0] = 0x3F0000003F000000;
  v501.i64[1] = 0x3F0000003F000000;
  if (!v13[10086])
  {
    v473.i8[0] = v13[10083];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8));
    *(float *)v473.i32 = (float)v473.i32[0];
    v10.i8[0] = v13[10084];
    v502 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v502.i32 = (float)v502.i32[0];
    v473.i32[1] = v502.i32[0];
    v502.i8[0] = v13[10085];
    *(float *)&v473.i32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v502)).i32[0];
    v500 = vaddq_f32(v500, (float32x4_t)v501);
    v501 = (int8x16_t)vmulq_f32((float32x4_t)v473, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v503 = vaddq_f32(v500, (float32x4_t)v501);
  if (v499 <= 0)
  {
    v501.i64[0] = *(_QWORD *)v21;
    v501.i32[2] = *(_DWORD *)(v21 + 8);
    v501 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v501, v503, v16, 0);
    v473 = vextq_s8(v501, v501, 8uLL);
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v501.i8, 1), *(float32x2_t *)v501.i8, 1), *(float32x2_t *)v473.i8, *(float32x2_t *)v473.i8).f32[0] <= v18.f32[0])
    {
      v504 = v13[10086] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v504;
      if (v499)
        return 0;
    }
  }
  v505 = (char)v13[10126];
  a7.i32[0] = a4.i32[0] + 3;
  *(float32x2_t *)a7.f32 = vcvt_f32_s32(*(int32x2_t *)a7.f32);
  a7.f32[2] = (float)v162;
  v506.i64[0] = 0x3F0000003F000000;
  v506.i64[1] = 0x3F0000003F000000;
  if (!v13[10126])
  {
    v501.i8[0] = v13[10123];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10124];
    v507 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v507.i32 = (float)v507.i32[0];
    v501.i32[1] = v507.i32[0];
    v507.i8[0] = v13[10125];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v507));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    a7 = vaddq_f32(a7, v506);
    v506 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v508 = vaddq_f32(a7, v506);
  if (v505 <= 0)
  {
    v506.i64[0] = *(_QWORD *)v21;
    v506.i32[2] = *(_DWORD *)(v21 + 8);
    v509 = (int8x16_t)vmlsq_lane_f32(v506, v508, v16, 0);
    v501.i64[0] = vextq_s8(v509, v509, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v509.i8, *(float32x2_t *)v509.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v509.i8, 1), *(float32x2_t *)v509.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v510 = v13[10126] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v510;
      if (v505)
        return 0;
    }
  }
  v511 = (char)v13[10166];
  *(float32x2_t *)v508.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
  v508.f32[2] = (float)v154;
  v512.i64[0] = 0x3F0000003F000000;
  v512.i64[1] = 0x3F0000003F000000;
  if (!v13[10166])
  {
    v501.i8[0] = v13[10163];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10164];
    v513 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v513.i32 = (float)v513.i32[0];
    v501.i32[1] = v513.i32[0];
    v513.i8[0] = v13[10165];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v513));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v508 = vaddq_f32(v508, v512);
    v512 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v514 = vaddq_f32(v508, v512);
  if (v511 <= 0)
  {
    v512.i64[0] = *(_QWORD *)v21;
    v512.i32[2] = *(_DWORD *)(v21 + 8);
    v515 = (int8x16_t)vmlsq_lane_f32(v512, v514, v16, 0);
    v501.i64[0] = vextq_s8(v515, v515, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v515.i8, *(float32x2_t *)v515.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v515.i8, 1), *(float32x2_t *)v515.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v516 = v13[10166] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v516;
      if (v511)
        return 0;
    }
  }
  v517 = (char)v13[10206];
  *(float32x2_t *)v514.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v36, v57));
  v514.f32[2] = (float)v162;
  v518.i64[0] = 0x3F0000003F000000;
  v518.i64[1] = 0x3F0000003F000000;
  if (!v13[10206])
  {
    v501.i8[0] = v13[10203];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10204];
    v519 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v519.i32 = (float)v519.i32[0];
    v501.i32[1] = v519.i32[0];
    v519.i8[0] = v13[10205];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v519));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v514 = vaddq_f32(v514, v518);
    v518 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v520 = vaddq_f32(v514, v518);
  if (v517 <= 0)
  {
    v518.i64[0] = *(_QWORD *)v21;
    v518.i32[2] = *(_DWORD *)(v21 + 8);
    v521 = (int8x16_t)vmlsq_lane_f32(v518, v520, v16, 0);
    v501.i64[0] = vextq_s8(v521, v521, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v521.i8, *(float32x2_t *)v521.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v521.i8, 1), *(float32x2_t *)v521.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v522 = v13[10206] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v522;
      if (v517)
        return 0;
    }
  }
  v523 = a4.i32[0] + 4;
  v524 = (char)v13[10246];
  v525 = a4;
  v525.i32[0] = a4.i32[0] + 4;
  *(float32x2_t *)v525.f32 = vcvt_f32_s32(*(int32x2_t *)v525.f32);
  v525.f32[2] = (float)v12;
  v526.i64[0] = 0x3F0000003F000000;
  v526.i64[1] = 0x3F0000003F000000;
  if (!v13[10246])
  {
    v501.i8[0] = v13[10243];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10244];
    v527 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v527.i32 = (float)v527.i32[0];
    v501.i32[1] = v527.i32[0];
    v527.i8[0] = v13[10245];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v527));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v525 = vaddq_f32(v525, v526);
    v526 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v528 = vaddq_f32(v525, v526);
  if (v524 <= 0)
  {
    v526.i64[0] = *(_QWORD *)v21;
    v526.i32[2] = *(_DWORD *)(v21 + 8);
    v529 = (int8x16_t)vmlsq_lane_f32(v526, v528, v16, 0);
    v501.i64[0] = vextq_s8(v529, v529, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v529.i8, *(float32x2_t *)v529.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v529.i8, 1), *(float32x2_t *)v529.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v530 = v13[10246] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v530;
      if (v524)
        return 0;
    }
  }
  v531 = v12 + 1;
  v532 = (char)v13[10286];
  v533 = a4;
  v533.i32[0] = a4.i32[0] + 4;
  *(float32x2_t *)v533.f32 = vcvt_f32_s32(*(int32x2_t *)v533.f32);
  v533.f32[2] = (float)(v12 + 1);
  v534.i64[0] = 0x3F0000003F000000;
  v534.i64[1] = 0x3F0000003F000000;
  if (!v13[10286])
  {
    v501.i8[0] = v13[10283];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10284];
    v535 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v535.i32 = (float)v535.i32[0];
    v501.i32[1] = v535.i32[0];
    v535.i8[0] = v13[10285];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v535));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v533 = vaddq_f32(v533, v534);
    v534 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v536 = vaddq_f32(v533, v534);
  if (v532 <= 0)
  {
    v534.i64[0] = *(_QWORD *)v21;
    v534.i32[2] = *(_DWORD *)(v21 + 8);
    v537 = (int8x16_t)vmlsq_lane_f32(v534, v536, v16, 0);
    v501.i64[0] = vextq_s8(v537, v537, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v537.i8, *(float32x2_t *)v537.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v537.i8, 1), *(float32x2_t *)v537.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v538 = v13[10286] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v538;
      if (v532)
        return 0;
    }
  }
  v539 = a4.i32[1] + 1;
  v540 = (char)v13[10326];
  *(float32x2_t *)v536.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(a4.i32[1] + 1, v523));
  v536.f32[2] = (float)v12;
  v541.i64[0] = 0x3F0000003F000000;
  v541.i64[1] = 0x3F0000003F000000;
  if (!v13[10326])
  {
    v501.i8[0] = v13[10323];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10324];
    v542 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v542.i32 = (float)v542.i32[0];
    v501.i32[1] = v542.i32[0];
    v542.i8[0] = v13[10325];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v542));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v536 = vaddq_f32(v536, v541);
    v541 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v543 = vaddq_f32(v536, v541);
  if (v540 <= 0)
  {
    v541.i64[0] = *(_QWORD *)v21;
    v541.i32[2] = *(_DWORD *)(v21 + 8);
    v544 = (int8x16_t)vmlsq_lane_f32(v541, v543, v16, 0);
    v501.i64[0] = vextq_s8(v544, v544, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v544.i8, *(float32x2_t *)v544.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v544.i8, 1), *(float32x2_t *)v544.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v545 = v13[10326] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v545;
      if (v540)
        return 0;
    }
  }
  v546 = (char)v13[10366];
  *(float32x2_t *)v543.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v539, v523));
  v543.f32[2] = (float)v531;
  v547.i64[0] = 0x3F0000003F000000;
  v547.i64[1] = 0x3F0000003F000000;
  if (!v13[10366])
  {
    v501.i8[0] = v13[10363];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10364];
    v548 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v548.i32 = (float)v548.i32[0];
    v501.i32[1] = v548.i32[0];
    v548.i8[0] = v13[10365];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v548));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v543 = vaddq_f32(v543, v547);
    v547 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v549 = vaddq_f32(v543, v547);
  if (v546 <= 0)
  {
    v547.i64[0] = *(_QWORD *)v21;
    v547.i32[2] = *(_DWORD *)(v21 + 8);
    v550 = (int8x16_t)vmlsq_lane_f32(v547, v549, v16, 0);
    v501.i64[0] = vextq_s8(v550, v550, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v550.i8, *(float32x2_t *)v550.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v550.i8, 1), *(float32x2_t *)v550.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v551 = v13[10366] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v551;
      if (v546)
        return 0;
    }
  }
  v552 = a4.i32[0] + 5;
  v553 = (char)v13[10406];
  v554 = a4;
  v554.i32[0] = a4.i32[0] + 5;
  *(float32x2_t *)v554.f32 = vcvt_f32_s32(*(int32x2_t *)v554.f32);
  v554.f32[2] = (float)v12;
  v555.i64[0] = 0x3F0000003F000000;
  v555.i64[1] = 0x3F0000003F000000;
  if (!v13[10406])
  {
    v501.i8[0] = v13[10403];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v13[10404];
    v556 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v556.i32 = (float)v556.i32[0];
    v501.i32[1] = v556.i32[0];
    v556.i8[0] = v13[10405];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v556));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v554 = vaddq_f32(v554, v555);
    v555 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v557 = vaddq_f32(v554, v555);
  if (v553 <= 0)
  {
    v555.i64[0] = *(_QWORD *)v21;
    v555.i32[2] = *(_DWORD *)(v21 + 8);
    v558 = (int8x16_t)vmlsq_lane_f32(v555, v557, v16, 0);
    v501.i64[0] = vextq_s8(v558, v558, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v558.i8, *(float32x2_t *)v558.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v558.i8, 1), *(float32x2_t *)v558.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v559 = v13[10406] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v559;
      if (v553)
        return 0;
    }
  }
  v560 = v13 + 10443;
  v561 = v560[3];
  v562 = a4;
  v562.i32[0] = a4.i32[0] + 5;
  *(float32x2_t *)v562.f32 = vcvt_f32_s32(*(int32x2_t *)v562.f32);
  v562.f32[2] = (float)v531;
  v563.i64[0] = 0x3F0000003F000000;
  v563.i64[1] = 0x3F0000003F000000;
  if (!v560[3])
  {
    v501.i8[0] = *v560;
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v560[1];
    v564 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v564.i32 = (float)v564.i32[0];
    v501.i32[1] = v564.i32[0];
    v564.i8[0] = v560[2];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v564));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v562 = vaddq_f32(v562, v563);
    v563 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v565 = vaddq_f32(v562, v563);
  if (v561 <= 0)
  {
    v563.i64[0] = *(_QWORD *)v21;
    v563.i32[2] = *(_DWORD *)(v21 + 8);
    v566 = (int8x16_t)vmlsq_lane_f32(v563, v565, v16, 0);
    v501.i64[0] = vextq_s8(v566, v566, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v566.i8, *(float32x2_t *)v566.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v566.i8, 1), *(float32x2_t *)v566.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v567 = v560[3] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v567;
      if (v561)
        return 0;
    }
  }
  v568 = v560[43];
  *(float32x2_t *)v565.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v539, v552));
  v565.f32[2] = (float)v12;
  v569.i64[0] = 0x3F0000003F000000;
  v569.i64[1] = 0x3F0000003F000000;
  if (!v560[43])
  {
    v501.i8[0] = v560[40];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v560[41];
    v570 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v570.i32 = (float)v570.i32[0];
    v501.i32[1] = v570.i32[0];
    v570.i8[0] = v560[42];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v570));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v565 = vaddq_f32(v565, v569);
    v569 = vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v571 = vaddq_f32(v565, v569);
  if (v568 <= 0)
  {
    v569.i64[0] = *(_QWORD *)v21;
    v569.i32[2] = *(_DWORD *)(v21 + 8);
    v572 = (int8x16_t)vmlsq_lane_f32(v569, v571, v16, 0);
    v501.i64[0] = vextq_s8(v572, v572, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v572.i8, *(float32x2_t *)v572.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v572.i8, 1), *(float32x2_t *)v572.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v573 = v560[43] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v573;
      if (v568)
        return 0;
    }
  }
  v574 = v560[83];
  *(float32x2_t *)v571.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v539, v552));
  v571.f32[2] = (float)v531;
  v575.i64[0] = 0x3F0000003F000000;
  v575.i64[1] = 0x3F0000003F000000;
  if (!v560[83])
  {
    v501.i8[0] = v560[80];
    v501 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8));
    *(float *)v501.i32 = (float)v501.i32[0];
    v473.i8[0] = v560[81];
    v576 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v473.i8)).u64[0];
    *(float *)v576.i32 = (float)v576.i32[0];
    v501.i32[1] = v576.i32[0];
    v576.i8[0] = v560[82];
    v473 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v576));
    *(float *)v473.i32 = (float)v473.i32[0];
    v501.i32[2] = v473.i32[0];
    v571 = vaddq_f32(v571, (float32x4_t)v575);
    v575 = (int8x16_t)vmulq_f32((float32x4_t)v501, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v577 = vaddq_f32(v571, (float32x4_t)v575);
  if (v574 <= 0)
  {
    v575.i64[0] = *(_QWORD *)v21;
    v575.i32[2] = *(_DWORD *)(v21 + 8);
    v575 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v575, v577, v16, 0);
    v501.i64[0] = vextq_s8(v575, v575, 8uLL).u64[0];
    *(float32x2_t *)v473.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v575.i8, *(float32x2_t *)v575.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v575.i8, 1), *(float32x2_t *)v575.i8, 1), *(float32x2_t *)v501.i8, *(float32x2_t *)v501.i8);
    if (*(float *)v473.i32 <= v18.f32[0])
    {
      v578 = v560[83] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v578;
      if (v574)
        return 0;
    }
  }
  v579 = v560[123];
  v580 = (int8x16_t)a4;
  v580.i32[0] = a4.i32[0] + 4;
  *(float32x2_t *)v580.i8 = vcvt_f32_s32(*(int32x2_t *)v580.i8);
  *(float *)&v580.i32[2] = v17;
  v581.i64[0] = 0x3F0000003F000000;
  v581.i64[1] = 0x3F0000003F000000;
  if (v560[123])
  {
    v582 = vaddq_f32((float32x4_t)v580, v581);
  }
  else
  {
    v575.i8[0] = v560[120];
    v575 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v575.i8));
    *(float *)v575.i32 = (float)v575.i32[0];
    v501.i8[0] = v560[121];
    v583 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v501.i8)).u64[0];
    *(float *)v583.i32 = (float)v583.i32[0];
    v575.i32[1] = v583.i32[0];
    v583.i8[0] = v560[122];
    v501.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v583)).u64[0];
    *(float *)v501.i32 = (float)v501.i32[0];
    v575.i32[2] = v501.i32[0];
    v584 = vaddq_f32((float32x4_t)v580, v581);
    v580 = (int8x16_t)vmulq_f32((float32x4_t)v575, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v582 = vaddq_f32(v584, (float32x4_t)v580);
  }
  if (v579 <= 0)
  {
    v580.i64[0] = *(_QWORD *)v21;
    v580.i32[2] = *(_DWORD *)(v21 + 8);
    v580 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v580, v582, v16, 0);
    v575.i64[0] = vextq_s8(v580, v580, 8uLL).u64[0];
    *(float32x2_t *)v501.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v580.i8, *(float32x2_t *)v580.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v580.i8, 1), *(float32x2_t *)v580.i8, 1), *(float32x2_t *)v575.i8, *(float32x2_t *)v575.i8);
    if (*(float *)v501.i32 <= v18.f32[0])
    {
      v585 = v560[123] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v585;
      if (v579)
        return 0;
    }
  }
  v586 = v560[163];
  a4.i32[0] += 4;
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a4.f32);
  a4.f32[2] = (float)v25;
  v587.i64[0] = 0x3F0000003F000000;
  v587.i64[1] = 0x3F0000003F000000;
  if (!v560[163])
  {
    v580.i8[0] = v560[160];
    v580 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v580.i8));
    *(float *)v580.i32 = (float)v580.i32[0];
    v575.i8[0] = v560[161];
    v588 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v575.i8)).u64[0];
    *(float *)v588.i32 = (float)v588.i32[0];
    v580.i32[1] = v588.i32[0];
    v588.i8[0] = v560[162];
    v575.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v588)).u64[0];
    *(float *)v575.i32 = (float)v575.i32[0];
    v580.i32[2] = v575.i32[0];
    a4 = vaddq_f32(a4, (float32x4_t)v587);
    v587 = (int8x16_t)vmulq_f32((float32x4_t)v580, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v589 = vaddq_f32(a4, (float32x4_t)v587);
  if (v586 <= 0)
  {
    v587.i64[0] = *(_QWORD *)v21;
    v587.i32[2] = *(_DWORD *)(v21 + 8);
    v587 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v587, v589, v16, 0);
    v16 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v587.i8, 1);
    v589 = (float32x4_t)vextq_s8(v587, v587, 8uLL);
    *(float32x2_t *)v580.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v587.i8, *(float32x2_t *)v587.i8), v16, *(float32x2_t *)v587.i8, 1), *(float32x2_t *)v589.f32, *(float32x2_t *)v589.f32);
    if (*(float *)v580.i32 <= v18.f32[0])
    {
      v590 = v560[163] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v590;
      if (v586)
        return 0;
    }
  }
  return sub_223966380(a1, a2, *(double *)&v16, v589, *(double *)v18.i64, (float32x4_t)v587, (float32x4_t)v580, *(double *)v575.i64, *(double *)v501.i64, (float32x4_t)v473);
}

uint64_t sub_223966380(_QWORD ***a1, int32x2_t *a2, double a3, float32x4_t a4, double a5, float32x4_t a6, float32x4_t a7, double a8, double a9, float32x4_t a10)
{
  float32x4_t v10;
  int8x8_t v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  float32x2_t v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  uint64_t v20;
  int8x8_t v21;
  int8x16_t v22;
  char v23;
  int v24;
  int v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  int8x8_t v31;
  float32x4_t v32;
  int8x16_t v33;
  char v34;
  unsigned __int32 v35;
  int v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  int8x8_t v42;
  float32x4_t v43;
  int8x16_t v44;
  char v45;
  int v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  int8x8_t v52;
  float32x4_t v53;
  int8x16_t v54;
  char v55;
  int v56;
  float32x4_t v57;
  float32x4_t v58;
  float32x4_t v59;
  float32x4_t v60;
  float32x4_t v61;
  int8x8_t v62;
  float32x4_t v63;
  int8x16_t v64;
  char v65;
  int v66;
  float32x4_t v67;
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  int8x8_t v72;
  float32x4_t v73;
  int8x16_t v74;
  char v75;
  unsigned __int32 v76;
  int v77;
  float32x4_t v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  int8x8_t v83;
  float32x4_t v84;
  int8x16_t v85;
  char v86;
  int v87;
  int v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  int8x8_t v94;
  float32x4_t v95;
  int8x16_t v96;
  char v97;
  unsigned __int32 v98;
  int v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  int8x8_t v105;
  float32x4_t v106;
  int8x16_t v107;
  char v108;
  int v109;
  float32x4_t v110;
  float32x4_t v111;
  int8x8_t v112;
  float32x4_t v113;
  int8x16_t v114;
  char v115;
  int v116;
  float32x4_t v117;
  int8x8_t v118;
  float32x4_t v119;
  int8x16_t v120;
  char v121;
  int v122;
  float32x4_t v123;
  int8x8_t v124;
  float32x4_t v125;
  int8x16_t v126;
  char v127;
  int v128;
  float32x4_t v129;
  int8x8_t v130;
  float32x4_t v131;
  int8x16_t v132;
  char v133;
  int v134;
  float32x4_t v135;
  int8x8_t v136;
  float32x4_t v137;
  int8x16_t v138;
  char v139;
  int v140;
  float32x4_t v141;
  float32x4_t v142;
  int8x8_t v143;
  float32x4_t v144;
  int8x16_t v145;
  char v146;
  int v147;
  float32x4_t v148;
  float32x4_t v149;
  int8x8_t v150;
  float32x4_t v151;
  int8x16_t v152;
  char v153;
  int v154;
  float32x4_t v155;
  float32x4_t v156;
  int8x8_t v157;
  float32x4_t v158;
  int8x16_t v159;
  char v160;
  int v161;
  float32x4_t v162;
  float32x4_t v163;
  int8x8_t v164;
  float32x4_t v165;
  int8x16_t v166;
  char v167;
  int v168;
  float32x4_t v169;
  int8x8_t v170;
  float32x4_t v171;
  int8x16_t v172;
  char v173;
  int v174;
  float32x4_t v175;
  int8x8_t v176;
  float32x4_t v177;
  int8x16_t v178;
  char v179;
  int v180;
  float32x4_t v181;
  int8x8_t v182;
  float32x4_t v183;
  int8x16_t v184;
  char v185;
  int v186;
  float32x4_t v187;
  int8x8_t v188;
  float32x4_t v189;
  int8x16_t v190;
  char v191;
  unsigned __int32 v192;
  int v193;
  float32x4_t v194;
  float32x4_t v195;
  int8x8_t v196;
  float32x4_t v197;
  int8x16_t v198;
  char v199;
  int v200;
  float32x4_t v201;
  float32x4_t v202;
  int8x8_t v203;
  float32x4_t v204;
  int8x16_t v205;
  char v206;
  int v207;
  float32x4_t v208;
  float32x4_t v209;
  int8x8_t v210;
  float32x4_t v211;
  int8x16_t v212;
  char v213;
  int v214;
  float32x4_t v215;
  float32x4_t v216;
  int8x8_t v217;
  float32x4_t v218;
  int8x16_t v219;
  char v220;
  unsigned __int32 v221;
  int v222;
  float32x4_t v223;
  float32x4_t v224;
  int8x8_t v225;
  float32x4_t v226;
  int8x16_t v227;
  char v228;
  int v229;
  float32x4_t v230;
  float32x4_t v231;
  int8x8_t v232;
  float32x4_t v233;
  int8x16_t v234;
  char v235;
  int v236;
  float32x4_t v237;
  float32x4_t v238;
  int8x8_t v239;
  float32x4_t v240;
  int8x16_t v241;
  char v242;
  int v243;
  float32x4_t v244;
  float32x4_t v245;
  int8x8_t v246;
  float32x4_t v247;
  int8x16_t v248;
  char v249;
  int v250;
  float32x4_t v251;
  float32x4_t v252;
  int8x8_t v253;
  float32x4_t v254;
  int8x16_t v255;
  char v256;
  int v257;
  float32x4_t v258;
  float32x4_t v259;
  int8x8_t v260;
  float32x4_t v261;
  int8x16_t v262;
  char v263;
  int v264;
  float32x4_t v265;
  float32x4_t v266;
  int8x8_t v267;
  float32x4_t v268;
  int8x16_t v269;
  char v270;
  int v271;
  float32x4_t v272;
  float32x4_t v273;
  int8x8_t v274;
  float32x4_t v275;
  int8x16_t v276;
  char v277;
  int v278;
  float32x4_t v279;
  float32x4_t v280;
  int8x8_t v281;
  float32x4_t v282;
  int8x16_t v283;
  char v284;
  int v285;
  float32x4_t v286;
  float32x4_t v287;
  int8x8_t v288;
  float32x4_t v289;
  int8x16_t v290;
  char v291;
  int v292;
  float32x4_t v293;
  float32x4_t v294;
  int8x8_t v295;
  float32x4_t v296;
  int8x16_t v297;
  char v298;
  int v299;
  float32x4_t v300;
  float32x4_t v301;
  int8x8_t v302;
  float32x4_t v303;
  int8x16_t v304;
  char v305;
  int v306;
  float32x4_t v307;
  int8x8_t v308;
  float32x4_t v309;
  int8x16_t v310;
  char v311;
  int v312;
  float32x4_t v313;
  int8x8_t v314;
  float32x4_t v315;
  int8x16_t v316;
  char v317;
  int v318;
  float32x4_t v319;
  int8x8_t v320;
  float32x4_t v321;
  int8x16_t v322;
  char v323;
  int v324;
  float32x4_t v325;
  int8x8_t v326;
  float32x4_t v327;
  int8x16_t v328;
  char v329;
  int v330;
  float32x4_t v331;
  int8x8_t v332;
  float32x4_t v333;
  int8x16_t v334;
  char v335;
  int v336;
  float32x4_t v337;
  int8x8_t v338;
  float32x4_t v339;
  int8x16_t v340;
  char v341;
  int v342;
  float32x4_t v343;
  int8x8_t v344;
  float32x4_t v345;
  int8x16_t v346;
  char v347;
  int v348;
  float32x4_t v349;
  int8x8_t v350;
  float32x4_t v351;
  int8x16_t v352;
  char v353;
  int v354;
  float32x4_t v355;
  int8x8_t v356;
  float32x4_t v357;
  int8x16_t v358;
  char v359;
  int v360;
  float32x4_t v361;
  int8x8_t v362;
  float32x4_t v363;
  int8x16_t v364;
  char v365;
  int v366;
  float32x4_t v367;
  int8x8_t v368;
  float32x4_t v369;
  int8x16_t v370;
  char v371;
  int v372;
  float32x4_t v373;
  int8x8_t v374;
  float32x4_t v375;
  int8x16_t v376;
  char v377;
  int v378;
  float32x4_t v379;
  int8x8_t v380;
  float32x4_t v381;
  int8x16_t v382;
  char v383;
  int v384;
  int8x16_t v385;
  int8x8_t v386;
  float32x4_t v387;
  char v388;
  int v389;
  float32x4_t v390;
  float32x4_t v391;
  int8x8_t v392;
  float32x4_t v393;
  int8x16_t v394;
  char v395;
  int v396;
  float32x4_t v397;
  int8x8_t v398;
  float32x4_t v399;
  int8x16_t v400;
  char v401;
  int v402;
  int v403;
  float32x4_t v404;
  int8x8_t v405;
  float32x4_t v406;
  int8x16_t v407;
  char v408;
  int v409;
  int v410;
  float32x4_t v411;
  int8x8_t v412;
  float32x4_t v413;
  int8x16_t v414;
  char v415;
  int v416;
  float32x4_t v417;
  float32x4_t v418;
  float32x4_t v419;
  int8x8_t v420;
  float32x4_t v421;
  int8x16_t v422;
  char v423;
  int v424;
  float32x4_t v425;
  float32x4_t v426;
  float32x4_t v427;
  int8x8_t v428;
  float32x4_t v429;
  int8x16_t v430;
  char v431;
  int v432;
  float32x4_t v433;
  float32x4_t v434;
  int8x8_t v435;
  float32x4_t v436;
  int8x16_t v437;
  char v438;
  int v439;
  float32x4_t v440;
  float32x4_t v441;
  int8x8_t v442;
  float32x4_t v443;
  int8x16_t v444;
  char v445;
  int v446;
  float32x4_t v447;
  float32x4_t v448;
  int8x8_t v449;
  float32x4_t v450;
  int8x16_t v451;
  char v452;
  int v453;
  float32x4_t v454;
  float32x4_t v455;
  int8x8_t v456;
  float32x4_t v457;
  int8x16_t v458;
  char v459;
  int v460;
  int v461;
  float32x4_t v462;
  int8x8_t v463;
  float32x4_t v464;
  int8x16_t v465;
  char v466;
  int v467;
  int v468;
  float32x4_t v469;
  int8x8_t v470;
  float32x4_t v471;
  int8x16_t v472;
  char v473;
  int v474;
  int8x16_t v475;
  float32x4_t v476;
  float32x4_t v477;
  int8x8_t v478;
  float32x4_t v479;
  char v480;
  int v481;
  float32x4_t v482;
  int8x8_t v483;
  float32x4_t v484;
  int8x16_t v485;
  char v486;
  int v487;
  float32x4_t v488;
  int8x16_t v489;
  int8x8_t v490;
  float32x4_t v491;
  char v492;
  int v493;
  float32x4_t v494;
  int8x8_t v495;
  float32x4_t v496;
  int8x16_t v497;
  char v498;
  int v499;
  float32x4_t v500;
  float32x4_t v501;
  int8x8_t v502;
  float32x4_t v503;
  int8x16_t v504;
  char v505;
  int v506;
  float32x4_t v507;
  float32x4_t v508;
  int8x8_t v509;
  float32x4_t v510;
  int8x16_t v511;
  char v512;
  int v513;
  float32x4_t v514;
  float32x4_t v515;
  int8x8_t v516;
  float32x4_t v517;
  int8x16_t v518;
  char v519;
  int v520;
  float32x4_t v521;
  float32x4_t v522;
  int8x8_t v523;
  float32x4_t v524;
  int8x16_t v525;
  char v526;
  int v527;
  float32x4_t v528;
  float32x4_t v529;
  int8x8_t v530;
  float32x4_t v531;
  int8x16_t v532;
  char v533;
  int v534;
  float32x4_t v535;
  float32x4_t v536;
  int8x8_t v537;
  float32x4_t v538;
  int8x16_t v539;
  char v540;
  int v541;
  float32x4_t v542;
  int8x8_t v543;
  float32x4_t v544;
  int8x16_t v545;
  char v546;
  int v547;
  float32x4_t v548;
  int8x8_t v549;
  float32x4_t v550;
  int8x16_t v551;
  char v552;
  int v553;
  float32x4_t v554;
  int8x8_t v555;
  float32x4_t v556;
  int8x16_t v557;
  char v558;
  __int8 *v559;
  int v560;
  float32x4_t v561;
  int8x8_t v562;
  float32x4_t v563;
  int8x16_t v564;
  char v565;
  int v566;
  float32x4_t v567;
  float32x4_t v568;
  int8x8_t v569;
  float32x4_t v570;
  int8x16_t v571;
  char v572;
  int v573;
  float32x4_t v574;
  float32x4_t v575;
  int8x8_t v576;
  float32x4_t v577;
  int8x16_t v578;
  char v579;
  int v580;
  float32x4_t v581;
  int8x16_t v582;
  int8x8_t v583;
  float32x4_t v584;
  char v585;
  int v586;
  int8x16_t v587;
  int8x8_t v588;
  float32x4_t v589;
  char v590;

  *(int32x2_t *)a6.f32 = *a2;
  v16.i32[1] = 1;
  *(int32x2_t *)a4.f32 = vadd_s32(*a2, (int32x2_t)0x100000004);
  v12 = a2[1].i32[0];
  v13 = (_BYTE *)***a1;
  v14 = *(*a1)[5];
  v15 = (char)v13[10646];
  v16.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v14 + 40784) + 312);
  *(float32x2_t *)a7.f32 = vcvt_f32_s32(*(int32x2_t *)a4.f32);
  v17 = a7;
  v17.f32[2] = (float)(v12 + 2);
  v18.i64[0] = 0x3F0000003F000000;
  v18.i64[1] = 0x3F0000003F000000;
  if (v13[10646])
  {
    v19 = vaddq_f32(v17, v18);
    v20 = *(_QWORD *)(v14 + 8);
    v17.i32[0] = **(_DWORD **)(v14 + 16);
    if (v15 > 0)
      goto LABEL_10;
  }
  else
  {
    a10.i8[0] = v13[10643];
    a10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.f32));
    a10.f32[0] = (float)a10.i32[0];
    v10.i8[0] = v13[10644];
    v21 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v21.i32 = (float)v21.i32[0];
    a10.i32[1] = v21.i32[0];
    v21.i8[0] = v13[10645];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v21)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    a10.i32[2] = v10.i32[0];
    v17 = vaddq_f32(v17, v18);
    v19 = vaddq_f32(v17, vmulq_f32(a10, (float32x4_t)vdupq_n_s32(0x3B808081u)));
    v20 = *(_QWORD *)(v14 + 8);
    v17.i32[0] = **(_DWORD **)(v14 + 16);
    if (v15 > 0)
      goto LABEL_10;
  }
  a10.i64[0] = *(_QWORD *)v20;
  a10.i32[2] = *(_DWORD *)(v20 + 8);
  v22 = (int8x16_t)vmlsq_lane_f32(a10, v19, v16, 0);
  v10.i64[0] = vextq_s8(v22, v22, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v22.i8, *(float32x2_t *)v22.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v22.i8, 1), *(float32x2_t *)v22.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v23 = v13[10646] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v23;
    if (v15)
      return 0;
  }
LABEL_10:
  v24 = v12 + 3;
  v25 = (char)v13[10686];
  if (v13[10686])
  {
    v26 = a7;
    v26.f32[2] = (float)v24;
    v27.i64[0] = 0x3F0000003F000000;
    v27.i64[1] = 0x3F0000003F000000;
    v28 = vaddq_f32(v26, v27);
    if (v25 > 0)
      goto LABEL_19;
  }
  else
  {
    v29 = a7;
    v29.f32[2] = (float)v24;
    v30.i64[0] = 0x3F0000003F000000;
    v30.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10684];
    v31 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v31.i32 = (float)v31.i32[0];
    v10.i32[1] = v31.i32[0];
    v31.i8[0] = v13[10685];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v31)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v32 = vaddq_f32(v29, v30);
    v26 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v28 = vaddq_f32(v32, v26);
    if (v25 > 0)
      goto LABEL_19;
  }
  v26.i64[0] = *(_QWORD *)v20;
  v26.i32[2] = *(_DWORD *)(v20 + 8);
  v33 = (int8x16_t)vmlsq_lane_f32(v26, v28, v16, 0);
  v10.i64[0] = vextq_s8(v33, v33, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v33.i8, *(float32x2_t *)v33.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v33.i8, 1), *(float32x2_t *)v33.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v34 = v13[10686] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v34;
    if (v25)
      return 0;
  }
LABEL_19:
  v35 = a6.i32[0] + 5;
  v36 = (char)v13[10726];
  if (v13[10726])
  {
    v37 = a6;
    v37.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v37.f32 = vcvt_f32_s32(*(int32x2_t *)v37.f32);
    v37.f32[2] = (float)(v12 + 2);
    v38.i64[0] = 0x3F0000003F000000;
    v38.i64[1] = 0x3F0000003F000000;
    v39 = vaddq_f32(v37, v38);
    if (v36 > 0)
      goto LABEL_28;
  }
  else
  {
    v40 = a6;
    v40.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v40.f32 = vcvt_f32_s32(*(int32x2_t *)v40.f32);
    v40.f32[2] = (float)(v12 + 2);
    v41.i64[0] = 0x3F0000003F000000;
    v41.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10723];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10724];
    v42 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v42.i32 = (float)v42.i32[0];
    v10.i32[1] = v42.i32[0];
    v42.i8[0] = v13[10725];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v42)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v43 = vaddq_f32(v40, v41);
    v38 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v39 = vaddq_f32(v43, v38);
    if (v36 > 0)
      goto LABEL_28;
  }
  v38.i64[0] = *(_QWORD *)v20;
  v38.i32[2] = *(_DWORD *)(v20 + 8);
  v44 = (int8x16_t)vmlsq_lane_f32(v38, v39, v16, 0);
  v10.i64[0] = vextq_s8(v44, v44, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v44.i8, *(float32x2_t *)v44.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v44.i8, 1), *(float32x2_t *)v44.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v45 = v13[10726] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v45;
    if (v36)
      return 0;
  }
LABEL_28:
  v46 = (char)v13[10766];
  if (v13[10766])
  {
    v47 = a6;
    v47.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v47.f32 = vcvt_f32_s32(*(int32x2_t *)v47.f32);
    v47.f32[2] = (float)v24;
    v48.i64[0] = 0x3F0000003F000000;
    v48.i64[1] = 0x3F0000003F000000;
    v49 = vaddq_f32(v47, v48);
    if (v46 > 0)
      goto LABEL_37;
  }
  else
  {
    v50 = a6;
    v50.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v50.f32 = vcvt_f32_s32(*(int32x2_t *)v50.f32);
    v50.f32[2] = (float)v24;
    v51.i64[0] = 0x3F0000003F000000;
    v51.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10763];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10764];
    v52 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v52.i32 = (float)v52.i32[0];
    v10.i32[1] = v52.i32[0];
    v52.i8[0] = v13[10765];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v52)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v53 = vaddq_f32(v50, v51);
    v48 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v49 = vaddq_f32(v53, v48);
    if (v46 > 0)
      goto LABEL_37;
  }
  v48.i64[0] = *(_QWORD *)v20;
  v48.i32[2] = *(_DWORD *)(v20 + 8);
  v54 = (int8x16_t)vmlsq_lane_f32(v48, v49, v16, 0);
  v10.i64[0] = vextq_s8(v54, v54, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v54.i8, *(float32x2_t *)v54.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v54.i8, 1), *(float32x2_t *)v54.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v55 = v13[10766] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v55;
    if (v46)
      return 0;
  }
LABEL_37:
  v56 = (char)v13[10806];
  if (v13[10806])
  {
    v57 = a4;
    v57.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v57.f32 = vcvt_f32_s32(*(int32x2_t *)v57.f32);
    v57.f32[2] = (float)(v12 + 2);
    v58.i64[0] = 0x3F0000003F000000;
    v58.i64[1] = 0x3F0000003F000000;
    v59 = vaddq_f32(v57, v58);
    if (v56 > 0)
      goto LABEL_46;
  }
  else
  {
    v60 = a4;
    v60.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v60.f32 = vcvt_f32_s32(*(int32x2_t *)v60.f32);
    v60.f32[2] = (float)(v12 + 2);
    v61.i64[0] = 0x3F0000003F000000;
    v61.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10803];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10804];
    v62 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v62.i32 = (float)v62.i32[0];
    v10.i32[1] = v62.i32[0];
    v62.i8[0] = v13[10805];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v62)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v63 = vaddq_f32(v60, v61);
    v58 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v59 = vaddq_f32(v63, v58);
    if (v56 > 0)
      goto LABEL_46;
  }
  v58.i64[0] = *(_QWORD *)v20;
  v58.i32[2] = *(_DWORD *)(v20 + 8);
  v64 = (int8x16_t)vmlsq_lane_f32(v58, v59, v16, 0);
  v10.i64[0] = vextq_s8(v64, v64, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v64.i8, *(float32x2_t *)v64.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v64.i8, 1), *(float32x2_t *)v64.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v65 = v13[10806] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v65;
    if (v56)
      return 0;
  }
LABEL_46:
  v66 = (char)v13[10846];
  if (v13[10846])
  {
    v67 = a4;
    v67.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v67.f32 = vcvt_f32_s32(*(int32x2_t *)v67.f32);
    v67.f32[2] = (float)v24;
    v68.i64[0] = 0x3F0000003F000000;
    v68.i64[1] = 0x3F0000003F000000;
    v69 = vaddq_f32(v67, v68);
    if (v66 > 0)
      goto LABEL_55;
  }
  else
  {
    v70 = a4;
    v70.i32[0] = a6.i32[0] + 5;
    *(float32x2_t *)v70.f32 = vcvt_f32_s32(*(int32x2_t *)v70.f32);
    v70.f32[2] = (float)v24;
    v71.i64[0] = 0x3F0000003F000000;
    v71.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10844];
    v72 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v72.i32 = (float)v72.i32[0];
    v10.i32[1] = v72.i32[0];
    v72.i8[0] = v13[10845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v72)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v73 = vaddq_f32(v70, v71);
    v68 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v69 = vaddq_f32(v73, v68);
    if (v66 > 0)
      goto LABEL_55;
  }
  v68.i64[0] = *(_QWORD *)v20;
  v68.i32[2] = *(_DWORD *)(v20 + 8);
  v74 = (int8x16_t)vmlsq_lane_f32(v68, v69, v16, 0);
  v10.i64[0] = vextq_s8(v74, v74, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v74.i8, *(float32x2_t *)v74.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v74.i8, 1), *(float32x2_t *)v74.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v75 = v13[10846] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v75;
    if (v66)
      return 0;
  }
LABEL_55:
  v76 = a6.i32[1] + 2;
  v77 = (char)v13[10886];
  if (v13[10886])
  {
    v78 = a4;
    v78.i32[1] = a6.i32[1] + 2;
    *(float32x2_t *)v78.f32 = vcvt_f32_s32(*(int32x2_t *)v78.f32);
    v78.f32[2] = (float)v12;
    v79.i64[0] = 0x3F0000003F000000;
    v79.i64[1] = 0x3F0000003F000000;
    v80 = vaddq_f32(v78, v79);
    if (v77 > 0)
      goto LABEL_64;
  }
  else
  {
    v81 = a4;
    v81.i32[1] = a6.i32[1] + 2;
    *(float32x2_t *)v81.f32 = vcvt_f32_s32(*(int32x2_t *)v81.f32);
    v81.f32[2] = (float)v12;
    v82.i64[0] = 0x3F0000003F000000;
    v82.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10884];
    v83 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v83.i32 = (float)v83.i32[0];
    v10.i32[1] = v83.i32[0];
    v83.i8[0] = v13[10885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v83)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v84 = vaddq_f32(v81, v82);
    v79 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v80 = vaddq_f32(v84, v79);
    if (v77 > 0)
      goto LABEL_64;
  }
  v79.i64[0] = *(_QWORD *)v20;
  v79.i32[2] = *(_DWORD *)(v20 + 8);
  v85 = (int8x16_t)vmlsq_lane_f32(v79, v80, v16, 0);
  v10.i64[0] = vextq_s8(v85, v85, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v85.i8, *(float32x2_t *)v85.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v85.i8, 1), *(float32x2_t *)v85.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v86 = v13[10886] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v86;
    if (v77)
      return 0;
  }
LABEL_64:
  v87 = v12 + 1;
  v88 = (char)v13[10926];
  if (v13[10926])
  {
    v89 = a4;
    v89.i32[1] = a6.i32[1] + 2;
    *(float32x2_t *)v89.f32 = vcvt_f32_s32(*(int32x2_t *)v89.f32);
    v89.f32[2] = (float)v87;
    v90.i64[0] = 0x3F0000003F000000;
    v90.i64[1] = 0x3F0000003F000000;
    v91 = vaddq_f32(v89, v90);
    if (v88 > 0)
      goto LABEL_73;
  }
  else
  {
    v92 = a4;
    v92.i32[1] = a6.i32[1] + 2;
    *(float32x2_t *)v92.f32 = vcvt_f32_s32(*(int32x2_t *)v92.f32);
    v92.f32[2] = (float)v87;
    v93.i64[0] = 0x3F0000003F000000;
    v93.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10924];
    v94 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v94.i32 = (float)v94.i32[0];
    v10.i32[1] = v94.i32[0];
    v94.i8[0] = v13[10925];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v94)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v95 = vaddq_f32(v92, v93);
    v90 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v91 = vaddq_f32(v95, v90);
    if (v88 > 0)
      goto LABEL_73;
  }
  v90.i64[0] = *(_QWORD *)v20;
  v90.i32[2] = *(_DWORD *)(v20 + 8);
  v96 = (int8x16_t)vmlsq_lane_f32(v90, v91, v16, 0);
  v10.i64[0] = vextq_s8(v96, v96, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v96.i8, *(float32x2_t *)v96.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v96.i8, 1), *(float32x2_t *)v96.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v97 = v13[10926] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v97;
    if (v88)
      return 0;
  }
LABEL_73:
  v98 = a6.i32[1] + 3;
  v99 = (char)v13[10966];
  if (v13[10966])
  {
    v100 = a4;
    v100.i32[1] = a6.i32[1] + 3;
    *(float32x2_t *)v100.f32 = vcvt_f32_s32(*(int32x2_t *)v100.f32);
    v100.f32[2] = (float)v12;
    v101.i64[0] = 0x3F0000003F000000;
    v101.i64[1] = 0x3F0000003F000000;
    v102 = vaddq_f32(v100, v101);
    if (v99 > 0)
      goto LABEL_82;
  }
  else
  {
    v103 = a4;
    v103.i32[1] = a6.i32[1] + 3;
    *(float32x2_t *)v103.f32 = vcvt_f32_s32(*(int32x2_t *)v103.f32);
    v103.f32[2] = (float)v12;
    v104.i64[0] = 0x3F0000003F000000;
    v104.i64[1] = 0x3F0000003F000000;
    v10.i8[0] = v13[10963];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[10964];
    v105 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v105.i32 = (float)v105.i32[0];
    v10.i32[1] = v105.i32[0];
    v105.i8[0] = v13[10965];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v105)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v106 = vaddq_f32(v103, v104);
    v101 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v102 = vaddq_f32(v106, v101);
    if (v99 > 0)
      goto LABEL_82;
  }
  v101.i64[0] = *(_QWORD *)v20;
  v101.i32[2] = *(_DWORD *)(v20 + 8);
  v107 = (int8x16_t)vmlsq_lane_f32(v101, v102, v16, 0);
  v10.i64[0] = vextq_s8(v107, v107, 8uLL).u64[0];
  v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v107.i8, *(float32x2_t *)v107.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v107.i8, 1), *(float32x2_t *)v107.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
  if (*(float *)v11.i32 <= v17.f32[0])
  {
    v108 = v13[10966] ? 2 : 1;
    **(_BYTE **)(v14 + 24) = v108;
    if (v99)
      return 0;
  }
LABEL_82:
  v109 = (char)v13[11006];
  v110 = a4;
  v110.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v110.f32 = vcvt_f32_s32(*(int32x2_t *)v110.f32);
  v110.f32[2] = (float)v87;
  v111.i64[0] = 0x3F0000003F000000;
  v111.i64[1] = 0x3F0000003F000000;
  if (!v13[11006])
  {
    v10.i8[0] = v13[11003];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11004];
    v112 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v112.i32 = (float)v112.i32[0];
    v10.i32[1] = v112.i32[0];
    v112.i8[0] = v13[11005];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v112)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v110 = vaddq_f32(v110, v111);
    v111 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v113 = vaddq_f32(v110, v111);
  if (v109 <= 0)
  {
    v111.i64[0] = *(_QWORD *)v20;
    v111.i32[2] = *(_DWORD *)(v20 + 8);
    v114 = (int8x16_t)vmlsq_lane_f32(v111, v113, v16, 0);
    v10.i64[0] = vextq_s8(v114, v114, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v114.i8, *(float32x2_t *)v114.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v114.i8, 1), *(float32x2_t *)v114.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v115 = v13[11006] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v115;
      if (v109)
        return 0;
    }
  }
  v116 = (char)v13[11046];
  *(float32x2_t *)v113.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v35));
  v113.f32[2] = (float)v12;
  v117.i64[0] = 0x3F0000003F000000;
  v117.i64[1] = 0x3F0000003F000000;
  if (!v13[11046])
  {
    v10.i8[0] = v13[11043];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11044];
    v118 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v118.i32 = (float)v118.i32[0];
    v10.i32[1] = v118.i32[0];
    v118.i8[0] = v13[11045];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v118)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v113 = vaddq_f32(v113, v117);
    v117 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v119 = vaddq_f32(v113, v117);
  if (v116 <= 0)
  {
    v117.i64[0] = *(_QWORD *)v20;
    v117.i32[2] = *(_DWORD *)(v20 + 8);
    v120 = (int8x16_t)vmlsq_lane_f32(v117, v119, v16, 0);
    v10.i64[0] = vextq_s8(v120, v120, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v120.i8, *(float32x2_t *)v120.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v120.i8, 1), *(float32x2_t *)v120.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v121 = v13[11046] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v121;
      if (v116)
        return 0;
    }
  }
  v122 = (char)v13[11086];
  *(float32x2_t *)v119.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v35));
  v119.f32[2] = (float)v87;
  v123.i64[0] = 0x3F0000003F000000;
  v123.i64[1] = 0x3F0000003F000000;
  if (!v13[11086])
  {
    v10.i8[0] = v13[11083];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11084];
    v124 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v124.i32 = (float)v124.i32[0];
    v10.i32[1] = v124.i32[0];
    v124.i8[0] = v13[11085];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v124)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v119 = vaddq_f32(v119, v123);
    v123 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v125 = vaddq_f32(v119, v123);
  if (v122 <= 0)
  {
    v123.i64[0] = *(_QWORD *)v20;
    v123.i32[2] = *(_DWORD *)(v20 + 8);
    v126 = (int8x16_t)vmlsq_lane_f32(v123, v125, v16, 0);
    v10.i64[0] = vextq_s8(v126, v126, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v126.i8, *(float32x2_t *)v126.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v126.i8, 1), *(float32x2_t *)v126.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v127 = v13[11086] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v127;
      if (v122)
        return 0;
    }
  }
  v128 = (char)v13[11126];
  *(float32x2_t *)v125.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v35));
  v125.f32[2] = (float)v12;
  v129.i64[0] = 0x3F0000003F000000;
  v129.i64[1] = 0x3F0000003F000000;
  if (!v13[11126])
  {
    v10.i8[0] = v13[11123];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11124];
    v130 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v130.i32 = (float)v130.i32[0];
    v10.i32[1] = v130.i32[0];
    v130.i8[0] = v13[11125];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v130)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v125 = vaddq_f32(v125, v129);
    v129 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v131 = vaddq_f32(v125, v129);
  if (v128 <= 0)
  {
    v129.i64[0] = *(_QWORD *)v20;
    v129.i32[2] = *(_DWORD *)(v20 + 8);
    v132 = (int8x16_t)vmlsq_lane_f32(v129, v131, v16, 0);
    v10.i64[0] = vextq_s8(v132, v132, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v132.i8, *(float32x2_t *)v132.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v132.i8, 1), *(float32x2_t *)v132.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v133 = v13[11126] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v133;
      if (v128)
        return 0;
    }
  }
  v134 = (char)v13[11166];
  *(float32x2_t *)v131.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v35));
  v131.f32[2] = (float)v87;
  v135.i64[0] = 0x3F0000003F000000;
  v135.i64[1] = 0x3F0000003F000000;
  if (!v13[11166])
  {
    v10.i8[0] = v13[11163];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11164];
    v136 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v136.i32 = (float)v136.i32[0];
    v10.i32[1] = v136.i32[0];
    v136.i8[0] = v13[11165];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v136)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v131 = vaddq_f32(v131, v135);
    v135 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v137 = vaddq_f32(v131, v135);
  if (v134 <= 0)
  {
    v135.i64[0] = *(_QWORD *)v20;
    v135.i32[2] = *(_DWORD *)(v20 + 8);
    v138 = (int8x16_t)vmlsq_lane_f32(v135, v137, v16, 0);
    v10.i64[0] = vextq_s8(v138, v138, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v138.i8, *(float32x2_t *)v138.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v138.i8, 1), *(float32x2_t *)v138.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v139 = v13[11166] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v139;
      if (v134)
        return 0;
    }
  }
  v140 = (char)v13[11206];
  v141 = a4;
  v141.i32[1] = a6.i32[1] + 2;
  *(float32x2_t *)v141.f32 = vcvt_f32_s32(*(int32x2_t *)v141.f32);
  v141.f32[2] = (float)(v12 + 2);
  v142.i64[0] = 0x3F0000003F000000;
  v142.i64[1] = 0x3F0000003F000000;
  if (!v13[11206])
  {
    v10.i8[0] = v13[11203];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11204];
    v143 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v143.i32 = (float)v143.i32[0];
    v10.i32[1] = v143.i32[0];
    v143.i8[0] = v13[11205];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v143)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v141 = vaddq_f32(v141, v142);
    v142 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v144 = vaddq_f32(v141, v142);
  if (v140 <= 0)
  {
    v142.i64[0] = *(_QWORD *)v20;
    v142.i32[2] = *(_DWORD *)(v20 + 8);
    v145 = (int8x16_t)vmlsq_lane_f32(v142, v144, v16, 0);
    v10.i64[0] = vextq_s8(v145, v145, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v145.i8, *(float32x2_t *)v145.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v145.i8, 1), *(float32x2_t *)v145.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v146 = v13[11206] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v146;
      if (v140)
        return 0;
    }
  }
  v147 = (char)v13[11246];
  v148 = a4;
  v148.i32[1] = a6.i32[1] + 2;
  *(float32x2_t *)v148.f32 = vcvt_f32_s32(*(int32x2_t *)v148.f32);
  v148.f32[2] = (float)v24;
  v149.i64[0] = 0x3F0000003F000000;
  v149.i64[1] = 0x3F0000003F000000;
  if (!v13[11246])
  {
    v10.i8[0] = v13[11243];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11244];
    v150 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v150.i32 = (float)v150.i32[0];
    v10.i32[1] = v150.i32[0];
    v150.i8[0] = v13[11245];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v150)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v148 = vaddq_f32(v148, v149);
    v149 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v151 = vaddq_f32(v148, v149);
  if (v147 <= 0)
  {
    v149.i64[0] = *(_QWORD *)v20;
    v149.i32[2] = *(_DWORD *)(v20 + 8);
    v152 = (int8x16_t)vmlsq_lane_f32(v149, v151, v16, 0);
    v10.i64[0] = vextq_s8(v152, v152, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v152.i8, *(float32x2_t *)v152.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v152.i8, 1), *(float32x2_t *)v152.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v153 = v13[11246] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v153;
      if (v147)
        return 0;
    }
  }
  v154 = (char)v13[11286];
  v155 = a4;
  v155.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v155.f32 = vcvt_f32_s32(*(int32x2_t *)v155.f32);
  v155.f32[2] = (float)(v12 + 2);
  v156.i64[0] = 0x3F0000003F000000;
  v156.i64[1] = 0x3F0000003F000000;
  if (!v13[11286])
  {
    v10.i8[0] = v13[11283];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11284];
    v157 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v157.i32 = (float)v157.i32[0];
    v10.i32[1] = v157.i32[0];
    v157.i8[0] = v13[11285];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v157)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v155 = vaddq_f32(v155, v156);
    v156 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v158 = vaddq_f32(v155, v156);
  if (v154 <= 0)
  {
    v156.i64[0] = *(_QWORD *)v20;
    v156.i32[2] = *(_DWORD *)(v20 + 8);
    v159 = (int8x16_t)vmlsq_lane_f32(v156, v158, v16, 0);
    v10.i64[0] = vextq_s8(v159, v159, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v159.i8, *(float32x2_t *)v159.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v159.i8, 1), *(float32x2_t *)v159.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v160 = v13[11286] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v160;
      if (v154)
        return 0;
    }
  }
  v161 = (char)v13[11326];
  v162 = a4;
  v162.i32[1] = a6.i32[1] + 3;
  *(float32x2_t *)v162.f32 = vcvt_f32_s32(*(int32x2_t *)v162.f32);
  v162.f32[2] = (float)v24;
  v163.i64[0] = 0x3F0000003F000000;
  v163.i64[1] = 0x3F0000003F000000;
  if (!v13[11326])
  {
    v10.i8[0] = v13[11323];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11324];
    v164 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v164.i32 = (float)v164.i32[0];
    v10.i32[1] = v164.i32[0];
    v164.i8[0] = v13[11325];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v164)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v162 = vaddq_f32(v162, v163);
    v163 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v165 = vaddq_f32(v162, v163);
  if (v161 <= 0)
  {
    v163.i64[0] = *(_QWORD *)v20;
    v163.i32[2] = *(_DWORD *)(v20 + 8);
    v166 = (int8x16_t)vmlsq_lane_f32(v163, v165, v16, 0);
    v10.i64[0] = vextq_s8(v166, v166, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v166.i8, *(float32x2_t *)v166.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v166.i8, 1), *(float32x2_t *)v166.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v167 = v13[11326] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v167;
      if (v161)
        return 0;
    }
  }
  v168 = (char)v13[11366];
  *(float32x2_t *)v165.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v35));
  v165.f32[2] = (float)(v12 + 2);
  v169.i64[0] = 0x3F0000003F000000;
  v169.i64[1] = 0x3F0000003F000000;
  if (!v13[11366])
  {
    v10.i8[0] = v13[11363];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11364];
    v170 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v170.i32 = (float)v170.i32[0];
    v10.i32[1] = v170.i32[0];
    v170.i8[0] = v13[11365];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v170)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v165 = vaddq_f32(v165, v169);
    v169 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v171 = vaddq_f32(v165, v169);
  if (v168 <= 0)
  {
    v169.i64[0] = *(_QWORD *)v20;
    v169.i32[2] = *(_DWORD *)(v20 + 8);
    v172 = (int8x16_t)vmlsq_lane_f32(v169, v171, v16, 0);
    v10.i64[0] = vextq_s8(v172, v172, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v172.i8, *(float32x2_t *)v172.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v172.i8, 1), *(float32x2_t *)v172.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v173 = v13[11366] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v173;
      if (v168)
        return 0;
    }
  }
  v174 = (char)v13[11406];
  *(float32x2_t *)v171.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v35));
  v171.f32[2] = (float)v24;
  v175.i64[0] = 0x3F0000003F000000;
  v175.i64[1] = 0x3F0000003F000000;
  if (!v13[11406])
  {
    v10.i8[0] = v13[11403];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11404];
    v176 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v176.i32 = (float)v176.i32[0];
    v10.i32[1] = v176.i32[0];
    v176.i8[0] = v13[11405];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v176)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v171 = vaddq_f32(v171, v175);
    v175 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v177 = vaddq_f32(v171, v175);
  if (v174 <= 0)
  {
    v175.i64[0] = *(_QWORD *)v20;
    v175.i32[2] = *(_DWORD *)(v20 + 8);
    v178 = (int8x16_t)vmlsq_lane_f32(v175, v177, v16, 0);
    v10.i64[0] = vextq_s8(v178, v178, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v178.i8, *(float32x2_t *)v178.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v178.i8, 1), *(float32x2_t *)v178.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v179 = v13[11406] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v179;
      if (v174)
        return 0;
    }
  }
  v180 = (char)v13[11446];
  *(float32x2_t *)v177.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v35));
  v177.f32[2] = (float)(v12 + 2);
  v181.i64[0] = 0x3F0000003F000000;
  v181.i64[1] = 0x3F0000003F000000;
  if (!v13[11446])
  {
    v10.i8[0] = v13[11443];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11444];
    v182 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v182.i32 = (float)v182.i32[0];
    v10.i32[1] = v182.i32[0];
    v182.i8[0] = v13[11445];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v182)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v177 = vaddq_f32(v177, v181);
    v181 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v183 = vaddq_f32(v177, v181);
  if (v180 <= 0)
  {
    v181.i64[0] = *(_QWORD *)v20;
    v181.i32[2] = *(_DWORD *)(v20 + 8);
    v184 = (int8x16_t)vmlsq_lane_f32(v181, v183, v16, 0);
    v10.i64[0] = vextq_s8(v184, v184, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v184.i8, *(float32x2_t *)v184.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v184.i8, 1), *(float32x2_t *)v184.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v185 = v13[11446] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v185;
      if (v180)
        return 0;
    }
  }
  v186 = (char)v13[11486];
  *(float32x2_t *)v183.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v35));
  v183.f32[2] = (float)v24;
  v187.i64[0] = 0x3F0000003F000000;
  v187.i64[1] = 0x3F0000003F000000;
  if (!v13[11486])
  {
    v10.i8[0] = v13[11483];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11484];
    v188 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v188.i32 = (float)v188.i32[0];
    v10.i32[1] = v188.i32[0];
    v188.i8[0] = v13[11485];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v188)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v183 = vaddq_f32(v183, v187);
    v187 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v189 = vaddq_f32(v183, v187);
  if (v186 <= 0)
  {
    v187.i64[0] = *(_QWORD *)v20;
    v187.i32[2] = *(_DWORD *)(v20 + 8);
    v190 = (int8x16_t)vmlsq_lane_f32(v187, v189, v16, 0);
    v10.i64[0] = vextq_s8(v190, v190, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v190.i8, *(float32x2_t *)v190.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v190.i8, 1), *(float32x2_t *)v190.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v191 = v13[11486] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v191;
      if (v186)
        return 0;
    }
  }
  v192 = a6.i32[0] + 6;
  v193 = (char)v13[11526];
  v194 = a6;
  v194.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v194.f32 = vcvt_f32_s32(*(int32x2_t *)v194.f32);
  v194.f32[2] = (float)v12;
  v195.i64[0] = 0x3F0000003F000000;
  v195.i64[1] = 0x3F0000003F000000;
  if (!v13[11526])
  {
    v10.i8[0] = v13[11523];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11524];
    v196 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v196.i32 = (float)v196.i32[0];
    v10.i32[1] = v196.i32[0];
    v196.i8[0] = v13[11525];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v196)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v194 = vaddq_f32(v194, v195);
    v195 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v197 = vaddq_f32(v194, v195);
  if (v193 <= 0)
  {
    v195.i64[0] = *(_QWORD *)v20;
    v195.i32[2] = *(_DWORD *)(v20 + 8);
    v198 = (int8x16_t)vmlsq_lane_f32(v195, v197, v16, 0);
    v10.i64[0] = vextq_s8(v198, v198, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v198.i8, *(float32x2_t *)v198.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v198.i8, 1), *(float32x2_t *)v198.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v199 = v13[11526] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v199;
      if (v193)
        return 0;
    }
  }
  v200 = (char)v13[11566];
  v201 = a6;
  v201.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v201.f32 = vcvt_f32_s32(*(int32x2_t *)v201.f32);
  v201.f32[2] = (float)v87;
  v202.i64[0] = 0x3F0000003F000000;
  v202.i64[1] = 0x3F0000003F000000;
  if (!v13[11566])
  {
    v10.i8[0] = v13[11563];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11564];
    v203 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v203.i32 = (float)v203.i32[0];
    v10.i32[1] = v203.i32[0];
    v203.i8[0] = v13[11565];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v203)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v201 = vaddq_f32(v201, v202);
    v202 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v204 = vaddq_f32(v201, v202);
  if (v200 <= 0)
  {
    v202.i64[0] = *(_QWORD *)v20;
    v202.i32[2] = *(_DWORD *)(v20 + 8);
    v205 = (int8x16_t)vmlsq_lane_f32(v202, v204, v16, 0);
    v10.i64[0] = vextq_s8(v205, v205, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v205.i8, *(float32x2_t *)v205.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v205.i8, 1), *(float32x2_t *)v205.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v206 = v13[11566] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v206;
      if (v200)
        return 0;
    }
  }
  v207 = (char)v13[11606];
  v208 = a4;
  v208.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v208.f32 = vcvt_f32_s32(*(int32x2_t *)v208.f32);
  v208.f32[2] = (float)v12;
  v209.i64[0] = 0x3F0000003F000000;
  v209.i64[1] = 0x3F0000003F000000;
  if (!v13[11606])
  {
    v10.i8[0] = v13[11603];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11604];
    v210 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v210.i32 = (float)v210.i32[0];
    v10.i32[1] = v210.i32[0];
    v210.i8[0] = v13[11605];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v210)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v208 = vaddq_f32(v208, v209);
    v209 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v211 = vaddq_f32(v208, v209);
  if (v207 <= 0)
  {
    v209.i64[0] = *(_QWORD *)v20;
    v209.i32[2] = *(_DWORD *)(v20 + 8);
    v212 = (int8x16_t)vmlsq_lane_f32(v209, v211, v16, 0);
    v10.i64[0] = vextq_s8(v212, v212, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v212.i8, *(float32x2_t *)v212.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v212.i8, 1), *(float32x2_t *)v212.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v213 = v13[11606] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v213;
      if (v207)
        return 0;
    }
  }
  v214 = (char)v13[11646];
  v215 = a4;
  v215.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v215.f32 = vcvt_f32_s32(*(int32x2_t *)v215.f32);
  v215.f32[2] = (float)v87;
  v216.i64[0] = 0x3F0000003F000000;
  v216.i64[1] = 0x3F0000003F000000;
  if (!v13[11646])
  {
    v10.i8[0] = v13[11643];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11644];
    v217 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v217.i32 = (float)v217.i32[0];
    v10.i32[1] = v217.i32[0];
    v217.i8[0] = v13[11645];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v217)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v215 = vaddq_f32(v215, v216);
    v216 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v218 = vaddq_f32(v215, v216);
  if (v214 <= 0)
  {
    v216.i64[0] = *(_QWORD *)v20;
    v216.i32[2] = *(_DWORD *)(v20 + 8);
    v219 = (int8x16_t)vmlsq_lane_f32(v216, v218, v16, 0);
    v10.i64[0] = vextq_s8(v219, v219, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v219.i8, *(float32x2_t *)v219.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v219.i8, 1), *(float32x2_t *)v219.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v220 = v13[11646] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v220;
      if (v214)
        return 0;
    }
  }
  v221 = a6.i32[0] + 7;
  v222 = (char)v13[11686];
  v223 = a6;
  v223.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v223.f32 = vcvt_f32_s32(*(int32x2_t *)v223.f32);
  v223.f32[2] = (float)v12;
  v224.i64[0] = 0x3F0000003F000000;
  v224.i64[1] = 0x3F0000003F000000;
  if (!v13[11686])
  {
    v10.i8[0] = v13[11683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11684];
    v225 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v225.i32 = (float)v225.i32[0];
    v10.i32[1] = v225.i32[0];
    v225.i8[0] = v13[11685];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v225)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v223 = vaddq_f32(v223, v224);
    v224 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v226 = vaddq_f32(v223, v224);
  if (v222 <= 0)
  {
    v224.i64[0] = *(_QWORD *)v20;
    v224.i32[2] = *(_DWORD *)(v20 + 8);
    v227 = (int8x16_t)vmlsq_lane_f32(v224, v226, v16, 0);
    v10.i64[0] = vextq_s8(v227, v227, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v227.i8, *(float32x2_t *)v227.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v227.i8, 1), *(float32x2_t *)v227.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v228 = v13[11686] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v228;
      if (v222)
        return 0;
    }
  }
  v229 = (char)v13[11726];
  v230 = a6;
  v230.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v230.f32 = vcvt_f32_s32(*(int32x2_t *)v230.f32);
  v230.f32[2] = (float)v87;
  v231.i64[0] = 0x3F0000003F000000;
  v231.i64[1] = 0x3F0000003F000000;
  if (!v13[11726])
  {
    v10.i8[0] = v13[11723];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11724];
    v232 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v232.i32 = (float)v232.i32[0];
    v10.i32[1] = v232.i32[0];
    v232.i8[0] = v13[11725];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v232)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v230 = vaddq_f32(v230, v231);
    v231 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v233 = vaddq_f32(v230, v231);
  if (v229 <= 0)
  {
    v231.i64[0] = *(_QWORD *)v20;
    v231.i32[2] = *(_DWORD *)(v20 + 8);
    v234 = (int8x16_t)vmlsq_lane_f32(v231, v233, v16, 0);
    v10.i64[0] = vextq_s8(v234, v234, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v234.i8, *(float32x2_t *)v234.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v234.i8, 1), *(float32x2_t *)v234.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v235 = v13[11726] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v235;
      if (v229)
        return 0;
    }
  }
  v236 = (char)v13[11766];
  v237 = a4;
  v237.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v237.f32 = vcvt_f32_s32(*(int32x2_t *)v237.f32);
  v237.f32[2] = (float)v12;
  v238.i64[0] = 0x3F0000003F000000;
  v238.i64[1] = 0x3F0000003F000000;
  if (!v13[11766])
  {
    v10.i8[0] = v13[11763];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11764];
    v239 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v239.i32 = (float)v239.i32[0];
    v10.i32[1] = v239.i32[0];
    v239.i8[0] = v13[11765];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v239)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v237 = vaddq_f32(v237, v238);
    v238 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v240 = vaddq_f32(v237, v238);
  if (v236 <= 0)
  {
    v238.i64[0] = *(_QWORD *)v20;
    v238.i32[2] = *(_DWORD *)(v20 + 8);
    v241 = (int8x16_t)vmlsq_lane_f32(v238, v240, v16, 0);
    v10.i64[0] = vextq_s8(v241, v241, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v241.i8, *(float32x2_t *)v241.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v241.i8, 1), *(float32x2_t *)v241.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v242 = v13[11766] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v242;
      if (v236)
        return 0;
    }
  }
  v243 = (char)v13[11806];
  v244 = a4;
  v244.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v244.f32 = vcvt_f32_s32(*(int32x2_t *)v244.f32);
  v244.f32[2] = (float)v87;
  v245.i64[0] = 0x3F0000003F000000;
  v245.i64[1] = 0x3F0000003F000000;
  if (!v13[11806])
  {
    v10.i8[0] = v13[11803];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11804];
    v246 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v246.i32 = (float)v246.i32[0];
    v10.i32[1] = v246.i32[0];
    v246.i8[0] = v13[11805];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v246)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v244 = vaddq_f32(v244, v245);
    v245 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v247 = vaddq_f32(v244, v245);
  if (v243 <= 0)
  {
    v245.i64[0] = *(_QWORD *)v20;
    v245.i32[2] = *(_DWORD *)(v20 + 8);
    v248 = (int8x16_t)vmlsq_lane_f32(v245, v247, v16, 0);
    v10.i64[0] = vextq_s8(v248, v248, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v248.i8, *(float32x2_t *)v248.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v248.i8, 1), *(float32x2_t *)v248.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v249 = v13[11806] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v249;
      if (v243)
        return 0;
    }
  }
  v250 = (char)v13[11846];
  v251 = a6;
  v251.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v251.f32 = vcvt_f32_s32(*(int32x2_t *)v251.f32);
  v251.f32[2] = (float)(v12 + 2);
  v252.i64[0] = 0x3F0000003F000000;
  v252.i64[1] = 0x3F0000003F000000;
  if (!v13[11846])
  {
    v10.i8[0] = v13[11843];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11844];
    v253 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v253.i32 = (float)v253.i32[0];
    v10.i32[1] = v253.i32[0];
    v253.i8[0] = v13[11845];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v253)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v251 = vaddq_f32(v251, v252);
    v252 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v254 = vaddq_f32(v251, v252);
  if (v250 <= 0)
  {
    v252.i64[0] = *(_QWORD *)v20;
    v252.i32[2] = *(_DWORD *)(v20 + 8);
    v255 = (int8x16_t)vmlsq_lane_f32(v252, v254, v16, 0);
    v10.i64[0] = vextq_s8(v255, v255, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v255.i8, *(float32x2_t *)v255.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v255.i8, 1), *(float32x2_t *)v255.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v256 = v13[11846] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v256;
      if (v250)
        return 0;
    }
  }
  v257 = (char)v13[11886];
  v258 = a6;
  v258.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v258.f32 = vcvt_f32_s32(*(int32x2_t *)v258.f32);
  v258.f32[2] = (float)v24;
  v259.i64[0] = 0x3F0000003F000000;
  v259.i64[1] = 0x3F0000003F000000;
  if (!v13[11886])
  {
    v10.i8[0] = v13[11883];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11884];
    v260 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v260.i32 = (float)v260.i32[0];
    v10.i32[1] = v260.i32[0];
    v260.i8[0] = v13[11885];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v260)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v258 = vaddq_f32(v258, v259);
    v259 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v261 = vaddq_f32(v258, v259);
  if (v257 <= 0)
  {
    v259.i64[0] = *(_QWORD *)v20;
    v259.i32[2] = *(_DWORD *)(v20 + 8);
    v262 = (int8x16_t)vmlsq_lane_f32(v259, v261, v16, 0);
    v10.i64[0] = vextq_s8(v262, v262, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v262.i8, *(float32x2_t *)v262.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v262.i8, 1), *(float32x2_t *)v262.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v263 = v13[11886] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v263;
      if (v257)
        return 0;
    }
  }
  v264 = (char)v13[11926];
  v265 = a4;
  v265.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v265.f32 = vcvt_f32_s32(*(int32x2_t *)v265.f32);
  v265.f32[2] = (float)(v12 + 2);
  v266.i64[0] = 0x3F0000003F000000;
  v266.i64[1] = 0x3F0000003F000000;
  if (!v13[11926])
  {
    v10.i8[0] = v13[11923];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11924];
    v267 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v267.i32 = (float)v267.i32[0];
    v10.i32[1] = v267.i32[0];
    v267.i8[0] = v13[11925];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v267)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v265 = vaddq_f32(v265, v266);
    v266 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v268 = vaddq_f32(v265, v266);
  if (v264 <= 0)
  {
    v266.i64[0] = *(_QWORD *)v20;
    v266.i32[2] = *(_DWORD *)(v20 + 8);
    v269 = (int8x16_t)vmlsq_lane_f32(v266, v268, v16, 0);
    v10.i64[0] = vextq_s8(v269, v269, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v269.i8, *(float32x2_t *)v269.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v269.i8, 1), *(float32x2_t *)v269.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v270 = v13[11926] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v270;
      if (v264)
        return 0;
    }
  }
  v271 = (char)v13[11966];
  v272 = a4;
  v272.i32[0] = a6.i32[0] + 6;
  *(float32x2_t *)v272.f32 = vcvt_f32_s32(*(int32x2_t *)v272.f32);
  v272.f32[2] = (float)v24;
  v273.i64[0] = 0x3F0000003F000000;
  v273.i64[1] = 0x3F0000003F000000;
  if (!v13[11966])
  {
    v10.i8[0] = v13[11963];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[11964];
    v274 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v274.i32 = (float)v274.i32[0];
    v10.i32[1] = v274.i32[0];
    v274.i8[0] = v13[11965];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v274)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v272 = vaddq_f32(v272, v273);
    v273 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v275 = vaddq_f32(v272, v273);
  if (v271 <= 0)
  {
    v273.i64[0] = *(_QWORD *)v20;
    v273.i32[2] = *(_DWORD *)(v20 + 8);
    v276 = (int8x16_t)vmlsq_lane_f32(v273, v275, v16, 0);
    v10.i64[0] = vextq_s8(v276, v276, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v276.i8, *(float32x2_t *)v276.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v276.i8, 1), *(float32x2_t *)v276.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v277 = v13[11966] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v277;
      if (v271)
        return 0;
    }
  }
  v278 = (char)v13[12006];
  v279 = a6;
  v279.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v279.f32 = vcvt_f32_s32(*(int32x2_t *)v279.f32);
  v279.f32[2] = (float)(v12 + 2);
  v280.i64[0] = 0x3F0000003F000000;
  v280.i64[1] = 0x3F0000003F000000;
  if (!v13[12006])
  {
    v10.i8[0] = v13[12003];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12004];
    v281 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v281.i32 = (float)v281.i32[0];
    v10.i32[1] = v281.i32[0];
    v281.i8[0] = v13[12005];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v281)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v279 = vaddq_f32(v279, v280);
    v280 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v282 = vaddq_f32(v279, v280);
  if (v278 <= 0)
  {
    v280.i64[0] = *(_QWORD *)v20;
    v280.i32[2] = *(_DWORD *)(v20 + 8);
    v283 = (int8x16_t)vmlsq_lane_f32(v280, v282, v16, 0);
    v10.i64[0] = vextq_s8(v283, v283, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v283.i8, *(float32x2_t *)v283.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v283.i8, 1), *(float32x2_t *)v283.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v284 = v13[12006] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v284;
      if (v278)
        return 0;
    }
  }
  v285 = (char)v13[12046];
  v286 = a6;
  v286.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v286.f32 = vcvt_f32_s32(*(int32x2_t *)v286.f32);
  v286.f32[2] = (float)v24;
  v287.i64[0] = 0x3F0000003F000000;
  v287.i64[1] = 0x3F0000003F000000;
  if (!v13[12046])
  {
    v10.i8[0] = v13[12043];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12044];
    v288 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v288.i32 = (float)v288.i32[0];
    v10.i32[1] = v288.i32[0];
    v288.i8[0] = v13[12045];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v288)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v286 = vaddq_f32(v286, v287);
    v287 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v289 = vaddq_f32(v286, v287);
  if (v285 <= 0)
  {
    v287.i64[0] = *(_QWORD *)v20;
    v287.i32[2] = *(_DWORD *)(v20 + 8);
    v290 = (int8x16_t)vmlsq_lane_f32(v287, v289, v16, 0);
    v10.i64[0] = vextq_s8(v290, v290, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v290.i8, *(float32x2_t *)v290.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v290.i8, 1), *(float32x2_t *)v290.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v291 = v13[12046] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v291;
      if (v285)
        return 0;
    }
  }
  v292 = (char)v13[12086];
  v293 = a4;
  v293.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v293.f32 = vcvt_f32_s32(*(int32x2_t *)v293.f32);
  v293.f32[2] = (float)(v12 + 2);
  v294.i64[0] = 0x3F0000003F000000;
  v294.i64[1] = 0x3F0000003F000000;
  if (!v13[12086])
  {
    v10.i8[0] = v13[12083];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12084];
    v295 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v295.i32 = (float)v295.i32[0];
    v10.i32[1] = v295.i32[0];
    v295.i8[0] = v13[12085];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v295)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v293 = vaddq_f32(v293, v294);
    v294 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v296 = vaddq_f32(v293, v294);
  if (v292 <= 0)
  {
    v294.i64[0] = *(_QWORD *)v20;
    v294.i32[2] = *(_DWORD *)(v20 + 8);
    v297 = (int8x16_t)vmlsq_lane_f32(v294, v296, v16, 0);
    v10.i64[0] = vextq_s8(v297, v297, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v297.i8, *(float32x2_t *)v297.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v297.i8, 1), *(float32x2_t *)v297.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v298 = v13[12086] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v298;
      if (v292)
        return 0;
    }
  }
  v299 = (char)v13[12126];
  v300 = a4;
  v300.i32[0] = a6.i32[0] + 7;
  *(float32x2_t *)v300.f32 = vcvt_f32_s32(*(int32x2_t *)v300.f32);
  v300.f32[2] = (float)v24;
  v301.i64[0] = 0x3F0000003F000000;
  v301.i64[1] = 0x3F0000003F000000;
  if (!v13[12126])
  {
    v10.i8[0] = v13[12123];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12124];
    v302 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v302.i32 = (float)v302.i32[0];
    v10.i32[1] = v302.i32[0];
    v302.i8[0] = v13[12125];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v302)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v300 = vaddq_f32(v300, v301);
    v301 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v303 = vaddq_f32(v300, v301);
  if (v299 <= 0)
  {
    v301.i64[0] = *(_QWORD *)v20;
    v301.i32[2] = *(_DWORD *)(v20 + 8);
    v304 = (int8x16_t)vmlsq_lane_f32(v301, v303, v16, 0);
    v10.i64[0] = vextq_s8(v304, v304, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v304.i8, *(float32x2_t *)v304.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v304.i8, 1), *(float32x2_t *)v304.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v305 = v13[12126] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v305;
      if (v299)
        return 0;
    }
  }
  v306 = (char)v13[12166];
  *(float32x2_t *)v303.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v192));
  v303.f32[2] = (float)v12;
  v307.i64[0] = 0x3F0000003F000000;
  v307.i64[1] = 0x3F0000003F000000;
  if (!v13[12166])
  {
    v10.i8[0] = v13[12163];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12164];
    v308 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v308.i32 = (float)v308.i32[0];
    v10.i32[1] = v308.i32[0];
    v308.i8[0] = v13[12165];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v308)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v303 = vaddq_f32(v303, v307);
    v307 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v309 = vaddq_f32(v303, v307);
  if (v306 <= 0)
  {
    v307.i64[0] = *(_QWORD *)v20;
    v307.i32[2] = *(_DWORD *)(v20 + 8);
    v310 = (int8x16_t)vmlsq_lane_f32(v307, v309, v16, 0);
    v10.i64[0] = vextq_s8(v310, v310, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v310.i8, *(float32x2_t *)v310.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v310.i8, 1), *(float32x2_t *)v310.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v311 = v13[12166] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v311;
      if (v306)
        return 0;
    }
  }
  v312 = (char)v13[12206];
  *(float32x2_t *)v309.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v192));
  v309.f32[2] = (float)v87;
  v313.i64[0] = 0x3F0000003F000000;
  v313.i64[1] = 0x3F0000003F000000;
  if (!v13[12206])
  {
    v10.i8[0] = v13[12203];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12204];
    v314 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v314.i32 = (float)v314.i32[0];
    v10.i32[1] = v314.i32[0];
    v314.i8[0] = v13[12205];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v314)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v309 = vaddq_f32(v309, v313);
    v313 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v315 = vaddq_f32(v309, v313);
  if (v312 <= 0)
  {
    v313.i64[0] = *(_QWORD *)v20;
    v313.i32[2] = *(_DWORD *)(v20 + 8);
    v316 = (int8x16_t)vmlsq_lane_f32(v313, v315, v16, 0);
    v10.i64[0] = vextq_s8(v316, v316, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v316.i8, *(float32x2_t *)v316.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v316.i8, 1), *(float32x2_t *)v316.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v317 = v13[12206] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v317;
      if (v312)
        return 0;
    }
  }
  v318 = (char)v13[12246];
  *(float32x2_t *)v315.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v192));
  v315.f32[2] = (float)v12;
  v319.i64[0] = 0x3F0000003F000000;
  v319.i64[1] = 0x3F0000003F000000;
  if (!v13[12246])
  {
    v10.i8[0] = v13[12243];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12244];
    v320 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v320.i32 = (float)v320.i32[0];
    v10.i32[1] = v320.i32[0];
    v320.i8[0] = v13[12245];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v320)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v315 = vaddq_f32(v315, v319);
    v319 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v321 = vaddq_f32(v315, v319);
  if (v318 <= 0)
  {
    v319.i64[0] = *(_QWORD *)v20;
    v319.i32[2] = *(_DWORD *)(v20 + 8);
    v322 = (int8x16_t)vmlsq_lane_f32(v319, v321, v16, 0);
    v10.i64[0] = vextq_s8(v322, v322, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v322.i8, *(float32x2_t *)v322.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v322.i8, 1), *(float32x2_t *)v322.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v323 = v13[12246] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v323;
      if (v318)
        return 0;
    }
  }
  v324 = (char)v13[12286];
  *(float32x2_t *)v321.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v192));
  v321.f32[2] = (float)v87;
  v325.i64[0] = 0x3F0000003F000000;
  v325.i64[1] = 0x3F0000003F000000;
  if (!v13[12286])
  {
    v10.i8[0] = v13[12283];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12284];
    v326 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v326.i32 = (float)v326.i32[0];
    v10.i32[1] = v326.i32[0];
    v326.i8[0] = v13[12285];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v326)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v321 = vaddq_f32(v321, v325);
    v325 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v327 = vaddq_f32(v321, v325);
  if (v324 <= 0)
  {
    v325.i64[0] = *(_QWORD *)v20;
    v325.i32[2] = *(_DWORD *)(v20 + 8);
    v328 = (int8x16_t)vmlsq_lane_f32(v325, v327, v16, 0);
    v10.i64[0] = vextq_s8(v328, v328, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v328.i8, *(float32x2_t *)v328.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v328.i8, 1), *(float32x2_t *)v328.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v329 = v13[12286] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v329;
      if (v324)
        return 0;
    }
  }
  v330 = (char)v13[12326];
  *(float32x2_t *)v327.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v221));
  v327.f32[2] = (float)v12;
  v331.i64[0] = 0x3F0000003F000000;
  v331.i64[1] = 0x3F0000003F000000;
  if (!v13[12326])
  {
    v10.i8[0] = v13[12323];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12324];
    v332 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v332.i32 = (float)v332.i32[0];
    v10.i32[1] = v332.i32[0];
    v332.i8[0] = v13[12325];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v332)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v327 = vaddq_f32(v327, v331);
    v331 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v333 = vaddq_f32(v327, v331);
  if (v330 <= 0)
  {
    v331.i64[0] = *(_QWORD *)v20;
    v331.i32[2] = *(_DWORD *)(v20 + 8);
    v334 = (int8x16_t)vmlsq_lane_f32(v331, v333, v16, 0);
    v10.i64[0] = vextq_s8(v334, v334, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v334.i8, *(float32x2_t *)v334.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v334.i8, 1), *(float32x2_t *)v334.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v335 = v13[12326] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v335;
      if (v330)
        return 0;
    }
  }
  v336 = (char)v13[12366];
  *(float32x2_t *)v333.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v221));
  v333.f32[2] = (float)v87;
  v337.i64[0] = 0x3F0000003F000000;
  v337.i64[1] = 0x3F0000003F000000;
  if (!v13[12366])
  {
    v10.i8[0] = v13[12363];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12364];
    v338 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v338.i32 = (float)v338.i32[0];
    v10.i32[1] = v338.i32[0];
    v338.i8[0] = v13[12365];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v338)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v333 = vaddq_f32(v333, v337);
    v337 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v339 = vaddq_f32(v333, v337);
  if (v336 <= 0)
  {
    v337.i64[0] = *(_QWORD *)v20;
    v337.i32[2] = *(_DWORD *)(v20 + 8);
    v340 = (int8x16_t)vmlsq_lane_f32(v337, v339, v16, 0);
    v10.i64[0] = vextq_s8(v340, v340, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v340.i8, *(float32x2_t *)v340.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v340.i8, 1), *(float32x2_t *)v340.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v341 = v13[12366] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v341;
      if (v336)
        return 0;
    }
  }
  v342 = (char)v13[12406];
  *(float32x2_t *)v339.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v221));
  v339.f32[2] = (float)v12;
  v343.i64[0] = 0x3F0000003F000000;
  v343.i64[1] = 0x3F0000003F000000;
  if (!v13[12406])
  {
    v10.i8[0] = v13[12403];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12404];
    v344 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v344.i32 = (float)v344.i32[0];
    v10.i32[1] = v344.i32[0];
    v344.i8[0] = v13[12405];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v344)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v339 = vaddq_f32(v339, v343);
    v343 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v345 = vaddq_f32(v339, v343);
  if (v342 <= 0)
  {
    v343.i64[0] = *(_QWORD *)v20;
    v343.i32[2] = *(_DWORD *)(v20 + 8);
    v346 = (int8x16_t)vmlsq_lane_f32(v343, v345, v16, 0);
    v10.i64[0] = vextq_s8(v346, v346, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v346.i8, *(float32x2_t *)v346.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v346.i8, 1), *(float32x2_t *)v346.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v347 = v13[12406] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v347;
      if (v342)
        return 0;
    }
  }
  v348 = (char)v13[12446];
  *(float32x2_t *)v345.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v221));
  v345.f32[2] = (float)v87;
  v349.i64[0] = 0x3F0000003F000000;
  v349.i64[1] = 0x3F0000003F000000;
  if (!v13[12446])
  {
    v10.i8[0] = v13[12443];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12444];
    v350 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v350.i32 = (float)v350.i32[0];
    v10.i32[1] = v350.i32[0];
    v350.i8[0] = v13[12445];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v350)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v345 = vaddq_f32(v345, v349);
    v349 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v351 = vaddq_f32(v345, v349);
  if (v348 <= 0)
  {
    v349.i64[0] = *(_QWORD *)v20;
    v349.i32[2] = *(_DWORD *)(v20 + 8);
    v352 = (int8x16_t)vmlsq_lane_f32(v349, v351, v16, 0);
    v10.i64[0] = vextq_s8(v352, v352, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v352.i8, *(float32x2_t *)v352.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v352.i8, 1), *(float32x2_t *)v352.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v353 = v13[12446] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v353;
      if (v348)
        return 0;
    }
  }
  v354 = (char)v13[12486];
  *(float32x2_t *)v351.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v192));
  v351.f32[2] = (float)(v12 + 2);
  v355.i64[0] = 0x3F0000003F000000;
  v355.i64[1] = 0x3F0000003F000000;
  if (!v13[12486])
  {
    v10.i8[0] = v13[12483];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12484];
    v356 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v356.i32 = (float)v356.i32[0];
    v10.i32[1] = v356.i32[0];
    v356.i8[0] = v13[12485];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v356)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v351 = vaddq_f32(v351, v355);
    v355 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v357 = vaddq_f32(v351, v355);
  if (v354 <= 0)
  {
    v355.i64[0] = *(_QWORD *)v20;
    v355.i32[2] = *(_DWORD *)(v20 + 8);
    v358 = (int8x16_t)vmlsq_lane_f32(v355, v357, v16, 0);
    v10.i64[0] = vextq_s8(v358, v358, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v358.i8, *(float32x2_t *)v358.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v358.i8, 1), *(float32x2_t *)v358.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v359 = v13[12486] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v359;
      if (v354)
        return 0;
    }
  }
  v360 = (char)v13[12526];
  *(float32x2_t *)v357.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v192));
  v357.f32[2] = (float)v24;
  v361.i64[0] = 0x3F0000003F000000;
  v361.i64[1] = 0x3F0000003F000000;
  if (!v13[12526])
  {
    v10.i8[0] = v13[12523];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12524];
    v362 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v362.i32 = (float)v362.i32[0];
    v10.i32[1] = v362.i32[0];
    v362.i8[0] = v13[12525];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v362)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v357 = vaddq_f32(v357, v361);
    v361 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v363 = vaddq_f32(v357, v361);
  if (v360 <= 0)
  {
    v361.i64[0] = *(_QWORD *)v20;
    v361.i32[2] = *(_DWORD *)(v20 + 8);
    v364 = (int8x16_t)vmlsq_lane_f32(v361, v363, v16, 0);
    v10.i64[0] = vextq_s8(v364, v364, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v364.i8, *(float32x2_t *)v364.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v364.i8, 1), *(float32x2_t *)v364.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v365 = v13[12526] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v365;
      if (v360)
        return 0;
    }
  }
  v366 = (char)v13[12566];
  *(float32x2_t *)v363.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v192));
  v363.f32[2] = (float)(v12 + 2);
  v367.i64[0] = 0x3F0000003F000000;
  v367.i64[1] = 0x3F0000003F000000;
  if (!v13[12566])
  {
    v10.i8[0] = v13[12563];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12564];
    v368 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v368.i32 = (float)v368.i32[0];
    v10.i32[1] = v368.i32[0];
    v368.i8[0] = v13[12565];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v368)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v363 = vaddq_f32(v363, v367);
    v367 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v369 = vaddq_f32(v363, v367);
  if (v366 <= 0)
  {
    v367.i64[0] = *(_QWORD *)v20;
    v367.i32[2] = *(_DWORD *)(v20 + 8);
    v370 = (int8x16_t)vmlsq_lane_f32(v367, v369, v16, 0);
    v10.i64[0] = vextq_s8(v370, v370, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v370.i8, *(float32x2_t *)v370.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v370.i8, 1), *(float32x2_t *)v370.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v371 = v13[12566] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v371;
      if (v366)
        return 0;
    }
  }
  v372 = (char)v13[12606];
  *(float32x2_t *)v369.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v192));
  v369.f32[2] = (float)v24;
  v373.i64[0] = 0x3F0000003F000000;
  v373.i64[1] = 0x3F0000003F000000;
  if (!v13[12606])
  {
    v10.i8[0] = v13[12603];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12604];
    v374 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v374.i32 = (float)v374.i32[0];
    v10.i32[1] = v374.i32[0];
    v374.i8[0] = v13[12605];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v374)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v369 = vaddq_f32(v369, v373);
    v373 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v375 = vaddq_f32(v369, v373);
  if (v372 <= 0)
  {
    v373.i64[0] = *(_QWORD *)v20;
    v373.i32[2] = *(_DWORD *)(v20 + 8);
    v376 = (int8x16_t)vmlsq_lane_f32(v373, v375, v16, 0);
    v10.i64[0] = vextq_s8(v376, v376, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v376.i8, *(float32x2_t *)v376.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v376.i8, 1), *(float32x2_t *)v376.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v377 = v13[12606] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v377;
      if (v372)
        return 0;
    }
  }
  v378 = (char)v13[12646];
  *(float32x2_t *)v375.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v221));
  v375.f32[2] = (float)(v12 + 2);
  v379.i64[0] = 0x3F0000003F000000;
  v379.i64[1] = 0x3F0000003F000000;
  if (!v13[12646])
  {
    v10.i8[0] = v13[12643];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12644];
    v380 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v380.i32 = (float)v380.i32[0];
    v10.i32[1] = v380.i32[0];
    v380.i8[0] = v13[12645];
    v11 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v380)).u64[0];
    *(float *)v11.i32 = (float)v11.i32[0];
    v10.i32[2] = v11.i32[0];
    v375 = vaddq_f32(v375, v379);
    v379 = vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v381 = vaddq_f32(v375, v379);
  if (v378 <= 0)
  {
    v379.i64[0] = *(_QWORD *)v20;
    v379.i32[2] = *(_DWORD *)(v20 + 8);
    v382 = (int8x16_t)vmlsq_lane_f32(v379, v381, v16, 0);
    v10.i64[0] = vextq_s8(v382, v382, 8uLL).u64[0];
    v11 = (int8x8_t)vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v382.i8, *(float32x2_t *)v382.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v382.i8, 1), *(float32x2_t *)v382.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32);
    if (*(float *)v11.i32 <= v17.f32[0])
    {
      v383 = v13[12646] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v383;
      if (v378)
        return 0;
    }
  }
  v384 = (char)v13[12686];
  *(float32x2_t *)v381.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v221));
  v381.f32[2] = (float)v24;
  v385.i64[0] = 0x3F0000003F000000;
  v385.i64[1] = 0x3F0000003F000000;
  if (!v13[12686])
  {
    v10.i8[0] = v13[12683];
    v10 = (float32x4_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32));
    v10.f32[0] = (float)v10.i32[0];
    v11.i8[0] = v13[12684];
    v386 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v11)).u64[0];
    *(float *)v386.i32 = (float)v386.i32[0];
    v10.i32[1] = v386.i32[0];
    v386.i8[0] = v13[12685];
    v10.f32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v386)).i32[0];
    v381 = vaddq_f32(v381, (float32x4_t)v385);
    v385 = (int8x16_t)vmulq_f32(v10, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v387 = vaddq_f32(v381, (float32x4_t)v385);
  if (v384 <= 0)
  {
    v385.i64[0] = *(_QWORD *)v20;
    v385.i32[2] = *(_DWORD *)(v20 + 8);
    v385 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v385, v387, v16, 0);
    v10.i64[0] = vextq_s8(v385, v385, 8uLL).u64[0];
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v385.i8, 1), *(float32x2_t *)v385.i8, 1), *(float32x2_t *)v10.f32, *(float32x2_t *)v10.f32).f32[0] <= v17.f32[0])
    {
      v388 = v13[12686] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v388;
      if (v384)
        return 0;
    }
  }
  v389 = (char)v13[12726];
  *(float32x2_t *)v387.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v221));
  v387.f32[2] = (float)(v12 + 2);
  v390.i64[0] = 0x3F0000003F000000;
  v390.i64[1] = 0x3F0000003F000000;
  if (v13[12726])
  {
    v391 = vaddq_f32(v387, v390);
  }
  else
  {
    v385.i8[0] = v13[12723];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12724];
    v392 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v392.i32 = (float)v392.i32[0];
    v385.i32[1] = v392.i32[0];
    v392.i8[0] = v13[12725];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v392)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v393 = vaddq_f32(v387, v390);
    v387 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v391 = vaddq_f32(v393, v387);
  }
  if (v389 <= 0)
  {
    v387.i64[0] = *(_QWORD *)v20;
    v387.i32[2] = *(_DWORD *)(v20 + 8);
    v394 = (int8x16_t)vmlsq_lane_f32(v387, v391, v16, 0);
    v385 = vextq_s8(v394, v394, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v394.i8, *(float32x2_t *)v394.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v394.i8, 1), *(float32x2_t *)v394.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v395 = v13[12726] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v395;
      if (v389)
        return 0;
    }
  }
  v396 = (char)v13[12766];
  *(float32x2_t *)v391.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v221));
  v391.f32[2] = (float)v24;
  v397.i64[0] = 0x3F0000003F000000;
  v397.i64[1] = 0x3F0000003F000000;
  if (!v13[12766])
  {
    v385.i8[0] = v13[12763];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12764];
    v398 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v398.i32 = (float)v398.i32[0];
    v385.i32[1] = v398.i32[0];
    v398.i8[0] = v13[12765];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v398)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v391 = vaddq_f32(v391, v397);
    v397 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v399 = vaddq_f32(v391, v397);
  if (v396 <= 0)
  {
    v397.i64[0] = *(_QWORD *)v20;
    v397.i32[2] = *(_DWORD *)(v20 + 8);
    v400 = (int8x16_t)vmlsq_lane_f32(v397, v399, v16, 0);
    v385 = vextq_s8(v400, v400, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v400.i8, *(float32x2_t *)v400.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v400.i8, 1), *(float32x2_t *)v400.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v401 = v13[12766] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v401;
      if (v396)
        return 0;
    }
  }
  v402 = v12 + 4;
  v403 = (char)v13[12806];
  *(float32x2_t *)v399.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)4));
  v399.f32[2] = (float)(v12 + 4);
  v404.i64[0] = 0x3F0000003F000000;
  v404.i64[1] = 0x3F0000003F000000;
  if (!v13[12806])
  {
    v385.i8[0] = v13[12803];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12804];
    v405 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v405.i32 = (float)v405.i32[0];
    v385.i32[1] = v405.i32[0];
    v405.i8[0] = v13[12805];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v405)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v399 = vaddq_f32(v399, v404);
    v404 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v406 = vaddq_f32(v399, v404);
  if (v403 <= 0)
  {
    v404.i64[0] = *(_QWORD *)v20;
    v404.i32[2] = *(_DWORD *)(v20 + 8);
    v407 = (int8x16_t)vmlsq_lane_f32(v404, v406, v16, 0);
    v385 = vextq_s8(v407, v407, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v407.i8, *(float32x2_t *)v407.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v407.i8, 1), *(float32x2_t *)v407.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v408 = v13[12806] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v408;
      if (v403)
        return 0;
    }
  }
  v409 = v12 + 5;
  v410 = (char)v13[12846];
  *(float32x2_t *)v406.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)4));
  v406.f32[2] = (float)(v12 + 5);
  v411.i64[0] = 0x3F0000003F000000;
  v411.i64[1] = 0x3F0000003F000000;
  if (!v13[12846])
  {
    v385.i8[0] = v13[12843];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12844];
    v412 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v412.i32 = (float)v412.i32[0];
    v385.i32[1] = v412.i32[0];
    v412.i8[0] = v13[12845];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v412)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v406 = vaddq_f32(v406, v411);
    v411 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v413 = vaddq_f32(v406, v411);
  if (v410 <= 0)
  {
    v411.i64[0] = *(_QWORD *)v20;
    v411.i32[2] = *(_DWORD *)(v20 + 8);
    v414 = (int8x16_t)vmlsq_lane_f32(v411, v413, v16, 0);
    v385 = vextq_s8(v414, v414, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v414.i8, *(float32x2_t *)v414.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v414.i8, 1), *(float32x2_t *)v414.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v415 = v13[12846] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v415;
      if (v410)
        return 0;
    }
  }
  v416 = (char)v13[12886];
  v417 = a7;
  v417.f32[2] = (float)v402;
  v418.i64[0] = 0x3F0000003F000000;
  v418.i64[1] = 0x3F0000003F000000;
  if (v13[12886])
  {
    v419 = vaddq_f32(v417, v418);
  }
  else
  {
    v385.i8[0] = v13[12883];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12884];
    v420 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v420.i32 = (float)v420.i32[0];
    v385.i32[1] = v420.i32[0];
    v420.i8[0] = v13[12885];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v420)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v421 = vaddq_f32(v417, v418);
    v417 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v419 = vaddq_f32(v421, v417);
  }
  if (v416 <= 0)
  {
    v417.i64[0] = *(_QWORD *)v20;
    v417.i32[2] = *(_DWORD *)(v20 + 8);
    v422 = (int8x16_t)vmlsq_lane_f32(v417, v419, v16, 0);
    v385 = vextq_s8(v422, v422, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v422.i8, *(float32x2_t *)v422.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v422.i8, 1), *(float32x2_t *)v422.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v423 = v13[12886] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v423;
      if (v416)
        return 0;
    }
  }
  v424 = (char)v13[12926];
  v425 = a7;
  v425.f32[2] = (float)v409;
  v426.i64[0] = 0x3F0000003F000000;
  v426.i64[1] = 0x3F0000003F000000;
  if (v13[12926])
  {
    v427 = vaddq_f32(v425, v426);
  }
  else
  {
    v385.i8[0] = v13[12923];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12924];
    v428 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v428.i32 = (float)v428.i32[0];
    v385.i32[1] = v428.i32[0];
    v428.i8[0] = v13[12925];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v428)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v429 = vaddq_f32(v425, v426);
    v425 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v427 = vaddq_f32(v429, v425);
  }
  if (v424 <= 0)
  {
    v425.i64[0] = *(_QWORD *)v20;
    v425.i32[2] = *(_DWORD *)(v20 + 8);
    v430 = (int8x16_t)vmlsq_lane_f32(v425, v427, v16, 0);
    v385 = vextq_s8(v430, v430, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v430.i8, *(float32x2_t *)v430.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v430.i8, 1), *(float32x2_t *)v430.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v431 = v13[12926] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v431;
      if (v424)
        return 0;
    }
  }
  v432 = (char)v13[12966];
  v433 = a6;
  v433.i32[0] = a6.i32[0] + 5;
  *(float32x2_t *)v433.f32 = vcvt_f32_s32(*(int32x2_t *)v433.f32);
  v433.f32[2] = (float)v402;
  v434.i64[0] = 0x3F0000003F000000;
  v434.i64[1] = 0x3F0000003F000000;
  if (!v13[12966])
  {
    v385.i8[0] = v13[12963];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[12964];
    v435 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v435.i32 = (float)v435.i32[0];
    v385.i32[1] = v435.i32[0];
    v435.i8[0] = v13[12965];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v435)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v433 = vaddq_f32(v433, v434);
    v434 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v436 = vaddq_f32(v433, v434);
  if (v432 <= 0)
  {
    v434.i64[0] = *(_QWORD *)v20;
    v434.i32[2] = *(_DWORD *)(v20 + 8);
    v437 = (int8x16_t)vmlsq_lane_f32(v434, v436, v16, 0);
    v385 = vextq_s8(v437, v437, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v437.i8, *(float32x2_t *)v437.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v437.i8, 1), *(float32x2_t *)v437.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v438 = v13[12966] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v438;
      if (v432)
        return 0;
    }
  }
  v439 = (char)v13[13006];
  v440 = a6;
  v440.i32[0] = a6.i32[0] + 5;
  *(float32x2_t *)v440.f32 = vcvt_f32_s32(*(int32x2_t *)v440.f32);
  v440.f32[2] = (float)v409;
  v441.i64[0] = 0x3F0000003F000000;
  v441.i64[1] = 0x3F0000003F000000;
  if (!v13[13006])
  {
    v385.i8[0] = v13[13003];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[13004];
    v442 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v442.i32 = (float)v442.i32[0];
    v385.i32[1] = v442.i32[0];
    v442.i8[0] = v13[13005];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v442)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v440 = vaddq_f32(v440, v441);
    v441 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v443 = vaddq_f32(v440, v441);
  if (v439 <= 0)
  {
    v441.i64[0] = *(_QWORD *)v20;
    v441.i32[2] = *(_DWORD *)(v20 + 8);
    v444 = (int8x16_t)vmlsq_lane_f32(v441, v443, v16, 0);
    v385 = vextq_s8(v444, v444, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v444.i8, *(float32x2_t *)v444.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v444.i8, 1), *(float32x2_t *)v444.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v445 = v13[13006] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v445;
      if (v439)
        return 0;
    }
  }
  v446 = (char)v13[13046];
  v447 = a4;
  v447.i32[0] = a6.i32[0] + 5;
  *(float32x2_t *)v447.f32 = vcvt_f32_s32(*(int32x2_t *)v447.f32);
  v447.f32[2] = (float)v402;
  v448.i64[0] = 0x3F0000003F000000;
  v448.i64[1] = 0x3F0000003F000000;
  if (!v13[13046])
  {
    v385.i8[0] = v13[13043];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[13044];
    v449 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v449.i32 = (float)v449.i32[0];
    v385.i32[1] = v449.i32[0];
    v449.i8[0] = v13[13045];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v449)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v447 = vaddq_f32(v447, v448);
    v448 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v450 = vaddq_f32(v447, v448);
  if (v446 <= 0)
  {
    v448.i64[0] = *(_QWORD *)v20;
    v448.i32[2] = *(_DWORD *)(v20 + 8);
    v451 = (int8x16_t)vmlsq_lane_f32(v448, v450, v16, 0);
    v385 = vextq_s8(v451, v451, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v451.i8, *(float32x2_t *)v451.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v451.i8, 1), *(float32x2_t *)v451.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v452 = v13[13046] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v452;
      if (v446)
        return 0;
    }
  }
  v453 = (char)v13[13086];
  v454 = a4;
  v454.i32[0] = a6.i32[0] + 5;
  *(float32x2_t *)v454.f32 = vcvt_f32_s32(*(int32x2_t *)v454.f32);
  v454.f32[2] = (float)v409;
  v455.i64[0] = 0x3F0000003F000000;
  v455.i64[1] = 0x3F0000003F000000;
  if (!v13[13086])
  {
    v385.i8[0] = v13[13083];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[13084];
    v456 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v456.i32 = (float)v456.i32[0];
    v385.i32[1] = v456.i32[0];
    v456.i8[0] = v13[13085];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v456)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v454 = vaddq_f32(v454, v455);
    v455 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v457 = vaddq_f32(v454, v455);
  if (v453 <= 0)
  {
    v455.i64[0] = *(_QWORD *)v20;
    v455.i32[2] = *(_DWORD *)(v20 + 8);
    v458 = (int8x16_t)vmlsq_lane_f32(v455, v457, v16, 0);
    v385 = vextq_s8(v458, v458, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v458.i8, *(float32x2_t *)v458.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v458.i8, 1), *(float32x2_t *)v458.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v459 = v13[13086] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v459;
      if (v453)
        return 0;
    }
  }
  v460 = v12 + 6;
  v461 = (char)v13[13126];
  *(float32x2_t *)v457.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)4));
  v457.f32[2] = (float)(v12 + 6);
  v462.i64[0] = 0x3F0000003F000000;
  v462.i64[1] = 0x3F0000003F000000;
  if (!v13[13126])
  {
    v385.i8[0] = v13[13123];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[13124];
    v463 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v463.i32 = (float)v463.i32[0];
    v385.i32[1] = v463.i32[0];
    v463.i8[0] = v13[13125];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v463)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v457 = vaddq_f32(v457, v462);
    v462 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v464 = vaddq_f32(v457, v462);
  if (v461 <= 0)
  {
    v462.i64[0] = *(_QWORD *)v20;
    v462.i32[2] = *(_DWORD *)(v20 + 8);
    v465 = (int8x16_t)vmlsq_lane_f32(v462, v464, v16, 0);
    v385 = vextq_s8(v465, v465, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v465.i8, *(float32x2_t *)v465.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v465.i8, 1), *(float32x2_t *)v465.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v466 = v13[13126] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v466;
      if (v461)
        return 0;
    }
  }
  v467 = v12 + 7;
  v468 = (char)v13[13166];
  *(float32x2_t *)v464.f32 = vcvt_f32_s32(vadd_s32(*(int32x2_t *)a6.f32, (int32x2_t)4));
  v464.f32[2] = (float)v467;
  v469.i64[0] = 0x3F0000003F000000;
  v469.i64[1] = 0x3F0000003F000000;
  if (!v13[13166])
  {
    v385.i8[0] = v13[13163];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[13164];
    v470 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v470.i32 = (float)v470.i32[0];
    v385.i32[1] = v470.i32[0];
    v470.i8[0] = v13[13165];
    v10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v470)).u64[0];
    v10.f32[0] = (float)v10.i32[0];
    v385.i32[2] = v10.i32[0];
    v464 = vaddq_f32(v464, v469);
    v469 = vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v471 = vaddq_f32(v464, v469);
  if (v468 <= 0)
  {
    v469.i64[0] = *(_QWORD *)v20;
    v469.i32[2] = *(_DWORD *)(v20 + 8);
    v472 = (int8x16_t)vmlsq_lane_f32(v469, v471, v16, 0);
    v385 = vextq_s8(v472, v472, 8uLL);
    *(float32x2_t *)v10.f32 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v472.i8, *(float32x2_t *)v472.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v472.i8, 1), *(float32x2_t *)v472.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8);
    if (v10.f32[0] <= v17.f32[0])
    {
      v473 = v13[13166] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v473;
      if (v468)
        return 0;
    }
  }
  v474 = (char)v13[13206];
  v475 = (int8x16_t)a7;
  *(float *)&v475.i32[2] = (float)v460;
  v476.i64[0] = 0x3F0000003F000000;
  v476.i64[1] = 0x3F0000003F000000;
  if (v13[13206])
  {
    v477 = vaddq_f32((float32x4_t)v475, v476);
  }
  else
  {
    v385.i8[0] = v13[13203];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8));
    *(float *)v385.i32 = (float)v385.i32[0];
    v10.i8[0] = v13[13204];
    v478 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v10.f32)).u64[0];
    *(float *)v478.i32 = (float)v478.i32[0];
    v385.i32[1] = v478.i32[0];
    v478.i8[0] = v13[13205];
    *(float *)&v385.i32[2] = (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v478)).i32[0];
    v479 = vaddq_f32((float32x4_t)v475, v476);
    v475 = (int8x16_t)vmulq_f32((float32x4_t)v385, (float32x4_t)vdupq_n_s32(0x3B808081u));
    v477 = vaddq_f32(v479, (float32x4_t)v475);
  }
  if (v474 <= 0)
  {
    v475.i64[0] = *(_QWORD *)v20;
    v475.i32[2] = *(_DWORD *)(v20 + 8);
    v475 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v475, v477, v16, 0);
    v385 = vextq_s8(v475, v475, 8uLL);
    if (vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v475.i8, *(float32x2_t *)v475.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v475.i8, 1), *(float32x2_t *)v475.i8, 1), *(float32x2_t *)v385.i8, *(float32x2_t *)v385.i8).f32[0] <= v17.f32[0])
    {
      v480 = v13[13206] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v480;
      if (v474)
        return 0;
    }
  }
  v481 = (char)v13[13246];
  a7.f32[2] = (float)v467;
  v482.i64[0] = 0x3F0000003F000000;
  v482.i64[1] = 0x3F0000003F000000;
  if (!v13[13246])
  {
    v475.i8[0] = v13[13243];
    v475 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8));
    *(float *)v475.i32 = (float)v475.i32[0];
    v385.i8[0] = v13[13244];
    v483 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8)).u64[0];
    *(float *)v483.i32 = (float)v483.i32[0];
    v475.i32[1] = v483.i32[0];
    v483.i8[0] = v13[13245];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v483));
    *(float *)v385.i32 = (float)v385.i32[0];
    v475.i32[2] = v385.i32[0];
    a7 = vaddq_f32(a7, v482);
    v482 = vmulq_f32((float32x4_t)v475, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v484 = vaddq_f32(a7, v482);
  if (v481 <= 0)
  {
    v482.i64[0] = *(_QWORD *)v20;
    v482.i32[2] = *(_DWORD *)(v20 + 8);
    v485 = (int8x16_t)vmlsq_lane_f32(v482, v484, v16, 0);
    v475.i64[0] = vextq_s8(v485, v485, 8uLL).u64[0];
    *(float32x2_t *)v385.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v485.i8, *(float32x2_t *)v485.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v485.i8, 1), *(float32x2_t *)v485.i8, 1), *(float32x2_t *)v475.i8, *(float32x2_t *)v475.i8);
    if (*(float *)v385.i32 <= v17.f32[0])
    {
      v486 = v13[13246] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v486;
      if (v481)
        return 0;
    }
  }
  v487 = (char)v13[13286];
  v488 = a6;
  v488.i32[0] = a6.i32[0] + 5;
  *(float32x2_t *)v488.f32 = vcvt_f32_s32(*(int32x2_t *)v488.f32);
  v488.f32[2] = (float)v460;
  v489.i64[0] = 0x3F0000003F000000;
  v489.i64[1] = 0x3F0000003F000000;
  if (!v13[13286])
  {
    v475.i8[0] = v13[13283];
    v475 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8));
    *(float *)v475.i32 = (float)v475.i32[0];
    v385.i8[0] = v13[13284];
    v490 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v385.i8)).u64[0];
    *(float *)v490.i32 = (float)v490.i32[0];
    v475.i32[1] = v490.i32[0];
    v490.i8[0] = v13[13285];
    v385 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v490));
    *(float *)v385.i32 = (float)v385.i32[0];
    v475.i32[2] = v385.i32[0];
    v488 = vaddq_f32(v488, (float32x4_t)v489);
    v489 = (int8x16_t)vmulq_f32((float32x4_t)v475, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v491 = vaddq_f32(v488, (float32x4_t)v489);
  if (v487 <= 0)
  {
    v489.i64[0] = *(_QWORD *)v20;
    v489.i32[2] = *(_DWORD *)(v20 + 8);
    v489 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v489, v491, v16, 0);
    v475.i64[0] = vextq_s8(v489, v489, 8uLL).u64[0];
    *(float32x2_t *)v385.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v489.i8, 1), *(float32x2_t *)v489.i8, 1), *(float32x2_t *)v475.i8, *(float32x2_t *)v475.i8);
    if (*(float *)v385.i32 <= v17.f32[0])
    {
      v492 = v13[13286] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v492;
      if (v487)
        return 0;
    }
  }
  v493 = (char)v13[13326];
  a6.i32[0] += 5;
  *(float32x2_t *)a6.f32 = vcvt_f32_s32(*(int32x2_t *)a6.f32);
  a6.f32[2] = (float)v467;
  v494.i64[0] = 0x3F0000003F000000;
  v494.i64[1] = 0x3F0000003F000000;
  if (!v13[13326])
  {
    v489.i8[0] = v13[13323];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13324];
    v495 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v495.i32 = (float)v495.i32[0];
    v489.i32[1] = v495.i32[0];
    v495.i8[0] = v13[13325];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v495)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    a6 = vaddq_f32(a6, v494);
    v494 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v496 = vaddq_f32(a6, v494);
  if (v493 <= 0)
  {
    v494.i64[0] = *(_QWORD *)v20;
    v494.i32[2] = *(_DWORD *)(v20 + 8);
    v497 = (int8x16_t)vmlsq_lane_f32(v494, v496, v16, 0);
    v489 = vextq_s8(v497, v497, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v497.i8, *(float32x2_t *)v497.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v497.i8, 1), *(float32x2_t *)v497.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v498 = v13[13326] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v498;
      if (v493)
        return 0;
    }
  }
  v499 = (char)v13[13366];
  v500 = a4;
  v500.i32[0] = v35;
  *(float32x2_t *)v500.f32 = vcvt_f32_s32(*(int32x2_t *)v500.f32);
  v500.f32[2] = (float)v460;
  v501.i64[0] = 0x3F0000003F000000;
  v501.i64[1] = 0x3F0000003F000000;
  if (!v13[13366])
  {
    v489.i8[0] = v13[13363];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13364];
    v502 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v502.i32 = (float)v502.i32[0];
    v489.i32[1] = v502.i32[0];
    v502.i8[0] = v13[13365];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v502)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v500 = vaddq_f32(v500, v501);
    v501 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v503 = vaddq_f32(v500, v501);
  if (v499 <= 0)
  {
    v501.i64[0] = *(_QWORD *)v20;
    v501.i32[2] = *(_DWORD *)(v20 + 8);
    v504 = (int8x16_t)vmlsq_lane_f32(v501, v503, v16, 0);
    v489 = vextq_s8(v504, v504, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v504.i8, *(float32x2_t *)v504.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v504.i8, 1), *(float32x2_t *)v504.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v505 = v13[13366] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v505;
      if (v499)
        return 0;
    }
  }
  v506 = (char)v13[13406];
  v507 = a4;
  v507.i32[0] = v35;
  *(float32x2_t *)v507.f32 = vcvt_f32_s32(*(int32x2_t *)v507.f32);
  v507.f32[2] = (float)v467;
  v508.i64[0] = 0x3F0000003F000000;
  v508.i64[1] = 0x3F0000003F000000;
  if (!v13[13406])
  {
    v489.i8[0] = v13[13403];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13404];
    v509 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v509.i32 = (float)v509.i32[0];
    v489.i32[1] = v509.i32[0];
    v509.i8[0] = v13[13405];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v509)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v507 = vaddq_f32(v507, v508);
    v508 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v510 = vaddq_f32(v507, v508);
  if (v506 <= 0)
  {
    v508.i64[0] = *(_QWORD *)v20;
    v508.i32[2] = *(_DWORD *)(v20 + 8);
    v511 = (int8x16_t)vmlsq_lane_f32(v508, v510, v16, 0);
    v489 = vextq_s8(v511, v511, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v511.i8, *(float32x2_t *)v511.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v511.i8, 1), *(float32x2_t *)v511.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v512 = v13[13406] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v512;
      if (v506)
        return 0;
    }
  }
  v513 = (char)v13[13446];
  v514 = a4;
  v514.i32[1] = v76;
  *(float32x2_t *)v514.f32 = vcvt_f32_s32(*(int32x2_t *)v514.f32);
  v514.f32[2] = (float)v402;
  v515.i64[0] = 0x3F0000003F000000;
  v515.i64[1] = 0x3F0000003F000000;
  if (!v13[13446])
  {
    v489.i8[0] = v13[13443];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13444];
    v516 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v516.i32 = (float)v516.i32[0];
    v489.i32[1] = v516.i32[0];
    v516.i8[0] = v13[13445];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v516)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v514 = vaddq_f32(v514, v515);
    v515 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v517 = vaddq_f32(v514, v515);
  if (v513 <= 0)
  {
    v515.i64[0] = *(_QWORD *)v20;
    v515.i32[2] = *(_DWORD *)(v20 + 8);
    v518 = (int8x16_t)vmlsq_lane_f32(v515, v517, v16, 0);
    v489 = vextq_s8(v518, v518, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v518.i8, *(float32x2_t *)v518.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v518.i8, 1), *(float32x2_t *)v518.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v519 = v13[13446] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v519;
      if (v513)
        return 0;
    }
  }
  v520 = (char)v13[13486];
  v521 = a4;
  v521.i32[1] = v76;
  *(float32x2_t *)v521.f32 = vcvt_f32_s32(*(int32x2_t *)v521.f32);
  v521.f32[2] = (float)v409;
  v522.i64[0] = 0x3F0000003F000000;
  v522.i64[1] = 0x3F0000003F000000;
  if (!v13[13486])
  {
    v489.i8[0] = v13[13483];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13484];
    v523 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v523.i32 = (float)v523.i32[0];
    v489.i32[1] = v523.i32[0];
    v523.i8[0] = v13[13485];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v523)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v521 = vaddq_f32(v521, v522);
    v522 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v524 = vaddq_f32(v521, v522);
  if (v520 <= 0)
  {
    v522.i64[0] = *(_QWORD *)v20;
    v522.i32[2] = *(_DWORD *)(v20 + 8);
    v525 = (int8x16_t)vmlsq_lane_f32(v522, v524, v16, 0);
    v489 = vextq_s8(v525, v525, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v525.i8, *(float32x2_t *)v525.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v525.i8, 1), *(float32x2_t *)v525.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v526 = v13[13486] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v526;
      if (v520)
        return 0;
    }
  }
  v527 = (char)v13[13526];
  v528 = a4;
  v528.i32[1] = v98;
  *(float32x2_t *)v528.f32 = vcvt_f32_s32(*(int32x2_t *)v528.f32);
  v528.f32[2] = (float)v402;
  v529.i64[0] = 0x3F0000003F000000;
  v529.i64[1] = 0x3F0000003F000000;
  if (!v13[13526])
  {
    v489.i8[0] = v13[13523];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13524];
    v530 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v530.i32 = (float)v530.i32[0];
    v489.i32[1] = v530.i32[0];
    v530.i8[0] = v13[13525];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v530)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v528 = vaddq_f32(v528, v529);
    v529 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v531 = vaddq_f32(v528, v529);
  if (v527 <= 0)
  {
    v529.i64[0] = *(_QWORD *)v20;
    v529.i32[2] = *(_DWORD *)(v20 + 8);
    v532 = (int8x16_t)vmlsq_lane_f32(v529, v531, v16, 0);
    v489 = vextq_s8(v532, v532, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v532.i8, *(float32x2_t *)v532.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v532.i8, 1), *(float32x2_t *)v532.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v533 = v13[13526] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v533;
      if (v527)
        return 0;
    }
  }
  v534 = (char)v13[13566];
  v535 = a4;
  v535.i32[1] = v98;
  *(float32x2_t *)v535.f32 = vcvt_f32_s32(*(int32x2_t *)v535.f32);
  v535.f32[2] = (float)v409;
  v536.i64[0] = 0x3F0000003F000000;
  v536.i64[1] = 0x3F0000003F000000;
  if (!v13[13566])
  {
    v489.i8[0] = v13[13563];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13564];
    v537 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v537.i32 = (float)v537.i32[0];
    v489.i32[1] = v537.i32[0];
    v537.i8[0] = v13[13565];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v537)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v535 = vaddq_f32(v535, v536);
    v536 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v538 = vaddq_f32(v535, v536);
  if (v534 <= 0)
  {
    v536.i64[0] = *(_QWORD *)v20;
    v536.i32[2] = *(_DWORD *)(v20 + 8);
    v539 = (int8x16_t)vmlsq_lane_f32(v536, v538, v16, 0);
    v489 = vextq_s8(v539, v539, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v539.i8, *(float32x2_t *)v539.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v539.i8, 1), *(float32x2_t *)v539.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v540 = v13[13566] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v540;
      if (v534)
        return 0;
    }
  }
  v541 = (char)v13[13606];
  *(float32x2_t *)v538.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v35));
  v538.f32[2] = (float)v402;
  v542.i64[0] = 0x3F0000003F000000;
  v542.i64[1] = 0x3F0000003F000000;
  if (!v13[13606])
  {
    v489.i8[0] = v13[13603];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13604];
    v543 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v543.i32 = (float)v543.i32[0];
    v489.i32[1] = v543.i32[0];
    v543.i8[0] = v13[13605];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v543)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v538 = vaddq_f32(v538, v542);
    v542 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v544 = vaddq_f32(v538, v542);
  if (v541 <= 0)
  {
    v542.i64[0] = *(_QWORD *)v20;
    v542.i32[2] = *(_DWORD *)(v20 + 8);
    v545 = (int8x16_t)vmlsq_lane_f32(v542, v544, v16, 0);
    v489 = vextq_s8(v545, v545, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v545.i8, *(float32x2_t *)v545.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v545.i8, 1), *(float32x2_t *)v545.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v546 = v13[13606] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v546;
      if (v541)
        return 0;
    }
  }
  v547 = (char)v13[13646];
  *(float32x2_t *)v544.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v76, v35));
  v544.f32[2] = (float)v409;
  v548.i64[0] = 0x3F0000003F000000;
  v548.i64[1] = 0x3F0000003F000000;
  if (!v13[13646])
  {
    v489.i8[0] = v13[13643];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13644];
    v549 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v549.i32 = (float)v549.i32[0];
    v489.i32[1] = v549.i32[0];
    v549.i8[0] = v13[13645];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v549)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v544 = vaddq_f32(v544, v548);
    v548 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v550 = vaddq_f32(v544, v548);
  if (v547 <= 0)
  {
    v548.i64[0] = *(_QWORD *)v20;
    v548.i32[2] = *(_DWORD *)(v20 + 8);
    v551 = (int8x16_t)vmlsq_lane_f32(v548, v550, v16, 0);
    v489 = vextq_s8(v551, v551, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v551.i8, *(float32x2_t *)v551.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v551.i8, 1), *(float32x2_t *)v551.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v552 = v13[13646] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v552;
      if (v547)
        return 0;
    }
  }
  v553 = (char)v13[13686];
  *(float32x2_t *)v550.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v35));
  v550.f32[2] = (float)v402;
  v554.i64[0] = 0x3F0000003F000000;
  v554.i64[1] = 0x3F0000003F000000;
  if (!v13[13686])
  {
    v489.i8[0] = v13[13683];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v13[13684];
    v555 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v555.i32 = (float)v555.i32[0];
    v489.i32[1] = v555.i32[0];
    v555.i8[0] = v13[13685];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v555)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v550 = vaddq_f32(v550, v554);
    v554 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v556 = vaddq_f32(v550, v554);
  if (v553 <= 0)
  {
    v554.i64[0] = *(_QWORD *)v20;
    v554.i32[2] = *(_DWORD *)(v20 + 8);
    v557 = (int8x16_t)vmlsq_lane_f32(v554, v556, v16, 0);
    v489 = vextq_s8(v557, v557, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v557.i8, *(float32x2_t *)v557.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v557.i8, 1), *(float32x2_t *)v557.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v558 = v13[13686] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v558;
      if (v553)
        return 0;
    }
  }
  v559 = v13 + 13723;
  v560 = v559[3];
  *(float32x2_t *)v556.f32 = vcvt_f32_s32((int32x2_t)__PAIR64__(v98, v35));
  v556.f32[2] = (float)v409;
  v561.i64[0] = 0x3F0000003F000000;
  v561.i64[1] = 0x3F0000003F000000;
  if (!v559[3])
  {
    v489.i8[0] = *v559;
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v559[1];
    v562 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v562.i32 = (float)v562.i32[0];
    v489.i32[1] = v562.i32[0];
    v562.i8[0] = v559[2];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v562)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v556 = vaddq_f32(v556, v561);
    v561 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v563 = vaddq_f32(v556, v561);
  if (v560 <= 0)
  {
    v561.i64[0] = *(_QWORD *)v20;
    v561.i32[2] = *(_DWORD *)(v20 + 8);
    v564 = (int8x16_t)vmlsq_lane_f32(v561, v563, v16, 0);
    v489 = vextq_s8(v564, v564, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v564.i8, *(float32x2_t *)v564.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v564.i8, 1), *(float32x2_t *)v564.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v565 = v559[3] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v565;
      if (v560)
        return 0;
    }
  }
  v566 = v559[43];
  v567 = a4;
  v567.i32[1] = v76;
  *(float32x2_t *)v567.f32 = vcvt_f32_s32(*(int32x2_t *)v567.f32);
  v567.f32[2] = (float)v460;
  v568.i64[0] = 0x3F0000003F000000;
  v568.i64[1] = 0x3F0000003F000000;
  if (!v559[43])
  {
    v489.i8[0] = v559[40];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v559[41];
    v569 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v569.i32 = (float)v569.i32[0];
    v489.i32[1] = v569.i32[0];
    v569.i8[0] = v559[42];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v569)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v567 = vaddq_f32(v567, v568);
    v568 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v570 = vaddq_f32(v567, v568);
  if (v566 <= 0)
  {
    v568.i64[0] = *(_QWORD *)v20;
    v568.i32[2] = *(_DWORD *)(v20 + 8);
    v571 = (int8x16_t)vmlsq_lane_f32(v568, v570, v16, 0);
    v489 = vextq_s8(v571, v571, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v571.i8, *(float32x2_t *)v571.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v571.i8, 1), *(float32x2_t *)v571.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v572 = v559[43] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v572;
      if (v566)
        return 0;
    }
  }
  v573 = v559[83];
  v574 = a4;
  v574.i32[1] = v76;
  *(float32x2_t *)v574.f32 = vcvt_f32_s32(*(int32x2_t *)v574.f32);
  v574.f32[2] = (float)v467;
  v575.i64[0] = 0x3F0000003F000000;
  v575.i64[1] = 0x3F0000003F000000;
  if (!v559[83])
  {
    v489.i8[0] = v559[80];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v559[81];
    v576 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v576.i32 = (float)v576.i32[0];
    v489.i32[1] = v576.i32[0];
    v576.i8[0] = v559[82];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v576)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v574 = vaddq_f32(v574, v575);
    v575 = vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v577 = vaddq_f32(v574, v575);
  if (v573 <= 0)
  {
    v575.i64[0] = *(_QWORD *)v20;
    v575.i32[2] = *(_DWORD *)(v20 + 8);
    v578 = (int8x16_t)vmlsq_lane_f32(v575, v577, v16, 0);
    v489 = vextq_s8(v578, v578, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v578.i8, *(float32x2_t *)v578.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v578.i8, 1), *(float32x2_t *)v578.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v579 = v559[83] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v579;
      if (v573)
        return 0;
    }
  }
  v580 = v559[123];
  v581 = a4;
  v581.i32[1] = v98;
  *(float32x2_t *)v581.f32 = vcvt_f32_s32(*(int32x2_t *)v581.f32);
  v581.f32[2] = (float)v460;
  v582.i64[0] = 0x3F0000003F000000;
  v582.i64[1] = 0x3F0000003F000000;
  if (!v559[123])
  {
    v489.i8[0] = v559[120];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8));
    *(float *)v489.i32 = (float)v489.i32[0];
    v475.i8[0] = v559[121];
    v583 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v475.i8)).u64[0];
    *(float *)v583.i32 = (float)v583.i32[0];
    v489.i32[1] = v583.i32[0];
    v583.i8[0] = v559[122];
    v475.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v583)).u64[0];
    *(float *)v475.i32 = (float)v475.i32[0];
    v489.i32[2] = v475.i32[0];
    v581 = vaddq_f32(v581, (float32x4_t)v582);
    v582 = (int8x16_t)vmulq_f32((float32x4_t)v489, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v584 = vaddq_f32(v581, (float32x4_t)v582);
  if (v580 <= 0)
  {
    v582.i64[0] = *(_QWORD *)v20;
    v582.i32[2] = *(_DWORD *)(v20 + 8);
    v582 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v582, v584, v16, 0);
    v489 = vextq_s8(v582, v582, 8uLL);
    *(float32x2_t *)v475.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v582.i8, *(float32x2_t *)v582.i8), (float32x2_t)vdup_lane_s32(*(int32x2_t *)v582.i8, 1), *(float32x2_t *)v582.i8, 1), *(float32x2_t *)v489.i8, *(float32x2_t *)v489.i8);
    if (*(float *)v475.i32 <= v17.f32[0])
    {
      v585 = v559[123] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v585;
      if (v580)
        return 0;
    }
  }
  v586 = v559[163];
  a4.i32[1] = v98;
  *(float32x2_t *)a4.f32 = vcvt_f32_s32(*(int32x2_t *)a4.f32);
  a4.f32[2] = (float)v467;
  v587.i64[0] = 0x3F0000003F000000;
  v587.i64[1] = 0x3F0000003F000000;
  if (!v559[163])
  {
    v582.i8[0] = v559[160];
    v582 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v582.i8));
    *(float *)v582.i32 = (float)v582.i32[0];
    v489.i8[0] = v559[161];
    v588 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v489.i8)).u64[0];
    *(float *)v588.i32 = (float)v588.i32[0];
    v582.i32[1] = v588.i32[0];
    v588.i8[0] = v559[162];
    v489 = (int8x16_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v588));
    *(float *)v489.i32 = (float)v489.i32[0];
    v582.i32[2] = v489.i32[0];
    a4 = vaddq_f32(a4, (float32x4_t)v587);
    v587 = (int8x16_t)vmulq_f32((float32x4_t)v582, (float32x4_t)vdupq_n_s32(0x3B808081u));
  }
  v589 = vaddq_f32(a4, (float32x4_t)v587);
  if (v586 <= 0)
  {
    v587.i64[0] = *(_QWORD *)v20;
    v587.i32[2] = *(_DWORD *)(v20 + 8);
    v587 = (int8x16_t)vmlsq_lane_f32((float32x4_t)v587, v589, v16, 0);
    v16 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)v587.i8, 1);
    v589.i64[0] = vextq_s8(v587, v587, 8uLL).u64[0];
    *(float32x2_t *)v582.i8 = vmla_f32(vmla_lane_f32(vmul_f32(*(float32x2_t *)v587.i8, *(float32x2_t *)v587.i8), v16, *(float32x2_t *)v587.i8, 1), *(float32x2_t *)v589.f32, *(float32x2_t *)v589.f32);
    if (*(float *)v582.i32 <= v17.f32[0])
    {
      v590 = v559[163] ? 2 : 1;
      **(_BYTE **)(v14 + 24) = v590;
      if (v586)
        return 0;
    }
  }
  return sub_22396A908(a1, a2, *(double *)&v16, *(double *)v589.i64, v17, (float32x4_t)v587, *(double *)v582.i64, (float32x4_t)v489, *(double *)v475.i64, (float32x4_t)v385);
}

