void sub_2240959E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224095A30(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_223BD3BF0((uint64_t)v25, a2, (_BYTE *)(v3 + 200));
}

void sub_224095E5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_224095EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_224123BEC((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_224510F44(v12, (uint64_t)&v18);
LABEL_27:
  sub_2231AD66C((uint64_t)v25);
  sub_2231AD66C((uint64_t)v31);
  return v14;
}

void sub_2240960CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240960E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240960FC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_224096508(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_224096808(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_224096A88(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_224096D88(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_224096FA0(&v9, (uint64_t)a1);
          else
            sub_224096260(&v8, a1);
        }
      }
    }
  }
}

void sub_224096260(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_22403914C(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_22403914C(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_224096508(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_224036A38(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224096808(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_224037304(a2, (__int128 *)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_224096A88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_224037C58(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_224096D88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_224038524(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_224096FA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_224038CF8(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_224097158(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_224097794(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_224097C44(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240980D0(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_224098580(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_224098ADC(&v9, a1);
          else
            sub_2240972BC(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_2240972BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_223BD7864((uint64_t)&v28, a2, v4, v28);
    else
      sub_223BD7AD8(a2, v4, v28);
  }
  else
  {
    sub_223BD7174((int *)v27, a2, v4, v28);
  }
  v27[0] = *(_QWORD *)(a2 + 8);
  sub_224043DC4((int *)v27, (_BYTE *)a2, (_BYTE *)(v3 + 200));
}

void sub_22409774C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224097794(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2240397BC((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_224097BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224097C44(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_224554038(a2[6], v25);
  sub_22403B910((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_224098088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240980D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_22403D744((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_224098538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224098580(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)__p);
    sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)__p);
  sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_2245508F0(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_223BC4F50((uint64_t)__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_22403F898((uint64_t)__p, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_224098A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224098ADC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240416F4((uint64_t)v25, a2, v3 + 200);
}

void sub_224098F08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_224098F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_224123BEC((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_224510F44(v12, (uint64_t)&v18);
LABEL_27:
  sub_2231AD66C((uint64_t)v25);
  sub_2231AD66C((uint64_t)v31);
  return v14;
}

void sub_224099178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_224099194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240991A8(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240995B4(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240998B4(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_224099B34(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_224099E34(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_22409A04C(&v9, (uint64_t)a1);
          else
            sub_22409930C(&v8, a1);
        }
      }
    }
  }
}

void sub_22409930C(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_224048E68(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_224048E68(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240995B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_224045ED0(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240998B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B979A0((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B97884((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B970F8((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(a2[3]);
  sub_224046B48(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_224099B34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_224047504(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_224099E34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_22404817C(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_22409A04C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_2240489B8(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_22409A204(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_22409A840(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_22409AD98(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_22409B224(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_22409B77C(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_22409BCD8(&v9, a1);
          else
            sub_22409A368(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_22409A368(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_223BD7864((uint64_t)&v28, a2, v4, v28);
    else
      sub_223BD7AD8(a2, v4, v28);
  }
  else
  {
    sub_223BD7174((int *)v27, a2, v4, v28);
  }
  v27[0] = *(_QWORD *)(a2 + 8);
  sub_224057AEC((int *)v27, (_BYTE *)a2, (_BYTE *)(v3 + 200));
}

void sub_22409A7F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409A840(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451CAD4(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_224049540(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_22409AD50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409AD98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_224554038(a2[6], v25);
  sub_22404C808((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_22409B1DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409B224(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451C444(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_22404EFC0(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_22409B734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409B77C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)__p);
    sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)__p);
  sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_2245508F0(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_223BC4F50((uint64_t)__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_224052288((uint64_t)__p, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_22409BC90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409BCD8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_224054A68((uint64_t)v25, a2, v3 + 200);
}

void sub_22409C104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_22409C14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_224123BEC((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_224510F44(v12, (uint64_t)&v18);
LABEL_27:
  sub_2231AD66C((uint64_t)v25);
  sub_2231AD66C((uint64_t)v31);
  return v14;
}

void sub_22409C374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_22409C390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_22409C3A4(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_22409C7B0(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_22409CAB0(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_22409CD30(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_22409D030(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_22409D248(&v9, (uint64_t)a1);
          else
            sub_22409C508(&v8, a1);
        }
      }
    }
  }
}

void sub_22409C508(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_22405F054(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_22405F054(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_22409C7B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_22405C0BC(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22409CAB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B979A0((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B97884((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B970F8((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(a2[3]);
  sub_22405CD34(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_22409CD30(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_22405D6F0(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_22409D030(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_22405E368(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_22409D248(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_22405EBA4(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_22409D400(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_22409DA3C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_22409DF94(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_22409E420(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_22409E978(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_22409EED4(&v9, a1);
          else
            sub_22409D564(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_22409D564(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_223BD7864((uint64_t)&v28, a2, v4, v28);
    else
      sub_223BD7AD8(a2, v4, v28);
  }
  else
  {
    sub_223BD7174((int *)v27, a2, v4, v28);
  }
  v27[0] = *(_QWORD *)(a2 + 8);
  sub_22406E618((int *)v27, (_BYTE *)a2, (_BYTE *)(v3 + 200));
}

void sub_22409D9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409DA3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451CAD4(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_22405F72C(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_22409DF4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409DF94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_224554038(a2[6], v25);
  sub_224062BC4((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_22409E3D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409E420(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451C444(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_22406555C(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_22409E930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409E978(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)__p);
    sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)__p);
  sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_2245508F0(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_223BC4F50((uint64_t)__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_2240689F4((uint64_t)__p, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_22409EE8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22409EED4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_22406B3B4((uint64_t)v25, a2, v3 + 200);
}

void sub_22409F300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22409F348@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC59F20;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(v4 + 72) = 1;
  }
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 176) = v7;
    *(_BYTE *)(v4 + 192) = 1;
  }
  *(_BYTE *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    *(_OWORD *)(v4 + 208) = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(v4 + 224) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *(_BYTE *)(v4 + 232) = 1;
  }
  *(_QWORD *)v4 = &off_24EC59EA0;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_22409F4E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

BOOL sub_22409F4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_224123BEC((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_224510F44(v12, (uint64_t)&v18);
LABEL_27:
  sub_2231AD66C((uint64_t)v25);
  sub_2231AD66C((uint64_t)v31);
  return v14;
}

void sub_22409F724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_22409F740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_22409F754(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_22409FB60(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240A1430(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240A206C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240A393C(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240A4390(&v9, (uint64_t)a1);
          else
            sub_22409F8B8(&v8, a1);
        }
      }
    }
  }
}

void sub_22409F8B8(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_2240A49F8(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240A49F8(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_22409FB60(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_22409FE60(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22409FE60(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  void **v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_224033EEC(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = (void **)*((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453FEA0(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_22345337C(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines2";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_22454024C(a1);
  sub_2240A00C0(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_2240A008C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_22345337C(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240A00AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_2240A00C0(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_2240A01E8(v4);
      break;
    case 1:
      result = sub_2240A03BC(v4);
      break;
    case 2:
      result = sub_2240A0590(v4);
      break;
    case 3:
      result = sub_2240A0764(v4);
      break;
    case 5:
      result = sub_2240A0938(v4);
      break;
    case 6:
      result = sub_2240A0B0C(v4);
      break;
    case 7:
      result = sub_2240A0CE0(v4);
      break;
    case 8:
      result = sub_2240A0EB4(v4);
      break;
    case 11:
      result = sub_2240A1088(v4);
      break;
    case 12:
      result = sub_2240A125C(v4);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

unsigned __int8 **sub_2240A01E8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2245403C8(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_2245403C8(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2245403C8(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_2245403C8(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A03BC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2245429C8(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_2245429C8(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2245429C8(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_2245429C8(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A0590(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224542C38(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_224542C38(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224542C38(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_224542C38(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A0764(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224543118(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_224543118(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224543118(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_224543118(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A0938(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224542758(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_224542758(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224542758(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_224542758(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A0B0C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224542890(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_224542890(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224542890(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_224542890(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A0CE0(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224542B00(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_224542B00(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224542B00(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_224542B00(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A0EB4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224542FE0(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_224542FE0(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224542FE0(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_224542FE0(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A1088(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2245436F8(v10, (float **)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2245436F8(v11, (float **)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2245436F8(v7, (float **)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2245436F8(v8, (float **)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A125C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224543B18(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_224543B18(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224543B18(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_224543B18(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

void sub_2240A1430(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B979A0((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B97884((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B970F8((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(a2[3]);
  sub_2240A16B0(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240A16B0(uint64_t *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14[3];
  __int128 v15;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[3];
  if (*(_BYTE *)(v6 + 40))
  {
    v14[0] = (uint64_t *)(v6 + 16);
    sub_224559C04(v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14[0]) = -52;
      BYTE1(v14[0]) = v11;
    }
    else
    {
      LOBYTE(v14[0]) = v11;
    }
    std::ostream::write();
  }
  v7 = a1[3];
  if (*(_BYTE *)(v7 + 40))
  {
    v14[0] = (uint64_t *)(v7 + 16);
    sub_22455B1CC(v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_22455B4D4();
  }
  v15 = xmmword_24EC66DD8;
  v14[0] = (uint64_t *)&v11;
  v14[1] = a1;
  v14[2] = (uint64_t *)&v15;
  sub_2240A1814(v11, v14);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2240A1800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2240A1814(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  BOOL v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(char **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v9 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        for (*(_QWORD *)&v91 = v9 + 16; v7; --v7)
          result = (uint64_t)sub_224559C04((uint64_t **)&v91, *v6++);
      }
      else
      {
        for (; v7; --v7)
        {
          v78 = *v6;
          if (v78 < 0)
          {
            LOBYTE(v91) = -52;
            BYTE1(v91) = v78;
          }
          else
          {
            LOBYTE(v91) = *v6;
          }
          result = std::ostream::write();
          ++v6;
        }
      }
      break;
    case 1:
      v10 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v11 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v15 = a2[1];
      *(_QWORD *)&v91 = v13 >> 1;
      *((_QWORD *)&v91 + 1) = v12;
      result = sub_224553564(*(_QWORD *)(v15 + 24), &v91);
      break;
    case 2:
      v16 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(unsigned int **)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 4;
      if (v20)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v21 = v19 >> 2;
      v22 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)&v91 = v22 + 16;
        if (v19 >= 4)
        {
          v23 = 4 * v21;
          do
          {
            result = (uint64_t)sub_22455A7EC((uint64_t **)&v91, *v18++);
            v23 -= 4;
          }
          while (v23);
        }
      }
      else if (v19 >= 4)
      {
        v79 = v22 + 8;
        v80 = 4 * v21;
        do
        {
          result = sub_22455AA60((uint64_t)&v91, v79);
          ++v18;
          v80 -= 4;
        }
        while (v80);
      }
      break;
    case 3:
      v24 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(unint64_t **)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 8;
      if (v28)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v29 = v27 >> 3;
      v30 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v30 + 40))
      {
        *(_QWORD *)&v91 = v30 + 16;
        if (v27 >= 8)
        {
          v31 = 8 * v29;
          do
          {
            result = (uint64_t)sub_22455B1CC((uint64_t **)&v91, *v26++);
            v31 -= 8;
          }
          while (v31);
        }
      }
      else if (v27 >= 8)
      {
        v81 = 8 * v29;
        do
        {
          ++v26;
          result = sub_22455B4D4();
          v81 -= 8;
        }
        while (v81);
      }
      break;
    case 5:
      v32 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v33 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_BYTE **)(v33 + 48);
      if (v34)
        v36 = 1;
      else
        v36 = v35 == 0;
      if (!v36)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v37 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v37 + 40))
      {
        for (*(_QWORD *)&v91 = v37 + 16; v35; --v35)
          result = (uint64_t)sub_224559ABC((uint64_t **)&v91, (char)*v34++);
      }
      else
      {
        for (; v35; --v35)
        {
          v82 = (char)*v34;
          if (v82 > -33)
          {
            LOBYTE(v91) = *v34;
          }
          else
          {
            LOBYTE(v91) = -48;
            BYTE1(v91) = v82;
          }
          result = std::ostream::write();
          ++v34;
        }
      }
      break;
    case 6:
      v38 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(__int16 **)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 2;
      if (v42)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v43 = v41 >> 1;
      v44 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)&v91 = v44 + 16;
        if (v41 >= 2)
        {
          v45 = 2 * v43;
          do
          {
            result = (uint64_t)sub_224559D48((uint64_t **)&v91, *v40++);
            v45 -= 2;
          }
          while (v45);
        }
      }
      else if (v41 >= 2)
      {
        v83 = 2 * v43;
        do
        {
          ++v40;
          result = sub_22455A00C();
          v83 -= 2;
        }
        while (v83);
      }
      break;
    case 7:
      v46 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v47 = *(_QWORD *)(v46 + 16);
      v49 = *(_QWORD *)(v47 + 40);
      v48 = *(unsigned int **)(v47 + 48);
      if (v48)
        v50 = 0;
      else
        v50 = v49 >= 4;
      if (v50)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v51 = v49 >> 2;
      v52 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v52 + 40))
      {
        *(_QWORD *)&v91 = v52 + 16;
        if (v49 >= 4)
        {
          v53 = 4 * v51;
          do
          {
            result = (uint64_t)sub_22455A2D4((uint64_t **)&v91, *v48++);
            v53 -= 4;
          }
          while (v53);
        }
      }
      else if (v49 >= 4)
      {
        v84 = 4 * v51;
        do
        {
          ++v48;
          result = sub_22455A6F0();
          v84 -= 4;
        }
        while (v84);
      }
      break;
    case 8:
      v54 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v55 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unint64_t **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 8;
      if (v58)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 3;
      v60 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v91 = v60 + 16;
        if (v57 >= 8)
        {
          v61 = 8 * v59;
          do
          {
            result = (uint64_t)sub_22455AB50((uint64_t **)&v91, *v56++);
            v61 -= 8;
          }
          while (v61);
        }
      }
      else if (v57 >= 8)
      {
        v85 = 8 * v59;
        do
        {
          ++v56;
          result = sub_22455B08C();
          v85 -= 8;
        }
        while (v85);
      }
      break;
    case 11:
      v62 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v63 = *(_QWORD *)(v62 + 16);
      v65 = *(_QWORD *)(v63 + 40);
      v64 = *(unsigned int **)(v63 + 48);
      if (v64)
        v66 = 0;
      else
        v66 = v65 >= 4;
      if (v66)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v67 = v65 >> 2;
      v68 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v68 + 40))
      {
        *(_QWORD *)&v91 = v68 + 16;
        if (v65 >= 4)
        {
          v69 = 4 * v67;
          do
          {
            result = (uint64_t)sub_22455B5CC((uint64_t)&v90, (uint64_t **)&v91, v64++);
            v69 -= 4;
          }
          while (v69);
        }
      }
      else if (v65 >= 4)
      {
        v86 = 4 * v67;
        do
        {
          v87 = *v64;
          LOBYTE(v91) = -54;
          *(_DWORD *)((char *)&v91 + 1) = bswap32(v87);
          result = std::ostream::write();
          ++v64;
          v86 -= 4;
        }
        while (v86);
      }
      break;
    case 12:
      v70 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v71 = *(_QWORD *)(v70 + 16);
      v73 = *(_QWORD *)(v71 + 40);
      v72 = *(unint64_t **)(v71 + 48);
      if (v72)
        v74 = 0;
      else
        v74 = v73 >= 8;
      if (v74)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v75 = v73 >> 3;
      v76 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v76 + 40))
      {
        *(_QWORD *)&v91 = v76 + 16;
        if (v73 >= 8)
        {
          v77 = 8 * v75;
          do
          {
            result = (uint64_t)sub_22455B6A8((uint64_t)&v90, (uint64_t **)&v91, v72++);
            v77 -= 8;
          }
          while (v77);
        }
      }
      else if (v73 >= 8)
      {
        v88 = 8 * v75;
        do
        {
          v89 = *v72;
          LOBYTE(v91) = -53;
          *(_QWORD *)((char *)&v91 + 1) = bswap64(v89);
          result = std::ostream::write();
          ++v72;
          v88 -= 8;
        }
        while (v88);
      }
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_2240A206C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240A236C(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240A236C(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  uint64_t v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_22403491C(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = *((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453F8B8(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_223454278(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines2";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_22453FAE0(a1);
  sub_2240A25CC(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_2240A2598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_223454278(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240A25B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_2240A25CC(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_2240A26F4(v4);
      break;
    case 1:
      result = sub_2240A28C8(v4);
      break;
    case 2:
      result = sub_2240A2A9C(v4);
      break;
    case 3:
      result = sub_2240A2C70(v4);
      break;
    case 5:
      result = sub_2240A2E44(v4);
      break;
    case 6:
      result = sub_2240A3018(v4);
      break;
    case 7:
      result = sub_2240A31EC(v4);
      break;
    case 8:
      result = sub_2240A33C0(v4);
      break;
    case 11:
      result = sub_2240A3594(v4);
      break;
    case 12:
      result = sub_2240A3768(v4);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

unsigned __int8 **sub_2240A26F4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_22453FC5C(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_22453FC5C(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_22453FC5C(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_22453FC5C(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A28C8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224540D48(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_224540D48(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224540D48(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_224540D48(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A2A9C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224540FB8(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_224540FB8(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224540FB8(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_224540FB8(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A2C70(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224541228(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_224541228(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224541228(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_224541228(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A2E44(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224540AD8(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_224540AD8(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224540AD8(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_224540AD8(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A3018(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224540C10(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_224540C10(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224540C10(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_224540C10(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A31EC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224540E80(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_224540E80(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224540E80(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_224540E80(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A33C0(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2245410F0(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2245410F0(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2245410F0(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2245410F0(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A3594(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224541808(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_224541808(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224541808(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_224541808(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240A3768(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_224541B78(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_224541B78(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_224541B78(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_224541B78(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

_QWORD *sub_2240A393C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240A3B54(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240A3B54(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  _QWORD v13[3];
  __int128 v14;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(v13[0]) = v10;
  sub_22454F564(a1, (unsigned __int8 *)v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v13[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v14 = xmmword_24EC66DD8;
  v13[0] = &v10;
  v13[1] = a1;
  v13[2] = &v14;
  sub_2240A3C74(v10, v13);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2240A3C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240A3C74(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(unsigned __int8 **)(v4 + 48);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (v7)
      {
        if (!v6)
          return;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v54 = a2[1];
        do
        {
          sub_22454F564(v54, v5++);
          --v6;
        }
        while (v6);
        return;
      }
      goto LABEL_112;
    case 1:
      v8 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v9 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v55 = a2[1];
        v56 = *(_QWORD *)(v55 + 40);
        v57 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(v55 + 24);
            v89 = *(_BYTE *)(v55 + 32);
            sub_2231813E8(v58, (uint64_t)&v89, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(v55 + 40) + 1;
          *(_QWORD *)(v55 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_112;
    case 2:
      v13 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v14 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return;
        goto LABEL_74;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_74:
        v59 = a2[1];
        v60 = *(_QWORD *)(v59 + 40);
        v61 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v60)
          {
            v62 = *(_QWORD **)(v59 + 24);
            v90 = *(_BYTE *)(v59 + 32);
            sub_2231813E8(v62, (uint64_t)&v90, 1);
          }
          v15 += 4;
          std::ostream::operator<<();
          v60 = *(_QWORD *)(v59 + 40) + 1;
          *(_QWORD *)(v59 + 40) = v60;
          v61 -= 4;
        }
        while (v61);
        return;
      }
      goto LABEL_112;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
        v22 = 0;
      else
        v22 = v21 >= 8;
      if (!v22)
      {
        if (v21 < 8)
          return;
        goto LABEL_79;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_79:
        v63 = a2[1];
        v64 = *(_QWORD *)(v63 + 40);
        v65 = v21 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v64)
          {
            v66 = *(_QWORD **)(v63 + 24);
            v91 = *(_BYTE *)(v63 + 32);
            sub_2231813E8(v66, (uint64_t)&v91, 1);
          }
          v20 += 8;
          std::ostream::operator<<();
          v64 = *(_QWORD *)(v63 + 40) + 1;
          *(_QWORD *)(v63 + 40) = v64;
          v65 -= 8;
        }
        while (v65);
        return;
      }
      goto LABEL_112;
    case 5:
      v23 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v24 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v24 + 40);
      v25 = *(char **)(v24 + 48);
      if (v25)
        v27 = 1;
      else
        v27 = v26 == 0;
      if (v27)
      {
        if (!v26)
          return;
        goto LABEL_84;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_84:
        v68 = a2[1];
        do
        {
          sub_22454F380(v68, v25++);
          --v26;
        }
        while (v26);
        return;
      }
      goto LABEL_112;
    case 6:
      v28 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v29 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 2;
      if (!v32)
      {
        if (v31 < 2)
          return;
        goto LABEL_88;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_88:
        v69 = a2[1];
        v70 = *(_QWORD *)(v69 + 40);
        v71 = v31 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v70)
          {
            v72 = *(_QWORD **)(v69 + 24);
            v92 = *(_BYTE *)(v69 + 32);
            sub_2231813E8(v72, (uint64_t)&v92, 1);
          }
          v30 += 2;
          std::ostream::operator<<();
          v70 = *(_QWORD *)(v69 + 40) + 1;
          *(_QWORD *)(v69 + 40) = v70;
          v71 -= 2;
        }
        while (v71);
        return;
      }
      goto LABEL_112;
    case 7:
      v33 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v34 = *(_QWORD *)(v33 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 4;
      if (!v37)
      {
        if (v36 < 4)
          return;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v73 = a2[1];
        v74 = *(_QWORD *)(v73 + 40);
        v75 = v36 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v74)
          {
            v76 = *(_QWORD **)(v73 + 24);
            v93 = *(_BYTE *)(v73 + 32);
            sub_2231813E8(v76, (uint64_t)&v93, 1);
          }
          v35 += 4;
          std::ostream::operator<<();
          v74 = *(_QWORD *)(v73 + 40) + 1;
          *(_QWORD *)(v73 + 40) = v74;
          v75 -= 4;
        }
        while (v75);
        return;
      }
      goto LABEL_112;
    case 8:
      v38 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(_QWORD *)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (!v42)
      {
        if (v41 < 8)
          return;
        goto LABEL_98;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_98:
        v77 = a2[1];
        v78 = *(_QWORD *)(v77 + 40);
        v79 = v41 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v78)
          {
            v80 = *(_QWORD **)(v77 + 24);
            v94 = *(_BYTE *)(v77 + 32);
            sub_2231813E8(v80, (uint64_t)&v94, 1);
          }
          v40 += 8;
          std::ostream::operator<<();
          v78 = *(_QWORD *)(v77 + 40) + 1;
          *(_QWORD *)(v77 + 40) = v78;
          v79 -= 8;
        }
        while (v79);
        return;
      }
      goto LABEL_112;
    case 11:
      v43 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v44 = *(_QWORD *)(v43 + 16);
      v46 = *(_QWORD *)(v44 + 40);
      v45 = *(_QWORD *)(v44 + 48);
      if (v45)
        v47 = 0;
      else
        v47 = v46 >= 4;
      if (!v47)
      {
        if (v46 < 4)
          return;
        goto LABEL_103;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_103:
        v81 = a2[1];
        v82 = *(_QWORD *)(v81 + 40);
        v83 = v46 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v82)
          {
            v84 = *(_QWORD **)(v81 + 24);
            v95 = *(_BYTE *)(v81 + 32);
            sub_2231813E8(v84, (uint64_t)&v95, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v81 + 24) + *(_QWORD *)(**(_QWORD **)(v81 + 24) - 24) + 16) = 9;
          v45 += 4;
          std::ostream::operator<<();
          v82 = *(_QWORD *)(v81 + 40) + 1;
          *(_QWORD *)(v81 + 40) = v82;
          v83 -= 4;
        }
        while (v83);
        return;
      }
      goto LABEL_112;
    case 12:
      v48 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v49 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(_QWORD *)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_112:
          abort();
        }
      }
      else if (v51 < 8)
      {
        return;
      }
      v85 = a2[1];
      v86 = *(_QWORD *)(v85 + 40);
      v87 = v51 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v86)
        {
          v88 = *(_QWORD **)(v85 + 24);
          v96 = *(_BYTE *)(v85 + 32);
          sub_2231813E8(v88, (uint64_t)&v96, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v85 + 24) + *(_QWORD *)(**(_QWORD **)(v85 + 24) - 24) + 16) = 17;
        v50 += 8;
        std::ostream::operator<<();
        v86 = *(_QWORD *)(v85 + 40) + 1;
        *(_QWORD *)(v85 + 40) = v86;
        v87 -= 8;
      }
      while (v87);
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240A4390(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_2240A4548(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240A4548(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD __src[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(__src[0]) = v9;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)__src, (char *)__src + 1, 1);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  v13 = xmmword_24EC66DD8;
  __src[0] = &v9;
  __src[1] = a1;
  __src[2] = &v13;
  sub_2240A466C(v9, __src);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_2240A4658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_2240A466C(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char *result;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v4 + 40);
      v6 = *(char **)(v4 + 48);
      if (v6)
        v7 = 1;
      else
        v7 = v5 == 0;
      if (!v7)
        goto LABEL_27;
      goto LABEL_7;
    case 1:
      v9 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(char **)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      v14 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v15 + 40);
      v11 = *(char **)(v15 + 48);
      if (v11)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v19 + 40);
      v11 = *(char **)(v19 + 48);
      if (v11)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      v22 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v23 = *(_QWORD *)(v22 + 16);
      v5 = *(_QWORD *)(v23 + 40);
      v6 = *(char **)(v23 + 48);
      if (v6)
        v24 = 1;
      else
        v24 = v5 == 0;
      if (v24)
      {
LABEL_7:
        v8 = a2[1];
      }
      else
      {
LABEL_27:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = a2[1], sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)))
        {
LABEL_77:
          abort();
        }
      }
      result = sub_224501B60(v8 + 24, *(char **)(v8 + 32), v6, &v6[v5], v5);
      break;
    case 6:
      v25 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v26 = *(_QWORD *)(v25 + 16);
      v12 = *(_QWORD *)(v26 + 40);
      v11 = *(char **)(v26 + 48);
      if (v11)
        v27 = 0;
      else
        v27 = v12 >= 2;
      if (!v27)
        goto LABEL_37;
LABEL_36:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_37:
      v28 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[1];
      if (v11)
        v30 = 1;
      else
        v30 = v28 == 0;
      if (!v30)
        goto LABEL_75;
      goto LABEL_76;
    case 7:
      v31 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v32 = *(_QWORD *)(v31 + 16);
      v16 = *(_QWORD *)(v32 + 40);
      v11 = *(char **)(v32 + 48);
      if (v11)
        v33 = 0;
      else
        v33 = v16 >= 4;
      if (!v33)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      v34 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v35 = *(_QWORD *)(v34 + 16);
      v20 = *(_QWORD *)(v35 + 40);
      v11 = *(char **)(v35 + 48);
      if (v11)
        v36 = 0;
      else
        v36 = v20 >= 8;
      if (!v36)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      v37 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v38 = *(_QWORD *)(v37 + 16);
      v16 = *(_QWORD *)(v38 + 40);
      v11 = *(char **)(v38 + 48);
      if (v11)
        v39 = 0;
      else
        v39 = v16 >= 4;
      if (!v39)
        goto LABEL_59;
LABEL_58:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_59:
      v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v29 = a2[1];
      if (v11)
        v40 = 1;
      else
        v40 = v28 == 0;
      if (!v40)
        goto LABEL_75;
      goto LABEL_76;
    case 12:
      v41 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v42 = *(_QWORD *)(v41 + 16);
      v20 = *(_QWORD *)(v42 + 40);
      v11 = *(char **)(v42 + 48);
      if (v11)
        v43 = 0;
      else
        v43 = v20 >= 8;
      if (!v43)
        goto LABEL_71;
LABEL_70:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_71:
      v28 = v20 & 0xFFFFFFFFFFFFFFF8;
      v29 = a2[1];
      if (v11)
        v44 = 1;
      else
        v44 = v28 == 0;
      if (v44)
        goto LABEL_76;
LABEL_75:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_76:
      result = sub_224501B60(v29 + 24, *(char **)(v29 + 32), v11, &v11[v28], v28);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_2240A49F8(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _BYTE *v12[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12[0] = &v9;
  sub_223BB23F8(a1, v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  v13 = xmmword_24EC66DD8;
  v12[0] = &v9;
  v12[1] = a1;
  v12[2] = &v13;
  sub_2240A4AF4(v9, v12);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_2240A4AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_2240A4AF4(int a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int8 **result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return result;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v55 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v55 + 80))(v55, v6++);
          --v7;
        }
        while (v7);
        return result;
      }
      goto LABEL_104;
    case 1:
      v9 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v56 = a2[1];
        v57 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v56 + 96))(v56, v11);
          v11 += 2;
          v57 -= 2;
        }
        while (v57);
        return result;
      }
      goto LABEL_104;
    case 2:
      v14 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (!v18)
      {
        if (v17 < 4)
          return result;
        goto LABEL_73;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_73:
        v58 = a2[1];
        v59 = v17 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v58 + 104))(v58, v16);
          v16 += 4;
          v59 -= 4;
        }
        while (v59);
        return result;
      }
      goto LABEL_104;
    case 3:
      v19 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v20 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (!v23)
      {
        if (v22 < 8)
          return result;
        goto LABEL_77;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_77:
        v60 = a2[1];
        v61 = v22 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 120))(v60, v21);
          v21 += 8;
          v61 -= 8;
        }
        while (v61);
        return result;
      }
      goto LABEL_104;
    case 5:
      v24 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (v28)
      {
        if (!v27)
          return result;
        goto LABEL_81;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_81:
        v63 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 88))(v63, v26++);
          --v27;
        }
        while (v27);
        return result;
      }
      goto LABEL_104;
    case 6:
      v29 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v30 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (!v33)
      {
        if (v32 < 2)
          return result;
        goto LABEL_85;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_85:
        v64 = a2[1];
        v65 = v32 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v64 + 48))(v64, v31);
          v31 += 2;
          v65 -= 2;
        }
        while (v65);
        return result;
      }
      goto LABEL_104;
    case 7:
      v34 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v35 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (!v38)
      {
        if (v37 < 4)
          return result;
        goto LABEL_89;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_89:
        v66 = a2[1];
        v67 = v37 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 56))(v66, v36);
          v36 += 4;
          v67 -= 4;
        }
        while (v67);
        return result;
      }
      goto LABEL_104;
    case 8:
      v39 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v40 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (!v43)
      {
        if (v42 < 8)
          return result;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v68 = a2[1];
        v69 = v42 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 72))(v68, v41);
          v41 += 8;
          v69 -= 8;
        }
        while (v69);
        return result;
      }
      goto LABEL_104;
    case 11:
      v44 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v45 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (!v48)
      {
        if (v47 < 4)
          return result;
        goto LABEL_97;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_97:
        v70 = a2[1];
        v71 = v47 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 128))(v70, v46);
          v46 += 4;
          v71 -= 4;
        }
        while (v71);
        return result;
      }
      goto LABEL_104;
    case 12:
      v49 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v50 = *(_QWORD *)(v49 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_104:
          abort();
        }
      }
      else if (v52 < 8)
      {
        return result;
      }
      v72 = a2[1];
      v73 = v52 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 136))(v72, v51);
        v51 += 8;
        v73 -= 8;
      }
      while (v73);
      return result;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240A50D0(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240A5784(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240A7B4C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240A9360(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240AB728(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240AD014(&v9, a1);
          else
            sub_2240A5234(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_2240A5234(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  _BYTE *v30[26];
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 __p;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v30);
    sub_223B87C9C((uint64_t)v31, (uint64_t *)v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v31);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(uint64_t *, uint64_t))*(&off_24EC66CC8 + v6))(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v15 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)__p;
LABEL_45:
    *((_QWORD *)&__p + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v30);
  sub_223B87C9C((uint64_t)v31, (uint64_t *)v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(uint64_t *, uint64_t))*(&off_24EC66CC8 + v7))(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v31);
  if (v45)
  {
LABEL_38:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v23 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_2231AD66C((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v30[0] = *(_BYTE **)(a2 + 8);
  v25 = (int)v30[0];
  *(_DWORD *)v31 = 6;
  (*(void (**)(uint64_t, _BYTE *))(v24 + 104))(a2, v31);
  if (v25 < 1)
  {
    if (*(_DWORD *)v31 < 3u)
      sub_223BD7864((uint64_t)v31, a2, v4, *(unsigned int *)v31);
    else
      sub_223BD7AD8(a2, v4, *(unsigned int *)v31);
  }
  else
  {
    sub_223BD7174((int *)v30, a2, v4, *(unsigned int *)v31);
  }
  v26 = *(_QWORD *)a2;
  v29 = *(_QWORD *)(a2 + 8);
  v27 = v29;
  LODWORD(v30[0]) = 1;
  (*(void (**)(uint64_t, _BYTE **))(v26 + 104))(a2, v30);
  if (v27 < 1)
  {
    v30[0] = (_BYTE *)(v3 + 200);
    sub_223BDEF78((_BYTE *)a2, v30);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, v3 + 208);
    *(_OWORD *)v31 = xmmword_24EC66DD8;
    v28 = *(unsigned __int8 *)(v3 + 200);
    v30[0] = (_BYTE *)(v3 + 200);
    v30[1] = (_BYTE *)a2;
    v30[2] = v31;
    sub_2240AF148(v28, v30);
  }
  else
  {
    sub_2240AEC98((int *)&v29, (_BYTE *)a2, (_BYTE *)(v3 + 200));
  }
}

void sub_2240A573C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240A5784(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2240A5C34((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_2240A5BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240A5C34(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_224544628(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451CAD4(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_224035430((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451CAD4(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines2";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  sub_2240A5DC4(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_2240A5DC4(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_2240A5EEC(v3);
      break;
    case 1:
      sub_2240A61A4(v3);
      break;
    case 2:
      sub_2240A6468(v3);
      break;
    case 3:
      sub_2240A6730(v3);
      break;
    case 5:
      sub_2240A6A68(v3);
      break;
    case 6:
      sub_2240A6D20(v3);
      break;
    case 7:
      sub_2240A6FE4(v3);
      break;
    case 8:
      sub_2240A72AC(v3);
      break;
    case 11:
      sub_2240A75E4(v3);
      break;
    case 12:
      sub_2240A7898(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240A5EEC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_224544628((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2245448E0(v8), ++v8[14], sub_2245449F8(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245448E0(v10);
      ++v10[14];
      sub_2245449F8(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240A613C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A61A4(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_223257BE4();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_224545920(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545920(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240A6400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A6468(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_22316E078();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_224545A98(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545A98(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240A66C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A6730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245448E0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547FD0(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245448E0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547FD0(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240A69E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A6A68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_224544628((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2245448E0(v8), ++v8[14], sub_224545740(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245448E0(v10);
      ++v10[14];
      sub_224545740(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240A6CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A6D20(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_2240336DC();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_224545830(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545830(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240A6F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A6FE4(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_22352449C();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_2245459DC(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_2245459DC(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240A7244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A72AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245448E0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547C94(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245448E0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547C94(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240A7560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A75E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_22316E078();
    __p = operator new(16 * v2);
    v21 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 8;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245448E0(v6), ++v6[14], sub_224545EA4(v7, (float *)&v5[v3 - 8]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245448E0(v9);
      ++v9[14];
      sub_224545EA4(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240A7830(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A7898(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_22316E078();
    __p = operator new(32 * v2);
    v21 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 16;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245448E0(v6), ++v6[14], sub_224545FAC(v7, (double *)&v5[v3 - 16]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245448E0(v9);
      ++v9[14];
      sub_224545FAC(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240A7AE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240A7B4C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v26, a2, v4);
  LODWORD(v26[0]) = 1;
  sub_224554038(a2[6], v26);
  return sub_2240A7FD8((uint64_t)v26, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_2240A7F90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240A7FD8(uint64_t a1, _QWORD *a2, unsigned __int8 *a3)
{
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;

  v5 = a2 + 2;
  sub_2231B1308(a2 + 2);
  LOBYTE(v10[0]) = 0;
  sub_224553CF0(a2[6], v10);
  *a3 = v10[0];
  sub_2245543E8(a2[6], (_QWORD *)a3 + 1);
  v11 = xmmword_24EC66DD8;
  v6 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_2240A80A0(v6, v10);
  v7 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v9 = *(_QWORD *)(v7 - 16) - result + *(_QWORD *)(v7 - 8);
  if (v9)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v9);
  a2[4] -= 16;
  return result;
}

void sub_2240A80A0(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240A8148(a2);
      break;
    case 1:
      sub_2240A8308(a2);
      break;
    case 2:
      sub_2240A84D8(a2);
      break;
    case 3:
      sub_2240A86AC(a2);
      break;
    case 5:
      sub_2240A8880(a2);
      break;
    case 6:
      sub_2240A8A40(a2);
      break;
    case 7:
      sub_2240A8C10(a2);
      break;
    case 8:
      sub_2240A8DE4(a2);
      break;
    case 11:
      sub_2240A8FB8(a2);
      break;
    case 12:
      sub_2240A918C(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240A8148(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553CF0(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240A82A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A8308(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553E94(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A8478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A84D8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224554038(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A864C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A86AC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245543E8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A8820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A8880(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553C38(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240A89E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A8A40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553DDC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A8BB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A8C10(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224553F80(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A8D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A8DE4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245542F8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A8F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A8FB8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_2245544CC(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A912C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A918C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_224554604(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240A9300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A9360(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2240A9810((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_2240A97C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240A9810(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_224544138(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451C444(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_224036208((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451C444(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines2";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  sub_2240A99A0(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_2240A99A0(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_2240A9AC8(v3);
      break;
    case 1:
      sub_2240A9D80(v3);
      break;
    case 2:
      sub_2240AA044(v3);
      break;
    case 3:
      sub_2240AA30C(v3);
      break;
    case 5:
      sub_2240AA644(v3);
      break;
    case 6:
      sub_2240AA8FC(v3);
      break;
    case 7:
      sub_2240AABC0(v3);
      break;
    case 8:
      sub_2240AAE88(v3);
      break;
    case 11:
      sub_2240AB1C0(v3);
      break;
    case 12:
      sub_2240AB474(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240A9AC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_224544138((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2245443F0(v8), ++v8[14], sub_224544508(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245443F0(v10);
      ++v10[14];
      sub_224544508(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240A9D18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240A9D80(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_223257BE4();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544C94(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544C94(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240A9FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AA044(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_22316E078();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544E0C(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544E0C(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240AA2A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AA30C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245443F0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224546D08(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245443F0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224546D08(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240AA5C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AA644(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_224544138((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2245443F0(v8), ++v8[14], sub_224544AB4(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245443F0(v10);
      ++v10[14];
      sub_224544AB4(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240AA894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AA8FC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_2240336DC();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544BA4(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544BA4(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240AAB58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AABC0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_22352449C();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544D50(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544D50(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240AAE20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AAE88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245443F0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_22454664C(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245443F0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_22454664C(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240AB13C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AB1C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_22316E078();
    __p = operator new(16 * v2);
    v21 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 8;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245443F0(v6), ++v6[14], sub_224545240(v7, (float *)&v5[v3 - 8]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245443F0(v9);
      ++v9[14];
      sub_224545240(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240AB40C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AB474(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_22316E078();
    __p = operator new(32 * v2);
    v21 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 16;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245443F0(v6), ++v6[14], sub_224545370(v7, (double *)&v5[v3 - 16]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245443F0(v9);
      ++v9[14];
      sub_224545370(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240AB6C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AB728(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  void *__p;
  uint64_t v33;
  _BYTE *v34;
  _BYTE v35[24];
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v35);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v35);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v30 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v30 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v29 = 0;
      else
        v29 = v30;
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_2245508F0(a2, &__p);
  LOBYTE(__p) = 0;
  sub_22454FFAC(a2, &__p);
  *(_BYTE *)(v3 + 200) = (_BYTE)__p;
  sub_224550D98(a2, (_QWORD *)(v3 + 208));
  *(_OWORD *)v35 = xmmword_24EC66DD8;
  v26 = *(unsigned __int8 *)(v3 + 200);
  __p = (void *)(v3 + 200);
  v33 = a2;
  v34 = v35;
  sub_2240ABD7C(v26, &__p);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v28 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v28 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v27 = 0;
      else
        v27 = v28;
    }
    while ((v27 & 1) != 0);
  }
}

void sub_2240ABD34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240ABD7C(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240ABE24(a2);
      break;
    case 1:
      sub_2240ABFE0(a2);
      break;
    case 2:
      sub_2240AC1AC(a2);
      break;
    case 3:
      sub_2240AC37C(a2);
      break;
    case 5:
      sub_2240AC54C(a2);
      break;
    case 6:
      sub_2240AC708(a2);
      break;
    case 7:
      sub_2240AC8D4(a2);
      break;
    case 8:
      sub_2240ACAA4(a2);
      break;
    case 11:
      sub_2240ACC74(a2);
      break;
    case 12:
      sub_2240ACE44(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240ABE24(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FFAC(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240ABF80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ABFE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_224550448(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AC14C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AC1AC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_2245508F0(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AC31C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AC37C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550D98(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AC4EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AC54C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FD64(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240AC6A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AC708(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2245501F4(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AC874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AC8D4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_22455069C(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ACA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ACAA4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550B44(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ACC14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ACC74(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_224551268(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ACDE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ACE44(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_2245514BC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ACFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AD014(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240AD488((uint64_t)v25, a2, v3 + 200);
}

void sub_2240AD440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240AD488(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  sub_2240AD558(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_2240AD544(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240AD558(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24EC66DD8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_2240AD658(v5, v10);
}

void sub_2240AD630(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240AD644(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240AD658(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240AD700(a2);
      break;
    case 1:
      sub_2240AD920(a2);
      break;
    case 2:
      sub_2240ADB48(a2);
      break;
    case 3:
      sub_2240ADD74(a2);
      break;
    case 5:
      sub_2240ADFA0(a2);
      break;
    case 6:
      sub_2240AE1C0(a2);
      break;
    case 7:
      sub_2240AE3E8(a2);
      break;
    case 8:
      sub_2240AE614(a2);
      break;
    case 11:
      sub_2240AE840(a2);
      break;
    case 12:
      sub_2240AEA6C(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240AD700(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450EEF0(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AD8B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AD920(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F234(v23, 1, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ADAD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ADB48(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F57C(v23, 2, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ADD04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ADD74(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F8C4(v23, 3, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240ADF30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240ADFA0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450ED50(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AE150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AE1C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F090(v23, 6, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AE378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AE3E8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F3D8(v23, 7, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AE5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AE614(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F720(v23, 8, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AE7D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AE840(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FA68(v23, 11, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AE9FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AEA6C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FC0C(v23, 12, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AEC28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AEC98(int *a1, _BYTE *a2, _BYTE *a3)
{
  int v5;
  int v7;
  unsigned int v8;
  __int128 *v9;
  _BYTE *v10[3];
  __int128 v11;

  v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v10[0]) = 1;
    (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v10);
    if (LODWORD(v10[0]) >= 2)
    {
      v8 = v10[0];
      v9 = sub_2240AED98();
      sub_22455C3A8((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
  v10[0] = a3;
  sub_223BDEF78(a2, v10);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v11 = xmmword_24EC66DD8;
  v7 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_2240AF148(v7, v10);
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240AED98()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557907D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557907D0))
    return &xmmword_2557907B8;
  v2 = sub_2240AEE74();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_2557907B8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2557907C8 = v2->__r_.__value_.__r.__words[2];
    xmmword_2557907B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557907B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557907D0);
  return &xmmword_2557907B8;
}

void sub_2240AEE5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557907D0);
  _Unwind_Resume(a1);
}

std::string *sub_2240AEE74()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557907F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557907F0))
    return &stru_2557907D8;
  sub_2240AEF64((uint64_t)__p);
  sub_2232A0AA8((char *)__p, &stru_2557907D8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557907D8, &dword_22314D000);
  __cxa_guard_release(&qword_2557907F0);
  return &stru_2557907D8;
}

void sub_2240AEF24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557907F0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557907F0);
  _Unwind_Resume(a1);
}

void sub_2240AEF64(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790810);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790810))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::LinesSample<2>]", qword_2557907F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557907F8, &dword_22314D000);
    __cxa_guard_release(&qword_255790810);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790830);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790830))
  {
    v5 = sub_2231A38CC(qword_2557907F8, "<", 0);
    sub_2231A37C8(qword_2557907F8, 0, v5, qword_255790818);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790818, &dword_22314D000);
    __cxa_guard_release(&qword_255790830);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790850);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790850))
  {
    sub_224573040((uint64_t)qword_255790818, (uint64_t)&xmmword_255790838);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790838, &dword_22314D000);
    __cxa_guard_release(&qword_255790850);
  }
  if (byte_25579084F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790838, *((unint64_t *)&xmmword_255790838 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790838;
    *(_QWORD *)(a1 + 16) = unk_255790848;
  }
}

void sub_2240AF100(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790850);
  _Unwind_Resume(a1);
}

void sub_2240AF118(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790830);
  _Unwind_Resume(a1);
}

void sub_2240AF130(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790810);
  _Unwind_Resume(a1);
}

void sub_2240AF148(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240AF1F0(a2);
      break;
    case 1:
      sub_2240AF398(a2);
      break;
    case 2:
      sub_2240AF554(a2);
      break;
    case 3:
      sub_2240AF714(a2);
      break;
    case 5:
      sub_2240AF8D4(a2);
      break;
    case 6:
      sub_2240AFA7C(a2);
      break;
    case 7:
      sub_2240AFC38(a2);
      break;
    case 8:
      sub_2240AFDF8(a2);
      break;
    case 11:
      sub_2240AFFB8(a2);
      break;
    case 12:
      sub_2240B0178(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240AF1F0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450EEF0(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AF338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AF398(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AF4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AF554(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AF6B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AF714(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AF874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AF8D4(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450ED50(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AFA1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AFA7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AFBD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AFC38(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AFD98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AFDF8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240AFF58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240AFFB8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240B0118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B0178(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240B02D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2240B0338@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC69288;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(v4 + 72) = 1;
  }
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 176) = v7;
    *(_BYTE *)(v4 + 192) = 1;
  }
  *(_BYTE *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    *(_OWORD *)(v4 + 208) = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(v4 + 224) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *(_BYTE *)(v4 + 232) = 1;
  }
  *(_QWORD *)v4 = &off_24EC69208;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_2240B04D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240B04EC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC69288;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2240B0564(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC69288;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240B05DC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2240B05E4(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24EC6A3F8, (const struct __class_type_info *)&unk_24EC69248, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_224510F44(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_2240B068C(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_2240B1970();
  sub_2240B0740(a1);
  sub_2231AC984(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_2240B0724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240B0740(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_2557909F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557909F0))
  {
    v4 = sub_2240B15C0();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_2231AD150((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_223197FA4(&xmmword_2557909D8, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_2557909E8 = *(_QWORD *)(v9 - 8);
      xmmword_2557909D8 = v7;
    }
    sub_22319BB48(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557909D8, &dword_22314D000);
    __cxa_guard_release(&qword_2557909F0);
  }
  return sub_2240B1D30(&xmmword_2557909D8, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)"}");
}

void sub_2240B0850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_22319BB48(&a9);
  __cxa_guard_abort(&qword_2557909F0);
  _Unwind_Resume(a1);
}

void sub_2240B0870(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557909F0);
  _Unwind_Resume(a1);
}

void sub_2240B0888(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 13;
}

void sub_2240B08B4(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_22413ADAC(lpsrc, 13, a2);
}

_QWORD *sub_2240B08EC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC69288;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2240B0964(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC69288;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240B09DC(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_2240B105C();
  return sub_2240B0B30(v2, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_2240B0A34(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_2240B0D5C((uint64_t)v5, (uint64_t)v2, (unsigned __int8 **)(a1 + 8));
  if (v3 == -1)
    sub_22316DD70();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66D10[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66CF8[v3])(v5, v2);
  return result;
}

void sub_2240B0ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24EC66CF8[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_2240B0B04(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_2240B0B30(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_2231ABB0C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_2240B0D5C((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  sub_2231AB90C((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v16])(&p_dst, &__dst);
  return result;
}

void sub_2240B0CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B0D5C(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD *v23[5];
  _QWORD *v24;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v24 = (_QWORD *)v5;
  v6 = sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_22454B4D0(v6, v23);
  sub_2231813E8(v7, (uint64_t)",", 1);
  v23[0] = (_QWORD *)(v5 + 16);
  sub_22450BFF4(**a3, a3, v23);
  sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)"}", 1);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = *(const void **)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v16 + 16);
    MEMORY[0x227684CE8](v16, 0x10B2C40EED050F3);
  }
  v23[0] = (_QWORD *)a2;
  v23[1] = __dst;
  v23[2] = (_QWORD *)a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_22316DD70();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_2240B1008(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2240B102C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B1048(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22456E764((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_2240B105C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790870);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790870))
    return &xmmword_255790858;
  v2 = sub_2240B1138();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790858, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790868 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790858 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790858, &dword_22314D000);
  __cxa_guard_release(&qword_255790870);
  return &xmmword_255790858;
}

void sub_2240B1120(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790870);
  _Unwind_Resume(a1);
}

std::string *sub_2240B1138()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790890);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790890))
    return &stru_255790878;
  sub_2240B13DC((uint64_t)__p);
  sub_2240B1228((char *)__p, &stru_255790878);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790878, &dword_22314D000);
  __cxa_guard_release(&qword_255790890);
  return &stru_255790878;
}

void sub_2240B11E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790890);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790890);
  _Unwind_Resume(a1);
}

void sub_2240B1228(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2240B15C0();
  if (*((char *)v4 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_2231AC788();
  if (*((char *)v6 + 23) < 0)
  {
    sub_223197FA4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 2uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_2240B138C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_22319BB48((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2240B13DC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790950);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790950))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Lines<3>>]", qword_255790938);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790938, &dword_22314D000);
    __cxa_guard_release(&qword_255790950);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790970);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790970))
  {
    v5 = sub_2231A38CC(qword_255790938, "<", 0);
    sub_2231A37C8(qword_255790938, 0, v5, qword_255790958);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790958, &dword_22314D000);
    __cxa_guard_release(&qword_255790970);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790990);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790990))
  {
    sub_224573040((uint64_t)qword_255790958, (uint64_t)&xmmword_255790978);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790978, &dword_22314D000);
    __cxa_guard_release(&qword_255790990);
  }
  if (byte_25579098F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790978, *((unint64_t *)&xmmword_255790978 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790978;
    *(_QWORD *)(a1 + 16) = unk_255790988;
  }
}

void sub_2240B1578(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790990);
  _Unwind_Resume(a1);
}

void sub_2240B1590(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790970);
  _Unwind_Resume(a1);
}

void sub_2240B15A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790950);
  _Unwind_Resume(a1);
}

__int128 *sub_2240B15C0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557908B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557908B0))
    return &xmmword_255790898;
  v2 = sub_2240B169C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790898, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2557908A8 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790898 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790898, &dword_22314D000);
  __cxa_guard_release(&qword_2557908B0);
  return &xmmword_255790898;
}

void sub_2240B1684(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557908B0);
  _Unwind_Resume(a1);
}

std::string *sub_2240B169C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557908D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557908D0))
    return &stru_2557908B8;
  sub_2240B178C((uint64_t)__p);
  sub_2240333EC((char *)__p, &stru_2557908B8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557908B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557908D0);
  return &stru_2557908B8;
}

void sub_2240B174C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557908D0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557908D0);
  _Unwind_Resume(a1);
}

void sub_2240B178C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557908F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557908F0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Lines<3>]", qword_2557908D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557908D8, &dword_22314D000);
    __cxa_guard_release(&qword_2557908F0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790910);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790910))
  {
    v5 = sub_2231A38CC(qword_2557908D8, "<", 0);
    sub_2231A37C8(qword_2557908D8, 0, v5, qword_2557908F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557908F8, &dword_22314D000);
    __cxa_guard_release(&qword_255790910);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790930);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790930))
  {
    sub_224573040((uint64_t)qword_2557908F8, (uint64_t)&xmmword_255790918);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790918, &dword_22314D000);
    __cxa_guard_release(&qword_255790930);
  }
  if (byte_25579092F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790918, *((unint64_t *)&xmmword_255790918 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790918;
    *(_QWORD *)(a1 + 16) = unk_255790928;
  }
}

void sub_2240B1928(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790930);
  _Unwind_Resume(a1);
}

void sub_2240B1940(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790910);
  _Unwind_Resume(a1);
}

void sub_2240B1958(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557908F0);
  _Unwind_Resume(a1);
}

std::string *sub_2240B1970()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_2557909B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557909B0))
  {
    sub_223174DE4(v9, "viz::PackageData");
    v2 = sub_2240B15C0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_2240B1C38();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_22319BD1C(v8, (uint64_t)__dst, 4uLL);
    sub_2245730F4((char *)v9, (uint64_t *)v8, &stru_255790998, v6, v7);
    sub_22319BB48(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790998, &dword_22314D000);
        __cxa_guard_release(&qword_2557909B0);
        return &stru_255790998;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_255790998;
}

void sub_2240B1B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_22319BB48(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2557909B0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2557909B0);
  _Unwind_Resume(a1);
}

std::string *sub_2240B1C38()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557909D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557909D0))
    return &stru_2557909B8;
  sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 13U]", __p);
  sub_22457326C((uint64_t)__p, &stru_2557909B8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557909B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557909D0);
  return &stru_2557909B8;
}

void sub_2240B1CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557909D0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557909D0);
  _Unwind_Resume(a1);
}

uint64_t sub_2240B1D30(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_2231ABB0C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_2240B0D5C((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v11])(&p_dst, &__dst);
  return result;
}

void sub_2240B1E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B1E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B1E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B1EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240B1EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2240B1ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_224123BEC((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_224510F44(v12, (uint64_t)&v18);
LABEL_27:
  sub_2231AD66C((uint64_t)v25);
  sub_2231AD66C((uint64_t)v31);
  return v14;
}

void sub_2240B2100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240B211C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240B2130(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240B253C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240B3E0C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240B4A48(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240B6318(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240B6D6C(&v9, (uint64_t)a1);
          else
            sub_2240B2294(&v8, a1);
        }
      }
    }
  }
}

void sub_2240B2294(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_2240B73D4(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240B73D4(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240B253C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240B283C(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240B283C(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  void **v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_224033EEC(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = (void **)*((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453FEA0(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_22345337C(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines3";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_22454024C(a1);
  sub_2240B2A9C(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_2240B2A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_22345337C(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240B2A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_2240B2A9C(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_2240B2BC4(v4);
      break;
    case 1:
      result = sub_2240B2D98(v4);
      break;
    case 2:
      result = sub_2240B2F6C(v4);
      break;
    case 3:
      result = sub_2240B3140(v4);
      break;
    case 5:
      result = sub_2240B3314(v4);
      break;
    case 6:
      result = sub_2240B34E8(v4);
      break;
    case 7:
      result = sub_2240B36BC(v4);
      break;
    case 8:
      result = sub_2240B3890(v4);
      break;
    case 11:
      result = sub_2240B3A64(v4);
      break;
    case 12:
      result = sub_2240B3C38(v4);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

unsigned __int8 **sub_2240B2BC4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2245403C8(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_2245403C8(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2245403C8(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_2245403C8(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B2D98(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2245429C8(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_2245429C8(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2245429C8(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_2245429C8(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B2F6C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224542C38(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_224542C38(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224542C38(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_224542C38(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B3140(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224543118(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_224543118(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224543118(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_224543118(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B3314(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224542758(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_224542758(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224542758(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_224542758(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B34E8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224542890(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_224542890(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224542890(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_224542890(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B36BC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224542B00(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_224542B00(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224542B00(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_224542B00(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B3890(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224542FE0(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_224542FE0(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224542FE0(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_224542FE0(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B3A64(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2245436F8(v10, (float **)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2245436F8(v11, (float **)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2245436F8(v7, (float **)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2245436F8(v8, (float **)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B3C38(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22454024C((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224543B18(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_224543B18(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22454024C((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224543B18(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_224543B18(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

void sub_2240B3E0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B979A0((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B97884((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(a2[3]);
    sub_223B970F8((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(a2[3]);
  sub_2240B408C(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240B408C(uint64_t *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14[3];
  __int128 v15;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[3];
  if (*(_BYTE *)(v6 + 40))
  {
    v14[0] = (uint64_t *)(v6 + 16);
    sub_224559C04(v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14[0]) = -52;
      BYTE1(v14[0]) = v11;
    }
    else
    {
      LOBYTE(v14[0]) = v11;
    }
    std::ostream::write();
  }
  v7 = a1[3];
  if (*(_BYTE *)(v7 + 40))
  {
    v14[0] = (uint64_t *)(v7 + 16);
    sub_22455B1CC(v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_22455B4D4();
  }
  v15 = xmmword_24EC66DE8;
  v14[0] = (uint64_t *)&v11;
  v14[1] = a1;
  v14[2] = (uint64_t *)&v15;
  sub_2240B41F0(v11, v14);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2240B41DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2240B41F0(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  BOOL v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(char **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v9 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        for (*(_QWORD *)&v91 = v9 + 16; v7; --v7)
          result = (uint64_t)sub_224559C04((uint64_t **)&v91, *v6++);
      }
      else
      {
        for (; v7; --v7)
        {
          v78 = *v6;
          if (v78 < 0)
          {
            LOBYTE(v91) = -52;
            BYTE1(v91) = v78;
          }
          else
          {
            LOBYTE(v91) = *v6;
          }
          result = std::ostream::write();
          ++v6;
        }
      }
      break;
    case 1:
      v10 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v11 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v15 = a2[1];
      *(_QWORD *)&v91 = v13 >> 1;
      *((_QWORD *)&v91 + 1) = v12;
      result = sub_224553564(*(_QWORD *)(v15 + 24), &v91);
      break;
    case 2:
      v16 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(unsigned int **)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 4;
      if (v20)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v21 = v19 >> 2;
      v22 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)&v91 = v22 + 16;
        if (v19 >= 4)
        {
          v23 = 4 * v21;
          do
          {
            result = (uint64_t)sub_22455A7EC((uint64_t **)&v91, *v18++);
            v23 -= 4;
          }
          while (v23);
        }
      }
      else if (v19 >= 4)
      {
        v79 = v22 + 8;
        v80 = 4 * v21;
        do
        {
          result = sub_22455AA60((uint64_t)&v91, v79);
          ++v18;
          v80 -= 4;
        }
        while (v80);
      }
      break;
    case 3:
      v24 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(unint64_t **)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 8;
      if (v28)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v29 = v27 >> 3;
      v30 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v30 + 40))
      {
        *(_QWORD *)&v91 = v30 + 16;
        if (v27 >= 8)
        {
          v31 = 8 * v29;
          do
          {
            result = (uint64_t)sub_22455B1CC((uint64_t **)&v91, *v26++);
            v31 -= 8;
          }
          while (v31);
        }
      }
      else if (v27 >= 8)
      {
        v81 = 8 * v29;
        do
        {
          ++v26;
          result = sub_22455B4D4();
          v81 -= 8;
        }
        while (v81);
      }
      break;
    case 5:
      v32 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v33 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_BYTE **)(v33 + 48);
      if (v34)
        v36 = 1;
      else
        v36 = v35 == 0;
      if (!v36)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v37 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v37 + 40))
      {
        for (*(_QWORD *)&v91 = v37 + 16; v35; --v35)
          result = (uint64_t)sub_224559ABC((uint64_t **)&v91, (char)*v34++);
      }
      else
      {
        for (; v35; --v35)
        {
          v82 = (char)*v34;
          if (v82 > -33)
          {
            LOBYTE(v91) = *v34;
          }
          else
          {
            LOBYTE(v91) = -48;
            BYTE1(v91) = v82;
          }
          result = std::ostream::write();
          ++v34;
        }
      }
      break;
    case 6:
      v38 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(__int16 **)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 2;
      if (v42)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v43 = v41 >> 1;
      v44 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)&v91 = v44 + 16;
        if (v41 >= 2)
        {
          v45 = 2 * v43;
          do
          {
            result = (uint64_t)sub_224559D48((uint64_t **)&v91, *v40++);
            v45 -= 2;
          }
          while (v45);
        }
      }
      else if (v41 >= 2)
      {
        v83 = 2 * v43;
        do
        {
          ++v40;
          result = sub_22455A00C();
          v83 -= 2;
        }
        while (v83);
      }
      break;
    case 7:
      v46 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v47 = *(_QWORD *)(v46 + 16);
      v49 = *(_QWORD *)(v47 + 40);
      v48 = *(unsigned int **)(v47 + 48);
      if (v48)
        v50 = 0;
      else
        v50 = v49 >= 4;
      if (v50)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v51 = v49 >> 2;
      v52 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v52 + 40))
      {
        *(_QWORD *)&v91 = v52 + 16;
        if (v49 >= 4)
        {
          v53 = 4 * v51;
          do
          {
            result = (uint64_t)sub_22455A2D4((uint64_t **)&v91, *v48++);
            v53 -= 4;
          }
          while (v53);
        }
      }
      else if (v49 >= 4)
      {
        v84 = 4 * v51;
        do
        {
          ++v48;
          result = sub_22455A6F0();
          v84 -= 4;
        }
        while (v84);
      }
      break;
    case 8:
      v54 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v55 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unint64_t **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 8;
      if (v58)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 3;
      v60 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v91 = v60 + 16;
        if (v57 >= 8)
        {
          v61 = 8 * v59;
          do
          {
            result = (uint64_t)sub_22455AB50((uint64_t **)&v91, *v56++);
            v61 -= 8;
          }
          while (v61);
        }
      }
      else if (v57 >= 8)
      {
        v85 = 8 * v59;
        do
        {
          ++v56;
          result = sub_22455B08C();
          v85 -= 8;
        }
        while (v85);
      }
      break;
    case 11:
      v62 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v63 = *(_QWORD *)(v62 + 16);
      v65 = *(_QWORD *)(v63 + 40);
      v64 = *(unsigned int **)(v63 + 48);
      if (v64)
        v66 = 0;
      else
        v66 = v65 >= 4;
      if (v66)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v67 = v65 >> 2;
      v68 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v68 + 40))
      {
        *(_QWORD *)&v91 = v68 + 16;
        if (v65 >= 4)
        {
          v69 = 4 * v67;
          do
          {
            result = (uint64_t)sub_22455B5CC((uint64_t)&v90, (uint64_t **)&v91, v64++);
            v69 -= 4;
          }
          while (v69);
        }
      }
      else if (v65 >= 4)
      {
        v86 = 4 * v67;
        do
        {
          v87 = *v64;
          LOBYTE(v91) = -54;
          *(_DWORD *)((char *)&v91 + 1) = bswap32(v87);
          result = std::ostream::write();
          ++v64;
          v86 -= 4;
        }
        while (v86);
      }
      break;
    case 12:
      v70 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v71 = *(_QWORD *)(v70 + 16);
      v73 = *(_QWORD *)(v71 + 40);
      v72 = *(unint64_t **)(v71 + 48);
      if (v72)
        v74 = 0;
      else
        v74 = v73 >= 8;
      if (v74)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v75 = v73 >> 3;
      v76 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v76 + 40))
      {
        *(_QWORD *)&v91 = v76 + 16;
        if (v73 >= 8)
        {
          v77 = 8 * v75;
          do
          {
            result = (uint64_t)sub_22455B6A8((uint64_t)&v90, (uint64_t **)&v91, v72++);
            v77 -= 8;
          }
          while (v77);
        }
      }
      else if (v73 >= 8)
      {
        v88 = 8 * v75;
        do
        {
          v89 = *v72;
          LOBYTE(v91) = -53;
          *(_QWORD *)((char *)&v91 + 1) = bswap64(v89);
          result = std::ostream::write();
          ++v72;
          v88 -= 8;
        }
        while (v88);
      }
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_2240B4A48(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240B4D48(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240B4D48(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  uint64_t v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_22403491C(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = *((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453F8B8(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_223454278(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines3";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_22453FAE0(a1);
  sub_2240B4FA8(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_2240B4F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_223454278(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240B4F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_2240B4FA8(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_2240B50D0(v4);
      break;
    case 1:
      result = sub_2240B52A4(v4);
      break;
    case 2:
      result = sub_2240B5478(v4);
      break;
    case 3:
      result = sub_2240B564C(v4);
      break;
    case 5:
      result = sub_2240B5820(v4);
      break;
    case 6:
      result = sub_2240B59F4(v4);
      break;
    case 7:
      result = sub_2240B5BC8(v4);
      break;
    case 8:
      result = sub_2240B5D9C(v4);
      break;
    case 11:
      result = sub_2240B5F70(v4);
      break;
    case 12:
      result = sub_2240B6144(v4);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

unsigned __int8 **sub_2240B50D0(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_22453FC5C(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_22453FC5C(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_22453FC5C(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_22453FC5C(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B52A4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224540D48(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_224540D48(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224540D48(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_224540D48(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B5478(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224540FB8(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_224540FB8(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224540FB8(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_224540FB8(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B564C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224541228(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_224541228(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224541228(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_224541228(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B5820(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224540AD8(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_224540AD8(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224540AD8(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_224540AD8(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B59F4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224540C10(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_224540C10(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224540C10(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_224540C10(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B5BC8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224540E80(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_224540E80(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224540E80(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_224540E80(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B5D9C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2245410F0(v10, (uint64_t)&v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2245410F0(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2245410F0(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2245410F0(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B5F70(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224541808(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_224541808(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224541808(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_224541808(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_2240B6144(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_224510118((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_22453FAE0((uint64_t)result);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_224541B78(v10, &v13);
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_224541B78(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_22453FAE0((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_224541B78(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_224541B78(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

_QWORD *sub_2240B6318(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240B6530(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240B6530(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  _QWORD v13[3];
  __int128 v14;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(v13[0]) = v10;
  sub_22454F564(a1, (unsigned __int8 *)v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v13[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v14 = xmmword_24EC66DE8;
  v13[0] = &v10;
  v13[1] = a1;
  v13[2] = &v14;
  sub_2240B6650(v10, v13);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_2240B663C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240B6650(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(unsigned __int8 **)(v4 + 48);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (v7)
      {
        if (!v6)
          return;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v54 = a2[1];
        do
        {
          sub_22454F564(v54, v5++);
          --v6;
        }
        while (v6);
        return;
      }
      goto LABEL_112;
    case 1:
      v8 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v9 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v55 = a2[1];
        v56 = *(_QWORD *)(v55 + 40);
        v57 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(v55 + 24);
            v89 = *(_BYTE *)(v55 + 32);
            sub_2231813E8(v58, (uint64_t)&v89, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(v55 + 40) + 1;
          *(_QWORD *)(v55 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_112;
    case 2:
      v13 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v14 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return;
        goto LABEL_74;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_74:
        v59 = a2[1];
        v60 = *(_QWORD *)(v59 + 40);
        v61 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v60)
          {
            v62 = *(_QWORD **)(v59 + 24);
            v90 = *(_BYTE *)(v59 + 32);
            sub_2231813E8(v62, (uint64_t)&v90, 1);
          }
          v15 += 4;
          std::ostream::operator<<();
          v60 = *(_QWORD *)(v59 + 40) + 1;
          *(_QWORD *)(v59 + 40) = v60;
          v61 -= 4;
        }
        while (v61);
        return;
      }
      goto LABEL_112;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
        v22 = 0;
      else
        v22 = v21 >= 8;
      if (!v22)
      {
        if (v21 < 8)
          return;
        goto LABEL_79;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_79:
        v63 = a2[1];
        v64 = *(_QWORD *)(v63 + 40);
        v65 = v21 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v64)
          {
            v66 = *(_QWORD **)(v63 + 24);
            v91 = *(_BYTE *)(v63 + 32);
            sub_2231813E8(v66, (uint64_t)&v91, 1);
          }
          v20 += 8;
          std::ostream::operator<<();
          v64 = *(_QWORD *)(v63 + 40) + 1;
          *(_QWORD *)(v63 + 40) = v64;
          v65 -= 8;
        }
        while (v65);
        return;
      }
      goto LABEL_112;
    case 5:
      v23 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v24 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v24 + 40);
      v25 = *(char **)(v24 + 48);
      if (v25)
        v27 = 1;
      else
        v27 = v26 == 0;
      if (v27)
      {
        if (!v26)
          return;
        goto LABEL_84;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_84:
        v68 = a2[1];
        do
        {
          sub_22454F380(v68, v25++);
          --v26;
        }
        while (v26);
        return;
      }
      goto LABEL_112;
    case 6:
      v28 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v29 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 2;
      if (!v32)
      {
        if (v31 < 2)
          return;
        goto LABEL_88;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_88:
        v69 = a2[1];
        v70 = *(_QWORD *)(v69 + 40);
        v71 = v31 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v70)
          {
            v72 = *(_QWORD **)(v69 + 24);
            v92 = *(_BYTE *)(v69 + 32);
            sub_2231813E8(v72, (uint64_t)&v92, 1);
          }
          v30 += 2;
          std::ostream::operator<<();
          v70 = *(_QWORD *)(v69 + 40) + 1;
          *(_QWORD *)(v69 + 40) = v70;
          v71 -= 2;
        }
        while (v71);
        return;
      }
      goto LABEL_112;
    case 7:
      v33 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v34 = *(_QWORD *)(v33 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 4;
      if (!v37)
      {
        if (v36 < 4)
          return;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v73 = a2[1];
        v74 = *(_QWORD *)(v73 + 40);
        v75 = v36 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v74)
          {
            v76 = *(_QWORD **)(v73 + 24);
            v93 = *(_BYTE *)(v73 + 32);
            sub_2231813E8(v76, (uint64_t)&v93, 1);
          }
          v35 += 4;
          std::ostream::operator<<();
          v74 = *(_QWORD *)(v73 + 40) + 1;
          *(_QWORD *)(v73 + 40) = v74;
          v75 -= 4;
        }
        while (v75);
        return;
      }
      goto LABEL_112;
    case 8:
      v38 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(_QWORD *)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (!v42)
      {
        if (v41 < 8)
          return;
        goto LABEL_98;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_98:
        v77 = a2[1];
        v78 = *(_QWORD *)(v77 + 40);
        v79 = v41 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v78)
          {
            v80 = *(_QWORD **)(v77 + 24);
            v94 = *(_BYTE *)(v77 + 32);
            sub_2231813E8(v80, (uint64_t)&v94, 1);
          }
          v40 += 8;
          std::ostream::operator<<();
          v78 = *(_QWORD *)(v77 + 40) + 1;
          *(_QWORD *)(v77 + 40) = v78;
          v79 -= 8;
        }
        while (v79);
        return;
      }
      goto LABEL_112;
    case 11:
      v43 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v44 = *(_QWORD *)(v43 + 16);
      v46 = *(_QWORD *)(v44 + 40);
      v45 = *(_QWORD *)(v44 + 48);
      if (v45)
        v47 = 0;
      else
        v47 = v46 >= 4;
      if (!v47)
      {
        if (v46 < 4)
          return;
        goto LABEL_103;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_103:
        v81 = a2[1];
        v82 = *(_QWORD *)(v81 + 40);
        v83 = v46 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v82)
          {
            v84 = *(_QWORD **)(v81 + 24);
            v95 = *(_BYTE *)(v81 + 32);
            sub_2231813E8(v84, (uint64_t)&v95, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v81 + 24) + *(_QWORD *)(**(_QWORD **)(v81 + 24) - 24) + 16) = 9;
          v45 += 4;
          std::ostream::operator<<();
          v82 = *(_QWORD *)(v81 + 40) + 1;
          *(_QWORD *)(v81 + 40) = v82;
          v83 -= 4;
        }
        while (v83);
        return;
      }
      goto LABEL_112;
    case 12:
      v48 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v49 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(_QWORD *)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_112:
          abort();
        }
      }
      else if (v51 < 8)
      {
        return;
      }
      v85 = a2[1];
      v86 = *(_QWORD *)(v85 + 40);
      v87 = v51 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v86)
        {
          v88 = *(_QWORD **)(v85 + 24);
          v96 = *(_BYTE *)(v85 + 32);
          sub_2231813E8(v88, (uint64_t)&v96, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v85 + 24) + *(_QWORD *)(**(_QWORD **)(v85 + 24) - 24) + 16) = 17;
        v50 += 8;
        std::ostream::operator<<();
        v86 = *(_QWORD *)(v85 + 40) + 1;
        *(_QWORD *)(v85 + 40) = v86;
        v87 -= 8;
      }
      while (v87);
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240B6D6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_2240B6F24(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240B6F24(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD __src[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(__src[0]) = v9;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)__src, (char *)__src + 1, 1);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  v13 = xmmword_24EC66DE8;
  __src[0] = &v9;
  __src[1] = a1;
  __src[2] = &v13;
  sub_2240B7048(v9, __src);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_2240B7034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_2240B7048(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char *result;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v4 + 40);
      v6 = *(char **)(v4 + 48);
      if (v6)
        v7 = 1;
      else
        v7 = v5 == 0;
      if (!v7)
        goto LABEL_27;
      goto LABEL_7;
    case 1:
      v9 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(char **)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      v14 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v15 + 40);
      v11 = *(char **)(v15 + 48);
      if (v11)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v19 + 40);
      v11 = *(char **)(v19 + 48);
      if (v11)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      v22 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v23 = *(_QWORD *)(v22 + 16);
      v5 = *(_QWORD *)(v23 + 40);
      v6 = *(char **)(v23 + 48);
      if (v6)
        v24 = 1;
      else
        v24 = v5 == 0;
      if (v24)
      {
LABEL_7:
        v8 = a2[1];
      }
      else
      {
LABEL_27:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = a2[1], sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)))
        {
LABEL_77:
          abort();
        }
      }
      result = sub_224501B60(v8 + 24, *(char **)(v8 + 32), v6, &v6[v5], v5);
      break;
    case 6:
      v25 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v26 = *(_QWORD *)(v25 + 16);
      v12 = *(_QWORD *)(v26 + 40);
      v11 = *(char **)(v26 + 48);
      if (v11)
        v27 = 0;
      else
        v27 = v12 >= 2;
      if (!v27)
        goto LABEL_37;
LABEL_36:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_37:
      v28 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[1];
      if (v11)
        v30 = 1;
      else
        v30 = v28 == 0;
      if (!v30)
        goto LABEL_75;
      goto LABEL_76;
    case 7:
      v31 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v32 = *(_QWORD *)(v31 + 16);
      v16 = *(_QWORD *)(v32 + 40);
      v11 = *(char **)(v32 + 48);
      if (v11)
        v33 = 0;
      else
        v33 = v16 >= 4;
      if (!v33)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      v34 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v35 = *(_QWORD *)(v34 + 16);
      v20 = *(_QWORD *)(v35 + 40);
      v11 = *(char **)(v35 + 48);
      if (v11)
        v36 = 0;
      else
        v36 = v20 >= 8;
      if (!v36)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      v37 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v38 = *(_QWORD *)(v37 + 16);
      v16 = *(_QWORD *)(v38 + 40);
      v11 = *(char **)(v38 + 48);
      if (v11)
        v39 = 0;
      else
        v39 = v16 >= 4;
      if (!v39)
        goto LABEL_59;
LABEL_58:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_59:
      v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v29 = a2[1];
      if (v11)
        v40 = 1;
      else
        v40 = v28 == 0;
      if (!v40)
        goto LABEL_75;
      goto LABEL_76;
    case 12:
      v41 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v42 = *(_QWORD *)(v41 + 16);
      v20 = *(_QWORD *)(v42 + 40);
      v11 = *(char **)(v42 + 48);
      if (v11)
        v43 = 0;
      else
        v43 = v20 >= 8;
      if (!v43)
        goto LABEL_71;
LABEL_70:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_71:
      v28 = v20 & 0xFFFFFFFFFFFFFFF8;
      v29 = a2[1];
      if (v11)
        v44 = 1;
      else
        v44 = v28 == 0;
      if (v44)
        goto LABEL_76;
LABEL_75:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_76:
      result = sub_224501B60(v29 + 24, *(char **)(v29 + 32), v11, &v11[v28], v28);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_2240B73D4(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _BYTE *v12[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12[0] = &v9;
  sub_223BB23F8(a1, v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  v13 = xmmword_24EC66DE8;
  v12[0] = &v9;
  v12[1] = a1;
  v12[2] = &v13;
  sub_2240B74D0(v9, v12);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_2240B74BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_2240B74D0(int a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int8 **result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return result;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v55 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v55 + 80))(v55, v6++);
          --v7;
        }
        while (v7);
        return result;
      }
      goto LABEL_104;
    case 1:
      v9 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v56 = a2[1];
        v57 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v56 + 96))(v56, v11);
          v11 += 2;
          v57 -= 2;
        }
        while (v57);
        return result;
      }
      goto LABEL_104;
    case 2:
      v14 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (!v18)
      {
        if (v17 < 4)
          return result;
        goto LABEL_73;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_73:
        v58 = a2[1];
        v59 = v17 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v58 + 104))(v58, v16);
          v16 += 4;
          v59 -= 4;
        }
        while (v59);
        return result;
      }
      goto LABEL_104;
    case 3:
      v19 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v20 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (!v23)
      {
        if (v22 < 8)
          return result;
        goto LABEL_77;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_77:
        v60 = a2[1];
        v61 = v22 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 120))(v60, v21);
          v21 += 8;
          v61 -= 8;
        }
        while (v61);
        return result;
      }
      goto LABEL_104;
    case 5:
      v24 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (v28)
      {
        if (!v27)
          return result;
        goto LABEL_81;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_81:
        v63 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 88))(v63, v26++);
          --v27;
        }
        while (v27);
        return result;
      }
      goto LABEL_104;
    case 6:
      v29 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v30 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (!v33)
      {
        if (v32 < 2)
          return result;
        goto LABEL_85;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_85:
        v64 = a2[1];
        v65 = v32 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v64 + 48))(v64, v31);
          v31 += 2;
          v65 -= 2;
        }
        while (v65);
        return result;
      }
      goto LABEL_104;
    case 7:
      v34 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v35 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (!v38)
      {
        if (v37 < 4)
          return result;
        goto LABEL_89;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_89:
        v66 = a2[1];
        v67 = v37 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 56))(v66, v36);
          v36 += 4;
          v67 -= 4;
        }
        while (v67);
        return result;
      }
      goto LABEL_104;
    case 8:
      v39 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v40 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (!v43)
      {
        if (v42 < 8)
          return result;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v68 = a2[1];
        v69 = v42 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 72))(v68, v41);
          v41 += 8;
          v69 -= 8;
        }
        while (v69);
        return result;
      }
      goto LABEL_104;
    case 11:
      v44 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v45 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (!v48)
      {
        if (v47 < 4)
          return result;
        goto LABEL_97;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_97:
        v70 = a2[1];
        v71 = v47 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 128))(v70, v46);
          v46 += 4;
          v71 -= 4;
        }
        while (v71);
        return result;
      }
      goto LABEL_104;
    case 12:
      v49 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v50 = *(_QWORD *)(v49 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_104:
          abort();
        }
      }
      else if (v52 < 8)
      {
        return result;
      }
      v72 = a2[1];
      v73 = v52 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 136))(v72, v51);
        v51 += 8;
        v73 -= 8;
      }
      while (v73);
      return result;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240B7AAC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240B8160(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240BA688(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240BBFFC(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240BE524(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240BFF70(&v9, a1);
          else
            sub_2240B7C10(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_2240B7C10(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  _BYTE *v30[26];
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 __p;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v30);
    sub_223B87C9C((uint64_t)v31, (uint64_t *)v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v31);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(uint64_t *, uint64_t))*(&off_24EC66CC8 + v6))(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v15 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)__p;
LABEL_45:
    *((_QWORD *)&__p + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v30);
  sub_223B87C9C((uint64_t)v31, (uint64_t *)v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(uint64_t *, uint64_t))*(&off_24EC66CC8 + v7))(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v31);
  if (v45)
  {
LABEL_38:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v23 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_2231AD66C((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v30[0] = *(_BYTE **)(a2 + 8);
  v25 = (int)v30[0];
  *(_DWORD *)v31 = 6;
  (*(void (**)(uint64_t, _BYTE *))(v24 + 104))(a2, v31);
  if (v25 < 1)
  {
    if (*(_DWORD *)v31 < 3u)
      sub_223BD7864((uint64_t)v31, a2, v4, *(unsigned int *)v31);
    else
      sub_223BD7AD8(a2, v4, *(unsigned int *)v31);
  }
  else
  {
    sub_223BD7174((int *)v30, a2, v4, *(unsigned int *)v31);
  }
  v26 = *(_QWORD *)a2;
  v29 = *(_QWORD *)(a2 + 8);
  v27 = v29;
  LODWORD(v30[0]) = 1;
  (*(void (**)(uint64_t, _BYTE **))(v26 + 104))(a2, v30);
  if (v27 < 1)
  {
    v30[0] = (_BYTE *)(v3 + 200);
    sub_223BDEF78((_BYTE *)a2, v30);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, v3 + 208);
    *(_OWORD *)v31 = xmmword_24EC66DE8;
    v28 = *(unsigned __int8 *)(v3 + 200);
    v30[0] = (_BYTE *)(v3 + 200);
    v30[1] = (_BYTE *)a2;
    v30[2] = v31;
    sub_2240C2204(v28, v30);
  }
  else
  {
    sub_2240C1D54((int *)&v29, (_BYTE *)a2, (_BYTE *)(v3 + 200));
  }
}

void sub_2240B8118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240B8160(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2240B8610((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_2240B85C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240B8610(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_224544628(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451CAD4(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_224035430((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451CAD4(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines3";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  sub_2240B87A0(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_2240B87A0(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_2240B88C8(v3);
      break;
    case 1:
      sub_2240B8BA0(v3);
      break;
    case 2:
      sub_2240B8E88(v3);
      break;
    case 3:
      sub_2240B9174(v3);
      break;
    case 5:
      sub_2240B94D0(v3);
      break;
    case 6:
      sub_2240B97A8(v3);
      break;
    case 7:
      sub_2240B9A90(v3);
      break;
    case 8:
      sub_2240B9D7C(v3);
      break;
    case 11:
      sub_2240BA0D8(v3);
      break;
    case 12:
      sub_2240BA3B0(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240B88C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_224544628((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2245448E0(v8), ++v8[14], sub_2245449F8(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245448E0(v10);
      ++v10[14];
      sub_2245449F8(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240B8B38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B8BA0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_223257BE4();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_224545920(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545920(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240B8E20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B8E88(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_22316E078();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_224545A98(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545A98(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240B910C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B9174(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245448E0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547FD0(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245448E0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547FD0(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240B944C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B94D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_224544628((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2245448E0(v8), ++v8[14], sub_224545740(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245448E0(v10);
      ++v10[14];
      sub_224545740(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240B9740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B97A8(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_2240336DC();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_224545830(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545830(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240B9A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B9A90(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_22352449C();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_224544628((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2245448E0(v5), ++v5[14], sub_2245459DC(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_2245459DC(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240B9D14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240B9D7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245448E0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547C94(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245448E0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224547C94(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240BA054(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BA0D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_22316E078();
    __p = operator new(24 * v2);
    v21 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 12;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245448E0(v6), ++v6[14], sub_224545EA4(v7, (float *)&v5[v3 - 12]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245448E0(v9);
      ++v9[14];
      sub_224545EA4(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240BA348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BA3B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_22316E078();
    __p = operator new(48 * v2);
    v21 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 24;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544628((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245448E0(v6), ++v6[14], sub_224545FAC(v7, (double *)&v5[v3 - 24]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245448E0(v9);
      ++v9[14];
      sub_224545FAC(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240BA620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240BA688(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v26, a2, v4);
  LODWORD(v26[0]) = 1;
  sub_224554038(a2[6], v26);
  return sub_2240BAB14((uint64_t)v26, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_2240BAACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240BAB14(uint64_t a1, _QWORD *a2, unsigned __int8 *a3)
{
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;

  v5 = a2 + 2;
  sub_2231B1308(a2 + 2);
  LOBYTE(v10[0]) = 0;
  sub_224553CF0(a2[6], v10);
  *a3 = v10[0];
  sub_2245543E8(a2[6], (_QWORD *)a3 + 1);
  v11 = xmmword_24EC66DE8;
  v6 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_2240BABDC(v6, v10);
  v7 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v9 = *(_QWORD *)(v7 - 16) - result + *(_QWORD *)(v7 - 8);
  if (v9)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v9);
  a2[4] -= 16;
  return result;
}

void sub_2240BABDC(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240BAC84(a2);
      break;
    case 1:
      sub_2240BAE64(a2);
      break;
    case 2:
      sub_2240BB058(a2);
      break;
    case 3:
      sub_2240BB250(a2);
      break;
    case 5:
      sub_2240BB448(a2);
      break;
    case 6:
      sub_2240BB628(a2);
      break;
    case 7:
      sub_2240BB81C(a2);
      break;
    case 8:
      sub_2240BBA14(a2);
      break;
    case 11:
      sub_2240BBC0C(a2);
      break;
    case 12:
      sub_2240BBE04(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240BAC84(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553CF0(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240BAE04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BAE64(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553E94(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BAFF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BB058(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224554038(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BB1F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BB250(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245543E8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BB3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BB448(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553C38(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240BB5C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BB628(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553DDC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BB7BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BB81C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224553F80(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BB9B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BBA14(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245542F8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BBBAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BBC0C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_2245544CC(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BBDA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BBE04(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_224554604(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BBF9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BBFFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2240BC4AC((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_2240BC464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240BC4AC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_224544138(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451C444(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_224036208((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451C444(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines3";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  sub_2240BC63C(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_2240BC63C(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_2240BC764(v3);
      break;
    case 1:
      sub_2240BCA3C(v3);
      break;
    case 2:
      sub_2240BCD24(v3);
      break;
    case 3:
      sub_2240BD010(v3);
      break;
    case 5:
      sub_2240BD36C(v3);
      break;
    case 6:
      sub_2240BD644(v3);
      break;
    case 7:
      sub_2240BD92C(v3);
      break;
    case 8:
      sub_2240BDC18(v3);
      break;
    case 11:
      sub_2240BDF74(v3);
      break;
    case 12:
      sub_2240BE24C(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240BC764(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_224544138((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2245443F0(v8), ++v8[14], sub_224544508(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245443F0(v10);
      ++v10[14];
      sub_224544508(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240BC9D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BCA3C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_223257BE4();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544C94(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544C94(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240BCCBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BCD24(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_22316E078();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544E0C(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544E0C(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240BCFA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BD010(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245443F0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224546D08(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245443F0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_224546D08(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240BD2E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BD36C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_224544138((uint64_t)v6);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2245443F0(v8), ++v8[14], sub_224544AB4(v9, (uint64_t)&v23), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2245443F0(v10);
      ++v10[14];
      sub_224544AB4(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_2240BD5DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BD644(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_2240336DC();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544BA4(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544BA4(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240BD8C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BD92C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_22352449C();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_224544138((uint64_t)v3);
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2245443F0(v5), ++v5[14], sub_224544D50(v6, (uint64_t)&v20), !__p)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544D50(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_2240BDBB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BDC18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2245443F0(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_22454664C(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2245443F0(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_22454664C(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_2240BDEF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BDF74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_22316E078();
    __p = operator new(24 * v2);
    v21 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 12;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245443F0(v6), ++v6[14], sub_224545240(v7, (float *)&v5[v3 - 12]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245443F0(v9);
      ++v9[14];
      sub_224545240(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240BE1E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BE24C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_22316E078();
    __p = operator new(48 * v2);
    v21 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 24;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_224544138((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v6 = (uint64_t *)a1[1], v7 = sub_2245443F0(v6), ++v6[14], sub_224545370(v7, (double *)&v5[v3 - 24]), (v8 = (char *)__p) == 0)&& sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2245443F0(v9);
      ++v9[14];
      sub_224545370(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_2240BE4BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BE524(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  void *__p;
  uint64_t v33;
  _BYTE *v34;
  _BYTE v35[24];
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v35);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v35);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v30 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v30 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v29 = 0;
      else
        v29 = v30;
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_2245508F0(a2, &__p);
  LOBYTE(__p) = 0;
  sub_22454FFAC(a2, &__p);
  *(_BYTE *)(v3 + 200) = (_BYTE)__p;
  sub_224550D98(a2, (_QWORD *)(v3 + 208));
  *(_OWORD *)v35 = xmmword_24EC66DE8;
  v26 = *(unsigned __int8 *)(v3 + 200);
  __p = (void *)(v3 + 200);
  v33 = a2;
  v34 = v35;
  sub_2240BEB78(v26, &__p);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v28 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v28 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v27 = 0;
      else
        v27 = v28;
    }
    while ((v27 & 1) != 0);
  }
}

void sub_2240BEB30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240BEB78(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240BEC20(a2);
      break;
    case 1:
      sub_2240BEDFC(a2);
      break;
    case 2:
      sub_2240BEFEC(a2);
      break;
    case 3:
      sub_2240BF1E0(a2);
      break;
    case 5:
      sub_2240BF3D4(a2);
      break;
    case 6:
      sub_2240BF5B0(a2);
      break;
    case 7:
      sub_2240BF7A0(a2);
      break;
    case 8:
      sub_2240BF994(a2);
      break;
    case 11:
      sub_2240BFB88(a2);
      break;
    case 12:
      sub_2240BFD7C(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240BEC20(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FFAC(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240BED9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BEDFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_224550448(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BEF8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BEFEC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_2245508F0(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BF180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BF1E0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550D98(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BF374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BF3D4(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FD64(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240BF550(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BF5B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2245501F4(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BF740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BF7A0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_22455069C(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BF934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BF994(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550B44(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BFB28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BFB88(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_224551268(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BFD1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BFD7C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_2245514BC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240BFF10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240BFF70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240C03E4((uint64_t)v25, a2, v3 + 200);
}

void sub_2240C039C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240C03E4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  sub_2240C04B4(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_2240C04A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240C04B4(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24EC66DE8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_2240C05B4(v5, v10);
}

void sub_2240C058C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240C05A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240C05B4(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240C065C(a2);
      break;
    case 1:
      sub_2240C089C(a2);
      break;
    case 2:
      sub_2240C0AE8(a2);
      break;
    case 3:
      sub_2240C0D38(a2);
      break;
    case 5:
      sub_2240C0F88(a2);
      break;
    case 6:
      sub_2240C11C8(a2);
      break;
    case 7:
      sub_2240C1414(a2);
      break;
    case 8:
      sub_2240C1664(a2);
      break;
    case 11:
      sub_2240C18B4(a2);
      break;
    case 12:
      sub_2240C1B04(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240C065C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450EEF0(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C082C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C089C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F234(v23, 1, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C0A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C0AE8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F57C(v23, 2, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C0CC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C0D38(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F8C4(v23, 3, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C0F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C0F88(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450ED50(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C1158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C11C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F090(v23, 6, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C13A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C1414(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F3D8(v23, 7, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C15F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C1664(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F720(v23, 8, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C1844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C18B4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FA68(v23, 11, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C1A94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C1B04(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FC0C(v23, 12, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C1CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C1D54(int *a1, _BYTE *a2, _BYTE *a3)
{
  int v5;
  int v7;
  unsigned int v8;
  __int128 *v9;
  _BYTE *v10[3];
  __int128 v11;

  v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v10[0]) = 1;
    (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v10);
    if (LODWORD(v10[0]) >= 2)
    {
      v8 = v10[0];
      v9 = sub_2240C1E54();
      sub_22455C3A8((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
  v10[0] = a3;
  sub_223BDEF78(a2, v10);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v11 = xmmword_24EC66DE8;
  v7 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_2240C2204(v7, v10);
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240C1E54()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790A10);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790A10))
    return &xmmword_2557909F8;
  v2 = sub_2240C1F30();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_2557909F8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790A08 = v2->__r_.__value_.__r.__words[2];
    xmmword_2557909F8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557909F8, &dword_22314D000);
  __cxa_guard_release(&qword_255790A10);
  return &xmmword_2557909F8;
}

void sub_2240C1F18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790A10);
  _Unwind_Resume(a1);
}

std::string *sub_2240C1F30()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790A30);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790A30))
    return &stru_255790A18;
  sub_2240C2020((uint64_t)__p);
  sub_2240333EC((char *)__p, &stru_255790A18);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790A18, &dword_22314D000);
  __cxa_guard_release(&qword_255790A30);
  return &stru_255790A18;
}

void sub_2240C1FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790A30);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790A30);
  _Unwind_Resume(a1);
}

void sub_2240C2020(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790A50);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790A50))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::LinesSample<3>]", qword_255790A38);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790A38, &dword_22314D000);
    __cxa_guard_release(&qword_255790A50);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790A70);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790A70))
  {
    v5 = sub_2231A38CC(qword_255790A38, "<", 0);
    sub_2231A37C8(qword_255790A38, 0, v5, qword_255790A58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790A58, &dword_22314D000);
    __cxa_guard_release(&qword_255790A70);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790A90);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790A90))
  {
    sub_224573040((uint64_t)qword_255790A58, (uint64_t)&xmmword_255790A78);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790A78, &dword_22314D000);
    __cxa_guard_release(&qword_255790A90);
  }
  if (byte_255790A8F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790A78, *((unint64_t *)&xmmword_255790A78 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790A78;
    *(_QWORD *)(a1 + 16) = unk_255790A88;
  }
}

void sub_2240C21BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790A90);
  _Unwind_Resume(a1);
}

void sub_2240C21D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790A70);
  _Unwind_Resume(a1);
}

void sub_2240C21EC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790A50);
  _Unwind_Resume(a1);
}

void sub_2240C2204(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240C22AC(a2);
      break;
    case 1:
      sub_2240C2474(a2);
      break;
    case 2:
      sub_2240C2654(a2);
      break;
    case 3:
      sub_2240C2838(a2);
      break;
    case 5:
      sub_2240C2A1C(a2);
      break;
    case 6:
      sub_2240C2BE4(a2);
      break;
    case 7:
      sub_2240C2DC4(a2);
      break;
    case 8:
      sub_2240C2FA8(a2);
      break;
    case 11:
      sub_2240C318C(a2);
      break;
    case 12:
      sub_2240C3370(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240C22AC(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450EEF0(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C2414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2474(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C25F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2654(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C27D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2838(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C29BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2A1C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450ED50(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C2B84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2BE4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C2D64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2DC4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C2F48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C2FA8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C312C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C318C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C3310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240C3370(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240C34F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_2240C3554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  _BOOL8 v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_224123BEC((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_224152E28((int *)(a1 + 200), (int *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_2240C373C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240C3758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240C376C(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240C3AE4(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240C3D84(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240C3F78(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240C4218(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240C43F0(&v9, (uint64_t)a1);
          else
            sub_2240C38D0(&v8, a1);
        }
      }
    }
  }
}

void sub_2240C38D0(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    LODWORD(v12) = 4;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v9 = v12;
    if (v8 < 1)
    {
      sub_223BACE24((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v8 == 2)
    {
      LODWORD(v12) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BACE24((uint64_t)a2, v4, v9);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    LODWORD(v12) = 5;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v11 = v12;
    if (v10 < 1)
    {
      sub_223BAC79C((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v10 == 2)
    {
      LODWORD(v12) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BAC79C((uint64_t)a2, v4, v11);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    LODWORD(v12) = 6;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v7 = v12;
    if (v6 < 1)
    {
      sub_223BABEC8((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v6 == 2)
    {
      LODWORD(v12) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BABEC8((uint64_t)a2, v4, v7);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
LABEL_17:
  v12 = *((_QWORD *)a2 + 1);
  sub_224075CC0((int *)&v12, (uint64_t)a2, v3 + 200);
}

void sub_2240C3AE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224071514((uint64_t)&v16, a2, v3 + 200);
}

void sub_2240C3D84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v15 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v15, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v15, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v15 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v15, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v15, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v15 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v15, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v15, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v15 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v15, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v15, v14 + 8);
  }
  sub_2240725F8((uint64_t)&v15, a2, (int *)(v3 + 200));
}

void sub_2240C3F78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224073C24((uint64_t)&v16, a2, v3 + 200);
}

_QWORD *sub_2240C4218(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v18 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v18, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v16 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v16, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v19, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v17 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v17, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v20 = v7;
  sub_2231813E8(v11, (uint64_t)&v20, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v21 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v21, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  return sub_224074A10((uint64_t)&v15, a2, v3 + 200);
}

char *sub_2240C43F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  return sub_224075740((uint64_t)&__src, (_QWORD *)a2, (int *)(v3 + 200));
}

void sub_2240C4570(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240C4BFC(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240C50A8(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240C5518(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240C59C4(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240C6008(&v9, a1);
          else
            sub_2240C46D4(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_2240C46D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  void (**v28)(int);
  char v29;
  uint64_t v30[27];
  unsigned int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v30);
    sub_223B87C9C((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v30);
  sub_223B87C9C((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  v31 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_223BD7864((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_223BD7174((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v30[0] = a2[1];
  v27 = v30[0];
  v31 = 2;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v31);
  v28 = (void (**)(int))(v3 + 200);
  if (v27 < 1)
  {
    if (v31 < 2)
      sub_224085E98((uint64_t)&v31, (uint64_t)a2, (uint64_t)v28);
    else
      sub_224086094((uint64_t)a2, (void (**)(int))(v3 + 200));
  }
  else
  {
    sub_2240859BC((int *)v30, (uint64_t)a2, v28, v31);
  }
}

void sub_2240C4BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240C4BFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_224076B40(a2, v3 + 200);
}

void sub_2240C5060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2240C50A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v26, a2, v4);
  return sub_22407A008(a2, (int *)(v3 + 200));
}

void sub_2240C54D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240C5518(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_22407C850(a2, v3 + 200);
}

void sub_2240C597C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240C59C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  void *__p;
  uint64_t v34;
  char v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v36, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v36);
        if (!v51)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v8 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v8;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v42;
    v10 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v11 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v11;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v12 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v12;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v49;
LABEL_45:
    *((_QWORD *)&v49 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v36, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v17 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v17;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v42;
    v19 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v20 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v20;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v21 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v21;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v36);
  if (v51)
  {
LABEL_38:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v23 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v29 = 0;
          if (v35 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v29 = 1;
      if (v35 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  v26 = __p;
  if (__p >= 2)
    v27 = 2;
  else
    v27 = __p;
  if (v27 < 2)
    sub_22407FB5C((uint64_t)&__p, a2, v3 + 200);
  else
    sub_22407FD58(a2, (int *)(v3 + 200));
  if (v26 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v31 = 0;
          if (v35 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v31 = 1;
      if (v35 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
}

void sub_2240C5FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240C6008(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_224082424((uint64_t)v25, a2, (int *)(v3 + 200));
}

void sub_2240C6434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240C647C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_224123BEC((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_2244E51E8((uint64_t *)(a1 + 200), (uint64_t *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_2240C6664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240C6680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240C6694(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240C6AA0(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240C6D40(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240C6FC0(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240C7260(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240C7478(&v9, (uint64_t)a1);
          else
            sub_2240C67F8(&v8, a1);
        }
      }
    }
  }
}

void sub_2240C67F8(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (uint64_t *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_22408BFF4(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_22408BFF4(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240C6AA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22408B648((uint64_t)&v16, a2, v3 + 200);
}

void sub_2240C6D40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_22408B938(a2, (uint64_t *)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240C6FC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22408BA7C((uint64_t)&v16, a2, v3 + 200);
}

_QWORD *sub_2240C7260(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_22408BD6C(a2, (uint64_t *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240C7478(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_22408BEB0(a2, (uint64_t *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240C7630(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240C7CBC(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240C8168(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240C85D8(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240C8A84(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240C90C8(&v9, a1);
          else
            sub_2240C7794(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_2240C7794(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t *v28;
  char v29;
  uint64_t v30[27];
  unsigned int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v30);
    sub_223B87C9C((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v30);
  sub_223B87C9C((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  v31 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_223BD7864((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_223BD7174((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v30[0] = a2[1];
  v27 = v30[0];
  v31 = 2;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v31);
  v28 = (uint64_t *)(v3 + 200);
  if (v27 < 1)
  {
    if (v31 < 2)
      sub_22408E35C((uint64_t)&v31, a2, v28);
    else
      sub_22408E244(a2, v3 + 200);
  }
  else
  {
    sub_22408DD68((int *)v30, a2, v28, v31);
  }
}

void sub_2240C7C74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240C7CBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_22408C138(a2, (uint64_t *)(v3 + 200));
}

void sub_2240C8120(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2240C8168(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v26, a2, v4);
  return sub_22408CAB0(a2, (uint64_t *)(v3 + 200));
}

void sub_2240C8590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240C85D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_22408CEBC(a2, (uint64_t *)(v3 + 200));
}

void sub_2240C8A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240C8A84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  void *__p;
  uint64_t v34;
  char v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v36, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v36);
        if (!v51)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v8 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v8;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v42;
    v10 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v11 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v11;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v12 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v12;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v49;
LABEL_45:
    *((_QWORD *)&v49 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v36, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v17 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v17;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v42;
    v19 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v20 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v20;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v21 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v21;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v36);
  if (v51)
  {
LABEL_38:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v23 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v29 = 0;
          if (v35 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v29 = 1;
      if (v35 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  v26 = __p;
  if (__p >= 2)
    v27 = 2;
  else
    v27 = __p;
  if (v27 < 2)
    sub_22408D724((uint64_t)&__p, a2, (uint64_t *)(v3 + 200));
  else
    sub_22408D60C(a2, v3 + 200);
  if (v26 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v31 = 0;
          if (v35 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v31 = 1;
      if (v35 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
}

void sub_2240C9080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240C90C8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_22408D940((uint64_t)v25, a2, (uint64_t *)(v3 + 200));
}

void sub_2240C94F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_2240C953C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v19;
  _QWORD v21[5];
  uint64_t *v22;
  _QWORD v23[5];
  _QWORD *v24;
  char v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v37[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v32);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v32);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v32);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v26);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v26);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v26);
  }
  v23[0] = v32;
  v23[1] = &v33;
  v23[2] = &v34;
  v23[3] = &v35;
  v23[4] = &v36;
  v24 = v37;
  v21[0] = v26;
  v21[1] = &v27;
  v21[2] = &v28;
  v21[3] = &v29;
  v21[4] = &v30;
  v22 = &v31;
  if (!sub_224123BEC((uint64_t)&v25, v23, v21))
    goto LABEL_35;
  if (!*((_BYTE *)v24 + 24) || !*((_BYTE *)v22 + 24))
  {
    if ((*((_BYTE *)v24 + 24) != 0) == (*((_BYTE *)v22 + 24) != 0))
      goto LABEL_22;
LABEL_35:
    v19 = 0;
    goto LABEL_36;
  }
  v8 = (unsigned __int8 *)*v24;
  v9 = (unsigned __int8 *)v24[1];
  v10 = (unsigned __int8 *)*v22;
  if (&v9[-*v24] != (unsigned __int8 *)(v22[1] - *v22))
    goto LABEL_35;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_35;
  }
LABEL_22:
  if (*(_QWORD *)(a1 + 200) != *(_QWORD *)(a2 + 200))
    goto LABEL_35;
  v11 = *(_QWORD *)(a1 + 224);
  if (v11 != *(_QWORD *)(a2 + 224))
    goto LABEL_35;
  v12 = *(unsigned __int8 **)(a1 + 232);
  v13 = *(unsigned __int8 **)(a2 + 232);
  v14 = &v12[v11];
  v15 = &v13[v11];
  if (v11)
  {
    v16 = v11 - 1;
    while (1)
    {
      v17 = v16;
      if (*v12 != *v13)
        goto LABEL_35;
      ++v12;
      ++v13;
      --v16;
      if (!v17)
      {
        v13 = v15;
        v12 = v14;
        break;
      }
    }
  }
  v19 = v12 == v14 && v13 == v15;
LABEL_36:
  sub_2231AD66C((uint64_t)v26);
  sub_2231AD66C((uint64_t)v32);
  return v19;
}

void sub_2240C9780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240C97A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240C97B4(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240C9BC0(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240C9E60(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240CA0E0(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240CA380(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240CA598(&v9, (uint64_t)a1);
          else
            sub_2240C9918(&v8, a1);
        }
      }
    }
  }
}

void sub_2240C9918(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_2240909A0((uint64_t)a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240909A0((uint64_t)a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240C9BC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22408FF30((uint64_t)&v16, a2, v3 + 200);
}

void sub_2240C9E60(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_224090234(a2, v3 + 200);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240CA0E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224090418((uint64_t)&v16, a2, v3 + 200);
}

_QWORD *sub_2240CA380(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_22409071C(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240CA598(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_224090864(a2, (uint64_t *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240CA750(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240CADDC(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240CB288(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240CB6F8(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240CBBA4(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240CC1E8(&v9, a1);
          else
            sub_2240CA8B4(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_2240CA8B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30[27];
  unsigned int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v30);
    sub_223B87C9C((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v30);
  sub_223B87C9C((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  v31 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_223BD7864((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_223BD7174((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v30[0] = a2[1];
  v27 = v30[0];
  v31 = 2;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v31);
  v28 = v3 + 200;
  if (v27 < 1)
  {
    if (v31 < 2)
      sub_2240928D8((uint64_t)&v31, (uint64_t)a2, v28);
    else
      sub_224092A44((uint64_t)a2, v3 + 200);
  }
  else
  {
    sub_2240925B0((int *)v30, (uint64_t)a2, v28, v31);
  }
}

void sub_2240CAD94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240CADDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_224090AD0(a2, v3 + 200);
}

void sub_2240CB240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2240CB288(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v26, a2, v4);
  return sub_224091070(a2, v3 + 200);
}

void sub_2240CB6B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240CB6F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_2240915B4(a2, v3 + 200);
}

void sub_2240CBB5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240CBBA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  void *__p;
  uint64_t v34;
  char v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v36, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v36);
        if (!v51)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v8 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v8;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v42;
    v10 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v11 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v11;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v12 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v12;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v49;
LABEL_45:
    *((_QWORD *)&v49 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v36, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v17 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v17;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v42;
    v19 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v20 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v20;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v21 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v21;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v36);
  if (v51)
  {
LABEL_38:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v23 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v29 = 0;
          if (v35 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v29 = 1;
      if (v35 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  v26 = __p;
  if (__p >= 2)
    v27 = 2;
  else
    v27 = __p;
  if (v27 < 2)
    sub_224091B54((uint64_t)&__p, a2, v3 + 200);
  else
    sub_224091CC0(a2, v3 + 200);
  if (v26 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v31 = 0;
          if (v35 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v31 = 1;
      if (v35 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
}

void sub_2240CC1A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240CC1E8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_224091F18((uint64_t)v25, a2, v3 + 200);
}

void sub_2240CC614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240CC65C(uint64_t result, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int128 *v12;
  unsigned __int128 v13;

  *(_QWORD *)result = off_24EC27D48;
  v2 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(result + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(result + 8) = v2;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(result + 32) = *(_DWORD *)(a2 + 32);
  v3 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(result + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(result + 40) = v3;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  v4 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(result + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(result + 72) = v4;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  v5 = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(result + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(result + 96) = v5;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  v6 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(result + 144) = 0;
  *(_OWORD *)(result + 128) = v6;
  *(_BYTE *)(result + 168) = 0;
  if (*(_BYTE *)(a2 + 168))
  {
    v7 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(result + 160) = *(_QWORD *)(a2 + 160);
    *(_OWORD *)(result + 144) = v7;
    *(_QWORD *)(a2 + 152) = 0;
    *(_QWORD *)(a2 + 160) = 0;
    *(_QWORD *)(a2 + 144) = 0;
    *(_BYTE *)(result + 168) = 1;
  }
  *(_BYTE *)(result + 176) = 0;
  *(_BYTE *)(result + 200) = 0;
  if (*(_BYTE *)(a2 + 200))
  {
    v8 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(result + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(result + 176) = v8;
    *(_QWORD *)(a2 + 184) = 0;
    *(_QWORD *)(a2 + 192) = 0;
    *(_QWORD *)(a2 + 176) = 0;
    *(_BYTE *)(result + 200) = 1;
  }
  v9 = *(_OWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(result + 240) = 0;
  *(_QWORD *)(result + 224) = v10;
  *(_OWORD *)(result + 208) = v9;
  *(_BYTE *)(result + 288) = 0;
  if (*(_BYTE *)(a2 + 288))
  {
    v11 = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(result + 256) = *(_QWORD *)(a2 + 256);
    *(_OWORD *)(result + 240) = v11;
    *(_QWORD *)(a2 + 248) = 0;
    *(_QWORD *)(a2 + 256) = 0;
    *(_QWORD *)(a2 + 240) = 0;
    v12 = (unsigned __int128 *)(a2 + 272);
    do
      v13 = __ldaxp(v12);
    while (__stlxp(v13, v12));
    *(_OWORD *)(result + 272) = v13;
    *(_BYTE *)(result + 288) = 1;
  }
  *(_BYTE *)(result + 304) = 0;
  *(_BYTE *)(result + 328) = 0;
  if (*(_BYTE *)(a2 + 328))
  {
    *(_QWORD *)(result + 304) = 0;
    *(_QWORD *)(result + 312) = 0;
    *(_QWORD *)(result + 320) = 0;
    *(_OWORD *)(result + 304) = *(_OWORD *)(a2 + 304);
    *(_QWORD *)(result + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a2 + 304) = 0;
    *(_QWORD *)(a2 + 312) = 0;
    *(_QWORD *)(a2 + 320) = 0;
    *(_BYTE *)(result + 328) = 1;
  }
  *(_QWORD *)result = off_24EC27CC8;
  return result;
}

uint64_t sub_2240CC7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _BYTE *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  unsigned __int8 **v18;
  _BYTE *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  unsigned __int8 **v24;
  char v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v37[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v32);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v32);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v32);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v26);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v26);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v26);
  }
  v19 = v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = &v36;
  v24 = (unsigned __int8 **)v37;
  v13 = v26;
  v14 = &v27;
  v15 = &v28;
  v16 = &v29;
  v17 = &v30;
  v18 = (unsigned __int8 **)&v31;
  if (sub_224123BEC((uint64_t)&v25, &v19, &v13))
  {
    if (*((_BYTE *)v24 + 24) && *((_BYTE *)v18 + 24))
    {
      v8 = *v24;
      v9 = v24[1];
      v10 = *v18;
      if (v9 - *v24 == v18[1] - *v18)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v19 = (_BYTE *)(a1 + 200);
        v20 = (uint64_t *)(a1 + 224);
        v21 = (uint64_t *)(a1 + 232);
        v22 = (uint64_t *)(a1 + 256);
        v23 = (uint64_t *)(a1 + 264);
        v24 = (unsigned __int8 **)(a1 + 288);
        v13 = (_BYTE *)(a2 + 200);
        v14 = (uint64_t *)(a2 + 224);
        v15 = (uint64_t *)(a2 + 232);
        v16 = (uint64_t *)(a2 + 256);
        v17 = (uint64_t *)(a2 + 264);
        v18 = (unsigned __int8 **)(a2 + 288);
        v11 = sub_2240CCA50((uint64_t)&v25, (uint64_t)&v19, (uint64_t)&v13);
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v24 + 24) != 0) == (*((_BYTE *)v18 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v26);
  sub_2231AD66C((uint64_t)v32);
  return v11;
}

void sub_2240CCA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240CCA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

uint64_t sub_2240CCA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v5;
  unsigned __int8 **v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  unsigned __int8 *v11;
  uint64_t result;
  unsigned __int8 *v13;
  unsigned __int8 **v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  int v18;
  unsigned __int8 *v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  BOOL v26;
  char v27;

  if ((sub_2240CCBD8((uint64_t)&v27, a2, (unsigned __int8 **)a3) & 1) == 0)
    return 0;
  if (**(_DWORD **)(a2 + 24) != **(_DWORD **)(a3 + 24))
    return 0;
  v5 = *(unsigned __int8 **)(a2 + 32);
  v6 = *(unsigned __int8 ***)(a3 + 32);
  v7 = v5[23];
  if ((v7 & 0x80u) == 0)
    v8 = (unsigned __int8 *)v5[23];
  else
    v8 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
  v9 = (unsigned __int8 *)*((unsigned __int8 *)v6 + 23);
  v10 = (char)v9;
  if ((char)v9 < 0)
    v9 = v6[1];
  if (v8 != v9)
    return 0;
  if (v10 >= 0)
    v11 = *(unsigned __int8 **)(a3 + 32);
  else
    v11 = *v6;
  if ((v7 & 0x80) != 0)
  {
    if (!memcmp(*(const void **)v5, v11, *((_QWORD *)v5 + 1)))
      goto LABEL_20;
    return 0;
  }
  if (v5[23])
  {
    while (*v5 == *v11)
    {
      ++v5;
      ++v11;
      if (!--v7)
        goto LABEL_20;
    }
    return 0;
  }
LABEL_20:
  v13 = *(unsigned __int8 **)(a2 + 40);
  v14 = *(unsigned __int8 ***)(a3 + 40);
  v15 = v13[23];
  if ((v15 & 0x80u) == 0)
    v16 = (unsigned __int8 *)v13[23];
  else
    v16 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
  v17 = (unsigned __int8 *)*((unsigned __int8 *)v14 + 23);
  v18 = (char)v17;
  if ((char)v17 < 0)
    v17 = v14[1];
  if (v16 != v17)
    return 0;
  if (v18 >= 0)
    v19 = *(unsigned __int8 **)(a3 + 40);
  else
    v19 = *v14;
  if ((v15 & 0x80) != 0)
    return memcmp(*(const void **)v13, v19, *((_QWORD *)v13 + 1)) == 0;
  if (!v13[23])
    return 1;
  v20 = v15 - 1;
  do
  {
    v22 = *v13++;
    v21 = v22;
    v24 = *v19++;
    v23 = v24;
    v26 = v20-- != 0;
    result = v21 == v23;
  }
  while (v21 == v23 && v26);
  return result;
}

uint64_t sub_2240CCBD8(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  const void **v4;
  unsigned __int8 *v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int8 *v12;
  uint64_t result;
  unsigned __int8 *v14;
  unsigned __int8 **v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  int v19;
  unsigned __int8 *v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  BOOL v27;

  v4 = *(const void ***)a2;
  v5 = *a3;
  v6 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v6 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
  else
    v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  v9 = v5[23];
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *((_QWORD *)v5 + 1);
  if (v8 != v9)
    return 0;
  if (v10 >= 0)
    v12 = v5;
  else
    v12 = *(unsigned __int8 **)v5;
  if ((v6 & 0x80) != 0)
  {
    if (memcmp(*v4, v12, v7))
      return 0;
  }
  else if ((_DWORD)v6)
  {
    while (*(unsigned __int8 *)v4 == *v12)
    {
      v4 = (const void **)((char *)v4 + 1);
      ++v12;
      if (!--v6)
        goto LABEL_18;
    }
    return 0;
  }
LABEL_18:
  if (**(unsigned __int8 **)(a2 + 8) != *a3[1])
    return 0;
  v14 = *(unsigned __int8 **)(a2 + 16);
  v15 = (unsigned __int8 **)a3[2];
  v16 = v14[23];
  if ((v16 & 0x80u) == 0)
    v17 = (unsigned __int8 *)v14[23];
  else
    v17 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  v18 = (unsigned __int8 *)*((unsigned __int8 *)v15 + 23);
  v19 = (char)v18;
  if ((char)v18 < 0)
    v18 = v15[1];
  if (v17 != v18)
    return 0;
  if (v19 >= 0)
    v20 = a3[2];
  else
    v20 = *v15;
  if ((v16 & 0x80) != 0)
    return memcmp(*(const void **)v14, v20, *((_QWORD *)v14 + 1)) == 0;
  if (!v14[23])
    return 1;
  v21 = v16 - 1;
  do
  {
    v23 = *v14++;
    v22 = v23;
    v25 = *v20++;
    v24 = v25;
    v27 = v21-- != 0;
    result = v22 == v24;
  }
  while (v22 == v24 && v27);
  return result;
}

void sub_2240CCD40(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240CD0D0(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240CD6E4(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240CDAF0(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240CDF80(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240CE27C(&v9, (uint64_t)a1);
          else
            sub_2240CCEA4(&v8, a1);
        }
      }
    }
  }
}

void sub_2240CCEA4(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v12 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v9 = v12;
    if (v8 < 1)
    {
      sub_223BACE24((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v8 == 2)
    {
      v12 = 3;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BACE24((uint64_t)a2, v4, v9);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v12 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v11 = v12;
    if (v10 < 1)
    {
      sub_223BAC79C((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v10 == 2)
    {
      v12 = 3;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BAC79C((uint64_t)a2, v4, v11);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v12 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v7 = v12;
    if (v6 < 1)
    {
      sub_223BABEC8((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v6 == 2)
    {
      v12 = 3;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BABEC8((uint64_t)a2, v4, v7);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
LABEL_17:
  v12 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
  sub_2240CE774((uint64_t)a2, (__int128 *)(v3 + 200));
}

void sub_2240CD0D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240CD3D0(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240CD3D0(uint64_t a1, __int128 *a2)
{
  BOOL v3;
  int *v4;
  int v5;
  int v6;
  BOOL v7;
  unsigned __int8 *v8;
  int v9;
  void **v10;
  void *v11[2];
  char v12;
  unsigned __int8 v13;
  void *v14;
  char v15;
  int v16;
  void *v17;
  char v18;
  void *__p;
  char v20;
  char v21;
  unint64_t v22;

  sub_2240CD560(v11, a2);
  sub_224542510(a1, (uint64_t)v11);
  if (*(_BYTE *)(a1 + 88))
    v3 = *(_QWORD *)(a1 + 80) == 7;
  else
    v3 = 0;
  if (!v3
    || ((v4 = *(int **)(a1 + 72), v5 = *v4, v6 = *(int *)((char *)v4 + 3), v5 == *(_DWORD *)"version")
      ? (v7 = v6 == *(_DWORD *)"sion")
      : (v7 = 0),
        !v7))
  {
    v21 = 6;
    v22 = v13;
    v8 = (unsigned __int8 *)sub_22453FEA0(a1);
    v9 = *v8;
    *v8 = v21;
    v21 = v9;
    v10 = (void **)*((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v22;
    v22 = (unint64_t)v10;
    sub_22345337C((void ***)&v22, v9);
  }
  sub_224542510(a1, (uint64_t)&v14);
  sub_224542048(a1, &v16);
  sub_224542510(a1, (uint64_t)&v17);
  sub_224542510(a1, (uint64_t)&__p);
  if (v20 < 0)
  {
    operator delete(__p);
    if ((v18 & 0x80000000) == 0)
    {
LABEL_13:
      if ((v15 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((v18 & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v17);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v12 & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(v11[0]);
    return;
  }
LABEL_18:
  operator delete(v14);
  if (v12 < 0)
    goto LABEL_19;
}

void sub_2240CD52C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void ***v9;
  uint64_t v10;

  sub_22345337C(v9, *(unsigned __int8 *)(v10 - 32));
  sub_223293AA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240CD54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223293AA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_BYTE *sub_2240CD560(_BYTE *__dst, __int128 *a2)
{
  __int128 v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;

  if (*((char *)a2 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    __dst[24] = *((_BYTE *)a2 + 24);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    __dst[24] = *((_BYTE *)a2 + 24);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = a2[2];
      *((_QWORD *)v5 + 2) = *((_QWORD *)a2 + 6);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_223197FA4(v5, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
LABEL_6:
  *((_DWORD *)__dst + 14) = *((_DWORD *)a2 + 14);
  if (*((char *)a2 + 87) < 0)
  {
    sub_223197FA4(__dst + 64, *((void **)a2 + 8), *((_QWORD *)a2 + 9));
  }
  else
  {
    v7 = a2[4];
    *((_QWORD *)__dst + 10) = *((_QWORD *)a2 + 10);
    *((_OWORD *)__dst + 4) = v7;
  }
  v8 = __dst + 88;
  if (*((char *)a2 + 111) < 0)
  {
    sub_223197FA4(v8, *((void **)a2 + 11), *((_QWORD *)a2 + 12));
  }
  else
  {
    v9 = *(__int128 *)((char *)a2 + 88);
    *((_QWORD *)__dst + 13) = *((_QWORD *)a2 + 13);
    *(_OWORD *)v8 = v9;
  }
  return __dst;
}

void sub_2240CD670(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 87) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v1 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 23) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v1 + 55) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_2240CD6E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v15 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v15, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v15, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v15 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v15, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v15, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v15 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v15, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v15, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v15 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v15, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v15, v14 + 8);
  }
  sub_2240CD8D4(a2, (__int128 *)(v3 + 200));
}

void sub_2240CD8D4(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9[2];
  char v10;
  char v11;
  void *v12[2];
  char v13;
  unsigned int v14;
  void *v15[2];
  char v16;
  void *__p[2];
  char v18;
  uint64_t *v19;
  char v20;

  sub_2240CD560(v9, a2);
  v3 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v3 + 40))
  {
    v19 = (uint64_t *)(v3 + 16);
    sub_22455B8BC((uint64_t)&v20, &v19, (const void **)v9);
  }
  else
  {
    sub_22455BCF4((uint64_t)&v19, v3 + 8, (uint64_t)v9);
  }
  v4 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v4 + 40))
  {
    v19 = (uint64_t *)(v4 + 16);
    sub_224559C04(&v19, v11);
  }
  else
  {
    if (v11 < 0)
    {
      LOBYTE(v19) = -52;
      BYTE1(v19) = v11;
    }
    else
    {
      LOBYTE(v19) = v11;
    }
    std::ostream::write();
  }
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    v19 = (uint64_t *)(v5 + 16);
    sub_22455B8BC((uint64_t)&v20, &v19, (const void **)v12);
  }
  else
  {
    sub_22455BCF4((uint64_t)&v19, v5 + 8, (uint64_t)v12);
  }
  v6 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v6 + 40))
  {
    v19 = (uint64_t *)(v6 + 16);
    sub_22455A7EC(&v19, v14);
  }
  else
  {
    sub_22455AA60((uint64_t)&v19, v6 + 8);
  }
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v7 + 40))
  {
    v19 = (uint64_t *)(v7 + 16);
    sub_22455B8BC((uint64_t)&v20, &v19, (const void **)v15);
  }
  else
  {
    sub_22455BCF4((uint64_t)&v19, v7 + 8, (uint64_t)v15);
  }
  v8 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v8 + 40))
  {
    v19 = (uint64_t *)(v8 + 16);
    sub_22455B8BC((uint64_t)&v20, &v19, (const void **)__p);
  }
  else
  {
    sub_22455BCF4((uint64_t)&v19, v8 + 8, (uint64_t)__p);
  }
  if (v18 < 0)
  {
    operator delete(__p[0]);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_24:
      if ((v13 & 0x80000000) == 0)
        goto LABEL_25;
      goto LABEL_29;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_24;
  }
  operator delete(v15[0]);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v10 & 0x80000000) == 0)
      return;
LABEL_30:
    operator delete(v9[0]);
    return;
  }
LABEL_29:
  operator delete(v12[0]);
  if (v10 < 0)
    goto LABEL_30;
}

void sub_2240CDADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223293AA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240CDAF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240CDDF0(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240CDDF0(uint64_t a1, __int128 *a2)
{
  BOOL v3;
  int *v4;
  int v5;
  int v6;
  BOOL v7;
  unsigned __int8 *v8;
  int v9;
  uint64_t v10;
  void *v11[2];
  char v12;
  unsigned __int8 v13;
  void *v14;
  char v15;
  int v16;
  void *v17;
  char v18;
  void *__p;
  char v20;
  char v21;
  uint64_t v22;

  sub_2240CD560(v11, a2);
  sub_2245409C8(a1, (uint64_t)v11);
  if (*(_BYTE *)(a1 + 88))
    v3 = *(_QWORD *)(a1 + 80) == 7;
  else
    v3 = 0;
  if (!v3
    || ((v4 = *(int **)(a1 + 72), v5 = *v4, v6 = *(int *)((char *)v4 + 3), v5 == *(_DWORD *)"version")
      ? (v7 = v6 == *(_DWORD *)"sion")
      : (v7 = 0),
        !v7))
  {
    v21 = 6;
    v22 = v13;
    v8 = (unsigned __int8 *)sub_22453F8B8(a1);
    v9 = *v8;
    *v8 = v21;
    v21 = v9;
    v10 = *((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v22;
    v22 = v10;
    sub_223454278(&v22, v9);
  }
  sub_2245409C8(a1, (uint64_t)&v14);
  sub_224540500(a1, &v16);
  sub_2245409C8(a1, (uint64_t)&v17);
  sub_2245409C8(a1, (uint64_t)&__p);
  if (v20 < 0)
  {
    operator delete(__p);
    if ((v18 & 0x80000000) == 0)
    {
LABEL_13:
      if ((v15 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((v18 & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v17);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v12 & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(v11[0]);
    return;
  }
LABEL_18:
  operator delete(v14);
  if (v12 < 0)
    goto LABEL_19;
}

void sub_2240CDF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;

  sub_223454278(v9, *(unsigned __int8 *)(v10 - 32));
  sub_223293AA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240CDF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223293AA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240CDF80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v16 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v16, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v14 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v14, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v17 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v17, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v15 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v15, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v18 = v7;
  sub_2231813E8(v11, (uint64_t)&v18, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v19 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v19, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240CE154(a2, (__int128 *)(v3 + 200));
}

void sub_2240CE154(uint64_t a1, __int128 *a2)
{
  _QWORD *v3;
  void *__dst[2];
  char v5;
  unsigned __int8 v6[8];
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *__p;
  char v12;
  char v13;

  sub_2240CD560(__dst, a2);
  sub_22454F620(a1, (uint64_t)__dst);
  sub_22454F564(a1, v6);
  sub_22454F620(a1, (uint64_t)&v7);
  if (*(_QWORD *)(a1 + 40))
  {
    v3 = *(_QWORD **)(a1 + 24);
    v13 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v3, (uint64_t)&v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_22454F620(a1, (uint64_t)&v9);
  sub_22454F620(a1, (uint64_t)&__p);
  if (v12 < 0)
  {
    operator delete(__p);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_5:
      if ((v8 & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_10;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v5 & 0x80000000) == 0)
      return;
LABEL_11:
    operator delete(__dst[0]);
    return;
  }
LABEL_10:
  operator delete(v7);
  if (v5 < 0)
    goto LABEL_11;
}

void sub_2240CE268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223293AA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240CE27C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int __src;
  uint64_t v11;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
  sub_2240CE3F8(a2, (__int128 *)(v3 + 200));
}

void sub_2240CE3F8(uint64_t a1, __int128 *a2)
{
  int64_t v3;
  int64_t v4;
  char *p_dst;
  int64_t v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *p_p;
  int64_t v14;
  void *__dst;
  int64_t v16;
  unsigned __int8 v17;
  char v18;
  char v19[7];
  void *v20;
  int64_t v21;
  unsigned __int8 v22;
  char v23[4];
  char v24[4];
  void *v25;
  int64_t v26;
  unsigned __int8 v27;
  void *__p;
  int64_t v29;
  unsigned __int8 v30;
  int64_t __src;
  uint64_t v32;

  sub_2240CD560(&__dst, a2);
  v3 = v17;
  if ((v17 & 0x80u) != 0)
    v3 = v16;
  __src = v3;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if ((char)v17 < 0)
  {
    p_dst = (char *)__dst;
    v4 = v16;
    if (!__dst && v16)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_42;
      }
      p_dst = 0;
    }
  }
  else
  {
    v4 = v17;
    p_dst = (char *)&__dst;
  }
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), p_dst, &p_dst[v4], v4);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), &v18, v19, 1);
  v6 = v22;
  if ((v22 & 0x80u) != 0)
    v6 = v21;
  __src = v6;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if ((char)v22 < 0)
  {
    v7 = (char *)v20;
    v8 = v21;
    if (!v20 && v21)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_42;
      }
      v7 = 0;
    }
  }
  else
  {
    v7 = (char *)&v20;
    v8 = v22;
  }
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), v7, &v7[v8], v8);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), v23, v24, 4);
  v9 = v27;
  if ((v27 & 0x80u) != 0)
    v9 = v26;
  __src = v9;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if ((char)v27 < 0)
  {
    v10 = (char *)v25;
    v11 = v26;
    if (!v25 && v26)
    {
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_42;
      }
      v10 = 0;
    }
  }
  else
  {
    v10 = (char *)&v25;
    v11 = v27;
  }
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), v10, &v10[v11], v11);
  v12 = v30;
  if ((v30 & 0x80u) != 0)
    v12 = v29;
  __src = v12;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if (((char)v30 & 0x80000000) == 0)
  {
    p_p = (char *)&__p;
    v14 = v30;
    goto LABEL_33;
  }
  p_p = (char *)__p;
  v14 = v29;
  if (!__p && v29)
  {
    if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
    {
      p_p = 0;
      goto LABEL_33;
    }
LABEL_42:
    abort();
  }
LABEL_33:
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), p_p, &p_p[v14], v14);
  if ((char)v30 < 0)
  {
    operator delete(__p);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_35:
      if (((char)v22 & 0x80000000) == 0)
        goto LABEL_36;
      goto LABEL_40;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v25);
  if (((char)v22 & 0x80000000) == 0)
  {
LABEL_36:
    if (((char)v17 & 0x80000000) == 0)
      return;
LABEL_41:
    operator delete(__dst);
    return;
  }
LABEL_40:
  operator delete(v20);
  if ((char)v17 < 0)
    goto LABEL_41;
}

void sub_2240CE760(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223293AA0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240CE774(uint64_t a1, __int128 *a2)
{
  void *v3[2];
  char v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  void *__p;
  char v12;

  sub_2240CD560(v3, a2);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, v3);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 80))(a1, &v5);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &v6);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 104))(a1, &v8);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &v9);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &__p);
  if (v12 < 0)
  {
    operator delete(__p);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v9);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000000) == 0)
      return;
LABEL_9:
    operator delete(v3[0]);
    return;
  }
LABEL_8:
  operator delete(v6);
  if (v4 < 0)
    goto LABEL_9;
}

void sub_2240CE88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223293AA0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_2240CE8A0(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  double result;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a2;
  v10 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
    return sub_2240CEF58(&v10, (uint64_t)v4);
  v10 = a2;
  v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
  if (v6)
  {
    sub_2240CF684(&v10, v6);
  }
  else
  {
    v10 = a2;
    v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
    if (v7)
    {
      return sub_2240CFB44(&v10, (uint64_t)v7);
    }
    else
    {
      v10 = a2;
      v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
      if (v8)
      {
        return sub_2240D0270(&v10, (uint64_t)v8);
      }
      else
      {
        v10 = a2;
        if (*a1 == &off_24EC77900)
          return sub_2240D0994(&v10, a1);
        else
          sub_2240CEA04(&v9, a1);
      }
    }
  }
  return result;
}

uint64_t sub_2240CEA04(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v27;
  uint64_t v28[27];
  unsigned int v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)&v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)&v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v28[0] = a2[1];
  v25 = v28[0];
  v29 = 6;
  (*(void (**)(_QWORD *, unsigned int *))(v24 + 104))(a2, &v29);
  if (v25 < 1)
  {
    if (v29 < 3)
      sub_223BD7864((uint64_t)&v29, (uint64_t)a2, v4, v29);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v29);
  }
  else
  {
    sub_223BD7174((int *)v28, (uint64_t)a2, v4, v29);
  }
  LODWORD(v28[0]) = 1;
  (*(void (**)(_QWORD *, uint64_t *))(*a2 + 104))(a2, v28);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 200);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 80))(a2, v3 + 224);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 232);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 104))(a2, v3 + 256);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 264);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 288);
}

void sub_2240CEF10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240CEF58(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v27[0] = (uint64_t)"value";
  v27[1] = 5;
  v27[2] = v3 + 200;
  return sub_2240CF3FC(a2, (uint64_t)v27);
}

void sub_2240CF3B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240CF3FC(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  int v5;
  char *v6;
  void **v7;
  __int128 v8;
  char *v9;
  void **v10;
  void **v11;
  char *v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *exception;
  __int128 v21;
  uint64_t v22;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(_QWORD *)(a2 + 16);
  sub_224544628(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_22451CAD4(v6, &v21);
  if (DWORD1(v21))
    goto LABEL_17;
  v7 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451CFD4(v7, (uint64_t)&v21);
  if (*(char *)(v4 + 23) < 0)
    operator delete(*(void **)v4);
  v8 = v21;
  *(_QWORD *)(v4 + 16) = v22;
  *(_OWORD *)v4 = v8;
  v9 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_22451CAD4(v9, &v21);
  if ((unint64_t)v21 >= 0x100)
    goto LABEL_17;
  *(_BYTE *)(v4 + 24) = v21;
  v10 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451CFD4(v10, (uint64_t)&v21);
  v11 = (void **)(v4 + 32);
  if (*(char *)(v4 + 55) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = v21;
  *(_QWORD *)(v4 + 48) = v22;
  v12 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_22451CAD4(v12, &v21);
  if (DWORD1(v21))
  {
LABEL_17:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  *(_DWORD *)(v4 + 56) = v21;
  v13 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451CFD4(v13, (uint64_t)&v21);
  v14 = (void **)(v4 + 64);
  if (*(char *)(v4 + 87) < 0)
    operator delete(*v14);
  *(_OWORD *)v14 = v21;
  *(_QWORD *)(v4 + 80) = v22;
  v15 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451CFD4(v15, (uint64_t)&v21);
  v16 = (void **)(v4 + 88);
  if (*(char *)(v4 + 111) < 0)
    operator delete(*v16);
  result = *(double *)&v21;
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v4 + 104) = v22;
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(a1 + 48) = v18 - 8;
  *(_QWORD *)(a1 + 72) = v19 - 8;
  return result;
}

void sub_2240CF658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_2240CF684(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v27, a2, v4);
  LODWORD(v27[0]) = 1;
  v25 = a2[6];
  v24 = a2 + 6;
  sub_224554038(v25, v27);
  sub_22455481C(*v24, (void **)(v3 + 200));
  sub_224553CF0(*v24, (_BYTE *)(v3 + 224));
  sub_22455481C(*v24, (void **)(v3 + 232));
  sub_224554038(*v24, (_DWORD *)(v3 + 256));
  sub_22455481C(*v24, (void **)(v3 + 264));
  sub_22455481C(*v24, (void **)(v3 + 288));
}

void sub_2240CFAFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240CFB44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v27[0] = (uint64_t)"value";
  v27[1] = 5;
  v27[2] = v3 + 200;
  return sub_2240CFFE8(a2, (uint64_t)v27);
}

void sub_2240CFFA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240CFFE8(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  int v5;
  char *v6;
  void **v7;
  __int128 v8;
  char *v9;
  void **v10;
  void **v11;
  char *v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *exception;
  __int128 v21;
  uint64_t v22;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(_QWORD *)(a2 + 16);
  sub_224544138(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_22451C444(v6, &v21);
  if (DWORD1(v21))
    goto LABEL_17;
  v7 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451C83C(v7, (uint64_t)&v21);
  if (*(char *)(v4 + 23) < 0)
    operator delete(*(void **)v4);
  v8 = v21;
  *(_QWORD *)(v4 + 16) = v22;
  *(_OWORD *)v4 = v8;
  v9 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_22451C444(v9, &v21);
  if ((unint64_t)v21 >= 0x100)
    goto LABEL_17;
  *(_BYTE *)(v4 + 24) = v21;
  v10 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451C83C(v10, (uint64_t)&v21);
  v11 = (void **)(v4 + 32);
  if (*(char *)(v4 + 55) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = v21;
  *(_QWORD *)(v4 + 48) = v22;
  v12 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_22451C444(v12, &v21);
  if (DWORD1(v21))
  {
LABEL_17:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  *(_DWORD *)(v4 + 56) = v21;
  v13 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451C83C(v13, (uint64_t)&v21);
  v14 = (void **)(v4 + 64);
  if (*(char *)(v4 + 87) < 0)
    operator delete(*v14);
  *(_OWORD *)v14 = v21;
  *(_QWORD *)(v4 + 80) = v22;
  v15 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_22451C83C(v15, (uint64_t)&v21);
  v16 = (void **)(v4 + 88);
  if (*(char *)(v4 + 111) < 0)
    operator delete(*v16);
  result = *(double *)&v21;
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v4 + 104) = v22;
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(a1 + 48) = v18 - 8;
  *(_QWORD *)(a1 + 72) = v19 - 8;
  return result;
}

void sub_2240D0244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_2240D0270(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  void **v28;
  void **v29;
  double result;
  uint64_t v31;
  void **v32;
  int v33;
  int v34;
  void **v35;
  char v36;
  void *__p[2];
  uint64_t v38;
  _BYTE v39[8];
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)__p);
    sub_223B87C9C((uint64_t)v39, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v39);
        if (!v54)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v36, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v40;
    *(_BYTE *)(v3 + 64) = 0;
    if (v43)
    {
      v8 = v42;
      *(_OWORD *)(v3 + 40) = v41;
      *(_QWORD *)(v3 + 56) = v8;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v45;
    v10 = v44;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v48)
    {
      v11 = v47;
      *(_OWORD *)(v3 + 96) = v46;
      *(_QWORD *)(v3 + 112) = v11;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v51)
    {
      v12 = v50;
      *(_OWORD *)(v3 + 128) = v49;
      *(_QWORD *)(v3 + 144) = v12;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v54;
    if (v54)
    {
      *(_OWORD *)(v3 + 160) = v52;
      *(_QWORD *)(v3 + 176) = v53;
      v52 = 0uLL;
      v53 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v52;
    if (!(_QWORD)v52)
      goto LABEL_46;
    v15 = *((_QWORD *)&v52 + 1);
    v16 = (void *)v52;
    if (*((_QWORD *)&v52 + 1) == (_QWORD)v52)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v52;
LABEL_45:
    *((_QWORD *)&v52 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)__p);
  sub_223B87C9C((uint64_t)v39, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v36, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v40;
    *(_BYTE *)(v3 + 64) = 0;
    if (v43)
    {
      v17 = v42;
      *(_OWORD *)(v3 + 40) = v41;
      *(_QWORD *)(v3 + 56) = v17;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v45;
    v19 = v44;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v48)
    {
      v20 = v47;
      *(_OWORD *)(v3 + 96) = v46;
      *(_QWORD *)(v3 + 112) = v20;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v51)
    {
      v21 = v50;
      *(_OWORD *)(v3 + 128) = v49;
      *(_QWORD *)(v3 + 144) = v21;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v54;
    if (v54)
    {
      *(_OWORD *)(v3 + 160) = v52;
      *(_QWORD *)(v3 + 176) = v53;
      v52 = 0uLL;
      v53 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v39);
  if (v54)
  {
LABEL_38:
    v14 = v52;
    if (!(_QWORD)v52)
      goto LABEL_46;
    v23 = *((_QWORD *)&v52 + 1);
    v16 = (void *)v52;
    if (*((_QWORD *)&v52 + 1) == (_QWORD)v52)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v51 && SHIBYTE(v50) < 0)
    operator delete((void *)v49);
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  sub_2231AD66C((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_2245508F0(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_223BC4F50((uint64_t)__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)__p);
      if (SHIBYTE(v38) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_78:
          v27 = 0;
          if (SHIBYTE(v38) < 0)
            goto LABEL_81;
          goto LABEL_67;
        }
      }
      else if (SHIBYTE(v38) == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_78;
      }
      v27 = 1;
      if (SHIBYTE(v38) < 0)
LABEL_81:
        operator delete(__p[0]);
LABEL_67:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  LODWORD(__p[0]) = 1;
  sub_2245508F0(a2, __p);
  ++*(_QWORD *)(a2 + 80);
  if (*(_BYTE *)(a2 + 128) && *(_BYTE *)(a2 + 131))
  {
    *(_BYTE *)(a2 + 132) = 1;
  }
  else
  {
    sub_2245523C0(a2, (uint64_t)__p);
    v28 = (void **)(v3 + 200);
    if (*(char *)(v3 + 223) < 0)
      operator delete(*v28);
    *(_OWORD *)v28 = *(_OWORD *)__p;
    *(_QWORD *)(v3 + 216) = v38;
    ++*(_QWORD *)(a2 + 104);
  }
  sub_22454FFAC(a2, (_BYTE *)(v3 + 224));
  ++*(_QWORD *)(a2 + 80);
  if (*(_BYTE *)(a2 + 128) && *(_BYTE *)(a2 + 131))
  {
    *(_BYTE *)(a2 + 132) = 1;
  }
  else
  {
    sub_2245523C0(a2, (uint64_t)__p);
    v29 = (void **)(v3 + 232);
    if (*(char *)(v3 + 255) < 0)
      operator delete(*v29);
    *(_OWORD *)v29 = *(_OWORD *)__p;
    *(_QWORD *)(v3 + 248) = v38;
    ++*(_QWORD *)(a2 + 104);
  }
  sub_2245508F0(a2, (_DWORD *)(v3 + 256));
  v31 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a2 + 80) = v31 + 1;
  if (*(_BYTE *)(a2 + 128) && *(_BYTE *)(a2 + 131))
  {
    *(_BYTE *)(a2 + 132) = 1;
    *(_QWORD *)(a2 + 80) = v31 + 2;
LABEL_98:
    *(_BYTE *)(a2 + 132) = 1;
    return result;
  }
  sub_2245523C0(a2, (uint64_t)__p);
  v32 = (void **)(v3 + 264);
  if (*(char *)(v3 + 287) < 0)
    operator delete(*v32);
  result = *(double *)__p;
  *(_OWORD *)v32 = *(_OWORD *)__p;
  *(_QWORD *)(v3 + 280) = v38;
  ++*(_QWORD *)(a2 + 104);
  v33 = *(unsigned __int8 *)(a2 + 128);
  v34 = *(unsigned __int8 *)(a2 + 131);
  ++*(_QWORD *)(a2 + 80);
  if (v33 && v34)
    goto LABEL_98;
  sub_2245523C0(a2, (uint64_t)__p);
  v35 = (void **)(v3 + 288);
  if (*(char *)(v3 + 311) < 0)
    operator delete(*v35);
  result = *(double *)__p;
  *(_OWORD *)v35 = *(_OWORD *)__p;
  *(_QWORD *)(v3 + 304) = v38;
  ++*(_QWORD *)(a2 + 104);
  return result;
}

void sub_2240D094C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240D0994(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  std::logic_error *exception;
  char v30;
  uint64_t v31[27];
  _BYTE v32[8];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v31);
    sub_223B87C9C((uint64_t)v32, v31);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v32);
        if (!v47)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v8 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v8;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v38;
    v10 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v11 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v11;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v12 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v12;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v15 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v45;
LABEL_45:
    *((_QWORD *)&v45 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v31);
  sub_223B87C9C((uint64_t)v32, v31);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v17 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v17;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v38;
    v19 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v20 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v20;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v21 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v21;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v32);
  if (v47)
  {
LABEL_38:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v23 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v44 && SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  sub_2231AD66C((uint64_t)v31);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v31, a2, v4);
  v24 = a2[6];
  v25 = a2[7];
  v26 = v25 >= v24;
  v27 = v25 - v24;
  if (!v26)
    v27 = 0;
  if (v27 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v24 + 4;
  return sub_2240D0E70(a2, v3 + 200);
}

void sub_2240D0E14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240D0E70(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;

  sub_2244FFDBC(a1, a2);
  v4 = a1[6];
  if (a1[7] <= v4)
    goto LABEL_6;
  *(_BYTE *)(a2 + 24) = *(_BYTE *)(a1[3] + v4);
  ++a1[6];
  sub_2244FFDBC(a1, a2 + 32);
  v5 = a1[6];
  v6 = a1[7];
  v7 = v6 >= v5;
  v8 = v6 - v5;
  if (!v7)
    v8 = 0;
  if (v8 <= 3)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_DWORD *)(a2 + 56) = *(_DWORD *)(a1[3] + v5);
  a1[6] += 4;
  sub_2244FFDBC(a1, a2 + 64);
  return sub_2244FFDBC(a1, a2 + 88);
}

void sub_2240D0F50(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240D0F64(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_2240D0F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  uint64_t v9;
  unsigned __int128 *v10;
  unsigned __int128 v11;

  v2 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)a1 = off_24EC283E8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  if (*(_BYTE *)(a2 + 40))
  {
    v3 = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  if (*(_BYTE *)(a2 + 72))
  {
    v4 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a2 + 56) = 0;
    *(_QWORD *)(a2 + 64) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    *(_BYTE *)(a1 + 72) = 1;
  }
  v5 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 120) = 0;
  if (*(_BYTE *)(a2 + 120))
  {
    v6 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = v6;
    *(_QWORD *)(a2 + 104) = 0;
    *(_QWORD *)(a2 + 112) = 0;
    *(_QWORD *)(a2 + 96) = 0;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  if (*(_BYTE *)(a2 + 152))
  {
    v7 = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = v7;
    *(_QWORD *)(a2 + 136) = 0;
    *(_QWORD *)(a2 + 144) = 0;
    *(_QWORD *)(a2 + 128) = 0;
    *(_BYTE *)(a1 + 152) = 1;
  }
  result = *(__n128 *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 176) = v9;
  *(__n128 *)(a1 + 160) = result;
  *(_BYTE *)(a1 + 240) = 0;
  if (*(_BYTE *)(a2 + 240))
  {
    result = *(__n128 *)(a2 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(__n128 *)(a1 + 192) = result;
    *(_QWORD *)(a2 + 200) = 0;
    *(_QWORD *)(a2 + 208) = 0;
    *(_QWORD *)(a2 + 192) = 0;
    v10 = (unsigned __int128 *)(a2 + 224);
    do
      v11 = __ldaxp(v10);
    while (__stlxp(v11, v10));
    *(_OWORD *)(a1 + 224) = v11;
    *(_BYTE *)(a1 + 240) = 1;
  }
  *(_BYTE *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  if (*(_BYTE *)(a2 + 280))
  {
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    *(_QWORD *)(a1 + 272) = 0;
    result = *(__n128 *)(a2 + 256);
    *(__n128 *)(a1 + 256) = result;
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a2 + 256) = 0;
    *(_QWORD *)(a2 + 264) = 0;
    *(_QWORD *)(a2 + 272) = 0;
    *(_BYTE *)(a1 + 280) = 1;
  }
  return result;
}

uint64_t sub_2240D10FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_224123BEC((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_2241461F4((unsigned __int8 *)(a1 + 200), (unsigned __int8 *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_2240D12E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240D1300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240D1314(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240D1720(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240D2618(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240D3590(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240D4098(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240D4FA4(&v9, (uint64_t)a1);
          else
            sub_2240D1478(&v8, a1);
        }
      }
    }
  }
}

void sub_2240D1478(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_2240D5648(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240D5648(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240D1720(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240D1A20(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240D1A20(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_2240D1D48((uint64_t)v3, a2);
  sub_2240D1B04(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_2240D1ABC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2240D1B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  void **v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  uint64_t v16;
  int v17;

  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "src_to_dst";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22454024C(a1);
  v16 = 7;
  v17 = 1;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "version";
    *(_QWORD *)(a1 + 80) = 7;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542048(a1, &v17);
  sub_2240D1E74(a1, v4);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int8 **)(v7 - 8);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 56) = v7 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
  if (*v8 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "src";
    *(_QWORD *)(a1 + 80) = 3;
    *(_BYTE *)(a1 + 88) = 1;
  }
  if (*(_BYTE *)(a2 + 144))
  {
    sub_224542510(a1, a2 + 120);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  else
  {
    v16 = 0;
    v9 = (unsigned __int8 *)sub_22453FEA0(a1);
    v10 = *v9;
    *v9 = 0;
    v11 = (void **)*((_QWORD *)v9 + 1);
    *((_QWORD *)v9 + 1) = v16;
    v16 = (uint64_t)v11;
    sub_22345337C((void ***)&v16, v10);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  v12 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 72) = "dst";
  *(_QWORD *)(a1 + 80) = 3;
  if (!v12)
  {
    *(_BYTE *)(a1 + 88) = 1;
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_17;
    goto LABEL_19;
  }
LABEL_16:
  if (*(_BYTE *)(a2 + 176))
  {
LABEL_17:
    sub_224542510(a1, a2 + 152);
    return;
  }
LABEL_19:
  v16 = 0;
  v13 = (unsigned __int8 *)sub_22453FEA0(a1);
  v14 = *v13;
  *v13 = 0;
  v15 = (void **)*((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v16;
  v16 = (uint64_t)v15;
  sub_22345337C((void ***)&v16, v14);
}

void sub_2240D1D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240D1D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

uint64_t sub_2240D1D48(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 88);
  v7 = *(_OWORD *)(a2 + 104);
  v8 = *(_OWORD *)(a2 + 8);
  v9 = *(_OWORD *)(a2 + 24);
  v10 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 8) = v8;
  *(_OWORD *)(a1 + 24) = v9;
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 144) = 0;
  if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
    {
      sub_223197FA4((_BYTE *)(a1 + 120), *(void **)(a2 + 120), *(_QWORD *)(a2 + 128));
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = v11;
    }
    *(_BYTE *)(a1 + 144) = 1;
  }
  *(_BYTE *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
    {
      sub_223197FA4((_BYTE *)(a1 + 152), *(void **)(a2 + 152), *(_QWORD *)(a2 + 160));
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v12;
    }
    *(_BYTE *)(a1 + 176) = 1;
  }
  return a1;
}

void sub_2240D1E30(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[176] && v1[175] < 0)
    operator delete(*v3);
  if (v1[144])
  {
    if (v1[143] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_2240D1E74(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "se3_type";
    *(_QWORD *)(a1 + 80) = 8;
    if (!v4)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v9 = a2;
  sub_2240D224C(a1, (_BYTE **)&v9);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_23;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v5 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v5)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_2245436F8(a1, (float **)&v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v6)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 20;
      sub_2245436F8(a1, (float **)&v9);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
LABEL_23:
        sub_22316DD70();
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v7)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_224543B18(a1, &v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v8 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v8)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 32;
      sub_224543B18(a1, &v9);
      break;
    case 4:
      sub_2240D20A8(a1, a2);
      break;
    case 5:
      sub_2240D2178(a1, a2);
      break;
    default:
      return;
  }
}

void sub_2240D20A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104))
    sub_22316DD70();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22454024C(a1);
  v7 = 4;
  v8 = v4;
  sub_2245436F8(a1, (float **)&v7);
  v7 = 4;
  v8 = a2 + 24;
  sub_2245436F8(a1, (float **)&v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_2245436F8(a1, (float **)&v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240D2178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104) != 1)
    sub_22316DD70();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22454024C(a1);
  v7 = 4;
  v8 = v4;
  sub_224543B18(a1, &v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_224543B18(a1, &v7);
  v7 = 4;
  v8 = a2 + 72;
  sub_224543B18(a1, &v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240D224C(uint64_t a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240D2354((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240D2310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240D232C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240D2340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240D2354(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)off_24EC692C8[(char)*a3 - 1], qword_224698410[(char)(*a3 - 1)]);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_2240D25C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2240D25E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240D2604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2240D2618(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_2240D2898(a2, v3 + 200);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240D2898(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_2240D1D48((uint64_t)v3, a2);
  sub_2240D297C(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_2240D2934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

char *sub_2240D297C(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t *v20;

  v4 = (char *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    v20 = (uint64_t *)(v5 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v5 + 8);
  }
  sub_224555278(*(_QWORD *)(a1 + 24));
  sub_2240D2C38(a1, v4);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 88) - 8);
  sub_224554D6C((uint64_t *)(v6 + 48), *(_QWORD *)(v6 + 16) - v7 - 9);
  v8 = *(_QWORD *)(v6 + 48);
  if (v8)
    memmove((void *)(*(_QWORD *)(v6 + 24) + v7), *(const void **)(v6 + 56), v8);
  *(_QWORD *)(v6 + 48) = 0;
  v9 = *(_QWORD *)(v6 + 80);
  v10 = *(_QWORD *)(v6 + 88) - 8;
  *(_QWORD *)(v6 + 88) = v10;
  if (v9 == v10)
  {
    std::ostream::write();
    if (*(_BYTE *)(v6 + 40))
    {
      free(*(void **)(v6 + 24));
      *(_BYTE *)(v6 + 40) = 0;
    }
  }
  if (*(_BYTE *)(a2 + 144))
  {
    v11 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v11 + 40))
    {
      v20 = (uint64_t *)(v11 + 16);
      sub_224559C04(&v20, 1);
      v12 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v12 + 40))
        goto LABEL_12;
    }
    else
    {
      LOBYTE(v20) = 1;
      std::ostream::write();
      v12 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v12 + 40))
      {
LABEL_12:
        v20 = (uint64_t *)(v12 + 16);
        sub_22455B8BC((uint64_t)&v19, &v20, (const void **)(a2 + 120));
        if (!*(_BYTE *)(a2 + 176))
          goto LABEL_25;
LABEL_19:
        v14 = (const void **)(a2 + 152);
        v15 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v15 + 40))
        {
          v20 = (uint64_t *)(v15 + 16);
          sub_224559C04(&v20, 1);
          v16 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v16 + 40))
          {
LABEL_21:
            v20 = (uint64_t *)(v16 + 16);
            return (char *)sub_22455B8BC((uint64_t)&v19, &v20, v14);
          }
        }
        else
        {
          LOBYTE(v20) = 1;
          std::ostream::write();
          v16 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v16 + 40))
            goto LABEL_21;
        }
        return (char *)sub_22455BCF4((uint64_t)&v20, v16 + 8, (uint64_t)v14);
      }
    }
    sub_22455BCF4((uint64_t)&v20, v12 + 8, a2 + 120);
    if (!*(_BYTE *)(a2 + 176))
      goto LABEL_25;
    goto LABEL_19;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(v13 + 40))
  {
    LOBYTE(v20) = 0;
    std::ostream::write();
    if (!*(_BYTE *)(a2 + 176))
      goto LABEL_25;
    goto LABEL_19;
  }
  v20 = (uint64_t *)(v13 + 16);
  sub_224559C04(&v20, 0);
  if (*(_BYTE *)(a2 + 176))
    goto LABEL_19;
LABEL_25:
  v18 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v18 + 40))
  {
    v20 = (uint64_t *)(v18 + 16);
    return sub_224559C04(&v20, 0);
  }
  else
  {
    LOBYTE(v20) = 0;
    return (char *)std::ostream::write();
  }
}

uint64_t sub_2240D2C38(uint64_t a1, char *a2)
{
  int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  _BYTE v49[9];
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    *(_QWORD *)v49 = v5 + 16;
    result = (uint64_t)sub_224559C04((uint64_t **)v49, v4);
  }
  else
  {
    if (v4 < 0)
    {
      v49[0] = -52;
      v49[1] = v4;
    }
    else
    {
      v49[0] = *a2;
    }
    result = std::ostream::write();
  }
  switch(*a2)
  {
    case 1:
      if (*((_DWORD *)a2 + 26) != 2)
        sub_22316DD70();
      v7 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v7 + 40))
      {
        *(_QWORD *)v49 = v7 + 16;
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 2);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 3);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 4);
      }
      else
      {
        v16 = *((_DWORD *)a2 + 2);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v16);
        std::ostream::write();
        v17 = *((_DWORD *)a2 + 3);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v17);
        std::ostream::write();
        v18 = *((_DWORD *)a2 + 4);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v18);
        std::ostream::write();
      }
      v19 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v19 + 40))
      {
        *(_QWORD *)v49 = v19 + 16;
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 5);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 6);
        result = (uint64_t)sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 7);
      }
      else
      {
        v27 = *((_DWORD *)a2 + 5);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v27);
        std::ostream::write();
        v28 = *((_DWORD *)a2 + 6);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v28);
        std::ostream::write();
        v29 = *((_DWORD *)a2 + 7);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v29);
        result = std::ostream::write();
      }
      break;
    case 2:
      if (*((_DWORD *)a2 + 26) != 3)
        sub_22316DD70();
      v9 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        *(_QWORD *)v49 = v9 + 16;
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 1);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 2);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 3);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 1));
        v49[0] = -53;
        std::ostream::write();
        v20 = *((_QWORD *)a2 + 2);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v20);
        std::ostream::write();
        v21 = *((_QWORD *)a2 + 3);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v21);
        std::ostream::write();
      }
      v22 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)v49 = v22 + 16;
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 4);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 5);
        result = (uint64_t)sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 6);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 4));
        v49[0] = -53;
        std::ostream::write();
        v30 = *((_QWORD *)a2 + 5);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v30);
        std::ostream::write();
        v31 = *((_QWORD *)a2 + 6);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v31);
        result = std::ostream::write();
      }
      break;
    case 4:
      if (*((_DWORD *)a2 + 26))
        sub_22316DD70();
      v8 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v8 + 40))
      {
        *(_QWORD *)v49 = v8 + 16;
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 2);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 3);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 4);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 5);
      }
      else
      {
        v11 = *((_DWORD *)a2 + 2);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v11);
        std::ostream::write();
        v12 = *((_DWORD *)a2 + 3);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v12);
        std::ostream::write();
        v13 = *((_DWORD *)a2 + 4);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v13);
        std::ostream::write();
        v14 = *((_DWORD *)a2 + 5);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v14);
        std::ostream::write();
      }
      v15 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v15 + 40))
      {
        *(_QWORD *)v49 = v15 + 16;
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 6);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 7);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 8);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 9);
      }
      else
      {
        v32 = *((_DWORD *)a2 + 6);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v32);
        std::ostream::write();
        v33 = *((_DWORD *)a2 + 7);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v33);
        std::ostream::write();
        v34 = *((_DWORD *)a2 + 8);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v34);
        std::ostream::write();
        v35 = *((_DWORD *)a2 + 9);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v35);
        std::ostream::write();
      }
      v36 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v36 + 40))
      {
        *(_QWORD *)v49 = v36 + 16;
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 10);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 11);
        sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 12);
        result = (uint64_t)sub_22455B5CC((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 13);
      }
      else
      {
        v41 = *((_DWORD *)a2 + 10);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v41);
        std::ostream::write();
        v42 = *((_DWORD *)a2 + 11);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v42);
        std::ostream::write();
        v43 = *((_DWORD *)a2 + 12);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v43);
        std::ostream::write();
        v44 = *((_DWORD *)a2 + 13);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v44);
        result = std::ostream::write();
      }
      break;
    case 5:
      if (*((_DWORD *)a2 + 26) != 1)
        sub_22316DD70();
      v10 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v10 + 40))
      {
        *(_QWORD *)v49 = v10 + 16;
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 1);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 2);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 3);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 4);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 1));
        v49[0] = -53;
        std::ostream::write();
        v23 = *((_QWORD *)a2 + 2);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v23);
        std::ostream::write();
        v24 = *((_QWORD *)a2 + 3);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v24);
        std::ostream::write();
        v25 = *((_QWORD *)a2 + 4);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v25);
        std::ostream::write();
      }
      v26 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v26 + 40))
      {
        *(_QWORD *)v49 = v26 + 16;
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 5);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 6);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 7);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 8);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 5));
        v49[0] = -53;
        std::ostream::write();
        v37 = *((_QWORD *)a2 + 6);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v37);
        std::ostream::write();
        v38 = *((_QWORD *)a2 + 7);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v38);
        std::ostream::write();
        v39 = *((_QWORD *)a2 + 8);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v39);
        std::ostream::write();
      }
      v40 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v40 + 40))
      {
        *(_QWORD *)v49 = v40 + 16;
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 9);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 10);
        sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 11);
        result = (uint64_t)sub_22455B6A8((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 12);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 9));
        v49[0] = -53;
        std::ostream::write();
        v45 = *((_QWORD *)a2 + 10);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v45);
        std::ostream::write();
        v46 = *((_QWORD *)a2 + 11);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v46);
        std::ostream::write();
        v47 = *((_QWORD *)a2 + 12);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v47);
        result = std::ostream::write();
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_2240D3590(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240D3890(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240D3890(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_2240D1D48((uint64_t)v3, a2);
  sub_2240D3974(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_2240D392C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2240D3974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "src_to_dst";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22453FAE0(a1);
  v16 = 7;
  v17 = 1;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "version";
    *(_QWORD *)(a1 + 80) = 7;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224540500(a1, &v17);
  sub_2240D3BB8(a1, v4);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int8 **)(v7 - 8);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 56) = v7 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
  if (*v8 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "src";
    *(_QWORD *)(a1 + 80) = 3;
    *(_BYTE *)(a1 + 88) = 1;
  }
  if (*(_BYTE *)(a2 + 144))
  {
    sub_2245409C8(a1, a2 + 120);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  else
  {
    v16 = 0;
    v9 = (unsigned __int8 *)sub_22453F8B8(a1);
    v10 = *v9;
    *v9 = 0;
    v11 = *((_QWORD *)v9 + 1);
    *((_QWORD *)v9 + 1) = v16;
    v16 = v11;
    sub_223454278(&v16, v10);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  v12 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 72) = "dst";
  *(_QWORD *)(a1 + 80) = 3;
  if (!v12)
  {
    *(_BYTE *)(a1 + 88) = 1;
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_17;
    goto LABEL_19;
  }
LABEL_16:
  if (*(_BYTE *)(a2 + 176))
  {
LABEL_17:
    sub_2245409C8(a1, a2 + 152);
    return;
  }
LABEL_19:
  v16 = 0;
  v13 = (unsigned __int8 *)sub_22453F8B8(a1);
  v14 = *v13;
  *v13 = 0;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v16;
  v16 = v15;
  sub_223454278(&v16, v14);
}

void sub_2240D3B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240D3BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240D3BB8(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "se3_type";
    *(_QWORD *)(a1 + 80) = 8;
    if (!v4)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v9 = a2;
  sub_2240D3F90(a1, (_BYTE **)&v9);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_23;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v5 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v5)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_224541808(a1, &v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v6)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 20;
      sub_224541808(a1, &v9);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
LABEL_23:
        sub_22316DD70();
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v7)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_224541B78(a1, &v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v8 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v8)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 32;
      sub_224541B78(a1, &v9);
      break;
    case 4:
      sub_2240D3DEC(a1, a2);
      break;
    case 5:
      sub_2240D3EBC(a1, a2);
      break;
    default:
      return;
  }
}

void sub_2240D3DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104))
    sub_22316DD70();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22453FAE0(a1);
  v7 = 4;
  v8 = v4;
  sub_224541808(a1, &v7);
  v7 = 4;
  v8 = a2 + 24;
  sub_224541808(a1, &v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_224541808(a1, &v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240D3EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104) != 1)
    sub_22316DD70();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22453FAE0(a1);
  v7 = 4;
  v8 = v4;
  sub_224541B78(a1, &v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_224541B78(a1, &v7);
  v7 = 4;
  v8 = a2 + 72;
  sub_224541B78(a1, &v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240D3F90(uint64_t a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240D2354((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240D4054(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240D4070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240D4084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240D4098(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240D42B0(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240D42B0(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_2240D1D48((uint64_t)v3, a2);
  sub_2240D4394(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_2240D434C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2240D4394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  char v15;

  v4 = a2 + 8;
  if (*(_QWORD *)(a1 + 40))
  {
    v5 = *(_QWORD **)(a1 + 24);
    v13 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v5, (uint64_t)&v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_2240D44E8(a1, v4);
  v6 = *(_BYTE *)(a1 + 34);
  if (*(_QWORD *)(a1 + 40))
  {
    v7 = *(_QWORD **)(a1 + 24);
    v14 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v7, (uint64_t)&v14, 1);
  }
  v8 = *(_QWORD **)(a1 + 24);
  v15 = v6;
  sub_2231813E8(v8, (uint64_t)&v15, 1);
  ++*(_QWORD *)(a1 + 40);
  if (*(_BYTE *)(a2 + 144))
  {
    v10 = 1;
    sub_22454F564(a1, &v10);
    sub_22454F620(a1, a2 + 120);
    if (*(_BYTE *)(a2 + 176))
    {
LABEL_7:
      v12 = 1;
      sub_22454F564(a1, &v12);
      sub_22454F620(a1, a2 + 152);
      return;
    }
  }
  else
  {
    v9 = 0;
    sub_22454F564(a1, &v9);
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_7;
  }
  v11 = 0;
  sub_22454F564(a1, &v11);
}

void sub_2240D44E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  unsigned __int8 v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;

  v73 = *(_BYTE *)a2;
  sub_22454F564(a1, &v73);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_84;
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v5 = *(_QWORD **)(a1 + 24);
        v74 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v5, (uint64_t)&v74, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v6 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v6 + 1;
      if (v6 != -1)
      {
        v7 = *(_QWORD **)(a1 + 24);
        v74 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v7, (uint64_t)&v74, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v8 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v8 + 1;
      if (v8 != -1)
      {
        v9 = *(_QWORD **)(a1 + 24);
        v74 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v9, (uint64_t)&v74, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v10 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v10 + 1;
      if (v10 != -1)
      {
        v11 = *(_QWORD **)(a1 + 24);
        v75 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v11, (uint64_t)&v75, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v12 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v12 + 1;
      if (v12 != -1)
      {
        v13 = *(_QWORD **)(a1 + 24);
        v75 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v13, (uint64_t)&v75, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v14 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v14 + 1;
      if (v14 != -1)
      {
        v15 = *(_QWORD **)(a1 + 24);
        v75 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v15, (uint64_t)&v75, 1);
      }
      goto LABEL_15;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
        goto LABEL_84;
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v39 = *(_QWORD **)(a1 + 24);
        v76 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v39, (uint64_t)&v76, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v40 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v40 + 1;
      if (v40 != -1)
      {
        v41 = *(_QWORD **)(a1 + 24);
        v76 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v41, (uint64_t)&v76, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v42 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v42 + 1;
      if (v42 != -1)
      {
        v43 = *(_QWORD **)(a1 + 24);
        v76 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v43, (uint64_t)&v76, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v44 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v44 + 1;
      if (v44 != -1)
      {
        v45 = *(_QWORD **)(a1 + 24);
        v77 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v45, (uint64_t)&v77, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v46 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v46 + 1;
      if (v46 != -1)
      {
        v47 = *(_QWORD **)(a1 + 24);
        v77 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v47, (uint64_t)&v77, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v48 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v48 + 1;
      if (v48 != -1)
      {
        v49 = *(_QWORD **)(a1 + 24);
        v77 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v49, (uint64_t)&v77, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      goto LABEL_82;
    case 4:
      if (*(_DWORD *)(a2 + 104))
        goto LABEL_84;
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v16 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v16, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v17 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v17 + 1;
      if (v17 != -1)
      {
        v18 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v18, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v19 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v19 + 1;
      if (v19 != -1)
      {
        v20 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v20, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v21 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v21 + 1;
      if (v21 != -1)
      {
        v22 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v22, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v23 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v23 + 1;
      if (v23 != -1)
      {
        v24 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v24, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v25 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v25 + 1;
      if (v25 != -1)
      {
        v26 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v26, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v27 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v27 + 1;
      if (v27 != -1)
      {
        v28 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v28, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v29 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v29 + 1;
      if (v29 != -1)
      {
        v30 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v30, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v31 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v31 + 1;
      if (v31 != -1)
      {
        v32 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v32, (uint64_t)&v80, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v33 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v33 + 1;
      if (v33 != -1)
      {
        v34 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v34, (uint64_t)&v80, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v35 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v35 + 1;
      if (v35 != -1)
      {
        v36 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v36, (uint64_t)&v80, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v37 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v37 + 1;
      if (v37 != -1)
      {
        v38 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v38, (uint64_t)&v80, 1);
      }
LABEL_15:
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      goto LABEL_83;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
LABEL_84:
        sub_22316DD70();
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v50 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v50, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v51 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v51 + 1;
      if (v51 != -1)
      {
        v52 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v52, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v53 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v53 + 1;
      if (v53 != -1)
      {
        v54 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v54, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v55 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v55 + 1;
      if (v55 != -1)
      {
        v56 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v56, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v57 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v57 + 1;
      if (v57 != -1)
      {
        v58 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v58, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v59 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v59 + 1;
      if (v59 != -1)
      {
        v60 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v60, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v61 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v61 + 1;
      if (v61 != -1)
      {
        v62 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v62, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v63 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v63 + 1;
      if (v63 != -1)
      {
        v64 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v64, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v65 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v65 + 1;
      if (v65 != -1)
      {
        v66 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v66, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v67 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v67 + 1;
      if (v67 != -1)
      {
        v68 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v68, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v69 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v69 + 1;
      if (v69 != -1)
      {
        v70 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v70, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v71 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v71 + 1;
      if (v71 != -1)
      {
        v72 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v72, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
LABEL_82:
      std::ostream::operator<<();
LABEL_83:
      ++*v4;
      break;
    default:
      return;
  }
}

void sub_2240D4FA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_2240D515C(a2, v3 + 200);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240D515C(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_2240D1D48((uint64_t)v3, a2);
  sub_2240D5240(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_2240D51F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

char *sub_2240D5240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char *v10;
  char *v11;
  char *p_src;
  uint64_t v13;
  int64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  int64_t v17;
  _BOOL4 v18;
  uint64_t __src;
  uint64_t v21;

  v4 = a2 + 8;
  LODWORD(__src) = 1;
  v5 = a1 + 24;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
  sub_2244FF590((_QWORD *)a1);
  sub_2240D54C0(a1, v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v6 + 10) = *(_QWORD *)(a1 + 32) - v6 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  if (*(_BYTE *)(a2 + 144))
  {
    LOBYTE(__src) = 1;
    sub_224501B60(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
    v7 = *(unsigned __int8 *)(a2 + 143);
    if ((v7 & 0x80u) != 0)
      v7 = *(_QWORD *)(a2 + 128);
    __src = v7;
    sub_224501B60(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&v21, 8);
    if (*(char *)(a2 + 143) < 0)
    {
      v8 = *(char **)(a2 + 120);
      v9 = *(_QWORD *)(a2 + 128);
      if (!v8)
      {
        if (v9)
        {
          v15 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          v8 = 0;
          if (v15)
            goto LABEL_21;
        }
      }
    }
    else
    {
      v8 = (char *)(a2 + 120);
      v9 = *(unsigned __int8 *)(a2 + 143);
    }
    sub_224501B60(v5, *(char **)(a1 + 32), v8, &v8[v9], v9);
    if (*(_BYTE *)(a2 + 176))
    {
LABEL_12:
      LOBYTE(__src) = 1;
      sub_224501B60(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
      v16 = *(unsigned __int8 *)(a2 + 175);
      if ((v16 & 0x80u) != 0)
        v16 = *(_QWORD *)(a2 + 160);
      __src = v16;
      sub_224501B60(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&v21, 8);
      if ((*(char *)(a2 + 175) & 0x80000000) == 0)
      {
        p_src = (char *)(a2 + 152);
        v17 = *(unsigned __int8 *)(a2 + 175);
LABEL_19:
        v10 = *(char **)(a1 + 32);
        v11 = &p_src[v17];
        v13 = v5;
        v14 = v17;
        return sub_224501B60(v13, v10, p_src, v11, v14);
      }
      p_src = *(char **)(a2 + 152);
      v17 = *(_QWORD *)(a2 + 160);
      if (p_src)
        goto LABEL_19;
      if (!v17)
        goto LABEL_19;
      v18 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
      p_src = 0;
      if (!v18)
        goto LABEL_19;
LABEL_21:
      abort();
    }
  }
  else
  {
    LOBYTE(__src) = 0;
    sub_224501B60(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_12;
  }
  LOBYTE(__src) = 0;
  v10 = *(char **)(a1 + 32);
  v11 = (char *)&__src + 1;
  p_src = (char *)&__src;
  v13 = v5;
  v14 = 1;
  return sub_224501B60(v13, v10, p_src, v11, v14);
}

char *sub_2240D54C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  char *v6;
  char *v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  char *v13;
  char *v14;
  char __src;
  uint64_t v16;

  __src = *(_BYTE *)a2;
  v4 = a1 + 24;
  result = sub_224501B60(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v16, 1);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_11;
      v6 = (char *)(a2 + 8);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 20);
      v9 = 12;
      v10 = v4;
      v11 = v8;
      v12 = 12;
      goto LABEL_10;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
        goto LABEL_11;
      v6 = (char *)(a2 + 8);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 32);
      v9 = 24;
      v10 = v4;
      v11 = v8;
      v12 = 24;
      goto LABEL_10;
    case 4:
      if (*(_DWORD *)(a2 + 104))
        goto LABEL_11;
      v13 = (char *)(a2 + 24);
      v9 = 16;
      sub_224501B60(v4, *(char **)(a1 + 32), (char *)(a2 + 8), (char *)(a2 + 24), 16);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 40);
      v10 = v4;
      v6 = v13;
      v11 = v8;
      v12 = 16;
      goto LABEL_10;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
LABEL_11:
        sub_22316DD70();
      v14 = (char *)(a2 + 40);
      v9 = 32;
      sub_224501B60(v4, *(char **)(a1 + 32), (char *)(a2 + 8), (char *)(a2 + 40), 32);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 72);
      v10 = v4;
      v6 = v14;
      v11 = v8;
      v12 = 32;
LABEL_10:
      sub_224501B60(v10, v7, v6, v11, v12);
      result = sub_224501B60(v4, *(char **)(a1 + 32), v8, &v8[v9], v9);
      break;
    default:
      return result;
  }
  return result;
}

void sub_2240D5648(_DWORD *a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_2240D1D48((uint64_t)v3, a2);
  sub_2240D572C(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_2240D56E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240D572C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v7;
  int v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v4 = a2 + 8;
  v5 = a1[2];
  v7 = 1;
  (*(void (**)(_DWORD *, int *))(*(_QWORD *)a1 + 104))(a1, &v7);
  if (v5 < 1)
  {
    sub_2240D58AC(a1, v4);
    if (*(_BYTE *)(a2 + 144))
      goto LABEL_5;
LABEL_8:
    v9 = 0;
    (*(void (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v9);
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_6;
    goto LABEL_9;
  }
  if (v5 == 2)
  {
    v8 = 1;
    (*(void (**)(_DWORD *, int *))(*(_QWORD *)a1 + 104))(a1, &v8);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 16))(a1);
  sub_2240D58AC(a1, v4);
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 24))(a1);
  if (!*(_BYTE *)(a2 + 144))
    goto LABEL_8;
LABEL_5:
  v10 = 1;
  (*(void (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v10);
  (*(void (**)(_DWORD *, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 120);
  if (*(_BYTE *)(a2 + 176))
  {
LABEL_6:
    v12 = 1;
    (*(void (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v12);
    return (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 152);
  }
LABEL_9:
  v11 = 0;
  return (*(uint64_t (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v11);
}

void sub_2240D58AC(_BYTE *a1, uint64_t a2)
{
  _BYTE *v4;

  v4 = (_BYTE *)a2;
  sub_2240D5C90(a1, &v4);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_9;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
LABEL_9:
        sub_22316DD70();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 8);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
      break;
    case 4:
      sub_2240D5A64((uint64_t)a1, a2);
      break;
    case 5:
      sub_2240D5B78((uint64_t)a1, a2);
      break;
    default:
      return;
  }
}

uint64_t sub_2240D5A64(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 104))
    sub_22316DD70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 36);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 44);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 52);
}

uint64_t sub_2240D5B78(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 104) != 1)
    sub_22316DD70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 56);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 96);
}

void sub_2240D5C90(_BYTE *a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  if ((a1[12] & 2) != 0)
  {
    v3 = *a2;
    v7 = 0;
    sub_2240D2354((uint64_t)&v9, (uint64_t)v6, v3);
    if (v7 == -1)
      sub_22316DD70();
    v9 = &v8;
    ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
    if (v7 != -1)
      ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    if (v5 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6[0] = **a2;
    (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a1 + 80))(a1, v6);
  }
}

void sub_2240D5D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240D5DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240D5DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240D5DC8(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240D643C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240D702C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240D7958(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240D8548(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240D90B8(&v9, a1);
          else
            sub_2240D5F2C(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_2240D5F2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29[27];
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v29);
    sub_223B87C9C((uint64_t)&v30, v29);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v30);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v15 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v43;
LABEL_45:
    *((_QWORD *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v29);
  sub_223B87C9C((uint64_t)&v30, v29);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v30);
  if (v45)
  {
LABEL_38:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v23 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_2231AD66C((uint64_t)v29);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v29[0] = a2[1];
  v25 = v29[0];
  v30 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v30);
  if (v25 < 1)
  {
    if (v30 < 3)
      sub_223BD7864((uint64_t)&v30, (uint64_t)a2, v4, v30);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v30);
  }
  else
  {
    sub_223BD7174((int *)v29, (uint64_t)a2, v4, v30);
  }
  v26 = *a2;
  v29[0] = a2[1];
  v27 = v29[0];
  v30 = 1;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v30);
  if (v27 < 1)
    sub_2240D9EEC(a2, v3 + 200);
  else
    sub_2240D9C04((int *)v29, a2, v3 + 200);
}

void sub_2240D63F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240D643C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v32);
    sub_223B87C9C((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v32);
  sub_223B87C9C((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_2231AD66C((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_22451CAD4(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240D6990(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_2240D6948(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240D6990(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *exception;
  unint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src_to_dst";
  *(_QWORD *)(a1 + 96) = 10;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  sub_224544628(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_22451CAD4(v6, &v11);
  if (HIDWORD(v11))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240D6AE0(a1, a2 + 8);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  LODWORD(v7) = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src";
  *(_QWORD *)(a1 + 96) = 3;
  if (!(_DWORD)v7)
    *(_BYTE *)(a1 + 104) = 1;
  sub_223BB5654((uint64_t *)a1, a2 + 120);
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "dst";
  *(_QWORD *)(a1 + 96) = 3;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  sub_223BB5654((uint64_t *)a1, a2 + 152);
}

void sub_2240D6AE0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  unint64_t v6;
  float *v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  double *v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "se3_type";
  *(_QWORD *)(a1 + 96) = 8;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v25 = (_BYTE *)a2;
  sub_2240D6E3C((uint64_t *)a1, &v25);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      v5 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v5)
        *(_BYTE *)(a1 + 104) = 1;
      v6 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545EA4(v6, (float *)(a2 + 8));
      v7 = (float *)(a2 + 20);
      v8 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v8)
        *(_BYTE *)(a1 + 104) = 1;
      v9 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545EA4(v9, v7);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      v10 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v10)
        *(_BYTE *)(a1 + 104) = 1;
      v11 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545FAC(v11, (double *)(a2 + 8));
      v12 = (double *)(a2 + 32);
      v13 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v13)
        *(_BYTE *)(a1 + 104) = 1;
      v14 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545FAC(v14, v12);
      break;
    case 4:
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v15 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v15)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v16 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545EA4(v16, (float *)(a2 + 8));
      v17 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545EA4(v17, (float *)(a2 + 24));
      v18 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545EA4(v18, (float *)(a2 + 40));
      goto LABEL_28;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v20 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545FAC(v20, (double *)(a2 + 8));
      v21 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545FAC(v21, (double *)(a2 + 40));
      v22 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545FAC(v22, (double *)(a2 + 72));
LABEL_28:
      v23 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v23 - 8);
      v24 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(v24 - 8);
      *(_QWORD *)(a1 + 48) = v23 - 8;
      *(_QWORD *)(a1 + 72) = v24 - 8;
      break;
    default:
      return;
  }
}

void sub_2240D6E3C(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_2241453B8((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240D6FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_2240D702C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v28, a2, v4);
  LODWORD(v28[0]) = 1;
  sub_224554038(a2[6], v28);
  sub_2231B1308(a2 + 2);
  sub_2240D7510(a2, v3 + 200);
  v24 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2);
  v26 = *(_QWORD *)(v24 - 16) - result + *(_QWORD *)(v24 - 8);
  if (v26)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(a2[2] + 40))(a2 + 2, v26);
  a2[4] -= 16;
  return result;
}

void sub_2240D74C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240D7510(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  int v9;
  char v10;
  char v11;

  v4 = a2 + 8;
  v9 = 1;
  sub_224554038(a1[6], &v9);
  sub_2231B1308(a1 + 2);
  sub_2240D7690((uint64_t)a1, v4);
  v5 = a1[4];
  v6 = *(_QWORD *)(v5 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v5 - 8);
  if (v6)
    (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v6);
  a1[4] -= 16;
  v7 = (void **)(a2 + 120);
  v10 = 0;
  sub_224553CF0(a1[6], &v10);
  if (v10)
  {
    if (!*(_BYTE *)(a2 + 144))
    {
      *v7 = 0;
      *(_QWORD *)(a2 + 128) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      *(_BYTE *)(a2 + 144) = 1;
    }
    sub_22455481C(a1[6], (void **)(a2 + 120));
  }
  else if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
      operator delete(*v7);
    *(_BYTE *)(a2 + 144) = 0;
  }
  v8 = (void **)(a2 + 152);
  v11 = 0;
  sub_224553CF0(a1[6], &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a2 + 176))
    {
      *v8 = 0;
      *(_QWORD *)(a2 + 160) = 0;
      *(_QWORD *)(a2 + 168) = 0;
      *(_BYTE *)(a2 + 176) = 1;
    }
    sub_22455481C(a1[6], (void **)(a2 + 152));
  }
  else if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v8);
    *(_BYTE *)(a2 + 176) = 0;
  }
}

void sub_2240D7690(uint64_t a1, uint64_t a2)
{
  int v4;
  float *v5;
  uint64_t v6;
  uint64_t v7;
  float *v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  float *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;

  v19 = 0;
  sub_224553CF0(*(_QWORD *)(a1 + 48), &v19);
  v4 = v19;
  *(_BYTE *)a2 = v19;
  switch(v4)
  {
    case 1:
      v5 = (float *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)v5 = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      v6 = *(_QWORD *)(a1 + 48);
      sub_2245544CC(v6, v5);
      sub_2245544CC(v6, (float *)(a2 + 12));
      sub_2245544CC(v6, (float *)(a2 + 16));
      v7 = *(_QWORD *)(a1 + 48);
      sub_2245544CC(v7, (float *)(a2 + 20));
      sub_2245544CC(v7, (float *)(a2 + 24));
      v8 = (float *)(a2 + 28);
      goto LABEL_11;
    case 2:
      v9 = (double *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v9 = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      v10 = *(_QWORD *)(a1 + 48);
      sub_224554604(v10, v9);
      sub_224554604(v10, (double *)(a2 + 16));
      sub_224554604(v10, (double *)(a2 + 24));
      v11 = *(_QWORD *)(a1 + 48);
      sub_224554604(v11, (double *)(a2 + 32));
      sub_224554604(v11, (double *)(a2 + 40));
      v12 = (double *)(a2 + 48);
      goto LABEL_15;
    case 4:
      v13 = (float *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v13 = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v14 = *(_QWORD *)(a1 + 48);
      sub_2245544CC(v14, v13);
      sub_2245544CC(v14, (float *)(a2 + 12));
      sub_2245544CC(v14, (float *)(a2 + 16));
      sub_2245544CC(v14, (float *)(a2 + 20));
      v15 = *(_QWORD *)(a1 + 48);
      sub_2245544CC(v15, (float *)(a2 + 24));
      sub_2245544CC(v15, (float *)(a2 + 28));
      sub_2245544CC(v15, (float *)(a2 + 32));
      sub_2245544CC(v15, (float *)(a2 + 36));
      v7 = *(_QWORD *)(a1 + 48);
      sub_2245544CC(v7, (float *)(a2 + 40));
      sub_2245544CC(v7, (float *)(a2 + 44));
      sub_2245544CC(v7, (float *)(a2 + 48));
      v8 = (float *)(a2 + 52);
LABEL_11:
      sub_2245544CC(v7, v8);
      return;
    case 5:
      v16 = (double *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)v16 = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v17 = *(_QWORD *)(a1 + 48);
      sub_224554604(v17, v16);
      sub_224554604(v17, (double *)(a2 + 16));
      sub_224554604(v17, (double *)(a2 + 24));
      sub_224554604(v17, (double *)(a2 + 32));
      v18 = *(_QWORD *)(a1 + 48);
      sub_224554604(v18, (double *)(a2 + 40));
      sub_224554604(v18, (double *)(a2 + 48));
      sub_224554604(v18, (double *)(a2 + 56));
      sub_224554604(v18, (double *)(a2 + 64));
      v11 = *(_QWORD *)(a1 + 48);
      sub_224554604(v11, (double *)(a2 + 72));
      sub_224554604(v11, (double *)(a2 + 80));
      sub_224554604(v11, (double *)(a2 + 88));
      v12 = (double *)(a2 + 96);
LABEL_15:
      sub_224554604(v11, v12);
      break;
    default:
      return;
  }
}

void sub_2240D7958(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v32);
    sub_223B87C9C((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v32);
  sub_223B87C9C((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_2231AD66C((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_22451C444(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240D7EAC(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_2240D7E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240D7EAC(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *exception;
  unint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src_to_dst";
  *(_QWORD *)(a1 + 96) = 10;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  sub_224544138(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_22451C444(v6, &v11);
  if (HIDWORD(v11))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240D7FFC(a1, a2 + 8);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  LODWORD(v7) = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src";
  *(_QWORD *)(a1 + 96) = 3;
  if (!(_DWORD)v7)
    *(_BYTE *)(a1 + 104) = 1;
  sub_223BBE04C((uint64_t *)a1, a2 + 120);
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "dst";
  *(_QWORD *)(a1 + 96) = 3;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  sub_223BBE04C((uint64_t *)a1, a2 + 152);
}

void sub_2240D7FFC(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  unint64_t v6;
  float *v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  double *v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "se3_type";
  *(_QWORD *)(a1 + 96) = 8;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v25 = (_BYTE *)a2;
  sub_2240D8358((uint64_t *)a1, &v25);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      v5 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v5)
        *(_BYTE *)(a1 + 104) = 1;
      v6 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545240(v6, (float *)(a2 + 8));
      v7 = (float *)(a2 + 20);
      v8 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v8)
        *(_BYTE *)(a1 + 104) = 1;
      v9 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545240(v9, v7);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      v10 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v10)
        *(_BYTE *)(a1 + 104) = 1;
      v11 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545370(v11, (double *)(a2 + 8));
      v12 = (double *)(a2 + 32);
      v13 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v13)
        *(_BYTE *)(a1 + 104) = 1;
      v14 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545370(v14, v12);
      break;
    case 4:
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v15 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v15)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v16 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545240(v16, (float *)(a2 + 8));
      v17 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545240(v17, (float *)(a2 + 24));
      v18 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545240(v18, (float *)(a2 + 40));
      goto LABEL_28;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v20 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545370(v20, (double *)(a2 + 8));
      v21 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545370(v21, (double *)(a2 + 40));
      v22 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545370(v22, (double *)(a2 + 72));
LABEL_28:
      v23 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v23 - 8);
      v24 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(v24 - 8);
      *(_QWORD *)(a1 + 48) = v23 - 8;
      *(_QWORD *)(a1 + 72) = v24 - 8;
      break;
    default:
      return;
  }
}

void sub_2240D8358(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_2241453B8((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240D84BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240D8548(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  void *__p;
  uint64_t v32;
  char v33;
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v34, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v34, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v29 = 0;
          if (v33 < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v29 = 1;
      if (v33 < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_2245508F0(a2, &__p);
  sub_2240D8B64(a2, v3 + 200);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v27 = 0;
          if (v33 < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v27 = 1;
      if (v33 < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
}

void sub_2240D8B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_2240D8B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void **v5;
  char v6;
  char v7;
  void **v8;
  double result;
  char v10;
  void *__p[2];
  uint64_t v12;

  v4 = a2 + 8;
  LODWORD(__p[0]) = 1;
  sub_2245508F0(a1, __p);
  sub_2240D8E14(a1, v4);
  if (!*(_BYTE *)(a1 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a1, (uint64_t)__p);
      if (SHIBYTE(v12) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_17:
          v7 = 0;
          if (SHIBYTE(v12) < 0)
            goto LABEL_20;
          goto LABEL_6;
        }
      }
      else if (SHIBYTE(v12) == 1 && *(unsigned __int8 *)(a1 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_17;
      }
      v7 = 1;
      if (SHIBYTE(v12) < 0)
LABEL_20:
        operator delete(__p[0]);
LABEL_6:
      if (*(_BYTE *)(a1 + 131))
        v6 = 0;
      else
        v6 = v7;
    }
    while ((v6 & 1) != 0);
  }
  v5 = (void **)(a2 + 120);
  v10 = 0;
  sub_22454FFAC(a1, &v10);
  if (v10)
  {
    if (*(_BYTE *)(a2 + 144))
    {
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
        goto LABEL_28;
    }
    else
    {
      *v5 = 0;
      *(_QWORD *)(a2 + 128) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      *(_BYTE *)(a2 + 144) = 1;
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
      {
LABEL_28:
        sub_2245523C0(a1, (uint64_t)__p);
        if (*(char *)(a2 + 143) < 0)
          operator delete(*v5);
        *(_OWORD *)v5 = *(_OWORD *)__p;
        *(_QWORD *)(a2 + 136) = v12;
        ++*(_QWORD *)(a1 + 104);
        goto LABEL_31;
      }
    }
    if (*(_BYTE *)(a1 + 131))
    {
      *(_BYTE *)(a1 + 132) = 1;
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
      operator delete(*v5);
    *(_BYTE *)(a2 + 144) = 0;
  }
LABEL_31:
  v8 = (void **)(a2 + 152);
  v10 = 0;
  sub_22454FFAC(a1, &v10);
  if (v10)
  {
    if (*(_BYTE *)(a2 + 176))
    {
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
        goto LABEL_43;
    }
    else
    {
      *v8 = 0;
      *(_QWORD *)(a2 + 160) = 0;
      *(_QWORD *)(a2 + 168) = 0;
      *(_BYTE *)(a2 + 176) = 1;
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
      {
LABEL_43:
        sub_2245523C0(a1, (uint64_t)__p);
        if (*(char *)(a2 + 175) < 0)
          operator delete(*v8);
        result = *(double *)__p;
        *(_OWORD *)v8 = *(_OWORD *)__p;
        *(_QWORD *)(a2 + 168) = v12;
        ++*(_QWORD *)(a1 + 104);
        return result;
      }
    }
    if (*(_BYTE *)(a1 + 131))
    {
      *(_BYTE *)(a1 + 132) = 1;
      return result;
    }
    goto LABEL_43;
  }
  if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v8);
    *(_BYTE *)(a2 + 176) = 0;
  }
  return result;
}

void sub_2240D8E14(uint64_t a1, uint64_t a2)
{
  int v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  _DWORD *v8;
  _QWORD *v9;
  unsigned __int8 v10;

  v10 = 0;
  sub_22454FFAC(a1, &v10);
  v4 = v10;
  *(_BYTE *)a2 = v10;
  switch(v4)
  {
    case 1:
      v5 = (_DWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)v5 = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      sub_224551268(a1, v5);
      sub_224551268(a1, (_DWORD *)(a2 + 12));
      sub_224551268(a1, (_DWORD *)(a2 + 16));
      sub_224551268(a1, (_DWORD *)(a2 + 20));
      sub_224551268(a1, (_DWORD *)(a2 + 24));
      v6 = (_DWORD *)(a2 + 28);
      goto LABEL_11;
    case 2:
      v7 = (_QWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v7 = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      sub_2245514BC(a1, v7);
      sub_2245514BC(a1, (_QWORD *)(a2 + 16));
      sub_2245514BC(a1, (_QWORD *)(a2 + 24));
      sub_2245514BC(a1, (_QWORD *)(a2 + 32));
      sub_2245514BC(a1, (_QWORD *)(a2 + 40));
      sub_2245514BC(a1, (_QWORD *)(a2 + 48));
      break;
    case 4:
      v8 = (_DWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v8 = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      sub_224551268(a1, v8);
      sub_224551268(a1, (_DWORD *)(a2 + 12));
      sub_224551268(a1, (_DWORD *)(a2 + 16));
      sub_224551268(a1, (_DWORD *)(a2 + 20));
      sub_224551268(a1, (_DWORD *)(a2 + 24));
      sub_224551268(a1, (_DWORD *)(a2 + 28));
      sub_224551268(a1, (_DWORD *)(a2 + 32));
      sub_224551268(a1, (_DWORD *)(a2 + 36));
      sub_224551268(a1, (_DWORD *)(a2 + 40));
      sub_224551268(a1, (_DWORD *)(a2 + 44));
      sub_224551268(a1, (_DWORD *)(a2 + 48));
      v6 = (_DWORD *)(a2 + 52);
LABEL_11:
      sub_224551268(a1, v6);
      break;
    case 5:
      v9 = (_QWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)v9 = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      sub_2245514BC(a1, v9);
      sub_2245514BC(a1, (_QWORD *)(a2 + 16));
      sub_2245514BC(a1, (_QWORD *)(a2 + 24));
      sub_2245514BC(a1, (_QWORD *)(a2 + 32));
      sub_2245514BC(a1, (_QWORD *)(a2 + 40));
      sub_2245514BC(a1, (_QWORD *)(a2 + 48));
      sub_2245514BC(a1, (_QWORD *)(a2 + 56));
      sub_2245514BC(a1, (_QWORD *)(a2 + 64));
      sub_2245514BC(a1, (_QWORD *)(a2 + 72));
      sub_2245514BC(a1, (_QWORD *)(a2 + 80));
      sub_2245514BC(a1, (_QWORD *)(a2 + 88));
      sub_2245514BC(a1, (_QWORD *)(a2 + 96));
      break;
    default:
      return;
  }
}

void sub_2240D90B8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240D952C((uint64_t)v25, a2, v3 + 200);
}

void sub_2240D94E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240D952C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;
  char v12;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  sub_2240D9608((uint64_t)&v12, a2, a3 + 8);
  sub_223BCE57C(a2, a3 + 120);
  sub_223BCE57C(a2, a3 + 152);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_2240D95F4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240D9608(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  sub_2240D96D8(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_2240D96C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_2240D96D8(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  double result;
  std::logic_error *exception;
  _OWORD *v6;

  v2 = a1[6];
  if (a1[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v3 = *(unsigned __int8 *)(a1[3] + v2);
  a1[6] = v2 + 1;
  *(_BYTE *)a2 = v3;
  switch(v3)
  {
    case 1:
      sub_2240D980C(a1, a2);
      break;
    case 2:
      *(_QWORD *)&result = sub_2240D9924(a1, a2).n128_u64[0];
      break;
    case 4:
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v6 = (_OWORD *)(a2 + 8);
      *(_QWORD *)&result = sub_2240D9A40(a1, &v6).n128_u64[0];
      break;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v6 = (_OWORD *)(a2 + 8);
      *(_QWORD *)&result = sub_2240D9B1C(a1, &v6).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_2240D97F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240D980C(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::logic_error *exception;

  v2 = (_QWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104) != 2)
  {
    *v2 = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    *(_DWORD *)(a2 + 104) = 2;
  }
  v3 = result[6];
  v4 = result[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 0xB)
    goto LABEL_10;
  v7 = (uint64_t *)(result[3] + v3);
  v8 = *v7;
  *(_DWORD *)(a2 + 16) = *((_DWORD *)v7 + 2);
  *v2 = v8;
  v9 = result[7];
  v10 = result[6] + 12;
  result[6] = v10;
  v5 = v9 >= v10;
  v11 = v9 - v10;
  if (!v5)
    v11 = 0;
  if (v11 <= 0xB)
  {
LABEL_10:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v12 = result[3] + v10;
  v13 = *(_QWORD *)v12;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)(v12 + 8);
  *(_QWORD *)(a2 + 20) = v13;
  result[6] += 12;
  return result;
}

void sub_2240D98FC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240D9910(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_2240D9924(_QWORD *a1, uint64_t a2)
{
  _OWORD *v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  __int128 *v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 *v12;
  __n128 result;
  std::logic_error *exception;

  v2 = (_OWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104) != 3)
  {
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *v2 = 0u;
    *(_DWORD *)(a2 + 104) = 3;
  }
  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 0x17)
    goto LABEL_10;
  v7 = (__int128 *)(a1[3] + v3);
  v8 = *v7;
  *(_QWORD *)(a2 + 24) = *((_QWORD *)v7 + 2);
  *v2 = v8;
  v9 = a1[7];
  v10 = a1[6] + 24;
  a1[6] = v10;
  v5 = v9 >= v10;
  v11 = v9 - v10;
  if (!v5)
    v11 = 0;
  if (v11 <= 0x17)
  {
LABEL_10:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v12 = (__n128 *)(a1[3] + v10);
  result = *v12;
  *(_QWORD *)(a2 + 48) = v12[1].n128_u64[0];
  *(__n128 *)(a2 + 32) = result;
  a1[6] += 24;
  return result;
}

void sub_2240D9A18(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240D9A2C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_2240D9A40(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 result;
  std::logic_error *exception;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_11;
  v6 = (_OWORD *)*a2;
  *(_OWORD *)*a2 = *(_OWORD *)(a1[3] + v3);
  v7 = a1[7];
  v8 = a1[6] + 16;
  a1[6] = v8;
  v4 = v7 >= v8;
  v9 = v7 - v8;
  if (!v4)
    v9 = 0;
  if (v9 < 0x10)
    goto LABEL_11;
  v6[1] = *(_OWORD *)(a1[3] + v8);
  v10 = a1[7];
  v11 = a1[6] + 16;
  a1[6] = v11;
  v4 = v10 >= v11;
  v12 = v10 - v11;
  if (!v4)
    v12 = 0;
  if (v12 < 0x10)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  result = *(__n128 *)(a1[3] + v11);
  v6[2] = result;
  a1[6] += 16;
  return result;
}

void sub_2240D9B08(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_2240D9B1C(_QWORD *a1, _OWORD **a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 result;
  __int128 v19;
  std::logic_error *exception;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (!v4)
    v5 = 0;
  if (v5 <= 0x1F)
    goto LABEL_11;
  v6 = *a2;
  v7 = (_OWORD *)(a1[3] + v3);
  v8 = v7[1];
  *v6 = *v7;
  v6[1] = v8;
  v9 = a1[7];
  v10 = a1[6] + 32;
  a1[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 < 0x20)
    goto LABEL_11;
  v12 = (_OWORD *)(a1[3] + v10);
  v13 = v12[1];
  v6[2] = *v12;
  v6[3] = v13;
  v14 = a1[7];
  v15 = a1[6] + 32;
  a1[6] = v15;
  v4 = v14 >= v15;
  v16 = v14 - v15;
  if (!v4)
    v16 = 0;
  if (v16 < 0x20)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v17 = a1[3] + v15;
  result = *(__n128 *)v17;
  v19 = *(_OWORD *)(v17 + 16);
  v6[4] = *(_OWORD *)v17;
  v6[5] = v19;
  a1[6] += 32;
  return result;
}

void sub_2240D9BF0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240D9C04(int *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  unsigned int v7;
  __int128 *v8;
  unsigned int v9;

  v5 = *a1;
  if (*a1 == 2)
  {
    v9 = 1;
    (*(void (**)(uint64_t *, unsigned int *))(*a2 + 104))(a2, &v9);
    if (v9 >= 2)
    {
      v7 = v9;
      v8 = sub_2240D9CF0();
      sub_22455C3A8((std::string *)v8, v7, 1u);
    }
    v5 = *a1;
  }
  if (v5 <= 0)
  {
    sub_2240D9EEC(a2, a3);
  }
  else
  {
    (*(void (**)(uint64_t *))(*a2 + 16))(a2);
    sub_2240D9EEC(a2, a3);
    (*(void (**)(uint64_t *))(*a2 + 24))(a2);
  }
}

__int128 *sub_2240D9CF0()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790710);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790710))
    return &xmmword_2557906F8;
  v2 = (char *)sub_2240D9DCC();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_2557906F8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_255790708 = *((_QWORD *)v2 + 2);
    xmmword_2557906F8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557906F8, &dword_22314D000);
  __cxa_guard_release(&qword_255790710);
  return &xmmword_2557906F8;
}

void sub_2240D9DB4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790710);
  _Unwind_Resume(a1);
}

void *sub_2240D9DCC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_255790730);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255790730))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::Transform3Sample]", qword_255790718);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790718, &dword_22314D000);
    __cxa_guard_release(&qword_255790730);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_255790750);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_255790750))
    return &unk_255790738;
  sub_224573040((uint64_t)qword_255790718, (uint64_t)&unk_255790738);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_255790738, &dword_22314D000);
  __cxa_guard_release(&qword_255790750);
  return &unk_255790738;
}

void sub_2240D9EBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790750);
  _Unwind_Resume(a1);
}

void sub_2240D9ED4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790730);
  _Unwind_Resume(a1);
}

void sub_2240D9EEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void **v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;

  v4 = a2 + 8;
  v5 = *a1;
  v8 = a1[1];
  v9 = 1;
  (*(void (**)(uint64_t *, int *))(v5 + 104))(a1, &v9);
  if ((int)v8 < 1)
    sub_2240DA354(a1, v4);
  else
    sub_2240DA06C((int *)&v8, a1, v4);
  v6 = (void **)(a2 + 120);
  v10 = 0;
  (*(void (**)(uint64_t *, char *))(*a1 + 80))(a1, &v10);
  if (v10)
  {
    if (!*(_BYTE *)(a2 + 144))
    {
      *v6 = 0;
      *(_QWORD *)(a2 + 128) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      *(_BYTE *)(a2 + 144) = 1;
    }
    (*(void (**)(uint64_t *, uint64_t))(*a1 + 144))(a1, a2 + 120);
  }
  else if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
      operator delete(*v6);
    *(_BYTE *)(a2 + 144) = 0;
  }
  v7 = (void **)(a2 + 152);
  v11 = 0;
  (*(void (**)(uint64_t *, char *))(*a1 + 80))(a1, &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a2 + 176))
    {
      *v7 = 0;
      *(_QWORD *)(a2 + 160) = 0;
      *(_QWORD *)(a2 + 168) = 0;
      *(_BYTE *)(a2 + 176) = 1;
    }
    (*(void (**)(uint64_t *, uint64_t))(*a1 + 144))(a1, a2 + 152);
  }
  else if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v7);
    *(_BYTE *)(a2 + 176) = 0;
  }
}

void sub_2240DA06C(int *a1, _BYTE *a2, uint64_t a3)
{
  int v5;
  unsigned int v7;
  __int128 *v8;
  unsigned int v9;

  v5 = *a1;
  if (*a1 == 2)
  {
    v9 = 1;
    (*(void (**)(_BYTE *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v9);
    if (v9 >= 2)
    {
      v7 = v9;
      v8 = sub_2240DA158();
      sub_22455C3A8((std::string *)v8, v7, 1u);
    }
    v5 = *a1;
  }
  if (v5 <= 0)
  {
    sub_2240DA354(a2, a3);
  }
  else
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240DA354(a2, a3);
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
  }
}

__int128 *sub_2240DA158()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790770);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790770))
    return &xmmword_255790758;
  v2 = (char *)sub_2240DA234();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_255790758, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_255790768 = *((_QWORD *)v2 + 2);
    xmmword_255790758 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790758, &dword_22314D000);
  __cxa_guard_release(&qword_255790770);
  return &xmmword_255790758;
}

void sub_2240DA21C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790770);
  _Unwind_Resume(a1);
}

void *sub_2240DA234()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_255790790);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255790790))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::SE3Sample]", qword_255790778);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790778, &dword_22314D000);
    __cxa_guard_release(&qword_255790790);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2557907B0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2557907B0))
    return &unk_255790798;
  sub_224573040((uint64_t)qword_255790778, (uint64_t)&unk_255790798);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_255790798, &dword_22314D000);
  __cxa_guard_release(&qword_2557907B0);
  return &unk_255790798;
}

void sub_2240DA324(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557907B0);
  _Unwind_Resume(a1);
}

void sub_2240DA33C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790790);
  _Unwind_Resume(a1);
}

void sub_2240DA354(_BYTE *a1, uint64_t a2)
{
  _QWORD *v4;
  _OWORD *v5;
  _BYTE *v6;

  v6 = (_BYTE *)a2;
  sub_2240DA780(a1, &v6);
  switch(*(_BYTE *)a2)
  {
    case 1:
      v4 = (_QWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *v4 = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      (*(void (**)(_BYTE *, _QWORD *))(*(_QWORD *)a1 + 128))(a1, v4);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
      break;
    case 2:
      v5 = (_OWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *v5 = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      (*(void (**)(_BYTE *, _OWORD *))(*(_QWORD *)a1 + 136))(a1, v5);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
      break;
    case 4:
      sub_2240DA52C((uint64_t)a1, a2);
      break;
    case 5:
      sub_2240DA650((uint64_t)a1, a2);
      break;
    default:
      return;
  }
}

uint64_t sub_2240DA52C(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;

  v4 = (_OWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104))
  {
    v4[1] = 0u;
    v4[2] = 0u;
    *v4 = 0u;
    *(_DWORD *)(a2 + 104) = 0;
  }
  (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)a1 + 128))(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 36);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 44);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 52);
}

uint64_t sub_2240DA650(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;

  v4 = (_OWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104) != 1)
  {
    v4[4] = 0u;
    v4[5] = 0u;
    v4[2] = 0u;
    v4[3] = 0u;
    *v4 = 0u;
    v4[1] = 0u;
    *(_DWORD *)(a2 + 104) = 1;
  }
  (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)a1 + 136))(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 56);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 96);
}

void sub_2240DA780(_BYTE *a1, _BYTE **a2)
{
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  char v14;
  uint64_t v15;

  if ((a1[12] & 2) != 0)
  {
    __p[0] = 0;
    __p[1] = 0;
    v13 = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    v3 = SHIBYTE(v13);
    v4 = (char *)__p[0];
    v5 = operator new();
    v6 = v5;
    if (v3 >= 0)
      v7 = (char *)__p;
    else
      v7 = v4;
    sub_22456E918(v5, v7);
    v15 = v6;
    v14 = 0;
    sub_2241453B8((uint64_t *)v6, &v14);
    v8 = v14;
    v9 = MEMORY[0x24BEDB7F0];
    v10 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
    v11 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)(v6 + *(_QWORD *)(v10 - 24)) = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v6 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v6 + 16) = v11;
    if (*(char *)(v6 + 111) < 0)
      operator delete(*(void **)(v6 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v6 + 128);
    MEMORY[0x227684CE8](v6, 0x10B2C40EED050F3);
    **a2 = v8;
    if (SHIBYTE(v13) < 0)
      operator delete(__p[0]);
  }
  else
  {
    LOBYTE(__p[0]) = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 80))(a1, __p);
    **a2 = __p[0];
  }
}

void sub_2240DA8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  sub_22456E764(&a17);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240DA934@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC666D8;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a1 + 64);
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 112) = 0;
  *(_BYTE *)(v4 + 136) = 0;
  if (*(_BYTE *)(a1 + 136))
  {
    *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
    *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
    *(_QWORD *)(a1 + 120) = 0;
    *(_QWORD *)(a1 + 128) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_BYTE *)(v4 + 136) = 1;
  }
  *(_BYTE *)(v4 + 176) = 0;
  *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
  *(_BYTE *)(v4 + 224) = 0;
  if (*(_BYTE *)(a1 + 224))
  {
    *(_OWORD *)(v4 + 176) = *(_OWORD *)(a1 + 176);
    *(_QWORD *)(v4 + 192) = *(_QWORD *)(a1 + 192);
    *(_QWORD *)(a1 + 184) = 0;
    *(_QWORD *)(a1 + 192) = 0;
    *(_QWORD *)(a1 + 176) = 0;
    v6 = (unsigned __int128 *)(a1 + 208);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 208) = v7;
    *(_BYTE *)(v4 + 224) = 1;
  }
  *(_BYTE *)(v4 + 240) = 0;
  *(_BYTE *)(v4 + 264) = 0;
  if (*(_BYTE *)(a1 + 264))
  {
    *(_OWORD *)(v4 + 240) = *(_OWORD *)(a1 + 240);
    *(_QWORD *)(v4 + 256) = *(_QWORD *)(a1 + 256);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_BYTE *)(v4 + 264) = 1;
  }
  *(_QWORD *)v4 = &off_24EC66658;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_2240DAAE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2240DAAFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _BOOL4 v14;
  _BOOL4 v15;
  _QWORD v17[5];
  uint64_t *v18;
  _QWORD v19[5];
  _QWORD *v20;
  char v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];

  v33[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v28);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v28);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v28);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v22);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v22);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v22);
  }
  v19[0] = v28;
  v19[1] = &v29;
  v19[2] = &v30;
  v19[3] = &v31;
  v19[4] = &v32;
  v20 = v33;
  v17[0] = v22;
  v17[1] = &v23;
  v17[2] = &v24;
  v17[3] = &v25;
  v17[4] = &v26;
  v18 = &v27;
  if (!sub_224123BEC((uint64_t)&v21, v19, v17))
    goto LABEL_34;
  if (!*((_BYTE *)v20 + 24) || !*((_BYTE *)v18 + 24))
  {
    if ((*((_BYTE *)v20 + 24) != 0) == (*((_BYTE *)v18 + 24) != 0))
      goto LABEL_22;
LABEL_34:
    v11 = 0;
    goto LABEL_35;
  }
  v8 = (unsigned __int8 *)*v20;
  v9 = (unsigned __int8 *)v20[1];
  v10 = (unsigned __int8 *)*v18;
  if (&v9[-*v20] != (unsigned __int8 *)(v18[1] - *v18))
    goto LABEL_34;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_34;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_34;
  v11 = (*(_BYTE *)(a1 + 256) != 0) == (*(_BYTE *)(a2 + 256) != 0);
  if (*(_BYTE *)(a1 + 256) && *(_BYTE *)(a2 + 256))
  {
    v12 = *(unsigned int *)(a1 + 248);
    v13 = *(_DWORD *)(a2 + 248);
    v14 = v13 == -1;
    v15 = v13 != -1 && v13 == v12;
    if ((_DWORD)v12 == -1)
      v11 = v14;
    else
      v11 = v15;
    if ((_DWORD)v12 != -1 && v15)
    {
      v19[0] = v17;
      v11 = ((uint64_t (*)(_QWORD *, uint64_t, uint64_t))off_24EC66DF8[v12])(v19, a1 + 208, a2 + 208);
    }
  }
LABEL_35:
  sub_2231AD66C((uint64_t)v22);
  sub_2231AD66C((uint64_t)v28);
  return v11;
}

void sub_2240DAD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240DAD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

BOOL sub_2240DAD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  BOOL v4;
  _BOOL8 result;

  if (*(_QWORD *)a2 != *(_QWORD *)a3)
    return 0;
  v3 = *(unsigned __int8 *)(a3 + 16);
  if (*(_BYTE *)(a2 + 16))
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
  {
    if ((*(_BYTE *)(a2 + 16) != 0) == (v3 != 0))
      goto LABEL_10;
    return 0;
  }
  if (*(_QWORD *)(a2 + 8) != *(_QWORD *)(a3 + 8))
    return 0;
LABEL_10:
  result = (*(_BYTE *)(a2 + 32) != 0) == (*(_BYTE *)(a3 + 32) != 0);
  if (*(_BYTE *)(a2 + 32))
  {
    if (*(_BYTE *)(a3 + 32))
      return *(_QWORD *)(a2 + 24) == *(_QWORD *)(a3 + 24);
  }
  return result;
}

BOOL sub_2240DAE20(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  BOOL v3;

  if (*a2 != *a3 || *((_QWORD *)a2 + 1) != *((_QWORD *)a3 + 1))
    return 0;
  if (a2[24])
    v3 = a3[24] == 0;
  else
    v3 = 1;
  if (v3)
    return (a2[24] != 0) == (a3[24] != 0);
  else
    return *((_QWORD *)a2 + 2) == *((_QWORD *)a3 + 2);
}

void sub_2240DAE8C(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240DB204(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240DBF00(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240DC7F4(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240DD4F0(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240DDB24(&v9, (uint64_t)a1);
          else
            sub_2240DAFF0(&v8, a1);
        }
      }
    }
  }
}

uint64_t sub_2240DAFF0(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v13;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    LODWORD(v13) = 4;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    v9 = v13;
    if (v8 < 1)
    {
      sub_223BACE24((uint64_t)a2, v4, v13);
      goto LABEL_17;
    }
    if (v8 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BACE24((uint64_t)a2, v4, v9);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    LODWORD(v13) = 5;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    v11 = v13;
    if (v10 < 1)
    {
      sub_223BAC79C((uint64_t)a2, v4, v13);
      goto LABEL_17;
    }
    if (v10 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BAC79C((uint64_t)a2, v4, v11);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    LODWORD(v13) = 6;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    v7 = v13;
    if (v6 < 1)
    {
      sub_223BABEC8((uint64_t)a2, v4, v13);
      goto LABEL_17;
    }
    if (v6 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BABEC8((uint64_t)a2, v4, v7);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
LABEL_17:
  v13 = *((_QWORD *)a2 + 1);
  return sub_2240DE0BC((int *)&v13, a2, (__int128 *)(v3 + 200));
}

void sub_2240DB204(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  _OWORD v22[3];

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    *(_QWORD *)&v21 = "version";
    *((_QWORD *)&v21 + 1) = 7;
    LODWORD(v22[0]) = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, v22);
    sub_223B8F208(a2, v4, v22[0]);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      *(_QWORD *)&v21 = "version";
      *((_QWORD *)&v21 + 1) = 7;
      LODWORD(v22[0]) = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, v22);
      sub_223B8D388(a2, v4, v22[0]);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    *(_QWORD *)&v21 = "version";
    *((_QWORD *)&v21 + 1) = 7;
    LODWORD(v22[0]) = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, v22);
    sub_223B8E898(a2, v4, v22[0]);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  *(_QWORD *)&v21 = "version";
  *((_QWORD *)&v21 + 1) = 7;
  LODWORD(v22[0]) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, v22);
  v17 = v22[0];
  v18 = *(_OWORD *)(v3 + 216);
  v21 = *(_OWORD *)(v3 + 200);
  v22[0] = v18;
  v19 = *(_OWORD *)(v3 + 248);
  v22[1] = *(_OWORD *)(v3 + 232);
  v22[2] = v19;
  sub_2240DB514(a2, (unsigned __int8 *)&v21, v17);
  v20 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(a2 + 56) = v20 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240DB514(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  _BYTE *v8;
  _QWORD *v9;
  unsigned int v10;
  BOOL v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  std::runtime_error *exception;
  const char *v23;
  unint64_t v24;
  int v25;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "sync_type";
    v6 = a1 + 72;
    v8 = (_BYTE *)(a1 + 88);
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 9;
    v9 = (_QWORD *)(a1 + 80);
    if (!v7)
      *v8 = 1;
    v10 = *a2;
    goto LABEL_14;
  }
  v9 = (_QWORD *)(a1 + 80);
  v6 = a1 + 72;
  v8 = (_BYTE *)(a1 + 88);
  v10 = *a2;
  if (*(_BYTE *)(a1 + 88))
    v11 = *(_QWORD *)(a1 + 80) == 7;
  else
    v11 = 0;
  if (!v11
    || (**(_DWORD **)v6 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v6 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_14:
    LOBYTE(v23) = 6;
    v24 = v10;
    v13 = (unsigned __int8 *)sub_22453FEA0(a1);
    v14 = *v13;
    *v13 = 6;
    LOBYTE(v23) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v24;
    v24 = (unint64_t)v15;
    sub_22345337C((void ***)&v24, v14);
  }
  if (a3 < 2)
    return;
  v16 = *a2;
  if (!*a2)
    return;
  if (v16 != 2)
  {
    if (v16 != 1)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "invalid sync type");
      __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
    }
    if (!*((_DWORD *)a2 + 12))
    {
      v17 = (uint64_t)(a2 + 8);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v18 = *v8;
        *(_QWORD *)v6 = "value";
        *v9 = 5;
        if (!v18)
          *v8 = 1;
      }
      sub_22454024C(a1);
      v23 = "version";
      v24 = 7;
      v25 = 1;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v19 = *v8;
        *(_QWORD *)v6 = "version";
        *v9 = 7;
        if (!v19)
          *v8 = 1;
      }
      sub_224542048(a1, &v25);
      sub_2240DB7D0(a1, v17);
      v20 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(v20 - 8);
      *(_QWORD *)(a1 + 56) = v20 - 8;
      if (*(_BYTE *)(a1 + 88))
        *v8 = 0;
      return;
    }
LABEL_34:
    sub_22316DD70();
  }
  if (*((_DWORD *)a2 + 12) != 1)
    goto LABEL_34;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v21 = *v8;
    *(_QWORD *)v6 = "value";
    *v9 = 5;
    if (!v21)
      *v8 = 1;
  }
  sub_2240DBB40((uint64_t)&v23, a1, a2 + 8);
}

void sub_2240DB7A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240DB7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DB7D0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  _BYTE *v7;
  _QWORD *v8;
  BOOL v9;
  BOOL v10;
  unsigned __int8 *v11;
  int v12;
  void **v13;
  int v14;
  BOOL v15;
  unsigned __int8 *v16;
  int v17;
  void **v18;
  int v19;
  BOOL v20;
  unsigned __int8 *v21;
  int v22;
  void **v23;
  unsigned __int8 *v24;
  void **v25;
  char v26;
  void **v27;

  v4 = *(unsigned __int8 **)(a1 + 40);
  if (*v4 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "sync_command_id";
    v5 = a1 + 72;
    v7 = (_BYTE *)(a1 + 88);
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 15;
    v8 = (_QWORD *)(a1 + 80);
    if (!v6)
      *v7 = 1;
    goto LABEL_13;
  }
  v8 = (_QWORD *)(a1 + 80);
  v5 = a1 + 72;
  v7 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v9 = *(_QWORD *)(a1 + 80) == 7;
  else
    v9 = 0;
  if (!v9
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v10 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v10 = 0),
        !v10))
  {
LABEL_13:
    v27 = *(void ***)a2;
    v11 = (unsigned __int8 *)sub_22453FEA0(a1);
    v12 = *v11;
    *v11 = 6;
    v13 = (void **)*((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v27;
    v27 = v13;
    sub_22345337C(&v27, v12);
    v4 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v4 > 1u || (v14 = *v7, *(_QWORD *)v5 = "proceed_n", *v8 = 9, v14))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_17;
LABEL_25:
    v26 = 0;
    v27 = 0;
    v16 = (unsigned __int8 *)sub_22453FEA0(a1);
    goto LABEL_26;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 16))
    goto LABEL_25;
LABEL_17:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v15 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v15 = 0),
        !v15))
  {
    v26 = 6;
    v27 = *(void ***)(a2 + 8);
    v16 = (unsigned __int8 *)sub_22453FEA0(a1);
LABEL_26:
    v17 = *v16;
    *v16 = v26;
    v18 = (void **)*((_QWORD *)v16 + 1);
    *((_QWORD *)v16 + 1) = v27;
    v27 = v18;
    sub_22345337C(&v27, v17);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v19 = *v7, *(_QWORD *)v5 = "proceed_until", *v8 = 13, v19))
  {
    if (*(_BYTE *)(a2 + 32))
      goto LABEL_30;
LABEL_38:
    v27 = 0;
    v24 = (unsigned __int8 *)sub_22453FEA0(a1);
    v22 = *v24;
    *v24 = 0;
    v25 = (void **)*((_QWORD *)v24 + 1);
    *((_QWORD *)v24 + 1) = v27;
    v27 = v25;
    goto LABEL_39;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 32))
    goto LABEL_38;
LABEL_30:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v20 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v20 = 0),
        !v20))
  {
    v27 = *(void ***)(a2 + 24);
    v21 = (unsigned __int8 *)sub_22453FEA0(a1);
    v22 = *v21;
    *v21 = 6;
    v23 = (void **)*((_QWORD *)v21 + 1);
    *((_QWORD *)v21 + 1) = v27;
    v27 = v23;
LABEL_39:
    sub_22345337C(&v27, v22);
  }
}

void sub_2240DBAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DBAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DBAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DBB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DBB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DBB40(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  unsigned __int8 *v6;
  const char **v7;
  int v8;
  _BYTE *v9;
  _QWORD *v10;
  BOOL v11;
  unsigned __int8 *v12;
  int v13;
  void **v14;
  int v15;
  const char *v16;
  int v17;
  int v18;
  unsigned __int8 *v20;
  int v21;
  void **v22;
  int v23;
  BOOL v24;
  unsigned __int8 *v25;
  int v26;
  void **v27;
  unsigned __int8 *v28;
  void **v29;
  uint64_t v30;
  unint64_t v31;
  int v32;

  sub_22454024C(a2);
  v31 = 7;
  v32 = 1;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224542048(a2, &v32);
    v6 = *(unsigned __int8 **)(a2 + 40);
    if (*v6 <= 1u)
      goto LABEL_4;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224542048(a2, &v32);
    v6 = *(unsigned __int8 **)(a2 + 40);
    if (*v6 <= 1u)
    {
LABEL_4:
      *(_QWORD *)(a2 + 72) = "status";
      v7 = (const char **)(a2 + 72);
      v9 = (_BYTE *)(a2 + 88);
      v8 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 80) = 6;
      v10 = (_QWORD *)(a2 + 80);
      if (!v8)
        *v9 = 1;
      goto LABEL_13;
    }
  }
  v10 = (_QWORD *)(a2 + 80);
  v7 = (const char **)(a2 + 72);
  v9 = (_BYTE *)(a2 + 88);
  if (!*(_BYTE *)(a2 + 88)
    || *(_QWORD *)(a2 + 80) != 7
    || (*(_DWORD *)*v7 == *(_DWORD *)"version" ? (v11 = *(_DWORD *)(*v7 + 3) == *(_DWORD *)"sion") : (v11 = 0), !v11))
  {
LABEL_13:
    v31 = *a3;
    v12 = (unsigned __int8 *)sub_22453FEA0(a2);
    v13 = *v12;
    *v12 = 6;
    v14 = (void **)*((_QWORD *)v12 + 1);
    *((_QWORD *)v12 + 1) = v31;
    v31 = (unint64_t)v14;
    sub_22345337C((void ***)&v31, v13);
    v6 = *(unsigned __int8 **)(a2 + 40);
  }
  v15 = *v9;
  if (*v6 > 1u)
  {
    if (!*v9 || *v10 != 7)
    {
LABEL_25:
      v31 = *((_QWORD *)a3 + 1);
      v20 = (unsigned __int8 *)sub_22453FEA0(a2);
      v21 = *v20;
      *v20 = 6;
      v22 = (void **)*((_QWORD *)v20 + 1);
      *((_QWORD *)v20 + 1) = v31;
      v31 = (unint64_t)v22;
      sub_22345337C((void ***)&v31, v21);
      v6 = *(unsigned __int8 **)(a2 + 40);
      goto LABEL_26;
    }
    v16 = *v7;
  }
  else
  {
    *v7 = "sync_id";
    *v10 = 7;
    if (!v15)
      *v9 = 1;
    v16 = "sync_id";
  }
  v17 = *(_DWORD *)v16;
  v18 = *(_DWORD *)(v16 + 3);
  if (v17 != *(_DWORD *)"version" || v18 != *(_DWORD *)"sion")
    goto LABEL_25;
LABEL_26:
  if (*v6 > 1u || (v23 = *v9, *v7 = "acknowledge_until", *v10 = 17, v23))
  {
    if (a3[24])
      goto LABEL_29;
LABEL_37:
    v31 = 0;
    v28 = (unsigned __int8 *)sub_22453FEA0(a2);
    v26 = *v28;
    *v28 = 0;
    v29 = (void **)*((_QWORD *)v28 + 1);
    *((_QWORD *)v28 + 1) = v31;
    v31 = (unint64_t)v29;
    goto LABEL_38;
  }
  *v9 = 1;
  if (!a3[24])
    goto LABEL_37;
LABEL_29:
  if (!*v9
    || *v10 != 7
    || (*(_DWORD *)*v7 == *(_DWORD *)"version" ? (v24 = *(_DWORD *)(*v7 + 3) == *(_DWORD *)"sion") : (v24 = 0), !v24))
  {
    v31 = *((_QWORD *)a3 + 2);
    v25 = (unsigned __int8 *)sub_22453FEA0(a2);
    v26 = *v25;
    *v25 = 6;
    v27 = (void **)*((_QWORD *)v25 + 1);
    *((_QWORD *)v25 + 1) = v31;
    v31 = (unint64_t)v27;
LABEL_38:
    sub_22345337C((void ***)&v31, v26);
  }
  v30 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 56) = v30 - 8;
  if (*(_BYTE *)(a2 + 88))
    *v9 = 0;
}

void sub_2240DBEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DBEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DBED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DBEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DBF00(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[4];

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      *(_QWORD *)&v22[0] = v7 + 16;
      sub_22455A7EC((uint64_t **)v22, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)v22, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      *(_QWORD *)&v22[0] = v8 + 16;
      sub_22455A7EC((uint64_t **)v22, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)v22, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      *(_QWORD *)&v22[0] = v6 + 16;
      sub_22455A7EC((uint64_t **)v22, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)v22, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    *(_QWORD *)&v22[0] = v14 + 16;
    sub_22455A7EC((uint64_t **)v22, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)v22, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  v15 = *(_OWORD *)(v3 + 216);
  v22[0] = *(_OWORD *)(v3 + 200);
  v22[1] = v15;
  v16 = *(_OWORD *)(v3 + 248);
  v22[2] = *(_OWORD *)(v3 + 232);
  v22[3] = v16;
  sub_2240DC190(a2, (char *)v22, 2u);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(*(_QWORD *)(v17 + 88) - 8);
  sub_224554D6C((uint64_t *)(v17 + 48), *(_QWORD *)(v17 + 16) - v18 - 9);
  v19 = *(_QWORD *)(v17 + 48);
  if (v19)
    memmove((void *)(*(_QWORD *)(v17 + 24) + v18), *(const void **)(v17 + 56), v19);
  *(_QWORD *)(v17 + 48) = 0;
  v20 = *(_QWORD *)(v17 + 80);
  v21 = *(_QWORD *)(v17 + 88) - 8;
  *(_QWORD *)(v17 + 88) = v21;
  if (v20 == v21)
  {
    std::ostream::write();
    if (*(_BYTE *)(v17 + 40))
    {
      free(*(void **)(v17 + 24));
      *(_BYTE *)(v17 + 40) = 0;
    }
  }
}

void sub_2240DC190(uint64_t a1, char *a2, unsigned int a3)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  std::runtime_error *exception;
  uint64_t *v19;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v7 + 40))
  {
    v19 = (uint64_t *)(v7 + 16);
    sub_224559C04(&v19, v6);
    if (a3 < 2)
      return;
  }
  else if (v6 < 0)
  {
    LOBYTE(v19) = -52;
    BYTE1(v19) = v6;
    std::ostream::write();
    if (a3 < 2)
      return;
  }
  else
  {
    LOBYTE(v19) = *a2;
    std::ostream::write();
    if (a3 < 2)
      return;
  }
  v8 = *a2;
  if (*a2)
  {
    if (v8 == 2)
    {
      if (*((_DWORD *)a2 + 12) == 1)
      {
        v11 = a2 + 8;
        v12 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v12 + 40))
        {
          v19 = (uint64_t *)(v12 + 16);
          sub_22455A7EC(&v19, 1u);
        }
        else
        {
          sub_22455AA60((uint64_t)&v19, v12 + 8);
        }
        sub_2240DC5E4((uint64_t)&v19, a1, v11);
        return;
      }
    }
    else
    {
      if (v8 != 1)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "invalid sync type");
        __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
      if (!*((_DWORD *)a2 + 12))
      {
        v9 = (uint64_t)(a2 + 8);
        v10 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v10 + 40))
        {
          v19 = (uint64_t *)(v10 + 16);
          sub_22455A7EC(&v19, 1u);
        }
        else
        {
          sub_22455AA60((uint64_t)&v19, v10 + 8);
        }
        sub_224555278(*(_QWORD *)(a1 + 24));
        sub_2240DC3E0(a1, v9);
        v13 = *(_QWORD *)(a1 + 24);
        v14 = *(_QWORD *)(*(_QWORD *)(v13 + 88) - 8);
        sub_224554D6C((uint64_t *)(v13 + 48), *(_QWORD *)(v13 + 16) - v14 - 9);
        v15 = *(_QWORD *)(v13 + 48);
        if (v15)
          memmove((void *)(*(_QWORD *)(v13 + 24) + v14), *(const void **)(v13 + 56), v15);
        *(_QWORD *)(v13 + 48) = 0;
        v16 = *(_QWORD *)(v13 + 80);
        v17 = *(_QWORD *)(v13 + 88) - 8;
        *(_QWORD *)(v13 + 88) = v17;
        if (v16 == v17)
        {
          std::ostream::write();
          if (*(_BYTE *)(v13 + 40))
          {
            free(*(void **)(v13 + 24));
            *(_BYTE *)(v13 + 40) = 0;
          }
        }
        return;
      }
    }
    sub_22316DD70();
  }
}

void sub_2240DC3CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *sub_2240DC3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;

  v4 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v4 + 40))
  {
    v12 = (uint64_t *)(v4 + 16);
    sub_22455B1CC(&v12, *(_QWORD *)a2);
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_3;
  }
  else
  {
    sub_22455B4D4();
    if (*(_BYTE *)(a2 + 16))
    {
LABEL_3:
      v5 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v5 + 40))
      {
        v12 = (uint64_t *)(v5 + 16);
        sub_224559C04(&v12, 1);
        v6 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v6 + 40))
          goto LABEL_5;
      }
      else
      {
        LOBYTE(v12) = 1;
        std::ostream::write();
        v6 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v6 + 40))
        {
LABEL_5:
          v12 = (uint64_t *)(v6 + 16);
          sub_22455B1CC(&v12, *(_QWORD *)(a2 + 8));
          if (!*(_BYTE *)(a2 + 32))
            goto LABEL_19;
LABEL_13:
          v8 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v8 + 40))
          {
            v12 = (uint64_t *)(v8 + 16);
            sub_224559C04(&v12, 1);
            v9 = *(_QWORD *)(a1 + 24);
            if (*(_BYTE *)(v9 + 40))
            {
LABEL_15:
              v12 = (uint64_t *)(v9 + 16);
              return sub_22455B1CC(&v12, *(_QWORD *)(a2 + 24));
            }
          }
          else
          {
            LOBYTE(v12) = 1;
            std::ostream::write();
            v9 = *(_QWORD *)(a1 + 24);
            if (*(_BYTE *)(v9 + 40))
              goto LABEL_15;
          }
          return (char *)sub_22455B4D4();
        }
      }
      sub_22455B4D4();
      if (!*(_BYTE *)(a2 + 32))
        goto LABEL_19;
      goto LABEL_13;
    }
  }
  v7 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(v7 + 40))
  {
    LOBYTE(v12) = 0;
    std::ostream::write();
    if (!*(_BYTE *)(a2 + 32))
      goto LABEL_19;
    goto LABEL_13;
  }
  v12 = (uint64_t *)(v7 + 16);
  sub_224559C04(&v12, 0);
  if (*(_BYTE *)(a2 + 32))
    goto LABEL_13;
LABEL_19:
  v11 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v11 + 40))
  {
    v12 = (uint64_t *)(v11 + 16);
    return sub_224559C04(&v12, 0);
  }
  else
  {
    LOBYTE(v12) = 0;
    return (char *)std::ostream::write();
  }
}

void sub_2240DC5E4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  sub_224555278(*(_QWORD *)(a2 + 24));
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    v16 = (uint64_t *)(v5 + 16);
    sub_224559C04(&v16, *a3);
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
      goto LABEL_3;
LABEL_13:
    sub_22455B4D4();
    if (a3[24])
      goto LABEL_4;
LABEL_14:
    v10 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v10 + 40))
    {
      v16 = (uint64_t *)(v10 + 16);
      sub_224559C04(&v16, 0);
    }
    else
    {
      LOBYTE(v16) = 0;
      std::ostream::write();
    }
    goto LABEL_17;
  }
  v9 = *a3;
  if (v9 < 0)
  {
    LOBYTE(v16) = -52;
    BYTE1(v16) = v9;
    std::ostream::write();
    v6 = *(_QWORD *)(a2 + 24);
    if (!*(_BYTE *)(v6 + 40))
      goto LABEL_13;
  }
  else
  {
    LOBYTE(v16) = *a3;
    std::ostream::write();
    v6 = *(_QWORD *)(a2 + 24);
    if (!*(_BYTE *)(v6 + 40))
      goto LABEL_13;
  }
LABEL_3:
  v16 = (uint64_t *)(v6 + 16);
  sub_22455B1CC(&v16, *((_QWORD *)a3 + 1));
  if (!a3[24])
    goto LABEL_14;
LABEL_4:
  v7 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v7 + 40))
  {
    v16 = (uint64_t *)(v7 + 16);
    sub_224559C04(&v16, 1);
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
LABEL_6:
      v16 = (uint64_t *)(v8 + 16);
      sub_22455B1CC(&v16, *((_QWORD *)a3 + 2));
      goto LABEL_17;
    }
  }
  else
  {
    LOBYTE(v16) = 1;
    std::ostream::write();
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
      goto LABEL_6;
  }
  sub_22455B4D4();
LABEL_17:
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 88) - 8);
  sub_224554D6C((uint64_t *)(v11 + 48), *(_QWORD *)(v11 + 16) - v12 - 9);
  v13 = *(_QWORD *)(v11 + 48);
  if (v13)
    memmove((void *)(*(_QWORD *)(v11 + 24) + v12), *(const void **)(v11 + 56), v13);
  *(_QWORD *)(v11 + 48) = 0;
  v14 = *(_QWORD *)(v11 + 80);
  v15 = *(_QWORD *)(v11 + 88) - 8;
  *(_QWORD *)(v11 + 88) = v15;
  if (v14 == v15)
  {
    std::ostream::write();
    if (*(_BYTE *)(v11 + 40))
    {
      free(*(void **)(v11 + 24));
      *(_BYTE *)(v11 + 40) = 0;
    }
  }
}

void sub_2240DC7F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  _OWORD v22[3];

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    *(_QWORD *)&v21 = "version";
    *((_QWORD *)&v21 + 1) = 7;
    LODWORD(v22[0]) = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, v22);
    sub_223B9970C(a2, v4, v22[0]);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      *(_QWORD *)&v21 = "version";
      *((_QWORD *)&v21 + 1) = 7;
      LODWORD(v22[0]) = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, v22);
      sub_223B98294(a2, v4, v22[0]);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    *(_QWORD *)&v21 = "version";
    *((_QWORD *)&v21 + 1) = 7;
    LODWORD(v22[0]) = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, v22);
    sub_223B98FC8(a2, v4, v22[0]);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  *(_QWORD *)&v21 = "version";
  *((_QWORD *)&v21 + 1) = 7;
  LODWORD(v22[0]) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, v22);
  v17 = v22[0];
  v18 = *(_OWORD *)(v3 + 216);
  v21 = *(_OWORD *)(v3 + 200);
  v22[0] = v18;
  v19 = *(_OWORD *)(v3 + 248);
  v22[1] = *(_OWORD *)(v3 + 232);
  v22[2] = v19;
  sub_2240DCB04(a2, (unsigned __int8 *)&v21, v17);
  v20 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(a2 + 56) = v20 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240DCB04(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  _BYTE *v8;
  _QWORD *v9;
  unsigned int v10;
  BOOL v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  std::runtime_error *exception;
  const char *v23;
  uint64_t v24;
  int v25;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "sync_type";
    v6 = a1 + 72;
    v8 = (_BYTE *)(a1 + 88);
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 9;
    v9 = (_QWORD *)(a1 + 80);
    if (!v7)
      *v8 = 1;
    v10 = *a2;
    goto LABEL_14;
  }
  v9 = (_QWORD *)(a1 + 80);
  v6 = a1 + 72;
  v8 = (_BYTE *)(a1 + 88);
  v10 = *a2;
  if (*(_BYTE *)(a1 + 88))
    v11 = *(_QWORD *)(a1 + 80) == 7;
  else
    v11 = 0;
  if (!v11
    || (**(_DWORD **)v6 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v6 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_14:
    LOBYTE(v23) = 6;
    v24 = v10;
    v13 = (unsigned __int8 *)sub_22453F8B8(a1);
    v14 = *v13;
    *v13 = 6;
    LOBYTE(v23) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v24;
    v24 = v15;
    sub_223454278(&v24, v14);
  }
  if (a3 < 2)
    return;
  v16 = *a2;
  if (!*a2)
    return;
  if (v16 != 2)
  {
    if (v16 != 1)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "invalid sync type");
      __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
    }
    if (!*((_DWORD *)a2 + 12))
    {
      v17 = (uint64_t)(a2 + 8);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v18 = *v8;
        *(_QWORD *)v6 = "value";
        *v9 = 5;
        if (!v18)
          *v8 = 1;
      }
      sub_22453FAE0(a1);
      v23 = "version";
      v24 = 7;
      v25 = 1;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v19 = *v8;
        *(_QWORD *)v6 = "version";
        *v9 = 7;
        if (!v19)
          *v8 = 1;
      }
      sub_224540500(a1, &v25);
      sub_2240DCDC0(a1, v17);
      v20 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(v20 - 8);
      *(_QWORD *)(a1 + 56) = v20 - 8;
      if (*(_BYTE *)(a1 + 88))
        *v8 = 0;
      return;
    }
LABEL_34:
    sub_22316DD70();
  }
  if (*((_DWORD *)a2 + 12) != 1)
    goto LABEL_34;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v21 = *v8;
    *(_QWORD *)v6 = "value";
    *v9 = 5;
    if (!v21)
      *v8 = 1;
  }
  sub_2240DD130((uint64_t)&v23, a1, a2 + 8);
}

void sub_2240DCD94(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240DCDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DCDC0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  _BYTE *v7;
  _QWORD *v8;
  BOOL v9;
  BOOL v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  unsigned __int8 *v16;
  int v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  unsigned __int8 *v21;
  int v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v4 = *(unsigned __int8 **)(a1 + 40);
  if (*v4 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "sync_command_id";
    v5 = a1 + 72;
    v7 = (_BYTE *)(a1 + 88);
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 15;
    v8 = (_QWORD *)(a1 + 80);
    if (!v6)
      *v7 = 1;
    goto LABEL_13;
  }
  v8 = (_QWORD *)(a1 + 80);
  v5 = a1 + 72;
  v7 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v9 = *(_QWORD *)(a1 + 80) == 7;
  else
    v9 = 0;
  if (!v9
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v10 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v10 = 0),
        !v10))
  {
LABEL_13:
    v27 = *(_QWORD *)a2;
    v11 = (unsigned __int8 *)sub_22453F8B8(a1);
    v12 = *v11;
    *v11 = 6;
    v13 = *((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v27;
    v27 = v13;
    sub_223454278(&v27, v12);
    v4 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v4 > 1u || (v14 = *v7, *(_QWORD *)v5 = "proceed_n", *v8 = 9, v14))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_17;
LABEL_25:
    v26 = 0;
    v27 = 0;
    v16 = (unsigned __int8 *)sub_22453F8B8(a1);
    goto LABEL_26;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 16))
    goto LABEL_25;
LABEL_17:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v15 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v15 = 0),
        !v15))
  {
    v26 = 6;
    v27 = *(_QWORD *)(a2 + 8);
    v16 = (unsigned __int8 *)sub_22453F8B8(a1);
LABEL_26:
    v17 = *v16;
    *v16 = v26;
    v18 = *((_QWORD *)v16 + 1);
    *((_QWORD *)v16 + 1) = v27;
    v27 = v18;
    sub_223454278(&v27, v17);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v19 = *v7, *(_QWORD *)v5 = "proceed_until", *v8 = 13, v19))
  {
    if (*(_BYTE *)(a2 + 32))
      goto LABEL_30;
LABEL_38:
    v27 = 0;
    v24 = (unsigned __int8 *)sub_22453F8B8(a1);
    v22 = *v24;
    *v24 = 0;
    v25 = *((_QWORD *)v24 + 1);
    *((_QWORD *)v24 + 1) = v27;
    v27 = v25;
    goto LABEL_39;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 32))
    goto LABEL_38;
LABEL_30:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v20 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v20 = 0),
        !v20))
  {
    v27 = *(_QWORD *)(a2 + 24);
    v21 = (unsigned __int8 *)sub_22453F8B8(a1);
    v22 = *v21;
    *v21 = 6;
    v23 = *((_QWORD *)v21 + 1);
    *((_QWORD *)v21 + 1) = v27;
    v27 = v23;
LABEL_39:
    sub_223454278(&v27, v22);
  }
}

void sub_2240DD0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DD0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DD0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DD100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DD118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240DD130(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  unsigned __int8 *v6;
  const char **v7;
  int v8;
  _BYTE *v9;
  _QWORD *v10;
  BOOL v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  int v15;
  const char *v16;
  int v17;
  int v18;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  unsigned __int8 *v25;
  int v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  sub_22453FAE0(a2);
  v31 = 7;
  v32 = 1;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224540500(a2, &v32);
    v6 = *(unsigned __int8 **)(a2 + 40);
    if (*v6 <= 1u)
      goto LABEL_4;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224540500(a2, &v32);
    v6 = *(unsigned __int8 **)(a2 + 40);
    if (*v6 <= 1u)
    {
LABEL_4:
      *(_QWORD *)(a2 + 72) = "status";
      v7 = (const char **)(a2 + 72);
      v9 = (_BYTE *)(a2 + 88);
      v8 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 80) = 6;
      v10 = (_QWORD *)(a2 + 80);
      if (!v8)
        *v9 = 1;
      goto LABEL_13;
    }
  }
  v10 = (_QWORD *)(a2 + 80);
  v7 = (const char **)(a2 + 72);
  v9 = (_BYTE *)(a2 + 88);
  if (!*(_BYTE *)(a2 + 88)
    || *(_QWORD *)(a2 + 80) != 7
    || (*(_DWORD *)*v7 == *(_DWORD *)"version" ? (v11 = *(_DWORD *)(*v7 + 3) == *(_DWORD *)"sion") : (v11 = 0), !v11))
  {
LABEL_13:
    v31 = *a3;
    v12 = (unsigned __int8 *)sub_22453F8B8(a2);
    v13 = *v12;
    *v12 = 6;
    v14 = *((_QWORD *)v12 + 1);
    *((_QWORD *)v12 + 1) = v31;
    v31 = v14;
    sub_223454278(&v31, v13);
    v6 = *(unsigned __int8 **)(a2 + 40);
  }
  v15 = *v9;
  if (*v6 > 1u)
  {
    if (!*v9 || *v10 != 7)
    {
LABEL_25:
      v31 = *((_QWORD *)a3 + 1);
      v20 = (unsigned __int8 *)sub_22453F8B8(a2);
      v21 = *v20;
      *v20 = 6;
      v22 = *((_QWORD *)v20 + 1);
      *((_QWORD *)v20 + 1) = v31;
      v31 = v22;
      sub_223454278(&v31, v21);
      v6 = *(unsigned __int8 **)(a2 + 40);
      goto LABEL_26;
    }
    v16 = *v7;
  }
  else
  {
    *v7 = "sync_id";
    *v10 = 7;
    if (!v15)
      *v9 = 1;
    v16 = "sync_id";
  }
  v17 = *(_DWORD *)v16;
  v18 = *(_DWORD *)(v16 + 3);
  if (v17 != *(_DWORD *)"version" || v18 != *(_DWORD *)"sion")
    goto LABEL_25;
LABEL_26:
  if (*v6 > 1u || (v23 = *v9, *v7 = "acknowledge_until", *v10 = 17, v23))
  {
    if (a3[24])
      goto LABEL_29;
LABEL_37:
    v31 = 0;
    v28 = (unsigned __int8 *)sub_22453F8B8(a2);
    v26 = *v28;
    *v28 = 0;
    v29 = *((_QWORD *)v28 + 1);
    *((_QWORD *)v28 + 1) = v31;
    v31 = v29;
    goto LABEL_38;
  }
  *v9 = 1;
  if (!a3[24])
    goto LABEL_37;
LABEL_29:
  if (!*v9
    || *v10 != 7
    || (*(_DWORD *)*v7 == *(_DWORD *)"version" ? (v24 = *(_DWORD *)(*v7 + 3) == *(_DWORD *)"sion") : (v24 = 0), !v24))
  {
    v31 = *((_QWORD *)a3 + 2);
    v25 = (unsigned __int8 *)sub_22453F8B8(a2);
    v26 = *v25;
    *v25 = 6;
    v27 = *((_QWORD *)v25 + 1);
    *((_QWORD *)v25 + 1) = v31;
    v31 = v27;
LABEL_38:
    sub_223454278(&v31, v26);
  }
  v30 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 56) = v30 - 8;
  if (*(_BYTE *)(a2 + 88))
    *v9 = 0;
}

void sub_2240DD490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DD4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DD4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240DD4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240DD4F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *result;
  _OWORD v20[4];

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      LOBYTE(v20[0]) = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        LOBYTE(v20[0]) = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)v20, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      LOBYTE(v20[0]) = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)v20, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      LOBYTE(v20[0]) = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  LOBYTE(v20[0]) = v7;
  sub_2231813E8(v11, (uint64_t)v20, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    LOBYTE(v20[0]) = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)v20, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  v14 = *(_OWORD *)(v3 + 216);
  v20[0] = *(_OWORD *)(v3 + 200);
  v20[1] = v14;
  v15 = *(_OWORD *)(v3 + 248);
  v20[2] = *(_OWORD *)(v3 + 232);
  v20[3] = v15;
  sub_2240DD718(a2, (unsigned __int8 *)v20, 2u);
  v16 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v17 = *(_QWORD **)(a2 + 24);
    LOBYTE(v20[0]) = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v17, (uint64_t)v20, 1);
  }
  v18 = *(_QWORD **)(a2 + 24);
  LOBYTE(v20[0]) = v16;
  result = sub_2231813E8(v18, (uint64_t)v20, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240DD718(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  int v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  std::runtime_error *exception;
  unsigned __int8 v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v13 = *a2;
  sub_22454F564(a1, &v13);
  if (a3 < 2)
    return;
  v6 = *a2;
  if (!*a2)
    return;
  if (v6 == 2)
  {
    if (*((_DWORD *)a2 + 12) == 1)
    {
      sub_2240DD9CC((uint64_t)&v14, a1, a2 + 8);
      return;
    }
LABEL_14:
    sub_22316DD70();
  }
  if (v6 != 1)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "invalid sync type");
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  if (*((_DWORD *)a2 + 12))
    goto LABEL_14;
  v7 = (uint64_t)(a2 + 8);
  if (*(_QWORD *)(a1 + 40))
  {
    v8 = *(_QWORD **)(a1 + 24);
    v15 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v8, (uint64_t)&v15, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_2240DD88C(a1, v7);
  v9 = *(_BYTE *)(a1 + 34);
  if (*(_QWORD *)(a1 + 40))
  {
    v10 = *(_QWORD **)(a1 + 24);
    v16 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v10, (uint64_t)&v16, 1);
  }
  v11 = *(_QWORD **)(a1 + 24);
  v17 = v9;
  sub_2231813E8(v11, (uint64_t)&v17, 1);
  ++*(_QWORD *)(a1 + 40);
}

void sub_2240DD878(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240DD88C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  char v11;
  char v12;
  char v13;

  if (*(_QWORD *)(a1 + 40))
  {
    v4 = *(_QWORD **)(a1 + 24);
    v11 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v4, (uint64_t)&v11, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  if (*(_BYTE *)(a2 + 16))
  {
    v8 = 1;
    sub_22454F564(a1, &v8);
    if (*(_QWORD *)(a1 + 40))
    {
      v5 = *(_QWORD **)(a1 + 24);
      v12 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v5, (uint64_t)&v12, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a1 + 40);
    if (*(_BYTE *)(a2 + 32))
      goto LABEL_7;
LABEL_11:
    v9 = 0;
    sub_22454F564(a1, &v9);
    return;
  }
  v7 = 0;
  sub_22454F564(a1, &v7);
  if (!*(_BYTE *)(a2 + 32))
    goto LABEL_11;
LABEL_7:
  v10 = 1;
  sub_22454F564(a1, &v10);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    v13 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)&v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
}

_QWORD *sub_2240DD9CC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *result;
  unsigned __int8 v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (*(_QWORD *)(a2 + 40))
  {
    v5 = *(_QWORD **)(a2 + 24);
    v15 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v5, (uint64_t)&v15, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_22454F564(a2, a3);
  if (*(_QWORD *)(a2 + 40))
  {
    v6 = *(_QWORD **)(a2 + 24);
    v16 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v6, (uint64_t)&v16, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  if (!a3[24])
  {
    v13 = 0;
    sub_22454F564(a2, &v13);
    v9 = *(_BYTE *)(a2 + 34);
    if (!*(_QWORD *)(a2 + 40))
      goto LABEL_10;
    goto LABEL_9;
  }
  v14 = 1;
  sub_22454F564(a2, &v14);
  if (*(_QWORD *)(a2 + 40))
  {
    v7 = *(_QWORD **)(a2 + 24);
    v17 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v7, (uint64_t)&v17, 1);
  }
  std::ostream::operator<<();
  v8 = *(_QWORD *)(a2 + 40) + 1;
  *(_QWORD *)(a2 + 40) = v8;
  v9 = *(_BYTE *)(a2 + 34);
  if (v8)
  {
LABEL_9:
    v10 = *(_QWORD **)(a2 + 24);
    v18 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v10, (uint64_t)&v18, 1);
  }
LABEL_10:
  v11 = *(_QWORD **)(a2 + 24);
  v19 = v9;
  result = sub_2231813E8(v11, (uint64_t)&v19, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

char *sub_2240DDB24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  __int128 v11;
  __int128 v12;
  char *result;
  uint64_t v14;
  _OWORD v15[4];

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    LODWORD(v15[0]) = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v15, (char *)v15 + 4, 4);
    v7 = v15[0];
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    LODWORD(v15[0]) = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v15, (char *)v15 + 4, 4);
    v8 = v15[0];
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    LODWORD(v15[0]) = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v15, (char *)v15 + 4, 4);
    v6 = v15[0];
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  LODWORD(v15[0]) = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v15, (char *)v15 + 4, 4);
  v10 = v15[0];
  sub_2244FF590((_QWORD *)a2);
  v11 = *(_OWORD *)(v3 + 216);
  v15[0] = *(_OWORD *)(v3 + 200);
  v15[1] = v11;
  v12 = *(_OWORD *)(v3 + 248);
  v15[2] = *(_OWORD *)(v3 + 232);
  v15[3] = v12;
  result = sub_2240DDCF0(a2, (char *)v15, v10);
  v14 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v14 + 10) = *(_QWORD *)(a2 + 32) - v14 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  return result;
}

char *sub_2240DDCF0(uint64_t a1, char *a2, unsigned int a3)
{
  uint64_t v6;
  char *result;
  int v8;
  uint64_t v9;
  std::runtime_error *exception;
  char __src;
  int v12;
  char v13[3];
  char v14;
  int v15;
  uint64_t v16;

  __src = *a2;
  v6 = a1 + 24;
  result = sub_224501B60(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v12, 1);
  if (a3 >= 2)
  {
    v8 = *a2;
    if (*a2)
    {
      if (v8 == 2)
      {
        if (*((_DWORD *)a2 + 12) == 1)
        {
          v15 = 1;
          sub_224501B60(v6, *(char **)(a1 + 32), (char *)&v15, (char *)&v16, 4);
          return sub_2240DDFB8((uint64_t)&v14, a1, a2 + 8);
        }
      }
      else
      {
        if (v8 != 1)
        {
          exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
          std::runtime_error::runtime_error(exception, "invalid sync type");
          __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
        }
        if (!*((_DWORD *)a2 + 12))
        {
          v12 = 1;
          sub_224501B60(v6, *(char **)(a1 + 32), (char *)&v12, v13, 4);
          sub_2244FF590((_QWORD *)a1);
          result = sub_2240DDE80(a1, a2 + 8);
          v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
          *(_QWORD *)(v9 + 10) = *(_QWORD *)(a1 + 32) - v9 - 18;
          *(_QWORD *)(a1 + 56) -= 8;
          return result;
        }
      }
      sub_22316DD70();
    }
  }
  return result;
}

void sub_2240DDE6C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *sub_2240DDE80(uint64_t a1, char *__src)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int64_t v10;
  char v12;
  char __srca;
  char v14;
  char v15;
  uint64_t v16;

  v4 = a1 + 24;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), __src, __src + 8, 8);
  if (!__src[16])
  {
    v12 = 0;
    sub_224501B60(v4, *(char **)(a1 + 32), &v12, &__srca, 1);
    v5 = __src + 32;
    if (__src[32])
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    v6 = *(char **)(a1 + 32);
    v9 = &v15;
    v8 = &v14;
    v7 = v4;
    v10 = 1;
    return sub_224501B60(v7, v6, v8, v9, v10);
  }
  __srca = 1;
  sub_224501B60(v4, *(char **)(a1 + 32), &__srca, &v14, 1);
  sub_224501B60(v4, *(char **)(a1 + 32), __src + 8, __src + 16, 8);
  v5 = __src + 32;
  if (!__src[32])
    goto LABEL_5;
LABEL_3:
  v15 = 1;
  sub_224501B60(v4, *(char **)(a1 + 32), &v15, (char *)&v16, 1);
  v6 = *(char **)(a1 + 32);
  v7 = v4;
  v8 = __src + 24;
  v9 = v5;
  v10 = 8;
  return sub_224501B60(v7, v6, v8, v9, v10);
}

char *sub_2240DDFB8(uint64_t a1, uint64_t a2, char *a3)
{
  char *v5;
  char *v6;
  int v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *p_src;
  int64_t v12;
  char *result;
  uint64_t v14;
  char v15;
  char __src;
  uint64_t v17;

  sub_2244FF590((_QWORD *)a2);
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), a3, a3 + 1, 1);
  v5 = a3 + 16;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), a3 + 8, a3 + 16, 8);
  v7 = a3[24];
  v6 = a3 + 24;
  if (v7)
  {
    __src = 1;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), &__src, (char *)&v17, 1);
    v8 = *(char **)(a2 + 32);
    v9 = a2 + 24;
    v10 = v5;
    p_src = v6;
    v12 = 8;
  }
  else
  {
    v15 = 0;
    v8 = *(char **)(a2 + 32);
    p_src = &__src;
    v10 = &v15;
    v9 = a2 + 24;
    v12 = 1;
  }
  result = sub_224501B60(v9, v8, v10, p_src, v12);
  v14 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v14 + 10) = *(_QWORD *)(a2 + 32) - v14 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  return result;
}

uint64_t sub_2240DE0BC(int *a1, _QWORD *a2, __int128 *a3)
{
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  LODWORD(v12) = 2;
  (*(void (**)(_QWORD *, __int128 *))(*a2 + 104))(a2, &v12);
  v6 = v12;
  if (*a1 < 1
    || *a1 == 2 && (LODWORD(v12) = 1, (*(void (**)(_QWORD *, __int128 *))(*a2 + 104))(a2, &v12), *a1 <= 0))
  {
    v10 = a3[1];
    v12 = *a3;
    v13 = v10;
    v11 = a3[3];
    v14 = a3[2];
    v15 = v11;
    return sub_2240DE1C0(a2, (unsigned __int8 *)&v12, v6);
  }
  else
  {
    (*(void (**)(_QWORD *))(*a2 + 16))(a2);
    v7 = a3[1];
    v12 = *a3;
    v13 = v7;
    v8 = a3[3];
    v14 = a3[2];
    v15 = v8;
    sub_2240DE1C0(a2, (unsigned __int8 *)&v12, v6);
    return (*(uint64_t (**)(_QWORD *))(*a2 + 24))(a2);
  }
}

uint64_t sub_2240DE1C0(_QWORD *a1, unsigned __int8 *a2, unsigned int a3)
{
  uint64_t result;
  int v7;
  std::runtime_error *exception;
  uint64_t v9;

  LOBYTE(v9) = *a2;
  result = (*(uint64_t (**)(_QWORD *, uint64_t *))(*a1 + 80))(a1, &v9);
  if (a3 >= 2)
  {
    v7 = *a2;
    if (*a2)
    {
      if (v7 == 2)
      {
        if (*((_DWORD *)a2 + 12) == 1)
        {
          v9 = a1[1];
          return sub_2240DE588((int *)&v9, (uint64_t)a1, (uint64_t)(a2 + 8));
        }
      }
      else
      {
        if (v7 != 1)
        {
          exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
          std::runtime_error::runtime_error(exception, "invalid sync type");
          __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
        }
        if (!*((_DWORD *)a2 + 12))
        {
          v9 = a1[1];
          return sub_2240DE2CC((int *)&v9, (uint64_t)a1, (uint64_t)(a2 + 8));
        }
      }
      sub_22316DD70();
    }
  }
  return result;
}

void sub_2240DE2B8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2240DE2CC(int *a1, uint64_t a2, uint64_t a3)
{
  int v7;
  char v8;
  char v9;
  char v10;
  char v11;

  v7 = 1;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 >= 1)
    return sub_2240DE428(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3);
  if (*(_BYTE *)(a3 + 16))
  {
    v9 = 1;
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
    if (*(_BYTE *)(a3 + 32))
    {
LABEL_5:
      v11 = 1;
      (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v11);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 24);
    }
  }
  else
  {
    v8 = 0;
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v8);
    if (*(_BYTE *)(a3 + 32))
      goto LABEL_5;
  }
  v10 = 0;
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v10);
}

uint64_t sub_2240DE428(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t result;
  int v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v5 = *a1;
  if (*a1 == 2)
  {
    v8 = 1;
    (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v8);
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3);
  if (*(_BYTE *)(a3 + 16))
  {
    v10 = 1;
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
    if (*(_BYTE *)(a3 + 32))
      goto LABEL_7;
  }
  else
  {
    v9 = 0;
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v9);
    if (*(_BYTE *)(a3 + 32))
    {
LABEL_7:
      v12 = 1;
      (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v12);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 24);
      if (v5 < 1)
        return result;
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    }
  }
  v11 = 0;
  result = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v11);
  if (v5 < 1)
    return result;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
}

uint64_t sub_2240DE588(int *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t result;
  int v8;
  int v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = 1;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v8);
  if (*a1 < 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 80))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
    if (*(_BYTE *)(a3 + 24))
    {
      v13 = 1;
      (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v13);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 16);
    }
    else
    {
      v12 = 0;
      return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v12);
    }
  }
  else
  {
    if (*a1 == 2 && (v9 = 1, (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v9), *a1 < 1))
    {
      v6 = 0;
    }
    else
    {
      (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
      v6 = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 80))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
    if (*(_BYTE *)(a3 + 24))
    {
      v11 = 1;
      (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v11);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 16);
      if (v6)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    }
    else
    {
      v10 = 0;
      result = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v10);
      if (v6)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    }
  }
  return result;
}

void sub_2240DE758(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240DED8C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240DF904(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240E0188(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240E0D00(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240E1750(&v9, a1);
          else
            sub_2240DE8BC(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

uint64_t sub_2240DE8BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v27;
  uint64_t v28[27];
  unsigned int v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)&v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)&v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v28[0] = *(_QWORD *)(a2 + 8);
  v25 = v28[0];
  v29 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v29);
  if (v25 < 1)
  {
    if (v29 < 3)
      sub_223BD7864((uint64_t)&v29, a2, v4, v29);
    else
      sub_223BD7AD8(a2, v4, v29);
  }
  else
  {
    sub_223BD7174((int *)v28, a2, v4, v29);
  }
  return sub_2240E225C((uint64_t)v28, (_DWORD *)a2, v3 + 200);
}

void sub_2240DED44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240DED8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451CAD4(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_2240DF2E4(a2, v3 + 200, v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_2240DF29C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240DF2E4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  char *v7;
  char v8;
  int v9;
  int v10;
  int v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  _QWORD *v21;
  std::runtime_error *exception;
  unint64_t v23;

  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "sync_type";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  v7 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v23 = 0;
  sub_22451CAD4(v7, &v23);
  v8 = v23;
  if (v23 >= 0x100)
    goto LABEL_30;
  *(_BYTE *)a2 = v23;
  if (a3 >= 2 && v8)
  {
    if (v8 != 2)
    {
      if (v8 != 1)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "invalid sync type");
        __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
      if (*(_BYTE *)(a2 + 56))
      {
        v9 = *(_DWORD *)(a2 + 48);
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        if (v9)
          *(_DWORD *)(a2 + 48) = 0;
        v10 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "value";
        *(_QWORD *)(a1 + 96) = 5;
        if (v10)
        {
LABEL_12:
          sub_224544628(a1);
          v11 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v11)
            *(_BYTE *)(a1 + 104) = 1;
          v12 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v23 = 0;
          sub_22451CAD4(v12, &v23);
          if (!HIDWORD(v23))
          {
            sub_2240DF5F0(a1, a2 + 8);
LABEL_24:
            v17 = *(_QWORD *)(a1 + 48);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(v17 - 8);
            v18 = *(_QWORD *)(a1 + 72);
            *(_QWORD *)(a1 + 112) = *(_QWORD *)(v18 - 8);
            *(_QWORD *)(a1 + 48) = v17 - 8;
            *(_QWORD *)(a1 + 72) = v18 - 8;
            return;
          }
          goto LABEL_30;
        }
      }
      else
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        *(_DWORD *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 56) = 1;
        v19 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "value";
        *(_QWORD *)(a1 + 96) = 5;
        if (v19)
          goto LABEL_12;
      }
      *(_BYTE *)(a1 + 104) = 1;
      goto LABEL_12;
    }
    if (*(_BYTE *)(a2 + 56))
    {
      v13 = *(_DWORD *)(a2 + 48);
      *(_BYTE *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      if (v13 != 1)
        *(_DWORD *)(a2 + 48) = 1;
      v14 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "value";
      *(_QWORD *)(a1 + 96) = 5;
      if (v14)
      {
LABEL_20:
        sub_224544628(a1);
        v15 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "version";
        *(_QWORD *)(a1 + 96) = 7;
        if (!v15)
          *(_BYTE *)(a1 + 104) = 1;
        v16 = (char *)sub_2245448E0((uint64_t *)a1);
        ++*(_QWORD *)(a1 + 112);
        v23 = 0;
        sub_22451CAD4(v16, &v23);
        if (!HIDWORD(v23))
        {
          sub_2240DF784(a1, a2 + 8);
          goto LABEL_24;
        }
LABEL_30:
        v21 = __cxa_allocate_exception(8uLL);
        *v21 = &off_24EC7AC38;
        __cxa_throw(v21, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
    }
    else
    {
      *(_BYTE *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      *(_DWORD *)(a2 + 48) = 1;
      *(_BYTE *)(a2 + 56) = 1;
      v20 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "value";
      *(_QWORD *)(a1 + 96) = 5;
      if (v20)
        goto LABEL_20;
    }
    *(_BYTE *)(a1 + 104) = 1;
    goto LABEL_20;
  }
}

void sub_2240DF5DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240DF5F0(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  int v6;
  char *v7;
  int v8;
  char *v9;
  uint64_t v10;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "sync_command_id";
  *(_QWORD *)(a1 + 96) = 15;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v10 = 0;
  sub_22451CAD4(v5, &v10);
  *(_QWORD *)a2 = v10;
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "proceed_n";
  *(_QWORD *)(a1 + 96) = 9;
  if (v6)
  {
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
    {
LABEL_5:
      v7 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v10 = 0;
      sub_22451CAD4(v7, &v10);
      *(_QWORD *)(a2 + 8) = v10;
      *(_BYTE *)(a2 + 16) = 1;
      goto LABEL_9;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
      goto LABEL_5;
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 16))
    *(_BYTE *)(a2 + 16) = 0;
LABEL_9:
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "proceed_until";
  *(_QWORD *)(a1 + 96) = 13;
  if (v8)
  {
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
    {
LABEL_11:
      v9 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v10 = 0;
      sub_22451CAD4(v9, &v10);
      *(_QWORD *)(a2 + 24) = v10;
      *(_BYTE *)(a2 + 32) = 1;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
      goto LABEL_11;
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 32))
    *(_BYTE *)(a2 + 32) = 0;
}

void sub_2240DF784(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  int v6;
  char *v7;
  int v8;
  char *v9;
  _QWORD *exception;
  unint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "status";
  *(_QWORD *)(a1 + 96) = 6;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_22451CAD4(v5, &v11);
  if (v11 >= 0x100)
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  *(_BYTE *)a2 = v11;
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "sync_id";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  v7 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_22451CAD4(v7, &v11);
  *(_QWORD *)(a2 + 8) = v11;
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "acknowledge_until";
  *(_QWORD *)(a1 + 96) = 17;
  if (v8)
  {
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
    {
LABEL_8:
      v9 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v11 = 0;
      sub_22451CAD4(v9, &v11);
      *(_QWORD *)(a2 + 16) = v11;
      *(_BYTE *)(a2 + 24) = 1;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
      goto LABEL_8;
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 24))
    *(_BYTE *)(a2 + 24) = 0;
}

uint64_t sub_2240DF904(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  _QWORD *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char v30;
  uint64_t v31[27];
  _BYTE v32[8];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v31);
    sub_223B87C9C((uint64_t)v32, v31);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v32);
        if (!v47)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v8 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v8;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v38;
    v10 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v11 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v11;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v12 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v12;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v15 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v45;
LABEL_45:
    *((_QWORD *)&v45 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v31);
  sub_223B87C9C((uint64_t)v32, v31);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v17 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v17;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v38;
    v19 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v20 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v20;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v21 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v21;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v32);
  if (v47)
  {
LABEL_38:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v23 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v44 && SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  sub_2231AD66C((uint64_t)v31);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v31, a2, v4);
  LODWORD(v31[0]) = 2;
  sub_224554038(a2[6], v31);
  v24 = v31[0];
  v25 = a2 + 2;
  sub_2231B1308(a2 + 2);
  if (v24 >= 2)
    v26 = 2;
  else
    v26 = v24;
  sub_2240DFDEC(a2, v3 + 200, v26);
  v27 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(*v25 + 32))(a2 + 2);
  v29 = *(_QWORD *)(v27 - 16) - result + *(_QWORD *)(v27 - 8);
  if (v29)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v25 + 40))(a2 + 2, v29);
  a2[4] -= 16;
  return result;
}

void sub_2240DFDA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240DFDEC(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  std::runtime_error *exception;
  unsigned __int8 v12;
  int v13;
  char v14;
  int v15;

  v12 = 0;
  sub_224553CF0(a1[6], &v12);
  v6 = v12;
  *(_BYTE *)a2 = v12;
  if (a3 >= 2 && v6)
  {
    if (v6 == 2)
    {
      if (*(_BYTE *)(a2 + 56))
      {
        v8 = *(_DWORD *)(a2 + 48);
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        if (v8 != 1)
          *(_DWORD *)(a2 + 48) = 1;
      }
      else
      {
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_DWORD *)(a2 + 48) = 1;
        *(_BYTE *)(a2 + 56) = 1;
      }
      v15 = 1;
      sub_224554038(a1[6], &v15);
      sub_2240E00B0((uint64_t)&v14, a1, a2 + 8);
    }
    else
    {
      if (v6 != 1)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "invalid sync type");
        __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
      if (*(_BYTE *)(a2 + 56))
      {
        v7 = *(_DWORD *)(a2 + 48);
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        if (v7)
          *(_DWORD *)(a2 + 48) = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        *(_DWORD *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 56) = 1;
      }
      v13 = 1;
      sub_224554038(a1[6], &v13);
      sub_2231B1308(a1 + 2);
      sub_2240DFFEC((uint64_t)a1, a2 + 8);
      v9 = a1[4];
      v10 = *(_QWORD *)(v9 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v9 - 8);
      if (v10)
        (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v10);
      a1[4] -= 16;
    }
  }
}

void sub_2240DFFD8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240DFFEC(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  sub_2245543E8(*(_QWORD *)(a1 + 48), (_QWORD *)a2);
  v4 = 0;
  sub_224553CF0(*(_QWORD *)(a1 + 48), &v4);
  if (v4)
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = 1;
    }
    sub_2245543E8(*(_QWORD *)(a1 + 48), (_QWORD *)(a2 + 8));
  }
  else if (*(_BYTE *)(a2 + 16))
  {
    *(_BYTE *)(a2 + 16) = 0;
  }
  v5 = 0;
  sub_224553CF0(*(_QWORD *)(a1 + 48), &v5);
  if (v5)
  {
    if (!*(_BYTE *)(a2 + 32))
    {
      *(_QWORD *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 1;
    }
    sub_2245543E8(*(_QWORD *)(a1 + 48), (_QWORD *)(a2 + 24));
  }
  else if (*(_BYTE *)(a2 + 32))
  {
    *(_BYTE *)(a2 + 32) = 0;
  }
}

uint64_t sub_2240E00B0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v5 = a2 + 2;
  sub_2231B1308(a2 + 2);
  sub_224553CF0(a2[6], (_BYTE *)a3);
  sub_2245543E8(a2[6], (_QWORD *)(a3 + 8));
  v9 = 0;
  sub_224553CF0(a2[6], &v9);
  if (v9)
  {
    if (!*(_BYTE *)(a3 + 24))
    {
      *(_QWORD *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 24) = 1;
    }
    sub_2245543E8(a2[6], (_QWORD *)(a3 + 16));
  }
  else if (*(_BYTE *)(a3 + 24))
  {
    *(_BYTE *)(a3 + 24) = 0;
  }
  v6 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v8 = *(_QWORD *)(v6 - 16) - result + *(_QWORD *)(v6 - 8);
  if (v8)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v8);
  a2[4] -= 16;
  return result;
}

void sub_2240E0188(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451C444(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_2240E06E0(a2, v3 + 200, v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_2240E0698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240E06E0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  char *v7;
  char v8;
  int v9;
  int v10;
  int v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  _QWORD *v21;
  std::runtime_error *exception;
  unint64_t v23;

  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "sync_type";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  v7 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v23 = 0;
  sub_22451C444(v7, &v23);
  v8 = v23;
  if (v23 >= 0x100)
    goto LABEL_30;
  *(_BYTE *)a2 = v23;
  if (a3 >= 2 && v8)
  {
    if (v8 != 2)
    {
      if (v8 != 1)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "invalid sync type");
        __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
      if (*(_BYTE *)(a2 + 56))
      {
        v9 = *(_DWORD *)(a2 + 48);
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        if (v9)
          *(_DWORD *)(a2 + 48) = 0;
        v10 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "value";
        *(_QWORD *)(a1 + 96) = 5;
        if (v10)
        {
LABEL_12:
          sub_224544138(a1);
          v11 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v11)
            *(_BYTE *)(a1 + 104) = 1;
          v12 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v23 = 0;
          sub_22451C444(v12, &v23);
          if (!HIDWORD(v23))
          {
            sub_2240E09EC(a1, a2 + 8);
LABEL_24:
            v17 = *(_QWORD *)(a1 + 48);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(v17 - 8);
            v18 = *(_QWORD *)(a1 + 72);
            *(_QWORD *)(a1 + 112) = *(_QWORD *)(v18 - 8);
            *(_QWORD *)(a1 + 48) = v17 - 8;
            *(_QWORD *)(a1 + 72) = v18 - 8;
            return;
          }
          goto LABEL_30;
        }
      }
      else
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        *(_DWORD *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 56) = 1;
        v19 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "value";
        *(_QWORD *)(a1 + 96) = 5;
        if (v19)
          goto LABEL_12;
      }
      *(_BYTE *)(a1 + 104) = 1;
      goto LABEL_12;
    }
    if (*(_BYTE *)(a2 + 56))
    {
      v13 = *(_DWORD *)(a2 + 48);
      *(_BYTE *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      if (v13 != 1)
        *(_DWORD *)(a2 + 48) = 1;
      v14 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "value";
      *(_QWORD *)(a1 + 96) = 5;
      if (v14)
      {
LABEL_20:
        sub_224544138(a1);
        v15 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "version";
        *(_QWORD *)(a1 + 96) = 7;
        if (!v15)
          *(_BYTE *)(a1 + 104) = 1;
        v16 = (char *)sub_2245443F0((uint64_t *)a1);
        ++*(_QWORD *)(a1 + 112);
        v23 = 0;
        sub_22451C444(v16, &v23);
        if (!HIDWORD(v23))
        {
          sub_2240E0B80(a1, a2 + 8);
          goto LABEL_24;
        }
LABEL_30:
        v21 = __cxa_allocate_exception(8uLL);
        *v21 = &off_24EC7AC38;
        __cxa_throw(v21, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
    }
    else
    {
      *(_BYTE *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      *(_DWORD *)(a2 + 48) = 1;
      *(_BYTE *)(a2 + 56) = 1;
      v20 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "value";
      *(_QWORD *)(a1 + 96) = 5;
      if (v20)
        goto LABEL_20;
    }
    *(_BYTE *)(a1 + 104) = 1;
    goto LABEL_20;
  }
}

void sub_2240E09D8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240E09EC(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  int v6;
  char *v7;
  int v8;
  char *v9;
  uint64_t v10;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "sync_command_id";
  *(_QWORD *)(a1 + 96) = 15;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v10 = 0;
  sub_22451C444(v5, &v10);
  *(_QWORD *)a2 = v10;
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "proceed_n";
  *(_QWORD *)(a1 + 96) = 9;
  if (v6)
  {
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
    {
LABEL_5:
      v7 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v10 = 0;
      sub_22451C444(v7, &v10);
      *(_QWORD *)(a2 + 8) = v10;
      *(_BYTE *)(a2 + 16) = 1;
      goto LABEL_9;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
      goto LABEL_5;
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 16))
    *(_BYTE *)(a2 + 16) = 0;
LABEL_9:
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "proceed_until";
  *(_QWORD *)(a1 + 96) = 13;
  if (v8)
  {
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
    {
LABEL_11:
      v9 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v10 = 0;
      sub_22451C444(v9, &v10);
      *(_QWORD *)(a2 + 24) = v10;
      *(_BYTE *)(a2 + 32) = 1;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
      goto LABEL_11;
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 32))
    *(_BYTE *)(a2 + 32) = 0;
}

void sub_2240E0B80(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  int v6;
  char *v7;
  int v8;
  char *v9;
  _QWORD *exception;
  unint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "status";
  *(_QWORD *)(a1 + 96) = 6;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_22451C444(v5, &v11);
  if (v11 >= 0x100)
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  *(_BYTE *)a2 = v11;
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "sync_id";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  v7 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_22451C444(v7, &v11);
  *(_QWORD *)(a2 + 8) = v11;
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "acknowledge_until";
  *(_QWORD *)(a1 + 96) = 17;
  if (v8)
  {
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
    {
LABEL_8:
      v9 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v11 = 0;
      sub_22451C444(v9, &v11);
      *(_QWORD *)(a2 + 16) = v11;
      *(_BYTE *)(a2 + 24) = 1;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
      goto LABEL_8;
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 24))
    *(_BYTE *)(a2 + 24) = 0;
}

void sub_2240E0D00(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  void *__p;
  uint64_t v33;
  char v34;
  _BYTE v35[8];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v35);
        if (!v50)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v36;
    *(_BYTE *)(v3 + 64) = 0;
    if (v39)
    {
      v8 = v38;
      *(_OWORD *)(v3 + 40) = v37;
      *(_QWORD *)(v3 + 56) = v8;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v41;
    v10 = v40;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v44)
    {
      v11 = v43;
      *(_OWORD *)(v3 + 96) = v42;
      *(_QWORD *)(v3 + 112) = v11;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v47)
    {
      v12 = v46;
      *(_OWORD *)(v3 + 128) = v45;
      *(_QWORD *)(v3 + 144) = v12;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v50;
    if (v50)
    {
      *(_OWORD *)(v3 + 160) = v48;
      *(_QWORD *)(v3 + 176) = v49;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v48;
    if (!(_QWORD)v48)
      goto LABEL_46;
    v15 = *((_QWORD *)&v48 + 1);
    v16 = (void *)v48;
    if (*((_QWORD *)&v48 + 1) == (_QWORD)v48)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v48;
LABEL_45:
    *((_QWORD *)&v48 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v36;
    *(_BYTE *)(v3 + 64) = 0;
    if (v39)
    {
      v17 = v38;
      *(_OWORD *)(v3 + 40) = v37;
      *(_QWORD *)(v3 + 56) = v17;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v41;
    v19 = v40;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v44)
    {
      v20 = v43;
      *(_OWORD *)(v3 + 96) = v42;
      *(_QWORD *)(v3 + 112) = v20;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v47)
    {
      v21 = v46;
      *(_OWORD *)(v3 + 128) = v45;
      *(_QWORD *)(v3 + 144) = v21;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v50;
    if (v50)
    {
      *(_OWORD *)(v3 + 160) = v48;
      *(_QWORD *)(v3 + 176) = v49;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v35);
  if (v50)
  {
LABEL_38:
    v14 = v48;
    if (!(_QWORD)v48)
      goto LABEL_46;
    v23 = *((_QWORD *)&v48 + 1);
    v16 = (void *)v48;
    if (*((_QWORD *)&v48 + 1) == (_QWORD)v48)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v47 && SHIBYTE(v46) < 0)
    operator delete((void *)v45);
  if (v44 && SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v34 < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_95:
          v30 = 0;
          if (v34 < 0)
            goto LABEL_98;
          goto LABEL_84;
        }
      }
      else if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_95;
      }
      v30 = 1;
      if (v34 < 0)
LABEL_98:
        operator delete(__p);
LABEL_84:
      if (*(_BYTE *)(a2 + 131))
        v29 = 0;
      else
        v29 = v30;
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  if (__p >= 2)
    v26 = 2;
  else
    v26 = __p;
  sub_2240E131C(a2, v3 + 200, v26);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v34 < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v28 = 0;
          if (v34 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v28 = 1;
      if (v34 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v27 = 0;
      else
        v27 = v28;
    }
    while ((v27 & 1) != 0);
  }
}

void sub_2240E12D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240E131C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  int v7;
  int v8;
  char v9;
  char v10;
  std::runtime_error *exception;
  void *__p[2];
  char v13;

  LOBYTE(__p[0]) = 0;
  sub_22454FFAC(a1, __p);
  v6 = LOBYTE(__p[0]);
  *(_BYTE *)a2 = __p[0];
  if (a3 < 2 || !v6)
    return;
  if (v6 != 2)
  {
    if (v6 != 1)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "invalid sync type");
      __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
    }
    if (*(_BYTE *)(a2 + 56))
    {
      v7 = *(_DWORD *)(a2 + 48);
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      *(_BYTE *)(a2 + 40) = 0;
      if (v7)
        *(_DWORD *)(a2 + 48) = 0;
    }
    else
    {
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = 0;
      *(_BYTE *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 0;
      *(_BYTE *)(a2 + 40) = 0;
      *(_DWORD *)(a2 + 48) = 0;
      *(_BYTE *)(a2 + 56) = 1;
    }
    LODWORD(__p[0]) = 1;
    sub_2245508F0(a1, __p);
    sub_2240E1554(a1, a2 + 8);
    if (*(_BYTE *)(a1 + 131))
      return;
    while (1)
    {
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a1, (uint64_t)__p);
      if (v13 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_25:
          v10 = 0;
          if (v13 < 0)
            goto LABEL_28;
          goto LABEL_14;
        }
      }
      else if (v13 == 1 && *(unsigned __int8 *)(a1 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_25;
      }
      v10 = 1;
      if (v13 < 0)
LABEL_28:
        operator delete(__p[0]);
LABEL_14:
      if (*(_BYTE *)(a1 + 131))
        v9 = 0;
      else
        v9 = v10;
      if ((v9 & 1) == 0)
        return;
    }
  }
  if (*(_BYTE *)(a2 + 56))
  {
    v8 = *(_DWORD *)(a2 + 48);
    *(_BYTE *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 32) = 0;
    if (v8 != 1)
      *(_DWORD *)(a2 + 48) = 1;
  }
  else
  {
    *(_BYTE *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_BYTE *)(a2 + 24) = 0;
    *(_BYTE *)(a2 + 32) = 0;
    *(_DWORD *)(a2 + 48) = 1;
    *(_BYTE *)(a2 + 56) = 1;
  }
  sub_2240E1614((uint64_t)__p, a1, a2 + 8);
}

void sub_2240E1540(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240E1554(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;

  sub_224550D98(a1, (_QWORD *)a2);
  v4 = 0;
  sub_22454FFAC(a1, &v4);
  if (v4)
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = 1;
    }
    sub_224550D98(a1, (_QWORD *)(a2 + 8));
  }
  else if (*(_BYTE *)(a2 + 16))
  {
    *(_BYTE *)(a2 + 16) = 0;
  }
  v5 = 0;
  sub_22454FFAC(a1, &v5);
  if (v5)
  {
    if (!*(_BYTE *)(a2 + 32))
    {
      *(_QWORD *)(a2 + 24) = 0;
      *(_BYTE *)(a2 + 32) = 1;
    }
    sub_224550D98(a1, (_QWORD *)(a2 + 24));
  }
  else if (*(_BYTE *)(a2 + 32))
  {
    *(_BYTE *)(a2 + 32) = 0;
  }
}

void sub_2240E1614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  char v6;
  void *__p[2];
  char v8;

  LODWORD(__p[0]) = 1;
  sub_2245508F0(a2, __p);
  sub_22454FFAC(a2, (_BYTE *)a3);
  sub_224550D98(a2, (_QWORD *)(a3 + 8));
  LOBYTE(__p[0]) = 0;
  sub_22454FFAC(a2, __p);
  if (LOBYTE(__p[0]))
  {
    if (!*(_BYTE *)(a3 + 24))
    {
      *(_QWORD *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 24) = 1;
    }
    sub_224550D98(a2, (_QWORD *)(a3 + 16));
  }
  else if (*(_BYTE *)(a3 + 24))
  {
    *(_BYTE *)(a3 + 24) = 0;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v8 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_20:
          v6 = 0;
          if (v8 < 0)
            goto LABEL_23;
          goto LABEL_9;
        }
      }
      else if (v8 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_20;
      }
      v6 = 1;
      if (v8 < 0)
LABEL_23:
        operator delete(__p[0]);
LABEL_9:
      if (*(_BYTE *)(a2 + 131))
        v5 = 0;
      else
        v5 = v6;
    }
    while ((v5 & 1) != 0);
  }
}

_QWORD *sub_2240E1750(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v26, a2, v4);
  return sub_2240E1BC4((uint64_t)v26, a2, v3 + 200);
}

void sub_2240E1B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_2240E1BC4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  unsigned int v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  if (v9 >= 2)
    v10 = 2;
  else
    v10 = v9;
  result = sub_2240E1C98(a2, a3, v10);
  v12 = a2[12];
  v13 = a2[9];
  a2[6] = *(_QWORD *)(v12 - 8) + *(_QWORD *)(v13 - 8) + 8;
  a2[9] = v13 - 8;
  a2[12] = v12 - 8;
  return result;
}

void sub_2240E1C84(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E1C98(_QWORD *result, uint64_t a2, unsigned int a3)
{
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  std::logic_error *exception;
  std::runtime_error *v8;
  char v9;
  char v10;

  v3 = result[6];
  if (result[7] <= v3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v4 = *(unsigned __int8 *)(result[3] + v3);
  result[6] = v3 + 1;
  *(_BYTE *)a2 = v4;
  if (a3 >= 2 && v4)
  {
    if (v4 == 2)
    {
      if (*(_BYTE *)(a2 + 56))
      {
        v6 = *(_DWORD *)(a2 + 48);
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        if (v6 != 1)
          *(_DWORD *)(a2 + 48) = 1;
      }
      else
      {
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_DWORD *)(a2 + 48) = 1;
        *(_BYTE *)(a2 + 56) = 1;
      }
      return sub_2240E20B0((uint64_t)&v10, result, a2 + 8);
    }
    else
    {
      if (v4 != 1)
      {
        v8 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(v8, "invalid sync type");
        __cxa_throw(v8, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
      if (*(_BYTE *)(a2 + 56))
      {
        v5 = *(_DWORD *)(a2 + 48);
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        if (v5)
          *(_DWORD *)(a2 + 48) = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        *(_DWORD *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 56) = 1;
      }
      return sub_2240E1E48((uint64_t)&v9, result, (_QWORD *)(a2 + 8));
    }
  }
  return result;
}

void sub_2240E1E20(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240E1E34(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E1E48(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  result = sub_2240E1F18(a2, a3);
  v10 = a2[12];
  v11 = a2[9];
  a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
  a2[9] = v11 - 8;
  a2[12] = v10 - 8;
  return result;
}

void sub_2240E1F04(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E1F18(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *a2 = *(_QWORD *)(a1[3] + v2);
  a1[6] += 8;
  sub_2240E1FB8(a1, (uint64_t)(a2 + 1));
  return sub_2240E1FB8(a1, (uint64_t)(a2 + 3));
}

void sub_2240E1FA4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E1FB8(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;

  v3 = result[6];
  v2 = result[7];
  if (v2 <= v3)
    goto LABEL_12;
  v4 = result[3];
  v5 = *(unsigned __int8 *)(v4 + v3);
  v6 = v3 + 1;
  result[6] = v6;
  if (v5)
  {
    if (!*(_BYTE *)(a2 + 8))
    {
      *(_QWORD *)a2 = 0;
      *(_BYTE *)(a2 + 8) = 1;
    }
    v7 = v2 >= v6;
    v8 = v2 - v6;
    if (!v7)
      v8 = 0;
    if (v8 > 7)
    {
      *(_QWORD *)a2 = *(_QWORD *)(v4 + v6);
      result[6] += 8;
      return result;
    }
LABEL_12:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  if (*(_BYTE *)(a2 + 8))
    *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_2240E2088(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240E209C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E20B0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  result = sub_2240E2180(a2, a3);
  v10 = a2[12];
  v11 = a2[9];
  a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
  a2[9] = v11 - 8;
  a2[12] = v10 - 8;
  return result;
}

void sub_2240E216C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E2180(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  std::logic_error *exception;

  v2 = a1[6];
  if (a1[7] <= v2)
    goto LABEL_6;
  *(_BYTE *)a2 = *(_BYTE *)(a1[3] + v2);
  v3 = a1[7];
  v4 = a1[6] + 1;
  a1[6] = v4;
  v5 = v3 >= v4;
  v6 = v3 - v4;
  if (!v5)
    v6 = 0;
  if (v6 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1[3] + v4);
  a1[6] += 8;
  return sub_2240E1FB8(a1, a2 + 16);
}

void sub_2240E2234(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240E2248(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2240E225C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v9;
  __int128 *v10;
  unsigned int v11;
  unsigned int v12;

  v5 = a2[2];
  v11 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v11);
  v6 = v11;
  if (v5 < 1)
    return sub_2240E2558(a2, a3, v11);
  if (v5 == 2)
  {
    v12 = 1;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v9 = v12;
      v10 = sub_2240E235C();
      sub_22455C3A8((std::string *)v10, v9, 2u);
    }
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
  if (v6 >= 2)
    v7 = 2;
  else
    v7 = v6;
  sub_2240E2558(a2, a3, v7);
  return (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240E235C()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F570);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F570))
    return &xmmword_25578F558;
  v2 = (char *)sub_2240E2438();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F558, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F568 = *((_QWORD *)v2 + 2);
    xmmword_25578F558 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F558, &dword_22314D000);
  __cxa_guard_release(&qword_25578F570);
  return &xmmword_25578F558;
}

void sub_2240E2420(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F570);
  _Unwind_Resume(a1);
}

void *sub_2240E2438()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F590);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F590))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::SyncSample]", qword_25578F578);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F578, &dword_22314D000);
    __cxa_guard_release(&qword_25578F590);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F5B0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F5B0))
    return &unk_25578F598;
  sub_224573040((uint64_t)qword_25578F578, (uint64_t)&unk_25578F598);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F598, &dword_22314D000);
  __cxa_guard_release(&qword_25578F5B0);
  return &unk_25578F598;
}

void sub_2240E2528(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F5B0);
  _Unwind_Resume(a1);
}

void sub_2240E2540(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F590);
  _Unwind_Resume(a1);
}

uint64_t sub_2240E2558(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  std::runtime_error *exception;
  int v13[3];
  int v14;

  LOBYTE(v13[0]) = 0;
  result = (*(uint64_t (**)(_QWORD *, int *))(*a1 + 80))(a1, v13);
  v7 = LOBYTE(v13[0]);
  *(_BYTE *)a2 = v13[0];
  if (a3 >= 2 && v7)
  {
    if (v7 == 2)
    {
      if (*(_BYTE *)(a2 + 56))
      {
        v9 = *(_DWORD *)(a2 + 48);
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        if (v9 != 1)
          *(_DWORD *)(a2 + 48) = 1;
      }
      else
      {
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_DWORD *)(a2 + 48) = 1;
        *(_BYTE *)(a2 + 56) = 1;
      }
      v10 = *a1;
      *(_QWORD *)v13 = a1[1];
      v11 = v13[0];
      v14 = 1;
      (*(void (**)(_QWORD *, int *))(v10 + 104))(a1, &v14);
      if (v11 < 1)
      {
        (*(void (**)(_QWORD *, uint64_t))(*a1 + 80))(a1, a2 + 8);
        (*(void (**)(_QWORD *, uint64_t))(*a1 + 120))(a1, a2 + 16);
        LOBYTE(v14) = 0;
        result = (*(uint64_t (**)(_QWORD *, int *))(*a1 + 80))(a1, &v14);
        if ((_BYTE)v14)
        {
          if (!*(_BYTE *)(a2 + 32))
          {
            *(_QWORD *)(a2 + 24) = 0;
            *(_BYTE *)(a2 + 32) = 1;
          }
          return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 120))(a1, a2 + 24);
        }
        else if (*(_BYTE *)(a2 + 32))
        {
          *(_BYTE *)(a2 + 32) = 0;
        }
      }
      else
      {
        return sub_2240E2C68(v13, (uint64_t)a1, a2 + 8);
      }
    }
    else
    {
      if (v7 != 1)
      {
        exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
        std::runtime_error::runtime_error(exception, "invalid sync type");
        __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
      }
      if (*(_BYTE *)(a2 + 56))
      {
        v8 = *(_DWORD *)(a2 + 48);
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        if (v8)
          *(_DWORD *)(a2 + 48) = 0;
      }
      else
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = 0;
        *(_BYTE *)(a2 + 24) = 0;
        *(_BYTE *)(a2 + 32) = 0;
        *(_BYTE *)(a2 + 40) = 0;
        *(_DWORD *)(a2 + 48) = 0;
        *(_BYTE *)(a2 + 56) = 1;
      }
      *(_QWORD *)v13 = a1[1];
      return sub_2240E27AC(v13, (uint64_t)a1, a2 + 8);
    }
  }
  return result;
}

void sub_2240E2798(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2240E27AC(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v7;
  char v8;
  char v9;

  v7 = 1;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 >= 1)
    return sub_2240E28FC(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3);
  v8 = 0;
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v8);
  if (v8)
  {
    if (!*(_BYTE *)(a3 + 16))
    {
      *(_QWORD *)(a3 + 8) = 0;
      *(_BYTE *)(a3 + 16) = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  }
  else if (*(_BYTE *)(a3 + 16))
  {
    *(_BYTE *)(a3 + 16) = 0;
  }
  v9 = 0;
  result = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v9);
  if (v9)
  {
    if (!*(_BYTE *)(a3 + 32))
    {
      *(_QWORD *)(a3 + 24) = 0;
      *(_BYTE *)(a3 + 32) = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 24);
  }
  else if (*(_BYTE *)(a3 + 32))
  {
    *(_BYTE *)(a3 + 32) = 0;
  }
  return result;
}

uint64_t sub_2240E28FC(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t result;
  unsigned int v8;
  __int128 *v9;
  unsigned int v10;
  char v11;
  char v12;

  v5 = *a1;
  if (*a1 == 2)
  {
    v10 = 1;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      v8 = v10;
      v9 = sub_2240E2A6C();
      sub_22455C3A8((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3);
  v11 = 0;
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a3 + 16))
    {
      *(_QWORD *)(a3 + 8) = 0;
      *(_BYTE *)(a3 + 16) = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  }
  else if (*(_BYTE *)(a3 + 16))
  {
    *(_BYTE *)(a3 + 16) = 0;
  }
  v12 = 0;
  result = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v12);
  if (v12)
  {
    if (!*(_BYTE *)(a3 + 32))
    {
      *(_QWORD *)(a3 + 24) = 0;
      *(_BYTE *)(a3 + 32) = 1;
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 24);
  }
  else if (*(_BYTE *)(a3 + 32))
  {
    *(_BYTE *)(a3 + 32) = 0;
  }
  if (v5 >= 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  return result;
}

__int128 *sub_2240E2A6C()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F5D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F5D0))
    return &xmmword_25578F5B8;
  v2 = (char *)sub_2240E2B48();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F5B8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F5C8 = *((_QWORD *)v2 + 2);
    xmmword_25578F5B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F5B8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F5D0);
  return &xmmword_25578F5B8;
}

void sub_2240E2B30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F5D0);
  _Unwind_Resume(a1);
}

void *sub_2240E2B48()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F5F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F5F0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::SyncCommandSample]", qword_25578F5D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F5D8, &dword_22314D000);
    __cxa_guard_release(&qword_25578F5F0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F610);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F610))
    return &unk_25578F5F8;
  sub_224573040((uint64_t)qword_25578F5D8, (uint64_t)&unk_25578F5F8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F5F8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F610);
  return &unk_25578F5F8;
}

void sub_2240E2C38(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F610);
  _Unwind_Resume(a1);
}

void sub_2240E2C50(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F5F0);
  _Unwind_Resume(a1);
}

uint64_t sub_2240E2C68(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t result;
  unsigned int v8;
  __int128 *v9;
  unsigned int v10;
  char v11;

  v5 = *a1;
  if (*a1 == 2)
  {
    v10 = 1;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      v8 = v10;
      v9 = sub_2240E2D98();
      sub_22455C3A8((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 80))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v11 = 0;
  result = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a3 + 24))
    {
      *(_QWORD *)(a3 + 16) = 0;
      *(_BYTE *)(a3 + 24) = 1;
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, a3 + 16);
  }
  else if (*(_BYTE *)(a3 + 24))
  {
    *(_BYTE *)(a3 + 24) = 0;
  }
  if (v5 >= 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  return result;
}

__int128 *sub_2240E2D98()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F630);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F630))
    return &xmmword_25578F618;
  v2 = (char *)sub_2240E2E74();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F618, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F628 = *((_QWORD *)v2 + 2);
    xmmword_25578F618 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F618, &dword_22314D000);
  __cxa_guard_release(&qword_25578F630);
  return &xmmword_25578F618;
}

void sub_2240E2E5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F630);
  _Unwind_Resume(a1);
}

void *sub_2240E2E74()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F650);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F650))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ClientSyncUpdateSample]", qword_25578F638);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F638, &dword_22314D000);
    __cxa_guard_release(&qword_25578F650);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F670);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F670))
    return &unk_25578F658;
  sub_224573040((uint64_t)qword_25578F638, (uint64_t)&unk_25578F658);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F658, &dword_22314D000);
  __cxa_guard_release(&qword_25578F670);
  return &unk_25578F658;
}

void sub_2240E2F64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F670);
  _Unwind_Resume(a1);
}

void sub_2240E2F7C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F650);
  _Unwind_Resume(a1);
}

uint64_t sub_2240E2F94(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC671D8;
  sub_2231AD66C(a1 + 240);
  sub_224011EC0(a1 + 64);
  if (!*(_BYTE *)(a1 + 56) || (*(char *)(a1 + 55) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 32));
  return a1;
}

uint64_t sub_2240E2FF4(uint64_t a1)
{
  sub_224011EC0(a1 + 56);
  if (!*(_BYTE *)(a1 + 48) || (*(char *)(a1 + 47) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 24));
  return a1;
}

__n128 sub_2240E3044(uint64_t a1, uint64_t a2)
{
  int v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 result;
  unsigned __int128 *v14;
  unsigned __int128 v15;

  *(_QWORD *)a1 = off_24EC671D8;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v2 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 56) = 0;
  if (*(_BYTE *)(a2 + 56))
  {
    v3 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v3;
    *(_QWORD *)(a2 + 40) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a1 + 56) = 1;
  }
  *(_BYTE *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 208) = 0;
  if (*(_BYTE *)(a2 + 208))
  {
    v4 = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = v4;
    *(_QWORD *)(a2 + 72) = 0;
    *(_QWORD *)(a2 + 80) = 0;
    *(_QWORD *)(a2 + 64) = 0;
    v5 = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = v5;
    *(_QWORD *)(a2 + 96) = 0;
    *(_QWORD *)(a2 + 104) = 0;
    *(_QWORD *)(a2 + 88) = 0;
    v6 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = v6;
    *(_QWORD *)(a2 + 120) = 0;
    *(_QWORD *)(a2 + 128) = 0;
    *(_QWORD *)(a2 + 112) = 0;
    v7 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = v7;
    *(_QWORD *)(a2 + 136) = 0;
    *(_QWORD *)(a2 + 144) = 0;
    *(_QWORD *)(a2 + 152) = 0;
    v8 = *(_OWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = v8;
    *(_QWORD *)(a2 + 160) = 0;
    *(_QWORD *)(a2 + 168) = 0;
    *(_QWORD *)(a2 + 176) = 0;
    v9 = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = v9;
    *(_QWORD *)(a2 + 184) = 0;
    *(_QWORD *)(a2 + 192) = 0;
    *(_QWORD *)(a2 + 200) = 0;
    *(_BYTE *)(a1 + 208) = 1;
  }
  v10 = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v10;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  if (*(_BYTE *)(a2 + 280))
  {
    v11 = *(_OWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = v11;
    *(_QWORD *)(a2 + 264) = 0;
    *(_QWORD *)(a2 + 272) = 0;
    *(_QWORD *)(a2 + 256) = 0;
    *(_BYTE *)(a1 + 280) = 1;
  }
  *(_BYTE *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 312) = 0;
  if (*(_BYTE *)(a2 + 312))
  {
    v12 = *(_OWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 288) = v12;
    *(_QWORD *)(a2 + 296) = 0;
    *(_QWORD *)(a2 + 304) = 0;
    *(_QWORD *)(a2 + 288) = 0;
    *(_BYTE *)(a1 + 312) = 1;
  }
  result = *(__n128 *)(a2 + 320);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(__n128 *)(a1 + 320) = result;
  *(_BYTE *)(a1 + 352) = 0;
  *(_BYTE *)(a1 + 400) = 0;
  if (*(_BYTE *)(a2 + 400))
  {
    result = *(__n128 *)(a2 + 352);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(__n128 *)(a1 + 352) = result;
    *(_QWORD *)(a2 + 360) = 0;
    *(_QWORD *)(a2 + 368) = 0;
    *(_QWORD *)(a2 + 352) = 0;
    v14 = (unsigned __int128 *)(a2 + 384);
    do
      v15 = __ldaxp(v14);
    while (__stlxp(v15, v14));
    *(_OWORD *)(a1 + 384) = v15;
    *(_BYTE *)(a1 + 400) = 1;
  }
  *(_BYTE *)(a1 + 416) = 0;
  *(_BYTE *)(a1 + 440) = 0;
  if (*(_BYTE *)(a2 + 440))
  {
    *(_QWORD *)(a1 + 416) = 0;
    *(_QWORD *)(a1 + 424) = 0;
    *(_QWORD *)(a1 + 432) = 0;
    result = *(__n128 *)(a2 + 416);
    *(__n128 *)(a1 + 416) = result;
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a2 + 416) = 0;
    *(_QWORD *)(a2 + 424) = 0;
    *(_QWORD *)(a2 + 432) = 0;
    *(_BYTE *)(a1 + 440) = 1;
  }
  return result;
}

void sub_2240E3258(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC671D8;
  sub_2231AD66C(a1 + 240);
  sub_224011EC0(a1 + 64);
  if (*(_BYTE *)(a1 + 56))
  {
    if (*(char *)(a1 + 55) < 0)
      operator delete(*(void **)(a1 + 32));
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240E32B8(uint64_t a1)
{
  return a1 + 240;
}

uint64_t sub_2240E32C0(void *a1, void *lpsrc)
{
  uint64_t result;
  uint64_t v5[4];
  uint64_t v6[4];
  char v7;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24EC6A3F8, (const struct __class_type_info *)&unk_24EC67198, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v6[0] = (uint64_t)a1 + 8;
      v6[1] = (uint64_t)a1 + 24;
      v6[2] = (uint64_t)a1 + 64;
      v6[3] = (uint64_t)a1 + 216;
      v5[0] = result + 8;
      v5[1] = result + 24;
      v5[2] = result + 64;
      v5[3] = result + 216;
      return sub_224120B04((uint64_t)&v7, v6, v5);
    }
  }
  return result;
}

void sub_2240E3364(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_2240E4404();
  sub_2240E3418(a1);
  sub_2231AC984(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 240, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_2240E33FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240E3418(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25578F7B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578F7B0))
  {
    v4 = sub_2240E4208();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_2231AD150((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_223197FA4(&xmmword_25578F798, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25578F7A8 = *(_QWORD *)(v9 - 8);
      xmmword_25578F798 = v7;
    }
    sub_22319BB48(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F798, &dword_22314D000);
    __cxa_guard_release(&qword_25578F7B0);
  }
  return sub_2240E46EC(&xmmword_25578F798, (uint64_t)"{", a1 + 8, (uint64_t)"}");
}

void sub_2240E3528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_22319BB48(&a9);
  __cxa_guard_abort(&qword_25578F7B0);
  _Unwind_Resume(a1);
}

void sub_2240E3548(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F7B0);
  _Unwind_Resume(a1);
}

void sub_2240E3560(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.net");
  *(_DWORD *)(a1 + 24) = 1;
}

double sub_2240E358C@<D0>(const void *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;

  sub_224137910(a1, &v4);
  result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_2240E35C0(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC671D8;
  sub_2231AD66C(a1 + 240);
  sub_224011EC0(a1 + 64);
  if (!*(_BYTE *)(a1 + 56) || (*(char *)(a1 + 55) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)(a1 + 32));
  return a1;
}

void sub_2240E3620(uint64_t a1)
{
  *(_QWORD *)a1 = off_24EC671D8;
  sub_2231AD66C(a1 + 240);
  sub_224011EC0(a1 + 64);
  if (*(_BYTE *)(a1 + 56))
  {
    if (*(char *)(a1 + 55) < 0)
      operator delete(*(void **)(a1 + 32));
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240E3680(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_2240E3CA4();
  return sub_2240E37D4(v2, (uint64_t)"{", a1 + 8, (uint64_t)",", a1 + 240, (uint64_t)"}");
}

uint64_t sub_2240E36D8(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_2240E3A00((uint64_t)v5, (uint64_t)v2, a1 + 8);
  if (v3 == -1)
    sub_22316DD70();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66D10[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66CF8[v3])(v5, v2);
  return result;
}

void sub_2240E3770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24EC66CF8[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_2240E37A8(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_2240E37D4(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_2231ABB0C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_2240E3A00((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  sub_2231AB90C((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v16])(&p_dst, &__dst);
  return result;
}

void sub_2240E3970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E3988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E399C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E39B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E39C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E39D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E39EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E3A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_22411F34C((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_2240E3C50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2240E3C74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E3C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

__int128 *sub_2240E3CA4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F690);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F690))
    return &xmmword_25578F678;
  v2 = sub_2240E3D80();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578F678, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578F688 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578F678 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F678, &dword_22314D000);
  __cxa_guard_release(&qword_25578F690);
  return &xmmword_25578F678;
}

void sub_2240E3D68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F690);
  _Unwind_Resume(a1);
}

std::string *sub_2240E3D80()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F6B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F6B0))
    return &stru_25578F698;
  sub_2240E4024((uint64_t)__p);
  sub_2240E3E70((char *)__p, &stru_25578F698);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578F698, &dword_22314D000);
  __cxa_guard_release(&qword_25578F6B0);
  return &stru_25578F698;
}

void sub_2240E3E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578F6B0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578F6B0);
  _Unwind_Resume(a1);
}

void sub_2240E3E70(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2240E4208();
  if (*((char *)v4 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_2231AC788();
  if (*((char *)v6 + 23) < 0)
  {
    sub_223197FA4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 2uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_2240E3FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_22319BB48((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2240E4024(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578F730);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578F730))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::PeerInfo>]", qword_25578F718);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F718, &dword_22314D000);
    __cxa_guard_release(&qword_25578F730);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578F750);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578F750))
  {
    v5 = sub_2231A38CC(qword_25578F718, "<", 0);
    sub_2231A37C8(qword_25578F718, 0, v5, qword_25578F738);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F738, &dword_22314D000);
    __cxa_guard_release(&qword_25578F750);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578F770);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578F770))
  {
    sub_224573040((uint64_t)qword_25578F738, (uint64_t)&xmmword_25578F758);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F758, &dword_22314D000);
    __cxa_guard_release(&qword_25578F770);
  }
  if (byte_25578F76F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578F758, *((unint64_t *)&xmmword_25578F758 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578F758;
    *(_QWORD *)(a1 + 16) = unk_25578F768;
  }
}

void sub_2240E41C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F770);
  _Unwind_Resume(a1);
}

void sub_2240E41D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F750);
  _Unwind_Resume(a1);
}

void sub_2240E41F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F730);
  _Unwind_Resume(a1);
}

__int128 *sub_2240E4208()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F6D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F6D0))
    return &xmmword_25578F6B8;
  v2 = (char *)sub_2240E42E4();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F6B8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F6C8 = *((_QWORD *)v2 + 2);
    xmmword_25578F6B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F6B8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F6D0);
  return &xmmword_25578F6B8;
}

void sub_2240E42CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F6D0);
  _Unwind_Resume(a1);
}

void *sub_2240E42E4()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F6F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F6F0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::PeerInfo]", qword_25578F6D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F6D8, &dword_22314D000);
    __cxa_guard_release(&qword_25578F6F0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F710);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F710))
    return &unk_25578F6F8;
  sub_224573040((uint64_t)qword_25578F6D8, (uint64_t)&unk_25578F6F8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F6F8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F710);
  return &unk_25578F6F8;
}

void sub_2240E43D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F710);
  _Unwind_Resume(a1);
}

void sub_2240E43EC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F6F0);
  _Unwind_Resume(a1);
}

std::string *sub_2240E4404()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  __int128 *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void *v10[3];
  void *v11[2];
  char v12;
  void *__dst[2];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  std::string::size_type v18;
  void *__p[2];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25578F790);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F790))
  {
    sub_223174DE4(v11, "viz::PackageData");
    v2 = sub_2240E4208();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v14 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    v4 = sub_224013F70();
    if (*((char *)v4 + 23) < 0)
    {
      sub_223197FA4(&v15, *(void **)v4, *((_QWORD *)v4 + 1));
    }
    else
    {
      v5 = *v4;
      v16 = *((_QWORD *)v4 + 2);
      v15 = v5;
    }
    v6 = sub_223622408();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v17, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v18 = v6->__r_.__value_.__r.__words[2];
      v17 = v7;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v20 = 0x400000000000000;
    sub_22319BD1C(v10, (uint64_t)__dst, 4uLL);
    sub_2245730F4((char *)v11, (uint64_t *)v10, &stru_25578F778, v8, v9);
    sub_22319BB48(v10);
    if (SHIBYTE(v20) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v18) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v16) & 0x80000000) == 0)
          goto LABEL_16;
        goto LABEL_21;
      }
    }
    else if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete((void *)v17);
    if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v14) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_22;
    }
LABEL_21:
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v12 & 0x80000000) == 0)
      {
LABEL_18:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578F778, &dword_22314D000);
        __cxa_guard_release(&qword_25578F790);
        return &stru_25578F778;
      }
LABEL_23:
      operator delete(v11[0]);
      goto LABEL_18;
    }
LABEL_22:
    operator delete(__dst[0]);
    if ((v12 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_23;
  }
  return &stru_25578F778;
}

void sub_2240E4610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_22319BB48(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
    {
LABEL_10:
      if (a18 < 0)
        operator delete(a13);
      __cxa_guard_abort(&qword_25578F790);
      _Unwind_Resume(a1);
    }
LABEL_9:
    operator delete(a20);
    goto LABEL_10;
  }
LABEL_8:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
    goto LABEL_10;
  goto LABEL_9;
}

void sub_2240E46C4()
{
  uint64_t v0;
  uint64_t v1;

  while (1)
  {
    if (*(char *)(v0 - 1) < 0)
      operator delete(*(void **)(v0 - 24));
    v0 -= 24;
    if (v0 == v1)
      JUMPOUT(0x2240E46A0);
  }
}

uint64_t sub_2240E46EC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_2231ABB0C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_2240E3A00((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v11])(&p_dst, &__dst);
  return result;
}

void sub_2240E482C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E4844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E4858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E486C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E4880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_2240E4894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  _BOOL8 v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_224123BEC((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_22401B714((unsigned __int8 *)(a1 + 200), (unsigned __int8 *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_2240E4A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240E4A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240E4AAC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240E4EB8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240E5ED4(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240E6BDC(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240E76C8(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240E7D54(&v9, (uint64_t)a1);
          else
            sub_2240E4C10(&v8, a1);
        }
      }
    }
  }
}

void sub_2240E4C10(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;
  unsigned int v15;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v15 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
    v9 = v15;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v15 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v15);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v15 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
    v11 = v15;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v15 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v15);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v15 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
    v7 = v15;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v15 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v15);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v15 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
  v14 = v15;
  if (v13 < 1)
  {
    sub_2240E862C((uint64_t)a2, v12, v15);
  }
  else
  {
    if (v13 == 2)
    {
      v15 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v15);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240E862C((uint64_t)a2, v12, v14);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240E4EB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240E51B8(a2, (__int128 *)(v3 + 200), v18);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240E51B8(uint64_t a1, __int128 *a2, unsigned int a3)
{
  void *v5[2];
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  sub_2240E5794((char *)v5, a2);
  sub_2240E52FC(a1, (uint64_t)v5, a3);
  if (v18 < 0)
  {
    operator delete(__p);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v13);
  if ((v12 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v11);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v6 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v5[0]);
    return;
  }
LABEL_14:
  operator delete(v7);
  if (v6 < 0)
    goto LABEL_15;
}

void sub_2240E52E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224022CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240E52FC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  void **v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  int v32;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "user_given_name";
    *(_QWORD *)(a1 + 80) = 15;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542510(a1, a2);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "product_name";
    *(_QWORD *)(a1 + 80) = 12;
    if (!v7)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542510(a1, a2 + 24);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "type";
    *(_QWORD *)(a1 + 80) = 4;
    if (!v8)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542510(a1, a2 + 48);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "serial_number";
    *(_QWORD *)(a1 + 80) = 13;
    if (!v9)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542510(a1, a2 + 72);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v10 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "os_build_version";
    *(_QWORD *)(a1 + 80) = 16;
    if (!v10)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542510(a1, a2 + 96);
  v11 = a2 + 120;
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v12 = *(unsigned __int8 *)(a1 + 88),
        *(_QWORD *)(a1 + 72) = "os_product_version",
        *(_QWORD *)(a1 + 80) = 18,
        v12))
  {
    sub_224542510(a1, v11);
    v13 = *(unsigned __int8 **)(a1 + 40);
    if (*v13 <= 1u)
      goto LABEL_19;
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    sub_224542510(a1, v11);
    v13 = *(unsigned __int8 **)(a1 + 40);
    if (*v13 <= 1u)
    {
LABEL_19:
      *(_QWORD *)(a1 + 72) = "process_id";
      v14 = a1 + 72;
      v16 = (_BYTE *)(a1 + 88);
      v15 = *(unsigned __int8 *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = 10;
      v17 = (_QWORD *)(a1 + 80);
      if (!v15)
        *v16 = 1;
      goto LABEL_28;
    }
  }
  v17 = (_QWORD *)(a1 + 80);
  v14 = a1 + 72;
  v16 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v14 == *(_DWORD *)"version"
      ? (v18 = *(_DWORD *)(*(_QWORD *)v14 + 3) == *(_DWORD *)"sion")
      : (v18 = 0),
        !v18))
  {
LABEL_28:
    v19 = *(int *)(a2 + 144);
    LOBYTE(v30) = 5;
    v31 = v19;
    v20 = (unsigned __int8 *)sub_22453FEA0(a1);
    v21 = *v20;
    *v20 = 5;
    LOBYTE(v30) = v21;
    v22 = (void **)*((_QWORD *)v20 + 1);
    *((_QWORD *)v20 + 1) = v31;
    v31 = (uint64_t)v22;
    sub_22345337C((void ***)&v31, v21);
    v13 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v13 <= 1u)
  {
    v23 = *v16;
    *(_QWORD *)v14 = "process_name";
    *v17 = 12;
    if (!v23)
      *v16 = 1;
  }
  sub_224542510(a1, a2 + 152);
  if (**(unsigned __int8 **)(a1 + 40) > 1u || (v24 = *v16, *(_QWORD *)v14 = "uuid", *v17 = 4, v24))
  {
    v30 = (const char *)(a2 + 176);
    sub_2240E5A20(a1, (unsigned __int8 **)&v30);
    if (a3 < 2)
      return;
  }
  else
  {
    *v16 = 1;
    v30 = (const char *)(a2 + 176);
    sub_2240E5A20(a1, (unsigned __int8 **)&v30);
    if (a3 < 2)
      return;
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v25 = *v16;
    *(_QWORD *)v14 = "protocol_info";
    *v17 = 13;
    if (!v25)
      *v16 = 1;
  }
  sub_22454024C(a1);
  v30 = "version";
  v31 = 7;
  v32 = 1;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v26 = *v16;
    *(_QWORD *)v14 = "version";
    *v17 = 7;
    if (!v26)
      *v16 = 1;
  }
  sub_224542048(a1, &v32);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v27 = *v16;
    *(_QWORD *)v14 = "current";
    *v17 = 7;
    if (!v27)
      *v16 = 1;
  }
  v30 = (const char *)(a2 + 192);
  sub_2240E5B28(a1, (uint64_t **)&v30);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v28 = *v16;
    *(_QWORD *)v14 = "min";
    *v17 = 3;
    if (!v28)
      *v16 = 1;
  }
  v30 = (const char *)(a2 + 204);
  sub_2240E5B28(a1, (uint64_t **)&v30);
  v29 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a1 + 56) = v29 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v16 = 0;
}

void sub_2240E577C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_22345337C(v10, a10);
  _Unwind_Resume(a1);
}

char *sub_2240E5794(char *__dst, __int128 *a2)
{
  __int128 v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  if (*((char *)a2 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    v5 = __dst + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    v5 = __dst + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = *(__int128 *)((char *)a2 + 24);
      *((_QWORD *)v5 + 2) = *((_QWORD *)a2 + 5);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_223197FA4(v5, *((void **)a2 + 3), *((_QWORD *)a2 + 4));
LABEL_6:
  if (*((char *)a2 + 71) < 0)
  {
    sub_223197FA4(__dst + 48, *((void **)a2 + 6), *((_QWORD *)a2 + 7));
  }
  else
  {
    v7 = a2[3];
    *((_QWORD *)__dst + 8) = *((_QWORD *)a2 + 8);
    *((_OWORD *)__dst + 3) = v7;
  }
  if (*((char *)a2 + 95) < 0)
  {
    sub_223197FA4(__dst + 72, *((void **)a2 + 9), *((_QWORD *)a2 + 10));
  }
  else
  {
    v8 = *(__int128 *)((char *)a2 + 72);
    *((_QWORD *)__dst + 11) = *((_QWORD *)a2 + 11);
    *(_OWORD *)(__dst + 72) = v8;
  }
  if (*((char *)a2 + 119) < 0)
  {
    sub_223197FA4(__dst + 96, *((void **)a2 + 12), *((_QWORD *)a2 + 13));
  }
  else
  {
    v9 = a2[6];
    *((_QWORD *)__dst + 14) = *((_QWORD *)a2 + 14);
    *((_OWORD *)__dst + 6) = v9;
  }
  if (*((char *)a2 + 143) < 0)
  {
    sub_223197FA4(__dst + 120, *((void **)a2 + 15), *((_QWORD *)a2 + 16));
  }
  else
  {
    v10 = *(__int128 *)((char *)a2 + 120);
    *((_QWORD *)__dst + 17) = *((_QWORD *)a2 + 17);
    *(_OWORD *)(__dst + 120) = v10;
  }
  *((_DWORD *)__dst + 36) = *((_DWORD *)a2 + 36);
  v11 = __dst + 152;
  if (*((char *)a2 + 175) < 0)
  {
    sub_223197FA4(v11, *((void **)a2 + 19), *((_QWORD *)a2 + 20));
  }
  else
  {
    v12 = *(__int128 *)((char *)a2 + 152);
    *((_QWORD *)__dst + 21) = *((_QWORD *)a2 + 21);
    *(_OWORD *)v11 = v12;
  }
  v13 = a2[11];
  v14 = a2[12];
  *((_QWORD *)__dst + 26) = *((_QWORD *)a2 + 26);
  *((_OWORD *)__dst + 11) = v13;
  *((_OWORD *)__dst + 12) = v14;
  return __dst;
}

void sub_2240E5934(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;

  if (*(char *)(v1 + 143) < 0)
  {
    operator delete(*v6);
    if ((*(char *)(v1 + 119) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 95) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((*(char *)(v1 + 119) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v5);
  if ((*(char *)(v1 + 95) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v1 + 71) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*v4);
  if ((*(char *)(v1 + 71) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v1 + 47) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*v3);
  if ((*(char *)(v1 + 47) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v1 + 23) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_13:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_2240E5A20(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_22319B83C((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240E5AE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E5B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E5B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E5B28(uint64_t a1, uint64_t **a2)
{
  uint64_t *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240E5C30((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240E5BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E5C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E5C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E5C30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_22454DDB8((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_2240E5E80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2240E5EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E5EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2240E5ED4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_2240E6154(a2, (__int128 *)(v3 + 200), 2u);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240E6154(uint64_t a1, __int128 *a2, unsigned int a3)
{
  void *v5[2];
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  sub_2240E5794((char *)v5, a2);
  sub_2240E6298(a1, (uint64_t)v5, a3);
  if (v18 < 0)
  {
    operator delete(__p);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v13);
  if ((v12 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v11);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v6 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v5[0]);
    return;
  }
LABEL_14:
  operator delete(v7);
  if (v6 < 0)
    goto LABEL_15;
}

void sub_2240E6280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224022CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240E6298(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  const void **v7;
  uint64_t v8;
  const void **v9;
  uint64_t v10;
  const void **v11;
  uint64_t v12;
  const void **v13;
  uint64_t v14;
  const void **v15;
  uint64_t v16;
  uint64_t v17;
  const void **v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;

  v6 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v6 + 40))
  {
    v50 = (uint64_t *)(v6 + 16);
    sub_22455B8BC((uint64_t)&v49, &v50, (const void **)a2);
    v7 = (const void **)(a2 + 24);
    v8 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v8 + 40))
      goto LABEL_3;
  }
  else
  {
    sub_22455BCF4((uint64_t)&v50, v6 + 8, a2);
    v7 = (const void **)(a2 + 24);
    v8 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
LABEL_3:
      v50 = (uint64_t *)(v8 + 16);
      sub_22455B8BC((uint64_t)&v49, &v50, v7);
      v9 = (const void **)(a2 + 48);
      v10 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v10 + 40))
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  sub_22455BCF4((uint64_t)&v50, v8 + 8, (uint64_t)v7);
  v9 = (const void **)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v10 + 40))
  {
LABEL_4:
    v50 = (uint64_t *)(v10 + 16);
    sub_22455B8BC((uint64_t)&v49, &v50, v9);
    v11 = (const void **)(a2 + 72);
    v12 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v12 + 40))
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  sub_22455BCF4((uint64_t)&v50, v10 + 8, (uint64_t)v9);
  v11 = (const void **)(a2 + 72);
  v12 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v12 + 40))
  {
LABEL_5:
    v50 = (uint64_t *)(v12 + 16);
    sub_22455B8BC((uint64_t)&v49, &v50, v11);
    v13 = (const void **)(a2 + 96);
    v14 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v14 + 40))
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  sub_22455BCF4((uint64_t)&v50, v12 + 8, (uint64_t)v11);
  v13 = (const void **)(a2 + 96);
  v14 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
LABEL_6:
    v50 = (uint64_t *)(v14 + 16);
    sub_22455B8BC((uint64_t)&v49, &v50, v13);
    v15 = (const void **)(a2 + 120);
    v16 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v16 + 40))
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  sub_22455BCF4((uint64_t)&v50, v14 + 8, (uint64_t)v13);
  v15 = (const void **)(a2 + 120);
  v16 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v16 + 40))
  {
LABEL_7:
    v50 = (uint64_t *)(v16 + 16);
    sub_22455B8BC((uint64_t)&v49, &v50, v15);
    v17 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v17 + 40))
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  sub_22455BCF4((uint64_t)&v50, v16 + 8, (uint64_t)v15);
  v17 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v17 + 40))
  {
LABEL_8:
    v50 = (uint64_t *)(v17 + 16);
    sub_22455A2D4(&v50, *(_DWORD *)(a2 + 144));
    v18 = (const void **)(a2 + 152);
    v19 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v19 + 40))
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  sub_22455A6F0();
  v18 = (const void **)(a2 + 152);
  v19 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v19 + 40))
  {
LABEL_9:
    v50 = (uint64_t *)(v19 + 16);
    sub_22455B8BC((uint64_t)&v49, &v50, v18);
    v20 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v20 + 40))
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  sub_22455BCF4((uint64_t)&v50, v19 + 8, (uint64_t)v18);
  v20 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v20 + 40))
  {
LABEL_10:
    v50 = (uint64_t *)(v20 + 16);
    sub_224559C04(&v50, *(_BYTE *)(a2 + 176));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 177));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 178));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 179));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 180));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 181));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 182));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 183));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 184));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 185));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 186));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 187));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 188));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 189));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 190));
    sub_224559C04(&v50, *(_BYTE *)(a2 + 191));
    if (a3 < 2)
      return;
    goto LABEL_54;
  }
LABEL_20:
  v21 = *(char *)(a2 + 176);
  if (v21 < 0)
  {
    LOBYTE(v50) = -52;
    BYTE1(v50) = v21;
    std::ostream::write();
    v22 = *(char *)(a2 + 177);
    if ((v22 & 0x80000000) == 0)
    {
LABEL_22:
      LOBYTE(v50) = v22;
      std::ostream::write();
      v23 = *(char *)(a2 + 178);
      if ((v23 & 0x80000000) == 0)
        goto LABEL_23;
      goto LABEL_40;
    }
  }
  else
  {
    LOBYTE(v50) = *(_BYTE *)(a2 + 176);
    std::ostream::write();
    v22 = *(char *)(a2 + 177);
    if ((v22 & 0x80000000) == 0)
      goto LABEL_22;
  }
  LOBYTE(v50) = -52;
  BYTE1(v50) = v22;
  std::ostream::write();
  v23 = *(char *)(a2 + 178);
  if ((v23 & 0x80000000) == 0)
  {
LABEL_23:
    LOBYTE(v50) = v23;
    std::ostream::write();
    v24 = *(char *)(a2 + 179);
    if ((v24 & 0x80000000) == 0)
      goto LABEL_24;
    goto LABEL_41;
  }
LABEL_40:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v23;
  std::ostream::write();
  v24 = *(char *)(a2 + 179);
  if ((v24 & 0x80000000) == 0)
  {
LABEL_24:
    LOBYTE(v50) = v24;
    std::ostream::write();
    v25 = *(char *)(a2 + 180);
    if ((v25 & 0x80000000) == 0)
      goto LABEL_25;
    goto LABEL_42;
  }
LABEL_41:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v24;
  std::ostream::write();
  v25 = *(char *)(a2 + 180);
  if ((v25 & 0x80000000) == 0)
  {
LABEL_25:
    LOBYTE(v50) = v25;
    std::ostream::write();
    v26 = *(char *)(a2 + 181);
    if ((v26 & 0x80000000) == 0)
      goto LABEL_26;
    goto LABEL_43;
  }
LABEL_42:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v25;
  std::ostream::write();
  v26 = *(char *)(a2 + 181);
  if ((v26 & 0x80000000) == 0)
  {
LABEL_26:
    LOBYTE(v50) = v26;
    std::ostream::write();
    v27 = *(char *)(a2 + 182);
    if ((v27 & 0x80000000) == 0)
      goto LABEL_27;
    goto LABEL_44;
  }
LABEL_43:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v26;
  std::ostream::write();
  v27 = *(char *)(a2 + 182);
  if ((v27 & 0x80000000) == 0)
  {
LABEL_27:
    LOBYTE(v50) = v27;
    std::ostream::write();
    v28 = *(char *)(a2 + 183);
    if ((v28 & 0x80000000) == 0)
      goto LABEL_28;
    goto LABEL_45;
  }
LABEL_44:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v27;
  std::ostream::write();
  v28 = *(char *)(a2 + 183);
  if ((v28 & 0x80000000) == 0)
  {
LABEL_28:
    LOBYTE(v50) = v28;
    std::ostream::write();
    v29 = *(char *)(a2 + 184);
    if ((v29 & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_46;
  }
LABEL_45:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v28;
  std::ostream::write();
  v29 = *(char *)(a2 + 184);
  if ((v29 & 0x80000000) == 0)
  {
LABEL_29:
    LOBYTE(v50) = v29;
    std::ostream::write();
    v30 = *(char *)(a2 + 185);
    if ((v30 & 0x80000000) == 0)
      goto LABEL_30;
    goto LABEL_47;
  }
LABEL_46:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v29;
  std::ostream::write();
  v30 = *(char *)(a2 + 185);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_30:
    LOBYTE(v50) = v30;
    std::ostream::write();
    v31 = *(char *)(a2 + 186);
    if ((v31 & 0x80000000) == 0)
      goto LABEL_31;
    goto LABEL_48;
  }
LABEL_47:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v30;
  std::ostream::write();
  v31 = *(char *)(a2 + 186);
  if ((v31 & 0x80000000) == 0)
  {
LABEL_31:
    LOBYTE(v50) = v31;
    std::ostream::write();
    v32 = *(char *)(a2 + 187);
    if ((v32 & 0x80000000) == 0)
      goto LABEL_32;
    goto LABEL_49;
  }
LABEL_48:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v31;
  std::ostream::write();
  v32 = *(char *)(a2 + 187);
  if ((v32 & 0x80000000) == 0)
  {
LABEL_32:
    LOBYTE(v50) = v32;
    std::ostream::write();
    v33 = *(char *)(a2 + 188);
    if ((v33 & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_50;
  }
LABEL_49:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v32;
  std::ostream::write();
  v33 = *(char *)(a2 + 188);
  if ((v33 & 0x80000000) == 0)
  {
LABEL_33:
    LOBYTE(v50) = v33;
    std::ostream::write();
    v34 = *(char *)(a2 + 189);
    if ((v34 & 0x80000000) == 0)
      goto LABEL_34;
    goto LABEL_51;
  }
LABEL_50:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v33;
  std::ostream::write();
  v34 = *(char *)(a2 + 189);
  if ((v34 & 0x80000000) == 0)
  {
LABEL_34:
    LOBYTE(v50) = v34;
    std::ostream::write();
    v35 = *(char *)(a2 + 190);
    if ((v35 & 0x80000000) == 0)
      goto LABEL_35;
    goto LABEL_52;
  }
LABEL_51:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v34;
  std::ostream::write();
  v35 = *(char *)(a2 + 190);
  if ((v35 & 0x80000000) == 0)
  {
LABEL_35:
    LOBYTE(v50) = v35;
    std::ostream::write();
    v36 = *(char *)(a2 + 191);
    if ((v36 & 0x80000000) == 0)
      goto LABEL_36;
    goto LABEL_53;
  }
LABEL_52:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v35;
  std::ostream::write();
  v36 = *(char *)(a2 + 191);
  if ((v36 & 0x80000000) == 0)
  {
LABEL_36:
    LOBYTE(v50) = v36;
    std::ostream::write();
    if (a3 < 2)
      return;
    goto LABEL_54;
  }
LABEL_53:
  LOBYTE(v50) = -52;
  BYTE1(v50) = v36;
  std::ostream::write();
  if (a3 < 2)
    return;
LABEL_54:
  v37 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v37 + 40))
  {
    v50 = (uint64_t *)(v37 + 16);
    sub_22455A7EC(&v50, 1u);
    sub_224555278(*(_QWORD *)(a1 + 24));
    v38 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v38 + 40))
      goto LABEL_56;
  }
  else
  {
    sub_22455AA60((uint64_t)&v50, v37 + 8);
    sub_224555278(*(_QWORD *)(a1 + 24));
    v38 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v38 + 40))
    {
LABEL_56:
      v50 = (uint64_t *)(v38 + 16);
      sub_22455A7EC(&v50, *(_DWORD *)(a2 + 192));
      v39 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v39 + 40))
        goto LABEL_57;
      goto LABEL_64;
    }
  }
  sub_22455AA60((uint64_t)&v50, v38 + 8);
  v39 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v39 + 40))
  {
LABEL_57:
    v50 = (uint64_t *)(v39 + 16);
    sub_22455A7EC(&v50, *(_DWORD *)(a2 + 196));
    v40 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v40 + 40))
      goto LABEL_58;
    goto LABEL_65;
  }
LABEL_64:
  sub_22455AA60((uint64_t)&v50, v39 + 8);
  v40 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v40 + 40))
  {
LABEL_58:
    v50 = (uint64_t *)(v40 + 16);
    sub_22455A7EC(&v50, *(_DWORD *)(a2 + 200));
    v41 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v41 + 40))
      goto LABEL_59;
    goto LABEL_66;
  }
LABEL_65:
  sub_22455AA60((uint64_t)&v50, v40 + 8);
  v41 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v41 + 40))
  {
LABEL_59:
    v50 = (uint64_t *)(v41 + 16);
    sub_22455A7EC(&v50, *(_DWORD *)(a2 + 204));
    v42 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v42 + 40))
      goto LABEL_60;
LABEL_67:
    sub_22455AA60((uint64_t)&v50, v42 + 8);
    v43 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v43 + 40))
      goto LABEL_61;
LABEL_68:
    sub_22455AA60((uint64_t)&v50, v43 + 8);
    goto LABEL_69;
  }
LABEL_66:
  sub_22455AA60((uint64_t)&v50, v41 + 8);
  v42 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(v42 + 40))
    goto LABEL_67;
LABEL_60:
  v50 = (uint64_t *)(v42 + 16);
  sub_22455A7EC(&v50, *(_DWORD *)(a2 + 208));
  v43 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(v43 + 40))
    goto LABEL_68;
LABEL_61:
  v50 = (uint64_t *)(v43 + 16);
  sub_22455A7EC(&v50, *(_DWORD *)(a2 + 212));
LABEL_69:
  v44 = *(_QWORD *)(a1 + 24);
  v45 = *(_QWORD *)(*(_QWORD *)(v44 + 88) - 8);
  sub_224554D6C((uint64_t *)(v44 + 48), *(_QWORD *)(v44 + 16) - v45 - 9);
  v46 = *(_QWORD *)(v44 + 48);
  if (v46)
    memmove((void *)(*(_QWORD *)(v44 + 24) + v45), *(const void **)(v44 + 56), v46);
  *(_QWORD *)(v44 + 48) = 0;
  v47 = *(_QWORD *)(v44 + 80);
  v48 = *(_QWORD *)(v44 + 88) - 8;
  *(_QWORD *)(v44 + 88) = v48;
  if (v47 == v48)
  {
    std::ostream::write();
    if (*(_BYTE *)(v44 + 40))
    {
      free(*(void **)(v44 + 24));
      *(_BYTE *)(v44 + 40) = 0;
    }
  }
}

void sub_2240E6BDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240E6EDC(a2, (__int128 *)(v3 + 200), v18);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240E6EDC(uint64_t a1, __int128 *a2, unsigned int a3)
{
  void *v5[2];
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  sub_2240E5794((char *)v5, a2);
  sub_2240E7020(a1, (uint64_t)v5, a3);
  if (v18 < 0)
  {
    operator delete(__p);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v13);
  if ((v12 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v11);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v6 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v5[0]);
    return;
  }
LABEL_14:
  operator delete(v7);
  if (v6 < 0)
    goto LABEL_15;
}

void sub_2240E7008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224022CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240E7020(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  _QWORD *v17;
  BOOL v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  int v32;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "user_given_name";
    *(_QWORD *)(a1 + 80) = 15;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2245409C8(a1, a2);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "product_name";
    *(_QWORD *)(a1 + 80) = 12;
    if (!v7)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2245409C8(a1, a2 + 24);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "type";
    *(_QWORD *)(a1 + 80) = 4;
    if (!v8)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2245409C8(a1, a2 + 48);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "serial_number";
    *(_QWORD *)(a1 + 80) = 13;
    if (!v9)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2245409C8(a1, a2 + 72);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v10 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "os_build_version";
    *(_QWORD *)(a1 + 80) = 16;
    if (!v10)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2245409C8(a1, a2 + 96);
  v11 = a2 + 120;
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v12 = *(unsigned __int8 *)(a1 + 88),
        *(_QWORD *)(a1 + 72) = "os_product_version",
        *(_QWORD *)(a1 + 80) = 18,
        v12))
  {
    sub_2245409C8(a1, v11);
    v13 = *(unsigned __int8 **)(a1 + 40);
    if (*v13 <= 1u)
      goto LABEL_19;
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    sub_2245409C8(a1, v11);
    v13 = *(unsigned __int8 **)(a1 + 40);
    if (*v13 <= 1u)
    {
LABEL_19:
      *(_QWORD *)(a1 + 72) = "process_id";
      v14 = a1 + 72;
      v16 = (_BYTE *)(a1 + 88);
      v15 = *(unsigned __int8 *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = 10;
      v17 = (_QWORD *)(a1 + 80);
      if (!v15)
        *v16 = 1;
      goto LABEL_28;
    }
  }
  v17 = (_QWORD *)(a1 + 80);
  v14 = a1 + 72;
  v16 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v14 == *(_DWORD *)"version"
      ? (v18 = *(_DWORD *)(*(_QWORD *)v14 + 3) == *(_DWORD *)"sion")
      : (v18 = 0),
        !v18))
  {
LABEL_28:
    v19 = *(int *)(a2 + 144);
    LOBYTE(v30) = 5;
    v31 = v19;
    v20 = (unsigned __int8 *)sub_22453F8B8(a1);
    v21 = *v20;
    *v20 = 5;
    LOBYTE(v30) = v21;
    v22 = *((_QWORD *)v20 + 1);
    *((_QWORD *)v20 + 1) = v31;
    v31 = v22;
    sub_223454278(&v31, v21);
    v13 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v13 <= 1u)
  {
    v23 = *v16;
    *(_QWORD *)v14 = "process_name";
    *v17 = 12;
    if (!v23)
      *v16 = 1;
  }
  sub_2245409C8(a1, a2 + 152);
  if (**(unsigned __int8 **)(a1 + 40) > 1u || (v24 = *v16, *(_QWORD *)v14 = "uuid", *v17 = 4, v24))
  {
    v30 = (const char *)(a2 + 176);
    sub_2240E74B8(a1, (unsigned __int8 **)&v30);
    if (a3 < 2)
      return;
  }
  else
  {
    *v16 = 1;
    v30 = (const char *)(a2 + 176);
    sub_2240E74B8(a1, (unsigned __int8 **)&v30);
    if (a3 < 2)
      return;
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v25 = *v16;
    *(_QWORD *)v14 = "protocol_info";
    *v17 = 13;
    if (!v25)
      *v16 = 1;
  }
  sub_22453FAE0(a1);
  v30 = "version";
  v31 = 7;
  v32 = 1;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v26 = *v16;
    *(_QWORD *)v14 = "version";
    *v17 = 7;
    if (!v26)
      *v16 = 1;
  }
  sub_224540500(a1, &v32);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v27 = *v16;
    *(_QWORD *)v14 = "current";
    *v17 = 7;
    if (!v27)
      *v16 = 1;
  }
  v30 = (const char *)(a2 + 192);
  sub_2240E75C0(a1, (uint64_t **)&v30);
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v28 = *v16;
    *(_QWORD *)v14 = "min";
    *v17 = 3;
    if (!v28)
      *v16 = 1;
  }
  v30 = (const char *)(a2 + 204);
  sub_2240E75C0(a1, (uint64_t **)&v30);
  v29 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a1 + 56) = v29 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v16 = 0;
}

void sub_2240E74A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_223454278(v10, a10);
  _Unwind_Resume(a1);
}

void sub_2240E74B8(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_22319B83C((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240E757C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E7598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E75AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E75C0(uint64_t a1, uint64_t **a2)
{
  uint64_t *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240E5C30((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240E7684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E76A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E76B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240E76C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240E78E0(a2, (__int128 *)(v3 + 200), 2u);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240E78E0(uint64_t a1, __int128 *a2, unsigned int a3)
{
  void *v5[2];
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  sub_2240E5794((char *)v5, a2);
  sub_2240E7A24(a1, (unsigned __int8 *)v5, a3);
  if (v18 < 0)
  {
    operator delete(__p);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v13);
  if ((v12 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v11);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v6 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v5[0]);
    return;
  }
LABEL_14:
  operator delete(v7);
  if (v6 < 0)
    goto LABEL_15;
}

void sub_2240E7A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224022CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240E7A24(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  sub_22454F620(a1, (uint64_t)a2);
  sub_22454F620(a1, (uint64_t)(a2 + 24));
  sub_22454F620(a1, (uint64_t)(a2 + 48));
  sub_22454F620(a1, (uint64_t)(a2 + 72));
  sub_22454F620(a1, (uint64_t)(a2 + 96));
  sub_22454F620(a1, (uint64_t)(a2 + 120));
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    v24 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)&v24, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_22454F620(a1, (uint64_t)(a2 + 152));
  sub_22454F564(a1, a2 + 176);
  sub_22454F564(a1, a2 + 177);
  sub_22454F564(a1, a2 + 178);
  sub_22454F564(a1, a2 + 179);
  sub_22454F564(a1, a2 + 180);
  sub_22454F564(a1, a2 + 181);
  sub_22454F564(a1, a2 + 182);
  sub_22454F564(a1, a2 + 183);
  sub_22454F564(a1, a2 + 184);
  sub_22454F564(a1, a2 + 185);
  sub_22454F564(a1, a2 + 186);
  sub_22454F564(a1, a2 + 187);
  sub_22454F564(a1, a2 + 188);
  sub_22454F564(a1, a2 + 189);
  sub_22454F564(a1, a2 + 190);
  sub_22454F564(a1, a2 + 191);
  if (a3 >= 2)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v7 = *(_QWORD **)(a1 + 24);
      v25 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v7, (uint64_t)&v25, 1);
    }
    std::ostream::operator<<();
    v8 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v8 + 1;
    if (v8 != -1)
    {
      v9 = *(_QWORD **)(a1 + 24);
      v26 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v9, (uint64_t)&v26, 1);
    }
    std::ostream::operator<<();
    v10 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v10 + 1;
    if (v10 != -1)
    {
      v11 = *(_QWORD **)(a1 + 24);
      v27 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v11, (uint64_t)&v27, 1);
    }
    std::ostream::operator<<();
    v12 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v12 + 1;
    if (v12 != -1)
    {
      v13 = *(_QWORD **)(a1 + 24);
      v28 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v13, (uint64_t)&v28, 1);
    }
    std::ostream::operator<<();
    v14 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v14 + 1;
    if (v14 != -1)
    {
      v15 = *(_QWORD **)(a1 + 24);
      v29 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v15, (uint64_t)&v29, 1);
    }
    std::ostream::operator<<();
    v16 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v16 + 1;
    if (v16 != -1)
    {
      v17 = *(_QWORD **)(a1 + 24);
      v30 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v17, (uint64_t)&v30, 1);
    }
    std::ostream::operator<<();
    v18 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = v18 + 1;
    if (v18 != -1)
    {
      v19 = *(_QWORD **)(a1 + 24);
      v31 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v19, (uint64_t)&v31, 1);
    }
    std::ostream::operator<<();
    v20 = *(_QWORD *)(a1 + 40);
    v21 = *(_BYTE *)(a1 + 34);
    *(_QWORD *)(a1 + 40) = v20 + 1;
    if (v20 != -1)
    {
      v22 = *(_QWORD **)(a1 + 24);
      v32 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v22, (uint64_t)&v32, 1);
    }
    v23 = *(_QWORD **)(a1 + 24);
    v33 = v21;
    sub_2231813E8(v23, (uint64_t)&v33, 1);
    ++*(_QWORD *)(a1 + 40);
  }
}

void sub_2240E7D54(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  __int128 *v10;
  unsigned int v11;
  uint64_t v12;
  int __src;
  uint64_t v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v14, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v14, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v14, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  v10 = (__int128 *)(v3 + 200);
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v14, 4);
  v11 = __src;
  sub_2244FF590((_QWORD *)a2);
  sub_2240E7F0C(a2, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v12 + 10) = *(_QWORD *)(a2 + 32) - v12 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240E7F0C(uint64_t a1, __int128 *a2, unsigned int a3)
{
  void *v5[2];
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  sub_2240E5794((char *)v5, a2);
  sub_2240E8050(a1, (uint64_t)v5, a3);
  if (v18 < 0)
  {
    operator delete(__p);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v13);
  if ((v12 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v11);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v6 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v5[0]);
    return;
  }
LABEL_14:
  operator delete(v7);
  if (v6 < 0)
    goto LABEL_15;
}

void sub_2240E8038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224022CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_2240E8050(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  char *v9;
  BOOL v10;
  _BOOL4 v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  char *v17;
  int64_t v18;
  _BOOL4 v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  _BOOL4 v23;
  uint64_t v24;
  char *v25;
  int64_t v26;
  _BOOL4 v27;
  uint64_t v28;
  char *v29;
  int64_t v30;
  _BOOL4 v31;
  uint64_t v32;
  char *v33;
  int64_t v34;
  _BOOL4 v35;
  char *result;
  uint64_t v37;
  uint64_t __src;
  uint64_t v39;

  v6 = *(unsigned __int8 *)(a2 + 23);
  if ((v6 & 0x80u) != 0)
    v6 = *(_QWORD *)(a2 + 8);
  __src = v6;
  v7 = a1 + 24;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 23) < 0)
  {
    v9 = *(char **)a2;
    v8 = *(_QWORD *)(a2 + 8);
    if (*(_QWORD *)a2)
      v10 = 1;
    else
      v10 = v8 == 0;
    if (!v10)
    {
      v11 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
      v9 = 0;
      if (v11)
        goto LABEL_55;
    }
  }
  else
  {
    v8 = *(unsigned __int8 *)(a2 + 23);
    v9 = (char *)a2;
  }
  sub_224501B60(v7, *(char **)(a1 + 32), v9, &v9[v8], v8);
  v12 = *(unsigned __int8 *)(a2 + 47);
  if ((v12 & 0x80u) != 0)
    v12 = *(_QWORD *)(a2 + 32);
  __src = v12;
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 47) < 0)
  {
    v13 = *(char **)(a2 + 24);
    v14 = *(_QWORD *)(a2 + 32);
    if (!v13)
    {
      if (v14)
      {
        v15 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v13 = 0;
        if (v15)
          goto LABEL_55;
      }
    }
  }
  else
  {
    v13 = (char *)(a2 + 24);
    v14 = *(unsigned __int8 *)(a2 + 47);
  }
  sub_224501B60(v7, *(char **)(a1 + 32), v13, &v13[v14], v14);
  v16 = *(unsigned __int8 *)(a2 + 71);
  if ((v16 & 0x80u) != 0)
    v16 = *(_QWORD *)(a2 + 56);
  __src = v16;
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 71) < 0)
  {
    v17 = *(char **)(a2 + 48);
    v18 = *(_QWORD *)(a2 + 56);
    if (!v17)
    {
      if (v18)
      {
        v19 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v17 = 0;
        if (v19)
          goto LABEL_55;
      }
    }
  }
  else
  {
    v17 = (char *)(a2 + 48);
    v18 = *(unsigned __int8 *)(a2 + 71);
  }
  sub_224501B60(v7, *(char **)(a1 + 32), v17, &v17[v18], v18);
  v20 = *(unsigned __int8 *)(a2 + 95);
  if ((v20 & 0x80u) != 0)
    v20 = *(_QWORD *)(a2 + 80);
  __src = v20;
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 95) < 0)
  {
    v21 = *(char **)(a2 + 72);
    v22 = *(_QWORD *)(a2 + 80);
    if (!v21)
    {
      if (v22)
      {
        v23 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v21 = 0;
        if (v23)
          goto LABEL_55;
      }
    }
  }
  else
  {
    v21 = (char *)(a2 + 72);
    v22 = *(unsigned __int8 *)(a2 + 95);
  }
  sub_224501B60(v7, *(char **)(a1 + 32), v21, &v21[v22], v22);
  v24 = *(unsigned __int8 *)(a2 + 119);
  if ((v24 & 0x80u) != 0)
    v24 = *(_QWORD *)(a2 + 104);
  __src = v24;
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 119) < 0)
  {
    v25 = *(char **)(a2 + 96);
    v26 = *(_QWORD *)(a2 + 104);
    if (!v25)
    {
      if (v26)
      {
        v27 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v25 = 0;
        if (v27)
          goto LABEL_55;
      }
    }
  }
  else
  {
    v25 = (char *)(a2 + 96);
    v26 = *(unsigned __int8 *)(a2 + 119);
  }
  sub_224501B60(v7, *(char **)(a1 + 32), v25, &v25[v26], v26);
  v28 = *(unsigned __int8 *)(a2 + 143);
  if ((v28 & 0x80u) != 0)
    v28 = *(_QWORD *)(a2 + 128);
  __src = v28;
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 143) < 0)
  {
    v29 = *(char **)(a2 + 120);
    v30 = *(_QWORD *)(a2 + 128);
    if (!v29)
    {
      if (v30)
      {
        v31 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        v29 = 0;
        if (v31)
          goto LABEL_55;
      }
    }
  }
  else
  {
    v29 = (char *)(a2 + 120);
    v30 = *(unsigned __int8 *)(a2 + 143);
  }
  sub_224501B60(v7, *(char **)(a1 + 32), v29, &v29[v30], v30);
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 144), (char *)(a2 + 148), 4);
  v32 = *(unsigned __int8 *)(a2 + 175);
  if ((v32 & 0x80u) != 0)
    v32 = *(_QWORD *)(a2 + 160);
  __src = v32;
  sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v39, 8);
  if (*(char *)(a2 + 175) < 0)
  {
    v33 = *(char **)(a2 + 152);
    v34 = *(_QWORD *)(a2 + 160);
    if (v33)
      goto LABEL_52;
    if (!v34)
      goto LABEL_52;
    v35 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
    v33 = 0;
    if (!v35)
      goto LABEL_52;
LABEL_55:
    abort();
  }
  v33 = (char *)(a2 + 152);
  v34 = *(unsigned __int8 *)(a2 + 175);
LABEL_52:
  sub_224501B60(v7, *(char **)(a1 + 32), v33, &v33[v34], v34);
  result = sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 176), (char *)(a2 + 192), 16);
  if (a3 >= 2)
  {
    LODWORD(__src) = 1;
    sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
    sub_2244FF590((_QWORD *)a1);
    sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 192), (char *)(a2 + 196), 4);
    sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 196), (char *)(a2 + 200), 4);
    sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 200), (char *)(a2 + 204), 4);
    sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 204), (char *)(a2 + 208), 4);
    sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 208), (char *)(a2 + 212), 4);
    result = sub_224501B60(v7, *(char **)(a1 + 32), (char *)(a2 + 212), (char *)(a2 + 216), 4);
    v37 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
    *(_QWORD *)(v37 + 10) = *(_QWORD *)(a1 + 32) - v37 - 18;
    *(_QWORD *)(a1 + 56) -= 8;
  }
  return result;
}

void sub_2240E862C(uint64_t a1, __int128 *a2, unsigned int a3)
{
  void *v5[2];
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  char v16;
  void *__p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  sub_2240E5794((char *)v5, a2);
  sub_2240E8770(a1, (uint64_t)v5, a3);
  if (v18 < 0)
  {
    operator delete(__p);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v15);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v12 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(v13);
  if ((v12 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v10 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v11);
  if ((v10 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v6 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v5[0]);
    return;
  }
LABEL_14:
  operator delete(v7);
  if (v6 < 0)
    goto LABEL_15;
}

void sub_2240E8758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224022CC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240E8770(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 96);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 56))(a1, a2 + 144);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 152);
  sub_2240E8868((_BYTE *)a1, (unsigned __int8 *)(a2 + 176));
  if (a3 >= 2)
  {
    v6 = *(_QWORD *)(a1 + 8);
    sub_2240E8B04((int *)&v6, (_BYTE *)a1, (uint64_t *)(a2 + 192));
  }
}

void sub_2240E8868(_BYTE *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v4;

  if ((a1[12] & 2) != 0)
  {
    v4 = a2;
    sub_2240E89F4((uint64_t)a1, &v4);
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 1);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 2);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 3);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 4);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 5);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 6);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 7);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 8);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 9);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 10);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 11);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 12);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 13);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 14);
    (*(void (**)(_BYTE *, unsigned __int8 *))(*(_QWORD *)a1 + 80))(a1, a2 + 15);
  }
}

void sub_2240E89F4(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_22319B83C((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240E8AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E8ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E8AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E8B04(int *a1, _BYTE *a2, uint64_t *a3)
{
  uint64_t *v6;
  uint64_t *v7;

  LODWORD(v7) = 1;
  (*(void (**)(_BYTE *, uint64_t **))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 >= 1)
  {
    sub_2240E8C60(a1, a2, a3);
    return;
  }
  if ((a2[12] & 2) != 0)
  {
    v7 = a3;
    sub_2240E8DC8((uint64_t)a2, &v7);
    v6 = (uint64_t *)((char *)a3 + 12);
    if ((a2[12] & 2) != 0)
      goto LABEL_5;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, a3);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 4);
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, a3 + 1);
    v6 = (uint64_t *)((char *)a3 + 12);
    if ((a2[12] & 2) != 0)
    {
LABEL_5:
      v7 = v6;
      sub_2240E8DC8((uint64_t)a2, &v7);
      return;
    }
  }
  (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, v6);
  (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, a3 + 2);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 20);
}

void sub_2240E8C60(int *a1, _BYTE *a2, uint64_t *a3)
{
  int v5;
  uint64_t *v7;
  uint64_t *v8;

  v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v8) = 1;
    (*(void (**)(_BYTE *, uint64_t **))(*(_QWORD *)a2 + 104))(a2, &v8);
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
  if ((a2[12] & 2) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, a3);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 4);
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, a3 + 1);
    v7 = (uint64_t *)((char *)a3 + 12);
    if ((a2[12] & 2) != 0)
      goto LABEL_7;
LABEL_10:
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, v7);
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, a3 + 2);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 20);
    if (v5 < 1)
      return;
    goto LABEL_11;
  }
  v8 = a3;
  sub_2240E8DC8((uint64_t)a2, &v8);
  v7 = (uint64_t *)((char *)a3 + 12);
  if ((a2[12] & 2) == 0)
    goto LABEL_10;
LABEL_7:
  v8 = v7;
  sub_2240E8DC8((uint64_t)a2, &v8);
  if (v5 >= 1)
LABEL_11:
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

void sub_2240E8DC8(uint64_t a1, uint64_t **a2)
{
  uint64_t *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240E5C30((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240E8E94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240E8EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E8EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240E8ED8(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240E950C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240EA7F0(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240EAF34(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240EBD94(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240EC8A0(&v9, a1);
          else
            sub_2240E903C(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_2240E903C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_223BD7864((uint64_t)&v28, a2, v4, v28);
    else
      sub_223BD7AD8(a2, v4, v28);
  }
  else
  {
    sub_223BD7174((int *)v27, a2, v4, v28);
  }
  sub_2240ED194((uint64_t)v27, (_DWORD *)a2, v3 + 200);
}

void sub_2240E94C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240E950C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451CAD4(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_2240E9A64(a2, v3 + 200, v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_2240E9A1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240E9A64(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  void **v7;
  int v8;
  void **v9;
  void **v10;
  int v11;
  void **v12;
  void **v13;
  int v14;
  void **v15;
  void **v16;
  int v17;
  void **v18;
  void **v19;
  int v20;
  void **v21;
  void **v22;
  int v23;
  char *v24;
  int v25;
  void **v26;
  void **v27;
  int v28;
  int v29;
  int v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *exception;
  __int128 v37;
  uint64_t v38;

  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "user_given_name";
  *(_QWORD *)(a1 + 96) = 15;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  v7 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v7, (uint64_t)&v37);
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
  *(_OWORD *)a2 = v37;
  *(_QWORD *)(a2 + 16) = v38;
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "product_name";
  *(_QWORD *)(a1 + 96) = 12;
  if (!v8)
    *(_BYTE *)(a1 + 104) = 1;
  v9 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v9, (uint64_t)&v37);
  v10 = (void **)(a2 + 24);
  if (*(char *)(a2 + 47) < 0)
    operator delete(*v10);
  *(_OWORD *)v10 = v37;
  *(_QWORD *)(a2 + 40) = v38;
  v11 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "type";
  *(_QWORD *)(a1 + 96) = 4;
  if (!v11)
    *(_BYTE *)(a1 + 104) = 1;
  v12 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v12, (uint64_t)&v37);
  v13 = (void **)(a2 + 48);
  if (*(char *)(a2 + 71) < 0)
    operator delete(*v13);
  *(_OWORD *)v13 = v37;
  *(_QWORD *)(a2 + 64) = v38;
  v14 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "serial_number";
  *(_QWORD *)(a1 + 96) = 13;
  if (!v14)
    *(_BYTE *)(a1 + 104) = 1;
  v15 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v15, (uint64_t)&v37);
  v16 = (void **)(a2 + 72);
  if (*(char *)(a2 + 95) < 0)
    operator delete(*v16);
  *(_OWORD *)v16 = v37;
  *(_QWORD *)(a2 + 88) = v38;
  v17 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "os_build_version";
  *(_QWORD *)(a1 + 96) = 16;
  if (!v17)
    *(_BYTE *)(a1 + 104) = 1;
  v18 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v18, (uint64_t)&v37);
  v19 = (void **)(a2 + 96);
  if (*(char *)(a2 + 119) < 0)
    operator delete(*v19);
  *(_OWORD *)v19 = v37;
  *(_QWORD *)(a2 + 112) = v38;
  v20 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "os_product_version";
  *(_QWORD *)(a1 + 96) = 18;
  if (!v20)
    *(_BYTE *)(a1 + 104) = 1;
  v21 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v21, (uint64_t)&v37);
  v22 = (void **)(a2 + 120);
  if (*(char *)(a2 + 143) < 0)
    operator delete(*v22);
  *(_OWORD *)v22 = v37;
  *(_QWORD *)(a2 + 136) = v38;
  v23 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "process_id";
  *(_QWORD *)(a1 + 96) = 10;
  if (!v23)
    *(_BYTE *)(a1 + 104) = 1;
  v24 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v37 = 0;
  sub_22451CC1C(v24, &v37);
  if ((_QWORD)v37 != (int)v37)
    goto LABEL_46;
  *(_DWORD *)(a2 + 144) = v37;
  v25 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "process_name";
  *(_QWORD *)(a1 + 96) = 12;
  if (!v25)
    *(_BYTE *)(a1 + 104) = 1;
  v26 = (void **)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451CFD4(v26, (uint64_t)&v37);
  v27 = (void **)(a2 + 152);
  if (*(char *)(a2 + 175) < 0)
    operator delete(*v27);
  *(_OWORD *)v27 = v37;
  *(_QWORD *)(a2 + 168) = v38;
  v28 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "uuid";
  *(_QWORD *)(a1 + 96) = 4;
  if (v28)
  {
    *(_QWORD *)&v37 = a2 + 176;
    sub_2240E9F7C((uint64_t *)a1, (_OWORD **)&v37);
    if (a3 < 2)
      return;
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    *(_QWORD *)&v37 = a2 + 176;
    sub_2240E9F7C((uint64_t *)a1, (_OWORD **)&v37);
    if (a3 < 2)
      return;
  }
  v29 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "protocol_info";
  *(_QWORD *)(a1 + 96) = 13;
  if (!v29)
    *(_BYTE *)(a1 + 104) = 1;
  sub_224544628(a1);
  v30 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v30)
    *(_BYTE *)(a1 + 104) = 1;
  v31 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v37 = 0;
  sub_22451CAD4(v31, &v37);
  if (DWORD1(v37))
  {
LABEL_46:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v32 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "current";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v32)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v37 = a2 + 192;
  sub_2240EA600((uint64_t *)a1, (uint64_t *)&v37);
  v33 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "min";
  *(_QWORD *)(a1 + 96) = 3;
  if (!v33)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v37 = a2 + 204;
  sub_2240EA600((uint64_t *)a1, (uint64_t *)&v37);
  v34 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v34 - 8);
  v35 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v35 - 8);
  *(_QWORD *)(a1 + 48) = v34 - 8;
  *(_QWORD *)(a1 + 72) = v35 - 8;
}

void sub_2240E9F44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_2240E9F7C(uint64_t *a1, _OWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v17 = 0;
  v16 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v16);
  v14 = v17;
  *(_OWORD *)__p = v16;
  v5 = SHIBYTE(v17);
  v6 = (char *)v16;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  v15 = v8;
  v16 = 0uLL;
  sub_2240EA17C((uint64_t *)v8, &v16);
  v10 = MEMORY[0x24BEDB7F0];
  v11 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v11 - 24)) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v12;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v16;
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
}

void sub_2240EA0EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  sub_22456E764(&a15);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t *sub_2240EA17C(uint64_t *a1, _OWORD *a2)
{
  std::runtime_error *exception;
  std::string v6;
  void *__p[2];
  uint64_t v8;
  __int128 v9;
  char v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  __p[0] = 0;
  __p[1] = 0;
  v8 = 0;
  sub_2240EA2BC(a1, (uint64_t)__p);
  sub_224566720((unint64_t)__p, (uint64_t)&v9);
  if (!v10)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    std::runtime_error::runtime_error(exception, &v6);
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
  *a2 = v9;
  if (SHIBYTE(v8) < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_2240EA268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  void *v20;
  int v21;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v21 & 1) == 0)
    {
LABEL_6:
      if (a20 < 0)
        operator delete(a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v21)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v20);
  goto LABEL_6;
}

uint64_t *sub_2240EA2BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned __int8 *v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  _BYTE *v15;
  size_t v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  const std::locale::facet *v29;
  std::locale v30;
  char v31;

  MEMORY[0x227684550](&v31, a1, 0);
  if (!v31)
    return a1;
  if (*(char *)(a2 + 23) < 0)
  {
    **(_BYTE **)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 23) = 0;
  }
  v4 = *(_QWORD *)(*a1 - 24);
  v5 = *(uint64_t *)((char *)a1 + v4 + 24);
  if (v5 <= 1)
    v6 = 1;
  else
    v6 = *(uint64_t *)((char *)a1 + v4 + 24);
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + v4));
  v29 = std::locale::use_facet(&v30, MEMORY[0x24BEDB350]);
  std::locale::~locale(&v30);
  v7 = 0;
  v8 = a1 + 5;
  if (v5 >= 1)
    v9 = v6;
  else
    v9 = 0x7FFFFFFFFFFFFFF7;
  while (1)
  {
    v10 = *(_QWORD **)((char *)v8 + *(_QWORD *)(*a1 - 24));
    v11 = (unsigned __int8 *)v10[3];
    if (v11 == (unsigned __int8 *)v10[4])
      break;
    v12 = *v11;
LABEL_16:
    if ((v12 & 0x80) == 0 && (*((_DWORD *)&v29[1].~facet + v12) & 0x4000) != 0)
    {
      v26 = 0;
      goto LABEL_44;
    }
    v14 = *(char *)(a2 + 23);
    if (v14 < 0)
    {
      v17 = *(_QWORD *)(a2 + 16) & 0x7FFFFFFFFFFFFFFFLL;
      v16 = v17 - 1;
      if (*(_QWORD *)(a2 + 8) == v17 - 1)
      {
        if (v17 == 0x7FFFFFFFFFFFFFF8)
          sub_22316DBC0();
        v15 = *(_BYTE **)a2;
        v18 = 0x7FFFFFFFFFFFFFF7;
        if (v16 <= 0x3FFFFFFFFFFFFFF2)
        {
LABEL_24:
          if (v16 + 1 > 2 * v16)
            v19 = v16 + 1;
          else
            v19 = 2 * v16;
          v20 = (v19 & 0x7FFFFFFFFFFFFFF8) + 8;
          if ((v19 | 7) != 0x17)
            v20 = v19 | 7;
          if (v19 >= 0x17)
            v18 = v20 + 1;
          else
            v18 = 23;
        }
        v21 = operator new(v18);
        v22 = v21;
        if (!v16 || (memmove(v21, v15, v16), v16 != 22))
          operator delete(v15);
        *(_QWORD *)a2 = v22;
        *(_QWORD *)(a2 + 16) = v18 | 0x8000000000000000;
      }
      else
      {
        v22 = *(_BYTE **)a2;
        v16 = *(_QWORD *)(a2 + 8);
      }
      *(_QWORD *)(a2 + 8) = v16 + 1;
      goto LABEL_39;
    }
    if (*(_BYTE *)(a2 + 23) == 22)
    {
      v15 = (_BYTE *)a2;
      v16 = 22;
      goto LABEL_24;
    }
    v16 = *(unsigned __int8 *)(a2 + 23);
    *(_BYTE *)(a2 + 23) = (v14 + 1) & 0x7F;
    v22 = (_BYTE *)a2;
LABEL_39:
    v23 = &v22[v16];
    *v23 = v12;
    v23[1] = 0;
    v24 = *(_QWORD **)((char *)v8 + *(_QWORD *)(*a1 - 24));
    v25 = v24[3];
    if (v25 == v24[4])
      (*(void (**)(_QWORD *))(*v24 + 80))(v24);
    else
      v24[3] = v25 + 1;
    if (v9 == ++v7)
    {
      v26 = 0;
      v27 = *a1;
      *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = 0;
      goto LABEL_46;
    }
  }
  v13 = (*(uint64_t (**)(_QWORD *))(*v10 + 72))(v10);
  v12 = v13;
  if (v13 != -1)
    goto LABEL_16;
  v26 = 2;
LABEL_44:
  v27 = *a1;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = 0;
  if (!v7)
    v26 |= 4u;
LABEL_46:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(v27 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(v27 - 24) + 32) | v26);
  return a1;
}

void sub_2240EA580(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::locale a11)
{
  __break(1u);
}

void sub_2240EA5EC(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2240EA600(uint64_t *a1, uint64_t *a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *__p[2];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  __p[0] = 0;
  __p[1] = 0;
  v16 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v19 = 0;
  v18 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v18);
  v16 = v19;
  *(_OWORD *)__p = v18;
  v5 = SHIBYTE(v19);
  v6 = (char *)v18;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  v17 = v8;
  *(_QWORD *)&v18 = 0;
  DWORD2(v18) = 0;
  sub_22454DE78((uint64_t *)v8, (uint64_t)&v18);
  v10 = MEMORY[0x24BEDB7F0];
  v11 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v11 - 24)) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v12;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  v13 = DWORD2(v18);
  v14 = *a2;
  *(_QWORD *)v14 = v18;
  *(_DWORD *)(v14 + 8) = v13;
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
}

void sub_2240EA760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764(&a16);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_2240EA7F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  _QWORD *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char v30;
  uint64_t v31[27];
  _BYTE v32[8];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v31);
    sub_223B87C9C((uint64_t)v32, v31);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v32);
        if (!v47)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v8 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v8;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v38;
    v10 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v11 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v11;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v12 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v12;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v15 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v45;
LABEL_45:
    *((_QWORD *)&v45 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v31);
  sub_223B87C9C((uint64_t)v32, v31);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v17 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v17;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v38;
    v19 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v20 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v20;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v21 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v21;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v32);
  if (v47)
  {
LABEL_38:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v23 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v44 && SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  sub_2231AD66C((uint64_t)v31);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v31, a2, v4);
  LODWORD(v31[0]) = 2;
  sub_224554038(a2[6], v31);
  v24 = v31[0];
  v25 = a2 + 2;
  sub_2231B1308(a2 + 2);
  if (v24 >= 2)
    v26 = 2;
  else
    v26 = v24;
  sub_2240EACD8(a2, v3 + 200, v26);
  v27 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(*v25 + 32))(a2 + 2);
  v29 = *(_QWORD *)(v27 - 16) - result + *(_QWORD *)(v27 - 8);
  if (v29)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v25 + 40))(a2 + 2, v29);
  a2[4] -= 16;
  return result;
}

void sub_2240EAC90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240EACD8(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  char v7;
  int v8;

  sub_22455481C(a1[6], (void **)a2);
  sub_22455481C(a1[6], (void **)(a2 + 24));
  sub_22455481C(a1[6], (void **)(a2 + 48));
  sub_22455481C(a1[6], (void **)(a2 + 72));
  sub_22455481C(a1[6], (void **)(a2 + 96));
  sub_22455481C(a1[6], (void **)(a2 + 120));
  sub_224553F80(a1[6], (_DWORD *)(a2 + 144));
  sub_22455481C(a1[6], (void **)(a2 + 152));
  v6 = a1[6];
  sub_224553CF0(v6, (_BYTE *)(a2 + 176));
  sub_224553CF0(v6, (_BYTE *)(a2 + 177));
  sub_224553CF0(v6, (_BYTE *)(a2 + 178));
  sub_224553CF0(v6, (_BYTE *)(a2 + 179));
  sub_224553CF0(v6, (_BYTE *)(a2 + 180));
  sub_224553CF0(v6, (_BYTE *)(a2 + 181));
  sub_224553CF0(v6, (_BYTE *)(a2 + 182));
  sub_224553CF0(v6, (_BYTE *)(a2 + 183));
  sub_224553CF0(v6, (_BYTE *)(a2 + 184));
  sub_224553CF0(v6, (_BYTE *)(a2 + 185));
  sub_224553CF0(v6, (_BYTE *)(a2 + 186));
  sub_224553CF0(v6, (_BYTE *)(a2 + 187));
  sub_224553CF0(v6, (_BYTE *)(a2 + 188));
  sub_224553CF0(v6, (_BYTE *)(a2 + 189));
  sub_224553CF0(v6, (_BYTE *)(a2 + 190));
  sub_224553CF0(v6, (_BYTE *)(a2 + 191));
  if (a3 >= 2)
  {
    v8 = 1;
    sub_224554038(a1[6], &v8);
    sub_2240EAE60((uint64_t)&v7, a1, (_DWORD *)(a2 + 192));
  }
}

uint64_t sub_2240EAE60(uint64_t a1, _QWORD *a2, _DWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = a2 + 2;
  sub_2231B1308(a2 + 2);
  sub_224554038(a2[6], a3);
  sub_224554038(a2[6], a3 + 1);
  sub_224554038(a2[6], a3 + 2);
  sub_224554038(a2[6], a3 + 3);
  sub_224554038(a2[6], a3 + 4);
  sub_224554038(a2[6], a3 + 5);
  v6 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v8 = *(_QWORD *)(v6 - 16) - result + *(_QWORD *)(v6 - 8);
  if (v8)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v8);
  a2[4] -= 16;
  return result;
}

void sub_2240EAF34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v33);
    sub_223B87C9C((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v33);
  sub_223B87C9C((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_22451C444(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_2240EB48C(a2, v3 + 200, v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_2240EB444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240EB48C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  void **v7;
  int v8;
  void **v9;
  void **v10;
  int v11;
  void **v12;
  void **v13;
  int v14;
  void **v15;
  void **v16;
  int v17;
  void **v18;
  void **v19;
  int v20;
  void **v21;
  void **v22;
  int v23;
  char *v24;
  int v25;
  void **v26;
  void **v27;
  int v28;
  int v29;
  int v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *exception;
  __int128 v37;
  uint64_t v38;

  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "user_given_name";
  *(_QWORD *)(a1 + 96) = 15;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  v7 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v7, (uint64_t)&v37);
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
  *(_OWORD *)a2 = v37;
  *(_QWORD *)(a2 + 16) = v38;
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "product_name";
  *(_QWORD *)(a1 + 96) = 12;
  if (!v8)
    *(_BYTE *)(a1 + 104) = 1;
  v9 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v9, (uint64_t)&v37);
  v10 = (void **)(a2 + 24);
  if (*(char *)(a2 + 47) < 0)
    operator delete(*v10);
  *(_OWORD *)v10 = v37;
  *(_QWORD *)(a2 + 40) = v38;
  v11 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "type";
  *(_QWORD *)(a1 + 96) = 4;
  if (!v11)
    *(_BYTE *)(a1 + 104) = 1;
  v12 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v12, (uint64_t)&v37);
  v13 = (void **)(a2 + 48);
  if (*(char *)(a2 + 71) < 0)
    operator delete(*v13);
  *(_OWORD *)v13 = v37;
  *(_QWORD *)(a2 + 64) = v38;
  v14 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "serial_number";
  *(_QWORD *)(a1 + 96) = 13;
  if (!v14)
    *(_BYTE *)(a1 + 104) = 1;
  v15 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v15, (uint64_t)&v37);
  v16 = (void **)(a2 + 72);
  if (*(char *)(a2 + 95) < 0)
    operator delete(*v16);
  *(_OWORD *)v16 = v37;
  *(_QWORD *)(a2 + 88) = v38;
  v17 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "os_build_version";
  *(_QWORD *)(a1 + 96) = 16;
  if (!v17)
    *(_BYTE *)(a1 + 104) = 1;
  v18 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v18, (uint64_t)&v37);
  v19 = (void **)(a2 + 96);
  if (*(char *)(a2 + 119) < 0)
    operator delete(*v19);
  *(_OWORD *)v19 = v37;
  *(_QWORD *)(a2 + 112) = v38;
  v20 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "os_product_version";
  *(_QWORD *)(a1 + 96) = 18;
  if (!v20)
    *(_BYTE *)(a1 + 104) = 1;
  v21 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v21, (uint64_t)&v37);
  v22 = (void **)(a2 + 120);
  if (*(char *)(a2 + 143) < 0)
    operator delete(*v22);
  *(_OWORD *)v22 = v37;
  *(_QWORD *)(a2 + 136) = v38;
  v23 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "process_id";
  *(_QWORD *)(a1 + 96) = 10;
  if (!v23)
    *(_BYTE *)(a1 + 104) = 1;
  v24 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v37 = 0;
  sub_22451C58C(v24, &v37);
  if ((_QWORD)v37 != (int)v37)
    goto LABEL_46;
  *(_DWORD *)(a2 + 144) = v37;
  v25 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "process_name";
  *(_QWORD *)(a1 + 96) = 12;
  if (!v25)
    *(_BYTE *)(a1 + 104) = 1;
  v26 = (void **)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v38 = 0;
  v37 = 0uLL;
  sub_22451C83C(v26, (uint64_t)&v37);
  v27 = (void **)(a2 + 152);
  if (*(char *)(a2 + 175) < 0)
    operator delete(*v27);
  *(_OWORD *)v27 = v37;
  *(_QWORD *)(a2 + 168) = v38;
  v28 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "uuid";
  *(_QWORD *)(a1 + 96) = 4;
  if (v28)
  {
    *(_QWORD *)&v37 = a2 + 176;
    sub_2240EB9A4((uint64_t *)a1, (_OWORD **)&v37);
    if (a3 < 2)
      return;
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    *(_QWORD *)&v37 = a2 + 176;
    sub_2240EB9A4((uint64_t *)a1, (_OWORD **)&v37);
    if (a3 < 2)
      return;
  }
  v29 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "protocol_info";
  *(_QWORD *)(a1 + 96) = 13;
  if (!v29)
    *(_BYTE *)(a1 + 104) = 1;
  sub_224544138(a1);
  v30 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v30)
    *(_BYTE *)(a1 + 104) = 1;
  v31 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v37 = 0;
  sub_22451C444(v31, &v37);
  if (DWORD1(v37))
  {
LABEL_46:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v32 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "current";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v32)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v37 = a2 + 192;
  sub_2240EBBA4((uint64_t *)a1, (uint64_t *)&v37);
  v33 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "min";
  *(_QWORD *)(a1 + 96) = 3;
  if (!v33)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v37 = a2 + 204;
  sub_2240EBBA4((uint64_t *)a1, (uint64_t *)&v37);
  v34 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v34 - 8);
  v35 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v35 - 8);
  *(_QWORD *)(a1 + 48) = v34 - 8;
  *(_QWORD *)(a1 + 72) = v35 - 8;
}

void sub_2240EB96C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_2240EB9A4(uint64_t *a1, _OWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *__p[2];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v17 = 0;
  v16 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v16);
  v14 = v17;
  *(_OWORD *)__p = v16;
  v5 = SHIBYTE(v17);
  v6 = (char *)v16;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  v15 = v8;
  v16 = 0uLL;
  sub_2240EA17C((uint64_t *)v8, &v16);
  v10 = MEMORY[0x24BEDB7F0];
  v11 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v11 - 24)) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v12;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v16;
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
}

void sub_2240EBB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  sub_22456E764(&a15);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240EBBA4(uint64_t *a1, uint64_t *a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *__p[2];
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  __p[0] = 0;
  __p[1] = 0;
  v16 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v19 = 0;
  v18 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v18);
  v16 = v19;
  *(_OWORD *)__p = v18;
  v5 = SHIBYTE(v19);
  v6 = (char *)v18;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  v17 = v8;
  *(_QWORD *)&v18 = 0;
  DWORD2(v18) = 0;
  sub_22454DE78((uint64_t *)v8, (uint64_t)&v18);
  v10 = MEMORY[0x24BEDB7F0];
  v11 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v12 = *(_QWORD *)(v10 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v11 - 24)) = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v12;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  v13 = DWORD2(v18);
  v14 = *a2;
  *(_QWORD *)v14 = v18;
  *(_DWORD *)(v14 + 8) = v13;
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
}

void sub_2240EBD04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764(&a16);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240EBD94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  void *__p;
  uint64_t v33;
  char v34;
  _BYTE v35[8];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v35);
        if (!v50)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v36;
    *(_BYTE *)(v3 + 64) = 0;
    if (v39)
    {
      v8 = v38;
      *(_OWORD *)(v3 + 40) = v37;
      *(_QWORD *)(v3 + 56) = v8;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v41;
    v10 = v40;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v44)
    {
      v11 = v43;
      *(_OWORD *)(v3 + 96) = v42;
      *(_QWORD *)(v3 + 112) = v11;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v47)
    {
      v12 = v46;
      *(_OWORD *)(v3 + 128) = v45;
      *(_QWORD *)(v3 + 144) = v12;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v50;
    if (v50)
    {
      *(_OWORD *)(v3 + 160) = v48;
      *(_QWORD *)(v3 + 176) = v49;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v48;
    if (!(_QWORD)v48)
      goto LABEL_46;
    v15 = *((_QWORD *)&v48 + 1);
    v16 = (void *)v48;
    if (*((_QWORD *)&v48 + 1) == (_QWORD)v48)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v48;
LABEL_45:
    *((_QWORD *)&v48 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v35, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v36;
    *(_BYTE *)(v3 + 64) = 0;
    if (v39)
    {
      v17 = v38;
      *(_OWORD *)(v3 + 40) = v37;
      *(_QWORD *)(v3 + 56) = v17;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v41;
    v19 = v40;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v44)
    {
      v20 = v43;
      *(_OWORD *)(v3 + 96) = v42;
      *(_QWORD *)(v3 + 112) = v20;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v47)
    {
      v21 = v46;
      *(_OWORD *)(v3 + 128) = v45;
      *(_QWORD *)(v3 + 144) = v21;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v50;
    if (v50)
    {
      *(_OWORD *)(v3 + 160) = v48;
      *(_QWORD *)(v3 + 176) = v49;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v35);
  if (v50)
  {
LABEL_38:
    v14 = v48;
    if (!(_QWORD)v48)
      goto LABEL_46;
    v23 = *((_QWORD *)&v48 + 1);
    v16 = (void *)v48;
    if (*((_QWORD *)&v48 + 1) == (_QWORD)v48)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v47 && SHIBYTE(v46) < 0)
    operator delete((void *)v45);
  if (v44 && SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v34 < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_95:
          v30 = 0;
          if (v34 < 0)
            goto LABEL_98;
          goto LABEL_84;
        }
      }
      else if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_95;
      }
      v30 = 1;
      if (v34 < 0)
LABEL_98:
        operator delete(__p);
LABEL_84:
      if (*(_BYTE *)(a2 + 131))
        v29 = 0;
      else
        v29 = v30;
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  if (__p >= 2)
    v26 = 2;
  else
    v26 = __p;
  sub_2240EC3B0(a2, v3 + 200, v26);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v34 < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v28 = 0;
          if (v34 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v28 = 1;
      if (v34 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v27 = 0;
      else
        v27 = v28;
    }
    while ((v27 & 1) != 0);
  }
}

void sub_2240EC368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240EC3B0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  char v9;
  uint64_t v10;
  void **v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  char v17;
  char v18;
  char v19;
  void **v20;
  int v21;
  int v22;
  void **v23;
  int v24;
  int v25;
  void **v26;
  int v27;
  int v28;
  void **v29;
  void *__p[2];
  uint64_t v31;

  v6 = *(_QWORD *)(a1 + 80) + 1;
  *(_QWORD *)(a1 + 80) = v6;
  if (*(_BYTE *)(a1 + 128))
    v7 = *(_BYTE *)(a1 + 131) == 0;
  else
    v7 = 1;
  if (!v7)
  {
    *(_BYTE *)(a1 + 132) = 1;
    *(_QWORD *)(a1 + 80) = v6 + 1;
LABEL_15:
    v10 = v6 + 2;
LABEL_20:
    *(_BYTE *)(a1 + 132) = 1;
    v14 = v10 + 1;
LABEL_21:
    v15 = v14 + 1;
LABEL_22:
    *(_QWORD *)(a1 + 80) = v15 + 1;
LABEL_23:
    *(_BYTE *)(a1 + 132) = 1;
    goto LABEL_24;
  }
  sub_2245523C0(a1, (uint64_t)__p);
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
  *(_OWORD *)a2 = *(_OWORD *)__p;
  *(_QWORD *)(a2 + 16) = v31;
  ++*(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 80);
  if (*(_BYTE *)(a1 + 128))
    v8 = *(_BYTE *)(a1 + 131) == 0;
  else
    v8 = 1;
  v9 = v8;
  *(_QWORD *)(a1 + 80) = v6 + 1;
  if ((v9 & 1) == 0)
    goto LABEL_15;
  v11 = (void **)(a2 + 24);
  sub_2245523C0(a1, (uint64_t)__p);
  if (*(char *)(a2 + 47) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = *(_OWORD *)__p;
  *(_QWORD *)(a2 + 40) = v31;
  ++*(_QWORD *)(a1 + 104);
  v12 = *(unsigned __int8 *)(a1 + 128);
  v13 = *(unsigned __int8 *)(a1 + 131);
  v10 = *(_QWORD *)(a1 + 80) + 1;
  *(_QWORD *)(a1 + 80) = v10;
  if (v12 && v13)
    goto LABEL_20;
  v20 = (void **)(a2 + 48);
  sub_2245523C0(a1, (uint64_t)__p);
  if (*(char *)(a2 + 71) < 0)
    operator delete(*v20);
  *(_OWORD *)v20 = *(_OWORD *)__p;
  *(_QWORD *)(a2 + 64) = v31;
  ++*(_QWORD *)(a1 + 104);
  v21 = *(unsigned __int8 *)(a1 + 128);
  v22 = *(unsigned __int8 *)(a1 + 131);
  v14 = *(_QWORD *)(a1 + 80) + 1;
  *(_QWORD *)(a1 + 80) = v14;
  if (v21 && v22)
    goto LABEL_21;
  v23 = (void **)(a2 + 72);
  sub_2245523C0(a1, (uint64_t)__p);
  if (*(char *)(a2 + 95) < 0)
    operator delete(*v23);
  *(_OWORD *)v23 = *(_OWORD *)__p;
  *(_QWORD *)(a2 + 88) = v31;
  ++*(_QWORD *)(a1 + 104);
  v24 = *(unsigned __int8 *)(a1 + 128);
  v25 = *(unsigned __int8 *)(a1 + 131);
  v15 = *(_QWORD *)(a1 + 80) + 1;
  *(_QWORD *)(a1 + 80) = v15;
  if (v24 && v25)
    goto LABEL_22;
  v26 = (void **)(a2 + 96);
  sub_2245523C0(a1, (uint64_t)__p);
  if (*(char *)(a2 + 119) < 0)
    operator delete(*v26);
  *(_OWORD *)v26 = *(_OWORD *)__p;
  *(_QWORD *)(a2 + 112) = v31;
  ++*(_QWORD *)(a1 + 104);
  v27 = *(unsigned __int8 *)(a1 + 128);
  v28 = *(unsigned __int8 *)(a1 + 131);
  ++*(_QWORD *)(a1 + 80);
  if (v27 && v28)
    goto LABEL_23;
  v29 = (void **)(a2 + 120);
  sub_2245523C0(a1, (uint64_t)__p);
  if (*(char *)(a2 + 143) < 0)
    operator delete(*v29);
  *(_OWORD *)v29 = *(_OWORD *)__p;
  *(_QWORD *)(a2 + 136) = v31;
  ++*(_QWORD *)(a1 + 104);
LABEL_24:
  sub_22455069C(a1, (_DWORD *)(a2 + 144));
  ++*(_QWORD *)(a1 + 80);
  if (*(_BYTE *)(a1 + 128) && *(_BYTE *)(a1 + 131))
  {
    *(_BYTE *)(a1 + 132) = 1;
  }
  else
  {
    v16 = (void **)(a2 + 152);
    sub_2245523C0(a1, (uint64_t)__p);
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v16);
    *(_OWORD *)v16 = *(_OWORD *)__p;
    *(_QWORD *)(a2 + 168) = v31;
    ++*(_QWORD *)(a1 + 104);
  }
  sub_22454FFAC(a1, (_BYTE *)(a2 + 176));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 177));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 178));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 179));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 180));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 181));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 182));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 183));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 184));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 185));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 186));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 187));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 188));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 189));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 190));
  sub_22454FFAC(a1, (_BYTE *)(a2 + 191));
  if (a3 >= 2)
  {
    LODWORD(__p[0]) = 1;
    sub_2245508F0(a1, __p);
    sub_2245508F0(a1, (_DWORD *)(a2 + 192));
    sub_2245508F0(a1, (_DWORD *)(a2 + 196));
    sub_2245508F0(a1, (_DWORD *)(a2 + 200));
    sub_2245508F0(a1, (_DWORD *)(a2 + 204));
    sub_2245508F0(a1, (_DWORD *)(a2 + 208));
    sub_2245508F0(a1, (_DWORD *)(a2 + 212));
    if (!*(_BYTE *)(a1 + 131))
    {
      while (1)
      {
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
          return;
        sub_2245523C0(a1, (uint64_t)__p);
        if (SHIBYTE(v31) < 0)
        {
          if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0])
            goto LABEL_45;
LABEL_33:
          v17 = 1;
          if (SHIBYTE(v31) < 0)
            goto LABEL_46;
LABEL_34:
          if (*(_BYTE *)(a1 + 131))
            v18 = 0;
          else
            v18 = v17;
          if ((v18 & 1) == 0)
            return;
        }
        else
        {
          if (SHIBYTE(v31) != 1 || *(unsigned __int8 *)(a1 + 72) != LOBYTE(__p[0]))
            goto LABEL_33;
LABEL_45:
          v17 = 0;
          if ((SHIBYTE(v31) & 0x80000000) == 0)
            goto LABEL_34;
LABEL_46:
          operator delete(__p[0]);
          if (*(_BYTE *)(a1 + 131))
            v19 = 0;
          else
            v19 = v17;
          if ((v19 & 1) == 0)
            return;
        }
      }
    }
  }
}

void sub_2240EC8A0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240ECD14((uint64_t)v25, a2, v3 + 200);
}

void sub_2240ECCCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240ECD14(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  if (v9 >= 2)
    v10 = 2;
  else
    v10 = v9;
  sub_2240ECDE8(a2, a3, v10);
  v11 = a2[12];
  v12 = a2[9];
  a2[6] = *(_QWORD *)(v11 - 8) + *(_QWORD *)(v12 - 8) + 8;
  a2[9] = v12 - 8;
  a2[12] = v11 - 8;
}

void sub_2240ECDD4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240ECDE8(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  std::logic_error *exception;
  char v14;

  sub_2244FFDBC(a1, a2);
  sub_2244FFDBC(a1, a2 + 24);
  sub_2244FFDBC(a1, a2 + 48);
  sub_2244FFDBC(a1, a2 + 72);
  sub_2244FFDBC(a1, a2 + 96);
  sub_2244FFDBC(a1, a2 + 120);
  v6 = a1[6];
  v7 = a1[7];
  v8 = v7 >= v6;
  v9 = v7 - v6;
  if (!v8)
    v9 = 0;
  if (v9 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_12;
  }
  *(_DWORD *)(a2 + 144) = *(_DWORD *)(a1[3] + v6);
  a1[6] += 4;
  sub_2244FFDBC(a1, a2 + 152);
  v10 = a1[6];
  v11 = a1[7];
  v8 = v11 >= v10;
  v12 = v11 - v10;
  if (!v8)
    v12 = 0;
  if (v12 <= 0xF)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
LABEL_12:
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_OWORD *)(a2 + 176) = *(_OWORD *)(a1[3] + v10);
  a1[6] += 16;
  if (a3 >= 2)
    sub_2240ECF4C((uint64_t)&v14, a1, (_DWORD *)(a2 + 192));
}

void sub_2240ECF24(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240ECF38(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD **sub_2240ECF4C(uint64_t a1, _QWORD *a2, _DWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  _DWORD **result;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _QWORD *v16;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  v13 = a3;
  v14 = a3 + 1;
  v15 = a3 + 2;
  v16 = a2;
  sub_2240ED03C(&v13, (uint64_t *)&v16);
  v13 = a3 + 3;
  v14 = a3 + 4;
  v15 = a3 + 5;
  v16 = a2;
  result = sub_2240ED03C(&v13, (uint64_t *)&v16);
  v10 = a2[12];
  v11 = a2[9];
  a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
  a2[9] = v11 - 8;
  a2[12] = v10 - 8;
  return result;
}

void sub_2240ED028(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD **sub_2240ED03C(_DWORD **result, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  std::logic_error *exception;

  v2 = *a2;
  v3 = *(_QWORD *)(*a2 + 48);
  v4 = *(_QWORD *)(*a2 + 56);
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
    goto LABEL_11;
  **result = *(_DWORD *)(*(_QWORD *)(v2 + 24) + v3);
  *(_QWORD *)(v2 + 48) += 4;
  v7 = *a2;
  v8 = *(_QWORD *)(*a2 + 48);
  v9 = *(_QWORD *)(*a2 + 56);
  v5 = v9 >= v8;
  v10 = v9 - v8;
  if (!v5)
    v10 = 0;
  if (v10 <= 3)
    goto LABEL_11;
  *result[1] = *(_DWORD *)(*(_QWORD *)(v7 + 24) + v8);
  *(_QWORD *)(v7 + 48) += 4;
  v11 = *a2;
  v12 = *(_QWORD *)(*a2 + 48);
  v13 = *(_QWORD *)(*a2 + 56);
  v5 = v13 >= v12;
  v14 = v13 - v12;
  if (!v5)
    v14 = 0;
  if (v14 <= 3)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *result[2] = *(_DWORD *)(*(_QWORD *)(v11 + 24) + v12);
  *(_QWORD *)(v11 + 48) += 4;
  return result;
}

void sub_2240ED158(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240ED16C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240ED180(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240ED194(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  __int128 *v9;
  unsigned int v10;
  unsigned int v11;

  v5 = a2[2];
  v10 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v10);
  v6 = v10;
  if (v5 < 1)
  {
    sub_2240ED644((uint64_t)a2, a3, v10);
  }
  else
  {
    if (v5 == 2)
    {
      v11 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v11);
      if (v11 >= 3)
      {
        v8 = v11;
        v9 = sub_2240ED294();
        sub_22455C3A8((std::string *)v9, v8, 2u);
      }
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    if (v6 >= 2)
      v7 = 2;
    else
      v7 = v6;
    sub_2240ED644((uint64_t)a2, a3, v7);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

__int128 *sub_2240ED294()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F7D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F7D0))
    return &xmmword_25578F7B8;
  v2 = sub_2240ED370();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578F7B8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578F7C8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578F7B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F7B8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F7D0);
  return &xmmword_25578F7B8;
}

void sub_2240ED358(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F7D0);
  _Unwind_Resume(a1);
}

std::string *sub_2240ED370()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F7F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F7F0))
    return &stru_25578F7D8;
  sub_2240ED460((uint64_t)__p);
  sub_2232A0AA8((char *)__p, &stru_25578F7D8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578F7D8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F7F0);
  return &stru_25578F7D8;
}

void sub_2240ED420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578F7F0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578F7F0);
  _Unwind_Resume(a1);
}

void sub_2240ED460(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578F810);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578F810))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::PeerInfoSample<2U>]", qword_25578F7F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F7F8, &dword_22314D000);
    __cxa_guard_release(&qword_25578F810);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578F830);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578F830))
  {
    v5 = sub_2231A38CC(qword_25578F7F8, "<", 0);
    sub_2231A37C8(qword_25578F7F8, 0, v5, qword_25578F818);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F818, &dword_22314D000);
    __cxa_guard_release(&qword_25578F830);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578F850);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578F850))
  {
    sub_224573040((uint64_t)qword_25578F818, (uint64_t)&xmmword_25578F838);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F838, &dword_22314D000);
    __cxa_guard_release(&qword_25578F850);
  }
  if (byte_25578F84F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578F838, *((unint64_t *)&xmmword_25578F838 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578F838;
    *(_QWORD *)(a1 + 16) = unk_25578F848;
  }
}

void sub_2240ED5FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F850);
  _Unwind_Resume(a1);
}

void sub_2240ED614(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F830);
  _Unwind_Resume(a1);
}

void sub_2240ED62C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F810);
  _Unwind_Resume(a1);
}

void sub_2240ED644(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 96);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 56))(a1, a2 + 144);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 152);
  sub_2240ED73C((_BYTE *)a1, (_OWORD *)(a2 + 176));
  if (a3 >= 2)
  {
    v6 = *(_QWORD *)(a1 + 8);
    sub_2240EDA64((int *)&v6, (_BYTE *)a1, a2 + 192);
  }
}

void sub_2240ED73C(_BYTE *a1, _OWORD *a2)
{
  _OWORD *v4;

  if ((a1[12] & 2) != 0)
  {
    v4 = a2;
    sub_2240ED8C8((uint64_t)a1, &v4);
  }
  else
  {
    (*(void (**)(_BYTE *, _OWORD *))(*(_QWORD *)a1 + 80))(a1, a2);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 1);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 2);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 3);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 4);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 5);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 6);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 7);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 8);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 9);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 10);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 11);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 12);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 13);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 14);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 80))(a1, (uint64_t)a2 + 15);
  }
}

void sub_2240ED8C8(uint64_t a1, _OWORD **a2)
{
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *__p[2];
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  __p[0] = 0;
  __p[1] = 0;
  v12 = 0;
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
  v3 = SHIBYTE(v12);
  v4 = (char *)__p[0];
  v5 = operator new();
  v6 = v5;
  if (v3 >= 0)
    v7 = (char *)__p;
  else
    v7 = v4;
  sub_22456E918(v5, v7);
  v13 = v6;
  v14 = 0uLL;
  sub_2240EA17C((uint64_t *)v6, &v14);
  v8 = MEMORY[0x24BEDB7F0];
  v9 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
  v10 = *(_QWORD *)(v8 + 72);
  *(_QWORD *)(v6 + *(_QWORD *)(v9 - 24)) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v6 + 16) = v10;
  if (*(char *)(v6 + 111) < 0)
    operator delete(*(void **)(v6 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v6 + 128);
  MEMORY[0x227684CE8](v6, 0x10B2C40EED050F3);
  **a2 = v14;
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
}

void sub_2240EDA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  sub_22456E764(&a15);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240EDA64(int *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  LODWORD(v7) = 1;
  (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 >= 1)
  {
    sub_2240EDBC0(a1, a2, a3);
    return;
  }
  if ((a2[12] & 2) != 0)
  {
    v7 = a3;
    sub_2240EDF48((uint64_t)a2, &v7);
    v6 = a3 + 12;
    if ((a2[12] & 2) != 0)
      goto LABEL_5;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 4);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 8);
    v6 = a3 + 12;
    if ((a2[12] & 2) != 0)
    {
LABEL_5:
      v7 = v6;
      sub_2240EDF48((uint64_t)a2, &v7);
      return;
    }
  }
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, v6);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 16);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 20);
}

void sub_2240EDBC0(int *a1, _BYTE *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unsigned int v8;
  __int128 *v9;
  uint64_t v10;

  v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v10) = 1;
    (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      v8 = v10;
      v9 = sub_2240EDD4C();
      sub_22455C3A8((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
  if ((a2[12] & 2) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 4);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 8);
    v7 = a3 + 12;
    if ((a2[12] & 2) != 0)
      goto LABEL_8;
LABEL_11:
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, v7);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 16);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 20);
    if (v5 < 1)
      return;
    goto LABEL_12;
  }
  v10 = a3;
  sub_2240EDF48((uint64_t)a2, &v10);
  v7 = a3 + 12;
  if ((a2[12] & 2) == 0)
    goto LABEL_11;
LABEL_8:
  v10 = v7;
  sub_2240EDF48((uint64_t)a2, &v10);
  if (v5 < 1)
    return;
LABEL_12:
  (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240EDD4C()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F870);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F870))
    return &xmmword_25578F858;
  v2 = (char *)sub_2240EDE28();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F858, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F868 = *((_QWORD *)v2 + 2);
    xmmword_25578F858 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F858, &dword_22314D000);
  __cxa_guard_release(&qword_25578F870);
  return &xmmword_25578F858;
}

void sub_2240EDE10(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F870);
  _Unwind_Resume(a1);
}

void *sub_2240EDE28()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F890);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F890))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::kio::ProtocolInfoSample]", qword_25578F878);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F878, &dword_22314D000);
    __cxa_guard_release(&qword_25578F890);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F8B0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F8B0))
    return &unk_25578F898;
  sub_224573040((uint64_t)qword_25578F878, (uint64_t)&unk_25578F898);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F898, &dword_22314D000);
  __cxa_guard_release(&qword_25578F8B0);
  return &unk_25578F898;
}

void sub_2240EDF18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F8B0);
  _Unwind_Resume(a1);
}

void sub_2240EDF30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F890);
  _Unwind_Resume(a1);
}

void sub_2240EDF48(uint64_t a1, uint64_t *a2)
{
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void *__p[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  __p[0] = 0;
  __p[1] = 0;
  v14 = 0;
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
  v3 = SHIBYTE(v14);
  v4 = (char *)__p[0];
  v5 = operator new();
  v6 = v5;
  if (v3 >= 0)
    v7 = (char *)__p;
  else
    v7 = v4;
  sub_22456E918(v5, v7);
  v15 = v6;
  v16 = 0;
  v17 = 0;
  sub_22454DE78((uint64_t *)v6, (uint64_t)&v16);
  v8 = MEMORY[0x24BEDB7F0];
  v9 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
  v10 = *(_QWORD *)(v8 + 72);
  *(_QWORD *)(v6 + *(_QWORD *)(v9 - 24)) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v6 + 16) = v10;
  if (*(char *)(v6 + 111) < 0)
    operator delete(*(void **)(v6 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v6 + 128);
  MEMORY[0x227684CE8](v6, 0x10B2C40EED050F3);
  v11 = v17;
  v12 = *a2;
  *(_QWORD *)v12 = v16;
  *(_DWORD *)(v12 + 8) = v11;
  if (SHIBYTE(v14) < 0)
    operator delete(__p[0]);
}

void sub_2240EE084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  sub_22456E764(&a15);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_2240EE0D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  unsigned __int128 *v13;
  unsigned __int128 v14;

  v2 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)result = &off_24EC667A8;
  *(_QWORD *)(result + 8) = v2;
  v3 = (_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(result + 16) = v4;
  v5 = result + 16;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(result + 24) = v6;
  if (v6)
  {
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(a2 + 8) = v3;
    *v3 = 0;
    *(_QWORD *)(a2 + 24) = 0;
  }
  else
  {
    *(_QWORD *)(result + 8) = v5;
  }
  v7 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(result + 48) = 0;
  *(_OWORD *)(result + 32) = v7;
  *(_BYTE *)(result + 72) = 0;
  if (*(_BYTE *)(a2 + 72))
  {
    v8 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(result + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(result + 48) = v8;
    *(_QWORD *)(a2 + 56) = 0;
    *(_QWORD *)(a2 + 64) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    *(_BYTE *)(result + 72) = 1;
  }
  *(_BYTE *)(result + 80) = 0;
  *(_BYTE *)(result + 104) = 0;
  if (*(_BYTE *)(a2 + 104))
  {
    v9 = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(result + 96) = *(_QWORD *)(a2 + 96);
    *(_OWORD *)(result + 80) = v9;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0;
    *(_QWORD *)(a2 + 80) = 0;
    *(_BYTE *)(result + 104) = 1;
  }
  v10 = *(_OWORD *)(a2 + 112);
  v11 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(result + 144) = 0;
  *(_QWORD *)(result + 128) = v11;
  *(_OWORD *)(result + 112) = v10;
  *(_BYTE *)(result + 192) = 0;
  if (*(_BYTE *)(a2 + 192))
  {
    v12 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(result + 160) = *(_QWORD *)(a2 + 160);
    *(_OWORD *)(result + 144) = v12;
    *(_QWORD *)(a2 + 152) = 0;
    *(_QWORD *)(a2 + 160) = 0;
    *(_QWORD *)(a2 + 144) = 0;
    v13 = (unsigned __int128 *)(a2 + 176);
    do
      v14 = __ldaxp(v13);
    while (__stlxp(v14, v13));
    *(_OWORD *)(result + 176) = v14;
    *(_BYTE *)(result + 192) = 1;
  }
  *(_BYTE *)(result + 208) = 0;
  *(_BYTE *)(result + 232) = 0;
  if (*(_BYTE *)(a2 + 232))
  {
    *(_QWORD *)(result + 208) = 0;
    *(_QWORD *)(result + 216) = 0;
    *(_QWORD *)(result + 224) = 0;
    *(_OWORD *)(result + 208) = *(_OWORD *)(a2 + 208);
    *(_QWORD *)(result + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a2 + 208) = 0;
    *(_QWORD *)(a2 + 216) = 0;
    *(_QWORD *)(a2 + 224) = 0;
    *(_BYTE *)(result + 232) = 1;
  }
  *(_QWORD *)result = &off_24EC66728;
  return result;
}

char *sub_2240EE228(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;

  v6 = sub_223453BB8(a1, a2, &v15, &v14, a3);
  if (*v6)
    return (char *)*v6;
  v8 = v6;
  v9 = (char *)operator new(0x40uLL);
  v10 = v9 + 32;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_223197FA4(v10, *(void **)a4, *(_QWORD *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)a4;
    *((_QWORD *)v9 + 6) = *(_QWORD *)(a4 + 16);
  }
  v9[56] = *(_BYTE *)(a4 + 24);
  v11 = v15;
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = v11;
  *v8 = (uint64_t)v9;
  v12 = (uint64_t *)**a1;
  v13 = (uint64_t *)v9;
  if (v12)
  {
    *a1 = v12;
    v13 = (uint64_t *)*v8;
  }
  sub_2231A9A8C(a1[1], v13);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v9;
}

void sub_2240EE310(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2240EE324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _QWORD *v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_224123BEC((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v15[0] = a1 + 200;
        v13[0] = (_QWORD *)(a2 + 200);
        v11 = sub_2240161E0((uint64_t)v15, v13);
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_2240EE524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240EE540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240EE554(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240EE960(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240EF8C0(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240EFD4C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240F050C(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240F08C8(&v9, (uint64_t)a1);
          else
            sub_2240EE6B8(&v8, a1);
        }
      }
    }
  }
}

void sub_2240EE6B8(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  const void ***v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (const void ***)(v3 + 200);
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_2240F0CFC((uint64_t)a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240F0CFC((uint64_t)a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240EE960(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240EEC60(a2, (const void ***)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240EEC60(uint64_t a1, const void ***a2)
{
  const void ***v3;
  const void **v4;
  const void **v5;
  const void ***v6;
  BOOL v7;
  char **v8;
  char *v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  v3 = a2 + 1;
  v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2240EE228((uint64_t **)&v8, (uint64_t *)v9, v4 + 4, (uint64_t)(v4 + 4));
      v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          v6 = (const void ***)v5;
          v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (const void ***)v4[2];
          v7 = *v6 == v4;
          v4 = (const void **)v6;
        }
        while (!v7);
      }
      v4 = (const void **)v6;
    }
    while (v6 != v3);
  }
  sub_2240EED54(a1, (uint64_t)&v8);
  sub_22323DF84((uint64_t)&v8, v9[0]);
}

void sub_2240EED24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240EED3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240EED54(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  void **v10;
  void **v11;
  void *__p[2];
  void **v13;
  __int128 v14;
  void **v15;

  v4 = *(_QWORD *)(a2 + 16);
  v15 = 0;
  v14 = 0uLL;
  sub_2240EEEF4((uint64_t)&v14, v4);
  v5 = a2 + 8;
  sub_2240EEFE4(*(_QWORD **)a2, (_QWORD *)(a2 + 8), (uint64_t)&v14);
  *(_OWORD *)__p = v14;
  v13 = v15;
  *(_QWORD *)&v14 = "context_enable_state_changes";
  *((_QWORD *)&v14 + 1) = 28;
  v15 = __p;
  sub_2240EF260(a1, (uint64_t)&v14);
  v15 = 0;
  v14 = (unint64_t)&v14 + 8;
  sub_2240EF774((_QWORD **)&v14, (__int128 *)__p[0], v6, (__int128 *)__p[1]);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  v7 = *((_QWORD *)&v14 + 1);
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v7;
  v8 = v15;
  *(_QWORD *)(a2 + 16) = v15;
  if (v8)
  {
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)&v14 = (char *)&v14 + 8;
    *((_QWORD *)&v14 + 1) = 0;
    v15 = 0;
    sub_22323DF84((uint64_t)&v14, 0);
    v9 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  else
  {
    *(_QWORD *)a2 = v5;
    sub_22323DF84((uint64_t)&v14, (char *)v7);
    v9 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  v10 = (void **)__p[1];
  v11 = v9;
  if (__p[1] != v9)
  {
    do
    {
      if (*((char *)v10 - 9) < 0)
        operator delete(*(v10 - 4));
      v10 -= 4;
    }
    while (v10 != v9);
    v11 = (void **)__p[0];
  }
  __p[1] = v9;
  operator delete(v11);
}

void sub_2240EEEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
  sub_22323DF84((uint64_t)&a13, a14);
  sub_223714960(&a9);
  _Unwind_Resume(a1);
}

void sub_2240EEECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240EEEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240EEEF4(uint64_t a1, unint64_t a2)
{
  void **v2;
  void **v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  void **v11;

  v2 = *(void ***)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 5)
  {
    if (a2 >> 59)
      sub_2240336DC();
    v4 = *(void ***)(a1 + 8);
    v5 = 32 * a2;
    v6 = (char *)operator new(32 * a2);
    v7 = &v6[v5];
    v8 = &v6[(char *)v4 - (char *)v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
    }
    else
    {
      v9 = &v6[(char *)v4 - (char *)v2];
      do
      {
        v10 = *((_OWORD *)v4 - 2);
        *((_QWORD *)v9 - 2) = *(v4 - 2);
        *((_OWORD *)v9 - 2) = v10;
        *(v4 - 3) = 0;
        *(v4 - 2) = 0;
        *(v4 - 4) = 0;
        *(v9 - 8) = *((_BYTE *)v4 - 8);
        v9 -= 32;
        v4 -= 4;
      }
      while (v4 != v2);
      v2 = *(void ***)a1;
      v11 = *(void ***)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      while (v11 != v2)
      {
        if (*((char *)v11 - 9) < 0)
          operator delete(*(v11 - 4));
        v11 -= 4;
      }
    }
    if (v2)
      operator delete(v2);
  }
}

uint64_t sub_2240EEFE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  char v6;
  unint64_t v7;
  __int128 v8;
  _QWORD *v9;
  char *v10;
  int v11;
  _QWORD *v12;
  BOOL v13;
  void *__p[2];
  uint64_t v16;
  char v17;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      v6 = *((_BYTE *)v5 + 56);
      if (*((char *)v5 + 55) < 0)
      {
        sub_223197FA4(__p, (void *)v5[4], v5[5]);
        v17 = v6;
        v7 = *(_QWORD *)(a3 + 8);
        if (v7 < *(_QWORD *)(a3 + 16))
        {
LABEL_6:
          v8 = *(_OWORD *)__p;
          *(_QWORD *)(v7 + 16) = v16;
          *(_OWORD *)v7 = v8;
          __p[1] = 0;
          v16 = 0;
          __p[0] = 0;
          *(_BYTE *)(v7 + 24) = v17;
          *(_QWORD *)(a3 + 8) = v7 + 32;
          v9 = (_QWORD *)v5[1];
          if (v9)
            goto LABEL_11;
          goto LABEL_14;
        }
      }
      else
      {
        *(_OWORD *)__p = *((_OWORD *)v5 + 2);
        v16 = v5[6];
        v17 = v6;
        v7 = *(_QWORD *)(a3 + 8);
        if (v7 < *(_QWORD *)(a3 + 16))
          goto LABEL_6;
      }
      v10 = sub_2240EF128((void **)a3, (uint64_t)__p);
      v11 = SHIBYTE(v16);
      *(_QWORD *)(a3 + 8) = v10;
      if (v11 < 0)
      {
        operator delete(__p[0]);
        v9 = (_QWORD *)v5[1];
        if (v9)
        {
          do
          {
LABEL_11:
            v12 = v9;
            v9 = (_QWORD *)*v9;
          }
          while (v9);
          goto LABEL_3;
        }
      }
      else
      {
        v9 = (_QWORD *)v5[1];
        if (v9)
          goto LABEL_11;
      }
      do
      {
LABEL_14:
        v12 = (_QWORD *)v5[2];
        v13 = *v12 == (_QWORD)v5;
        v5 = v12;
      }
      while (!v13);
LABEL_3:
      v5 = v12;
    }
    while (v12 != a2);
  }
  return a3;
}

void sub_2240EF10C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_2240EF128(void **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  void **v14;
  void **v15;
  __int128 v16;
  void **v17;

  v3 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_2240336DC();
  v5 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v5 >> 4 > v4)
    v4 = v5 >> 4;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFE0;
  v7 = 0x7FFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 59)
    sub_223174E94();
  v9 = 32 * v7;
  v10 = (char *)operator new(32 * v7);
  v11 = &v10[32 * v3];
  v12 = &v10[v9];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_QWORD *)v11 + 2) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v11[24] = *(_BYTE *)(a2 + 24);
  v13 = v11 + 32;
  v14 = (void **)*a1;
  v15 = (void **)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
  }
  else
  {
    do
    {
      v16 = *((_OWORD *)v15 - 2);
      *((_QWORD *)v11 - 2) = *(v15 - 2);
      *((_OWORD *)v11 - 2) = v16;
      *(v15 - 3) = 0;
      *(v15 - 2) = 0;
      *(v15 - 4) = 0;
      *(v11 - 8) = *((_BYTE *)v15 - 8);
      v11 -= 32;
      v15 -= 4;
    }
    while (v15 != v14);
    v15 = (void **)*a1;
    v17 = (void **)a1[1];
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    while (v17 != v15)
    {
      if (*((char *)v17 - 9) < 0)
        operator delete(*(v17 - 4));
      v17 -= 4;
    }
  }
  if (v15)
    operator delete(v15);
  return v13;
}

void sub_2240EF260(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  char v11;
  char *v12;

  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    v4 = *(uint64_t **)(a2 + 16);
    sub_22454024C(a1);
    v5 = *v4;
    v6 = v4[1];
    if (v5 != v6)
    {
      do
      {
LABEL_6:
        sub_22454024C(a1);
        sub_224542510(a1, v5);
        v11 = *(_BYTE *)(v5 + 24);
        v12 = &v11;
        sub_2240EF384(a1, (unsigned __int8 **)&v12);
        v7 = *(_QWORD *)(a1 + 56);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 8);
        *(_QWORD *)(a1 + 56) = v7 - 8;
        if (*(_BYTE *)(a1 + 88))
          *(_BYTE *)(a1 + 88) = 0;
        v5 += 32;
      }
      while (v5 != v6);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 16);
      *(_QWORD *)(a1 + 56) = v7 - 16;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    v8 = *(uint64_t **)(a2 + 16);
    sub_22454024C(a1);
    v5 = *v8;
    v6 = v8[1];
    if (v5 != v6)
      goto LABEL_6;
  }
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a1 + 56) = v9 - 8;
  if (v10)
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240EF384(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240EF48C((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240EF448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240EF464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240EF478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240EF48C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  _QWORD *v8;
  int v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  unint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *__dst[2];
  unint64_t v23;
  _QWORD v24[5];
  _QWORD *v25;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v24[0] = v5;
  v6 = (_QWORD *)(v5 + 16);
  v7 = *a3;
  if (v7 > 2)
  {
    sub_2231813E8(v6, (uint64_t)"Invalid(", 8);
    v8 = (_QWORD *)std::ostream::operator<<();
    sub_2231813E8(v8, (uint64_t)")", 1);
  }
  else
  {
    sub_2231813E8(v6, (uint64_t)(&off_24EC6A280)[2 * v7], (uint64_t)(&off_24EC6A280)[2 * v7 + 1]);
  }
  v9 = *(_DWORD *)(v5 + 120);
  if ((v9 & 0x10) != 0)
  {
    v12 = *(_QWORD *)(v5 + 112);
    v13 = *(_QWORD *)(v5 + 72);
    if (v12 < v13)
    {
      *(_QWORD *)(v5 + 112) = v13;
      v12 = v13;
    }
    v14 = *(const void **)(v5 + 64);
    v10 = v12 - (_QWORD)v14;
    if (v12 - (unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_25;
  }
  else
  {
    if ((v9 & 8) == 0)
    {
      v10 = 0;
      HIBYTE(v23) = 0;
      v11 = __dst;
      goto LABEL_17;
    }
    v14 = *(const void **)(v5 + 40);
    v10 = *(_QWORD *)(v5 + 56) - (_QWORD)v14;
    if (v10 >= 0x7FFFFFFFFFFFFFF8)
LABEL_25:
      sub_22316DBC0();
  }
  if (v10 >= 0x17)
  {
    v15 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v15 = v10 | 7;
    v16 = v15 + 1;
    v11 = (void **)operator new(v15 + 1);
    __dst[1] = (void *)v10;
    v23 = v16 | 0x8000000000000000;
    __dst[0] = v11;
    goto LABEL_16;
  }
  HIBYTE(v23) = v10;
  v11 = __dst;
  if (v10)
LABEL_16:
    memmove(v11, v14, v10);
LABEL_17:
  *((_BYTE *)v11 + v10) = 0;
  v17 = v24[0];
  if (v24[0])
  {
    v18 = MEMORY[0x24BEDB7F0];
    v19 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v24[0] = *MEMORY[0x24BEDB7F0];
    v20 = *(_QWORD *)(v18 + 72);
    *(_QWORD *)(v17 + *(_QWORD *)(v19 - 24)) = *(_QWORD *)(v18 + 64);
    *(_QWORD *)(v17 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v17 + 16) = v20;
    if (*(char *)(v17 + 111) < 0)
      operator delete(*(void **)(v17 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v17 + 128);
    MEMORY[0x227684CE8](v17, 0x10B2C40EED050F3);
  }
  v24[0] = a2;
  v24[1] = __dst;
  v24[2] = a2;
  v24[3] = __dst;
  v24[4] = __dst;
  v21 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v21 == -1)
    sub_22316DD70();
  v25 = v24;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v21])(&v25, a2);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
}

void sub_2240EF720(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2240EF744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240EF760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2240EF774(_QWORD **a1, __int128 *a2, uint64_t a3, __int128 *a4)
{
  __int128 *v5;
  uint64_t *v7;
  char v8;
  __int128 v9;
  uint64_t *v10;
  _OWORD *v11;
  uint64_t *v12;
  _QWORD *v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t *v18;

  if (a2 != a4)
  {
    v5 = a2;
    v7 = (uint64_t *)(a1 + 1);
    while (1)
    {
      v8 = *((_BYTE *)v5 + 24);
      if (*((char *)v5 + 23) < 0)
      {
        sub_223197FA4(__p, *(void **)v5, *((_QWORD *)v5 + 1));
      }
      else
      {
        v9 = *v5;
        v15 = *((_QWORD *)v5 + 2);
        *(_OWORD *)__p = v9;
      }
      v16 = v8;
      v10 = sub_223453BB8(a1, v7, &v18, &v17, (const void **)__p);
      if (!*v10)
        break;
      if (SHIBYTE(v15) < 0)
        goto LABEL_13;
LABEL_3:
      v5 += 2;
      if (v5 == a4)
        return;
    }
    v11 = operator new(0x40uLL);
    v11[2] = *(_OWORD *)__p;
    *((_QWORD *)v11 + 6) = v15;
    __p[1] = 0;
    v15 = 0;
    __p[0] = 0;
    *((_BYTE *)v11 + 56) = v16;
    v12 = v18;
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    *((_QWORD *)v11 + 2) = v12;
    *v10 = (uint64_t)v11;
    v13 = (_QWORD *)**a1;
    if (v13)
    {
      *a1 = v13;
      v11 = (_OWORD *)*v10;
    }
    sub_2231A9A8C(a1[1], (uint64_t *)v11);
    a1[2] = (_QWORD *)((char *)a1[2] + 1);
    if ((SHIBYTE(v15) & 0x80000000) == 0)
      goto LABEL_3;
LABEL_13:
    operator delete(__p[0]);
    goto LABEL_3;
  }
}

void sub_2240EF8A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240EF8C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_2240EFB40(a2, (const void ***)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240EFB40(uint64_t a1, const void ***a2)
{
  const void ***v3;
  const void **v4;
  unint64_t v5;
  uint64_t v6;
  const void **v7;
  const void ***v8;
  BOOL v9;
  uint64_t *v10;
  const void **v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  char **v16;
  char **v17;
  char *v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;

  v18 = 0;
  v19 = 0;
  v17 = &v18;
  v3 = a2 + 1;
  v4 = *a2;
  if (*a2 == (const void **)(a2 + 1))
  {
    v5 = 0;
    v6 = *(_QWORD *)(a1 + 24);
    if (!*(_BYTE *)(v6 + 40))
    {
LABEL_3:
      sub_22455B4D4();
      goto LABEL_13;
    }
  }
  else
  {
    do
    {
      sub_2240EE228((uint64_t **)&v17, (uint64_t *)&v18, v4 + 4, (uint64_t)(v4 + 4));
      v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          v8 = (const void ***)v7;
          v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (const void ***)v4[2];
          v9 = *v8 == v4;
          v4 = (const void **)v8;
        }
        while (!v9);
      }
      v4 = (const void **)v8;
    }
    while (v8 != v3);
    v5 = v19;
    v6 = *(_QWORD *)(a1 + 24);
    if (!*(_BYTE *)(v6 + 40))
      goto LABEL_3;
  }
  v21 = (uint64_t *)(v6 + 16);
  sub_22455B1CC(&v21, v5);
LABEL_13:
  v10 = (uint64_t *)v17;
  if (v17 != &v18)
  {
    do
    {
      v11 = (const void **)(v10 + 4);
      v12 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v12 + 40))
      {
        v21 = (uint64_t *)(v12 + 16);
        sub_22455B8BC((uint64_t)&v20, &v21, v11);
      }
      else
      {
        sub_22455BCF4((uint64_t)&v21, v12 + 8, (uint64_t)v11);
      }
      v13 = *((char *)v10 + 56);
      v14 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v14 + 40))
      {
        v21 = (uint64_t *)(v14 + 16);
        sub_224559C04(&v21, v13);
      }
      else
      {
        if (v13 < 0)
        {
          LOBYTE(v21) = -52;
          BYTE1(v21) = v13;
        }
        else
        {
          LOBYTE(v21) = *((_BYTE *)v10 + 56);
        }
        std::ostream::write();
      }
      v15 = (char *)v10[1];
      if (v15)
      {
        do
        {
          v16 = (char **)v15;
          v15 = *(char **)v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          v16 = (char **)v10[2];
          v9 = *v16 == (char *)v10;
          v10 = (uint64_t *)v16;
        }
        while (!v9);
      }
      v10 = (uint64_t *)v16;
    }
    while (v16 != &v18);
  }
  sub_22323DF84((uint64_t)&v17, v18);
}

void sub_2240EFD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240EFD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240EFD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240EFD4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240F004C(a2, (const void ***)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240F004C(uint64_t a1, const void ***a2)
{
  const void ***v3;
  const void **v4;
  const void **v5;
  const void ***v6;
  BOOL v7;
  char **v8;
  char *v9[2];

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  v3 = a2 + 1;
  v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2240EE228((uint64_t **)&v8, (uint64_t *)v9, v4 + 4, (uint64_t)(v4 + 4));
      v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          v6 = (const void ***)v5;
          v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (const void ***)v4[2];
          v7 = *v6 == v4;
          v4 = (const void **)v6;
        }
        while (!v7);
      }
      v4 = (const void **)v6;
    }
    while (v6 != v3);
  }
  sub_2240F0140(a1, (uint64_t)&v8);
  sub_22323DF84((uint64_t)&v8, v9[0]);
}

void sub_2240F0110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240F0128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_22323DF84((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_2240F0140(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void **v9;
  void **v10;
  void **v11;
  void *__p[2];
  void **v13;
  __int128 v14;
  void **v15;

  v4 = *(_QWORD *)(a2 + 16);
  v15 = 0;
  v14 = 0uLL;
  sub_2240EEEF4((uint64_t)&v14, v4);
  v5 = a2 + 8;
  sub_2240EEFE4(*(_QWORD **)a2, (_QWORD *)(a2 + 8), (uint64_t)&v14);
  *(_OWORD *)__p = v14;
  v13 = v15;
  *(_QWORD *)&v14 = "context_enable_state_changes";
  *((_QWORD *)&v14 + 1) = 28;
  v15 = __p;
  sub_2240F02E0(a1, (uint64_t)&v14);
  v15 = 0;
  v14 = (unint64_t)&v14 + 8;
  sub_2240EF774((_QWORD **)&v14, (__int128 *)__p[0], v6, (__int128 *)__p[1]);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  v7 = *((_QWORD *)&v14 + 1);
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v7;
  v8 = v15;
  *(_QWORD *)(a2 + 16) = v15;
  if (v8)
  {
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)&v14 = (char *)&v14 + 8;
    *((_QWORD *)&v14 + 1) = 0;
    v15 = 0;
    sub_22323DF84((uint64_t)&v14, 0);
    v9 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  else
  {
    *(_QWORD *)a2 = v5;
    sub_22323DF84((uint64_t)&v14, (char *)v7);
    v9 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  v10 = (void **)__p[1];
  v11 = v9;
  if (__p[1] != v9)
  {
    do
    {
      if (*((char *)v10 - 9) < 0)
        operator delete(*(v10 - 4));
      v10 -= 4;
    }
    while (v10 != v9);
    v11 = (void **)__p[0];
  }
  __p[1] = v9;
  operator delete(v11);
}

void sub_2240F0290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
  sub_22323DF84((uint64_t)&a13, a14);
  sub_223714960(&a9);
  _Unwind_Resume(a1);
}

void sub_2240F02B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F02CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F02E0(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  char v11;
  char *v12;

  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    v4 = *(uint64_t **)(a2 + 16);
    sub_22453FAE0(a1);
    v5 = *v4;
    v6 = v4[1];
    if (v5 != v6)
    {
      do
      {
LABEL_6:
        sub_22453FAE0(a1);
        sub_2245409C8(a1, v5);
        v11 = *(_BYTE *)(v5 + 24);
        v12 = &v11;
        sub_2240F0404(a1, (unsigned __int8 **)&v12);
        v7 = *(_QWORD *)(a1 + 56);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 8);
        *(_QWORD *)(a1 + 56) = v7 - 8;
        if (*(_BYTE *)(a1 + 88))
          *(_BYTE *)(a1 + 88) = 0;
        v5 += 32;
      }
      while (v5 != v6);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 16);
      *(_QWORD *)(a1 + 56) = v7 - 16;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    v8 = *(uint64_t **)(a2 + 16);
    sub_22453FAE0(a1);
    v5 = *v8;
    v6 = v8[1];
    if (v5 != v6)
      goto LABEL_6;
  }
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a1 + 56) = v9 - 8;
  if (v10)
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240F0404(uint64_t a1, unsigned __int8 **a2)
{
  unsigned __int8 *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240EF48C((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240F04C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F04E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F04F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240F050C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240F0724(a2, (const void ***)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240F0724(uint64_t a1, const void ***a2)
{
  const void ***v3;
  const void **v4;
  const void **v5;
  const void ***v6;
  BOOL v7;
  _QWORD *v8;
  uint64_t *v9;
  char *v10;
  char **v11;
  char **v12;
  char *v13[2];
  unsigned __int8 v14;

  v13[0] = 0;
  v13[1] = 0;
  v12 = v13;
  v3 = a2 + 1;
  v4 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_2240EE228((uint64_t **)&v12, (uint64_t *)v13, v4 + 4, (uint64_t)(v4 + 4));
      v5 = (const void **)v4[1];
      if (v5)
      {
        do
        {
          v6 = (const void ***)v5;
          v5 = (const void **)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (const void ***)v4[2];
          v7 = *v6 == v4;
          v4 = (const void **)v6;
        }
        while (!v7);
      }
      v4 = (const void **)v6;
    }
    while (v6 != v3);
    if (!*(_QWORD *)(a1 + 40))
      goto LABEL_13;
    goto LABEL_12;
  }
  if (*(_QWORD *)(a1 + 40))
  {
LABEL_12:
    v8 = *(_QWORD **)(a1 + 24);
    v14 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v8, (uint64_t)&v14, 1);
  }
LABEL_13:
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v9 = (uint64_t *)v12;
  if (v12 != v13)
  {
    do
    {
      sub_22454F620(a1, (uint64_t)(v9 + 4));
      v14 = *((_BYTE *)v9 + 56);
      sub_22454F564(a1, &v14);
      v10 = (char *)v9[1];
      if (v10)
      {
        do
        {
          v11 = (char **)v10;
          v10 = *(char **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          v11 = (char **)v9[2];
          v7 = *v11 == (char *)v9;
          v9 = (uint64_t *)v11;
        }
        while (!v7);
      }
      v9 = (uint64_t *)v11;
    }
    while (v11 != v13);
  }
  sub_22323DF84((uint64_t)&v12, v13[0]);
}

void sub_2240F0880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F08B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F08C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_2240F0A80(a2, (const void ***)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240F0A80(uint64_t a1, const void ***a2)
{
  const void ***v3;
  const void **v4;
  uint64_t v5;
  const void **v6;
  const void ***v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  BOOL v12;
  char *v13;
  char **v14;
  char **v15;
  char *v16;
  uint64_t v17;
  uint64_t __src;
  uint64_t v19;

  v16 = 0;
  v17 = 0;
  v15 = &v16;
  v3 = a2 + 1;
  v4 = *a2;
  if (*a2 == (const void **)(a2 + 1))
  {
    v5 = 0;
  }
  else
  {
    do
    {
      sub_2240EE228((uint64_t **)&v15, (uint64_t *)&v16, v4 + 4, (uint64_t)(v4 + 4));
      v6 = (const void **)v4[1];
      if (v6)
      {
        do
        {
          v7 = (const void ***)v6;
          v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (const void ***)v4[2];
          v12 = *v7 == v4;
          v4 = (const void **)v7;
        }
        while (!v12);
      }
      v4 = (const void **)v7;
    }
    while (v7 != v3);
    v5 = v17;
  }
  __src = v5;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v19, 8);
  v8 = (uint64_t *)v15;
  if (v15 != &v16)
  {
    do
    {
      v9 = *((unsigned __int8 *)v8 + 55);
      if ((v9 & 0x80u) != 0)
        v9 = v8[5];
      __src = v9;
      sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v19, 8);
      if (*((char *)v8 + 55) < 0)
      {
        v10 = (char *)v8[4];
        v11 = v8[5];
        if (v10)
          v12 = 1;
        else
          v12 = v11 == 0;
        if (!v12)
        {
          if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            abort();
          }
          v10 = 0;
        }
      }
      else
      {
        v10 = (char *)(v8 + 4);
        v11 = *((unsigned __int8 *)v8 + 55);
      }
      sub_224501B60(a1 + 24, *(char **)(a1 + 32), v10, &v10[v11], v11);
      LOBYTE(__src) = *((_BYTE *)v8 + 56);
      sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
      v13 = (char *)v8[1];
      if (v13)
      {
        do
        {
          v14 = (char **)v13;
          v13 = *(char **)v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          v14 = (char **)v8[2];
          v12 = *v14 == (char *)v8;
          v8 = (uint64_t *)v14;
        }
        while (!v12);
      }
      v8 = (uint64_t *)v14;
    }
    while (v14 != &v16);
  }
  sub_22323DF84((uint64_t)&v15, v16);
}

void sub_2240F0C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0CFC(uint64_t a1, const void ***a2)
{
  const void ***v3;
  const void **v4;
  uint64_t v5;
  const void **v6;
  const void ***v7;
  BOOL v8;
  uint64_t *v9;
  char *v10;
  char **v11;
  char **v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v13 = 0;
  v14 = 0;
  v12 = &v13;
  v3 = a2 + 1;
  v4 = *a2;
  if (*a2 == (const void **)(a2 + 1))
  {
    v5 = 0;
  }
  else
  {
    do
    {
      sub_2240EE228((uint64_t **)&v12, (uint64_t *)&v13, v4 + 4, (uint64_t)(v4 + 4));
      v6 = (const void **)v4[1];
      if (v6)
      {
        do
        {
          v7 = (const void ***)v6;
          v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (const void ***)v4[2];
          v8 = *v7 == v4;
          v4 = (const void **)v7;
        }
        while (!v8);
      }
      v4 = (const void **)v7;
    }
    while (v7 != v3);
    v5 = v14;
  }
  v15 = v5;
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 120))(a1, &v15);
  v9 = (uint64_t *)v12;
  if (v12 != &v13)
  {
    do
    {
      (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 144))(a1, v9 + 4);
      LOBYTE(v15) = *((_BYTE *)v9 + 56);
      (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 80))(a1, &v15);
      v10 = (char *)v9[1];
      if (v10)
      {
        do
        {
          v11 = (char **)v10;
          v10 = *(char **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          v11 = (char **)v9[2];
          v8 = *v11 == (char *)v9;
          v9 = (uint64_t *)v11;
        }
        while (!v8);
      }
      v9 = (uint64_t *)v11;
    }
    while (v11 != &v13);
  }
  sub_22323DF84((uint64_t)&v12, v13);
}

void sub_2240F0E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  sub_22323DF84((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void sub_2240F0E88(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240F14C4(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240F2150(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240F286C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240F3354(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240F3A98(&v9, a1);
          else
            sub_2240F0FEC(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_2240F0FEC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v27[0] = a2[1];
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_223BD7864((uint64_t)&v28, (uint64_t)a2, v4, v28);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v28);
  }
  else
  {
    sub_223BD7174((int *)v27, (uint64_t)a2, v4, v28);
  }
  v27[0] = a2[1];
  sub_2240F4154((int *)v27, (uint64_t)a2, v3 + 200);
}

void sub_2240F147C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F14C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v32);
    sub_223B87C9C((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v32);
  sub_223B87C9C((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_2231AD66C((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_22451CAD4(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240F1A18(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_2240F19D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F1A18(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void **v11;
  void **v12;
  void *__p[2];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 16);
  v16 = 0;
  v15 = 0uLL;
  sub_2240EEEF4((uint64_t)&v15, v4);
  v5 = a2 + 8;
  sub_2240EEFE4(*(_QWORD **)a2, (_QWORD *)(a2 + 8), (uint64_t)&v15);
  *(_OWORD *)__p = v15;
  v14 = v16;
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "context_enable_state_changes";
  *(_QWORD *)(a1 + 96) = 28;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  sub_2240F1BC0((uint64_t *)a1, (char **)__p);
  *((_QWORD *)&v15 + 1) = 0;
  v16 = 0;
  *(_QWORD *)&v15 = (char *)&v15 + 8;
  sub_2240EF774((_QWORD **)&v15, (__int128 *)__p[0], v7, (__int128 *)__p[1]);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  v8 = *((_QWORD *)&v15 + 1);
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v8;
  v9 = v16;
  *(_QWORD *)(a2 + 16) = v16;
  if (v9)
  {
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)&v15 = (char *)&v15 + 8;
    *((_QWORD *)&v15 + 1) = 0;
    v16 = 0;
    sub_22323DF84((uint64_t)&v15, 0);
    v10 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  else
  {
    *(_QWORD *)a2 = v5;
    sub_22323DF84((uint64_t)&v15, (char *)v8);
    v10 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  v11 = (void **)__p[1];
  v12 = v10;
  if (__p[1] != v10)
  {
    do
    {
      if (*((char *)v11 - 9) < 0)
        operator delete(*(v11 - 4));
      v11 -= 4;
    }
    while (v11 != v10);
    v12 = (void **)__p[0];
  }
  __p[1] = v10;
  operator delete(v12);
}

void sub_2240F1B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
  sub_22323DF84((uint64_t)&a13, a14);
  sub_223714960(&a9);
  _Unwind_Resume(a1);
}

void sub_2240F1B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F1BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F1BC0(uint64_t *a1, char **a2)
{
  unsigned __int8 *v4;
  int v5;
  unint64_t v6;
  void ***v7;
  void **v8;
  char *v9;
  unint64_t v10;
  void **v11;
  void **v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  __int128 v21;
  void *v22;

  sub_224544628((uint64_t)a1);
  v4 = (unsigned __int8 *)a1[4];
  v5 = *v4;
  if (v5 == 2)
  {
    v6 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v4 + 1) + 8) - **((_QWORD **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    v6 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v4 + 1) + 8) - **((_QWORD **)v4 + 1)) >> 3);
  }
  else
  {
    if (!*v4)
    {
      v6 = 0;
      v7 = (void ***)(a2 + 1);
      v8 = (void **)a2[1];
      v9 = *a2;
      v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    v6 = 1;
  }
  v7 = (void ***)(a2 + 1);
  v8 = (void **)a2[1];
  v9 = *a2;
  v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_2240F1DD0((void **)a2, v6 - v10);
    v13 = a2;
    v11 = (void **)*a2;
    v12 = (void **)v13[1];
    if (v11 != v12)
      goto LABEL_22;
LABEL_20:
    v14 = a1[6];
    v15 = a1[9];
    goto LABEL_25;
  }
LABEL_11:
  if (v10 <= v6)
  {
    v12 = v8;
    v11 = (void **)*a2;
    if (v11 != v8)
      goto LABEL_22;
    goto LABEL_20;
  }
  v12 = (void **)&v9[32 * v6];
  while (v8 != v12)
  {
    if (*((char *)v8 - 9) < 0)
      operator delete(*(v8 - 4));
    v8 -= 4;
  }
  *v7 = v12;
  v11 = (void **)*a2;
  if (v11 == v12)
    goto LABEL_20;
  do
  {
LABEL_22:
    sub_224544628((uint64_t)a1);
    v20 = (void **)sub_2245448E0(a1);
    ++a1[14];
    v22 = 0;
    v21 = 0uLL;
    sub_22451CFD4(v20, (uint64_t)&v21);
    if (*((char *)v11 + 23) < 0)
      operator delete(*v11);
    v16 = (char *)(v11 + 3);
    v17 = v21;
    v11[2] = v22;
    *(_OWORD *)v11 = v17;
    v11 += 4;
    *(_QWORD *)&v21 = v16;
    sub_2240F1F60(a1, (_BYTE **)&v21);
    v18 = a1[6];
    a1[4] = *(_QWORD *)(v18 - 8);
    v19 = a1[9];
    a1[14] = *(_QWORD *)(v19 - 8);
    a1[6] = v18 - 8;
    a1[9] = v19 - 8;
  }
  while (v11 != v12);
  v14 = v18 - 8;
  v15 = v19 - 8;
LABEL_25:
  a1[4] = *(_QWORD *)(v14 - 8);
  a1[14] = *(_QWORD *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_2240F1DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F1DD0(void **a1, unint64_t a2)
{
  _BYTE *v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void **v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  void **v18;
  __int128 v19;
  void **v20;

  v5 = (void **)a1[1];
  v4 = a1[2];
  if (a2 <= (v4 - (_BYTE *)v5) >> 5)
  {
    if (a2)
    {
      v11 = 32 * a2;
      v12 = &v5[4 * a2];
      do
      {
        *v5 = 0;
        v5[1] = 0;
        *((_BYTE *)v5 + 24) = 0;
        v5[2] = 0;
        v5 += 4;
        v11 -= 32;
      }
      while (v11);
      v5 = v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = ((char *)v5 - (_BYTE *)*a1) >> 5;
    if ((v6 + a2) >> 59)
      sub_2240336DC();
    v7 = v4 - (_BYTE *)*a1;
    v8 = v7 >> 4;
    if (v7 >> 4 <= v6 + a2)
      v8 = v6 + a2;
    if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0)
      v9 = 0x7FFFFFFFFFFFFFFLL;
    else
      v9 = v8;
    if (v9)
    {
      if (v9 >> 59)
        sub_223174E94();
      v10 = (char *)operator new(32 * v9);
    }
    else
    {
      v10 = 0;
    }
    v13 = &v10[32 * v6];
    v14 = 32 * a2;
    v15 = &v13[32 * a2];
    v16 = v13;
    do
    {
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      v16[24] = 0;
      *((_QWORD *)v16 + 2) = 0;
      v16 += 32;
      v14 -= 32;
    }
    while (v14);
    v17 = &v10[32 * v9];
    v18 = (void **)*a1;
    if (v5 == *a1)
    {
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
    }
    else
    {
      do
      {
        v19 = *((_OWORD *)v5 - 2);
        *((_QWORD *)v13 - 2) = *(v5 - 2);
        *((_OWORD *)v13 - 2) = v19;
        *(v5 - 3) = 0;
        *(v5 - 2) = 0;
        *(v5 - 4) = 0;
        *(v13 - 8) = *((_BYTE *)v5 - 8);
        v13 -= 32;
        v5 -= 4;
      }
      while (v5 != v18);
      v5 = (void **)*a1;
      v20 = (void **)a1[1];
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
      while (v20 != v5)
      {
        if (*((char *)v20 - 9) < 0)
          operator delete(*(v20 - 4));
        v20 -= 4;
      }
    }
    if (v5)
      operator delete(v5);
  }
}

void sub_2240F1F60(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_22412123C((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240F20C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_2240F2150(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v28, a2, v4);
  LODWORD(v28[0]) = 1;
  sub_224554038(a2[6], v28);
  sub_2231B1308(a2 + 2);
  sub_2240F2628((uint64_t)a2, v3 + 200);
  v24 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2);
  v26 = *(_QWORD *)(v24 - 16) - result + *(_QWORD *)(v24 - 8);
  if (v26)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(a2[2] + 40))(a2 + 2, v26);
  a2[4] -= 16;
  return result;
}

void sub_2240F25E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F2628(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *__p[2];
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v8 = 0;
  sub_2245543E8(*(_QWORD *)(a1 + 48), &v8);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  *(_QWORD *)a2 = a2 + 8;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  for (i = v8; i; --i)
  {
    __p[0] = 0;
    __p[1] = 0;
    v7 = 0;
    v6 = 0;
    sub_22455481C(*(_QWORD *)(a1 + 48), __p);
    v9 = 0;
    sub_224553CF0(*(_QWORD *)(a1 + 48), &v9);
    v7 = v9;
    sub_2240F2704((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v6) < 0)
      operator delete(__p[0]);
  }
}

void sub_2240F26E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_2240F2704(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  int v7;
  const void *v8;
  const void *v9;
  uint64_t **v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  const void *v16;
  size_t v17;
  int v18;
  int v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;

  v6 = a1 + 1;
  v5 = a1[1];
  if (!v5)
  {
    v10 = a1 + 1;
    goto LABEL_29;
  }
  v7 = *((char *)a2 + 23);
  if (v7 >= 0)
    v8 = a2;
  else
    v8 = *a2;
  if (v7 >= 0)
    v9 = (const void *)*((unsigned __int8 *)a2 + 23);
  else
    v9 = a2[1];
  do
  {
    while (1)
    {
      v10 = (uint64_t **)v5;
      v13 = v5[4];
      v11 = v5 + 4;
      v12 = (_QWORD *)v13;
      v14 = *((char *)v11 + 23);
      v15 = v14 >= 0 ? v11 : v12;
      v16 = v14 >= 0 ? (const void *)*((unsigned __int8 *)v11 + 23) : (const void *)v11[1];
      v17 = (size_t)(v16 >= v9 ? v9 : v16);
      v18 = memcmp(v8, v15, v17);
      if (v18)
        break;
      if (v9 >= v16)
        goto LABEL_22;
LABEL_8:
      v5 = *v10;
      v6 = v10;
      if (!*v10)
        goto LABEL_29;
    }
    if (v18 < 0)
      goto LABEL_8;
LABEL_22:
    v19 = memcmp(v15, v8, v17);
    if (v19)
    {
      if ((v19 & 0x80000000) == 0)
        return v10;
    }
    else if (v16 >= v9)
    {
      return v10;
    }
    v5 = v10[1];
  }
  while (v5);
  v6 = v10 + 1;
LABEL_29:
  v20 = (uint64_t *)v10;
  v10 = (uint64_t **)operator new(0x40uLL);
  *((_OWORD *)v10 + 2) = *(_OWORD *)a3;
  v10[6] = *(uint64_t **)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *((_BYTE *)v10 + 56) = *(_BYTE *)(a3 + 24);
  *v10 = 0;
  v10[1] = 0;
  v10[2] = v20;
  *v6 = (uint64_t *)v10;
  v21 = (uint64_t *)**a1;
  v22 = (uint64_t *)v10;
  if (v21)
  {
    *a1 = v21;
    v22 = *v6;
  }
  sub_2231A9A8C(a1[1], v22);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v10;
}

void sub_2240F286C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v32);
    sub_223B87C9C((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v32);
  sub_223B87C9C((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_2231AD66C((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_22451C444(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240F2DC0(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_2240F2D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F2DC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void **v11;
  void **v12;
  void *__p[2];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 16);
  v16 = 0;
  v15 = 0uLL;
  sub_2240EEEF4((uint64_t)&v15, v4);
  v5 = a2 + 8;
  sub_2240EEFE4(*(_QWORD **)a2, (_QWORD *)(a2 + 8), (uint64_t)&v15);
  *(_OWORD *)__p = v15;
  v14 = v16;
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "context_enable_state_changes";
  *(_QWORD *)(a1 + 96) = 28;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  sub_2240F2F68((uint64_t *)a1, (char **)__p);
  *((_QWORD *)&v15 + 1) = 0;
  v16 = 0;
  *(_QWORD *)&v15 = (char *)&v15 + 8;
  sub_2240EF774((_QWORD **)&v15, (__int128 *)__p[0], v7, (__int128 *)__p[1]);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  v8 = *((_QWORD *)&v15 + 1);
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v8;
  v9 = v16;
  *(_QWORD *)(a2 + 16) = v16;
  if (v9)
  {
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)&v15 = (char *)&v15 + 8;
    *((_QWORD *)&v15 + 1) = 0;
    v16 = 0;
    sub_22323DF84((uint64_t)&v15, 0);
    v10 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  else
  {
    *(_QWORD *)a2 = v5;
    sub_22323DF84((uint64_t)&v15, (char *)v8);
    v10 = (void **)__p[0];
    if (!__p[0])
      return;
  }
  v11 = (void **)__p[1];
  v12 = v10;
  if (__p[1] != v10)
  {
    do
    {
      if (*((char *)v11 - 9) < 0)
        operator delete(*(v11 - 4));
      v11 -= 4;
    }
    while (v11 != v10);
    v12 = (void **)__p[0];
  }
  __p[1] = v10;
  operator delete(v12);
}

void sub_2240F2F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char *a14)
{
  sub_22323DF84((uint64_t)&a13, a14);
  sub_223714960(&a9);
  _Unwind_Resume(a1);
}

void sub_2240F2F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F2F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F2F68(uint64_t *a1, char **a2)
{
  unsigned __int8 *v4;
  int v5;
  unint64_t v6;
  void ***v7;
  void **v8;
  char *v9;
  unint64_t v10;
  void **v11;
  void **v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  __int128 v21;
  void *v22;

  sub_224544138((uint64_t)a1);
  v4 = (unsigned __int8 *)a1[4];
  v5 = *v4;
  if (v5 == 2)
  {
    v6 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v4 + 1) + 8) - **((_QWORD **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    v6 = *(_QWORD *)(*((_QWORD *)v4 + 1) + 16);
  }
  else
  {
    if (!*v4)
    {
      v6 = 0;
      v7 = (void ***)(a2 + 1);
      v8 = (void **)a2[1];
      v9 = *a2;
      v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    v6 = 1;
  }
  v7 = (void ***)(a2 + 1);
  v8 = (void **)a2[1];
  v9 = *a2;
  v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_2240F1DD0((void **)a2, v6 - v10);
    v13 = a2;
    v11 = (void **)*a2;
    v12 = (void **)v13[1];
    if (v11 != v12)
      goto LABEL_22;
LABEL_20:
    v14 = a1[6];
    v15 = a1[9];
    goto LABEL_25;
  }
LABEL_11:
  if (v10 <= v6)
  {
    v12 = v8;
    v11 = (void **)*a2;
    if (v11 != v8)
      goto LABEL_22;
    goto LABEL_20;
  }
  v12 = (void **)&v9[32 * v6];
  while (v8 != v12)
  {
    if (*((char *)v8 - 9) < 0)
      operator delete(*(v8 - 4));
    v8 -= 4;
  }
  *v7 = v12;
  v11 = (void **)*a2;
  if (v11 == v12)
    goto LABEL_20;
  do
  {
LABEL_22:
    sub_224544138((uint64_t)a1);
    v20 = (void **)sub_2245443F0(a1);
    ++a1[14];
    v22 = 0;
    v21 = 0uLL;
    sub_22451C83C(v20, (uint64_t)&v21);
    if (*((char *)v11 + 23) < 0)
      operator delete(*v11);
    v16 = (char *)(v11 + 3);
    v17 = v21;
    v11[2] = v22;
    *(_OWORD *)v11 = v17;
    v11 += 4;
    *(_QWORD *)&v21 = v16;
    sub_2240F3164(a1, (_BYTE **)&v21);
    v18 = a1[6];
    a1[4] = *(_QWORD *)(v18 - 8);
    v19 = a1[9];
    a1[14] = *(_QWORD *)(v19 - 8);
    a1[6] = v18 - 8;
    a1[9] = v19 - 8;
  }
  while (v11 != v12);
  v14 = v18 - 8;
  v15 = v19 - 8;
LABEL_25:
  a1[4] = *(_QWORD *)(v14 - 8);
  a1[14] = *(_QWORD *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_2240F3148(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F3164(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_22412123C((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240F32C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240F3354(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  void *__p;
  uint64_t v32;
  char v33;
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v34, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v34, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v29 = 0;
          if (v33 < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v29 = 1;
      if (v33 < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_2245508F0(a2, &__p);
  sub_2240F3964(a2, v3 + 200);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v27 = 0;
          if (v33 < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v27 = 1;
      if (v33 < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
}

void sub_2240F391C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F3964(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  BOOL v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v9 = 0;
  sub_224550D98(a1, &v9);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  *(_QWORD *)a2 = a2 + 8;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  for (i = v9; i; --i)
  {
    __p[0] = 0;
    __p[1] = 0;
    v8 = 0;
    v7 = 0;
    ++*(_QWORD *)(a1 + 80);
    if (*(_BYTE *)(a1 + 128))
      v5 = *(_BYTE *)(a1 + 131) == 0;
    else
      v5 = 1;
    if (v5)
    {
      sub_2245523C0(a1, (uint64_t)&v10);
      if (SHIBYTE(v7) < 0)
        operator delete(__p[0]);
      *(_OWORD *)__p = v10;
      v7 = v11;
      ++*(_QWORD *)(a1 + 104);
    }
    else
    {
      *(_BYTE *)(a1 + 132) = 1;
    }
    LOBYTE(v10) = 0;
    sub_22454FFAC(a1, &v10);
    v8 = v10;
    sub_2240F2704((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v7) < 0)
      operator delete(__p[0]);
  }
}

void sub_2240F3A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F3A98(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240F3F0C((uint64_t)v25, a2, v3 + 200);
}

void sub_2240F3EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F3F0C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  sub_2240F3FC4(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_2240F3FB0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240F3FC4(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  std::logic_error *v12;
  std::logic_error *exception;
  void *__p[2];
  uint64_t v15;
  char v16;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  a1[6] = v2 + 8;
  v9 = (_QWORD *)(a2 + 8);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = 0;
  for (*v9 = 0; v8; --v8)
  {
    __p[0] = 0;
    __p[1] = 0;
    v16 = 0;
    v15 = 0;
    sub_2244FFDBC(a1, (uint64_t)__p);
    v10 = a1[6];
    if (a1[7] <= v10)
    {
      v12 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v12, "Not enough data to read");
      v12->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
      __cxa_throw(v12, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
    }
    v11 = *(_BYTE *)(a1[3] + v10);
    a1[6] = v10 + 1;
    v16 = v11;
    sub_2240F2704((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v15) < 0)
      operator delete(__p[0]);
  }
}

void sub_2240F4110(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240F4124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F4154(int *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  __int128 *v7;
  int v8;
  unsigned int v9;

  v8 = 1;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v8);
  if (*a1 < 1)
    goto LABEL_6;
  if (*a1 != 2)
    goto LABEL_5;
  v9 = 1;
  (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v9);
  if (v9 >= 2)
  {
    v6 = v9;
    v7 = sub_2240F4250();
    sub_22455C3A8((std::string *)v7, v6, 1u);
  }
  if (*a1 <= 0)
  {
LABEL_6:
    sub_2240F444C(a2, a3);
  }
  else
  {
LABEL_5:
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_2240F444C(a2, a3);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  }
}

__int128 *sub_2240F4250()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F8D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F8D0))
    return &xmmword_25578F8B8;
  v2 = (char *)sub_2240F432C();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F8B8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F8C8 = *((_QWORD *)v2 + 2);
    xmmword_25578F8B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F8B8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F8D0);
  return &xmmword_25578F8B8;
}

void sub_2240F4314(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F8D0);
  _Unwind_Resume(a1);
}

void *sub_2240F432C()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F8F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F8F0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledContextsSample]", qword_25578F8D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F8D8, &dword_22314D000);
    __cxa_guard_release(&qword_25578F8F0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F910);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F910))
    return &unk_25578F8F8;
  sub_224573040((uint64_t)qword_25578F8D8, (uint64_t)&unk_25578F8F8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F8F8, &dword_22314D000);
  __cxa_guard_release(&qword_25578F910);
  return &unk_25578F8F8;
}

void sub_2240F441C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F910);
  _Unwind_Resume(a1);
}

void sub_2240F4434(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F8F0);
  _Unwind_Resume(a1);
}

void sub_2240F444C(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *__p[2];
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v8 = 0;
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 120))(a1, &v8);
  sub_22323DF84(a2, *(char **)(a2 + 8));
  *(_QWORD *)a2 = a2 + 8;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  for (i = v8; i; --i)
  {
    __p[0] = 0;
    __p[1] = 0;
    v7 = 0;
    v6 = 0;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    v9 = 0;
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 80))(a1, &v9);
    v7 = v9;
    sub_2240F2704((uint64_t **)a2, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v6) < 0)
      operator delete(__p[0]);
  }
}

void sub_2240F4520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void *sub_2240F453C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *result;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  result = sub_2240F669C((char *)a2, *(_QWORD *)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 5);
  *(_BYTE *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 48) = 0;
  if (*(_BYTE *)(a1 + 48))
  {
    if (*(char *)(a1 + 47) < 0)
    {
      result = sub_223197FA4((_BYTE *)(a2 + 24), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32));
    }
    else
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
      *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
    }
    *(_BYTE *)(a2 + 48) = 1;
  }
  return result;
}

void sub_2240F45C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(_BYTE *)(v1 + 48))
  {
    if (*(char *)(v1 + 47) < 0)
      operator delete(*v2);
  }
  sub_223714960((void **)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2240F45F4(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  *(_QWORD *)a1 = off_24EC675B8;
  sub_2231AD66C(a1 + 64);
  if (*(_BYTE *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      return a1;
  }
  else
  {
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      return a1;
  }
  v3 = *(void ***)(a1 + 16);
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0)
        operator delete(*(v3 - 4));
      v3 -= 4;
    }
    while (v3 != v2);
    v4 = *(void ***)(a1 + 8);
  }
  *(_QWORD *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

__n128 sub_2240F4698(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  uint64_t v7;
  unsigned __int128 *v8;
  unsigned __int128 v9;

  *(_QWORD *)a1 = off_24EC675B8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  if (*(_BYTE *)(a2 + 56))
  {
    v2 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v2;
    *(_QWORD *)(a2 + 40) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a1 + 56) = 1;
  }
  v3 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 104) = 0;
  if (*(_BYTE *)(a2 + 104))
  {
    v4 = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v4;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0;
    *(_QWORD *)(a2 + 80) = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  if (*(_BYTE *)(a2 + 136))
  {
    v5 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = v5;
    *(_QWORD *)(a2 + 120) = 0;
    *(_QWORD *)(a2 + 128) = 0;
    *(_QWORD *)(a2 + 112) = 0;
    *(_BYTE *)(a1 + 136) = 1;
  }
  result = *(__n128 *)(a2 + 144);
  v7 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 160) = v7;
  *(__n128 *)(a1 + 144) = result;
  *(_BYTE *)(a1 + 224) = 0;
  if (*(_BYTE *)(a2 + 224))
  {
    result = *(__n128 *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(__n128 *)(a1 + 176) = result;
    *(_QWORD *)(a2 + 184) = 0;
    *(_QWORD *)(a2 + 192) = 0;
    *(_QWORD *)(a2 + 176) = 0;
    v8 = (unsigned __int128 *)(a2 + 208);
    do
      v9 = __ldaxp(v8);
    while (__stlxp(v9, v8));
    *(_OWORD *)(a1 + 208) = v9;
    *(_BYTE *)(a1 + 224) = 1;
  }
  *(_BYTE *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 264) = 0;
  if (*(_BYTE *)(a2 + 264))
  {
    *(_QWORD *)(a1 + 240) = 0;
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 256) = 0;
    result = *(__n128 *)(a2 + 240);
    *(__n128 *)(a1 + 240) = result;
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a2 + 240) = 0;
    *(_QWORD *)(a2 + 248) = 0;
    *(_QWORD *)(a2 + 256) = 0;
    *(_BYTE *)(a1 + 264) = 1;
  }
  return result;
}

void sub_2240F47FC(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  *(_QWORD *)a1 = off_24EC675B8;
  sub_2231AD66C(a1 + 64);
  if (*(_BYTE *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      goto LABEL_13;
  }
  else
  {
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      goto LABEL_13;
  }
  v3 = *(void ***)(a1 + 16);
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0)
        operator delete(*(v3 - 4));
      v3 -= 4;
    }
    while (v3 != v2);
    v4 = *(void ***)(a1 + 8);
  }
  *(_QWORD *)(a1 + 16) = v2;
  operator delete(v4);
LABEL_13:
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240F48B0(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2240F48B8(uint64_t *a1, uint64_t *lpsrc)
{
  uint64_t result;
  unsigned __int8 ***v5[2];
  uint64_t *v6[2];

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24EC6A3F8, (const struct __class_type_info *)&unk_24EC667E8, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v6[0] = a1 + 1;
      v6[1] = a1 + 4;
      v5[0] = (unsigned __int8 ***)(result + 8);
      v5[1] = (unsigned __int8 ***)(result + 32);
      return sub_2240F600C(v6, v5);
    }
  }
  return result;
}

void sub_2240F4948(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_2240F6204();
  sub_2240F49FC(a1);
  sub_2231AC984(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 64, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_2240F49E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240F49FC(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FA50);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FA50))
  {
    v4 = sub_2240F5E10();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_2231AD150((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_223197FA4(&xmmword_25578FA38, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25578FA48 = *(_QWORD *)(v9 - 8);
      xmmword_25578FA38 = v7;
    }
    sub_22319BB48(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FA38, &dword_22314D000);
    __cxa_guard_release(&qword_25578FA50);
  }
  return sub_2240F64EC(&xmmword_25578FA38, (_QWORD **)"{", (_QWORD **)(a1 + 8), (_QWORD **)"}");
}

void sub_2240F4B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_22319BB48(&a9);
  __cxa_guard_abort(&qword_25578FA50);
  _Unwind_Resume(a1);
}

void sub_2240F4B2C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FA50);
  _Unwind_Resume(a1);
}

void sub_2240F4B44(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.net");
  *(_DWORD *)(a1 + 24) = 4;
}

double sub_2240F4B70@<D0>(const void *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;

  sub_224137AD0(a1, &v4);
  result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_2240F4BA4(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  *(_QWORD *)a1 = off_24EC675B8;
  sub_2231AD66C(a1 + 64);
  if (*(_BYTE *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      return a1;
  }
  else
  {
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      return a1;
  }
  v3 = *(void ***)(a1 + 16);
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0)
        operator delete(*(v3 - 4));
      v3 -= 4;
    }
    while (v3 != v2);
    v4 = *(void ***)(a1 + 8);
  }
  *(_QWORD *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

void sub_2240F4C48(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  *(_QWORD *)a1 = off_24EC675B8;
  sub_2231AD66C(a1 + 64);
  if (*(_BYTE *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      goto LABEL_13;
  }
  else
  {
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      goto LABEL_13;
  }
  v3 = *(void ***)(a1 + 16);
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0)
        operator delete(*(v3 - 4));
      v3 -= 4;
    }
    while (v3 != v2);
    v4 = *(void ***)(a1 + 8);
  }
  *(_QWORD *)(a1 + 16) = v2;
  operator delete(v4);
LABEL_13:
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240F4CFC(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_2240F58AC();
  return sub_2240F4F00(v2, (_QWORD **)"{", (_QWORD **)(a1 + 8), (_QWORD **)",", a1 + 64, (_QWORD **)"}");
}

uint64_t sub_2240F4D54(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  _QWORD v4[2];
  _BYTE v5[2];

  v3 = 0;
  v4[0] = a1 + 8;
  v4[1] = a1 + 32;
  sub_2240F5134((uint64_t)v5, (uint64_t)v2, (uint64_t)v4);
  if (v3 == -1)
    sub_22316DD70();
  v4[0] = v5;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66D10[v3])(v4, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66CF8[v3])(v4, v2);
  return result;
}

void sub_2240F4DF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24EC66CF8[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_2240F4E30(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_2240F4E5C(uint64_t a1)
{
  void **v2;
  void **v3;
  void **v4;

  *(_QWORD *)a1 = off_24EC675B8;
  sub_2231AD66C(a1 + 64);
  if (*(_BYTE *)(a1 + 56) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      return a1;
  }
  else
  {
    v2 = *(void ***)(a1 + 8);
    if (!v2)
      return a1;
  }
  v3 = *(void ***)(a1 + 16);
  v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 9) < 0)
        operator delete(*(v3 - 4));
      v3 -= 4;
    }
    while (v3 != v2);
    v4 = *(void ***)(a1 + 8);
  }
  *(_QWORD *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

uint64_t sub_2240F4F00(__int128 *a1, _QWORD **a2, _QWORD **a3, _QWORD **a4, uint64_t a5, _QWORD **a6)
{
  uint64_t result;
  char v12;
  __int128 __dst;
  uint64_t v14;
  int v15;
  __int128 *p_dst;
  _QWORD **v17;
  __int128 *v18;
  _QWORD **v19;
  _QWORD **v20;
  __int128 **p_p_dst;

  v15 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v14 = *((_QWORD *)a1 + 2);
  }
  v15 = 1;
  p_dst = &__dst;
  v17 = a2;
  v18 = &__dst;
  v19 = a2;
  v20 = a2;
  sub_2231ABB0C((uint64_t *)&v18, (uint64_t)&__dst);
  p_dst = (__int128 *)a3;
  v17 = a3 + 3;
  sub_2240F5134((uint64_t)&p_p_dst, (uint64_t)&__dst, (uint64_t)&p_dst);
  p_dst = &__dst;
  v17 = a4;
  v18 = &__dst;
  v19 = a4;
  v20 = a4;
  if (v15 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v15])(&p_p_dst, &__dst);
  sub_2231AB90C((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v17 = a6;
  v18 = &__dst;
  v19 = a6;
  v20 = a6;
  if (v15 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v15])(&p_p_dst, &__dst);
  if (v15 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v15])(&p_dst, &__dst);
  if (v15 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v15])(&p_dst, &__dst);
  return result;
}

void sub_2240F50A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F50BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F50D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F50E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F50F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F510C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F5120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2240F5134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  uint64_t *v17;

  v12 = a2;
  v13 = "{";
  v14 = a2;
  v15 = "{";
  v16 = "{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_10;
  v17 = &v12;
  ((void (*)(uint64_t **))off_24EC66D70[v3])(&v17);
  sub_2240F529C((uint64_t)&v12, a2, *(uint64_t **)a3);
  v6 = *(_QWORD *)(a3 + 8);
  v12 = a2;
  v13 = ",";
  v14 = a2;
  v15 = ",";
  v16 = ",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_10;
  v17 = &v12;
  ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v7])(&v17, a2);
  if (*(_BYTE *)(v6 + 24))
  {
    v12 = a2;
    v13 = (const char *)v6;
    v14 = a2;
    v15 = (const char *)v6;
    v16 = (const char *)v6;
    v8 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v8 == -1)
      goto LABEL_10;
    v17 = &v12;
    v9 = off_24EC66D58;
  }
  else
  {
    v12 = a2;
    v13 = "nullopt";
    v14 = a2;
    v15 = "nullopt";
    v16 = "nullopt";
    v8 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v8 == -1)
      goto LABEL_10;
    v17 = &v12;
    v9 = off_24EC66D88;
  }
  ((void (*)(uint64_t **, uint64_t))v9[v8])(&v17, a2);
  v12 = a2;
  v13 = "}";
  v14 = a2;
  v15 = "}";
  v16 = "}";
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_10:
    sub_22316DD70();
  v17 = &v12;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_24EC66D70[v10])(&v17, a2);
}

uint64_t sub_2240F529C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  const char *v19;
  char *v20;
  const char *v21;
  const char *v22;
  uint64_t *v23;

  if (a3[1] - *a3 <= 31)
  {
    v18 = a2;
    v19 = "{}";
    v20 = (char *)a2;
    v21 = "{}";
    v22 = "{}";
    v4 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v4 != -1)
    {
      v23 = &v18;
      return ((uint64_t (*)(uint64_t **, uint64_t))off_24EC66DA0[v4])(&v23, a2);
    }
LABEL_15:
    sub_22316DD70();
  }
  v18 = a2;
  v19 = "{";
  v20 = (char *)a2;
  v21 = "{";
  v22 = "{";
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    goto LABEL_15;
  v23 = &v18;
  ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v6])(&v23, a2);
  v8 = *a3;
  v18 = a2;
  v19 = "{";
  v20 = (char *)a2;
  v21 = "{";
  v22 = "{";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
    goto LABEL_15;
  v23 = &v18;
  ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v9])(&v23, a2);
  LOBYTE(v18) = 1;
  v19 = (const char *)a2;
  v20 = &v17;
  sub_2240F54EC(v8, (uint64_t)&v18);
  v18 = a2;
  v19 = "}";
  v20 = (char *)a2;
  v21 = "}";
  v22 = "}";
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
    goto LABEL_15;
  v23 = &v18;
  ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v10])(&v23, a2);
  v11 = a3[1];
  for (i = v8 + 32; i != v11; i += 32)
  {
    v18 = a2;
    v19 = ",";
    v20 = (char *)a2;
    v21 = ",";
    v22 = ",";
    v13 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v13 == -1)
      goto LABEL_15;
    v23 = &v18;
    ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v13])(&v23, a2);
    v18 = a2;
    v19 = "{";
    v20 = (char *)a2;
    v21 = "{";
    v22 = "{";
    v14 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v14 == -1)
      goto LABEL_15;
    v23 = &v18;
    ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v14])(&v23, a2);
    LOBYTE(v18) = 1;
    v19 = (const char *)a2;
    v20 = &v17;
    sub_2240F54EC(i, (uint64_t)&v18);
    v18 = a2;
    v19 = "}";
    v20 = (char *)a2;
    v21 = "}";
    v22 = "}";
    v15 = *(unsigned int *)(a2 + 24);
    if ((_DWORD)v15 == -1)
      goto LABEL_15;
    v23 = &v18;
    ((void (*)(uint64_t **, uint64_t))off_24EC66D70[v15])(&v23, a2);
  }
  v18 = a2;
  v19 = "}";
  v20 = (char *)a2;
  v21 = "}";
  v22 = "}";
  v16 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v16 == -1)
    goto LABEL_15;
  v23 = &v18;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_24EC66D70[v16])(&v23, a2);
}

void sub_2240F54EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  uint64_t *v12;

  if (!*(_BYTE *)a2)
  {
    v7 = *(_QWORD *)(a2 + 8);
    v8 = ",";
    v9 = v7;
    v10 = ",";
    v11 = ",";
    v4 = *(unsigned int *)(v7 + 24);
    if ((_DWORD)v4 == -1)
      goto LABEL_9;
    v12 = &v7;
    ((void (*)(uint64_t **))off_24EC66D70[v4])(&v12);
  }
  *(_BYTE *)a2 = 0;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = (const char *)a1;
  v9 = v7;
  v10 = (const char *)a1;
  v11 = (const char *)a1;
  v5 = *(unsigned int *)(v7 + 24);
  if ((_DWORD)v5 == -1)
LABEL_9:
    sub_22316DD70();
  v12 = &v7;
  ((void (*)(uint64_t **))off_24EC66D58[v5])(&v12);
  if (!*(_BYTE *)a2)
  {
    v7 = *(_QWORD *)(a2 + 8);
    v8 = ",";
    v9 = v7;
    v10 = ",";
    v11 = ",";
    v6 = *(unsigned int *)(v7 + 24);
    if ((_DWORD)v6 != -1)
    {
      v12 = &v7;
      ((void (*)(uint64_t **))off_24EC66D70[v6])(&v12);
      goto LABEL_8;
    }
    goto LABEL_9;
  }
LABEL_8:
  *(_BYTE *)a2 = 0;
  sub_2240F55F8((uint64_t)&v7, *(_QWORD *)(a2 + 8), (int *)(a1 + 24));
}

void sub_2240F55F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)(&off_24EC6B2D0)[2 * *a3], (uint64_t)(&off_24EC6B2D0)[2 * *a3 + 1]);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_2240F5858(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2240F587C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F5898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

__int128 *sub_2240F58AC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F930);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F930))
    return &xmmword_25578F918;
  v2 = sub_2240F5988();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578F918, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578F928 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578F918 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F918, &dword_22314D000);
  __cxa_guard_release(&qword_25578F930);
  return &xmmword_25578F918;
}

void sub_2240F5970(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F930);
  _Unwind_Resume(a1);
}

std::string *sub_2240F5988()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F950);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F950))
    return &stru_25578F938;
  sub_2240F5C2C((uint64_t)__p);
  sub_2240F5A78((char *)__p, &stru_25578F938);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578F938, &dword_22314D000);
  __cxa_guard_release(&qword_25578F950);
  return &stru_25578F938;
}

void sub_2240F5A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578F950);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578F950);
  _Unwind_Resume(a1);
}

void sub_2240F5A78(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2240F5E10();
  if (*((char *)v4 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_2231AC788();
  if (*((char *)v6 + 23) < 0)
  {
    sub_223197FA4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 2uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_2240F5BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_22319BB48((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2240F5C2C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578F9D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578F9D0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::UpdateEnabledLoggers>]", qword_25578F9B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F9B8, &dword_22314D000);
    __cxa_guard_release(&qword_25578F9D0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578F9F0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578F9F0))
  {
    v5 = sub_2231A38CC(qword_25578F9B8, "<", 0);
    sub_2231A37C8(qword_25578F9B8, 0, v5, qword_25578F9D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F9D8, &dword_22314D000);
    __cxa_guard_release(&qword_25578F9F0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578FA10);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578FA10))
  {
    sub_224573040((uint64_t)qword_25578F9D8, (uint64_t)&xmmword_25578F9F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F9F8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FA10);
  }
  if (byte_25578FA0F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578F9F8, *((unint64_t *)&xmmword_25578F9F8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578F9F8;
    *(_QWORD *)(a1 + 16) = unk_25578FA08;
  }
}

void sub_2240F5DC8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FA10);
  _Unwind_Resume(a1);
}

void sub_2240F5DE0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F9F0);
  _Unwind_Resume(a1);
}

void sub_2240F5DF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F9D0);
  _Unwind_Resume(a1);
}

__int128 *sub_2240F5E10()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F970);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F970))
    return &xmmword_25578F958;
  v2 = (char *)sub_2240F5EEC();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578F958, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578F968 = *((_QWORD *)v2 + 2);
    xmmword_25578F958 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578F958, &dword_22314D000);
  __cxa_guard_release(&qword_25578F970);
  return &xmmword_25578F958;
}

void sub_2240F5ED4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F970);
  _Unwind_Resume(a1);
}

void *sub_2240F5EEC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578F990);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578F990))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledLoggers]", qword_25578F978);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578F978, &dword_22314D000);
    __cxa_guard_release(&qword_25578F990);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578F9B0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578F9B0))
    return &unk_25578F998;
  sub_224573040((uint64_t)qword_25578F978, (uint64_t)&unk_25578F998);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578F998, &dword_22314D000);
  __cxa_guard_release(&qword_25578F9B0);
  return &unk_25578F998;
}

void sub_2240F5FDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F9B0);
  _Unwind_Resume(a1);
}

void sub_2240F5FF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578F990);
  _Unwind_Resume(a1);
}

uint64_t sub_2240F600C(uint64_t **a1, unsigned __int8 ****a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 **v4;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t result;
  _BOOL4 v14;
  unsigned __int8 *v15;
  unsigned __int8 ***v16;
  BOOL v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  int v21;
  unsigned __int8 ***v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  BOOL v29;

  v3 = **a1;
  v2 = (*a1)[1];
  v4 = **a2;
  if (v2 - v3 != (char *)(*a2)[1] - (char *)v4)
    return 0;
  for (; v3 != v2; v4 += 4)
  {
    v7 = *(unsigned __int8 *)(v3 + 23);
    if ((v7 & 0x80u) == 0)
      v8 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 23);
    else
      v8 = *(unsigned __int8 **)(v3 + 8);
    v9 = (unsigned __int8 *)*((unsigned __int8 *)v4 + 23);
    v10 = (char)v9;
    if ((char)v9 < 0)
      v9 = v4[1];
    if (v8 != v9)
      return 0;
    if (v10 >= 0)
      v11 = (unsigned __int8 *)v4;
    else
      v11 = *v4;
    if ((v7 & 0x80) != 0)
    {
      v14 = memcmp(*(const void **)v3, v11, *(_QWORD *)(v3 + 8)) == 0;
      result = 0;
      if (!v14)
        return result;
    }
    else
    {
      if (*(_BYTE *)(v3 + 23))
      {
        v12 = 0;
        while (*(unsigned __int8 *)(v3 + v12) == v11[v12])
        {
          if (v7 == ++v12)
            goto LABEL_17;
        }
        return 0;
      }
LABEL_17:
      result = 0;
    }
    if (*(_DWORD *)(v3 + 24) != *((_DWORD *)v4 + 6))
      return result;
    v3 += 32;
  }
  v15 = (unsigned __int8 *)a1[1];
  v16 = a2[1];
  if (v15[24])
    v17 = *((_BYTE *)v16 + 24) == 0;
  else
    v17 = 1;
  if (v17)
    return (v15[24] != 0) == (*((_BYTE *)v16 + 24) != 0);
  v18 = v15[23];
  if ((v18 & 0x80u) == 0)
    v19 = (unsigned __int8 *)v15[23];
  else
    v19 = (unsigned __int8 *)*((_QWORD *)v15 + 1);
  v20 = (unsigned __int8 *)*((unsigned __int8 *)v16 + 23);
  v21 = (char)v20;
  if ((char)v20 < 0)
    v20 = (unsigned __int8 *)v16[1];
  if (v19 != v20)
    return 0;
  if (v21 >= 0)
    v22 = a2[1];
  else
    v22 = (unsigned __int8 ***)*v16;
  if ((v18 & 0x80) != 0)
    return memcmp(*(const void **)v15, v22, *((_QWORD *)v15 + 1)) == 0;
  if (!v15[23])
    return 1;
  v23 = v18 - 1;
  do
  {
    v25 = *v15++;
    v24 = v25;
    v27 = *(unsigned __int8 *)v22;
    v22 = (unsigned __int8 ***)((char *)v22 + 1);
    v26 = v27;
    v29 = v23-- != 0;
    result = v24 == v26;
  }
  while (v24 == v26 && v29);
  return result;
}

std::string *sub_2240F6204()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  __int128 *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void *v10[3];
  void *v11[2];
  char v12;
  void *__dst[2];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  std::string::size_type v18;
  void *__p[2];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25578FA30);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578FA30))
  {
    sub_223174DE4(v11, "viz::PackageData");
    v2 = sub_2240F5E10();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v14 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    v4 = sub_224013F70();
    if (*((char *)v4 + 23) < 0)
    {
      sub_223197FA4(&v15, *(void **)v4, *((_QWORD *)v4 + 1));
    }
    else
    {
      v5 = *v4;
      v16 = *((_QWORD *)v4 + 2);
      v15 = v5;
    }
    v6 = sub_223BED35C();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v17, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v18 = v6->__r_.__value_.__r.__words[2];
      v17 = v7;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v20 = 0x400000000000000;
    sub_22319BD1C(v10, (uint64_t)__dst, 4uLL);
    sub_2245730F4((char *)v11, (uint64_t *)v10, &stru_25578FA18, v8, v9);
    sub_22319BB48(v10);
    if (SHIBYTE(v20) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v18) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v16) & 0x80000000) == 0)
          goto LABEL_16;
        goto LABEL_21;
      }
    }
    else if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete((void *)v17);
    if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v14) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_22;
    }
LABEL_21:
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v12 & 0x80000000) == 0)
      {
LABEL_18:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FA18, &dword_22314D000);
        __cxa_guard_release(&qword_25578FA30);
        return &stru_25578FA18;
      }
LABEL_23:
      operator delete(v11[0]);
      goto LABEL_18;
    }
LABEL_22:
    operator delete(__dst[0]);
    if ((v12 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_23;
  }
  return &stru_25578FA18;
}

void sub_2240F6410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_22319BB48(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
    {
LABEL_10:
      if (a18 < 0)
        operator delete(a13);
      __cxa_guard_abort(&qword_25578FA30);
      _Unwind_Resume(a1);
    }
LABEL_9:
    operator delete(a20);
    goto LABEL_10;
  }
LABEL_8:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
    goto LABEL_10;
  goto LABEL_9;
}

void sub_2240F64C4()
{
  uint64_t v0;
  uint64_t v1;

  while (1)
  {
    if (*(char *)(v0 - 1) < 0)
      operator delete(*(void **)(v0 - 24));
    v0 -= 24;
    if (v0 == v1)
      JUMPOUT(0x2240F64A0);
  }
}

uint64_t sub_2240F64EC(__int128 *a1, _QWORD **a2, _QWORD **a3, _QWORD **a4)
{
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  int v10;
  __int128 *v11;
  _QWORD **v12;
  __int128 *v13;
  _QWORD **v14;
  _QWORD **v15;
  __int128 **v16;

  v10 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&v8, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    v8 = *a1;
    v9 = *((_QWORD *)a1 + 2);
  }
  v10 = 1;
  v11 = &v8;
  v12 = a2;
  v13 = &v8;
  v14 = a2;
  v15 = a2;
  sub_2231ABB0C((uint64_t *)&v13, (uint64_t)&v8);
  v11 = (__int128 *)a3;
  v12 = a3 + 3;
  sub_2240F5134((uint64_t)&v16, (uint64_t)&v8, (uint64_t)&v11);
  v11 = &v8;
  v12 = a4;
  v13 = &v8;
  v14 = a4;
  v15 = a4;
  if (v10 == -1)
    sub_22316DD70();
  v16 = &v11;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v10])(&v16, &v8);
  if (v10 == -1)
    sub_22316DD70();
  v11 = (__int128 *)&v16;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v10])(&v11, &v8);
  if (v10 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v10])(&v11, &v8);
  return result;
}

void sub_2240F6634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240F664C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240F6660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240F6674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240F6688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_2240F669C(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v5;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a4)
  {
    v5 = result;
    if (a4 >> 59)
      sub_2240336DC();
    result = (char *)operator new(32 * a4);
    v8 = result;
    *v5 = result;
    v5[1] = result;
    v5[2] = &result[32 * a4];
    if (a2 != a3)
    {
      v9 = 0;
      do
      {
        result = &v8[v9];
        v10 = a2 + v9;
        if (*(char *)(a2 + v9 + 23) < 0)
        {
          result = (char *)sub_223197FA4(result, *(void **)v10, *(_QWORD *)(v10 + 8));
        }
        else
        {
          *(_OWORD *)result = *(_OWORD *)v10;
          *((_QWORD *)result + 2) = *(_QWORD *)(v10 + 16);
        }
        *(_DWORD *)&v8[v9 + 24] = *(_DWORD *)(a2 + v9 + 24);
        v9 += 32;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_2240F6778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_2238009A8(&a9);
  _Unwind_Resume(a1);
}

void sub_2240F678C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  for (; v11; v11 -= 32)
  {
    if (*(char *)(v10 + v11 - 9) < 0)
      operator delete(*(void **)(v10 + v11 - 32));
  }
  *(_QWORD *)(v9 + 8) = v10;
  sub_2238009A8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2240F67C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;

  *(_QWORD *)a1 = off_24EC675B8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    *(_BYTE *)(a1 + 56) = 1;
  }
  sub_2231AB0FC(a1 + 64, a3);
  *(_QWORD *)a1 = off_24EC67568;
  return a1;
}

void sub_2240F6874(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void **v5;
  void **v6;
  void *v7;

  if (*(_BYTE *)(v1 + 56) && *(char *)(v1 + 55) < 0)
    operator delete(*v3);
  v5 = (void **)*v2;
  if (*v2)
  {
    v6 = *(void ***)(v1 + 16);
    v7 = *v2;
    if (v6 != v5)
    {
      do
      {
        if (*((char *)v6 - 9) < 0)
          operator delete(*(v6 - 4));
        v6 -= 4;
      }
      while (v6 != v5);
      v7 = *v2;
    }
    *(_QWORD *)(v1 + 16) = v5;
    operator delete(v7);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240F68E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 ***v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  unsigned __int8 **v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  unsigned __int8 **v24;
  char v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v37[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v32);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v32);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v32);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v26);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v26);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v26);
  }
  v19 = (uint64_t *)v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = &v36;
  v24 = (unsigned __int8 **)v37;
  v13 = (unsigned __int8 ***)v26;
  v14 = &v27;
  v15 = &v28;
  v16 = &v29;
  v17 = &v30;
  v18 = (unsigned __int8 **)&v31;
  if (sub_224123BEC((uint64_t)&v25, &v19, &v13))
  {
    if (*((_BYTE *)v24 + 24) && *((_BYTE *)v18 + 24))
    {
      v8 = *v24;
      v9 = v24[1];
      v10 = *v18;
      if (v9 - *v24 == v18[1] - *v18)
      {
        if (v8 != v9)
        {
          while (sub_224122C08(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v19 = (uint64_t *)(a1 + 200);
        v20 = (uint64_t *)(a1 + 224);
        v13 = (unsigned __int8 ***)(a2 + 200);
        v14 = (uint64_t *)(a2 + 224);
        v11 = sub_2240F600C(&v19, &v13);
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v24 + 24) != 0) == (*((_BYTE *)v18 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_2231AD66C((uint64_t)v26);
  sub_2231AD66C((uint64_t)v32);
  return v11;
}

void sub_2240F6AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240F6B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240F6B18(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240F6F24(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240F7CC0(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240F81F8(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2240F89C8(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_2240F8DC8(&v9, (uint64_t)a1);
          else
            sub_2240F6C7C(&v8, a1);
        }
      }
    }
  }
}

void sub_2240F6C7C(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_2240F928C((uint64_t)a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_2240F928C((uint64_t)a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240F6F24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240F7224(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240F7224(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void **v7;
  void *__p;
  char v9;
  char v10;

  sub_2240F72D8((uint64_t)&v6, a2);
  sub_2240F73D4(a1, (uint64_t)&v6);
  if (v10 && v9 < 0)
    operator delete(__p);
  v3 = (void **)v6;
  if (v6)
  {
    v4 = v7;
    v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0)
          operator delete(*(v4 - 4));
        v4 -= 4;
      }
      while (v4 != v3);
      v5 = v6;
    }
    v7 = v3;
    operator delete(v5);
  }
}

void sub_2240F72C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2240F72D8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_2240F669C((char *)a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5);
  *(_BYTE *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    if (*(char *)(a2 + 47) < 0)
    {
      sub_223197FA4((_BYTE *)(a1 + 24), *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
    }
    else
    {
      v4 = *(_OWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v4;
    }
    *(_BYTE *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_2240F7368(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v4;
  void **v5;
  void **v6;

  if (*(_BYTE *)(v1 + 48) && *(char *)(v1 + 47) < 0)
    operator delete(*v2);
  v4 = *(void ***)v1;
  if (*(_QWORD *)v1)
  {
    v5 = *(void ***)(v1 + 8);
    v6 = *(void ***)v1;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0)
          operator delete(*(v5 - 4));
        v5 -= 4;
      }
      while (v5 != v4);
      v6 = *(void ***)v1;
    }
    *(_QWORD *)(v1 + 8) = v4;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_2240F73D4(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  __int128 *v6;
  void **v7;
  void **v8;
  void *v9;
  int v10;
  unsigned __int8 *v11;
  int v12;
  void **v13;
  __int128 v14;
  void **p_p;
  void *__p;
  void **v17;

  sub_2240F75C4((__int128 **)a2, (uint64_t)&__p);
  *(_QWORD *)&v14 = "logger_enable_state_changes";
  *((_QWORD *)&v14 + 1) = 27;
  p_p = &__p;
  sub_2240F7A94(a1, (uint64_t)&v14);
  sub_2240F7718((__int128 **)&__p, (uint64_t)&v14);
  v4 = *(__int128 **)a2;
  if (*(_QWORD *)a2)
  {
    v5 = *(__int128 **)(a2 + 8);
    v6 = *(__int128 **)a2;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0)
          operator delete(*((void **)v5 - 4));
        v5 -= 2;
      }
      while (v5 != v4);
      v6 = *(__int128 **)a2;
    }
    *(_QWORD *)(a2 + 8) = v4;
    operator delete(v6);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v14;
  v7 = (void **)__p;
  *(_QWORD *)(a2 + 16) = p_p;
  if (v7)
  {
    v8 = v17;
    v9 = v7;
    if (v17 != v7)
    {
      do
      {
        if (*((char *)v8 - 9) < 0)
          operator delete(*(v8 - 4));
        v8 -= 4;
      }
      while (v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v10 = *(unsigned __int8 *)(a1 + 88), *(_QWORD *)(a1 + 72) = "target_context", *(_QWORD *)(a1 + 80) = 14, v10))
  {
    if (*(_BYTE *)(a2 + 48))
    {
LABEL_20:
      sub_224542510(a1, a2 + 24);
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    if (*(_BYTE *)(a2 + 48))
      goto LABEL_20;
  }
  LOBYTE(__p) = 0;
  v17 = 0;
  v11 = (unsigned __int8 *)sub_22453FEA0(a1);
  v12 = *v11;
  *v11 = __p;
  LOBYTE(__p) = v12;
  v13 = (void **)*((_QWORD *)v11 + 1);
  *((_QWORD *)v11 + 1) = v17;
  v17 = v13;
  sub_22345337C(&v17, v12);
}

void sub_2240F7584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  void ***v12;

  sub_22345337C(v12, a12);
  _Unwind_Resume(a1);
}

void sub_2240F759C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F75B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

double sub_2240F75C4@<D0>(__int128 **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  __int128 *i;
  __int128 *v6;
  __int128 v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  double result;
  __int128 v12;
  unint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;

  v4 = ((char *)a1[1] - (char *)*a1) >> 5;
  v13 = 0;
  v12 = 0uLL;
  sub_2240F786C((uint64_t)&v12, v4);
  v6 = *a1;
  for (i = a1[1]; v6 != i; v6 += 2)
  {
    while (1)
    {
      while (1)
      {
        v8 = *((_DWORD *)v6 + 6);
        if (*((char *)v6 + 23) < 0)
        {
          sub_223197FA4(__p, *(void **)v6, *((_QWORD *)v6 + 1));
        }
        else
        {
          v9 = *v6;
          v15 = *((_QWORD *)v6 + 2);
          *(_OWORD *)__p = v9;
        }
        v16 = v8;
        v10 = *((_QWORD *)&v12 + 1);
        if (*((_QWORD *)&v12 + 1) >= v13)
          break;
        v7 = *(_OWORD *)__p;
        *(_QWORD *)(*((_QWORD *)&v12 + 1) + 16) = v15;
        *(_OWORD *)v10 = v7;
        __p[1] = 0;
        v15 = 0;
        __p[0] = 0;
        *(_DWORD *)(v10 + 24) = v16;
        *((_QWORD *)&v12 + 1) = v10 + 32;
        v6 += 2;
        if (v6 == i)
          goto LABEL_12;
      }
      *((_QWORD *)&v12 + 1) = sub_2240F795C((void **)&v12, (uint64_t)__p);
      if (SHIBYTE(v15) < 0)
        break;
      v6 += 2;
      if (v6 == i)
        goto LABEL_12;
    }
    operator delete(__p[0]);
  }
LABEL_12:
  result = *(double *)&v12;
  *(_OWORD *)a2 = v12;
  *(_QWORD *)(a2 + 16) = v13;
  return result;
}

void sub_2240F76DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_223714960(&a9);
  _Unwind_Resume(a1);
}

void sub_2240F76F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  sub_223714960((void **)&a9);
  _Unwind_Resume(a1);
}

double sub_2240F7718@<D0>(__int128 **a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  __int128 *i;
  __int128 *v6;
  __int128 v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  double result;
  __int128 v12;
  unint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;

  v4 = ((char *)a1[1] - (char *)*a1) >> 5;
  v13 = 0;
  v12 = 0uLL;
  sub_2240F786C((uint64_t)&v12, v4);
  v6 = *a1;
  for (i = a1[1]; v6 != i; v6 += 2)
  {
    while (1)
    {
      while (1)
      {
        v8 = *((_DWORD *)v6 + 6);
        if (*((char *)v6 + 23) < 0)
        {
          sub_223197FA4(__p, *(void **)v6, *((_QWORD *)v6 + 1));
        }
        else
        {
          v9 = *v6;
          v15 = *((_QWORD *)v6 + 2);
          *(_OWORD *)__p = v9;
        }
        v16 = v8;
        v10 = *((_QWORD *)&v12 + 1);
        if (*((_QWORD *)&v12 + 1) >= v13)
          break;
        v7 = *(_OWORD *)__p;
        *(_QWORD *)(*((_QWORD *)&v12 + 1) + 16) = v15;
        *(_OWORD *)v10 = v7;
        __p[1] = 0;
        v15 = 0;
        __p[0] = 0;
        *(_DWORD *)(v10 + 24) = v16;
        *((_QWORD *)&v12 + 1) = v10 + 32;
        v6 += 2;
        if (v6 == i)
          goto LABEL_12;
      }
      *((_QWORD *)&v12 + 1) = sub_2240F795C((void **)&v12, (uint64_t)__p);
      if (SHIBYTE(v15) < 0)
        break;
      v6 += 2;
      if (v6 == i)
        goto LABEL_12;
    }
    operator delete(__p[0]);
  }
LABEL_12:
  result = *(double *)&v12;
  *(_OWORD *)a2 = v12;
  *(_QWORD *)(a2 + 16) = v13;
  return result;
}

void sub_2240F7830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_223714960(&a9);
  _Unwind_Resume(a1);
}

void sub_2240F7848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  sub_223714960((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_2240F786C(uint64_t a1, unint64_t a2)
{
  void **v2;
  void **v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  void **v11;

  v2 = *(void ***)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 5)
  {
    if (a2 >> 59)
      sub_2240336DC();
    v4 = *(void ***)(a1 + 8);
    v5 = 32 * a2;
    v6 = (char *)operator new(32 * a2);
    v7 = &v6[v5];
    v8 = &v6[(char *)v4 - (char *)v2];
    if (v4 == v2)
    {
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
    }
    else
    {
      v9 = &v6[(char *)v4 - (char *)v2];
      do
      {
        v10 = *((_OWORD *)v4 - 2);
        *((_QWORD *)v9 - 2) = *(v4 - 2);
        *((_OWORD *)v9 - 2) = v10;
        *(v4 - 3) = 0;
        *(v4 - 2) = 0;
        *(v4 - 4) = 0;
        *((_DWORD *)v9 - 2) = *((_DWORD *)v4 - 2);
        v9 -= 32;
        v4 -= 4;
      }
      while (v4 != v2);
      v2 = *(void ***)a1;
      v11 = *(void ***)(a1 + 8);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v7;
      while (v11 != v2)
      {
        if (*((char *)v11 - 9) < 0)
          operator delete(*(v11 - 4));
        v11 -= 4;
      }
    }
    if (v2)
      operator delete(v2);
  }
}

char *sub_2240F795C(void **a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  void **v14;
  void **v15;
  __int128 v16;
  void **v17;

  v3 = ((_BYTE *)a1[1] - (_BYTE *)*a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_2240336DC();
  v5 = (_BYTE *)a1[2] - (_BYTE *)*a1;
  if (v5 >> 4 > v4)
    v4 = v5 >> 4;
  v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFE0;
  v7 = 0x7FFFFFFFFFFFFFFLL;
  if (!v6)
    v7 = v4;
  if (v7 >> 59)
    sub_223174E94();
  v9 = 32 * v7;
  v10 = (char *)operator new(32 * v7);
  v11 = &v10[32 * v3];
  v12 = &v10[v9];
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *((_QWORD *)v11 + 2) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *((_DWORD *)v11 + 6) = *(_DWORD *)(a2 + 24);
  v13 = v11 + 32;
  v14 = (void **)*a1;
  v15 = (void **)a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
  }
  else
  {
    do
    {
      v16 = *((_OWORD *)v15 - 2);
      *((_QWORD *)v11 - 2) = *(v15 - 2);
      *((_OWORD *)v11 - 2) = v16;
      *(v15 - 3) = 0;
      *(v15 - 2) = 0;
      *(v15 - 4) = 0;
      *((_DWORD *)v11 - 2) = *((_DWORD *)v15 - 2);
      v11 -= 32;
      v15 -= 4;
    }
    while (v15 != v14);
    v15 = (void **)*a1;
    v17 = (void **)a1[1];
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    while (v17 != v15)
    {
      if (*((char *)v17 - 9) < 0)
        operator delete(*(v17 - 4));
      v17 -= 4;
    }
  }
  if (v15)
    operator delete(v15);
  return v13;
}

void sub_2240F7A94(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  int *v12;

  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    v4 = *(uint64_t **)(a2 + 16);
    sub_22454024C(a1);
    v5 = *v4;
    v6 = v4[1];
    if (v5 != v6)
    {
      do
      {
LABEL_6:
        sub_22454024C(a1);
        sub_224542510(a1, v5);
        v11 = *(_DWORD *)(v5 + 24);
        v12 = &v11;
        sub_2240F7BB8(a1, &v12);
        v7 = *(_QWORD *)(a1 + 56);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 8);
        *(_QWORD *)(a1 + 56) = v7 - 8;
        if (*(_BYTE *)(a1 + 88))
          *(_BYTE *)(a1 + 88) = 0;
        v5 += 32;
      }
      while (v5 != v6);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 16);
      *(_QWORD *)(a1 + 56) = v7 - 16;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    v8 = *(uint64_t **)(a2 + 16);
    sub_22454024C(a1);
    v5 = *v8;
    v6 = v8[1];
    if (v5 != v6)
      goto LABEL_6;
  }
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a1 + 56) = v9 - 8;
  if (v10)
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240F7BB8(uint64_t a1, int **a2)
{
  int *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240F55F8((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240F7C7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F7C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F7CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F7CC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_2240F7F40(a2, v3 + 200);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240F7F40(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void **v7;
  void *__p;
  char v9;
  char v10;

  sub_2240F72D8((uint64_t)&v6, a2);
  sub_2240F7FF4(a1, (uint64_t)&v6);
  if (v10 && v9 < 0)
    operator delete(__p);
  v3 = (void **)v6;
  if (v6)
  {
    v4 = v7;
    v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0)
          operator delete(*(v4 - 4));
        v4 -= 4;
      }
      while (v4 != v3);
      v5 = v6;
    }
    v7 = v3;
    operator delete(v5);
  }
}

void sub_2240F7FE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2240F7FF4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  const void **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t *v18;

  v4 = (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5;
  v5 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(v5 + 40))
  {
    sub_22455B4D4();
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
    if (!v7)
      goto LABEL_12;
    goto LABEL_5;
  }
  v18 = (uint64_t *)(v5 + 16);
  sub_22455B1CC(&v18, v4);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v7)
  {
LABEL_5:
    v8 = 32 * (v7 >> 5);
    while (1)
    {
      v9 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        v18 = (uint64_t *)(v9 + 16);
        sub_22455B8BC((uint64_t)&v17, &v18, (const void **)v6);
        v10 = *(_DWORD *)(v6 + 24);
        v11 = *(_QWORD *)(a1 + 24);
        if (!*(_BYTE *)(v11 + 40))
          goto LABEL_11;
LABEL_6:
        v18 = (uint64_t *)(v11 + 16);
        sub_22455A2D4(&v18, v10);
        v6 += 32;
        v8 -= 32;
        if (!v8)
          break;
      }
      else
      {
        sub_22455BCF4((uint64_t)&v18, v9 + 8, v6);
        v10 = *(_DWORD *)(v6 + 24);
        v11 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v11 + 40))
          goto LABEL_6;
LABEL_11:
        sub_22455A6F0();
        v6 += 32;
        v8 -= 32;
        if (!v8)
          break;
      }
    }
  }
LABEL_12:
  if (*(_BYTE *)(a2 + 48))
  {
    v12 = (const void **)(a2 + 24);
    v13 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v13 + 40))
    {
      v18 = (uint64_t *)(v13 + 16);
      sub_224559C04(&v18, 1);
      v14 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v14 + 40))
      {
LABEL_15:
        v18 = (uint64_t *)(v14 + 16);
        return (char *)sub_22455B8BC((uint64_t)&v17, &v18, v12);
      }
    }
    else
    {
      LOBYTE(v18) = 1;
      std::ostream::write();
      v14 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v14 + 40))
        goto LABEL_15;
    }
    return (char *)sub_22455BCF4((uint64_t)&v18, v14 + 8, (uint64_t)v12);
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v16 + 40))
    {
      v18 = (uint64_t *)(v16 + 16);
      return sub_224559C04(&v18, 0);
    }
    else
    {
      LOBYTE(v18) = 0;
      return (char *)std::ostream::write();
    }
  }
}

void sub_2240F81F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_2240F84F8(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240F84F8(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void **v7;
  void *__p;
  char v9;
  char v10;

  sub_2240F72D8((uint64_t)&v6, a2);
  sub_2240F85AC(a1, (uint64_t)&v6);
  if (v10 && v9 < 0)
    operator delete(__p);
  v3 = (void **)v6;
  if (v6)
  {
    v4 = v7;
    v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0)
          operator delete(*(v4 - 4));
        v4 -= 4;
      }
      while (v4 != v3);
      v5 = v6;
    }
    v7 = v3;
    operator delete(v5);
  }
}

void sub_2240F8598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F85AC(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  __int128 *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  void **p_p;
  void *__p;
  void *v17;

  sub_2240F75C4((__int128 **)a2, (uint64_t)&__p);
  *(_QWORD *)&v14 = "logger_enable_state_changes";
  *((_QWORD *)&v14 + 1) = 27;
  p_p = &__p;
  sub_2240F879C(a1, (uint64_t)&v14);
  sub_2240F7718((__int128 **)&__p, (uint64_t)&v14);
  v4 = *(__int128 **)a2;
  if (*(_QWORD *)a2)
  {
    v5 = *(__int128 **)(a2 + 8);
    v6 = *(__int128 **)a2;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0)
          operator delete(*((void **)v5 - 4));
        v5 -= 2;
      }
      while (v5 != v4);
      v6 = *(__int128 **)a2;
    }
    *(_QWORD *)(a2 + 8) = v4;
    operator delete(v6);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v14;
  v7 = __p;
  *(_QWORD *)(a2 + 16) = p_p;
  if (v7)
  {
    v8 = (uint64_t)v17;
    v9 = v7;
    if (v17 != v7)
    {
      do
      {
        if (*(char *)(v8 - 9) < 0)
          operator delete(*(void **)(v8 - 32));
        v8 -= 32;
      }
      while ((void *)v8 != v7);
      v9 = __p;
    }
    v17 = v7;
    operator delete(v9);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v10 = *(unsigned __int8 *)(a1 + 88), *(_QWORD *)(a1 + 72) = "target_context", *(_QWORD *)(a1 + 80) = 14, v10))
  {
    if (*(_BYTE *)(a2 + 48))
    {
LABEL_20:
      sub_2245409C8(a1, a2 + 24);
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    if (*(_BYTE *)(a2 + 48))
      goto LABEL_20;
  }
  LOBYTE(__p) = 0;
  v17 = 0;
  v11 = (unsigned __int8 *)sub_22453F8B8(a1);
  v12 = *v11;
  *v11 = __p;
  LOBYTE(__p) = v12;
  v13 = *((_QWORD *)v11 + 1);
  *((_QWORD *)v11 + 1) = v17;
  v17 = (void *)v13;
  sub_223454278((uint64_t *)&v17, v12);
}

void sub_2240F875C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t *v12;

  sub_223454278(v12, a12);
  _Unwind_Resume(a1);
}

void sub_2240F8774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F8788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240F879C(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  int *v12;

  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v3 = *(unsigned __int8 *)(a1 + 88), *(_OWORD *)(a1 + 72) = *(_OWORD *)a2, v3))
  {
    v4 = *(uint64_t **)(a2 + 16);
    sub_22453FAE0(a1);
    v5 = *v4;
    v6 = v4[1];
    if (v5 != v6)
    {
      do
      {
LABEL_6:
        sub_22453FAE0(a1);
        sub_2245409C8(a1, v5);
        v11 = *(_DWORD *)(v5 + 24);
        v12 = &v11;
        sub_2240F88C0(a1, &v12);
        v7 = *(_QWORD *)(a1 + 56);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 8);
        *(_QWORD *)(a1 + 56) = v7 - 8;
        if (*(_BYTE *)(a1 + 88))
          *(_BYTE *)(a1 + 88) = 0;
        v5 += 32;
      }
      while (v5 != v6);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(v7 - 16);
      *(_QWORD *)(a1 + 56) = v7 - 16;
      return;
    }
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 1;
    v8 = *(uint64_t **)(a2 + 16);
    sub_22453FAE0(a1);
    v5 = *v8;
    v6 = v8[1];
    if (v5 != v6)
      goto LABEL_6;
  }
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a1 + 56) = v9 - 8;
  if (v10)
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_2240F88C0(uint64_t a1, int **a2)
{
  int *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_2240F55F8((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240F8984(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240F89A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F89B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240F89C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240F8BE0(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_2240F8BE0(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void **v7;
  void *__p;
  char v9;
  char v10;

  sub_2240F72D8((uint64_t)&v6, a2);
  sub_2240F8C94(a1, (uint64_t)&v6);
  if (v10 && v9 < 0)
    operator delete(__p);
  v3 = (void **)v6;
  if (v6)
  {
    v4 = v7;
    v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0)
          operator delete(*(v4 - 4));
        v4 -= 4;
      }
      while (v4 != v3);
      v5 = v6;
    }
    v7 = v3;
    operator delete(v5);
  }
}

void sub_2240F8C80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F8C94(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  char v10;
  char v11;

  if (*(_QWORD *)(a1 + 40))
  {
    v4 = *(_QWORD **)(a1 + 24);
    v10 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v4, (uint64_t)&v10, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  if (v6 != *(_QWORD *)a2)
  {
    do
    {
      sub_22454F620(a1, v5);
      if (*(_QWORD *)(a1 + 40))
      {
        v7 = *(_QWORD **)(a1 + 24);
        v11 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v7, (uint64_t)&v11, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a1 + 40);
      v5 += 32;
    }
    while (v5 != v6);
  }
  if (*(_BYTE *)(a2 + 48))
  {
    v9 = 1;
    sub_22454F564(a1, &v9);
    sub_22454F620(a1, a2 + 24);
  }
  else
  {
    v8 = 0;
    sub_22454F564(a1, &v8);
  }
}

void sub_2240F8DC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_2240F8F80(a2, v3 + 200);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_2240F8F80(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  void *v5;
  void *v6;
  void **v7;
  void *__p;
  char v9;
  char v10;

  sub_2240F72D8((uint64_t)&v6, a2);
  sub_2240F9034(a1, (uint64_t *)&v6);
  if (v10 && v9 < 0)
    operator delete(__p);
  v3 = (void **)v6;
  if (v6)
  {
    v4 = v7;
    v5 = v6;
    if (v7 != v6)
    {
      do
      {
        if (*((char *)v4 - 9) < 0)
          operator delete(*(v4 - 4));
        v4 -= 4;
      }
      while (v4 != v3);
      v5 = v6;
    }
    v7 = v3;
    operator delete(v5);
  }
}

void sub_2240F9020(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_2240F9034(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  int64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  _BOOL4 v12;
  uint64_t v13;
  char *p_src;
  int64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int64_t v19;
  _BOOL4 v20;
  uint64_t v22;
  uint64_t __src;
  uint64_t v24;

  v22 = (a2[1] - *a2) >> 5;
  v4 = a1 + 24;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&v22, (char *)&__src, 8);
  v5 = *a2;
  v6 = a2[1] - *a2;
  if (v6)
  {
    for (i = 32 * (v6 >> 5); i; i -= 32)
    {
      v10 = *(unsigned __int8 *)(v5 + 23);
      if ((v10 & 0x80u) != 0)
        v10 = *(_QWORD *)(v5 + 8);
      __src = v10;
      sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v24, 8);
      if (*(char *)(v5 + 23) < 0)
      {
        v9 = *(char **)v5;
        v8 = *(_QWORD *)(v5 + 8);
        if (*(_QWORD *)v5)
          v11 = 1;
        else
          v11 = v8 == 0;
        if (!v11)
        {
          v12 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          v9 = 0;
          if (v12)
            goto LABEL_13;
        }
      }
      else
      {
        v8 = *(unsigned __int8 *)(v5 + 23);
        v9 = (char *)v5;
      }
      sub_224501B60(v4, *(char **)(a1 + 32), v9, &v9[v8], v8);
      LODWORD(__src) = *(_DWORD *)(v5 + 24);
      sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
      v5 += 32;
    }
  }
  if (*((_BYTE *)a2 + 48))
  {
    LOBYTE(__src) = 1;
    sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
    v13 = *((unsigned __int8 *)a2 + 47);
    if ((v13 & 0x80u) != 0)
      v13 = a2[4];
    __src = v13;
    sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v24, 8);
    if (*((char *)a2 + 47) < 0)
    {
      p_src = (char *)a2[3];
      v15 = a2[4];
      if (!p_src)
      {
        if (v15)
        {
          v20 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
          p_src = 0;
          if (v20)
LABEL_13:
            abort();
        }
      }
    }
    else
    {
      p_src = (char *)(a2 + 3);
      v15 = *((unsigned __int8 *)a2 + 47);
    }
    v16 = *(char **)(a1 + 32);
    v17 = &p_src[v15];
    v18 = v4;
    v19 = v15;
  }
  else
  {
    LOBYTE(__src) = 0;
    v16 = *(char **)(a1 + 32);
    v17 = (char *)&__src + 1;
    p_src = (char *)&__src;
    v18 = v4;
    v19 = 1;
  }
  return sub_224501B60(v18, v16, p_src, v17, v19);
}

void sub_2240F928C(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void *v7;
  void *v8;
  void **v9;
  void *__p;
  char v11;
  char v12;
  uint64_t v13;
  int v14;

  sub_2240F72D8((uint64_t)&v8, a2);
  v13 = ((char *)v9 - (_BYTE *)v8) >> 5;
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 120))(a1, &v13);
  v3 = (void **)v8;
  v4 = v9;
  if (v9 != v8)
  {
    do
    {
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, v3);
      v14 = *((_DWORD *)v3 + 6);
      (*(void (**)(uint64_t, int *))(*(_QWORD *)a1 + 56))(a1, &v14);
      v3 += 4;
    }
    while (v3 != v4);
  }
  if (v12)
  {
    LOBYTE(v13) = 1;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 80))(a1, &v13);
    (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &__p);
  }
  else
  {
    LOBYTE(v13) = 0;
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 80))(a1, &v13);
  }
  if (v12 && v11 < 0)
    operator delete(__p);
  v5 = (void **)v8;
  if (v8)
  {
    v6 = v9;
    v7 = v8;
    if (v9 != v8)
    {
      do
      {
        if (*((char *)v6 - 9) < 0)
          operator delete(*(v6 - 4));
        v6 -= 4;
      }
      while (v6 != v5);
      v7 = v8;
    }
    v9 = v5;
    operator delete(v7);
  }
}

void sub_2240F93E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F93F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_224022F84((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240F940C(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240F9A48(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_2240FA698(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_2240FAD04(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240FB7B0(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_2240FC034(&v9, a1);
          else
            sub_2240F9570(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_2240F9570(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v27[0] = a2[1];
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_223BD7864((uint64_t)&v28, (uint64_t)a2, v4, v28);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v28);
  }
  else
  {
    sub_223BD7174((int *)v27, (uint64_t)a2, v4, v28);
  }
  v27[0] = a2[1];
  sub_2240FC6E8((int *)v27, (uint64_t)a2, v3 + 200);
}

void sub_2240F9A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F9A48(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v32);
    sub_223B87C9C((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v32);
  sub_223B87C9C((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_2231AD66C((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_22451CAD4(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240F9F9C(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_2240F9F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240F9F9C(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 *v5;
  __int128 *v6;
  __int128 *v7;
  void **v8;
  void **v9;
  void *v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  void *__p;
  void **v15;

  sub_2240F75C4((__int128 **)a2, (uint64_t)&__p);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "logger_enable_state_changes";
  *(_QWORD *)(a1 + 96) = 27;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  sub_2240FA108((uint64_t *)a1, (char **)&__p);
  sub_2240F7718((__int128 **)&__p, (uint64_t)&v12);
  v5 = *(__int128 **)a2;
  if (*(_QWORD *)a2)
  {
    v6 = *(__int128 **)(a2 + 8);
    v7 = *(__int128 **)a2;
    if (v6 != v5)
    {
      do
      {
        if (*((char *)v6 - 9) < 0)
          operator delete(*((void **)v6 - 4));
        v6 -= 2;
      }
      while (v6 != v5);
      v7 = *(__int128 **)a2;
    }
    *(_QWORD *)(a2 + 8) = v5;
    operator delete(v7);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v12;
  v8 = (void **)__p;
  *(_QWORD *)(a2 + 16) = v13;
  if (v8)
  {
    v9 = v15;
    v10 = v8;
    if (v15 != v8)
    {
      do
      {
        if (*((char *)v9 - 9) < 0)
          operator delete(*(v9 - 4));
        v9 -= 4;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v15 = v8;
    operator delete(v10);
  }
  v11 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "target_context";
  *(_QWORD *)(a1 + 96) = 14;
  if (!v11)
    *(_BYTE *)(a1 + 104) = 1;
  sub_223BB5654((uint64_t *)a1, a2 + 24);
}

void sub_2240FA0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240FA0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240FA108(uint64_t *a1, char **a2)
{
  unsigned __int8 *v4;
  int v5;
  unint64_t v6;
  void ***v7;
  void **v8;
  char *v9;
  unint64_t v10;
  void **v11;
  void **v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  __int128 v21;
  void *v22;

  sub_224544628((uint64_t)a1);
  v4 = (unsigned __int8 *)a1[4];
  v5 = *v4;
  if (v5 == 2)
  {
    v6 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v4 + 1) + 8) - **((_QWORD **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    v6 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v4 + 1) + 8) - **((_QWORD **)v4 + 1)) >> 3);
  }
  else
  {
    if (!*v4)
    {
      v6 = 0;
      v7 = (void ***)(a2 + 1);
      v8 = (void **)a2[1];
      v9 = *a2;
      v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    v6 = 1;
  }
  v7 = (void ***)(a2 + 1);
  v8 = (void **)a2[1];
  v9 = *a2;
  v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_2240FA318((void **)a2, v6 - v10);
    v13 = a2;
    v11 = (void **)*a2;
    v12 = (void **)v13[1];
    if (v11 != v12)
      goto LABEL_22;
LABEL_20:
    v14 = a1[6];
    v15 = a1[9];
    goto LABEL_25;
  }
LABEL_11:
  if (v10 <= v6)
  {
    v12 = v8;
    v11 = (void **)*a2;
    if (v11 != v8)
      goto LABEL_22;
    goto LABEL_20;
  }
  v12 = (void **)&v9[32 * v6];
  while (v8 != v12)
  {
    if (*((char *)v8 - 9) < 0)
      operator delete(*(v8 - 4));
    v8 -= 4;
  }
  *v7 = v12;
  v11 = (void **)*a2;
  if (v11 == v12)
    goto LABEL_20;
  do
  {
LABEL_22:
    sub_224544628((uint64_t)a1);
    v20 = (void **)sub_2245448E0(a1);
    ++a1[14];
    v22 = 0;
    v21 = 0uLL;
    sub_22451CFD4(v20, (uint64_t)&v21);
    if (*((char *)v11 + 23) < 0)
      operator delete(*v11);
    v16 = (char *)(v11 + 3);
    v17 = v21;
    v11[2] = v22;
    *(_OWORD *)v11 = v17;
    v11 += 4;
    *(_QWORD *)&v21 = v16;
    sub_2240FA4A8(a1, (_DWORD **)&v21);
    v18 = a1[6];
    a1[4] = *(_QWORD *)(v18 - 8);
    v19 = a1[9];
    a1[14] = *(_QWORD *)(v19 - 8);
    a1[6] = v18 - 8;
    a1[9] = v19 - 8;
  }
  while (v11 != v12);
  v14 = v18 - 8;
  v15 = v19 - 8;
LABEL_25:
  a1[4] = *(_QWORD *)(v14 - 8);
  a1[14] = *(_QWORD *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_2240FA2FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240FA318(void **a1, unint64_t a2)
{
  _BYTE *v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void **v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  void **v18;
  __int128 v19;
  void **v20;

  v5 = (void **)a1[1];
  v4 = a1[2];
  if (a2 <= (v4 - (_BYTE *)v5) >> 5)
  {
    if (a2)
    {
      v11 = 32 * a2;
      v12 = &v5[4 * a2];
      do
      {
        *v5 = 0;
        v5[1] = 0;
        *((_DWORD *)v5 + 6) = 0;
        v5[2] = 0;
        v5 += 4;
        v11 -= 32;
      }
      while (v11);
      v5 = v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = ((char *)v5 - (_BYTE *)*a1) >> 5;
    if ((v6 + a2) >> 59)
      sub_2240336DC();
    v7 = v4 - (_BYTE *)*a1;
    v8 = v7 >> 4;
    if (v7 >> 4 <= v6 + a2)
      v8 = v6 + a2;
    if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFE0)
      v9 = 0x7FFFFFFFFFFFFFFLL;
    else
      v9 = v8;
    if (v9)
    {
      if (v9 >> 59)
        sub_223174E94();
      v10 = (char *)operator new(32 * v9);
    }
    else
    {
      v10 = 0;
    }
    v13 = &v10[32 * v6];
    v14 = 32 * a2;
    v15 = &v13[32 * a2];
    v16 = v13;
    do
    {
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      *((_DWORD *)v16 + 6) = 0;
      *((_QWORD *)v16 + 2) = 0;
      v16 += 32;
      v14 -= 32;
    }
    while (v14);
    v17 = &v10[32 * v9];
    v18 = (void **)*a1;
    if (v5 == *a1)
    {
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
    }
    else
    {
      do
      {
        v19 = *((_OWORD *)v5 - 2);
        *((_QWORD *)v13 - 2) = *(v5 - 2);
        *((_OWORD *)v13 - 2) = v19;
        *(v5 - 3) = 0;
        *(v5 - 2) = 0;
        *(v5 - 4) = 0;
        *((_DWORD *)v13 - 2) = *((_DWORD *)v5 - 2);
        v13 -= 32;
        v5 -= 4;
      }
      while (v5 != v18);
      v5 = (void **)*a1;
      v20 = (void **)a1[1];
      *a1 = v13;
      a1[1] = v15;
      a1[2] = v17;
      while (v20 != v5)
      {
        if (*((char *)v20 - 9) < 0)
          operator delete(*(v20 - 4));
        v20 -= 4;
      }
    }
    if (v5)
      operator delete(v5);
  }
}

void sub_2240FA4A8(uint64_t *a1, _DWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_224137F7C((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240FA60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_2240FA698(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v26);
    sub_223B87C9C((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v26);
  sub_223B87C9C((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_2231AD66C((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v26, a2, v4);
  LODWORD(v26[0]) = 1;
  sub_224554038(a2[6], v26);
  return sub_2240FAB24((uint64_t)v26, a2, v3 + 200);
}

void sub_2240FAADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240FAB24(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  void **v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char v10;

  v5 = a2 + 2;
  sub_2231B1308(a2 + 2);
  sub_2240FAC08((uint64_t)a2, a3);
  v6 = (void **)(a3 + 24);
  v10 = 0;
  sub_224553CF0(a2[6], &v10);
  if (v10)
  {
    if (!*(_BYTE *)(a3 + 48))
    {
      *v6 = 0;
      *(_QWORD *)(a3 + 32) = 0;
      *(_QWORD *)(a3 + 40) = 0;
      *(_BYTE *)(a3 + 48) = 1;
    }
    sub_22455481C(a2[6], (void **)(a3 + 24));
  }
  else if (*(_BYTE *)(a3 + 48))
  {
    if (*(char *)(a3 + 47) < 0)
      operator delete(*v6);
    *(_BYTE *)(a3 + 48) = 0;
  }
  v7 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v9 = *(_QWORD *)(v7 - 16) - result + *(_QWORD *)(v7 - 8);
  if (v9)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v9);
  a2[4] -= 16;
  return result;
}

void sub_2240FAC08(uint64_t a1, uint64_t a2)
{
  void **v4;
  unint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  v9 = (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5;
  sub_2245543E8(*(_QWORD *)(a1 + 48), &v9);
  v4 = *(void ***)(a2 + 8);
  v5 = ((uint64_t)v4 - *(_QWORD *)a2) >> 5;
  if (v9 > v5)
  {
    sub_2240FA318((void **)a2, v9 - v5);
    v8 = a2;
    v6 = *(void ***)a2;
    v7 = *(_QWORD *)(v8 + 8);
    if ((void **)v7 == v6)
      return;
    goto LABEL_13;
  }
  if (v9 >= v5)
  {
    v7 = *(_QWORD *)(a2 + 8);
    v6 = *(void ***)a2;
    if (v4 == v6)
      return;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)a2 + 32 * v9;
  while (v4 != (void **)v7)
  {
    if (*((char *)v4 - 9) < 0)
      operator delete(*(v4 - 4));
    v4 -= 4;
  }
  *(_QWORD *)(a2 + 8) = v7;
  v6 = *(void ***)a2;
  if ((void **)v7 != v6)
  {
    do
    {
LABEL_13:
      sub_22455481C(*(_QWORD *)(a1 + 48), v6);
      v10 = 0;
      sub_224553F80(*(_QWORD *)(a1 + 48), &v10);
      *((_DWORD *)v6 + 6) = v10;
      v6 += 4;
    }
    while (v6 != (void **)v7);
  }
}

void sub_2240FAD04(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v32);
    sub_223B87C9C((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v32);
  sub_223B87C9C((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_2231AD66C((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_22451C444(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  sub_2240FB258(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_2240FB210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240FB258(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 *v5;
  __int128 *v6;
  __int128 *v7;
  void **v8;
  void **v9;
  void *v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  void *__p;
  void **v15;

  sub_2240F75C4((__int128 **)a2, (uint64_t)&__p);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "logger_enable_state_changes";
  *(_QWORD *)(a1 + 96) = 27;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  sub_2240FB3C4((uint64_t *)a1, (char **)&__p);
  sub_2240F7718((__int128 **)&__p, (uint64_t)&v12);
  v5 = *(__int128 **)a2;
  if (*(_QWORD *)a2)
  {
    v6 = *(__int128 **)(a2 + 8);
    v7 = *(__int128 **)a2;
    if (v6 != v5)
    {
      do
      {
        if (*((char *)v6 - 9) < 0)
          operator delete(*((void **)v6 - 4));
        v6 -= 2;
      }
      while (v6 != v5);
      v7 = *(__int128 **)a2;
    }
    *(_QWORD *)(a2 + 8) = v5;
    operator delete(v7);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  *(_OWORD *)a2 = v12;
  v8 = (void **)__p;
  *(_QWORD *)(a2 + 16) = v13;
  if (v8)
  {
    v9 = v15;
    v10 = v8;
    if (v15 != v8)
    {
      do
      {
        if (*((char *)v9 - 9) < 0)
          operator delete(*(v9 - 4));
        v9 -= 4;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v15 = v8;
    operator delete(v10);
  }
  v11 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "target_context";
  *(_QWORD *)(a1 + 96) = 14;
  if (!v11)
    *(_BYTE *)(a1 + 104) = 1;
  sub_223BBE04C((uint64_t *)a1, a2 + 24);
}

void sub_2240FB39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240FB3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_223714960((void **)va);
  _Unwind_Resume(a1);
}

void sub_2240FB3C4(uint64_t *a1, char **a2)
{
  unsigned __int8 *v4;
  int v5;
  unint64_t v6;
  void ***v7;
  void **v8;
  char *v9;
  unint64_t v10;
  void **v11;
  void **v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  __int128 v21;
  void *v22;

  sub_224544138((uint64_t)a1);
  v4 = (unsigned __int8 *)a1[4];
  v5 = *v4;
  if (v5 == 2)
  {
    v6 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v4 + 1) + 8) - **((_QWORD **)v4 + 1)) >> 4;
  }
  else if (v5 == 1)
  {
    v6 = *(_QWORD *)(*((_QWORD *)v4 + 1) + 16);
  }
  else
  {
    if (!*v4)
    {
      v6 = 0;
      v7 = (void ***)(a2 + 1);
      v8 = (void **)a2[1];
      v9 = *a2;
      v10 = ((char *)v8 - *a2) >> 5;
      goto LABEL_11;
    }
    v6 = 1;
  }
  v7 = (void ***)(a2 + 1);
  v8 = (void **)a2[1];
  v9 = *a2;
  v10 = ((char *)v8 - *a2) >> 5;
  if (v6 > v10)
  {
    sub_2240FA318((void **)a2, v6 - v10);
    v13 = a2;
    v11 = (void **)*a2;
    v12 = (void **)v13[1];
    if (v11 != v12)
      goto LABEL_22;
LABEL_20:
    v14 = a1[6];
    v15 = a1[9];
    goto LABEL_25;
  }
LABEL_11:
  if (v10 <= v6)
  {
    v12 = v8;
    v11 = (void **)*a2;
    if (v11 != v8)
      goto LABEL_22;
    goto LABEL_20;
  }
  v12 = (void **)&v9[32 * v6];
  while (v8 != v12)
  {
    if (*((char *)v8 - 9) < 0)
      operator delete(*(v8 - 4));
    v8 -= 4;
  }
  *v7 = v12;
  v11 = (void **)*a2;
  if (v11 == v12)
    goto LABEL_20;
  do
  {
LABEL_22:
    sub_224544138((uint64_t)a1);
    v20 = (void **)sub_2245443F0(a1);
    ++a1[14];
    v22 = 0;
    v21 = 0uLL;
    sub_22451C83C(v20, (uint64_t)&v21);
    if (*((char *)v11 + 23) < 0)
      operator delete(*v11);
    v16 = (char *)(v11 + 3);
    v17 = v21;
    v11[2] = v22;
    *(_OWORD *)v11 = v17;
    v11 += 4;
    *(_QWORD *)&v21 = v16;
    sub_2240FB5C0(a1, (_DWORD **)&v21);
    v18 = a1[6];
    a1[4] = *(_QWORD *)(v18 - 8);
    v19 = a1[9];
    a1[14] = *(_QWORD *)(v19 - 8);
    a1[6] = v18 - 8;
    a1[9] = v19 - 8;
  }
  while (v11 != v12);
  v14 = v18 - 8;
  v15 = v19 - 8;
LABEL_25:
  a1[4] = *(_QWORD *)(v14 - 8);
  a1[14] = *(_QWORD *)(v15 - 8);
  a1[6] = v14 - 8;
  a1[9] = v15 - 8;
}

void sub_2240FB5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240FB5C0(uint64_t *a1, _DWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_224137F7C((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240FB724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240FB7B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)__p);
    sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)__p);
  sub_223B87C9C((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_2245508F0(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_223BC4F50((uint64_t)__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_2240FBD0C((uint64_t)__p, a2, v3 + 200);
}

void sub_2240FBCC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240FBD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v5;
  char v6;
  char v7;
  char v8;
  void *__p[2];
  uint64_t v10;

  LODWORD(__p[0]) = 1;
  sub_2245508F0(a2, __p);
  sub_2240FBED8(a2, a3);
  v5 = (void **)(a3 + 24);
  v8 = 0;
  sub_22454FFAC(a2, &v8);
  if (!v8)
  {
    if (!*(_BYTE *)(a3 + 48))
      goto LABEL_13;
    if (*(char *)(a3 + 47) < 0)
      operator delete(*v5);
    *(_BYTE *)(a3 + 48) = 0;
    if (*(_BYTE *)(a2 + 131))
      return;
    while (1)
    {
LABEL_23:
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (SHIBYTE(v10) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_30:
          v7 = 0;
          if (SHIBYTE(v10) < 0)
            goto LABEL_33;
          goto LABEL_19;
        }
      }
      else if (SHIBYTE(v10) == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_30;
      }
      v7 = 1;
      if (SHIBYTE(v10) < 0)
LABEL_33:
        operator delete(__p[0]);
LABEL_19:
      if (*(_BYTE *)(a2 + 131))
        v6 = 0;
      else
        v6 = v7;
      if ((v6 & 1) == 0)
        return;
    }
  }
  if (!*(_BYTE *)(a3 + 48))
  {
    *v5 = 0;
    *(_QWORD *)(a3 + 32) = 0;
    *(_QWORD *)(a3 + 40) = 0;
    *(_BYTE *)(a3 + 48) = 1;
    ++*(_QWORD *)(a2 + 80);
    if (!*(_BYTE *)(a2 + 128))
      goto LABEL_15;
    goto LABEL_11;
  }
  ++*(_QWORD *)(a2 + 80);
  if (*(_BYTE *)(a2 + 128))
  {
LABEL_11:
    if (!*(_BYTE *)(a2 + 131))
      goto LABEL_15;
    *(_BYTE *)(a2 + 132) = 1;
LABEL_13:
    if (!*(_BYTE *)(a2 + 131))
      goto LABEL_23;
    return;
  }
LABEL_15:
  sub_2245523C0(a2, (uint64_t)__p);
  if (*(char *)(a3 + 47) < 0)
    operator delete(*v5);
  *(_OWORD *)v5 = *(_OWORD *)__p;
  *(_QWORD *)(a3 + 40) = v10;
  ++*(_QWORD *)(a2 + 104);
  if (!*(_BYTE *)(a2 + 131))
    goto LABEL_23;
}

void sub_2240FBED8(uint64_t a1, uint64_t a2)
{
  void **v4;
  unint64_t v5;
  void **v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  __int128 v13;
  unint64_t v14;
  __int128 v15;
  void *v16;

  v14 = (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5;
  sub_224550D98(a1, &v14);
  v4 = *(void ***)(a2 + 8);
  v5 = ((uint64_t)v4 - *(_QWORD *)a2) >> 5;
  if (v14 > v5)
  {
    sub_2240FA318((void **)a2, v14 - v5);
    v8 = a2;
    v6 = *(void ***)a2;
    v7 = *(void ***)(v8 + 8);
    v9 = (char *)v7 - (char *)v6;
    if (v7 == v6)
      return;
    goto LABEL_13;
  }
  if (v14 >= v5)
  {
    v6 = *(void ***)a2;
    v9 = (char *)v4 - (char *)v6;
    if (v4 == v6)
      return;
    goto LABEL_13;
  }
  v10 = *(_QWORD *)a2 + 32 * v14;
  while (v4 != (void **)v10)
  {
    if (*((char *)v4 - 9) < 0)
      operator delete(*(v4 - 4));
    v4 -= 4;
  }
  *(_QWORD *)(a2 + 8) = v10;
  v6 = *(void ***)a2;
  v9 = v10 - (_QWORD)v6;
  if ((void **)v10 != v6)
  {
LABEL_13:
    v11 = 32 * (v9 >> 5);
    do
    {
      ++*(_QWORD *)(a1 + 80);
      if (*(_BYTE *)(a1 + 128))
        v12 = *(_BYTE *)(a1 + 131) == 0;
      else
        v12 = 1;
      if (v12)
      {
        sub_2245523C0(a1, (uint64_t)&v15);
        if (*((char *)v6 + 23) < 0)
          operator delete(*v6);
        v13 = v15;
        v6[2] = v16;
        *(_OWORD *)v6 = v13;
        ++*(_QWORD *)(a1 + 104);
      }
      else
      {
        *(_BYTE *)(a1 + 132) = 1;
      }
      LODWORD(v15) = 0;
      sub_22455069C(a1, &v15);
      *((_DWORD *)v6 + 6) = v15;
      v6 += 4;
      v11 -= 32;
    }
    while (v11);
  }
}

void sub_2240FC034(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BCDEF0((uint64_t)v25, a2, v4);
  sub_2240FC4A8((uint64_t)v25, a2, v3 + 200);
}

void sub_2240FC460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240FC4A8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_2244FFA6C(a2);
  sub_2240FC56C(a2, a3);
  sub_223BCE57C(a2, a3 + 24);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_2240FC558(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240FC56C(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  std::logic_error *exception;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_21;
  v8 = *(_QWORD *)(a1[3] + v3);
  a1[6] = v3 + 8;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = (v9 - *(_QWORD *)a2) >> 5;
  if (v8 > v10)
  {
    sub_2240FA318((void **)a2, v8 - v10);
    v13 = a2;
    v11 = *(_DWORD **)a2;
    v12 = *(_QWORD *)(v13 + 8);
    if ((_DWORD *)v12 != v11)
      goto LABEL_16;
    return;
  }
  if (v8 < v10)
  {
    v12 = *(_QWORD *)a2 + 32 * v8;
    while (v9 != v12)
    {
      if (*(char *)(v9 - 9) < 0)
        operator delete(*(void **)(v9 - 32));
      v9 -= 32;
    }
    *(_QWORD *)(a2 + 8) = v12;
    v11 = *(_DWORD **)a2;
    if ((_DWORD *)v12 == v11)
      return;
    while (1)
    {
LABEL_16:
      sub_2244FFDBC(a1, (uint64_t)v11);
      v14 = a1[6];
      v15 = a1[7];
      v4 = v15 >= v14;
      v16 = v15 - v14;
      if (!v4)
        v16 = 0;
      if (v16 <= 3)
        break;
      v17 = *(_DWORD *)(a1[3] + v14);
      a1[6] = v14 + 4;
      v11[6] = v17;
      v11 += 8;
      if (v11 == (_DWORD *)v12)
        return;
    }
LABEL_21:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v12 = *(_QWORD *)(a2 + 8);
  v11 = *(_DWORD **)a2;
  if (v9 != *(_QWORD *)a2)
    goto LABEL_16;
}

void sub_2240FC6C0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240FC6D4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240FC6E8(int *a1, uint64_t a2, uint64_t a3)
{
  void **v6;
  int v7;
  char v8;

  v7 = 1;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 < 1)
  {
    sub_2240FCB34(a2, a3);
    v6 = (void **)(a3 + 24);
    v8 = 0;
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v8);
    if (v8)
    {
      if (!*(_BYTE *)(a3 + 48))
      {
        *v6 = 0;
        *(_QWORD *)(a3 + 32) = 0;
        *(_QWORD *)(a3 + 40) = 0;
        *(_BYTE *)(a3 + 48) = 1;
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 144))(a2, a3 + 24);
    }
    else if (*(_BYTE *)(a3 + 48))
    {
      if (*(char *)(a3 + 47) < 0)
        operator delete(*v6);
      *(_BYTE *)(a3 + 48) = 0;
    }
  }
  else
  {
    sub_2240FC80C(a1, a2, a3);
  }
}

void sub_2240FC80C(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  void **v7;
  unsigned int v8;
  __int128 *v9;
  unsigned int v10;
  char v11;

  v5 = *a1;
  if (*a1 == 2)
  {
    v10 = 1;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v10);
    if (v10 >= 2)
    {
      v8 = v10;
      v9 = sub_2240FC938();
      sub_22455C3A8((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  sub_2240FCB34(a2, a3);
  v7 = (void **)(a3 + 24);
  v11 = 0;
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 80))(a2, &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a3 + 48))
    {
      *v7 = 0;
      *(_QWORD *)(a3 + 32) = 0;
      *(_QWORD *)(a3 + 40) = 0;
      *(_BYTE *)(a3 + 48) = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 144))(a2, a3 + 24);
  }
  else if (*(_BYTE *)(a3 + 48))
  {
    if (*(char *)(a3 + 47) < 0)
      operator delete(*v7);
    *(_BYTE *)(a3 + 48) = 0;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240FC938()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FA70);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FA70))
    return &xmmword_25578FA58;
  v2 = (char *)sub_2240FCA14();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578FA58, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578FA68 = *((_QWORD *)v2 + 2);
    xmmword_25578FA58 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FA58, &dword_22314D000);
  __cxa_guard_release(&qword_25578FA70);
  return &xmmword_25578FA58;
}

void sub_2240FC9FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FA70);
  _Unwind_Resume(a1);
}

void *sub_2240FCA14()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FA90);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578FA90))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledLoggersSample]", qword_25578FA78);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FA78, &dword_22314D000);
    __cxa_guard_release(&qword_25578FA90);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578FAB0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FAB0))
    return &unk_25578FA98;
  sub_224573040((uint64_t)qword_25578FA78, (uint64_t)&unk_25578FA98);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578FA98, &dword_22314D000);
  __cxa_guard_release(&qword_25578FAB0);
  return &unk_25578FA98;
}

void sub_2240FCB04(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FAB0);
  _Unwind_Resume(a1);
}

void sub_2240FCB1C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FA90);
  _Unwind_Resume(a1);
}

void sub_2240FCB34(uint64_t a1, uint64_t a2)
{
  void **v4;
  unint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;

  v9 = (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5;
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v9);
  v4 = *(void ***)(a2 + 8);
  v5 = ((uint64_t)v4 - *(_QWORD *)a2) >> 5;
  if (v9 > v5)
  {
    sub_2240FA318((void **)a2, v9 - v5);
    v8 = a2;
    v6 = *(void ***)a2;
    v7 = *(_QWORD *)(v8 + 8);
    if ((void **)v7 == v6)
      return;
    goto LABEL_13;
  }
  if (v9 >= v5)
  {
    v7 = *(_QWORD *)(a2 + 8);
    v6 = *(void ***)a2;
    if (v4 == v6)
      return;
    goto LABEL_13;
  }
  v7 = *(_QWORD *)a2 + 32 * v9;
  while (v4 != (void **)v7)
  {
    if (*((char *)v4 - 9) < 0)
      operator delete(*(v4 - 4));
    v4 -= 4;
  }
  *(_QWORD *)(a2 + 8) = v7;
  v6 = *(void ***)a2;
  if ((void **)v7 != v6)
  {
    do
    {
LABEL_13:
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, v6);
      v10 = 0;
      (*(void (**)(uint64_t, int *))(*(_QWORD *)a1 + 56))(a1, &v10);
      *((_DWORD *)v6 + 6) = v10;
      v6 += 4;
    }
    while (v6 != (void **)v7);
  }
}

_QWORD *sub_2240FCC44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC677F8;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a1 + 64);
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 112) = 0;
  *(_BYTE *)(v4 + 136) = 0;
  if (*(_BYTE *)(a1 + 136))
  {
    *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
    *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
    *(_QWORD *)(a1 + 120) = 0;
    *(_QWORD *)(a1 + 128) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_BYTE *)(v4 + 136) = 1;
  }
  *(_BYTE *)(v4 + 176) = 0;
  *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
  *(_BYTE *)(v4 + 224) = 0;
  if (*(_BYTE *)(a1 + 224))
  {
    *(_OWORD *)(v4 + 176) = *(_OWORD *)(a1 + 176);
    *(_QWORD *)(v4 + 192) = *(_QWORD *)(a1 + 192);
    *(_QWORD *)(a1 + 184) = 0;
    *(_QWORD *)(a1 + 192) = 0;
    *(_QWORD *)(a1 + 176) = 0;
    v6 = (unsigned __int128 *)(a1 + 208);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 208) = v7;
    *(_BYTE *)(v4 + 224) = 1;
  }
  *(_BYTE *)(v4 + 240) = 0;
  *(_BYTE *)(v4 + 264) = 0;
  if (*(_BYTE *)(a1 + 264))
  {
    *(_OWORD *)(v4 + 240) = *(_OWORD *)(a1 + 240);
    *(_QWORD *)(v4 + 256) = *(_QWORD *)(a1 + 256);
    *(_QWORD *)(a1 + 248) = 0;
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_BYTE *)(v4 + 264) = 1;
  }
  *(_QWORD *)v4 = &off_24EC677A8;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_2240FCDE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240FCE04(_QWORD *a1)
{
  *a1 = &off_24EC677F8;
  sub_2231AD66C((uint64_t)(a1 + 8));
  return a1;
}

void sub_2240FCE34(_QWORD *a1)
{
  *a1 = &off_24EC677F8;
  sub_2231AD66C((uint64_t)(a1 + 8));
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240FCE74(uint64_t a1)
{
  return a1 + 64;
}

BOOL sub_2240FCE7C(uint64_t a1, void *lpsrc)
{
  _BYTE *v4;
  _BOOL8 v5;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24EC6A3F8, (const struct __class_type_info *)&unk_24EC66818, 0);
  if (!v4)
    return 0;
  if ((void *)a1 == lpsrc)
    return 1;
  v5 = (*(_BYTE *)(a1 + 48) != 0) == (v4[48] != 0);
  if (!*(_BYTE *)(a1 + 48) || !v4[48])
    return v5;
  if (*(_QWORD *)(a1 + 8) != *((_QWORD *)v4 + 1))
    return 0;
  if (!*(_BYTE *)(a1 + 24) || !v4[24])
  {
    if ((*(_BYTE *)(a1 + 24) != 0) == (v4[24] != 0))
      goto LABEL_13;
    return 0;
  }
  if (*(_QWORD *)(a1 + 16) != *((_QWORD *)v4 + 2))
    return 0;
LABEL_13:
  v5 = (*(_BYTE *)(a1 + 40) != 0) == (v4[40] != 0);
  if (*(_BYTE *)(a1 + 40) && v4[40])
    return *(_QWORD *)(a1 + 32) == *((_QWORD *)v4 + 4);
  return v5;
}

void sub_2240FCFB0(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_2240FE250();
  sub_2240FD064(a1);
  sub_2231AC984(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 64, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_2240FD048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240FD064(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FBF0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FBF0))
  {
    v4 = sub_2240FDF24();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_2231AD150((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_223197FA4(&xmmword_25578FBD8, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25578FBE8 = *(_QWORD *)(v9 - 8);
      xmmword_25578FBD8 = v7;
    }
    sub_22319BB48(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FBD8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FBF0);
  }
  return sub_2240FE538(&xmmword_25578FBD8, "{", a1 + 8, "}");
}

void sub_2240FD174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_22319BB48(&a9);
  __cxa_guard_abort(&qword_25578FBF0);
  _Unwind_Resume(a1);
}

void sub_2240FD194(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FBF0);
  _Unwind_Resume(a1);
}

void sub_2240FD1AC(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.net");
  *(_DWORD *)(a1 + 24) = 5;
}

void sub_2240FD1D8(void *lpsrc@<X0>, uint64_t a2@<X8>)
{
  sub_224137560(lpsrc, 5, a2);
}

_QWORD *sub_2240FD200(_QWORD *a1)
{
  *a1 = &off_24EC677F8;
  sub_2231AD66C((uint64_t)(a1 + 8));
  return a1;
}

void sub_2240FD230(_QWORD *a1)
{
  *a1 = &off_24EC677F8;
  sub_2231AD66C((uint64_t)(a1 + 8));
  JUMPOUT(0x227684CE8);
}

uint64_t sub_2240FD270(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_2240FD9C0();
  return sub_2240FD2FC(v2, "{", a1 + 8, ",", a1 + 64, "}");
}

uint64_t sub_2240FD2C8(uint64_t a1)
{
  return sub_2240FE120(a1 + 8);
}

void sub_2240FD2D0(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_2240FD2FC(__int128 *a1, const char *a2, uint64_t a3, const char *a4, uint64_t a5, const char *a6)
{
  uint64_t result;
  __int128 v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  __int128 *v17;
  const char *v18;
  __int128 *v19;
  const char *v20;
  const char *v21;
  __int128 **v22;

  v14 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&v12, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    v12 = *a1;
    v13 = *((_QWORD *)a1 + 2);
  }
  v14 = 1;
  v17 = &v12;
  v18 = a2;
  v19 = &v12;
  v20 = a2;
  v21 = a2;
  sub_2231ABB0C((uint64_t *)&v19, (uint64_t)&v12);
  v15 = a3;
  v17 = &v12;
  v18 = "{";
  v19 = &v12;
  v20 = "{";
  v21 = "{";
  if (v14 == -1)
    goto LABEL_12;
  v22 = &v17;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v14])(&v22, &v12);
  LOBYTE(v17) = 1;
  v18 = (const char *)&v12;
  v19 = (__int128 *)&v16;
  sub_2240FD5C0(&v15, (uint64_t)&v17);
  v17 = &v12;
  v18 = "}";
  v19 = &v12;
  v20 = "}";
  v21 = "}";
  if (v14 == -1)
LABEL_12:
    sub_22316DD70();
  v22 = &v17;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v14])(&v22, &v12);
  v17 = &v12;
  v18 = a4;
  v19 = &v12;
  v20 = a4;
  v21 = a4;
  if (v14 == -1)
    sub_22316DD70();
  v22 = &v17;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v14])(&v22, &v12);
  sub_2231AB90C((uint64_t)&v15, (uint64_t)&v12, a5);
  v17 = &v12;
  v18 = a6;
  v19 = &v12;
  v20 = a6;
  v21 = a6;
  if (v14 == -1)
    sub_22316DD70();
  v22 = &v17;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v14])(&v22, &v12);
  if (v14 == -1)
    sub_22316DD70();
  v17 = (__int128 *)&v22;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v14])(&v17, &v12);
  if (v14 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v14])(&v17, &v12);
  return result;
}

void sub_2240FD530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FD5C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  const char *v8;
  unsigned int *v9;
  const char *v10;
  const char *v11;
  unsigned int **v12;

  v3 = *a1;
  if (*(_BYTE *)a2)
  {
    *(_BYTE *)a2 = 0;
    v4 = *(unsigned int **)(a2 + 8);
    if (*(_BYTE *)(v3 + 40))
    {
LABEL_3:
      sub_2240FD6AC((uint64_t)&v7, v4, v3);
      return;
    }
  }
  else
  {
    v7 = *(unsigned int **)(a2 + 8);
    v8 = ",";
    v9 = v7;
    v10 = ",";
    v11 = ",";
    v5 = v7[6];
    if ((_DWORD)v5 == -1)
      goto LABEL_8;
    v12 = &v7;
    ((void (*)(unsigned int ***))off_24EC66D70[v5])(&v12);
    *(_BYTE *)a2 = 0;
    v4 = *(unsigned int **)(a2 + 8);
    if (*(_BYTE *)(v3 + 40))
      goto LABEL_3;
  }
  v7 = v4;
  v8 = "nullopt";
  v9 = v4;
  v10 = "nullopt";
  v11 = "nullopt";
  v6 = v4[6];
  if ((_DWORD)v6 == -1)
LABEL_8:
    sub_22316DD70();
  v12 = &v7;
  ((void (*)(unsigned int ***))off_24EC66D88[v6])(&v12);
}

void sub_2240FD6AC(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5;
  void *p_p;
  uint64_t v7;
  int v8;
  size_t v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21[2];
  unint64_t v22;
  _QWORD *v23;
  void *__p;
  void **v25;
  unsigned int *v26;
  void **v27;
  void **v28;
  _QWORD v29[3];

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v23 = (_QWORD *)v5;
  v29[0] = a3;
  v29[1] = a3 + 8;
  v29[2] = a3 + 24;
  sub_224120438((uint64_t)v29);
  if (SHIBYTE(v26) >= 0)
    p_p = &__p;
  else
    p_p = __p;
  if (SHIBYTE(v26) >= 0)
    v7 = HIBYTE(v26);
  else
    v7 = (uint64_t)v25;
  sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)p_p, v7);
  if ((SHIBYTE(v26) & 0x80000000) == 0)
  {
    v8 = *(_DWORD *)(v5 + 120);
    if ((v8 & 0x10) == 0)
      goto LABEL_9;
LABEL_12:
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_30;
    goto LABEL_15;
  }
  operator delete(__p);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
    goto LABEL_12;
LABEL_9:
  if ((v8 & 8) == 0)
  {
    v9 = 0;
    HIBYTE(v22) = 0;
    v10 = v21;
    goto LABEL_22;
  }
  v13 = *(const void **)(v5 + 40);
  v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_30:
    sub_22316DBC0();
LABEL_15:
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = operator new(v14 + 1);
    v21[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    v21[0] = v10;
    goto LABEL_21;
  }
  HIBYTE(v22) = v9;
  v10 = v21;
  if (v9)
LABEL_21:
    memmove(v10, v13, v9);
LABEL_22:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v23;
  if (v23)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v23 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v16 + 16);
    MEMORY[0x227684CE8](v16, 0x10B2C40EED050F3);
  }
  __p = a2;
  v25 = v21;
  v26 = a2;
  v27 = v21;
  v28 = v21;
  v20 = a2[6];
  if ((_DWORD)v20 == -1)
    sub_22316DD70();
  v29[0] = &__p;
  ((void (*)(_QWORD *, unsigned int *))off_24EC66CE0[v20])(v29, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(v21[0]);
}

void sub_2240FD948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    sub_22456E764(&a15);
    _Unwind_Resume(a1);
  }
  sub_22456E764(&a15);
  _Unwind_Resume(a1);
}

__int128 *sub_2240FD9C0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FAD0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FAD0))
    return &xmmword_25578FAB8;
  v2 = sub_2240FDA9C();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578FAB8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578FAC8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578FAB8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FAB8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FAD0);
  return &xmmword_25578FAB8;
}

void sub_2240FDA84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FAD0);
  _Unwind_Resume(a1);
}

std::string *sub_2240FDA9C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FAF0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FAF0))
    return &stru_25578FAD8;
  sub_2240FDD40((uint64_t)__p);
  sub_2240FDB8C((char *)__p, &stru_25578FAD8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FAD8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FAF0);
  return &stru_25578FAD8;
}

void sub_2240FDB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578FAF0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578FAF0);
  _Unwind_Resume(a1);
}

void sub_2240FDB8C(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2240FDF24();
  if (*((char *)v4 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_2231AC788();
  if (*((char *)v6 + 23) < 0)
  {
    sub_223197FA4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 2uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_2240FDCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_22319BB48((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2240FDD40(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FB70);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FB70))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::UpdateSyncConfiguration>]", qword_25578FB58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FB58, &dword_22314D000);
    __cxa_guard_release(&qword_25578FB70);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578FB90);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578FB90))
  {
    v5 = sub_2231A38CC(qword_25578FB58, "<", 0);
    sub_2231A37C8(qword_25578FB58, 0, v5, qword_25578FB78);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FB78, &dword_22314D000);
    __cxa_guard_release(&qword_25578FB90);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578FBB0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578FBB0))
  {
    sub_224573040((uint64_t)qword_25578FB78, (uint64_t)&xmmword_25578FB98);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FB98, &dword_22314D000);
    __cxa_guard_release(&qword_25578FBB0);
  }
  if (byte_25578FBAF < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578FB98, *((unint64_t *)&xmmword_25578FB98 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578FB98;
    *(_QWORD *)(a1 + 16) = unk_25578FBA8;
  }
}

void sub_2240FDEDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FBB0);
  _Unwind_Resume(a1);
}

void sub_2240FDEF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FB90);
  _Unwind_Resume(a1);
}

void sub_2240FDF0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FB70);
  _Unwind_Resume(a1);
}

__int128 *sub_2240FDF24()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FB10);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FB10))
    return &xmmword_25578FAF8;
  v2 = (char *)sub_2240FE000();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578FAF8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578FB08 = *((_QWORD *)v2 + 2);
    xmmword_25578FAF8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FAF8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FB10);
  return &xmmword_25578FAF8;
}

void sub_2240FDFE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FB10);
  _Unwind_Resume(a1);
}

void *sub_2240FE000()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FB30);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578FB30))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateSyncConfiguration]", qword_25578FB18);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FB18, &dword_22314D000);
    __cxa_guard_release(&qword_25578FB30);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578FB50);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FB50))
    return &unk_25578FB38;
  sub_224573040((uint64_t)qword_25578FB18, (uint64_t)&unk_25578FB38);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578FB38, &dword_22314D000);
  __cxa_guard_release(&qword_25578FB50);
  return &unk_25578FB38;
}

void sub_2240FE0F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FB50);
  _Unwind_Resume(a1);
}

void sub_2240FE108(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FB30);
  _Unwind_Resume(a1);
}

uint64_t sub_2240FE120(uint64_t a1)
{
  uint64_t result;
  _DWORD v2[6];
  int v3;
  uint64_t v4;
  char v5;
  _QWORD **v6;
  const char *v7;
  char *v8;
  const char *v9;
  const char *v10;
  _QWORD *v11;

  v3 = 0;
  v4 = a1;
  sub_2231ABA1C(v2, "{");
  LOBYTE(v6) = 1;
  v7 = (const char *)v2;
  v8 = &v5;
  sub_2240FD5C0(&v4, (uint64_t)&v6);
  v6 = (_QWORD **)v2;
  v7 = "}";
  v8 = (char *)v2;
  v9 = "}";
  v10 = "}";
  if (v3 == -1)
    sub_22316DD70();
  v11 = &v6;
  ((void (*)(_QWORD **, _DWORD *))off_24EC66D70[v3])(&v11, v2);
  if (v3 == -1)
    sub_22316DD70();
  v6 = &v11;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24EC66D10[v3])(&v6, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24EC66CF8[v3])(&v6, v2);
  return result;
}

void sub_2240FE228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FE23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

std::string *sub_2240FE250()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  __int128 *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void *v10[3];
  void *v11[2];
  char v12;
  void *__dst[2];
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  std::string::size_type v18;
  void *__p[2];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25578FBD0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578FBD0))
  {
    sub_223174DE4(v11, "viz::PackageData");
    v2 = sub_2240FDF24();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v14 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    v4 = sub_224013F70();
    if (*((char *)v4 + 23) < 0)
    {
      sub_223197FA4(&v15, *(void **)v4, *((_QWORD *)v4 + 1));
    }
    else
    {
      v5 = *v4;
      v16 = *((_QWORD *)v4 + 2);
      v15 = v5;
    }
    v6 = sub_2232A6C54();
    if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v17, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
    }
    else
    {
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v18 = v6->__r_.__value_.__r.__words[2];
      v17 = v7;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v20 = 0x400000000000000;
    sub_22319BD1C(v10, (uint64_t)__dst, 4uLL);
    sub_2245730F4((char *)v11, (uint64_t *)v10, &stru_25578FBB8, v8, v9);
    sub_22319BB48(v10);
    if (SHIBYTE(v20) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v18) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v16) & 0x80000000) == 0)
          goto LABEL_16;
        goto LABEL_21;
      }
    }
    else if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete((void *)v17);
    if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v14) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_22;
    }
LABEL_21:
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v12 & 0x80000000) == 0)
      {
LABEL_18:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FBB8, &dword_22314D000);
        __cxa_guard_release(&qword_25578FBD0);
        return &stru_25578FBB8;
      }
LABEL_23:
      operator delete(v11[0]);
      goto LABEL_18;
    }
LABEL_22:
    operator delete(__dst[0]);
    if ((v12 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_23;
  }
  return &stru_25578FBB8;
}

void sub_2240FE45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_22319BB48(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
    {
LABEL_10:
      if (a18 < 0)
        operator delete(a13);
      __cxa_guard_abort(&qword_25578FBD0);
      _Unwind_Resume(a1);
    }
LABEL_9:
    operator delete(a20);
    goto LABEL_10;
  }
LABEL_8:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
    goto LABEL_10;
  goto LABEL_9;
}

void sub_2240FE510()
{
  uint64_t v0;
  uint64_t v1;

  while (1)
  {
    if (*(char *)(v0 - 1) < 0)
      operator delete(*(void **)(v0 - 24));
    v0 -= 24;
    if (v0 == v1)
      JUMPOUT(0x2240FE4ECLL);
  }
}

uint64_t sub_2240FE538(__int128 *a1, const char *a2, uint64_t a3, const char *a4)
{
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  __int128 *v13;
  const char *v14;
  __int128 *v15;
  const char *v16;
  const char *v17;
  __int128 **v18;

  v10 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&v8, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    v8 = *a1;
    v9 = *((_QWORD *)a1 + 2);
  }
  v10 = 1;
  v13 = &v8;
  v14 = a2;
  v15 = &v8;
  v16 = a2;
  v17 = a2;
  sub_2231ABB0C((uint64_t *)&v15, (uint64_t)&v8);
  v11 = a3;
  v13 = &v8;
  v14 = "{";
  v15 = &v8;
  v16 = "{";
  v17 = "{";
  if (v10 == -1)
    goto LABEL_11;
  v18 = &v13;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v10])(&v18, &v8);
  LOBYTE(v13) = 1;
  v14 = (const char *)&v8;
  v15 = (__int128 *)&v12;
  sub_2240FD5C0(&v11, (uint64_t)&v13);
  v13 = &v8;
  v14 = "}";
  v15 = &v8;
  v16 = "}";
  v17 = "}";
  if (v10 == -1)
LABEL_11:
    sub_22316DD70();
  v18 = &v13;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v10])(&v18, &v8);
  v13 = &v8;
  v14 = a4;
  v15 = &v8;
  v16 = a4;
  v17 = a4;
  if (v10 == -1)
    sub_22316DD70();
  v18 = &v13;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v10])(&v18, &v8);
  if (v10 == -1)
    sub_22316DD70();
  v13 = (__int128 *)&v18;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v10])(&v13, &v8);
  if (v10 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v10])(&v13, &v8);
  return result;
}

void sub_2240FE710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FE728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FE73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FE750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240FE764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22319B964((uint64_t)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_2240FE778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  _BOOL8 v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (!sub_224123BEC((uint64_t)&v17, v15, v13))
    goto LABEL_28;
  if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
  {
    v8 = *v16;
    v9 = v16[1];
    v10 = *v14;
    if (v9 - *v16 != v14[1] - *v14)
      goto LABEL_28;
    if (v8 != v9)
    {
      while (sub_224122C08(v8, v10))
      {
        v8 += 96;
        v10 += 96;
        if (v8 == v9)
          goto LABEL_22;
      }
      goto LABEL_28;
    }
  }
  else if ((*((_BYTE *)v16 + 24) != 0) != (*((_BYTE *)v14 + 24) != 0))
  {
    goto LABEL_28;
  }
LABEL_22:
  v11 = (*(_BYTE *)(a1 + 248) != 0) == (*(_BYTE *)(a2 + 248) != 0);
  if (!*(_BYTE *)(a1 + 248) || !*(_BYTE *)(a2 + 248))
    goto LABEL_29;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
  {
LABEL_28:
    v11 = 0;
    goto LABEL_29;
  }
  if (*(_BYTE *)(a1 + 224) && *(_BYTE *)(a2 + 224))
  {
    if (*(_QWORD *)(a1 + 216) != *(_QWORD *)(a2 + 216))
      goto LABEL_28;
  }
  else if ((*(_BYTE *)(a1 + 224) != 0) != (*(_BYTE *)(a2 + 224) != 0))
  {
    goto LABEL_28;
  }
  v11 = (*(_BYTE *)(a1 + 240) != 0) == (*(_BYTE *)(a2 + 240) != 0);
  if (*(_BYTE *)(a1 + 240) && *(_BYTE *)(a2 + 240))
    v11 = *(_QWORD *)(a1 + 232) == *(_QWORD *)(a2 + 232);
LABEL_29:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_2240FE9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240FEA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_2240FEA28(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240FEDA0(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240FF694(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_2240FFAD0(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_2241003C4(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_224100720(&v9, (uint64_t)a1);
          else
            sub_2240FEB8C(&v8, a1);
        }
      }
    }
  }
}

uint64_t sub_2240FEB8C(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v13;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    LODWORD(v13) = 4;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    v9 = v13;
    if (v8 < 1)
    {
      sub_223BACE24((uint64_t)a2, v4, v13);
      goto LABEL_17;
    }
    if (v8 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BACE24((uint64_t)a2, v4, v9);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    LODWORD(v13) = 5;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    v11 = v13;
    if (v10 < 1)
    {
      sub_223BAC79C((uint64_t)a2, v4, v13);
      goto LABEL_17;
    }
    if (v10 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BAC79C((uint64_t)a2, v4, v11);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    LODWORD(v13) = 6;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    v7 = v13;
    if (v6 < 1)
    {
      sub_223BABEC8((uint64_t)a2, v4, v13);
      goto LABEL_17;
    }
    if (v6 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v13);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_223BABEC8((uint64_t)a2, v4, v7);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
LABEL_17:
  v13 = *((_QWORD *)a2 + 1);
  return sub_224100A24((int *)&v13, a2, (__int128 *)(v3 + 200));
}

void sub_2240FEDA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2240FF040((uint64_t)&v16, a2, (__int128 *)(v3 + 200));
}

void sub_2240FF040(uint64_t a1, uint64_t a2, __int128 *a3)
{
  int v5;
  __int128 v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  sub_22454024C(a2);
  *(_QWORD *)&v15 = "version";
  *((_QWORD *)&v15 + 1) = 7;
  LODWORD(v16[0]) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, v16);
  v6 = a3[1];
  v15 = *a3;
  v16[0] = v6;
  v16[1] = a3[2];
  v17 = *((_QWORD *)a3 + 6);
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v7 = *(unsigned __int8 *)(a2 + 88),
        *(_QWORD *)(a2 + 72) = "initial_sync_command",
        *(_QWORD *)(a2 + 80) = 20,
        v7))
  {
    if ((_BYTE)v17)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    if ((_BYTE)v17)
    {
LABEL_7:
      v13 = *(_QWORD *)(a2 + 8);
      sub_2240FF1F4(&v13, a2, (__int128 *)((char *)&v15 + 8));
      v8 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a2 + 40) = *(_QWORD *)(v8 - 8);
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        return;
      goto LABEL_8;
    }
  }
  LOBYTE(v13) = 0;
  v14 = 0;
  v9 = (unsigned __int8 *)sub_22453FEA0(a2);
  v10 = *v9;
  *v9 = 0;
  LOBYTE(v13) = v10;
  v11 = (void **)*((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = v14;
  v14 = v11;
  sub_22345337C(&v14, v10);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 56) = v12 - 8;
  if (!*(_BYTE *)(a2 + 88))
    return;
LABEL_8:
  *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240FF1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FF1F4(_DWORD *a1, uint64_t a2, __int128 *a3)
{
  int v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_22454024C(a2);
  *(_QWORD *)&v10 = "version";
  *((_QWORD *)&v10 + 1) = 7;
  LODWORD(v11) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v6)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v11);
  if (*a1 == 2)
  {
    *(_QWORD *)&v10 = "min_version";
    *((_QWORD *)&v10 + 1) = 11;
    LODWORD(v11) = 1;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v7 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "min_version";
      *(_QWORD *)(a2 + 80) = 11;
      if (!v7)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v11);
  }
  v8 = a3[1];
  v10 = *a3;
  v11 = v8;
  v12 = *((_QWORD *)a3 + 4);
  sub_2240FF324(a2, (uint64_t)&v10);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240FF324(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  _BYTE *v7;
  _QWORD *v8;
  BOOL v9;
  BOOL v10;
  unsigned __int8 *v11;
  int v12;
  void **v13;
  int v14;
  BOOL v15;
  unsigned __int8 *v16;
  int v17;
  void **v18;
  int v19;
  BOOL v20;
  unsigned __int8 *v21;
  int v22;
  void **v23;
  unsigned __int8 *v24;
  void **v25;
  char v26;
  void **v27;

  v4 = *(unsigned __int8 **)(a1 + 40);
  if (*v4 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "sync_command_id";
    v5 = a1 + 72;
    v7 = (_BYTE *)(a1 + 88);
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 15;
    v8 = (_QWORD *)(a1 + 80);
    if (!v6)
      *v7 = 1;
    goto LABEL_13;
  }
  v8 = (_QWORD *)(a1 + 80);
  v5 = a1 + 72;
  v7 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v9 = *(_QWORD *)(a1 + 80) == 7;
  else
    v9 = 0;
  if (!v9
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v10 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v10 = 0),
        !v10))
  {
LABEL_13:
    v27 = *(void ***)a2;
    v11 = (unsigned __int8 *)sub_22453FEA0(a1);
    v12 = *v11;
    *v11 = 6;
    v13 = (void **)*((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v27;
    v27 = v13;
    sub_22345337C(&v27, v12);
    v4 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v4 > 1u || (v14 = *v7, *(_QWORD *)v5 = "proceed_n", *v8 = 9, v14))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_17;
LABEL_25:
    v26 = 0;
    v27 = 0;
    v16 = (unsigned __int8 *)sub_22453FEA0(a1);
    goto LABEL_26;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 16))
    goto LABEL_25;
LABEL_17:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v15 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v15 = 0),
        !v15))
  {
    v26 = 6;
    v27 = *(void ***)(a2 + 8);
    v16 = (unsigned __int8 *)sub_22453FEA0(a1);
LABEL_26:
    v17 = *v16;
    *v16 = v26;
    v18 = (void **)*((_QWORD *)v16 + 1);
    *((_QWORD *)v16 + 1) = v27;
    v27 = v18;
    sub_22345337C(&v27, v17);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v19 = *v7, *(_QWORD *)v5 = "proceed_until", *v8 = 13, v19))
  {
    if (*(_BYTE *)(a2 + 32))
      goto LABEL_30;
LABEL_38:
    v27 = 0;
    v24 = (unsigned __int8 *)sub_22453FEA0(a1);
    v22 = *v24;
    *v24 = 0;
    v25 = (void **)*((_QWORD *)v24 + 1);
    *((_QWORD *)v24 + 1) = v27;
    v27 = v25;
    goto LABEL_39;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 32))
    goto LABEL_38;
LABEL_30:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v20 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v20 = 0),
        !v20))
  {
    v27 = *(void ***)(a2 + 24);
    v21 = (unsigned __int8 *)sub_22453FEA0(a1);
    v22 = *v21;
    *v21 = 6;
    v23 = (void **)*((_QWORD *)v21 + 1);
    *((_QWORD *)v21 + 1) = v27;
    v27 = v23;
LABEL_39:
    sub_22345337C(&v27, v22);
  }
}

void sub_2240FF61C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FF634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FF64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FF664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FF67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FF694(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 1u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_2240FF914(a2, v3 + 200);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_2240FF914(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v3 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v3;
  v13[2] = *(_OWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 48);
  if ((_BYTE)v14)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v4 + 40))
    {
      v12 = (uint64_t *)(v4 + 16);
      sub_224559C04(&v12, 1);
    }
    else
    {
      LOBYTE(v12) = 1;
      std::ostream::write();
    }
    v6 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v12 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v12, 1u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v12, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a1 + 24));
    sub_2240DC3E0(a1, (uint64_t)v13 + 8);
    v7 = *(_QWORD *)(a1 + 24);
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 88) - 8);
    sub_224554D6C((uint64_t *)(v7 + 48), *(_QWORD *)(v7 + 16) - v8 - 9);
    v9 = *(_QWORD *)(v7 + 48);
    if (v9)
      memmove((void *)(*(_QWORD *)(v7 + 24) + v8), *(const void **)(v7 + 56), v9);
    *(_QWORD *)(v7 + 48) = 0;
    v10 = *(_QWORD *)(v7 + 80);
    v11 = *(_QWORD *)(v7 + 88) - 8;
    *(_QWORD *)(v7 + 88) = v11;
    if (v10 == v11)
    {
      std::ostream::write();
      if (*(_BYTE *)(v7 + 40))
      {
        free(*(void **)(v7 + 24));
        *(_BYTE *)(v7 + 40) = 0;
      }
    }
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v5 + 40))
    {
      v12 = (uint64_t *)(v5 + 16);
      sub_224559C04(&v12, 0);
    }
    else
    {
      std::ostream::write();
    }
  }
}

void sub_2240FFAD0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2240FFD70((uint64_t)&v16, a2, (__int128 *)(v3 + 200));
}

void sub_2240FFD70(uint64_t a1, uint64_t a2, __int128 *a3)
{
  int v5;
  __int128 v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  sub_22453FAE0(a2);
  *(_QWORD *)&v15 = "version";
  *((_QWORD *)&v15 + 1) = 7;
  LODWORD(v16[0]) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, v16);
  v6 = a3[1];
  v15 = *a3;
  v16[0] = v6;
  v16[1] = a3[2];
  v17 = *((_QWORD *)a3 + 6);
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v7 = *(unsigned __int8 *)(a2 + 88),
        *(_QWORD *)(a2 + 72) = "initial_sync_command",
        *(_QWORD *)(a2 + 80) = 20,
        v7))
  {
    if ((_BYTE)v17)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    if ((_BYTE)v17)
    {
LABEL_7:
      v13 = *(_QWORD *)(a2 + 8);
      sub_2240FFF24(&v13, a2, (__int128 *)((char *)&v15 + 8));
      v8 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a2 + 40) = *(_QWORD *)(v8 - 8);
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        return;
      goto LABEL_8;
    }
  }
  LOBYTE(v13) = 0;
  v14 = 0;
  v9 = (unsigned __int8 *)sub_22453F8B8(a2);
  v10 = *v9;
  *v9 = 0;
  LOBYTE(v13) = v10;
  v11 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = v14;
  v14 = v11;
  sub_223454278(&v14, v10);
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 56) = v12 - 8;
  if (!*(_BYTE *)(a2 + 88))
    return;
LABEL_8:
  *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240FFF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240FFF24(_DWORD *a1, uint64_t a2, __int128 *a3)
{
  int v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  sub_22453FAE0(a2);
  *(_QWORD *)&v10 = "version";
  *((_QWORD *)&v10 + 1) = 7;
  LODWORD(v11) = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v6)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v11);
  if (*a1 == 2)
  {
    *(_QWORD *)&v10 = "min_version";
    *((_QWORD *)&v10 + 1) = 11;
    LODWORD(v11) = 1;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v7 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "min_version";
      *(_QWORD *)(a2 + 80) = 11;
      if (!v7)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v11);
  }
  v8 = a3[1];
  v10 = *a3;
  v11 = v8;
  v12 = *((_QWORD *)a3 + 4);
  sub_224100054(a2, (uint64_t)&v10);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224100054(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  _BYTE *v7;
  _QWORD *v8;
  BOOL v9;
  BOOL v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  unsigned __int8 *v16;
  int v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  unsigned __int8 *v21;
  int v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v4 = *(unsigned __int8 **)(a1 + 40);
  if (*v4 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "sync_command_id";
    v5 = a1 + 72;
    v7 = (_BYTE *)(a1 + 88);
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 15;
    v8 = (_QWORD *)(a1 + 80);
    if (!v6)
      *v7 = 1;
    goto LABEL_13;
  }
  v8 = (_QWORD *)(a1 + 80);
  v5 = a1 + 72;
  v7 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v9 = *(_QWORD *)(a1 + 80) == 7;
  else
    v9 = 0;
  if (!v9
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v10 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v10 = 0),
        !v10))
  {
LABEL_13:
    v27 = *(_QWORD *)a2;
    v11 = (unsigned __int8 *)sub_22453F8B8(a1);
    v12 = *v11;
    *v11 = 6;
    v13 = *((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v27;
    v27 = v13;
    sub_223454278(&v27, v12);
    v4 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v4 > 1u || (v14 = *v7, *(_QWORD *)v5 = "proceed_n", *v8 = 9, v14))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_17;
LABEL_25:
    v26 = 0;
    v27 = 0;
    v16 = (unsigned __int8 *)sub_22453F8B8(a1);
    goto LABEL_26;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 16))
    goto LABEL_25;
LABEL_17:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v15 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v15 = 0),
        !v15))
  {
    v26 = 6;
    v27 = *(_QWORD *)(a2 + 8);
    v16 = (unsigned __int8 *)sub_22453F8B8(a1);
LABEL_26:
    v17 = *v16;
    *v16 = v26;
    v18 = *((_QWORD *)v16 + 1);
    *((_QWORD *)v16 + 1) = v27;
    v27 = v18;
    sub_223454278(&v27, v17);
  }
  if (**(unsigned __int8 **)(a1 + 40) > 1u
    || (v19 = *v7, *(_QWORD *)v5 = "proceed_until", *v8 = 13, v19))
  {
    if (*(_BYTE *)(a2 + 32))
      goto LABEL_30;
LABEL_38:
    v27 = 0;
    v24 = (unsigned __int8 *)sub_22453F8B8(a1);
    v22 = *v24;
    *v24 = 0;
    v25 = *((_QWORD *)v24 + 1);
    *((_QWORD *)v24 + 1) = v27;
    v27 = v25;
    goto LABEL_39;
  }
  *v7 = 1;
  if (!*(_BYTE *)(a2 + 32))
    goto LABEL_38;
LABEL_30:
  if (!*v7
    || *v8 != 7
    || (**(_DWORD **)v5 == *(_DWORD *)"version"
      ? (v20 = *(_DWORD *)(*(_QWORD *)v5 + 3) == *(_DWORD *)"sion")
      : (v20 = 0),
        !v20))
  {
    v27 = *(_QWORD *)(a2 + 24);
    v21 = (unsigned __int8 *)sub_22453F8B8(a1);
    v22 = *v21;
    *v21 = 6;
    v23 = *((_QWORD *)v21 + 1);
    *((_QWORD *)v21 + 1) = v27;
    v27 = v23;
LABEL_39:
    sub_223454278(&v27, v22);
  }
}

void sub_22410034C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224100364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_22410037C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224100394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2241003AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2241003C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v16 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v16, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v14 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v14, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v17 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v17, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v15 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v15, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v18 = v7;
  sub_2231813E8(v11, (uint64_t)&v18, 1);
  ++*(_QWORD *)(a2 + 40);
  return sub_224100560((uint64_t)&v13, a2, v3 + 200);
}

_QWORD *sub_224100560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  __int128 v6;
  _QWORD *v7;
  unsigned __int8 v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *result;
  unsigned __int8 v16;
  _OWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 40))
  {
    v5 = *(_QWORD **)(a2 + 24);
    LOBYTE(v17[0]) = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v5, (uint64_t)v17, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a3 + 16);
  v17[0] = *(_OWORD *)a3;
  v17[1] = v6;
  v17[2] = *(_OWORD *)(a3 + 32);
  v18 = *(_QWORD *)(a3 + 48);
  if (!(_BYTE)v18)
  {
    v16 = 0;
    sub_22454F564(a2, &v16);
    v12 = *(_BYTE *)(a2 + 34);
    if (!*(_QWORD *)(a2 + 40))
      goto LABEL_12;
LABEL_11:
    v13 = *(_QWORD **)(a2 + 24);
    LOBYTE(v17[0]) = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)v17, 1);
    goto LABEL_12;
  }
  v16 = 1;
  sub_22454F564(a2, &v16);
  if (*(_QWORD *)(a2 + 40))
  {
    v7 = *(_QWORD **)(a2 + 24);
    v16 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v7, (uint64_t)&v16, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_2240DD88C(a2, (uint64_t)v17 + 8);
  v8 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v9 = *(_QWORD **)(a2 + 24);
    v16 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v9, (uint64_t)&v16, 1);
  }
  v10 = *(_QWORD **)(a2 + 24);
  v16 = v8;
  sub_2231813E8(v10, (uint64_t)&v16, 1);
  v11 = *(_QWORD *)(a2 + 40) + 1;
  *(_QWORD *)(a2 + 40) = v11;
  v12 = *(_BYTE *)(a2 + 34);
  if (v11)
    goto LABEL_11;
LABEL_12:
  v14 = *(_QWORD **)(a2 + 24);
  LOBYTE(v17[0]) = v12;
  result = sub_2231813E8(v14, (uint64_t)v17, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

char *sub_224100720(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  __int128 v10;
  char *result;
  _OWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    LODWORD(v12[0]) = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
    v7 = v12[0];
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    LODWORD(v12[0]) = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
    v8 = v12[0];
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    LODWORD(v12[0]) = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
    v6 = v12[0];
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  LODWORD(v12[0]) = 1;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)v12, (char *)v12 + 4, 4);
  sub_2244FF590((_QWORD *)a2);
  v10 = *(_OWORD *)(v3 + 216);
  v12[0] = *(_OWORD *)(v3 + 200);
  v12[1] = v10;
  v12[2] = *(_OWORD *)(v3 + 232);
  v13 = *(_QWORD *)(v3 + 248);
  result = sub_22410092C(a2, (char *)v12 + 8);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24) + 10) = *(_QWORD *)(a2 + 32)
                                                                                     - (*(_QWORD *)(*(_QWORD *)(a2 + 56)
                                                                                                  - 8)
                                                                                      + *(_QWORD *)(a2 + 24))
                                                                                     - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  return result;
}

char *sub_22410092C(uint64_t a1, char *a2)
{
  uint64_t v3;
  char *result;
  uint64_t v6;
  char v7;
  char __src;
  int v9;
  uint64_t v10;

  v3 = a1 + 24;
  if (a2[40])
  {
    __src = 1;
    sub_224501B60(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v9, 1);
    v9 = 1;
    sub_224501B60(v3, *(char **)(a1 + 32), (char *)&v9, (char *)&v10, 4);
    sub_2244FF590((_QWORD *)a1);
    result = sub_2240DDE80(a1, a2);
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
    *(_QWORD *)(v6 + 10) = *(_QWORD *)(a1 + 32) - v6 - 18;
    *(_QWORD *)(a1 + 56) -= 8;
  }
  else
  {
    v7 = 0;
    return sub_224501B60(a1 + 24, *(char **)(a1 + 32), &v7, &__src, 1);
  }
  return result;
}

uint64_t sub_224100A24(int *a1, _QWORD *a2, __int128 *a3)
{
  int v6;
  __int128 v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  LODWORD(v11) = 1;
  (*(void (**)(_QWORD *, __int128 *))(*a2 + 104))(a2, &v11);
  if (*a1 < 1)
  {
    v9 = a3[1];
    v11 = *a3;
    v12 = v9;
    v13 = a3[2];
    v14 = *((_QWORD *)a3 + 6);
    if ((_BYTE)v14)
    {
      LOBYTE(v10) = 1;
      (*(void (**)(_QWORD *, uint64_t *))(*a2 + 80))(a2, &v10);
      v10 = a2[1];
      return sub_2240DE2CC((int *)&v10, (uint64_t)a2, (uint64_t)&v11 + 8);
    }
    else
    {
      LOBYTE(v10) = 0;
      return (*(uint64_t (**)(_QWORD *, uint64_t *))(*a2 + 80))(a2, &v10);
    }
  }
  else
  {
    if (*a1 == 2 && (LODWORD(v11) = 1, (*(void (**)(_QWORD *, __int128 *))(*a2 + 104))(a2, &v11), *a1 < 1))
    {
      v6 = 0;
    }
    else
    {
      (*(void (**)(_QWORD *))(*a2 + 16))(a2);
      v6 = 1;
    }
    v7 = a3[1];
    v11 = *a3;
    v12 = v7;
    v13 = a3[2];
    v14 = *((_QWORD *)a3 + 6);
    if ((_BYTE)v14)
    {
      LOBYTE(v10) = 1;
      (*(void (**)(_QWORD *, uint64_t *))(*a2 + 80))(a2, &v10);
      v10 = a2[1];
      result = sub_2240DE2CC((int *)&v10, (uint64_t)a2, (uint64_t)&v11 + 8);
    }
    else
    {
      LOBYTE(v10) = 0;
      result = (*(uint64_t (**)(_QWORD *, uint64_t *))(*a2 + 80))(a2, &v10);
    }
    if (v6)
      return (*(uint64_t (**)(_QWORD *))(*a2 + 24))(a2);
  }
  return result;
}

void sub_224100BFC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2241012C8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_224101A40(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_224102018(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_224102790(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_224102EF4(&v9, a1);
          else
            sub_224100D60(&v8, a1);
        }
      }
    }
  }
}

uint64_t sub_224100D60(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t result;
  char v29;
  uint64_t v30[27];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v30);
    sub_223B87C9C((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v30);
  sub_223B87C9C((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_2231AD66C((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  LODWORD(v31) = 6;
  (*(void (**)(_QWORD *, uint64_t *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_223BD7864((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_223BD7AD8((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_223BD7174((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v31 = a2[1];
  v27 = v31;
  LODWORD(v30[0]) = 1;
  (*(void (**)(_QWORD *, uint64_t *))(v26 + 104))(a2, v30);
  if (v27 >= 1)
    return sub_2241034F0((int *)&v31, a2, v3 + 200);
  v29 = 0;
  result = (*(uint64_t (**)(_QWORD *, char *))(*a2 + 80))(a2, &v29);
  if (v29)
  {
    if (!*(_BYTE *)(v3 + 248))
    {
      *(_QWORD *)(v3 + 208) = 0;
      *(_BYTE *)(v3 + 216) = 0;
      *(_BYTE *)(v3 + 224) = 0;
      *(_BYTE *)(v3 + 232) = 0;
      *(_BYTE *)(v3 + 240) = 0;
      *(_BYTE *)(v3 + 248) = 1;
    }
    v30[0] = a2[1];
    return sub_2240E27AC((int *)v30, (uint64_t)a2, v3 + 208);
  }
  else if (*(_BYTE *)(v3 + 248))
  {
    *(_BYTE *)(v3 + 248) = 0;
  }
  return result;
}

void sub_224101280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2241012C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224101778((uint64_t)v27, a2, v3 + 200);
}

void sub_224101730(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224101778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  char *v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *exception;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  sub_224544628(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  *(_QWORD *)&v12 = 0;
  sub_22451CAD4(v6, &v12);
  if (DWORD1(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "initial_sync_command";
  *(_QWORD *)(a2 + 96) = 20;
  if (v7)
  {
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a2))
    {
LABEL_6:
      *(_QWORD *)&v12 = 0;
      BYTE8(v12) = 0;
      LOBYTE(v13) = 0;
      BYTE8(v13) = 0;
      LOBYTE(v14) = 0;
      v15 = *(_QWORD *)(a2 + 8);
      sub_2241018DC(&v15, a2, (uint64_t)&v12);
      v8 = v13;
      *(_OWORD *)(a3 + 8) = v12;
      *(_OWORD *)(a3 + 24) = v8;
      *(_QWORD *)(a3 + 40) = v14;
      *(_BYTE *)(a3 + 48) = 1;
      goto LABEL_10;
    }
  }
  else
  {
    *(_BYTE *)(a2 + 104) = 1;
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a2))
      goto LABEL_6;
  }
  ++*(_QWORD *)(a2 + 112);
  if (*(_BYTE *)(a3 + 48))
    *(_BYTE *)(a3 + 48) = 0;
LABEL_10:
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
}

void sub_2241018DC(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  char *v7;
  int v8;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  __int128 *v14;
  unint64_t v15;

  sub_224544628(a2);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v15 = 0;
  sub_22451CAD4(v7, &v15);
  if (HIDWORD(v15))
    goto LABEL_10;
  if (*a1 != 2)
    goto LABEL_9;
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "min_version";
  *(_QWORD *)(a2 + 96) = 11;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v15 = 0;
  sub_22451CAD4(v9, &v15);
  v10 = v15;
  if (HIDWORD(v15))
  {
LABEL_10:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v15 >= 2)
  {
    v14 = sub_2240E2A6C();
    sub_22455C3A8((std::string *)v14, v10, 1u);
  }
LABEL_9:
  sub_2240DF5F0(a2, a3);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
}

uint64_t sub_224101A40(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v28);
    sub_223B87C9C((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v28);
  sub_223B87C9C((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_2231AD66C((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v28, a2, v4);
  LODWORD(v28[0]) = 1;
  sub_224554038(a2[6], v28);
  sub_2231B1308(a2 + 2);
  sub_224101F18(a2, v3 + 208);
  v24 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2);
  v26 = *(_QWORD *)(v24 - 16) - result + *(_QWORD *)(v24 - 8);
  if (v26)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(a2[2] + 40))(a2 + 2, v26);
  a2[4] -= 16;
  return result;
}

